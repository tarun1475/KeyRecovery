(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
var asn1 = exports;

asn1.bignum = require('bn.js');

asn1.define = require('./asn1/api').define;
asn1.base = require('./asn1/base');
asn1.constants = require('./asn1/constants');
asn1.decoders = require('./asn1/decoders');
asn1.encoders = require('./asn1/encoders');

},{"./asn1/api":2,"./asn1/base":4,"./asn1/constants":8,"./asn1/decoders":10,"./asn1/encoders":13,"bn.js":16}],2:[function(require,module,exports){
var asn1 = require('../asn1');
var inherits = require('inherits');

var api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
};

Entity.prototype._createNamed = function createNamed(base) {
  var named;
  try {
    named = require('vm').runInThisContext(
      '(function ' + this.name + '(entity) {\n' +
      '  this._initNamed(entity);\n' +
      '})'
    );
  } catch (e) {
    named = function (entity) {
      this._initNamed(entity);
    };
  }
  inherits(named, base);
  named.prototype._initNamed = function initnamed(entity) {
    base.call(this, entity);
  };

  return new named(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};

},{"../asn1":1,"inherits":99,"vm":153}],3:[function(require,module,exports){
var inherits = require('inherits');
var Reporter = require('../base').Reporter;
var Buffer = require('buffer').Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  var res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
}

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  var res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
}

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
}

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!(item instanceof EncoderBuffer))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = new Buffer(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};

},{"../base":4,"buffer":47,"inherits":99}],4:[function(require,module,exports){
var base = exports;

base.Reporter = require('./reporter').Reporter;
base.DecoderBuffer = require('./buffer').DecoderBuffer;
base.EncoderBuffer = require('./buffer').EncoderBuffer;
base.Node = require('./node');

},{"./buffer":3,"./node":5,"./reporter":6}],5:[function(require,module,exports){
var Reporter = require('../base').Reporter;
var EncoderBuffer = require('../base').EncoderBuffer;
var DecoderBuffer = require('../base').DecoderBuffer;
var assert = require('minimalistic-assert');

// Supported tags
var tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
var methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
var overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent) {
  var state = {};
  this._baseState = state;

  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

var stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit', 'contains'
];

Node.prototype.clone = function clone() {
  var state = this._baseState;
  var cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  var res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  var state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      var clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  var state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  var state = this._baseState;

  // Filter children and args
  var children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      var res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        var value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    var state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    var state = this._baseState;
    var args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  assert(item);
  var state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  var state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  var state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  var state = this._baseState;
  var args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  var state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  var state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  var state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  var state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input, options) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input, options));

  var result = state['default'];
  var present = true;

  var prevKey = null;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    var tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      var save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input, options);
        else
          this._decodeChoice(input, options);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  var prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      var explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    var start = input.offset;

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      if (state.any)
        var save = input.save();
      var body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    if (options && options.track && state.tag !== null)
      options.track(input.path(), start, input.length, 'tagged');

    if (options && options.track && state.tag !== null)
      options.track(input.path(), input.offset, input.length, 'content');

    // Select proper method for tag
    if (state.any)
      result = result;
    else if (state.choice === null)
      result = this._decodeGeneric(state.tag, input, options);
    else
      result = this._decodeChoice(input, options);

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      state.children.forEach(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input, options);
      });
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      var data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)
          ._decode(data, options);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);
  else if (prevKey !== null)
    input.exitKey(prevKey);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
  var state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0], options);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag, options);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1], options);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null, options);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag, options);
  else if (tag === 'null_')
    return this._decodeNull(input, options);
  else if (tag === 'bool')
    return this._decodeBool(input, options);
  else if (tag === 'objDesc')
    return this._decodeStr(input, tag, options);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0], options);

  if (state.use !== null) {
    return this._getUse(state.use, input._reporterState.obj)
        ._decode(input, options);
  } else {
    return input.error('unknown tag: ' + tag);
  }
};

Node.prototype._getUse = function _getUse(entity, obj) {

  var state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input, options) {
  var state = this._baseState;
  var result = null;
  var match = false;

  Object.keys(state.choice).some(function(key) {
    var save = input.save();
    var node = state.choice[key];
    try {
      var value = node._decode(input, options);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  var state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  var result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  var result = null;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default']
    else
      return;
  }

  // Encode children first
  var content = null;
  var primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      var prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      var res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      var child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        var state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  var result;
  if (!state.any && state.choice === null) {
    var tag = state.implicit !== null ? state.implicit : state.tag;
    var cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be omitted only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  var state = this._baseState;

  var node = state.choice[data.type];
  if (!node) {
    assert(
        false,
        data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  var state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else if (tag === 'objDesc')
    return this._encodeStr(data, tag);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
};

},{"../base":4,"minimalistic-assert":104}],6:[function(require,module,exports){
var inherits = require('inherits');

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  var state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  var state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.exitKey = function exitKey(index) {
  var state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  var state = this._reporterState;

  this.exitKey(index);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.path = function path() {
  return this._reporterState.path.join('/');
};

Reporter.prototype.enterObject = function enterObject() {
  var state = this._reporterState;

  var prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  var state = this._reporterState;

  var now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  var err;
  var state = this._reporterState;

  var inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  var state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
};
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, ReporterError);

  if (!this.stack) {
    try {
      // IE only adds stack when thrown
      throw new Error(this.message);
    } catch (e) {
      this.stack = e.stack;
    }
  }
  return this;
};

},{"inherits":99}],7:[function(require,module,exports){
var constants = require('../constants');

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = constants._reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = constants._reverse(exports.tag);

},{"../constants":8}],8:[function(require,module,exports){
var constants = exports;

// Helper
constants._reverse = function reverse(map) {
  var res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    var value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = require('./der');

},{"./der":7}],9:[function(require,module,exports){
var inherits = require('inherits');

var asn1 = require('../../asn1');
var base = asn1.base;
var bignum = asn1.bignum;

// Import DER constants
var der = asn1.constants.der;

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!(data instanceof base.DecoderBuffer))
    data = new base.DecoderBuffer(data, options);

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  var state = buffer.save();
  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  var decodedTag = derDecodeTag(buffer,
                                'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  var len = derDecodeLen(buffer,
                         decodedTag.primitive,
                         'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  var state = buffer.save();
  var res = this._skipUntilEnd(
      buffer,
      'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  while (true) {
    var tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    var len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    var res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len)
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,
                                                    options) {
  var result = [];
  while (!buffer.isEmpty()) {
    var possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    var res = decoder.decode(buffer, 'der', options);
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    var unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    var raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    var str = '';
    for (var i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    var numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'objDesc') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    var printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  var result;
  var identifiers = [];
  var ident = 0;
  while (!buffer.isEmpty()) {
    var subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  var first = (identifiers[0] / 40) | 0;
  var second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    var tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  var str = buffer.raw().toString();
  if (tag === 'gentime') {
    var year = str.slice(0, 4) | 0;
    var mon = str.slice(4, 6) | 0;
    var day = str.slice(6, 8) | 0;
    var hour = str.slice(8, 10) | 0;
    var min = str.slice(10, 12) | 0;
    var sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    var year = str.slice(0, 2) | 0;
    var mon = str.slice(2, 4) | 0;
    var day = str.slice(4, 6) | 0;
    var hour = str.slice(6, 8) | 0;
    var min = str.slice(8, 10) | 0;
    var sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull(buffer) {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  var res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  var raw = buffer.raw();
  var res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  var tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  var cls = der.tagClass[tag >> 6];
  var primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    var oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  var tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  var len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  var num = len & 0x7f;
  if (num > 4)
    return buf.error('length octect is too long');

  len = 0;
  for (var i = 0; i < num; i++) {
    len <<= 8;
    var j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}

},{"../../asn1":1,"inherits":99}],10:[function(require,module,exports){
var decoders = exports;

decoders.der = require('./der');
decoders.pem = require('./pem');

},{"./der":9,"./pem":11}],11:[function(require,module,exports){
var inherits = require('inherits');
var Buffer = require('buffer').Buffer;

var DERDecoder = require('./der');

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  var lines = data.toString().split(/[\r\n]+/g);

  var label = options.label.toUpperCase();

  var re = /^-----(BEGIN|END) ([^-]+)-----$/;
  var start = -1;
  var end = -1;
  for (var i = 0; i < lines.length; i++) {
    var match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  var base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9\+\/=]+/gi, '');

  var input = new Buffer(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};

},{"./der":9,"buffer":47,"inherits":99}],12:[function(require,module,exports){
var inherits = require('inherits');
var Buffer = require('buffer').Buffer;

var asn1 = require('../../asn1');
var base = asn1.base;

// Import DER constants
var der = asn1.constants.der;

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
                                                              primitive,
                                                              cls,
                                                              content) {
  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    var header = new Buffer(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  var lenOctets = 1;
  for (var i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  var header = new Buffer(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    var buf = new Buffer(str.length * 2);
    for (var i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else if (tag === 'objDesc') {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s\.]+/g);
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  var size = 0;
  for (var i = 0; i < id.length; i++) {
    var ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  var objid = new Buffer(size);
  var offset = objid.length - 1;
  for (var i = id.length - 1; i >= 0; i--) {
    var ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  var str;
  var date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    var numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = new Buffer(numArray);
  }

  if (Buffer.isBuffer(num)) {
    var size = num.length;
    if (num.length === 0)
      size++;

    var out = new Buffer(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  var size = 1;
  for (var i = num; i >= 0x100; i >>= 8)
    size++;

  var out = new Array(size);
  for (var i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(new Buffer(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  var state = this._baseState;
  var i;
  if (state['default'] === null)
    return false;

  var data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  var res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}

},{"../../asn1":1,"buffer":47,"inherits":99}],13:[function(require,module,exports){
var encoders = exports;

encoders.der = require('./der');
encoders.pem = require('./pem');

},{"./der":12,"./pem":14}],14:[function(require,module,exports){
var inherits = require('inherits');

var DEREncoder = require('./der');

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  var buf = DEREncoder.prototype.encode.call(this, data);

  var p = buf.toString('base64');
  var out = [ '-----BEGIN ' + options.label + '-----' ];
  for (var i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};

},{"./der":12,"inherits":99}],15:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  for (var i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],16:[function(require,module,exports){
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    Buffer = require('buffer').Buffer;
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
    }

    if (base === 16) {
      this._parseHex(number, start);
    } else {
      this._parseBase(number, base, start);
    }

    if (number[0] === '-') {
      this.negative = 1;
    }

    this.strip();

    if (endian !== 'le') return;

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex (str, start, end) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r <<= 4;

      // 'a' - 'f'
      if (c >= 49 && c <= 54) {
        r |= c - 49 + 0xa;

      // 'A' - 'F'
      } else if (c >= 17 && c <= 22) {
        r |= c - 17 + 0xa;

      // '0' - '9'
      } else {
        r |= c & 0xf;
      }
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    // Scan 24-bit chunks and add them to the number
    var off = 0;
    for (i = number.length - 6, j = 0; i >= start; i -= 6) {
      w = parseHex(number, i, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
    if (i + 6 !== start) {
      w = parseHex(number, start, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    }
    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      r.strip();
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

},{"buffer":18}],17:[function(require,module,exports){
var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = require('crypto');
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}

},{"crypto":18}],18:[function(require,module,exports){

},{}],19:[function(require,module,exports){
// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var Buffer = require('safe-buffer').Buffer

function asUInt32Array (buf) {
  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)

  var len = (buf.length / 4) | 0
  var out = new Array(len)

  for (var i = 0; i < len; i++) {
    out[i] = buf.readUInt32BE(i * 4)
  }

  return out
}

function scrubVec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
}

function cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {
  var SUB_MIX0 = SUB_MIX[0]
  var SUB_MIX1 = SUB_MIX[1]
  var SUB_MIX2 = SUB_MIX[2]
  var SUB_MIX3 = SUB_MIX[3]

  var s0 = M[0] ^ keySchedule[0]
  var s1 = M[1] ^ keySchedule[1]
  var s2 = M[2] ^ keySchedule[2]
  var s3 = M[3] ^ keySchedule[3]
  var t0, t1, t2, t3
  var ksRow = 4

  for (var round = 1; round < nRounds; round++) {
    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }

  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  t0 = t0 >>> 0
  t1 = t1 >>> 0
  t2 = t2 >>> 0
  t3 = t3 >>> 0

  return [t0, t1, t2, t3]
}

// AES constants
var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
var G = (function () {
  // Compute double table
  var d = new Array(256)
  for (var j = 0; j < 256; j++) {
    if (j < 128) {
      d[j] = j << 1
    } else {
      d[j] = (j << 1) ^ 0x11b
    }
  }

  var SBOX = []
  var INV_SBOX = []
  var SUB_MIX = [[], [], [], []]
  var INV_SUB_MIX = [[], [], [], []]

  // Walk GF(2^8)
  var x = 0
  var xi = 0
  for (var i = 0; i < 256; ++i) {
    // Compute sbox
    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    SBOX[x] = sx
    INV_SBOX[sx] = x

    // Compute multiplication
    var x2 = d[x]
    var x4 = d[x2]
    var x8 = d[x4]

    // Compute sub bytes, mix columns tables
    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    SUB_MIX[3][x] = t

    // Compute inv sub bytes, inv mix columns tables
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    INV_SUB_MIX[3][sx] = t

    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }

  return {
    SBOX: SBOX,
    INV_SBOX: INV_SBOX,
    SUB_MIX: SUB_MIX,
    INV_SUB_MIX: INV_SUB_MIX
  }
})()

function AES (key) {
  this._key = asUInt32Array(key)
  this._reset()
}

AES.blockSize = 4 * 4
AES.keySize = 256 / 8
AES.prototype.blockSize = AES.blockSize
AES.prototype.keySize = AES.keySize
AES.prototype._reset = function () {
  var keyWords = this._key
  var keySize = keyWords.length
  var nRounds = keySize + 6
  var ksRows = (nRounds + 1) * 4

  var keySchedule = []
  for (var k = 0; k < keySize; k++) {
    keySchedule[k] = keyWords[k]
  }

  for (k = keySize; k < ksRows; k++) {
    var t = keySchedule[k - 1]

    if (k % keySize === 0) {
      t = (t << 8) | (t >>> 24)
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])

      t ^= RCON[(k / keySize) | 0] << 24
    } else if (keySize > 6 && k % keySize === 4) {
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])
    }

    keySchedule[k] = keySchedule[k - keySize] ^ t
  }

  var invKeySchedule = []
  for (var ik = 0; ik < ksRows; ik++) {
    var ksR = ksRows - ik
    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

    if (ik < 4 || ksR <= 4) {
      invKeySchedule[ik] = tt
    } else {
      invKeySchedule[ik] =
        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
    }
  }

  this._nRounds = nRounds
  this._keySchedule = keySchedule
  this._invKeySchedule = invKeySchedule
}

AES.prototype.encryptBlockRaw = function (M) {
  M = asUInt32Array(M)
  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
}

AES.prototype.encryptBlock = function (M) {
  var out = this.encryptBlockRaw(M)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = asUInt32Array(M)

  // swap
  var m1 = M[1]
  M[1] = M[3]
  M[3] = m1

  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrubVec(this._keySchedule)
  scrubVec(this._invKeySchedule)
  scrubVec(this._key)
}

module.exports.AES = AES

},{"safe-buffer":140}],20:[function(require,module,exports){
var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')
var GHASH = require('./ghash')
var xor = require('buffer-xor')
var incr32 = require('./incr32')

function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) out++

  var len = Math.min(a.length, b.length)
  for (var i = 0; i < len; ++i) {
    out += (a[i] ^ b[i])
  }

  return out
}

function calcIv (self, iv, ck) {
  if (iv.length === 12) {
    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])
  }
  var ghash = new GHASH(ck)
  var len = iv.length
  var toPad = len % 16
  ghash.update(iv)
  if (toPad) {
    toPad = 16 - toPad
    ghash.update(Buffer.alloc(toPad, 0))
  }
  ghash.update(Buffer.alloc(8, 0))
  var ivBits = len * 8
  var tail = Buffer.alloc(8)
  tail.writeUIntBE(ivBits, 0, 8)
  ghash.update(tail)
  self._finID = ghash.state
  var out = Buffer.from(self._finID)
  incr32(out)
  return out
}
function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  var h = Buffer.alloc(4, 0)

  this._cipher = new aes.AES(key)
  var ck = this._cipher.encryptBlock(h)
  this._ghash = new GHASH(ck)
  iv = calcIv(this, iv, ck)

  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  this._mode = mode

  this._authTag = null
  this._called = false
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = Buffer.alloc(rump, 0)
      this._ghash.update(rump)
    }
  }

  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}

StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')

  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')

  this._authTag = tag
  this._cipher.scrub()
}

StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')

  return this._authTag
}

StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')

  this._authTag = tag
}

StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (this._called) throw new Error('Attempting to set AAD in unsupported state')

  this._ghash.update(buf)
  this._alen += buf.length
}

module.exports = StreamCipher

},{"./aes":19,"./ghash":24,"./incr32":25,"buffer-xor":46,"cipher-base":48,"inherits":99,"safe-buffer":140}],21:[function(require,module,exports){
var ciphers = require('./encrypter')
var deciphers = require('./decrypter')
var modes = require('./modes/list.json')

function getCiphers () {
  return Object.keys(modes)
}

exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers

},{"./decrypter":22,"./encrypter":23,"./modes/list.json":33}],22:[function(require,module,exports){
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var MODES = require('./modes')
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Decipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Decipher, Transform)

Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}

Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}

Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }

  return null
}

Splitter.prototype.flush = function () {
  if (this.cache.length) return this.cache
}

function unpad (last) {
  var padded = last[15]
  if (padded < 1 || padded > 16) {
    throw new Error('unable to decrypt data')
  }
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) return

  return last.slice(0, 16 - padded)
}

function createDecipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv, true)
  }

  return new Decipher(config.module, password, iv)
}

function createDecipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}

exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv

},{"./aes":19,"./authCipher":20,"./modes":32,"./streamCipher":35,"cipher-base":48,"evp_bytestokey":83,"inherits":99,"safe-buffer":140}],23:[function(require,module,exports){
var MODES = require('./modes')
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Cipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Cipher, Transform)

Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []

  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }

  return Buffer.concat(out)
}

var PADDING = Buffer.alloc(16, 0x10)

Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  }

  if (!chunk.equals(PADDING)) {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}

Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}

Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = Buffer.allocUnsafe(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }

  return Buffer.concat([this.cache, padBuff])
}

function createCipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv)
  }

  return new Cipher(config.module, password, iv)
}

function createCipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher

},{"./aes":19,"./authCipher":20,"./modes":32,"./streamCipher":35,"cipher-base":48,"evp_bytestokey":83,"inherits":99,"safe-buffer":140}],24:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var ZEROES = Buffer.alloc(16, 0)

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}

function fromArray (out) {
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0] >>> 0, 0)
  buf.writeUInt32BE(out[1] >>> 0, 4)
  buf.writeUInt32BE(out[2] >>> 0, 8)
  buf.writeUInt32BE(out[3] >>> 0, 12)
  return buf
}

function GHASH (key) {
  this.h = key
  this.state = Buffer.alloc(16, 0)
  this.cache = Buffer.allocUnsafe(0)
}

// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsbVi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi[0] ^= Vi[0]
      Zi[1] ^= Vi[1]
      Zi[2] ^= Vi[2]
      Zi[3] ^= Vi[3]
    }

    // Store the value of LSB(V_i)
    lsbVi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsbVi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}

GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}

GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, ZEROES], 16))
  }

  this.ghash(fromArray([0, abl, 0, bl]))
  return this.state
}

module.exports = GHASH

},{"safe-buffer":140}],25:[function(require,module,exports){
function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}
module.exports = incr32

},{}],26:[function(require,module,exports){
var xor = require('buffer-xor')

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}

},{"buffer-xor":46}],27:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var xor = require('buffer-xor')

function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

exports.encrypt = function (self, data, decrypt) {
  var out = Buffer.allocUnsafe(0)
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = Buffer.allocUnsafe(0)
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}

},{"buffer-xor":46,"safe-buffer":140}],28:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}

function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = Buffer.allocUnsafe(buffer.length)
  buffer = Buffer.concat([buffer, Buffer.from([value])])

  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":140}],29:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam

  self._prev = Buffer.concat([
    self._prev.slice(1),
    Buffer.from([decrypt ? byteParam : out])
  ])

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":140}],30:[function(require,module,exports){
var xor = require('buffer-xor')
var Buffer = require('safe-buffer').Buffer
var incr32 = require('../incr32')

function getBlock (self) {
  var out = self._cipher.encryptBlockRaw(self._prev)
  incr32(self._prev)
  return out
}

var blockSize = 16
exports.encrypt = function (self, chunk) {
  var chunkNum = Math.ceil(chunk.length / blockSize)
  var start = self._cache.length
  self._cache = Buffer.concat([
    self._cache,
    Buffer.allocUnsafe(chunkNum * blockSize)
  ])
  for (var i = 0; i < chunkNum; i++) {
    var out = getBlock(self)
    var offset = start + i * blockSize
    self._cache.writeUInt32BE(out[0], offset + 0)
    self._cache.writeUInt32BE(out[1], offset + 4)
    self._cache.writeUInt32BE(out[2], offset + 8)
    self._cache.writeUInt32BE(out[3], offset + 12)
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

},{"../incr32":25,"buffer-xor":46,"safe-buffer":140}],31:[function(require,module,exports){
exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}

exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}

},{}],32:[function(require,module,exports){
var modeModules = {
  ECB: require('./ecb'),
  CBC: require('./cbc'),
  CFB: require('./cfb'),
  CFB8: require('./cfb8'),
  CFB1: require('./cfb1'),
  OFB: require('./ofb'),
  CTR: require('./ctr'),
  GCM: require('./ctr')
}

var modes = require('./list.json')

for (var key in modes) {
  modes[key].module = modeModules[modes[key].mode]
}

module.exports = modes

},{"./cbc":26,"./cfb":27,"./cfb1":28,"./cfb8":29,"./ctr":30,"./ecb":31,"./list.json":33,"./ofb":34}],33:[function(require,module,exports){
module.exports={
  "aes-128-ecb": {
    "cipher": "AES",
    "key": 128,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-192-ecb": {
    "cipher": "AES",
    "key": 192,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-256-ecb": {
    "cipher": "AES",
    "key": 256,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-128-cbc": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-192-cbc": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-256-cbc": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes128": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes192": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes256": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-128-cfb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-192-cfb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-256-cfb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-128-cfb8": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-192-cfb8": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-256-cfb8": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-128-cfb1": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-192-cfb1": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-256-cfb1": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-128-ofb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-192-ofb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-256-ofb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-128-ctr": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-192-ctr": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-256-ctr": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-128-gcm": {
    "cipher": "AES",
    "key": 128,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-192-gcm": {
    "cipher": "AES",
    "key": 192,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-256-gcm": {
    "cipher": "AES",
    "key": 256,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  }
}

},{}],34:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this,require("buffer").Buffer)
},{"buffer":47,"buffer-xor":46}],35:[function(require,module,exports){
var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')

function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._mode = mode
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}

StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

module.exports = StreamCipher

},{"./aes":19,"cipher-base":48,"inherits":99,"safe-buffer":140}],36:[function(require,module,exports){
var DES = require('browserify-des')
var aes = require('browserify-aes/browser')
var aesModes = require('browserify-aes/modes')
var desModes = require('browserify-des/modes')
var ebtk = require('evp_bytestokey')

function createCipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}

function createDecipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })

  throw new TypeError('invalid suite type')
}

function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })

  throw new TypeError('invalid suite type')
}

function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}

exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers

},{"browserify-aes/browser":21,"browserify-aes/modes":32,"browserify-des":37,"browserify-des/modes":38,"evp_bytestokey":83}],37:[function(require,module,exports){
var CipherBase = require('cipher-base')
var des = require('des.js')
var inherits = require('inherits')
var Buffer = require('safe-buffer').Buffer

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (!Buffer.isBuffer(key)) {
    key = Buffer.from(key)
  }
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  if (!Buffer.isBuffer(iv)) {
    iv = Buffer.from(iv)
  }
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return Buffer.from(this._des.update(data))
}
DES.prototype._final = function () {
  return Buffer.from(this._des.final())
}

},{"cipher-base":48,"des.js":56,"inherits":99,"safe-buffer":140}],38:[function(require,module,exports){
exports['des-ecb'] = {
  key: 8,
  iv: 0
}
exports['des-cbc'] = exports.des = {
  key: 8,
  iv: 8
}
exports['des-ede3-cbc'] = exports.des3 = {
  key: 24,
  iv: 8
}
exports['des-ede3'] = {
  key: 24,
  iv: 0
}
exports['des-ede-cbc'] = {
  key: 16,
  iv: 8
}
exports['des-ede'] = {
  key: 16,
  iv: 0
}

},{}],39:[function(require,module,exports){
(function (Buffer){
var bn = require('bn.js');
var randomBytes = require('randombytes');
module.exports = crt;
function blind(priv) {
  var r = getr(priv);
  var blinder = r.toRed(bn.mont(priv.modulus))
  .redPow(new bn(priv.publicExponent)).fromRed();
  return {
    blinder: blinder,
    unblinder:r.invm(priv.modulus)
  };
}
function crt(msg, priv) {
  var blinds = blind(priv);
  var len = priv.modulus.byteLength();
  var mod = bn.mont(priv.modulus);
  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
  var c1 = blinded.toRed(bn.mont(priv.prime1));
  var c2 = blinded.toRed(bn.mont(priv.prime2));
  var qinv = priv.coefficient;
  var p = priv.prime1;
  var q = priv.prime2;
  var m1 = c1.redPow(priv.exponent1);
  var m2 = c2.redPow(priv.exponent2);
  m1 = m1.fromRed();
  m2 = m2.fromRed();
  var h = m1.isub(m2).imul(qinv).umod(p);
  h.imul(q);
  m2.iadd(h);
  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));
}
crt.getr = getr;
function getr(priv) {
  var len = priv.modulus.byteLength();
  var r = new bn(randomBytes(len));
  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {
    r = new bn(randomBytes(len));
  }
  return r;
}

}).call(this,require("buffer").Buffer)
},{"bn.js":16,"buffer":47,"randombytes":124}],40:[function(require,module,exports){
module.exports = require('./browser/algorithms.json')

},{"./browser/algorithms.json":41}],41:[function(require,module,exports){
module.exports={
  "sha224WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "RSA-SHA224": {
    "sign": "ecdsa/rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "sha256WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "RSA-SHA256": {
    "sign": "ecdsa/rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "sha384WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "RSA-SHA384": {
    "sign": "ecdsa/rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "sha512WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA512": {
    "sign": "ecdsa/rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA1": {
    "sign": "rsa",
    "hash": "sha1",
    "id": "3021300906052b0e03021a05000414"
  },
  "ecdsa-with-SHA1": {
    "sign": "ecdsa",
    "hash": "sha1",
    "id": ""
  },
  "sha256": {
    "sign": "ecdsa",
    "hash": "sha256",
    "id": ""
  },
  "sha224": {
    "sign": "ecdsa",
    "hash": "sha224",
    "id": ""
  },
  "sha384": {
    "sign": "ecdsa",
    "hash": "sha384",
    "id": ""
  },
  "sha512": {
    "sign": "ecdsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-SHA1": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-WITH-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-WITH-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-WITH-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-WITH-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-RIPEMD160": {
    "sign": "dsa",
    "hash": "rmd160",
    "id": ""
  },
  "ripemd160WithRSA": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "RSA-RIPEMD160": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "md5WithRSAEncryption": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  },
  "RSA-MD5": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  }
}

},{}],42:[function(require,module,exports){
module.exports={
  "1.3.132.0.10": "secp256k1",
  "1.3.132.0.33": "p224",
  "1.2.840.10045.3.1.1": "p192",
  "1.2.840.10045.3.1.7": "p256",
  "1.3.132.0.34": "p384",
  "1.3.132.0.35": "p521"
}

},{}],43:[function(require,module,exports){
(function (Buffer){
var createHash = require('create-hash')
var stream = require('stream')
var inherits = require('inherits')
var sign = require('./sign')
var verify = require('./verify')

var algorithms = require('./algorithms.json')
Object.keys(algorithms).forEach(function (key) {
  algorithms[key].id = new Buffer(algorithms[key].id, 'hex')
  algorithms[key.toLowerCase()] = algorithms[key]
})

function Sign (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hashType = data.hash
  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Sign, stream.Writable)

Sign.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Sign.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Sign.prototype.sign = function signMethod (key, enc) {
  this.end()
  var hash = this._hash.digest()
  var sig = sign(hash, key, this._hashType, this._signType, this._tag)

  return enc ? sig.toString(enc) : sig
}

function Verify (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Verify, stream.Writable)

Verify.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Verify.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Verify.prototype.verify = function verifyMethod (key, sig, enc) {
  if (typeof sig === 'string') sig = new Buffer(sig, enc)

  this.end()
  var hash = this._hash.digest()
  return verify(sig, hash, key, this._signType, this._tag)
}

function createSign (algorithm) {
  return new Sign(algorithm)
}

function createVerify (algorithm) {
  return new Verify(algorithm)
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
}

}).call(this,require("buffer").Buffer)
},{"./algorithms.json":41,"./sign":44,"./verify":45,"buffer":47,"create-hash":51,"inherits":99,"stream":149}],44:[function(require,module,exports){
(function (Buffer){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var createHmac = require('create-hmac')
var crt = require('browserify-rsa')
var EC = require('elliptic').ec
var BN = require('bn.js')
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function sign (hash, key, hashType, signType, tag) {
  var priv = parseKeys(key)
  if (priv.curve) {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
    return ecSign(hash, priv)
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong private key type')
    return dsaSign(hash, priv, hashType)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = priv.modulus.byteLength()
  var pad = [ 0, 1 ]
  while (hash.length + pad.length + 1 < len) pad.push(0xff)
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) pad.push(hash[i])

  var out = crt(pad, priv)
  return out
}

function ecSign (hash, priv) {
  var curveId = curves[priv.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

  var curve = new EC(curveId)
  var key = curve.keyFromPrivate(priv.privateKey)
  var out = key.sign(hash)

  return new Buffer(out.toDER())
}

function dsaSign (hash, priv, algo) {
  var x = priv.params.priv_key
  var p = priv.params.p
  var q = priv.params.q
  var g = priv.params.g
  var r = new BN(0)
  var k
  var H = bits2int(hash, q).mod(q)
  var s = false
  var kv = getKey(x, q, hash, algo)
  while (s === false) {
    k = makeKey(q, kv, algo)
    r = makeR(g, k, p, q)
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
    if (s.cmpn(0) === 0) {
      s = false
      r = new BN(0)
    }
  }
  return toDER(r, s)
}

function toDER (r, s) {
  r = r.toArray()
  s = s.toArray()

  // Pad values
  if (r[0] & 0x80) r = [ 0 ].concat(r)
  if (s[0] & 0x80) s = [ 0 ].concat(s)

  var total = r.length + s.length + 4
  var res = [ 0x30, total, 0x02, r.length ]
  res = res.concat(r, [ 0x02, s.length ], s)
  return new Buffer(res)
}

function getKey (x, q, hash, algo) {
  x = new Buffer(x.toArray())
  if (x.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - x.length)
    zeros.fill(0)
    x = Buffer.concat([ zeros, x ])
  }
  var hlen = hash.length
  var hbits = bits2octets(hash, q)
  var v = new Buffer(hlen)
  v.fill(1)
  var k = new Buffer(hlen)
  k.fill(0)
  k = createHmac(algo, k).update(v).update(new Buffer([ 0 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  k = createHmac(algo, k).update(v).update(new Buffer([ 1 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  return { k: k, v: v }
}

function bits2int (obits, q) {
  var bits = new BN(obits)
  var shift = (obits.length << 3) - q.bitLength()
  if (shift > 0) bits.ishrn(shift)
  return bits
}

function bits2octets (bits, q) {
  bits = bits2int(bits, q)
  bits = bits.mod(q)
  var out = new Buffer(bits.toArray())
  if (out.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - out.length)
    zeros.fill(0)
    out = Buffer.concat([ zeros, out ])
  }
  return out
}

function makeKey (q, kv, algo) {
  var t
  var k

  do {
    t = new Buffer(0)

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k).update(kv.v).digest()
      t = Buffer.concat([ t, kv.v ])
    }

    k = bits2int(t, q)
    kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([ 0 ])).digest()
    kv.v = createHmac(algo, kv.k).update(kv.v).digest()
  } while (k.cmp(q) !== -1)

  return k
}

function makeR (g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
}

module.exports = sign
module.exports.getKey = getKey
module.exports.makeKey = makeKey

}).call(this,require("buffer").Buffer)
},{"./curves.json":42,"bn.js":16,"browserify-rsa":39,"buffer":47,"create-hmac":53,"elliptic":66,"parse-asn1":110}],45:[function(require,module,exports){
(function (Buffer){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var BN = require('bn.js')
var EC = require('elliptic').ec
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function verify (sig, hash, key, signType, tag) {
  var pub = parseKeys(key)
  if (pub.type === 'ec') {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
    return ecVerify(sig, hash, pub)
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong public key type')
    return dsaVerify(sig, hash, pub)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = pub.modulus.byteLength()
  var pad = [ 1 ]
  var padNum = 0
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff)
    padNum++
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }
  pad = new Buffer(pad)
  var red = BN.mont(pub.modulus)
  sig = new BN(sig).toRed(red)

  sig = sig.redPow(new BN(pub.publicExponent))
  sig = new Buffer(sig.fromRed().toArray())
  var out = padNum < 8 ? 1 : 0
  len = Math.min(sig.length, pad.length)
  if (sig.length !== pad.length) out = 1

  i = -1
  while (++i < len) out |= sig[i] ^ pad[i]
  return out === 0
}

function ecVerify (sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

  var curve = new EC(curveId)
  var pubkey = pub.data.subjectPrivateKey.data

  return curve.verify(hash, sig, pubkey)
}

function dsaVerify (sig, hash, pub) {
  var p = pub.data.p
  var q = pub.data.q
  var g = pub.data.g
  var y = pub.data.pub_key
  var unpacked = parseKeys.signature.decode(sig, 'der')
  var s = unpacked.s
  var r = unpacked.r
  checkValue(s, q)
  checkValue(r, q)
  var montp = BN.mont(p)
  var w = s.invm(q)
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
    .mod(p)
    .mod(q)
  return v.cmp(r) === 0
}

function checkValue (b, q) {
  if (b.cmpn(0) <= 0) throw new Error('invalid sig')
  if (b.cmp(q) >= q) throw new Error('invalid sig')
}

module.exports = verify

}).call(this,require("buffer").Buffer)
},{"./curves.json":42,"bn.js":16,"buffer":47,"elliptic":66,"parse-asn1":110}],46:[function(require,module,exports){
(function (Buffer){
module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}

}).call(this,require("buffer").Buffer)
},{"buffer":47}],47:[function(require,module,exports){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

},{"base64-js":15,"ieee754":98}],48:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var Transform = require('stream').Transform
var StringDecoder = require('string_decoder').StringDecoder
var inherits = require('inherits')

function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  if (this._final) {
    this.__final = this._final
    this._final = null
  }
  this._decoder = null
  this._encoding = null
}
inherits(CipherBase, Transform)

CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = Buffer.from(data, inputEnc)
  }

  var outData = this._update(data)
  if (this.hashMode) return this

  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }

  return outData
}

CipherBase.prototype.setAutoPadding = function () {}
CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this.__final())
  } catch (e) {
    err = e
  }

  done(err)
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this.__final() || Buffer.alloc(0)
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, fin) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }

  if (this._encoding !== enc) throw new Error('can\'t switch encodings')

  var out = this._decoder.write(value)
  if (fin) {
    out += this._decoder.end()
  }

  return out
}

module.exports = CipherBase

},{"inherits":99,"safe-buffer":140,"stream":149,"string_decoder":150}],49:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":100}],50:[function(require,module,exports){
(function (Buffer){
var elliptic = require('elliptic')
var BN = require('bn.js')

module.exports = function createECDH (curve) {
  return new ECDH(curve)
}

var aliases = {
  secp256k1: {
    name: 'secp256k1',
    byteLength: 32
  },
  secp224r1: {
    name: 'p224',
    byteLength: 28
  },
  prime256v1: {
    name: 'p256',
    byteLength: 32
  },
  prime192v1: {
    name: 'p192',
    byteLength: 24
  },
  ed25519: {
    name: 'ed25519',
    byteLength: 32
  },
  secp384r1: {
    name: 'p384',
    byteLength: 48
  },
  secp521r1: {
    name: 'p521',
    byteLength: 66
  }
}

aliases.p224 = aliases.secp224r1
aliases.p256 = aliases.secp256r1 = aliases.prime256v1
aliases.p192 = aliases.secp192r1 = aliases.prime192v1
aliases.p384 = aliases.secp384r1
aliases.p521 = aliases.secp521r1

function ECDH (curve) {
  this.curveType = aliases[curve]
  if (!this.curveType) {
    this.curveType = {
      name: curve
    }
  }
  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap
  this.keys = void 0
}

ECDH.prototype.generateKeys = function (enc, format) {
  this.keys = this.curve.genKeyPair()
  return this.getPublicKey(enc, format)
}

ECDH.prototype.computeSecret = function (other, inenc, enc) {
  inenc = inenc || 'utf8'
  if (!Buffer.isBuffer(other)) {
    other = new Buffer(other, inenc)
  }
  var otherPub = this.curve.keyFromPublic(other).getPublic()
  var out = otherPub.mul(this.keys.getPrivate()).getX()
  return formatReturnValue(out, enc, this.curveType.byteLength)
}

ECDH.prototype.getPublicKey = function (enc, format) {
  var key = this.keys.getPublic(format === 'compressed', true)
  if (format === 'hybrid') {
    if (key[key.length - 1] % 2) {
      key[0] = 7
    } else {
      key[0] = 6
    }
  }
  return formatReturnValue(key, enc)
}

ECDH.prototype.getPrivateKey = function (enc) {
  return formatReturnValue(this.keys.getPrivate(), enc)
}

ECDH.prototype.setPublicKey = function (pub, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc)
  }
  this.keys._importPublic(pub)
  return this
}

ECDH.prototype.setPrivateKey = function (priv, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc)
  }

  var _priv = new BN(priv)
  _priv = _priv.toString(16)
  this.keys = this.curve.genKeyPair()
  this.keys._importPrivate(_priv)
  return this
}

function formatReturnValue (bn, enc, len) {
  if (!Array.isArray(bn)) {
    bn = bn.toArray()
  }
  var buf = new Buffer(bn)
  if (len && buf.length < len) {
    var zeros = new Buffer(len - buf.length)
    zeros.fill(0)
    buf = Buffer.concat([zeros, buf])
  }
  if (!enc) {
    return buf
  } else {
    return buf.toString(enc)
  }
}

}).call(this,require("buffer").Buffer)
},{"bn.js":16,"buffer":47,"elliptic":66}],51:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var MD5 = require('md5.js')
var RIPEMD160 = require('ripemd160')
var sha = require('sha.js')
var Base = require('cipher-base')

function Hash (hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if (alg === 'md5') return new MD5()
  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()

  return new Hash(sha(alg))
}

},{"cipher-base":48,"inherits":99,"md5.js":102,"ripemd160":139,"sha.js":142}],52:[function(require,module,exports){
var MD5 = require('md5.js')

module.exports = function (buffer) {
  return new MD5().update(buffer).digest()
}

},{"md5.js":102}],53:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var Legacy = require('./legacy')
var Base = require('cipher-base')
var Buffer = require('safe-buffer').Buffer
var md5 = require('create-hash/md5')
var RIPEMD160 = require('ripemd160')

var sha = require('sha.js')

var ZEROS = Buffer.alloc(128)

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key
  if (key.length > blocksize) {
    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
    key = hash.update(key).digest()
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }
  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
  this._hash.update(ipad)
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.update(data)
}

Hmac.prototype._final = function () {
  var h = this._hash.digest()
  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
  return hash.update(this._opad).update(h).digest()
}

module.exports = function createHmac (alg, key) {
  alg = alg.toLowerCase()
  if (alg === 'rmd160' || alg === 'ripemd160') {
    return new Hmac('rmd160', key)
  }
  if (alg === 'md5') {
    return new Legacy(md5, key)
  }
  return new Hmac(alg, key)
}

},{"./legacy":54,"cipher-base":48,"create-hash/md5":52,"inherits":99,"ripemd160":139,"safe-buffer":140,"sha.js":142}],54:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var Buffer = require('safe-buffer').Buffer

var Base = require('cipher-base')

var ZEROS = Buffer.alloc(128)
var blocksize = 64

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = alg(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = [ipad]
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.push(data)
}

Hmac.prototype._final = function () {
  var h = this._alg(Buffer.concat(this._hash))
  return this._alg(Buffer.concat([this._opad, h]))
}
module.exports = Hmac

},{"cipher-base":48,"inherits":99,"safe-buffer":140}],55:[function(require,module,exports){
'use strict'

exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')
exports.createHash = exports.Hash = require('create-hash')
exports.createHmac = exports.Hmac = require('create-hmac')

var algos = require('browserify-sign/algos')
var algoKeys = Object.keys(algos)
var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
exports.getHashes = function () {
  return hashes
}

var p = require('pbkdf2')
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = require('browserify-cipher')

exports.Cipher = aes.Cipher
exports.createCipher = aes.createCipher
exports.Cipheriv = aes.Cipheriv
exports.createCipheriv = aes.createCipheriv
exports.Decipher = aes.Decipher
exports.createDecipher = aes.createDecipher
exports.Decipheriv = aes.Decipheriv
exports.createDecipheriv = aes.createDecipheriv
exports.getCiphers = aes.getCiphers
exports.listCiphers = aes.listCiphers

var dh = require('diffie-hellman')

exports.DiffieHellmanGroup = dh.DiffieHellmanGroup
exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup
exports.getDiffieHellman = dh.getDiffieHellman
exports.createDiffieHellman = dh.createDiffieHellman
exports.DiffieHellman = dh.DiffieHellman

var sign = require('browserify-sign')

exports.createSign = sign.createSign
exports.Sign = sign.Sign
exports.createVerify = sign.createVerify
exports.Verify = sign.Verify

exports.createECDH = require('create-ecdh')

var publicEncrypt = require('public-encrypt')

exports.publicEncrypt = publicEncrypt.publicEncrypt
exports.privateEncrypt = publicEncrypt.privateEncrypt
exports.publicDecrypt = publicEncrypt.publicDecrypt
exports.privateDecrypt = publicEncrypt.privateDecrypt

// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })

var rf = require('randomfill')

exports.randomFill = rf.randomFill
exports.randomFillSync = rf.randomFillSync

exports.createCredentials = function () {
  throw new Error([
    'sorry, createCredentials is not implemented yet',
    'we accept pull requests',
    'https://github.com/crypto-browserify/crypto-browserify'
  ].join('\n'))
}

exports.constants = {
  'DH_CHECK_P_NOT_SAFE_PRIME': 2,
  'DH_CHECK_P_NOT_PRIME': 1,
  'DH_UNABLE_TO_CHECK_GENERATOR': 4,
  'DH_NOT_SUITABLE_GENERATOR': 8,
  'NPN_ENABLED': 1,
  'ALPN_ENABLED': 1,
  'RSA_PKCS1_PADDING': 1,
  'RSA_SSLV23_PADDING': 2,
  'RSA_NO_PADDING': 3,
  'RSA_PKCS1_OAEP_PADDING': 4,
  'RSA_X931_PADDING': 5,
  'RSA_PKCS1_PSS_PADDING': 6,
  'POINT_CONVERSION_COMPRESSED': 2,
  'POINT_CONVERSION_UNCOMPRESSED': 4,
  'POINT_CONVERSION_HYBRID': 6
}

},{"browserify-cipher":36,"browserify-sign":43,"browserify-sign/algos":40,"create-ecdh":50,"create-hash":51,"create-hmac":53,"diffie-hellman":62,"pbkdf2":111,"public-encrypt":118,"randombytes":124,"randomfill":125}],56:[function(require,module,exports){
'use strict';

exports.utils = require('./des/utils');
exports.Cipher = require('./des/cipher');
exports.DES = require('./des/des');
exports.CBC = require('./des/cbc');
exports.EDE = require('./des/ede');

},{"./des/cbc":57,"./des/cipher":58,"./des/des":59,"./des/ede":60,"./des/utils":61}],57:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};

},{"inherits":99,"minimalistic-assert":104}],58:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};

},{"minimalistic-assert":104}],59:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var des = require('../des');
var utils = des.utils;
var Cipher = des.Cipher;

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};

},{"../des":56,"inherits":99,"minimalistic-assert":104}],60:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var des = require('../des');
var Cipher = des.Cipher;
var DES = des.DES;

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;

},{"../des":56,"inherits":99,"minimalistic-assert":104}],61:[function(require,module,exports){
'use strict';

exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};

},{}],62:[function(require,module,exports){
(function (Buffer){
var generatePrime = require('./lib/generatePrime')
var primes = require('./lib/primes.json')

var DH = require('./lib/dh')

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman

}).call(this,require("buffer").Buffer)
},{"./lib/dh":63,"./lib/generatePrime":64,"./lib/primes.json":65,"buffer":47}],63:[function(require,module,exports){
(function (Buffer){
var BN = require('bn.js');
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = require('./generatePrime');
var randomBytes = require('randombytes');
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}

}).call(this,require("buffer").Buffer)
},{"./generatePrime":64,"bn.js":16,"buffer":47,"miller-rabin":103,"randombytes":124}],64:[function(require,module,exports){
var randomBytes = require('randombytes');
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = require('bn.js');
var TWENTYFOUR = new BN(24);
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}

},{"bn.js":16,"miller-rabin":103,"randombytes":124}],65:[function(require,module,exports){
module.exports={
    "modp1": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
    },
    "modp2": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
    },
    "modp5": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
    },
    "modp14": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
    },
    "modp15": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
    },
    "modp16": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
    },
    "modp17": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
    },
    "modp18": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
    }
}
},{}],66:[function(require,module,exports){
'use strict';

var elliptic = exports;

elliptic.version = require('../package.json').version;
elliptic.utils = require('./elliptic/utils');
elliptic.rand = require('brorand');
elliptic.curve = require('./elliptic/curve');
elliptic.curves = require('./elliptic/curves');

// Protocols
elliptic.ec = require('./elliptic/ec');
elliptic.eddsa = require('./elliptic/eddsa');

},{"../package.json":81,"./elliptic/curve":69,"./elliptic/curves":72,"./elliptic/ec":73,"./elliptic/eddsa":76,"./elliptic/utils":80,"brorand":17}],67:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  for (var j = 0; j < naf.length; j += doubles.step) {
    var nafW = 0;
    for (var k = j + doubles.step - 1; k >= j; k--)
      nafW = (nafW << 1) + naf[k];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (var j = 0; j < repr.length; j++) {
      var nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var k = 0; i >= 0 && naf[i] === 0; i--)
      k++;
    if (i >= 0)
      k++;
    acc = acc.dblp(k);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                       points,
                                                       coeffs,
                                                       len,
                                                       jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  for (var i = 0; i < len; i++) {
    var p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (var i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a]);
      naf[b] = getNAF(coeffs[b], wndWidth[b]);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b] /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (var j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (var i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (var j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (var j = 0; j < len; j++) {
      var z = tmp[j];
      var p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (var i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
                          bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};

},{"../../elliptic":66,"bn.js":16}],68:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.c2);
  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.fromRed().isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
    (this.y.cmp(this.z) === 0 ||
    (this.zOne && this.y.cmp(this.curve.c) === 0));
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  if (this.curve.twisted) {
    // E = a * C
    var e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      var h = this.z.redSqr();
      // J = F - 2 * H
      var j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    var e = c.redAdd(d);
    // H = (c * Z1)^2
    var h = this.curve._mulC(this.z).redSqr();
    // J = E - 2 * H
    var j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
                          this.y,
                          this.z,
                          this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;

},{"../../elliptic":66,"../curve":69,"bn.js":16,"inherits":99}],69:[function(require,module,exports){
'use strict';

var curve = exports;

curve.base = require('./base');
curve.short = require('./short');
curve.mont = require('./mont');
curve.edwards = require('./edwards');

},{"./base":67,"./edwards":68,"./mont":70,"./short":71}],70:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var elliptic = require('../../elliptic');
var utils = elliptic.utils;

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};

},{"../../elliptic":66,"../curve":69,"bn.js":16,"inherits":99}],71:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();

    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);

  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (var i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (var i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

},{"../../elliptic":66,"../curve":69,"bn.js":16,"inherits":99}],72:[function(require,module,exports){
'use strict';

var curves = exports;

var hash = require('hash.js');
var elliptic = require('../elliptic');

var assert = elliptic.utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new elliptic.curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new elliptic.curve.edwards(options);
  else
    this.curve = new elliptic.curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve
      });
      return curve;
    }
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
  ]
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
  ]
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
  ]
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'
  ]
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650'
  ]
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9'
  ]
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658'
  ]
});

var pre;
try {
  pre = require('./precomputed/secp256k1');
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre
  ]
});

},{"../elliptic":66,"./precomputed/secp256k1":79,"hash.js":85}],73:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var HmacDRBG = require('hmac-drbg');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

var KeyPair = require('./key');
var Signature = require('./signature');

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);

    options = elliptic.curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof elliptic.curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray()
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  do {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  } while (true);
};

EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8'
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; true; iter++) {
    var k = options.k ?
        options.k(iter) :
        new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);

  if (!this.curve._maxwellTrick) {
    var p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  var p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};

},{"../../elliptic":66,"./key":74,"./signature":75,"bn.js":16,"hmac-drbg":97}],74:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

},{"../../elliptic":66,"bn.js":16}],75:[function(require,module,exports){
'use strict';

var BN = require('bn.js');

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
  }
  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0 && (r[1] & 0x80)) {
    r = r.slice(1);
  }
  if (s[0] === 0 && (s[1] & 0x80)) {
    s = s.slice(1);
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};

},{"../../elliptic":66,"bn.js":16}],76:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = require('./key');
var Signature = require('./signature');

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  var curve = elliptic.curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
               .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};

},{"../../elliptic":66,"./key":77,"./signature":78,"hash.js":85}],77:[function(require,module,exports){
'use strict';

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;

},{"../../elliptic":66}],78:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;

},{"../../elliptic":66,"bn.js":16}],79:[function(require,module,exports){
module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'
      ]
    ]
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'
      ]
    ]
  }
};

},{}],80:[function(require,module,exports){
'use strict';

var utils = exports;
var BN = require('bn.js');
var minAssert = require('minimalistic-assert');
var minUtils = require('minimalistic-crypto-utils');

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w) {
  var naf = [];
  var ws = 1 << (w + 1);
  var k = num.clone();
  while (k.cmpn(1) >= 0) {
    var z;
    if (k.isOdd()) {
      var mod = k.andln(ws - 1);
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }
    naf.push(z);

    // Optimization, shift by word if possible
    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;
    for (var i = 1; i < shift; i++)
      naf.push(0);
    k.iushrn(shift);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    []
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      var m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      var m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
           this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
                                     bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;


},{"bn.js":16,"minimalistic-assert":104,"minimalistic-crypto-utils":105}],81:[function(require,module,exports){
module.exports={
  "_from": "elliptic@^6.0.0",
  "_id": "elliptic@6.4.1",
  "_inBundle": false,
  "_integrity": "sha512-BsXLz5sqX8OHcsh7CqBMztyXARmGQ3LWPtGjJi6DiJHq5C/qvi9P3OqgswKSDftbu8+IoI/QDTAm2fFnQ9SZSQ==",
  "_location": "/browserify/elliptic",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "elliptic@^6.0.0",
    "name": "elliptic",
    "escapedName": "elliptic",
    "rawSpec": "^6.0.0",
    "saveSpec": null,
    "fetchSpec": "^6.0.0"
  },
  "_requiredBy": [
    "/browserify/browserify-sign",
    "/browserify/create-ecdh"
  ],
  "_resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.4.1.tgz",
  "_shasum": "c2d0b7776911b86722c632c3c06c60f2f819939a",
  "_spec": "elliptic@^6.0.0",
  "_where": "/home/tarun/.nvm/versions/node/v10.7.0/lib/node_modules/browserify/node_modules/browserify-sign",
  "author": {
    "name": "Fedor Indutny",
    "email": "fedor@indutny.com"
  },
  "bugs": {
    "url": "https://github.com/indutny/elliptic/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "bn.js": "^4.4.0",
    "brorand": "^1.0.1",
    "hash.js": "^1.0.0",
    "hmac-drbg": "^1.0.0",
    "inherits": "^2.0.1",
    "minimalistic-assert": "^1.0.0",
    "minimalistic-crypto-utils": "^1.0.0"
  },
  "deprecated": false,
  "description": "EC cryptography",
  "devDependencies": {
    "brfs": "^1.4.3",
    "coveralls": "^2.11.3",
    "grunt": "^0.4.5",
    "grunt-browserify": "^5.0.0",
    "grunt-cli": "^1.2.0",
    "grunt-contrib-connect": "^1.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-uglify": "^1.0.1",
    "grunt-mocha-istanbul": "^3.0.1",
    "grunt-saucelabs": "^8.6.2",
    "istanbul": "^0.4.2",
    "jscs": "^2.9.0",
    "jshint": "^2.6.0",
    "mocha": "^2.1.0"
  },
  "files": [
    "lib"
  ],
  "homepage": "https://github.com/indutny/elliptic",
  "keywords": [
    "EC",
    "Elliptic",
    "curve",
    "Cryptography"
  ],
  "license": "MIT",
  "main": "lib/elliptic.js",
  "name": "elliptic",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/indutny/elliptic.git"
  },
  "scripts": {
    "jscs": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "jshint": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "lint": "npm run jscs && npm run jshint",
    "test": "npm run lint && npm run unit",
    "unit": "istanbul test _mocha --reporter=spec test/index.js",
    "version": "grunt dist && git add dist/"
  },
  "version": "6.4.1"
}

},{}],82:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var objectCreate = Object.create || objectCreatePolyfill
var objectKeys = Object.keys || objectKeysPolyfill
var bind = Function.prototype.bind || functionBindPolyfill

function EventEmitter() {
  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {
    this._events = objectCreate(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

var hasDefineProperty;
try {
  var o = {};
  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });
  hasDefineProperty = o.x === 0;
} catch (err) { hasDefineProperty = false }
if (hasDefineProperty) {
  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
    enumerable: true,
    get: function() {
      return defaultMaxListeners;
    },
    set: function(arg) {
      // check whether the input is a positive number (whose value is zero or
      // greater and not a NaN).
      if (typeof arg !== 'number' || arg < 0 || arg !== arg)
        throw new TypeError('"defaultMaxListeners" must be a positive number');
      defaultMaxListeners = arg;
    }
  });
} else {
  EventEmitter.defaultMaxListeners = defaultMaxListeners;
}

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || isNaN(n))
    throw new TypeError('"n" argument must be a positive number');
  this._maxListeners = n;
  return this;
};

function $getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return $getMaxListeners(this);
};

// These standalone emit* functions are used to optimize calling of event
// handlers for fast cases because emit() itself often has a variable number of
// arguments and can be deoptimized because of that. These functions always have
// the same number of arguments and thus do not get deoptimized, so the code
// inside them can execute faster.
function emitNone(handler, isFn, self) {
  if (isFn)
    handler.call(self);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self);
  }
}
function emitOne(handler, isFn, self, arg1) {
  if (isFn)
    handler.call(self, arg1);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1);
  }
}
function emitTwo(handler, isFn, self, arg1, arg2) {
  if (isFn)
    handler.call(self, arg1, arg2);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1, arg2);
  }
}
function emitThree(handler, isFn, self, arg1, arg2, arg3) {
  if (isFn)
    handler.call(self, arg1, arg2, arg3);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1, arg2, arg3);
  }
}

function emitMany(handler, isFn, self, args) {
  if (isFn)
    handler.apply(self, args);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].apply(self, args);
  }
}

EventEmitter.prototype.emit = function emit(type) {
  var er, handler, len, args, i, events;
  var doError = (type === 'error');

  events = this._events;
  if (events)
    doError = (doError && events.error == null);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    if (arguments.length > 1)
      er = arguments[1];
    if (er instanceof Error) {
      throw er; // Unhandled 'error' event
    } else {
      // At least give some kind of context to the user
      var err = new Error('Unhandled "error" event. (' + er + ')');
      err.context = er;
      throw err;
    }
    return false;
  }

  handler = events[type];

  if (!handler)
    return false;

  var isFn = typeof handler === 'function';
  len = arguments.length;
  switch (len) {
      // fast cases
    case 1:
      emitNone(handler, isFn, this);
      break;
    case 2:
      emitOne(handler, isFn, this, arguments[1]);
      break;
    case 3:
      emitTwo(handler, isFn, this, arguments[1], arguments[2]);
      break;
    case 4:
      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);
      break;
      // slower
    default:
      args = new Array(len - 1);
      for (i = 1; i < len; i++)
        args[i - 1] = arguments[i];
      emitMany(handler, isFn, this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  if (typeof listener !== 'function')
    throw new TypeError('"listener" argument must be a function');

  events = target._events;
  if (!events) {
    events = target._events = objectCreate(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener) {
      target.emit('newListener', type,
          listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (!existing) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
          prepend ? [listener, existing] : [existing, listener];
    } else {
      // If we've already got an array, just append.
      if (prepend) {
        existing.unshift(listener);
      } else {
        existing.push(listener);
      }
    }

    // Check for listener leak
    if (!existing.warned) {
      m = $getMaxListeners(target);
      if (m && m > 0 && existing.length > m) {
        existing.warned = true;
        var w = new Error('Possible EventEmitter memory leak detected. ' +
            existing.length + ' "' + String(type) + '" listeners ' +
            'added. Use emitter.setMaxListeners() to ' +
            'increase limit.');
        w.name = 'MaxListenersExceededWarning';
        w.emitter = target;
        w.type = type;
        w.count = existing.length;
        if (typeof console === 'object' && console.warn) {
          console.warn('%s: %s', w.name, w.message);
        }
      }
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    switch (arguments.length) {
      case 0:
        return this.listener.call(this.target);
      case 1:
        return this.listener.call(this.target, arguments[0]);
      case 2:
        return this.listener.call(this.target, arguments[0], arguments[1]);
      case 3:
        return this.listener.call(this.target, arguments[0], arguments[1],
            arguments[2]);
      default:
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; ++i)
          args[i] = arguments[i];
        this.listener.apply(this.target, args);
    }
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = bind.call(onceWrapper, state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  if (typeof listener !== 'function')
    throw new TypeError('"listener" argument must be a function');
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      if (typeof listener !== 'function')
        throw new TypeError('"listener" argument must be a function');
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      if (typeof listener !== 'function')
        throw new TypeError('"listener" argument must be a function');

      events = this._events;
      if (!events)
        return this;

      list = events[type];
      if (!list)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = objectCreate(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else
          spliceOne(list, position);

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (!events)
        return this;

      // not listening for removeListener, no need to emit
      if (!events.removeListener) {
        if (arguments.length === 0) {
          this._events = objectCreate(null);
          this._eventsCount = 0;
        } else if (events[type]) {
          if (--this._eventsCount === 0)
            this._events = objectCreate(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = objectKeys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = objectCreate(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (!events)
    return [];

  var evlistener = events[type];
  if (!evlistener)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
};

// About 1.5x faster than the two-arg version of Array#splice().
function spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)
    list[i] = list[k];
  list.pop();
}

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function objectCreatePolyfill(proto) {
  var F = function() {};
  F.prototype = proto;
  return new F;
}
function objectKeysPolyfill(obj) {
  var keys = [];
  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {
    keys.push(k);
  }
  return k;
}
function functionBindPolyfill(context) {
  var fn = this;
  return function () {
    return fn.apply(context, arguments);
  };
}

},{}],83:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var MD5 = require('md5.js')

/* eslint-disable camelcase */
function EVP_BytesToKey (password, salt, keyBits, ivLen) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')
  if (salt) {
    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')
    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')
  }

  var keyLen = keyBits / 8
  var key = Buffer.alloc(keyLen)
  var iv = Buffer.alloc(ivLen || 0)
  var tmp = Buffer.alloc(0)

  while (keyLen > 0 || ivLen > 0) {
    var hash = new MD5()
    hash.update(tmp)
    hash.update(password)
    if (salt) hash.update(salt)
    tmp = hash.digest()

    var used = 0

    if (keyLen > 0) {
      var keyStart = key.length - keyLen
      used = Math.min(keyLen, tmp.length)
      tmp.copy(key, keyStart, 0, used)
      keyLen -= used
    }

    if (used < tmp.length && ivLen > 0) {
      var ivStart = iv.length - ivLen
      var length = Math.min(ivLen, tmp.length - used)
      tmp.copy(iv, ivStart, used, used + length)
      ivLen -= length
    }
  }

  tmp.fill(0)
  return { key: key, iv: iv }
}

module.exports = EVP_BytesToKey

},{"md5.js":102,"safe-buffer":140}],84:[function(require,module,exports){
'use strict'
var Buffer = require('safe-buffer').Buffer
var Transform = require('stream').Transform
var inherits = require('inherits')

function throwIfNotStringOrBuffer (val, prefix) {
  if (!Buffer.isBuffer(val) && typeof val !== 'string') {
    throw new TypeError(prefix + ' must be a string or a buffer')
  }
}

function HashBase (blockSize) {
  Transform.call(this)

  this._block = Buffer.allocUnsafe(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    this.update(chunk, encoding)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this.digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype.update = function (data, encoding) {
  throwIfNotStringOrBuffer(data, 'Data')
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function () {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)

  // reset state
  this._block.fill(0)
  this._blockOffset = 0
  for (var i = 0; i < 4; ++i) this._length[i] = 0

  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase

},{"inherits":99,"safe-buffer":140,"stream":149}],85:[function(require,module,exports){
var hash = exports;

hash.utils = require('./hash/utils');
hash.common = require('./hash/common');
hash.sha = require('./hash/sha');
hash.ripemd = require('./hash/ripemd');
hash.hmac = require('./hash/hmac');

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;

},{"./hash/common":86,"./hash/hmac":87,"./hash/ripemd":88,"./hash/sha":89,"./hash/utils":96}],86:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};

},{"./utils":96,"minimalistic-assert":104}],87:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};

},{"./utils":96,"minimalistic-assert":104}],88:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var common = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];

},{"./common":86,"./utils":96}],89:[function(require,module,exports){
'use strict';

exports.sha1 = require('./sha/1');
exports.sha224 = require('./sha/224');
exports.sha256 = require('./sha/256');
exports.sha384 = require('./sha/384');
exports.sha512 = require('./sha/512');

},{"./sha/1":90,"./sha/224":91,"./sha/256":92,"./sha/384":93,"./sha/512":94}],90:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../common":86,"../utils":96,"./common":95}],91:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var SHA256 = require('./256');

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};


},{"../utils":96,"./256":92}],92:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');
var assert = require('minimalistic-assert');

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../common":86,"../utils":96,"./common":95,"minimalistic-assert":104}],93:[function(require,module,exports){
'use strict';

var utils = require('../utils');

var SHA512 = require('./512');

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};

},{"../utils":96,"./512":94}],94:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var assert = require('minimalistic-assert');

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

},{"../common":86,"../utils":96,"minimalistic-assert":104}],95:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;

},{"../utils":96}],96:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

exports.inherits = inherits;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 0xff;
        if (hi)
          res.push(hi, lo);
        else
          res.push(lo);
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;

},{"inherits":99,"minimalistic-assert":104}],97:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var utils = require('minimalistic-crypto-utils');
var assert = require('minimalistic-assert');

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};

},{"hash.js":85,"minimalistic-assert":104,"minimalistic-crypto-utils":105}],98:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],99:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],100:[function(require,module,exports){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}

},{}],101:[function(require,module,exports){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],102:[function(require,module,exports){
(function (Buffer){
'use strict'
var inherits = require('inherits')
var HashBase = require('hash-base')

var ARRAY16 = new Array(16)

function MD5 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
}

inherits(MD5, HashBase)

MD5.prototype._update = function () {
  var M = ARRAY16
  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)

  var a = this._a
  var b = this._b
  var c = this._c
  var d = this._d

  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
  c = fnF(c, d, a, b, M[2], 0x242070db, 17)
  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
  d = fnG(d, a, b, c, M[10], 0x02441453, 9)
  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

  this._a = (this._a + a) | 0
  this._b = (this._b + b) | 0
  this._c = (this._c + c) | 0
  this._d = (this._d + d) | 0
}

MD5.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = new Buffer(16)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fnF (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
}

function fnG (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
}

function fnH (a, b, c, d, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
}

function fnI (a, b, c, d, m, k, s) {
  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
}

module.exports = MD5

}).call(this,require("buffer").Buffer)
},{"buffer":47,"hash-base":84,"inherits":99}],103:[function(require,module,exports){
var bn = require('bn.js');
var brorand = require('brorand');

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._randbelow = function _randbelow(n) {
  var len = n.bitLength();
  var min_bytes = Math.ceil(len / 8);

  // Generage random bytes until a number less than n is found.
  // This ensures that 0..n-1 have an equal probability of being selected.
  do
    var a = new bn(this.rand.generate(min_bytes));
  while (a.cmp(n) >= 0);

  return a;
};

MillerRabin.prototype._randrange = function _randrange(start, stop) {
  // Generate a random number greater than or equal to start and less than stop.
  var size = stop.sub(start);
  return start.add(this._randbelow(size));
};

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};

},{"bn.js":16,"brorand":17}],104:[function(require,module,exports){
module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};

},{}],105:[function(require,module,exports){
'use strict';

var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};

},{}],106:[function(require,module,exports){
module.exports={"2.16.840.1.101.3.4.1.1": "aes-128-ecb",
"2.16.840.1.101.3.4.1.2": "aes-128-cbc",
"2.16.840.1.101.3.4.1.3": "aes-128-ofb",
"2.16.840.1.101.3.4.1.4": "aes-128-cfb",
"2.16.840.1.101.3.4.1.21": "aes-192-ecb",
"2.16.840.1.101.3.4.1.22": "aes-192-cbc",
"2.16.840.1.101.3.4.1.23": "aes-192-ofb",
"2.16.840.1.101.3.4.1.24": "aes-192-cfb",
"2.16.840.1.101.3.4.1.41": "aes-256-ecb",
"2.16.840.1.101.3.4.1.42": "aes-256-cbc",
"2.16.840.1.101.3.4.1.43": "aes-256-ofb",
"2.16.840.1.101.3.4.1.44": "aes-256-cfb"
}
},{}],107:[function(require,module,exports){
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.
'use strict'

var asn1 = require('asn1.js')

exports.certificate = require('./certificate')

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  )
})
exports.RSAPrivateKey = RSAPrivateKey

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  )
})
exports.RSAPublicKey = RSAPublicKey

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})
exports.PublicKey = PublicKey

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('none').null_().optional(),
    this.key('curve').objid().optional(),
    this.key('params').seq().obj(
      this.key('p').int(),
      this.key('q').int(),
      this.key('g').int()
    ).optional()
  )
})

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  )
})
exports.PrivateKey = PrivateKeyInfo
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  )
})

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  )
})
exports.DSAPrivateKey = DSAPrivateKey

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int()
})

var ECPrivateKey = asn1.define('ECPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  )
})
exports.ECPrivateKey = ECPrivateKey

var ECParameters = asn1.define('ECParameters', function () {
  this.choice({
    namedCurve: this.objid()
  })
})

exports.signature = asn1.define('signature', function () {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  )
})

},{"./certificate":108,"asn1.js":1}],108:[function(require,module,exports){
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen

'use strict'

var asn = require('asn1.js')

var Time = asn.define('Time', function () {
  this.choice({
    utcTime: this.utctime(),
    generalTime: this.gentime()
  })
})

var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
  this.seq().obj(
    this.key('type').objid(),
    this.key('value').any()
  )
})

var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('parameters').optional()
  )
})

var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})

var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {
  this.setof(AttributeTypeValue)
})

var RDNSequence = asn.define('RDNSequence', function () {
  this.seqof(RelativeDistinguishedName)
})

var Name = asn.define('Name', function () {
  this.choice({
    rdnSequence: this.use(RDNSequence)
  })
})

var Validity = asn.define('Validity', function () {
  this.seq().obj(
    this.key('notBefore').use(Time),
    this.key('notAfter').use(Time)
  )
})

var Extension = asn.define('Extension', function () {
  this.seq().obj(
    this.key('extnID').objid(),
    this.key('critical').bool().def(false),
    this.key('extnValue').octstr()
  )
})

var TBSCertificate = asn.define('TBSCertificate', function () {
  this.seq().obj(
    this.key('version').explicit(0).int(),
    this.key('serialNumber').int(),
    this.key('signature').use(AlgorithmIdentifier),
    this.key('issuer').use(Name),
    this.key('validity').use(Validity),
    this.key('subject').use(Name),
    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
    this.key('issuerUniqueID').implicit(1).bitstr().optional(),
    this.key('subjectUniqueID').implicit(2).bitstr().optional(),
    this.key('extensions').explicit(3).seqof(Extension).optional()
  )
})

var X509Certificate = asn.define('X509Certificate', function () {
  this.seq().obj(
    this.key('tbsCertificate').use(TBSCertificate),
    this.key('signatureAlgorithm').use(AlgorithmIdentifier),
    this.key('signatureValue').bitstr()
  )
})

module.exports = X509Certificate

},{"asn1.js":1}],109:[function(require,module,exports){
(function (Buffer){
// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m
var startRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----/m
var fullRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m
var evp = require('evp_bytestokey')
var ciphers = require('browserify-aes')
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = new Buffer(match2[2].replace(/[\r\n]/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = new Buffer(match[2], 'hex')
    var cipherText = new Buffer(match[3].replace(/[\r\n]/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1]
  return {
    tag: tag,
    data: decrypted
  }
}

}).call(this,require("buffer").Buffer)
},{"browserify-aes":21,"buffer":47,"evp_bytestokey":83}],110:[function(require,module,exports){
(function (Buffer){
var asn1 = require('./asn1')
var aesid = require('./aesid.json')
var fixProc = require('./fixProc')
var ciphers = require('browserify-aes')
var compat = require('pbkdf2')
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = new Buffer(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'CERTIFICATE':
      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo
      // falls through
    case 'PUBLIC KEY':
      if (!ndata) {
        ndata = asn1.PublicKey.decode(data, 'der')
      }
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen)
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}

}).call(this,require("buffer").Buffer)
},{"./aesid.json":106,"./asn1":107,"./fixProc":109,"browserify-aes":21,"buffer":47,"pbkdf2":111}],111:[function(require,module,exports){
exports.pbkdf2 = require('./lib/async')
exports.pbkdf2Sync = require('./lib/sync')

},{"./lib/async":112,"./lib/sync":115}],112:[function(require,module,exports){
(function (process,global){
var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var sync = require('./sync')
var Buffer = require('safe-buffer').Buffer

var ZERO_BUF
var subtle = global.crypto && global.crypto.subtle
var toBrowser = {
  'sha': 'SHA-1',
  'sha-1': 'SHA-1',
  'sha1': 'SHA-1',
  'sha256': 'SHA-256',
  'sha-256': 'SHA-256',
  'sha384': 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  'sha512': 'SHA-512'
}
var checks = []
function checkNative (algo) {
  if (global.process && !global.process.browser) {
    return Promise.resolve(false)
  }
  if (!subtle || !subtle.importKey || !subtle.deriveBits) {
    return Promise.resolve(false)
  }
  if (checks[algo] !== undefined) {
    return checks[algo]
  }
  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
    .then(function () {
      return true
    }).catch(function () {
      return false
    })
  checks[algo] = prom
  return prom
}

function browserPbkdf2 (password, salt, iterations, length, algo) {
  return subtle.importKey(
    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']
  ).then(function (key) {
    return subtle.deriveBits({
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: {
        name: algo
      }
    }, key, length << 3)
  }).then(function (res) {
    return Buffer.from(res)
  })
}

function resolvePromise (promise, callback) {
  promise.then(function (out) {
    process.nextTick(function () {
      callback(null, out)
    })
  }, function (e) {
    process.nextTick(function () {
      callback(e)
    })
  })
}
module.exports = function (password, salt, iterations, keylen, digest, callback) {
  if (typeof digest === 'function') {
    callback = digest
    digest = undefined
  }

  digest = digest || 'sha1'
  var algo = toBrowser[digest.toLowerCase()]

  if (!algo || typeof global.Promise !== 'function') {
    return process.nextTick(function () {
      var out
      try {
        out = sync(password, salt, iterations, keylen, digest)
      } catch (e) {
        return callback(e)
      }
      callback(null, out)
    })
  }

  checkParameters(password, salt, iterations, keylen)
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  resolvePromise(checkNative(algo).then(function (resp) {
    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)

    return sync(password, salt, iterations, keylen, digest)
  }), callback)
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./default-encoding":113,"./precondition":114,"./sync":115,"_process":117,"safe-buffer":140}],113:[function(require,module,exports){
(function (process){
var defaultEncoding
/* istanbul ignore next */
if (process.browser) {
  defaultEncoding = 'utf-8'
} else {
  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
}
module.exports = defaultEncoding

}).call(this,require('_process'))
},{"_process":117}],114:[function(require,module,exports){
(function (Buffer){
var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs

function checkBuffer (buf, name) {
  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {
    throw new TypeError(name + ' must be a buffer or string')
  }
}

module.exports = function (password, salt, iterations, keylen) {
  checkBuffer(password, 'Password')
  checkBuffer(salt, 'Salt')

  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length')
  }
}

}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":100}],115:[function(require,module,exports){
var md5 = require('create-hash/md5')
var rmd160 = require('ripemd160')
var sha = require('sha.js')

var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var Buffer = require('safe-buffer').Buffer
var ZEROS = Buffer.alloc(128)
var sizes = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
}

function Hmac (alg, key, saltLen) {
  var hash = getDigest(alg)
  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  if (key.length > blocksize) {
    key = hash(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
  ipad.copy(ipad1, 0, 0, blocksize)
  this.ipad1 = ipad1
  this.ipad2 = ipad
  this.opad = opad
  this.alg = alg
  this.blocksize = blocksize
  this.hash = hash
  this.size = sizes[alg]
}

Hmac.prototype.run = function (data, ipad) {
  data.copy(ipad, this.blocksize)
  var h = this.hash(ipad)
  h.copy(this.opad, this.blocksize)
  return this.hash(this.opad)
}

function getDigest (alg) {
  function shaFunc (data) {
    return sha(alg).update(data).digest()
  }

  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160
  if (alg === 'md5') return md5
  return shaFunc
}

function pbkdf2 (password, salt, iterations, keylen, digest) {
  checkParameters(password, salt, iterations, keylen)

  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  digest = digest || 'sha1'

  var hmac = new Hmac(digest, password, salt.length)

  var DK = Buffer.allocUnsafe(keylen)
  var block1 = Buffer.allocUnsafe(salt.length + 4)
  salt.copy(block1, 0, 0, salt.length)

  var destPos = 0
  var hLen = sizes[digest]
  var l = Math.ceil(keylen / hLen)

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length)

    var T = hmac.run(block1, hmac.ipad1)
    var U = T

    for (var j = 1; j < iterations; j++) {
      U = hmac.run(U, hmac.ipad2)
      for (var k = 0; k < hLen; k++) T[k] ^= U[k]
    }

    T.copy(DK, destPos)
    destPos += hLen
  }

  return DK
}

module.exports = pbkdf2

},{"./default-encoding":113,"./precondition":114,"create-hash/md5":52,"ripemd160":139,"safe-buffer":140,"sha.js":142}],116:[function(require,module,exports){
(function (process){
'use strict';

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = { nextTick: nextTick };
} else {
  module.exports = process
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}


}).call(this,require('_process'))
},{"_process":117}],117:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],118:[function(require,module,exports){
exports.publicEncrypt = require('./publicEncrypt');
exports.privateDecrypt = require('./privateDecrypt');

exports.privateEncrypt = function privateEncrypt(key, buf) {
  return exports.publicEncrypt(key, buf, true);
};

exports.publicDecrypt = function publicDecrypt(key, buf) {
  return exports.privateDecrypt(key, buf, true);
};
},{"./privateDecrypt":120,"./publicEncrypt":121}],119:[function(require,module,exports){
(function (Buffer){
var createHash = require('create-hash');
module.exports = function (seed, len) {
  var t = new Buffer('');
  var  i = 0, c;
  while (t.length < len) {
    c = i2ops(i++);
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);
  }
  return t.slice(0, len);
};

function i2ops(c) {
  var out = new Buffer(4);
  out.writeUInt32BE(c,0);
  return out;
}
}).call(this,require("buffer").Buffer)
},{"buffer":47,"create-hash":51}],120:[function(require,module,exports){
(function (Buffer){
var parseKeys = require('parse-asn1');
var mgf = require('./mgf');
var xor = require('./xor');
var bn = require('bn.js');
var crt = require('browserify-rsa');
var createHash = require('create-hash');
var withPublic = require('./withPublic');
module.exports = function privateDecrypt(private_key, enc, reverse) {
  var padding;
  if (private_key.padding) {
    padding = private_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  
  var key = parseKeys(private_key);
  var k = key.modulus.byteLength();
  if (enc.length > k || new bn(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error');
  }
  var msg;
  if (reverse) {
    msg = withPublic(new bn(enc), key);
  } else {
    msg = crt(enc, key);
  }
  var zBuffer = new Buffer(k - msg.length);
  zBuffer.fill(0);
  msg = Buffer.concat([zBuffer, msg], k);
  if (padding === 4) {
    return oaep(key, msg);
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    return msg;
  } else {
    throw new Error('unknown padding');
  }
};

function oaep(key, msg){
  var n = key.modulus;
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (msg[0] !== 0) {
    throw new Error('decryption error');
  }
  var maskedSeed = msg.slice(1, hLen + 1);
  var maskedDb =  msg.slice(hLen + 1);
  var seed = xor(maskedSeed, mgf(maskedDb, hLen));
  var db = xor(maskedDb, mgf(seed, k - hLen - 1));
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error');
  }
  var i = hLen;
  while (db[i] === 0) {
    i++;
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error');
  }
  return db.slice(i);
}

function pkcs1(key, msg, reverse){
  var p1 = msg.slice(0, 2);
  var i = 2;
  var status = 0;
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++;
      break;
    }
  }
  var ps = msg.slice(2, i - 1);
  var p2 = msg.slice(i - 1, i);

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)){
    status++;
  }
  if (ps.length < 8) {
    status++;
  }
  if (status) {
    throw new Error('decryption error');
  }
  return  msg.slice(i);
}
function compare(a, b){
  a = new Buffer(a);
  b = new Buffer(b);
  var dif = 0;
  var len = a.length;
  if (a.length !== b.length) {
    dif++;
    len = Math.min(a.length, b.length);
  }
  var i = -1;
  while (++i < len) {
    dif += (a[i] ^ b[i]);
  }
  return dif;
}
}).call(this,require("buffer").Buffer)
},{"./mgf":119,"./withPublic":122,"./xor":123,"bn.js":16,"browserify-rsa":39,"buffer":47,"create-hash":51,"parse-asn1":110}],121:[function(require,module,exports){
(function (Buffer){
var parseKeys = require('parse-asn1');
var randomBytes = require('randombytes');
var createHash = require('create-hash');
var mgf = require('./mgf');
var xor = require('./xor');
var bn = require('bn.js');
var withPublic = require('./withPublic');
var crt = require('browserify-rsa');

var constants = {
  RSA_PKCS1_OAEP_PADDING: 4,
  RSA_PKCS1_PADDIN: 1,
  RSA_NO_PADDING: 3
};

module.exports = function publicEncrypt(public_key, msg, reverse) {
  var padding;
  if (public_key.padding) {
    padding = public_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  var key = parseKeys(public_key);
  var paddedMsg;
  if (padding === 4) {
    paddedMsg = oaep(key, msg);
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    paddedMsg = new bn(msg);
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus');
    }
  } else {
    throw new Error('unknown padding');
  }
  if (reverse) {
    return crt(paddedMsg, key);
  } else {
    return withPublic(paddedMsg, key);
  }
};

function oaep(key, msg){
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long');
  }
  var ps = new Buffer(k - mLen - hLen2 - 2);
  ps.fill(0);
  var dblen = k - hLen - 1;
  var seed = randomBytes(hLen);
  var maskedDb = xor(Buffer.concat([iHash, ps, new Buffer([1]), msg], dblen), mgf(seed, dblen));
  var maskedSeed = xor(seed, mgf(maskedDb, hLen));
  return new bn(Buffer.concat([new Buffer([0]), maskedSeed, maskedDb], k));
}
function pkcs1(key, msg, reverse){
  var mLen = msg.length;
  var k = key.modulus.byteLength();
  if (mLen > k - 11) {
    throw new Error('message too long');
  }
  var ps;
  if (reverse) {
    ps = new Buffer(k - mLen - 3);
    ps.fill(0xff);
  } else {
    ps = nonZero(k - mLen - 3);
  }
  return new bn(Buffer.concat([new Buffer([0, reverse?1:2]), ps, new Buffer([0]), msg], k));
}
function nonZero(len, crypto) {
  var out = new Buffer(len);
  var i = 0;
  var cache = randomBytes(len*2);
  var cur = 0;
  var num;
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len*2);
      cur = 0;
    }
    num = cache[cur++];
    if (num) {
      out[i++] = num;
    }
  }
  return out;
}
}).call(this,require("buffer").Buffer)
},{"./mgf":119,"./withPublic":122,"./xor":123,"bn.js":16,"browserify-rsa":39,"buffer":47,"create-hash":51,"parse-asn1":110,"randombytes":124}],122:[function(require,module,exports){
(function (Buffer){
var bn = require('bn.js');
function withPublic(paddedMsg, key) {
  return new Buffer(paddedMsg
    .toRed(bn.mont(key.modulus))
    .redPow(new bn(key.publicExponent))
    .fromRed()
    .toArray());
}

module.exports = withPublic;
}).call(this,require("buffer").Buffer)
},{"bn.js":16,"buffer":47}],123:[function(require,module,exports){
module.exports = function xor(a, b) {
  var len = a.length;
  var i = -1;
  while (++i < len) {
    a[i] ^= b[i];
  }
  return a
};
},{}],124:[function(require,module,exports){
(function (process,global){
'use strict'

function oldBrowser () {
  throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11')
}

var Buffer = require('safe-buffer').Buffer
var crypto = global.crypto || global.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > 65536) throw new Error('requested too many random bytes')
  // in case browserify  isn't using the Uint8Array version
  var rawBytes = new global.Uint8Array(size)

  // This will not work in older browsers.
  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
  if (size > 0) {  // getRandomValues fails on IE if size == 0
    crypto.getRandomValues(rawBytes)
  }

  // XXX: phantomjs doesn't like a buffer being passed here
  var bytes = Buffer.from(rawBytes.buffer)

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":117,"safe-buffer":140}],125:[function(require,module,exports){
(function (process,global){
'use strict'

function oldBrowser () {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
}
var safeBuffer = require('safe-buffer')
var randombytes = require('randombytes')
var Buffer = safeBuffer.Buffer
var kBufferMaxLength = safeBuffer.kMaxLength
var crypto = global.crypto || global.msCrypto
var kMaxUint32 = Math.pow(2, 32) - 1
function assertOffset (offset, length) {
  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare
    throw new TypeError('offset must be a number')
  }

  if (offset > kMaxUint32 || offset < 0) {
    throw new TypeError('offset must be a uint32')
  }

  if (offset > kBufferMaxLength || offset > length) {
    throw new RangeError('offset out of range')
  }
}

function assertSize (size, offset, length) {
  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare
    throw new TypeError('size must be a number')
  }

  if (size > kMaxUint32 || size < 0) {
    throw new TypeError('size must be a uint32')
  }

  if (size + offset > length || size > kBufferMaxLength) {
    throw new RangeError('buffer too small')
  }
}
if ((crypto && crypto.getRandomValues) || !process.browser) {
  exports.randomFill = randomFill
  exports.randomFillSync = randomFillSync
} else {
  exports.randomFill = oldBrowser
  exports.randomFillSync = oldBrowser
}
function randomFill (buf, offset, size, cb) {
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  if (typeof offset === 'function') {
    cb = offset
    offset = 0
    size = buf.length
  } else if (typeof size === 'function') {
    cb = size
    size = buf.length - offset
  } else if (typeof cb !== 'function') {
    throw new TypeError('"cb" argument must be a function')
  }
  assertOffset(offset, buf.length)
  assertSize(size, offset, buf.length)
  return actualFill(buf, offset, size, cb)
}

function actualFill (buf, offset, size, cb) {
  if (process.browser) {
    var ourBuf = buf.buffer
    var uint = new Uint8Array(ourBuf, offset, size)
    crypto.getRandomValues(uint)
    if (cb) {
      process.nextTick(function () {
        cb(null, buf)
      })
      return
    }
    return buf
  }
  if (cb) {
    randombytes(size, function (err, bytes) {
      if (err) {
        return cb(err)
      }
      bytes.copy(buf, offset)
      cb(null, buf)
    })
    return
  }
  var bytes = randombytes(size)
  bytes.copy(buf, offset)
  return buf
}
function randomFillSync (buf, offset, size) {
  if (typeof offset === 'undefined') {
    offset = 0
  }
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  assertOffset(offset, buf.length)

  if (size === undefined) size = buf.length - offset

  assertSize(size, offset, buf.length)

  return actualFill(buf, offset, size)
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":117,"randombytes":124,"safe-buffer":140}],126:[function(require,module,exports){
module.exports = require('./lib/_stream_duplex.js');

},{"./lib/_stream_duplex.js":127}],127:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

{
  // avoid scope creep, the keys array can then be collected
  var keys = objectKeys(Writable.prototype);
  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  pna.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  pna.nextTick(cb, err);
};
},{"./_stream_readable":129,"./_stream_writable":131,"core-util-is":49,"inherits":99,"process-nextick-args":116}],128:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":130,"core-util-is":49,"inherits":99}],129:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = require('events').EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var debugUtil = require('util');
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = require('./internal/streams/BufferList');
var destroyImpl = require('./internal/streams/destroy');
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var readableHwm = options.readableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    pna.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        pna.nextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    pna.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;

  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._readableState.highWaterMark;
  }
});

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    pna.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./_stream_duplex":127,"./internal/streams/BufferList":132,"./internal/streams/destroy":133,"./internal/streams/stream":134,"_process":117,"core-util-is":49,"events":82,"inherits":99,"isarray":101,"process-nextick-args":116,"safe-buffer":140,"string_decoder/":150,"util":18}],130:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return this.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);

  cb(er);

  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function') {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this2 = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this2.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}
},{"./_stream_duplex":127,"core-util-is":49,"inherits":99}],131:[function(require,module,exports){
(function (process,global,setImmediate){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.

'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

var destroyImpl = require('./internal/streams/destroy');

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var writableHwm = options.writableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  pna.nextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    pna.nextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    pna.nextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    pna.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      pna.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("timers").setImmediate)
},{"./_stream_duplex":127,"./internal/streams/destroy":133,"./internal/streams/stream":134,"_process":117,"core-util-is":49,"inherits":99,"process-nextick-args":116,"safe-buffer":140,"timers":151,"util-deprecate":152}],132:[function(require,module,exports){
'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = require('safe-buffer').Buffer;
var util = require('util');

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

if (util && util.inspect && util.inspect.custom) {
  module.exports.prototype[util.inspect.custom] = function () {
    var obj = util.inspect({ length: this.length });
    return this.constructor.name + ' ' + obj;
  };
}
},{"safe-buffer":140,"util":18}],133:[function(require,module,exports){
'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      pna.nextTick(emitErrorNT, this, err);
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      pna.nextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });

  return this;
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};
},{"process-nextick-args":116}],134:[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":82}],135:[function(require,module,exports){
module.exports = require('./readable').PassThrough

},{"./readable":136}],136:[function(require,module,exports){
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

},{"./lib/_stream_duplex.js":127,"./lib/_stream_passthrough.js":128,"./lib/_stream_readable.js":129,"./lib/_stream_transform.js":130,"./lib/_stream_writable.js":131}],137:[function(require,module,exports){
module.exports = require('./readable').Transform

},{"./readable":136}],138:[function(require,module,exports){
module.exports = require('./lib/_stream_writable.js');

},{"./lib/_stream_writable.js":131}],139:[function(require,module,exports){
'use strict'
var Buffer = require('buffer').Buffer
var inherits = require('inherits')
var HashBase = require('hash-base')

var ARRAY16 = new Array(16)

var zl = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
]

var zr = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
]

var sl = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
]

var sr = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
]

var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]
var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]

function RIPEMD160 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0
}

inherits(RIPEMD160, HashBase)

RIPEMD160.prototype._update = function () {
  var words = ARRAY16
  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)

  var al = this._a | 0
  var bl = this._b | 0
  var cl = this._c | 0
  var dl = this._d | 0
  var el = this._e | 0

  var ar = this._a | 0
  var br = this._b | 0
  var cr = this._c | 0
  var dr = this._d | 0
  var er = this._e | 0

  // computation
  for (var i = 0; i < 80; i += 1) {
    var tl
    var tr
    if (i < 16) {
      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])
      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])
    } else if (i < 32) {
      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])
      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])
    } else if (i < 48) {
      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])
      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])
    } else if (i < 64) {
      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])
      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])
    } else { // if (i<80) {
      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])
      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])
    }

    al = el
    el = dl
    dl = rotl(cl, 10)
    cl = bl
    bl = tl

    ar = er
    er = dr
    dr = rotl(cr, 10)
    cr = br
    br = tr
  }

  // update state
  var t = (this._b + cl + dr) | 0
  this._b = (this._c + dl + er) | 0
  this._c = (this._d + el + ar) | 0
  this._d = (this._e + al + br) | 0
  this._e = (this._a + bl + cr) | 0
  this._a = t
}

RIPEMD160.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  buffer.writeInt32LE(this._e, 16)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fn1 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
}

function fn2 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
}

function fn3 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
}

function fn4 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
}

function fn5 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
}

module.exports = RIPEMD160

},{"buffer":47,"hash-base":84,"inherits":99}],140:[function(require,module,exports){
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":47}],141:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = Buffer.alloc(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = Buffer.from(data, enc)
  }

  var block = this._block
  var blockSize = this._blockSize
  var length = data.length
  var accum = this._len

  for (var offset = 0; offset < length;) {
    var assigned = accum % blockSize
    var remainder = Math.min(length - offset, blockSize - assigned)

    for (var i = 0; i < remainder; i++) {
      block[assigned + i] = data[offset + i]
    }

    accum += remainder
    offset += remainder

    if ((accum % blockSize) === 0) {
      this._update(block)
    }
  }

  this._len += length
  return this
}

Hash.prototype.digest = function (enc) {
  var rem = this._len % this._blockSize

  this._block[rem] = 0x80

  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
  this._block.fill(0, rem + 1)

  if (rem >= this._finalSize) {
    this._update(this._block)
    this._block.fill(0)
  }

  var bits = this._len * 8

  // uint32
  if (bits <= 0xffffffff) {
    this._block.writeUInt32BE(bits, this._blockSize - 4)

  // uint64
  } else {
    var lowBits = (bits & 0xffffffff) >>> 0
    var highBits = (bits - lowBits) / 0x100000000

    this._block.writeUInt32BE(highBits, this._blockSize - 8)
    this._block.writeUInt32BE(lowBits, this._blockSize - 4)
  }

  this._update(this._block)
  var hash = this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash

},{"safe-buffer":140}],142:[function(require,module,exports){
var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = require('./sha')
exports.sha1 = require('./sha1')
exports.sha224 = require('./sha224')
exports.sha256 = require('./sha256')
exports.sha384 = require('./sha384')
exports.sha512 = require('./sha512')

},{"./sha":143,"./sha1":144,"./sha224":145,"./sha256":146,"./sha384":147,"./sha512":148}],143:[function(require,module,exports){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha

},{"./hash":141,"inherits":99,"safe-buffer":140}],144:[function(require,module,exports){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1

},{"./hash":141,"inherits":99,"safe-buffer":140}],145:[function(require,module,exports){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Sha256 = require('./sha256')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = Buffer.allocUnsafe(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224

},{"./hash":141,"./sha256":146,"inherits":99,"safe-buffer":140}],146:[function(require,module,exports){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = Buffer.allocUnsafe(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256

},{"./hash":141,"inherits":99,"safe-buffer":140}],147:[function(require,module,exports){
var inherits = require('inherits')
var SHA512 = require('./sha512')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = Buffer.allocUnsafe(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384

},{"./hash":141,"./sha512":148,"inherits":99,"safe-buffer":140}],148:[function(require,module,exports){
var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = Buffer.allocUnsafe(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512

},{"./hash":141,"inherits":99,"safe-buffer":140}],149:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":82,"inherits":99,"readable-stream/duplex.js":126,"readable-stream/passthrough.js":135,"readable-stream/readable.js":136,"readable-stream/transform.js":137,"readable-stream/writable.js":138}],150:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":140}],151:[function(require,module,exports){
(function (setImmediate,clearImmediate){
var nextTick = require('process/browser.js').nextTick;
var apply = Function.prototype.apply;
var slice = Array.prototype.slice;
var immediateIds = {};
var nextImmediateId = 0;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) { timeout.close(); };

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// That's not how node.js implements it but the exposed api is the same.
exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
  var id = nextImmediateId++;
  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

  immediateIds[id] = true;

  nextTick(function onNextTick() {
    if (immediateIds[id]) {
      // fn.call() is faster so we optimize for the common use-case
      // @see http://jsperf.com/call-apply-segu
      if (args) {
        fn.apply(null, args);
      } else {
        fn.call(null);
      }
      // Prevent ids from leaking
      exports.clearImmediate(id);
    }
  });

  return id;
};

exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
  delete immediateIds[id];
};
}).call(this,require("timers").setImmediate,require("timers").clearImmediate)
},{"process/browser.js":117,"timers":151}],152:[function(require,module,exports){
(function (global){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],153:[function(require,module,exports){
var indexOf = function (xs, item) {
    if (xs.indexOf) return xs.indexOf(item);
    else for (var i = 0; i < xs.length; i++) {
        if (xs[i] === item) return i;
    }
    return -1;
};
var Object_keys = function (obj) {
    if (Object.keys) return Object.keys(obj)
    else {
        var res = [];
        for (var key in obj) res.push(key)
        return res;
    }
};

var forEach = function (xs, fn) {
    if (xs.forEach) return xs.forEach(fn)
    else for (var i = 0; i < xs.length; i++) {
        fn(xs[i], i, xs);
    }
};

var defineProp = (function() {
    try {
        Object.defineProperty({}, '_', {});
        return function(obj, name, value) {
            Object.defineProperty(obj, name, {
                writable: true,
                enumerable: false,
                configurable: true,
                value: value
            })
        };
    } catch(e) {
        return function(obj, name, value) {
            obj[name] = value;
        };
    }
}());

var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',
'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',
'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',
'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',
'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

function Context() {}
Context.prototype = {};

var Script = exports.Script = function NodeScript (code) {
    if (!(this instanceof Script)) return new Script(code);
    this.code = code;
};

Script.prototype.runInContext = function (context) {
    if (!(context instanceof Context)) {
        throw new TypeError("needs a 'context' argument.");
    }
    
    var iframe = document.createElement('iframe');
    if (!iframe.style) iframe.style = {};
    iframe.style.display = 'none';
    
    document.body.appendChild(iframe);
    
    var win = iframe.contentWindow;
    var wEval = win.eval, wExecScript = win.execScript;

    if (!wEval && wExecScript) {
        // win.eval() magically appears when this is called in IE:
        wExecScript.call(win, 'null');
        wEval = win.eval;
    }
    
    forEach(Object_keys(context), function (key) {
        win[key] = context[key];
    });
    forEach(globals, function (key) {
        if (context[key]) {
            win[key] = context[key];
        }
    });
    
    var winKeys = Object_keys(win);

    var res = wEval.call(win, this.code);
    
    forEach(Object_keys(win), function (key) {
        // Avoid copying circular objects like `top` and `window` by only
        // updating existing context properties or new properties in the `win`
        // that was only introduced after the eval.
        if (key in context || indexOf(winKeys, key) === -1) {
            context[key] = win[key];
        }
    });

    forEach(globals, function (key) {
        if (!(key in context)) {
            defineProp(context, key, win[key]);
        }
    });
    
    document.body.removeChild(iframe);
    
    return res;
};

Script.prototype.runInThisContext = function () {
    return eval(this.code); // maybe...
};

Script.prototype.runInNewContext = function (context) {
    var ctx = Script.createContext(context);
    var res = this.runInContext(ctx);

    if (context) {
        forEach(Object_keys(ctx), function (key) {
            context[key] = ctx[key];
        });
    }

    return res;
};

forEach(Object_keys(Script.prototype), function (name) {
    exports[name] = Script[name] = function (code) {
        var s = Script(code);
        return s[name].apply(s, [].slice.call(arguments, 1));
    };
});

exports.isContext = function (context) {
    return context instanceof Context;
};

exports.createScript = function (code) {
    return exports.Script(code);
};

exports.createContext = Script.createContext = function (context) {
    var copy = new Context();
    if(typeof context === 'object') {
        forEach(Object_keys(context), function (key) {
            copy[key] = context[key];
        });
    }
    return copy;
};

},{}],154:[function(require,module,exports){
const VirgilCrypto =require('virgil-crypto');
const crypto = require('crypto');
const bip39 = require('bip39');
const Cryptr = require('cryptr');
const secrets = require('secret-sharing.js');
const virgilCrypto = new VirgilCrypto.VirgilCrypto();



function mnemonic(){
var account = {};
var mnemonic = bip39.generateMnemonic();
account.mnemonic = mnemonic;

var seed = bip39.mnemonicToSeedHex(mnemonic);
account.seed = seed;

const keyPair = virgilCrypto.generateKeysFromKeyMaterial(seed);

var privateKeyData = virgilCrypto.exportPrivateKey(keyPair.privateKey);
privateKeyData = privateKeyData.toString('base64');
account.privateKey = privateKeyData;


var hash = crypto.createHash('sha256');

hash.update(privateKeyData);

var privateKeyHash = hash.digest('hex');
account.privateKeyHash = privateKeyHash;


var publicKeyData = virgilCrypto.exportPublicKey(keyPair.publicKey);
publicKeyData = publicKeyData.toString('base64');
account.publicKey = publicKeyData;

return account;
}


window.mnemonic = mnemonic;

function getNewKeys(){
var account = {};
var mnemonic = bip39.generateMnemonic();
account.mnemonic = mnemonic;

var seed = bip39.mnemonicToSeedHex(mnemonic);
account.seed = seed;

const keyPair = virgilCrypto.generateKeysFromKeyMaterial(seed);

var privateKeyData = virgilCrypto.exportPrivateKey(keyPair.privateKey);
privateKeyData = privateKeyData.toString('base64');
account.privateKey = privateKeyData;


var hash = crypto.createHash('sha256');

hash.update(privateKeyData);

var privateKeyHash = hash.digest('hex');
account.privateKeyHash = privateKeyHash;


var publicKeyData = virgilCrypto.exportPublicKey(keyPair.publicKey);
publicKeyData = publicKeyData.toString('base64');
account.publicKey = publicKeyData;

return account;
}


window.getNewKeys = getNewKeys;



function getSecretParts(){

  var accountKeys = JSON.parse(localStorage.accountKeys);

  var mnemonic = accountKeys.mnemonic;

  const cryptr = new Cryptr('myTotalySecretKey');
  const encryptedString = cryptr.encrypt(mnemonic);

  var shares = secrets.share(encryptedString, 5, 3);

  return shares;
}

window.getSecretParts = getSecretParts;

function getOriginalMnemonic(shares){
  const cryptr = new Cryptr('myTotalySecretKey');

  var comb = secrets.combine(shares);
  var shares = cryptr.decrypt(comb)


  return shares;
}

window.getOriginalMnemonic = getOriginalMnemonic;


function getEncrytedKeydata(public_key , secret){

  var public_key =  virgilCrypto.importPublicKey(public_key);
  var accountKeys = JSON.parse(localStorage.accountKeys);
  // prepare a message
  var messageToEncrypt = {};
  messageToEncrypt.user_public_key = accountKeys.publicKey;
  messageToEncrypt.secret = secret;

  messageToEncrypt = JSON.stringify(messageToEncrypt);

  // encrypt the message
  var encryptedData = virgilCrypto.encrypt(messageToEncrypt, public_key);
  // encryptedData is a NodeJS Buffer (or polyfill if in the browser)
  encryptedData =  encryptedData.toString('base64');

  return encryptedData;


}

window.getEncrytedKeydata = getEncrytedKeydata;


function getEncrytedRecoverydata(public_key , secret){

  var public_key =  virgilCrypto.importPublicKey(public_key);

  // encrypt the message
  var encryptedData = virgilCrypto.encrypt(secret, public_key);
  // encryptedData is a NodeJS Buffer (or polyfill if in the browser)
  encryptedData =  encryptedData.toString('base64');

  return encryptedData;


}

window.getEncrytedRecoverydata = getEncrytedRecoverydata;


function getDecrypteddata(data){

  var accountKeys = JSON.parse(localStorage.accountKeys);
  var privateKey =  virgilCrypto.importPrivateKey(accountKeys.privateKey);

  // decrypt the encrypted data using a private key
  const decryptedData = virgilCrypto.decrypt(data, privateKey);

  // convert Buffer to string
  const decryptedMessage = decryptedData.toString('utf8');

  return decryptedMessage;


}

window.getDecrypteddata = getDecrypteddata;

function getRecoveryDecrypteddata(data){

  var newAccountKeys =  JSON.parse(localStorage.newAccountKeys);
  var privateKey =  virgilCrypto.importPrivateKey(newAccountKeys.privateKey);

  // decrypt the encrypted data using a private key
  const decryptedData = virgilCrypto.decrypt(data, privateKey);

  // convert Buffer to string
  const decryptedMessage = decryptedData.toString('utf8');

  return decryptedMessage;


}

window.getRecoveryDecrypteddata = getRecoveryDecrypteddata;


function getKeyPair(mnemonic){
  var account = {};

  account.mnemonic = mnemonic;

  var seed = bip39.mnemonicToSeedHex(mnemonic);
  account.seed = seed;

  const keyPair = virgilCrypto.generateKeysFromKeyMaterial(seed);

  var privateKeyData = virgilCrypto.exportPrivateKey(keyPair.privateKey);
  privateKeyData = privateKeyData.toString('base64');
  account.privateKey = privateKeyData;


  var hash = crypto.createHash('sha256');

  hash.update(privateKeyData);

  var privateKeyHash = hash.digest('hex');
  account.privateKeyHash = privateKeyHash;


  var publicKeyData = virgilCrypto.exportPublicKey(keyPair.publicKey);
  publicKeyData = publicKeyData.toString('base64');
  account.publicKey = publicKeyData;

  return account;
}

window.getKeyPair = getKeyPair;


},{"bip39":155,"crypto":55,"cryptr":167,"secret-sharing.js":179,"virgil-crypto":189}],155:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var createHash = require('create-hash')
var pbkdf2 = require('pbkdf2').pbkdf2Sync
var randomBytes = require('randombytes')

// use unorm until String.prototype.normalize gets better browser support
var unorm = require('unorm')

var CHINESE_SIMPLIFIED_WORDLIST = require('./wordlists/chinese_simplified.json')
var CHINESE_TRADITIONAL_WORDLIST = require('./wordlists/chinese_traditional.json')
var ENGLISH_WORDLIST = require('./wordlists/english.json')
var FRENCH_WORDLIST = require('./wordlists/french.json')
var ITALIAN_WORDLIST = require('./wordlists/italian.json')
var JAPANESE_WORDLIST = require('./wordlists/japanese.json')
var KOREAN_WORDLIST = require('./wordlists/korean.json')
var SPANISH_WORDLIST = require('./wordlists/spanish.json')
var DEFAULT_WORDLIST = ENGLISH_WORDLIST

var INVALID_MNEMONIC = 'Invalid mnemonic'
var INVALID_ENTROPY = 'Invalid entropy'
var INVALID_CHECKSUM = 'Invalid mnemonic checksum'

function lpad (str, padString, length) {
  while (str.length < length) str = padString + str
  return str
}

function binaryToByte (bin) {
  return parseInt(bin, 2)
}

function bytesToBinary (bytes) {
  return bytes.map(function (x) {
    return lpad(x.toString(2), '0', 8)
  }).join('')
}

function deriveChecksumBits (entropyBuffer) {
  var ENT = entropyBuffer.length * 8
  var CS = ENT / 32
  var hash = createHash('sha256').update(entropyBuffer).digest()

  return bytesToBinary([].slice.call(hash)).slice(0, CS)
}

function salt (password) {
  return 'mnemonic' + (password || '')
}

function mnemonicToSeed (mnemonic, password) {
  var mnemonicBuffer = Buffer.from(unorm.nfkd(mnemonic), 'utf8')
  var saltBuffer = Buffer.from(salt(unorm.nfkd(password)), 'utf8')

  return pbkdf2(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512')
}

function mnemonicToSeedHex (mnemonic, password) {
  return mnemonicToSeed(mnemonic, password).toString('hex')
}

function mnemonicToEntropy (mnemonic, wordlist) {
  wordlist = wordlist || DEFAULT_WORDLIST

  var words = unorm.nfkd(mnemonic).split(' ')
  if (words.length % 3 !== 0) throw new Error(INVALID_MNEMONIC)

  // convert word indices to 11 bit binary strings
  var bits = words.map(function (word) {
    var index = wordlist.indexOf(word)
    if (index === -1) throw new Error(INVALID_MNEMONIC)

    return lpad(index.toString(2), '0', 11)
  }).join('')

  // split the binary string into ENT/CS
  var dividerIndex = Math.floor(bits.length / 33) * 32
  var entropyBits = bits.slice(0, dividerIndex)
  var checksumBits = bits.slice(dividerIndex)

  // calculate the checksum and compare
  var entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte)
  if (entropyBytes.length < 16) throw new Error(INVALID_ENTROPY)
  if (entropyBytes.length > 32) throw new Error(INVALID_ENTROPY)
  if (entropyBytes.length % 4 !== 0) throw new Error(INVALID_ENTROPY)

  var entropy = Buffer.from(entropyBytes)
  var newChecksum = deriveChecksumBits(entropy)
  if (newChecksum !== checksumBits) throw new Error(INVALID_CHECKSUM)

  return entropy.toString('hex')
}

function entropyToMnemonic (entropy, wordlist) {
  if (!Buffer.isBuffer(entropy)) entropy = Buffer.from(entropy, 'hex')
  wordlist = wordlist || DEFAULT_WORDLIST

  // 128 <= ENT <= 256
  if (entropy.length < 16) throw new TypeError(INVALID_ENTROPY)
  if (entropy.length > 32) throw new TypeError(INVALID_ENTROPY)
  if (entropy.length % 4 !== 0) throw new TypeError(INVALID_ENTROPY)

  var entropyBits = bytesToBinary([].slice.call(entropy))
  var checksumBits = deriveChecksumBits(entropy)

  var bits = entropyBits + checksumBits
  var chunks = bits.match(/(.{1,11})/g)
  var words = chunks.map(function (binary) {
    var index = binaryToByte(binary)
    return wordlist[index]
  })

  return wordlist === JAPANESE_WORDLIST ? words.join('\u3000') : words.join(' ')
}

function generateMnemonic (strength, rng, wordlist) {
  strength = strength || 128
  if (strength % 32 !== 0) throw new TypeError(INVALID_ENTROPY)
  rng = rng || randomBytes

  return entropyToMnemonic(rng(strength / 8), wordlist)
}

function validateMnemonic (mnemonic, wordlist) {
  try {
    mnemonicToEntropy(mnemonic, wordlist)
  } catch (e) {
    return false
  }

  return true
}

module.exports = {
  mnemonicToSeed: mnemonicToSeed,
  mnemonicToSeedHex: mnemonicToSeedHex,
  mnemonicToEntropy: mnemonicToEntropy,
  entropyToMnemonic: entropyToMnemonic,
  generateMnemonic: generateMnemonic,
  validateMnemonic: validateMnemonic,
  wordlists: {
    EN: ENGLISH_WORDLIST,
    JA: JAPANESE_WORDLIST,

    chinese_simplified: CHINESE_SIMPLIFIED_WORDLIST,
    chinese_traditional: CHINESE_TRADITIONAL_WORDLIST,
    english: ENGLISH_WORDLIST,
    french: FRENCH_WORDLIST,
    italian: ITALIAN_WORDLIST,
    japanese: JAPANESE_WORDLIST,
    korean: KOREAN_WORDLIST,
    spanish: SPANISH_WORDLIST
  }
}

},{"./wordlists/chinese_simplified.json":156,"./wordlists/chinese_traditional.json":157,"./wordlists/english.json":158,"./wordlists/french.json":159,"./wordlists/italian.json":160,"./wordlists/japanese.json":161,"./wordlists/korean.json":162,"./wordlists/spanish.json":163,"create-hash":165,"pbkdf2":171,"randombytes":176,"safe-buffer":178,"unorm":188}],156:[function(require,module,exports){
module.exports=[
  "的",
  "一",
  "是",
  "在",
  "不",
  "了",
  "有",
  "和",
  "人",
  "这",
  "中",
  "大",
  "为",
  "上",
  "个",
  "国",
  "我",
  "以",
  "要",
  "他",
  "时",
  "来",
  "用",
  "们",
  "生",
  "到",
  "作",
  "地",
  "于",
  "出",
  "就",
  "分",
  "对",
  "成",
  "会",
  "可",
  "主",
  "发",
  "年",
  "动",
  "同",
  "工",
  "也",
  "能",
  "下",
  "过",
  "子",
  "说",
  "产",
  "种",
  "面",
  "而",
  "方",
  "后",
  "多",
  "定",
  "行",
  "学",
  "法",
  "所",
  "民",
  "得",
  "经",
  "十",
  "三",
  "之",
  "进",
  "着",
  "等",
  "部",
  "度",
  "家",
  "电",
  "力",
  "里",
  "如",
  "水",
  "化",
  "高",
  "自",
  "二",
  "理",
  "起",
  "小",
  "物",
  "现",
  "实",
  "加",
  "量",
  "都",
  "两",
  "体",
  "制",
  "机",
  "当",
  "使",
  "点",
  "从",
  "业",
  "本",
  "去",
  "把",
  "性",
  "好",
  "应",
  "开",
  "它",
  "合",
  "还",
  "因",
  "由",
  "其",
  "些",
  "然",
  "前",
  "外",
  "天",
  "政",
  "四",
  "日",
  "那",
  "社",
  "义",
  "事",
  "平",
  "形",
  "相",
  "全",
  "表",
  "间",
  "样",
  "与",
  "关",
  "各",
  "重",
  "新",
  "线",
  "内",
  "数",
  "正",
  "心",
  "反",
  "你",
  "明",
  "看",
  "原",
  "又",
  "么",
  "利",
  "比",
  "或",
  "但",
  "质",
  "气",
  "第",
  "向",
  "道",
  "命",
  "此",
  "变",
  "条",
  "只",
  "没",
  "结",
  "解",
  "问",
  "意",
  "建",
  "月",
  "公",
  "无",
  "系",
  "军",
  "很",
  "情",
  "者",
  "最",
  "立",
  "代",
  "想",
  "已",
  "通",
  "并",
  "提",
  "直",
  "题",
  "党",
  "程",
  "展",
  "五",
  "果",
  "料",
  "象",
  "员",
  "革",
  "位",
  "入",
  "常",
  "文",
  "总",
  "次",
  "品",
  "式",
  "活",
  "设",
  "及",
  "管",
  "特",
  "件",
  "长",
  "求",
  "老",
  "头",
  "基",
  "资",
  "边",
  "流",
  "路",
  "级",
  "少",
  "图",
  "山",
  "统",
  "接",
  "知",
  "较",
  "将",
  "组",
  "见",
  "计",
  "别",
  "她",
  "手",
  "角",
  "期",
  "根",
  "论",
  "运",
  "农",
  "指",
  "几",
  "九",
  "区",
  "强",
  "放",
  "决",
  "西",
  "被",
  "干",
  "做",
  "必",
  "战",
  "先",
  "回",
  "则",
  "任",
  "取",
  "据",
  "处",
  "队",
  "南",
  "给",
  "色",
  "光",
  "门",
  "即",
  "保",
  "治",
  "北",
  "造",
  "百",
  "规",
  "热",
  "领",
  "七",
  "海",
  "口",
  "东",
  "导",
  "器",
  "压",
  "志",
  "世",
  "金",
  "增",
  "争",
  "济",
  "阶",
  "油",
  "思",
  "术",
  "极",
  "交",
  "受",
  "联",
  "什",
  "认",
  "六",
  "共",
  "权",
  "收",
  "证",
  "改",
  "清",
  "美",
  "再",
  "采",
  "转",
  "更",
  "单",
  "风",
  "切",
  "打",
  "白",
  "教",
  "速",
  "花",
  "带",
  "安",
  "场",
  "身",
  "车",
  "例",
  "真",
  "务",
  "具",
  "万",
  "每",
  "目",
  "至",
  "达",
  "走",
  "积",
  "示",
  "议",
  "声",
  "报",
  "斗",
  "完",
  "类",
  "八",
  "离",
  "华",
  "名",
  "确",
  "才",
  "科",
  "张",
  "信",
  "马",
  "节",
  "话",
  "米",
  "整",
  "空",
  "元",
  "况",
  "今",
  "集",
  "温",
  "传",
  "土",
  "许",
  "步",
  "群",
  "广",
  "石",
  "记",
  "需",
  "段",
  "研",
  "界",
  "拉",
  "林",
  "律",
  "叫",
  "且",
  "究",
  "观",
  "越",
  "织",
  "装",
  "影",
  "算",
  "低",
  "持",
  "音",
  "众",
  "书",
  "布",
  "复",
  "容",
  "儿",
  "须",
  "际",
  "商",
  "非",
  "验",
  "连",
  "断",
  "深",
  "难",
  "近",
  "矿",
  "千",
  "周",
  "委",
  "素",
  "技",
  "备",
  "半",
  "办",
  "青",
  "省",
  "列",
  "习",
  "响",
  "约",
  "支",
  "般",
  "史",
  "感",
  "劳",
  "便",
  "团",
  "往",
  "酸",
  "历",
  "市",
  "克",
  "何",
  "除",
  "消",
  "构",
  "府",
  "称",
  "太",
  "准",
  "精",
  "值",
  "号",
  "率",
  "族",
  "维",
  "划",
  "选",
  "标",
  "写",
  "存",
  "候",
  "毛",
  "亲",
  "快",
  "效",
  "斯",
  "院",
  "查",
  "江",
  "型",
  "眼",
  "王",
  "按",
  "格",
  "养",
  "易",
  "置",
  "派",
  "层",
  "片",
  "始",
  "却",
  "专",
  "状",
  "育",
  "厂",
  "京",
  "识",
  "适",
  "属",
  "圆",
  "包",
  "火",
  "住",
  "调",
  "满",
  "县",
  "局",
  "照",
  "参",
  "红",
  "细",
  "引",
  "听",
  "该",
  "铁",
  "价",
  "严",
  "首",
  "底",
  "液",
  "官",
  "德",
  "随",
  "病",
  "苏",
  "失",
  "尔",
  "死",
  "讲",
  "配",
  "女",
  "黄",
  "推",
  "显",
  "谈",
  "罪",
  "神",
  "艺",
  "呢",
  "席",
  "含",
  "企",
  "望",
  "密",
  "批",
  "营",
  "项",
  "防",
  "举",
  "球",
  "英",
  "氧",
  "势",
  "告",
  "李",
  "台",
  "落",
  "木",
  "帮",
  "轮",
  "破",
  "亚",
  "师",
  "围",
  "注",
  "远",
  "字",
  "材",
  "排",
  "供",
  "河",
  "态",
  "封",
  "另",
  "施",
  "减",
  "树",
  "溶",
  "怎",
  "止",
  "案",
  "言",
  "士",
  "均",
  "武",
  "固",
  "叶",
  "鱼",
  "波",
  "视",
  "仅",
  "费",
  "紧",
  "爱",
  "左",
  "章",
  "早",
  "朝",
  "害",
  "续",
  "轻",
  "服",
  "试",
  "食",
  "充",
  "兵",
  "源",
  "判",
  "护",
  "司",
  "足",
  "某",
  "练",
  "差",
  "致",
  "板",
  "田",
  "降",
  "黑",
  "犯",
  "负",
  "击",
  "范",
  "继",
  "兴",
  "似",
  "余",
  "坚",
  "曲",
  "输",
  "修",
  "故",
  "城",
  "夫",
  "够",
  "送",
  "笔",
  "船",
  "占",
  "右",
  "财",
  "吃",
  "富",
  "春",
  "职",
  "觉",
  "汉",
  "画",
  "功",
  "巴",
  "跟",
  "虽",
  "杂",
  "飞",
  "检",
  "吸",
  "助",
  "升",
  "阳",
  "互",
  "初",
  "创",
  "抗",
  "考",
  "投",
  "坏",
  "策",
  "古",
  "径",
  "换",
  "未",
  "跑",
  "留",
  "钢",
  "曾",
  "端",
  "责",
  "站",
  "简",
  "述",
  "钱",
  "副",
  "尽",
  "帝",
  "射",
  "草",
  "冲",
  "承",
  "独",
  "令",
  "限",
  "阿",
  "宣",
  "环",
  "双",
  "请",
  "超",
  "微",
  "让",
  "控",
  "州",
  "良",
  "轴",
  "找",
  "否",
  "纪",
  "益",
  "依",
  "优",
  "顶",
  "础",
  "载",
  "倒",
  "房",
  "突",
  "坐",
  "粉",
  "敌",
  "略",
  "客",
  "袁",
  "冷",
  "胜",
  "绝",
  "析",
  "块",
  "剂",
  "测",
  "丝",
  "协",
  "诉",
  "念",
  "陈",
  "仍",
  "罗",
  "盐",
  "友",
  "洋",
  "错",
  "苦",
  "夜",
  "刑",
  "移",
  "频",
  "逐",
  "靠",
  "混",
  "母",
  "短",
  "皮",
  "终",
  "聚",
  "汽",
  "村",
  "云",
  "哪",
  "既",
  "距",
  "卫",
  "停",
  "烈",
  "央",
  "察",
  "烧",
  "迅",
  "境",
  "若",
  "印",
  "洲",
  "刻",
  "括",
  "激",
  "孔",
  "搞",
  "甚",
  "室",
  "待",
  "核",
  "校",
  "散",
  "侵",
  "吧",
  "甲",
  "游",
  "久",
  "菜",
  "味",
  "旧",
  "模",
  "湖",
  "货",
  "损",
  "预",
  "阻",
  "毫",
  "普",
  "稳",
  "乙",
  "妈",
  "植",
  "息",
  "扩",
  "银",
  "语",
  "挥",
  "酒",
  "守",
  "拿",
  "序",
  "纸",
  "医",
  "缺",
  "雨",
  "吗",
  "针",
  "刘",
  "啊",
  "急",
  "唱",
  "误",
  "训",
  "愿",
  "审",
  "附",
  "获",
  "茶",
  "鲜",
  "粮",
  "斤",
  "孩",
  "脱",
  "硫",
  "肥",
  "善",
  "龙",
  "演",
  "父",
  "渐",
  "血",
  "欢",
  "械",
  "掌",
  "歌",
  "沙",
  "刚",
  "攻",
  "谓",
  "盾",
  "讨",
  "晚",
  "粒",
  "乱",
  "燃",
  "矛",
  "乎",
  "杀",
  "药",
  "宁",
  "鲁",
  "贵",
  "钟",
  "煤",
  "读",
  "班",
  "伯",
  "香",
  "介",
  "迫",
  "句",
  "丰",
  "培",
  "握",
  "兰",
  "担",
  "弦",
  "蛋",
  "沉",
  "假",
  "穿",
  "执",
  "答",
  "乐",
  "谁",
  "顺",
  "烟",
  "缩",
  "征",
  "脸",
  "喜",
  "松",
  "脚",
  "困",
  "异",
  "免",
  "背",
  "星",
  "福",
  "买",
  "染",
  "井",
  "概",
  "慢",
  "怕",
  "磁",
  "倍",
  "祖",
  "皇",
  "促",
  "静",
  "补",
  "评",
  "翻",
  "肉",
  "践",
  "尼",
  "衣",
  "宽",
  "扬",
  "棉",
  "希",
  "伤",
  "操",
  "垂",
  "秋",
  "宜",
  "氢",
  "套",
  "督",
  "振",
  "架",
  "亮",
  "末",
  "宪",
  "庆",
  "编",
  "牛",
  "触",
  "映",
  "雷",
  "销",
  "诗",
  "座",
  "居",
  "抓",
  "裂",
  "胞",
  "呼",
  "娘",
  "景",
  "威",
  "绿",
  "晶",
  "厚",
  "盟",
  "衡",
  "鸡",
  "孙",
  "延",
  "危",
  "胶",
  "屋",
  "乡",
  "临",
  "陆",
  "顾",
  "掉",
  "呀",
  "灯",
  "岁",
  "措",
  "束",
  "耐",
  "剧",
  "玉",
  "赵",
  "跳",
  "哥",
  "季",
  "课",
  "凯",
  "胡",
  "额",
  "款",
  "绍",
  "卷",
  "齐",
  "伟",
  "蒸",
  "殖",
  "永",
  "宗",
  "苗",
  "川",
  "炉",
  "岩",
  "弱",
  "零",
  "杨",
  "奏",
  "沿",
  "露",
  "杆",
  "探",
  "滑",
  "镇",
  "饭",
  "浓",
  "航",
  "怀",
  "赶",
  "库",
  "夺",
  "伊",
  "灵",
  "税",
  "途",
  "灭",
  "赛",
  "归",
  "召",
  "鼓",
  "播",
  "盘",
  "裁",
  "险",
  "康",
  "唯",
  "录",
  "菌",
  "纯",
  "借",
  "糖",
  "盖",
  "横",
  "符",
  "私",
  "努",
  "堂",
  "域",
  "枪",
  "润",
  "幅",
  "哈",
  "竟",
  "熟",
  "虫",
  "泽",
  "脑",
  "壤",
  "碳",
  "欧",
  "遍",
  "侧",
  "寨",
  "敢",
  "彻",
  "虑",
  "斜",
  "薄",
  "庭",
  "纳",
  "弹",
  "饲",
  "伸",
  "折",
  "麦",
  "湿",
  "暗",
  "荷",
  "瓦",
  "塞",
  "床",
  "筑",
  "恶",
  "户",
  "访",
  "塔",
  "奇",
  "透",
  "梁",
  "刀",
  "旋",
  "迹",
  "卡",
  "氯",
  "遇",
  "份",
  "毒",
  "泥",
  "退",
  "洗",
  "摆",
  "灰",
  "彩",
  "卖",
  "耗",
  "夏",
  "择",
  "忙",
  "铜",
  "献",
  "硬",
  "予",
  "繁",
  "圈",
  "雪",
  "函",
  "亦",
  "抽",
  "篇",
  "阵",
  "阴",
  "丁",
  "尺",
  "追",
  "堆",
  "雄",
  "迎",
  "泛",
  "爸",
  "楼",
  "避",
  "谋",
  "吨",
  "野",
  "猪",
  "旗",
  "累",
  "偏",
  "典",
  "馆",
  "索",
  "秦",
  "脂",
  "潮",
  "爷",
  "豆",
  "忽",
  "托",
  "惊",
  "塑",
  "遗",
  "愈",
  "朱",
  "替",
  "纤",
  "粗",
  "倾",
  "尚",
  "痛",
  "楚",
  "谢",
  "奋",
  "购",
  "磨",
  "君",
  "池",
  "旁",
  "碎",
  "骨",
  "监",
  "捕",
  "弟",
  "暴",
  "割",
  "贯",
  "殊",
  "释",
  "词",
  "亡",
  "壁",
  "顿",
  "宝",
  "午",
  "尘",
  "闻",
  "揭",
  "炮",
  "残",
  "冬",
  "桥",
  "妇",
  "警",
  "综",
  "招",
  "吴",
  "付",
  "浮",
  "遭",
  "徐",
  "您",
  "摇",
  "谷",
  "赞",
  "箱",
  "隔",
  "订",
  "男",
  "吹",
  "园",
  "纷",
  "唐",
  "败",
  "宋",
  "玻",
  "巨",
  "耕",
  "坦",
  "荣",
  "闭",
  "湾",
  "键",
  "凡",
  "驻",
  "锅",
  "救",
  "恩",
  "剥",
  "凝",
  "碱",
  "齿",
  "截",
  "炼",
  "麻",
  "纺",
  "禁",
  "废",
  "盛",
  "版",
  "缓",
  "净",
  "睛",
  "昌",
  "婚",
  "涉",
  "筒",
  "嘴",
  "插",
  "岸",
  "朗",
  "庄",
  "街",
  "藏",
  "姑",
  "贸",
  "腐",
  "奴",
  "啦",
  "惯",
  "乘",
  "伙",
  "恢",
  "匀",
  "纱",
  "扎",
  "辩",
  "耳",
  "彪",
  "臣",
  "亿",
  "璃",
  "抵",
  "脉",
  "秀",
  "萨",
  "俄",
  "网",
  "舞",
  "店",
  "喷",
  "纵",
  "寸",
  "汗",
  "挂",
  "洪",
  "贺",
  "闪",
  "柬",
  "爆",
  "烯",
  "津",
  "稻",
  "墙",
  "软",
  "勇",
  "像",
  "滚",
  "厘",
  "蒙",
  "芳",
  "肯",
  "坡",
  "柱",
  "荡",
  "腿",
  "仪",
  "旅",
  "尾",
  "轧",
  "冰",
  "贡",
  "登",
  "黎",
  "削",
  "钻",
  "勒",
  "逃",
  "障",
  "氨",
  "郭",
  "峰",
  "币",
  "港",
  "伏",
  "轨",
  "亩",
  "毕",
  "擦",
  "莫",
  "刺",
  "浪",
  "秘",
  "援",
  "株",
  "健",
  "售",
  "股",
  "岛",
  "甘",
  "泡",
  "睡",
  "童",
  "铸",
  "汤",
  "阀",
  "休",
  "汇",
  "舍",
  "牧",
  "绕",
  "炸",
  "哲",
  "磷",
  "绩",
  "朋",
  "淡",
  "尖",
  "启",
  "陷",
  "柴",
  "呈",
  "徒",
  "颜",
  "泪",
  "稍",
  "忘",
  "泵",
  "蓝",
  "拖",
  "洞",
  "授",
  "镜",
  "辛",
  "壮",
  "锋",
  "贫",
  "虚",
  "弯",
  "摩",
  "泰",
  "幼",
  "廷",
  "尊",
  "窗",
  "纲",
  "弄",
  "隶",
  "疑",
  "氏",
  "宫",
  "姐",
  "震",
  "瑞",
  "怪",
  "尤",
  "琴",
  "循",
  "描",
  "膜",
  "违",
  "夹",
  "腰",
  "缘",
  "珠",
  "穷",
  "森",
  "枝",
  "竹",
  "沟",
  "催",
  "绳",
  "忆",
  "邦",
  "剩",
  "幸",
  "浆",
  "栏",
  "拥",
  "牙",
  "贮",
  "礼",
  "滤",
  "钠",
  "纹",
  "罢",
  "拍",
  "咱",
  "喊",
  "袖",
  "埃",
  "勤",
  "罚",
  "焦",
  "潜",
  "伍",
  "墨",
  "欲",
  "缝",
  "姓",
  "刊",
  "饱",
  "仿",
  "奖",
  "铝",
  "鬼",
  "丽",
  "跨",
  "默",
  "挖",
  "链",
  "扫",
  "喝",
  "袋",
  "炭",
  "污",
  "幕",
  "诸",
  "弧",
  "励",
  "梅",
  "奶",
  "洁",
  "灾",
  "舟",
  "鉴",
  "苯",
  "讼",
  "抱",
  "毁",
  "懂",
  "寒",
  "智",
  "埔",
  "寄",
  "届",
  "跃",
  "渡",
  "挑",
  "丹",
  "艰",
  "贝",
  "碰",
  "拔",
  "爹",
  "戴",
  "码",
  "梦",
  "芽",
  "熔",
  "赤",
  "渔",
  "哭",
  "敬",
  "颗",
  "奔",
  "铅",
  "仲",
  "虎",
  "稀",
  "妹",
  "乏",
  "珍",
  "申",
  "桌",
  "遵",
  "允",
  "隆",
  "螺",
  "仓",
  "魏",
  "锐",
  "晓",
  "氮",
  "兼",
  "隐",
  "碍",
  "赫",
  "拨",
  "忠",
  "肃",
  "缸",
  "牵",
  "抢",
  "博",
  "巧",
  "壳",
  "兄",
  "杜",
  "讯",
  "诚",
  "碧",
  "祥",
  "柯",
  "页",
  "巡",
  "矩",
  "悲",
  "灌",
  "龄",
  "伦",
  "票",
  "寻",
  "桂",
  "铺",
  "圣",
  "恐",
  "恰",
  "郑",
  "趣",
  "抬",
  "荒",
  "腾",
  "贴",
  "柔",
  "滴",
  "猛",
  "阔",
  "辆",
  "妻",
  "填",
  "撤",
  "储",
  "签",
  "闹",
  "扰",
  "紫",
  "砂",
  "递",
  "戏",
  "吊",
  "陶",
  "伐",
  "喂",
  "疗",
  "瓶",
  "婆",
  "抚",
  "臂",
  "摸",
  "忍",
  "虾",
  "蜡",
  "邻",
  "胸",
  "巩",
  "挤",
  "偶",
  "弃",
  "槽",
  "劲",
  "乳",
  "邓",
  "吉",
  "仁",
  "烂",
  "砖",
  "租",
  "乌",
  "舰",
  "伴",
  "瓜",
  "浅",
  "丙",
  "暂",
  "燥",
  "橡",
  "柳",
  "迷",
  "暖",
  "牌",
  "秧",
  "胆",
  "详",
  "簧",
  "踏",
  "瓷",
  "谱",
  "呆",
  "宾",
  "糊",
  "洛",
  "辉",
  "愤",
  "竞",
  "隙",
  "怒",
  "粘",
  "乃",
  "绪",
  "肩",
  "籍",
  "敏",
  "涂",
  "熙",
  "皆",
  "侦",
  "悬",
  "掘",
  "享",
  "纠",
  "醒",
  "狂",
  "锁",
  "淀",
  "恨",
  "牲",
  "霸",
  "爬",
  "赏",
  "逆",
  "玩",
  "陵",
  "祝",
  "秒",
  "浙",
  "貌",
  "役",
  "彼",
  "悉",
  "鸭",
  "趋",
  "凤",
  "晨",
  "畜",
  "辈",
  "秩",
  "卵",
  "署",
  "梯",
  "炎",
  "滩",
  "棋",
  "驱",
  "筛",
  "峡",
  "冒",
  "啥",
  "寿",
  "译",
  "浸",
  "泉",
  "帽",
  "迟",
  "硅",
  "疆",
  "贷",
  "漏",
  "稿",
  "冠",
  "嫩",
  "胁",
  "芯",
  "牢",
  "叛",
  "蚀",
  "奥",
  "鸣",
  "岭",
  "羊",
  "凭",
  "串",
  "塘",
  "绘",
  "酵",
  "融",
  "盆",
  "锡",
  "庙",
  "筹",
  "冻",
  "辅",
  "摄",
  "袭",
  "筋",
  "拒",
  "僚",
  "旱",
  "钾",
  "鸟",
  "漆",
  "沈",
  "眉",
  "疏",
  "添",
  "棒",
  "穗",
  "硝",
  "韩",
  "逼",
  "扭",
  "侨",
  "凉",
  "挺",
  "碗",
  "栽",
  "炒",
  "杯",
  "患",
  "馏",
  "劝",
  "豪",
  "辽",
  "勃",
  "鸿",
  "旦",
  "吏",
  "拜",
  "狗",
  "埋",
  "辊",
  "掩",
  "饮",
  "搬",
  "骂",
  "辞",
  "勾",
  "扣",
  "估",
  "蒋",
  "绒",
  "雾",
  "丈",
  "朵",
  "姆",
  "拟",
  "宇",
  "辑",
  "陕",
  "雕",
  "偿",
  "蓄",
  "崇",
  "剪",
  "倡",
  "厅",
  "咬",
  "驶",
  "薯",
  "刷",
  "斥",
  "番",
  "赋",
  "奉",
  "佛",
  "浇",
  "漫",
  "曼",
  "扇",
  "钙",
  "桃",
  "扶",
  "仔",
  "返",
  "俗",
  "亏",
  "腔",
  "鞋",
  "棱",
  "覆",
  "框",
  "悄",
  "叔",
  "撞",
  "骗",
  "勘",
  "旺",
  "沸",
  "孤",
  "吐",
  "孟",
  "渠",
  "屈",
  "疾",
  "妙",
  "惜",
  "仰",
  "狠",
  "胀",
  "谐",
  "抛",
  "霉",
  "桑",
  "岗",
  "嘛",
  "衰",
  "盗",
  "渗",
  "脏",
  "赖",
  "涌",
  "甜",
  "曹",
  "阅",
  "肌",
  "哩",
  "厉",
  "烃",
  "纬",
  "毅",
  "昨",
  "伪",
  "症",
  "煮",
  "叹",
  "钉",
  "搭",
  "茎",
  "笼",
  "酷",
  "偷",
  "弓",
  "锥",
  "恒",
  "杰",
  "坑",
  "鼻",
  "翼",
  "纶",
  "叙",
  "狱",
  "逮",
  "罐",
  "络",
  "棚",
  "抑",
  "膨",
  "蔬",
  "寺",
  "骤",
  "穆",
  "冶",
  "枯",
  "册",
  "尸",
  "凸",
  "绅",
  "坯",
  "牺",
  "焰",
  "轰",
  "欣",
  "晋",
  "瘦",
  "御",
  "锭",
  "锦",
  "丧",
  "旬",
  "锻",
  "垄",
  "搜",
  "扑",
  "邀",
  "亭",
  "酯",
  "迈",
  "舒",
  "脆",
  "酶",
  "闲",
  "忧",
  "酚",
  "顽",
  "羽",
  "涨",
  "卸",
  "仗",
  "陪",
  "辟",
  "惩",
  "杭",
  "姚",
  "肚",
  "捉",
  "飘",
  "漂",
  "昆",
  "欺",
  "吾",
  "郎",
  "烷",
  "汁",
  "呵",
  "饰",
  "萧",
  "雅",
  "邮",
  "迁",
  "燕",
  "撒",
  "姻",
  "赴",
  "宴",
  "烦",
  "债",
  "帐",
  "斑",
  "铃",
  "旨",
  "醇",
  "董",
  "饼",
  "雏",
  "姿",
  "拌",
  "傅",
  "腹",
  "妥",
  "揉",
  "贤",
  "拆",
  "歪",
  "葡",
  "胺",
  "丢",
  "浩",
  "徽",
  "昂",
  "垫",
  "挡",
  "览",
  "贪",
  "慰",
  "缴",
  "汪",
  "慌",
  "冯",
  "诺",
  "姜",
  "谊",
  "凶",
  "劣",
  "诬",
  "耀",
  "昏",
  "躺",
  "盈",
  "骑",
  "乔",
  "溪",
  "丛",
  "卢",
  "抹",
  "闷",
  "咨",
  "刮",
  "驾",
  "缆",
  "悟",
  "摘",
  "铒",
  "掷",
  "颇",
  "幻",
  "柄",
  "惠",
  "惨",
  "佳",
  "仇",
  "腊",
  "窝",
  "涤",
  "剑",
  "瞧",
  "堡",
  "泼",
  "葱",
  "罩",
  "霍",
  "捞",
  "胎",
  "苍",
  "滨",
  "俩",
  "捅",
  "湘",
  "砍",
  "霞",
  "邵",
  "萄",
  "疯",
  "淮",
  "遂",
  "熊",
  "粪",
  "烘",
  "宿",
  "档",
  "戈",
  "驳",
  "嫂",
  "裕",
  "徙",
  "箭",
  "捐",
  "肠",
  "撑",
  "晒",
  "辨",
  "殿",
  "莲",
  "摊",
  "搅",
  "酱",
  "屏",
  "疫",
  "哀",
  "蔡",
  "堵",
  "沫",
  "皱",
  "畅",
  "叠",
  "阁",
  "莱",
  "敲",
  "辖",
  "钩",
  "痕",
  "坝",
  "巷",
  "饿",
  "祸",
  "丘",
  "玄",
  "溜",
  "曰",
  "逻",
  "彭",
  "尝",
  "卿",
  "妨",
  "艇",
  "吞",
  "韦",
  "怨",
  "矮",
  "歇"
]

},{}],157:[function(require,module,exports){
module.exports=[
  "的",
  "一",
  "是",
  "在",
  "不",
  "了",
  "有",
  "和",
  "人",
  "這",
  "中",
  "大",
  "為",
  "上",
  "個",
  "國",
  "我",
  "以",
  "要",
  "他",
  "時",
  "來",
  "用",
  "們",
  "生",
  "到",
  "作",
  "地",
  "於",
  "出",
  "就",
  "分",
  "對",
  "成",
  "會",
  "可",
  "主",
  "發",
  "年",
  "動",
  "同",
  "工",
  "也",
  "能",
  "下",
  "過",
  "子",
  "說",
  "產",
  "種",
  "面",
  "而",
  "方",
  "後",
  "多",
  "定",
  "行",
  "學",
  "法",
  "所",
  "民",
  "得",
  "經",
  "十",
  "三",
  "之",
  "進",
  "著",
  "等",
  "部",
  "度",
  "家",
  "電",
  "力",
  "裡",
  "如",
  "水",
  "化",
  "高",
  "自",
  "二",
  "理",
  "起",
  "小",
  "物",
  "現",
  "實",
  "加",
  "量",
  "都",
  "兩",
  "體",
  "制",
  "機",
  "當",
  "使",
  "點",
  "從",
  "業",
  "本",
  "去",
  "把",
  "性",
  "好",
  "應",
  "開",
  "它",
  "合",
  "還",
  "因",
  "由",
  "其",
  "些",
  "然",
  "前",
  "外",
  "天",
  "政",
  "四",
  "日",
  "那",
  "社",
  "義",
  "事",
  "平",
  "形",
  "相",
  "全",
  "表",
  "間",
  "樣",
  "與",
  "關",
  "各",
  "重",
  "新",
  "線",
  "內",
  "數",
  "正",
  "心",
  "反",
  "你",
  "明",
  "看",
  "原",
  "又",
  "麼",
  "利",
  "比",
  "或",
  "但",
  "質",
  "氣",
  "第",
  "向",
  "道",
  "命",
  "此",
  "變",
  "條",
  "只",
  "沒",
  "結",
  "解",
  "問",
  "意",
  "建",
  "月",
  "公",
  "無",
  "系",
  "軍",
  "很",
  "情",
  "者",
  "最",
  "立",
  "代",
  "想",
  "已",
  "通",
  "並",
  "提",
  "直",
  "題",
  "黨",
  "程",
  "展",
  "五",
  "果",
  "料",
  "象",
  "員",
  "革",
  "位",
  "入",
  "常",
  "文",
  "總",
  "次",
  "品",
  "式",
  "活",
  "設",
  "及",
  "管",
  "特",
  "件",
  "長",
  "求",
  "老",
  "頭",
  "基",
  "資",
  "邊",
  "流",
  "路",
  "級",
  "少",
  "圖",
  "山",
  "統",
  "接",
  "知",
  "較",
  "將",
  "組",
  "見",
  "計",
  "別",
  "她",
  "手",
  "角",
  "期",
  "根",
  "論",
  "運",
  "農",
  "指",
  "幾",
  "九",
  "區",
  "強",
  "放",
  "決",
  "西",
  "被",
  "幹",
  "做",
  "必",
  "戰",
  "先",
  "回",
  "則",
  "任",
  "取",
  "據",
  "處",
  "隊",
  "南",
  "給",
  "色",
  "光",
  "門",
  "即",
  "保",
  "治",
  "北",
  "造",
  "百",
  "規",
  "熱",
  "領",
  "七",
  "海",
  "口",
  "東",
  "導",
  "器",
  "壓",
  "志",
  "世",
  "金",
  "增",
  "爭",
  "濟",
  "階",
  "油",
  "思",
  "術",
  "極",
  "交",
  "受",
  "聯",
  "什",
  "認",
  "六",
  "共",
  "權",
  "收",
  "證",
  "改",
  "清",
  "美",
  "再",
  "採",
  "轉",
  "更",
  "單",
  "風",
  "切",
  "打",
  "白",
  "教",
  "速",
  "花",
  "帶",
  "安",
  "場",
  "身",
  "車",
  "例",
  "真",
  "務",
  "具",
  "萬",
  "每",
  "目",
  "至",
  "達",
  "走",
  "積",
  "示",
  "議",
  "聲",
  "報",
  "鬥",
  "完",
  "類",
  "八",
  "離",
  "華",
  "名",
  "確",
  "才",
  "科",
  "張",
  "信",
  "馬",
  "節",
  "話",
  "米",
  "整",
  "空",
  "元",
  "況",
  "今",
  "集",
  "溫",
  "傳",
  "土",
  "許",
  "步",
  "群",
  "廣",
  "石",
  "記",
  "需",
  "段",
  "研",
  "界",
  "拉",
  "林",
  "律",
  "叫",
  "且",
  "究",
  "觀",
  "越",
  "織",
  "裝",
  "影",
  "算",
  "低",
  "持",
  "音",
  "眾",
  "書",
  "布",
  "复",
  "容",
  "兒",
  "須",
  "際",
  "商",
  "非",
  "驗",
  "連",
  "斷",
  "深",
  "難",
  "近",
  "礦",
  "千",
  "週",
  "委",
  "素",
  "技",
  "備",
  "半",
  "辦",
  "青",
  "省",
  "列",
  "習",
  "響",
  "約",
  "支",
  "般",
  "史",
  "感",
  "勞",
  "便",
  "團",
  "往",
  "酸",
  "歷",
  "市",
  "克",
  "何",
  "除",
  "消",
  "構",
  "府",
  "稱",
  "太",
  "準",
  "精",
  "值",
  "號",
  "率",
  "族",
  "維",
  "劃",
  "選",
  "標",
  "寫",
  "存",
  "候",
  "毛",
  "親",
  "快",
  "效",
  "斯",
  "院",
  "查",
  "江",
  "型",
  "眼",
  "王",
  "按",
  "格",
  "養",
  "易",
  "置",
  "派",
  "層",
  "片",
  "始",
  "卻",
  "專",
  "狀",
  "育",
  "廠",
  "京",
  "識",
  "適",
  "屬",
  "圓",
  "包",
  "火",
  "住",
  "調",
  "滿",
  "縣",
  "局",
  "照",
  "參",
  "紅",
  "細",
  "引",
  "聽",
  "該",
  "鐵",
  "價",
  "嚴",
  "首",
  "底",
  "液",
  "官",
  "德",
  "隨",
  "病",
  "蘇",
  "失",
  "爾",
  "死",
  "講",
  "配",
  "女",
  "黃",
  "推",
  "顯",
  "談",
  "罪",
  "神",
  "藝",
  "呢",
  "席",
  "含",
  "企",
  "望",
  "密",
  "批",
  "營",
  "項",
  "防",
  "舉",
  "球",
  "英",
  "氧",
  "勢",
  "告",
  "李",
  "台",
  "落",
  "木",
  "幫",
  "輪",
  "破",
  "亞",
  "師",
  "圍",
  "注",
  "遠",
  "字",
  "材",
  "排",
  "供",
  "河",
  "態",
  "封",
  "另",
  "施",
  "減",
  "樹",
  "溶",
  "怎",
  "止",
  "案",
  "言",
  "士",
  "均",
  "武",
  "固",
  "葉",
  "魚",
  "波",
  "視",
  "僅",
  "費",
  "緊",
  "愛",
  "左",
  "章",
  "早",
  "朝",
  "害",
  "續",
  "輕",
  "服",
  "試",
  "食",
  "充",
  "兵",
  "源",
  "判",
  "護",
  "司",
  "足",
  "某",
  "練",
  "差",
  "致",
  "板",
  "田",
  "降",
  "黑",
  "犯",
  "負",
  "擊",
  "范",
  "繼",
  "興",
  "似",
  "餘",
  "堅",
  "曲",
  "輸",
  "修",
  "故",
  "城",
  "夫",
  "夠",
  "送",
  "筆",
  "船",
  "佔",
  "右",
  "財",
  "吃",
  "富",
  "春",
  "職",
  "覺",
  "漢",
  "畫",
  "功",
  "巴",
  "跟",
  "雖",
  "雜",
  "飛",
  "檢",
  "吸",
  "助",
  "昇",
  "陽",
  "互",
  "初",
  "創",
  "抗",
  "考",
  "投",
  "壞",
  "策",
  "古",
  "徑",
  "換",
  "未",
  "跑",
  "留",
  "鋼",
  "曾",
  "端",
  "責",
  "站",
  "簡",
  "述",
  "錢",
  "副",
  "盡",
  "帝",
  "射",
  "草",
  "衝",
  "承",
  "獨",
  "令",
  "限",
  "阿",
  "宣",
  "環",
  "雙",
  "請",
  "超",
  "微",
  "讓",
  "控",
  "州",
  "良",
  "軸",
  "找",
  "否",
  "紀",
  "益",
  "依",
  "優",
  "頂",
  "礎",
  "載",
  "倒",
  "房",
  "突",
  "坐",
  "粉",
  "敵",
  "略",
  "客",
  "袁",
  "冷",
  "勝",
  "絕",
  "析",
  "塊",
  "劑",
  "測",
  "絲",
  "協",
  "訴",
  "念",
  "陳",
  "仍",
  "羅",
  "鹽",
  "友",
  "洋",
  "錯",
  "苦",
  "夜",
  "刑",
  "移",
  "頻",
  "逐",
  "靠",
  "混",
  "母",
  "短",
  "皮",
  "終",
  "聚",
  "汽",
  "村",
  "雲",
  "哪",
  "既",
  "距",
  "衛",
  "停",
  "烈",
  "央",
  "察",
  "燒",
  "迅",
  "境",
  "若",
  "印",
  "洲",
  "刻",
  "括",
  "激",
  "孔",
  "搞",
  "甚",
  "室",
  "待",
  "核",
  "校",
  "散",
  "侵",
  "吧",
  "甲",
  "遊",
  "久",
  "菜",
  "味",
  "舊",
  "模",
  "湖",
  "貨",
  "損",
  "預",
  "阻",
  "毫",
  "普",
  "穩",
  "乙",
  "媽",
  "植",
  "息",
  "擴",
  "銀",
  "語",
  "揮",
  "酒",
  "守",
  "拿",
  "序",
  "紙",
  "醫",
  "缺",
  "雨",
  "嗎",
  "針",
  "劉",
  "啊",
  "急",
  "唱",
  "誤",
  "訓",
  "願",
  "審",
  "附",
  "獲",
  "茶",
  "鮮",
  "糧",
  "斤",
  "孩",
  "脫",
  "硫",
  "肥",
  "善",
  "龍",
  "演",
  "父",
  "漸",
  "血",
  "歡",
  "械",
  "掌",
  "歌",
  "沙",
  "剛",
  "攻",
  "謂",
  "盾",
  "討",
  "晚",
  "粒",
  "亂",
  "燃",
  "矛",
  "乎",
  "殺",
  "藥",
  "寧",
  "魯",
  "貴",
  "鐘",
  "煤",
  "讀",
  "班",
  "伯",
  "香",
  "介",
  "迫",
  "句",
  "豐",
  "培",
  "握",
  "蘭",
  "擔",
  "弦",
  "蛋",
  "沉",
  "假",
  "穿",
  "執",
  "答",
  "樂",
  "誰",
  "順",
  "煙",
  "縮",
  "徵",
  "臉",
  "喜",
  "松",
  "腳",
  "困",
  "異",
  "免",
  "背",
  "星",
  "福",
  "買",
  "染",
  "井",
  "概",
  "慢",
  "怕",
  "磁",
  "倍",
  "祖",
  "皇",
  "促",
  "靜",
  "補",
  "評",
  "翻",
  "肉",
  "踐",
  "尼",
  "衣",
  "寬",
  "揚",
  "棉",
  "希",
  "傷",
  "操",
  "垂",
  "秋",
  "宜",
  "氫",
  "套",
  "督",
  "振",
  "架",
  "亮",
  "末",
  "憲",
  "慶",
  "編",
  "牛",
  "觸",
  "映",
  "雷",
  "銷",
  "詩",
  "座",
  "居",
  "抓",
  "裂",
  "胞",
  "呼",
  "娘",
  "景",
  "威",
  "綠",
  "晶",
  "厚",
  "盟",
  "衡",
  "雞",
  "孫",
  "延",
  "危",
  "膠",
  "屋",
  "鄉",
  "臨",
  "陸",
  "顧",
  "掉",
  "呀",
  "燈",
  "歲",
  "措",
  "束",
  "耐",
  "劇",
  "玉",
  "趙",
  "跳",
  "哥",
  "季",
  "課",
  "凱",
  "胡",
  "額",
  "款",
  "紹",
  "卷",
  "齊",
  "偉",
  "蒸",
  "殖",
  "永",
  "宗",
  "苗",
  "川",
  "爐",
  "岩",
  "弱",
  "零",
  "楊",
  "奏",
  "沿",
  "露",
  "桿",
  "探",
  "滑",
  "鎮",
  "飯",
  "濃",
  "航",
  "懷",
  "趕",
  "庫",
  "奪",
  "伊",
  "靈",
  "稅",
  "途",
  "滅",
  "賽",
  "歸",
  "召",
  "鼓",
  "播",
  "盤",
  "裁",
  "險",
  "康",
  "唯",
  "錄",
  "菌",
  "純",
  "借",
  "糖",
  "蓋",
  "橫",
  "符",
  "私",
  "努",
  "堂",
  "域",
  "槍",
  "潤",
  "幅",
  "哈",
  "竟",
  "熟",
  "蟲",
  "澤",
  "腦",
  "壤",
  "碳",
  "歐",
  "遍",
  "側",
  "寨",
  "敢",
  "徹",
  "慮",
  "斜",
  "薄",
  "庭",
  "納",
  "彈",
  "飼",
  "伸",
  "折",
  "麥",
  "濕",
  "暗",
  "荷",
  "瓦",
  "塞",
  "床",
  "築",
  "惡",
  "戶",
  "訪",
  "塔",
  "奇",
  "透",
  "梁",
  "刀",
  "旋",
  "跡",
  "卡",
  "氯",
  "遇",
  "份",
  "毒",
  "泥",
  "退",
  "洗",
  "擺",
  "灰",
  "彩",
  "賣",
  "耗",
  "夏",
  "擇",
  "忙",
  "銅",
  "獻",
  "硬",
  "予",
  "繁",
  "圈",
  "雪",
  "函",
  "亦",
  "抽",
  "篇",
  "陣",
  "陰",
  "丁",
  "尺",
  "追",
  "堆",
  "雄",
  "迎",
  "泛",
  "爸",
  "樓",
  "避",
  "謀",
  "噸",
  "野",
  "豬",
  "旗",
  "累",
  "偏",
  "典",
  "館",
  "索",
  "秦",
  "脂",
  "潮",
  "爺",
  "豆",
  "忽",
  "托",
  "驚",
  "塑",
  "遺",
  "愈",
  "朱",
  "替",
  "纖",
  "粗",
  "傾",
  "尚",
  "痛",
  "楚",
  "謝",
  "奮",
  "購",
  "磨",
  "君",
  "池",
  "旁",
  "碎",
  "骨",
  "監",
  "捕",
  "弟",
  "暴",
  "割",
  "貫",
  "殊",
  "釋",
  "詞",
  "亡",
  "壁",
  "頓",
  "寶",
  "午",
  "塵",
  "聞",
  "揭",
  "炮",
  "殘",
  "冬",
  "橋",
  "婦",
  "警",
  "綜",
  "招",
  "吳",
  "付",
  "浮",
  "遭",
  "徐",
  "您",
  "搖",
  "谷",
  "贊",
  "箱",
  "隔",
  "訂",
  "男",
  "吹",
  "園",
  "紛",
  "唐",
  "敗",
  "宋",
  "玻",
  "巨",
  "耕",
  "坦",
  "榮",
  "閉",
  "灣",
  "鍵",
  "凡",
  "駐",
  "鍋",
  "救",
  "恩",
  "剝",
  "凝",
  "鹼",
  "齒",
  "截",
  "煉",
  "麻",
  "紡",
  "禁",
  "廢",
  "盛",
  "版",
  "緩",
  "淨",
  "睛",
  "昌",
  "婚",
  "涉",
  "筒",
  "嘴",
  "插",
  "岸",
  "朗",
  "莊",
  "街",
  "藏",
  "姑",
  "貿",
  "腐",
  "奴",
  "啦",
  "慣",
  "乘",
  "夥",
  "恢",
  "勻",
  "紗",
  "扎",
  "辯",
  "耳",
  "彪",
  "臣",
  "億",
  "璃",
  "抵",
  "脈",
  "秀",
  "薩",
  "俄",
  "網",
  "舞",
  "店",
  "噴",
  "縱",
  "寸",
  "汗",
  "掛",
  "洪",
  "賀",
  "閃",
  "柬",
  "爆",
  "烯",
  "津",
  "稻",
  "牆",
  "軟",
  "勇",
  "像",
  "滾",
  "厘",
  "蒙",
  "芳",
  "肯",
  "坡",
  "柱",
  "盪",
  "腿",
  "儀",
  "旅",
  "尾",
  "軋",
  "冰",
  "貢",
  "登",
  "黎",
  "削",
  "鑽",
  "勒",
  "逃",
  "障",
  "氨",
  "郭",
  "峰",
  "幣",
  "港",
  "伏",
  "軌",
  "畝",
  "畢",
  "擦",
  "莫",
  "刺",
  "浪",
  "秘",
  "援",
  "株",
  "健",
  "售",
  "股",
  "島",
  "甘",
  "泡",
  "睡",
  "童",
  "鑄",
  "湯",
  "閥",
  "休",
  "匯",
  "舍",
  "牧",
  "繞",
  "炸",
  "哲",
  "磷",
  "績",
  "朋",
  "淡",
  "尖",
  "啟",
  "陷",
  "柴",
  "呈",
  "徒",
  "顏",
  "淚",
  "稍",
  "忘",
  "泵",
  "藍",
  "拖",
  "洞",
  "授",
  "鏡",
  "辛",
  "壯",
  "鋒",
  "貧",
  "虛",
  "彎",
  "摩",
  "泰",
  "幼",
  "廷",
  "尊",
  "窗",
  "綱",
  "弄",
  "隸",
  "疑",
  "氏",
  "宮",
  "姐",
  "震",
  "瑞",
  "怪",
  "尤",
  "琴",
  "循",
  "描",
  "膜",
  "違",
  "夾",
  "腰",
  "緣",
  "珠",
  "窮",
  "森",
  "枝",
  "竹",
  "溝",
  "催",
  "繩",
  "憶",
  "邦",
  "剩",
  "幸",
  "漿",
  "欄",
  "擁",
  "牙",
  "貯",
  "禮",
  "濾",
  "鈉",
  "紋",
  "罷",
  "拍",
  "咱",
  "喊",
  "袖",
  "埃",
  "勤",
  "罰",
  "焦",
  "潛",
  "伍",
  "墨",
  "欲",
  "縫",
  "姓",
  "刊",
  "飽",
  "仿",
  "獎",
  "鋁",
  "鬼",
  "麗",
  "跨",
  "默",
  "挖",
  "鏈",
  "掃",
  "喝",
  "袋",
  "炭",
  "污",
  "幕",
  "諸",
  "弧",
  "勵",
  "梅",
  "奶",
  "潔",
  "災",
  "舟",
  "鑑",
  "苯",
  "訟",
  "抱",
  "毀",
  "懂",
  "寒",
  "智",
  "埔",
  "寄",
  "屆",
  "躍",
  "渡",
  "挑",
  "丹",
  "艱",
  "貝",
  "碰",
  "拔",
  "爹",
  "戴",
  "碼",
  "夢",
  "芽",
  "熔",
  "赤",
  "漁",
  "哭",
  "敬",
  "顆",
  "奔",
  "鉛",
  "仲",
  "虎",
  "稀",
  "妹",
  "乏",
  "珍",
  "申",
  "桌",
  "遵",
  "允",
  "隆",
  "螺",
  "倉",
  "魏",
  "銳",
  "曉",
  "氮",
  "兼",
  "隱",
  "礙",
  "赫",
  "撥",
  "忠",
  "肅",
  "缸",
  "牽",
  "搶",
  "博",
  "巧",
  "殼",
  "兄",
  "杜",
  "訊",
  "誠",
  "碧",
  "祥",
  "柯",
  "頁",
  "巡",
  "矩",
  "悲",
  "灌",
  "齡",
  "倫",
  "票",
  "尋",
  "桂",
  "鋪",
  "聖",
  "恐",
  "恰",
  "鄭",
  "趣",
  "抬",
  "荒",
  "騰",
  "貼",
  "柔",
  "滴",
  "猛",
  "闊",
  "輛",
  "妻",
  "填",
  "撤",
  "儲",
  "簽",
  "鬧",
  "擾",
  "紫",
  "砂",
  "遞",
  "戲",
  "吊",
  "陶",
  "伐",
  "餵",
  "療",
  "瓶",
  "婆",
  "撫",
  "臂",
  "摸",
  "忍",
  "蝦",
  "蠟",
  "鄰",
  "胸",
  "鞏",
  "擠",
  "偶",
  "棄",
  "槽",
  "勁",
  "乳",
  "鄧",
  "吉",
  "仁",
  "爛",
  "磚",
  "租",
  "烏",
  "艦",
  "伴",
  "瓜",
  "淺",
  "丙",
  "暫",
  "燥",
  "橡",
  "柳",
  "迷",
  "暖",
  "牌",
  "秧",
  "膽",
  "詳",
  "簧",
  "踏",
  "瓷",
  "譜",
  "呆",
  "賓",
  "糊",
  "洛",
  "輝",
  "憤",
  "競",
  "隙",
  "怒",
  "粘",
  "乃",
  "緒",
  "肩",
  "籍",
  "敏",
  "塗",
  "熙",
  "皆",
  "偵",
  "懸",
  "掘",
  "享",
  "糾",
  "醒",
  "狂",
  "鎖",
  "淀",
  "恨",
  "牲",
  "霸",
  "爬",
  "賞",
  "逆",
  "玩",
  "陵",
  "祝",
  "秒",
  "浙",
  "貌",
  "役",
  "彼",
  "悉",
  "鴨",
  "趨",
  "鳳",
  "晨",
  "畜",
  "輩",
  "秩",
  "卵",
  "署",
  "梯",
  "炎",
  "灘",
  "棋",
  "驅",
  "篩",
  "峽",
  "冒",
  "啥",
  "壽",
  "譯",
  "浸",
  "泉",
  "帽",
  "遲",
  "矽",
  "疆",
  "貸",
  "漏",
  "稿",
  "冠",
  "嫩",
  "脅",
  "芯",
  "牢",
  "叛",
  "蝕",
  "奧",
  "鳴",
  "嶺",
  "羊",
  "憑",
  "串",
  "塘",
  "繪",
  "酵",
  "融",
  "盆",
  "錫",
  "廟",
  "籌",
  "凍",
  "輔",
  "攝",
  "襲",
  "筋",
  "拒",
  "僚",
  "旱",
  "鉀",
  "鳥",
  "漆",
  "沈",
  "眉",
  "疏",
  "添",
  "棒",
  "穗",
  "硝",
  "韓",
  "逼",
  "扭",
  "僑",
  "涼",
  "挺",
  "碗",
  "栽",
  "炒",
  "杯",
  "患",
  "餾",
  "勸",
  "豪",
  "遼",
  "勃",
  "鴻",
  "旦",
  "吏",
  "拜",
  "狗",
  "埋",
  "輥",
  "掩",
  "飲",
  "搬",
  "罵",
  "辭",
  "勾",
  "扣",
  "估",
  "蔣",
  "絨",
  "霧",
  "丈",
  "朵",
  "姆",
  "擬",
  "宇",
  "輯",
  "陝",
  "雕",
  "償",
  "蓄",
  "崇",
  "剪",
  "倡",
  "廳",
  "咬",
  "駛",
  "薯",
  "刷",
  "斥",
  "番",
  "賦",
  "奉",
  "佛",
  "澆",
  "漫",
  "曼",
  "扇",
  "鈣",
  "桃",
  "扶",
  "仔",
  "返",
  "俗",
  "虧",
  "腔",
  "鞋",
  "棱",
  "覆",
  "框",
  "悄",
  "叔",
  "撞",
  "騙",
  "勘",
  "旺",
  "沸",
  "孤",
  "吐",
  "孟",
  "渠",
  "屈",
  "疾",
  "妙",
  "惜",
  "仰",
  "狠",
  "脹",
  "諧",
  "拋",
  "黴",
  "桑",
  "崗",
  "嘛",
  "衰",
  "盜",
  "滲",
  "臟",
  "賴",
  "湧",
  "甜",
  "曹",
  "閱",
  "肌",
  "哩",
  "厲",
  "烴",
  "緯",
  "毅",
  "昨",
  "偽",
  "症",
  "煮",
  "嘆",
  "釘",
  "搭",
  "莖",
  "籠",
  "酷",
  "偷",
  "弓",
  "錐",
  "恆",
  "傑",
  "坑",
  "鼻",
  "翼",
  "綸",
  "敘",
  "獄",
  "逮",
  "罐",
  "絡",
  "棚",
  "抑",
  "膨",
  "蔬",
  "寺",
  "驟",
  "穆",
  "冶",
  "枯",
  "冊",
  "屍",
  "凸",
  "紳",
  "坯",
  "犧",
  "焰",
  "轟",
  "欣",
  "晉",
  "瘦",
  "禦",
  "錠",
  "錦",
  "喪",
  "旬",
  "鍛",
  "壟",
  "搜",
  "撲",
  "邀",
  "亭",
  "酯",
  "邁",
  "舒",
  "脆",
  "酶",
  "閒",
  "憂",
  "酚",
  "頑",
  "羽",
  "漲",
  "卸",
  "仗",
  "陪",
  "闢",
  "懲",
  "杭",
  "姚",
  "肚",
  "捉",
  "飄",
  "漂",
  "昆",
  "欺",
  "吾",
  "郎",
  "烷",
  "汁",
  "呵",
  "飾",
  "蕭",
  "雅",
  "郵",
  "遷",
  "燕",
  "撒",
  "姻",
  "赴",
  "宴",
  "煩",
  "債",
  "帳",
  "斑",
  "鈴",
  "旨",
  "醇",
  "董",
  "餅",
  "雛",
  "姿",
  "拌",
  "傅",
  "腹",
  "妥",
  "揉",
  "賢",
  "拆",
  "歪",
  "葡",
  "胺",
  "丟",
  "浩",
  "徽",
  "昂",
  "墊",
  "擋",
  "覽",
  "貪",
  "慰",
  "繳",
  "汪",
  "慌",
  "馮",
  "諾",
  "姜",
  "誼",
  "兇",
  "劣",
  "誣",
  "耀",
  "昏",
  "躺",
  "盈",
  "騎",
  "喬",
  "溪",
  "叢",
  "盧",
  "抹",
  "悶",
  "諮",
  "刮",
  "駕",
  "纜",
  "悟",
  "摘",
  "鉺",
  "擲",
  "頗",
  "幻",
  "柄",
  "惠",
  "慘",
  "佳",
  "仇",
  "臘",
  "窩",
  "滌",
  "劍",
  "瞧",
  "堡",
  "潑",
  "蔥",
  "罩",
  "霍",
  "撈",
  "胎",
  "蒼",
  "濱",
  "倆",
  "捅",
  "湘",
  "砍",
  "霞",
  "邵",
  "萄",
  "瘋",
  "淮",
  "遂",
  "熊",
  "糞",
  "烘",
  "宿",
  "檔",
  "戈",
  "駁",
  "嫂",
  "裕",
  "徙",
  "箭",
  "捐",
  "腸",
  "撐",
  "曬",
  "辨",
  "殿",
  "蓮",
  "攤",
  "攪",
  "醬",
  "屏",
  "疫",
  "哀",
  "蔡",
  "堵",
  "沫",
  "皺",
  "暢",
  "疊",
  "閣",
  "萊",
  "敲",
  "轄",
  "鉤",
  "痕",
  "壩",
  "巷",
  "餓",
  "禍",
  "丘",
  "玄",
  "溜",
  "曰",
  "邏",
  "彭",
  "嘗",
  "卿",
  "妨",
  "艇",
  "吞",
  "韋",
  "怨",
  "矮",
  "歇"
]

},{}],158:[function(require,module,exports){
module.exports=[
  "abandon",
  "ability",
  "able",
  "about",
  "above",
  "absent",
  "absorb",
  "abstract",
  "absurd",
  "abuse",
  "access",
  "accident",
  "account",
  "accuse",
  "achieve",
  "acid",
  "acoustic",
  "acquire",
  "across",
  "act",
  "action",
  "actor",
  "actress",
  "actual",
  "adapt",
  "add",
  "addict",
  "address",
  "adjust",
  "admit",
  "adult",
  "advance",
  "advice",
  "aerobic",
  "affair",
  "afford",
  "afraid",
  "again",
  "age",
  "agent",
  "agree",
  "ahead",
  "aim",
  "air",
  "airport",
  "aisle",
  "alarm",
  "album",
  "alcohol",
  "alert",
  "alien",
  "all",
  "alley",
  "allow",
  "almost",
  "alone",
  "alpha",
  "already",
  "also",
  "alter",
  "always",
  "amateur",
  "amazing",
  "among",
  "amount",
  "amused",
  "analyst",
  "anchor",
  "ancient",
  "anger",
  "angle",
  "angry",
  "animal",
  "ankle",
  "announce",
  "annual",
  "another",
  "answer",
  "antenna",
  "antique",
  "anxiety",
  "any",
  "apart",
  "apology",
  "appear",
  "apple",
  "approve",
  "april",
  "arch",
  "arctic",
  "area",
  "arena",
  "argue",
  "arm",
  "armed",
  "armor",
  "army",
  "around",
  "arrange",
  "arrest",
  "arrive",
  "arrow",
  "art",
  "artefact",
  "artist",
  "artwork",
  "ask",
  "aspect",
  "assault",
  "asset",
  "assist",
  "assume",
  "asthma",
  "athlete",
  "atom",
  "attack",
  "attend",
  "attitude",
  "attract",
  "auction",
  "audit",
  "august",
  "aunt",
  "author",
  "auto",
  "autumn",
  "average",
  "avocado",
  "avoid",
  "awake",
  "aware",
  "away",
  "awesome",
  "awful",
  "awkward",
  "axis",
  "baby",
  "bachelor",
  "bacon",
  "badge",
  "bag",
  "balance",
  "balcony",
  "ball",
  "bamboo",
  "banana",
  "banner",
  "bar",
  "barely",
  "bargain",
  "barrel",
  "base",
  "basic",
  "basket",
  "battle",
  "beach",
  "bean",
  "beauty",
  "because",
  "become",
  "beef",
  "before",
  "begin",
  "behave",
  "behind",
  "believe",
  "below",
  "belt",
  "bench",
  "benefit",
  "best",
  "betray",
  "better",
  "between",
  "beyond",
  "bicycle",
  "bid",
  "bike",
  "bind",
  "biology",
  "bird",
  "birth",
  "bitter",
  "black",
  "blade",
  "blame",
  "blanket",
  "blast",
  "bleak",
  "bless",
  "blind",
  "blood",
  "blossom",
  "blouse",
  "blue",
  "blur",
  "blush",
  "board",
  "boat",
  "body",
  "boil",
  "bomb",
  "bone",
  "bonus",
  "book",
  "boost",
  "border",
  "boring",
  "borrow",
  "boss",
  "bottom",
  "bounce",
  "box",
  "boy",
  "bracket",
  "brain",
  "brand",
  "brass",
  "brave",
  "bread",
  "breeze",
  "brick",
  "bridge",
  "brief",
  "bright",
  "bring",
  "brisk",
  "broccoli",
  "broken",
  "bronze",
  "broom",
  "brother",
  "brown",
  "brush",
  "bubble",
  "buddy",
  "budget",
  "buffalo",
  "build",
  "bulb",
  "bulk",
  "bullet",
  "bundle",
  "bunker",
  "burden",
  "burger",
  "burst",
  "bus",
  "business",
  "busy",
  "butter",
  "buyer",
  "buzz",
  "cabbage",
  "cabin",
  "cable",
  "cactus",
  "cage",
  "cake",
  "call",
  "calm",
  "camera",
  "camp",
  "can",
  "canal",
  "cancel",
  "candy",
  "cannon",
  "canoe",
  "canvas",
  "canyon",
  "capable",
  "capital",
  "captain",
  "car",
  "carbon",
  "card",
  "cargo",
  "carpet",
  "carry",
  "cart",
  "case",
  "cash",
  "casino",
  "castle",
  "casual",
  "cat",
  "catalog",
  "catch",
  "category",
  "cattle",
  "caught",
  "cause",
  "caution",
  "cave",
  "ceiling",
  "celery",
  "cement",
  "census",
  "century",
  "cereal",
  "certain",
  "chair",
  "chalk",
  "champion",
  "change",
  "chaos",
  "chapter",
  "charge",
  "chase",
  "chat",
  "cheap",
  "check",
  "cheese",
  "chef",
  "cherry",
  "chest",
  "chicken",
  "chief",
  "child",
  "chimney",
  "choice",
  "choose",
  "chronic",
  "chuckle",
  "chunk",
  "churn",
  "cigar",
  "cinnamon",
  "circle",
  "citizen",
  "city",
  "civil",
  "claim",
  "clap",
  "clarify",
  "claw",
  "clay",
  "clean",
  "clerk",
  "clever",
  "click",
  "client",
  "cliff",
  "climb",
  "clinic",
  "clip",
  "clock",
  "clog",
  "close",
  "cloth",
  "cloud",
  "clown",
  "club",
  "clump",
  "cluster",
  "clutch",
  "coach",
  "coast",
  "coconut",
  "code",
  "coffee",
  "coil",
  "coin",
  "collect",
  "color",
  "column",
  "combine",
  "come",
  "comfort",
  "comic",
  "common",
  "company",
  "concert",
  "conduct",
  "confirm",
  "congress",
  "connect",
  "consider",
  "control",
  "convince",
  "cook",
  "cool",
  "copper",
  "copy",
  "coral",
  "core",
  "corn",
  "correct",
  "cost",
  "cotton",
  "couch",
  "country",
  "couple",
  "course",
  "cousin",
  "cover",
  "coyote",
  "crack",
  "cradle",
  "craft",
  "cram",
  "crane",
  "crash",
  "crater",
  "crawl",
  "crazy",
  "cream",
  "credit",
  "creek",
  "crew",
  "cricket",
  "crime",
  "crisp",
  "critic",
  "crop",
  "cross",
  "crouch",
  "crowd",
  "crucial",
  "cruel",
  "cruise",
  "crumble",
  "crunch",
  "crush",
  "cry",
  "crystal",
  "cube",
  "culture",
  "cup",
  "cupboard",
  "curious",
  "current",
  "curtain",
  "curve",
  "cushion",
  "custom",
  "cute",
  "cycle",
  "dad",
  "damage",
  "damp",
  "dance",
  "danger",
  "daring",
  "dash",
  "daughter",
  "dawn",
  "day",
  "deal",
  "debate",
  "debris",
  "decade",
  "december",
  "decide",
  "decline",
  "decorate",
  "decrease",
  "deer",
  "defense",
  "define",
  "defy",
  "degree",
  "delay",
  "deliver",
  "demand",
  "demise",
  "denial",
  "dentist",
  "deny",
  "depart",
  "depend",
  "deposit",
  "depth",
  "deputy",
  "derive",
  "describe",
  "desert",
  "design",
  "desk",
  "despair",
  "destroy",
  "detail",
  "detect",
  "develop",
  "device",
  "devote",
  "diagram",
  "dial",
  "diamond",
  "diary",
  "dice",
  "diesel",
  "diet",
  "differ",
  "digital",
  "dignity",
  "dilemma",
  "dinner",
  "dinosaur",
  "direct",
  "dirt",
  "disagree",
  "discover",
  "disease",
  "dish",
  "dismiss",
  "disorder",
  "display",
  "distance",
  "divert",
  "divide",
  "divorce",
  "dizzy",
  "doctor",
  "document",
  "dog",
  "doll",
  "dolphin",
  "domain",
  "donate",
  "donkey",
  "donor",
  "door",
  "dose",
  "double",
  "dove",
  "draft",
  "dragon",
  "drama",
  "drastic",
  "draw",
  "dream",
  "dress",
  "drift",
  "drill",
  "drink",
  "drip",
  "drive",
  "drop",
  "drum",
  "dry",
  "duck",
  "dumb",
  "dune",
  "during",
  "dust",
  "dutch",
  "duty",
  "dwarf",
  "dynamic",
  "eager",
  "eagle",
  "early",
  "earn",
  "earth",
  "easily",
  "east",
  "easy",
  "echo",
  "ecology",
  "economy",
  "edge",
  "edit",
  "educate",
  "effort",
  "egg",
  "eight",
  "either",
  "elbow",
  "elder",
  "electric",
  "elegant",
  "element",
  "elephant",
  "elevator",
  "elite",
  "else",
  "embark",
  "embody",
  "embrace",
  "emerge",
  "emotion",
  "employ",
  "empower",
  "empty",
  "enable",
  "enact",
  "end",
  "endless",
  "endorse",
  "enemy",
  "energy",
  "enforce",
  "engage",
  "engine",
  "enhance",
  "enjoy",
  "enlist",
  "enough",
  "enrich",
  "enroll",
  "ensure",
  "enter",
  "entire",
  "entry",
  "envelope",
  "episode",
  "equal",
  "equip",
  "era",
  "erase",
  "erode",
  "erosion",
  "error",
  "erupt",
  "escape",
  "essay",
  "essence",
  "estate",
  "eternal",
  "ethics",
  "evidence",
  "evil",
  "evoke",
  "evolve",
  "exact",
  "example",
  "excess",
  "exchange",
  "excite",
  "exclude",
  "excuse",
  "execute",
  "exercise",
  "exhaust",
  "exhibit",
  "exile",
  "exist",
  "exit",
  "exotic",
  "expand",
  "expect",
  "expire",
  "explain",
  "expose",
  "express",
  "extend",
  "extra",
  "eye",
  "eyebrow",
  "fabric",
  "face",
  "faculty",
  "fade",
  "faint",
  "faith",
  "fall",
  "false",
  "fame",
  "family",
  "famous",
  "fan",
  "fancy",
  "fantasy",
  "farm",
  "fashion",
  "fat",
  "fatal",
  "father",
  "fatigue",
  "fault",
  "favorite",
  "feature",
  "february",
  "federal",
  "fee",
  "feed",
  "feel",
  "female",
  "fence",
  "festival",
  "fetch",
  "fever",
  "few",
  "fiber",
  "fiction",
  "field",
  "figure",
  "file",
  "film",
  "filter",
  "final",
  "find",
  "fine",
  "finger",
  "finish",
  "fire",
  "firm",
  "first",
  "fiscal",
  "fish",
  "fit",
  "fitness",
  "fix",
  "flag",
  "flame",
  "flash",
  "flat",
  "flavor",
  "flee",
  "flight",
  "flip",
  "float",
  "flock",
  "floor",
  "flower",
  "fluid",
  "flush",
  "fly",
  "foam",
  "focus",
  "fog",
  "foil",
  "fold",
  "follow",
  "food",
  "foot",
  "force",
  "forest",
  "forget",
  "fork",
  "fortune",
  "forum",
  "forward",
  "fossil",
  "foster",
  "found",
  "fox",
  "fragile",
  "frame",
  "frequent",
  "fresh",
  "friend",
  "fringe",
  "frog",
  "front",
  "frost",
  "frown",
  "frozen",
  "fruit",
  "fuel",
  "fun",
  "funny",
  "furnace",
  "fury",
  "future",
  "gadget",
  "gain",
  "galaxy",
  "gallery",
  "game",
  "gap",
  "garage",
  "garbage",
  "garden",
  "garlic",
  "garment",
  "gas",
  "gasp",
  "gate",
  "gather",
  "gauge",
  "gaze",
  "general",
  "genius",
  "genre",
  "gentle",
  "genuine",
  "gesture",
  "ghost",
  "giant",
  "gift",
  "giggle",
  "ginger",
  "giraffe",
  "girl",
  "give",
  "glad",
  "glance",
  "glare",
  "glass",
  "glide",
  "glimpse",
  "globe",
  "gloom",
  "glory",
  "glove",
  "glow",
  "glue",
  "goat",
  "goddess",
  "gold",
  "good",
  "goose",
  "gorilla",
  "gospel",
  "gossip",
  "govern",
  "gown",
  "grab",
  "grace",
  "grain",
  "grant",
  "grape",
  "grass",
  "gravity",
  "great",
  "green",
  "grid",
  "grief",
  "grit",
  "grocery",
  "group",
  "grow",
  "grunt",
  "guard",
  "guess",
  "guide",
  "guilt",
  "guitar",
  "gun",
  "gym",
  "habit",
  "hair",
  "half",
  "hammer",
  "hamster",
  "hand",
  "happy",
  "harbor",
  "hard",
  "harsh",
  "harvest",
  "hat",
  "have",
  "hawk",
  "hazard",
  "head",
  "health",
  "heart",
  "heavy",
  "hedgehog",
  "height",
  "hello",
  "helmet",
  "help",
  "hen",
  "hero",
  "hidden",
  "high",
  "hill",
  "hint",
  "hip",
  "hire",
  "history",
  "hobby",
  "hockey",
  "hold",
  "hole",
  "holiday",
  "hollow",
  "home",
  "honey",
  "hood",
  "hope",
  "horn",
  "horror",
  "horse",
  "hospital",
  "host",
  "hotel",
  "hour",
  "hover",
  "hub",
  "huge",
  "human",
  "humble",
  "humor",
  "hundred",
  "hungry",
  "hunt",
  "hurdle",
  "hurry",
  "hurt",
  "husband",
  "hybrid",
  "ice",
  "icon",
  "idea",
  "identify",
  "idle",
  "ignore",
  "ill",
  "illegal",
  "illness",
  "image",
  "imitate",
  "immense",
  "immune",
  "impact",
  "impose",
  "improve",
  "impulse",
  "inch",
  "include",
  "income",
  "increase",
  "index",
  "indicate",
  "indoor",
  "industry",
  "infant",
  "inflict",
  "inform",
  "inhale",
  "inherit",
  "initial",
  "inject",
  "injury",
  "inmate",
  "inner",
  "innocent",
  "input",
  "inquiry",
  "insane",
  "insect",
  "inside",
  "inspire",
  "install",
  "intact",
  "interest",
  "into",
  "invest",
  "invite",
  "involve",
  "iron",
  "island",
  "isolate",
  "issue",
  "item",
  "ivory",
  "jacket",
  "jaguar",
  "jar",
  "jazz",
  "jealous",
  "jeans",
  "jelly",
  "jewel",
  "job",
  "join",
  "joke",
  "journey",
  "joy",
  "judge",
  "juice",
  "jump",
  "jungle",
  "junior",
  "junk",
  "just",
  "kangaroo",
  "keen",
  "keep",
  "ketchup",
  "key",
  "kick",
  "kid",
  "kidney",
  "kind",
  "kingdom",
  "kiss",
  "kit",
  "kitchen",
  "kite",
  "kitten",
  "kiwi",
  "knee",
  "knife",
  "knock",
  "know",
  "lab",
  "label",
  "labor",
  "ladder",
  "lady",
  "lake",
  "lamp",
  "language",
  "laptop",
  "large",
  "later",
  "latin",
  "laugh",
  "laundry",
  "lava",
  "law",
  "lawn",
  "lawsuit",
  "layer",
  "lazy",
  "leader",
  "leaf",
  "learn",
  "leave",
  "lecture",
  "left",
  "leg",
  "legal",
  "legend",
  "leisure",
  "lemon",
  "lend",
  "length",
  "lens",
  "leopard",
  "lesson",
  "letter",
  "level",
  "liar",
  "liberty",
  "library",
  "license",
  "life",
  "lift",
  "light",
  "like",
  "limb",
  "limit",
  "link",
  "lion",
  "liquid",
  "list",
  "little",
  "live",
  "lizard",
  "load",
  "loan",
  "lobster",
  "local",
  "lock",
  "logic",
  "lonely",
  "long",
  "loop",
  "lottery",
  "loud",
  "lounge",
  "love",
  "loyal",
  "lucky",
  "luggage",
  "lumber",
  "lunar",
  "lunch",
  "luxury",
  "lyrics",
  "machine",
  "mad",
  "magic",
  "magnet",
  "maid",
  "mail",
  "main",
  "major",
  "make",
  "mammal",
  "man",
  "manage",
  "mandate",
  "mango",
  "mansion",
  "manual",
  "maple",
  "marble",
  "march",
  "margin",
  "marine",
  "market",
  "marriage",
  "mask",
  "mass",
  "master",
  "match",
  "material",
  "math",
  "matrix",
  "matter",
  "maximum",
  "maze",
  "meadow",
  "mean",
  "measure",
  "meat",
  "mechanic",
  "medal",
  "media",
  "melody",
  "melt",
  "member",
  "memory",
  "mention",
  "menu",
  "mercy",
  "merge",
  "merit",
  "merry",
  "mesh",
  "message",
  "metal",
  "method",
  "middle",
  "midnight",
  "milk",
  "million",
  "mimic",
  "mind",
  "minimum",
  "minor",
  "minute",
  "miracle",
  "mirror",
  "misery",
  "miss",
  "mistake",
  "mix",
  "mixed",
  "mixture",
  "mobile",
  "model",
  "modify",
  "mom",
  "moment",
  "monitor",
  "monkey",
  "monster",
  "month",
  "moon",
  "moral",
  "more",
  "morning",
  "mosquito",
  "mother",
  "motion",
  "motor",
  "mountain",
  "mouse",
  "move",
  "movie",
  "much",
  "muffin",
  "mule",
  "multiply",
  "muscle",
  "museum",
  "mushroom",
  "music",
  "must",
  "mutual",
  "myself",
  "mystery",
  "myth",
  "naive",
  "name",
  "napkin",
  "narrow",
  "nasty",
  "nation",
  "nature",
  "near",
  "neck",
  "need",
  "negative",
  "neglect",
  "neither",
  "nephew",
  "nerve",
  "nest",
  "net",
  "network",
  "neutral",
  "never",
  "news",
  "next",
  "nice",
  "night",
  "noble",
  "noise",
  "nominee",
  "noodle",
  "normal",
  "north",
  "nose",
  "notable",
  "note",
  "nothing",
  "notice",
  "novel",
  "now",
  "nuclear",
  "number",
  "nurse",
  "nut",
  "oak",
  "obey",
  "object",
  "oblige",
  "obscure",
  "observe",
  "obtain",
  "obvious",
  "occur",
  "ocean",
  "october",
  "odor",
  "off",
  "offer",
  "office",
  "often",
  "oil",
  "okay",
  "old",
  "olive",
  "olympic",
  "omit",
  "once",
  "one",
  "onion",
  "online",
  "only",
  "open",
  "opera",
  "opinion",
  "oppose",
  "option",
  "orange",
  "orbit",
  "orchard",
  "order",
  "ordinary",
  "organ",
  "orient",
  "original",
  "orphan",
  "ostrich",
  "other",
  "outdoor",
  "outer",
  "output",
  "outside",
  "oval",
  "oven",
  "over",
  "own",
  "owner",
  "oxygen",
  "oyster",
  "ozone",
  "pact",
  "paddle",
  "page",
  "pair",
  "palace",
  "palm",
  "panda",
  "panel",
  "panic",
  "panther",
  "paper",
  "parade",
  "parent",
  "park",
  "parrot",
  "party",
  "pass",
  "patch",
  "path",
  "patient",
  "patrol",
  "pattern",
  "pause",
  "pave",
  "payment",
  "peace",
  "peanut",
  "pear",
  "peasant",
  "pelican",
  "pen",
  "penalty",
  "pencil",
  "people",
  "pepper",
  "perfect",
  "permit",
  "person",
  "pet",
  "phone",
  "photo",
  "phrase",
  "physical",
  "piano",
  "picnic",
  "picture",
  "piece",
  "pig",
  "pigeon",
  "pill",
  "pilot",
  "pink",
  "pioneer",
  "pipe",
  "pistol",
  "pitch",
  "pizza",
  "place",
  "planet",
  "plastic",
  "plate",
  "play",
  "please",
  "pledge",
  "pluck",
  "plug",
  "plunge",
  "poem",
  "poet",
  "point",
  "polar",
  "pole",
  "police",
  "pond",
  "pony",
  "pool",
  "popular",
  "portion",
  "position",
  "possible",
  "post",
  "potato",
  "pottery",
  "poverty",
  "powder",
  "power",
  "practice",
  "praise",
  "predict",
  "prefer",
  "prepare",
  "present",
  "pretty",
  "prevent",
  "price",
  "pride",
  "primary",
  "print",
  "priority",
  "prison",
  "private",
  "prize",
  "problem",
  "process",
  "produce",
  "profit",
  "program",
  "project",
  "promote",
  "proof",
  "property",
  "prosper",
  "protect",
  "proud",
  "provide",
  "public",
  "pudding",
  "pull",
  "pulp",
  "pulse",
  "pumpkin",
  "punch",
  "pupil",
  "puppy",
  "purchase",
  "purity",
  "purpose",
  "purse",
  "push",
  "put",
  "puzzle",
  "pyramid",
  "quality",
  "quantum",
  "quarter",
  "question",
  "quick",
  "quit",
  "quiz",
  "quote",
  "rabbit",
  "raccoon",
  "race",
  "rack",
  "radar",
  "radio",
  "rail",
  "rain",
  "raise",
  "rally",
  "ramp",
  "ranch",
  "random",
  "range",
  "rapid",
  "rare",
  "rate",
  "rather",
  "raven",
  "raw",
  "razor",
  "ready",
  "real",
  "reason",
  "rebel",
  "rebuild",
  "recall",
  "receive",
  "recipe",
  "record",
  "recycle",
  "reduce",
  "reflect",
  "reform",
  "refuse",
  "region",
  "regret",
  "regular",
  "reject",
  "relax",
  "release",
  "relief",
  "rely",
  "remain",
  "remember",
  "remind",
  "remove",
  "render",
  "renew",
  "rent",
  "reopen",
  "repair",
  "repeat",
  "replace",
  "report",
  "require",
  "rescue",
  "resemble",
  "resist",
  "resource",
  "response",
  "result",
  "retire",
  "retreat",
  "return",
  "reunion",
  "reveal",
  "review",
  "reward",
  "rhythm",
  "rib",
  "ribbon",
  "rice",
  "rich",
  "ride",
  "ridge",
  "rifle",
  "right",
  "rigid",
  "ring",
  "riot",
  "ripple",
  "risk",
  "ritual",
  "rival",
  "river",
  "road",
  "roast",
  "robot",
  "robust",
  "rocket",
  "romance",
  "roof",
  "rookie",
  "room",
  "rose",
  "rotate",
  "rough",
  "round",
  "route",
  "royal",
  "rubber",
  "rude",
  "rug",
  "rule",
  "run",
  "runway",
  "rural",
  "sad",
  "saddle",
  "sadness",
  "safe",
  "sail",
  "salad",
  "salmon",
  "salon",
  "salt",
  "salute",
  "same",
  "sample",
  "sand",
  "satisfy",
  "satoshi",
  "sauce",
  "sausage",
  "save",
  "say",
  "scale",
  "scan",
  "scare",
  "scatter",
  "scene",
  "scheme",
  "school",
  "science",
  "scissors",
  "scorpion",
  "scout",
  "scrap",
  "screen",
  "script",
  "scrub",
  "sea",
  "search",
  "season",
  "seat",
  "second",
  "secret",
  "section",
  "security",
  "seed",
  "seek",
  "segment",
  "select",
  "sell",
  "seminar",
  "senior",
  "sense",
  "sentence",
  "series",
  "service",
  "session",
  "settle",
  "setup",
  "seven",
  "shadow",
  "shaft",
  "shallow",
  "share",
  "shed",
  "shell",
  "sheriff",
  "shield",
  "shift",
  "shine",
  "ship",
  "shiver",
  "shock",
  "shoe",
  "shoot",
  "shop",
  "short",
  "shoulder",
  "shove",
  "shrimp",
  "shrug",
  "shuffle",
  "shy",
  "sibling",
  "sick",
  "side",
  "siege",
  "sight",
  "sign",
  "silent",
  "silk",
  "silly",
  "silver",
  "similar",
  "simple",
  "since",
  "sing",
  "siren",
  "sister",
  "situate",
  "six",
  "size",
  "skate",
  "sketch",
  "ski",
  "skill",
  "skin",
  "skirt",
  "skull",
  "slab",
  "slam",
  "sleep",
  "slender",
  "slice",
  "slide",
  "slight",
  "slim",
  "slogan",
  "slot",
  "slow",
  "slush",
  "small",
  "smart",
  "smile",
  "smoke",
  "smooth",
  "snack",
  "snake",
  "snap",
  "sniff",
  "snow",
  "soap",
  "soccer",
  "social",
  "sock",
  "soda",
  "soft",
  "solar",
  "soldier",
  "solid",
  "solution",
  "solve",
  "someone",
  "song",
  "soon",
  "sorry",
  "sort",
  "soul",
  "sound",
  "soup",
  "source",
  "south",
  "space",
  "spare",
  "spatial",
  "spawn",
  "speak",
  "special",
  "speed",
  "spell",
  "spend",
  "sphere",
  "spice",
  "spider",
  "spike",
  "spin",
  "spirit",
  "split",
  "spoil",
  "sponsor",
  "spoon",
  "sport",
  "spot",
  "spray",
  "spread",
  "spring",
  "spy",
  "square",
  "squeeze",
  "squirrel",
  "stable",
  "stadium",
  "staff",
  "stage",
  "stairs",
  "stamp",
  "stand",
  "start",
  "state",
  "stay",
  "steak",
  "steel",
  "stem",
  "step",
  "stereo",
  "stick",
  "still",
  "sting",
  "stock",
  "stomach",
  "stone",
  "stool",
  "story",
  "stove",
  "strategy",
  "street",
  "strike",
  "strong",
  "struggle",
  "student",
  "stuff",
  "stumble",
  "style",
  "subject",
  "submit",
  "subway",
  "success",
  "such",
  "sudden",
  "suffer",
  "sugar",
  "suggest",
  "suit",
  "summer",
  "sun",
  "sunny",
  "sunset",
  "super",
  "supply",
  "supreme",
  "sure",
  "surface",
  "surge",
  "surprise",
  "surround",
  "survey",
  "suspect",
  "sustain",
  "swallow",
  "swamp",
  "swap",
  "swarm",
  "swear",
  "sweet",
  "swift",
  "swim",
  "swing",
  "switch",
  "sword",
  "symbol",
  "symptom",
  "syrup",
  "system",
  "table",
  "tackle",
  "tag",
  "tail",
  "talent",
  "talk",
  "tank",
  "tape",
  "target",
  "task",
  "taste",
  "tattoo",
  "taxi",
  "teach",
  "team",
  "tell",
  "ten",
  "tenant",
  "tennis",
  "tent",
  "term",
  "test",
  "text",
  "thank",
  "that",
  "theme",
  "then",
  "theory",
  "there",
  "they",
  "thing",
  "this",
  "thought",
  "three",
  "thrive",
  "throw",
  "thumb",
  "thunder",
  "ticket",
  "tide",
  "tiger",
  "tilt",
  "timber",
  "time",
  "tiny",
  "tip",
  "tired",
  "tissue",
  "title",
  "toast",
  "tobacco",
  "today",
  "toddler",
  "toe",
  "together",
  "toilet",
  "token",
  "tomato",
  "tomorrow",
  "tone",
  "tongue",
  "tonight",
  "tool",
  "tooth",
  "top",
  "topic",
  "topple",
  "torch",
  "tornado",
  "tortoise",
  "toss",
  "total",
  "tourist",
  "toward",
  "tower",
  "town",
  "toy",
  "track",
  "trade",
  "traffic",
  "tragic",
  "train",
  "transfer",
  "trap",
  "trash",
  "travel",
  "tray",
  "treat",
  "tree",
  "trend",
  "trial",
  "tribe",
  "trick",
  "trigger",
  "trim",
  "trip",
  "trophy",
  "trouble",
  "truck",
  "true",
  "truly",
  "trumpet",
  "trust",
  "truth",
  "try",
  "tube",
  "tuition",
  "tumble",
  "tuna",
  "tunnel",
  "turkey",
  "turn",
  "turtle",
  "twelve",
  "twenty",
  "twice",
  "twin",
  "twist",
  "two",
  "type",
  "typical",
  "ugly",
  "umbrella",
  "unable",
  "unaware",
  "uncle",
  "uncover",
  "under",
  "undo",
  "unfair",
  "unfold",
  "unhappy",
  "uniform",
  "unique",
  "unit",
  "universe",
  "unknown",
  "unlock",
  "until",
  "unusual",
  "unveil",
  "update",
  "upgrade",
  "uphold",
  "upon",
  "upper",
  "upset",
  "urban",
  "urge",
  "usage",
  "use",
  "used",
  "useful",
  "useless",
  "usual",
  "utility",
  "vacant",
  "vacuum",
  "vague",
  "valid",
  "valley",
  "valve",
  "van",
  "vanish",
  "vapor",
  "various",
  "vast",
  "vault",
  "vehicle",
  "velvet",
  "vendor",
  "venture",
  "venue",
  "verb",
  "verify",
  "version",
  "very",
  "vessel",
  "veteran",
  "viable",
  "vibrant",
  "vicious",
  "victory",
  "video",
  "view",
  "village",
  "vintage",
  "violin",
  "virtual",
  "virus",
  "visa",
  "visit",
  "visual",
  "vital",
  "vivid",
  "vocal",
  "voice",
  "void",
  "volcano",
  "volume",
  "vote",
  "voyage",
  "wage",
  "wagon",
  "wait",
  "walk",
  "wall",
  "walnut",
  "want",
  "warfare",
  "warm",
  "warrior",
  "wash",
  "wasp",
  "waste",
  "water",
  "wave",
  "way",
  "wealth",
  "weapon",
  "wear",
  "weasel",
  "weather",
  "web",
  "wedding",
  "weekend",
  "weird",
  "welcome",
  "west",
  "wet",
  "whale",
  "what",
  "wheat",
  "wheel",
  "when",
  "where",
  "whip",
  "whisper",
  "wide",
  "width",
  "wife",
  "wild",
  "will",
  "win",
  "window",
  "wine",
  "wing",
  "wink",
  "winner",
  "winter",
  "wire",
  "wisdom",
  "wise",
  "wish",
  "witness",
  "wolf",
  "woman",
  "wonder",
  "wood",
  "wool",
  "word",
  "work",
  "world",
  "worry",
  "worth",
  "wrap",
  "wreck",
  "wrestle",
  "wrist",
  "write",
  "wrong",
  "yard",
  "year",
  "yellow",
  "you",
  "young",
  "youth",
  "zebra",
  "zero",
  "zone",
  "zoo"
]

},{}],159:[function(require,module,exports){
module.exports=[
  "abaisser",
  "abandon",
  "abdiquer",
  "abeille",
  "abolir",
  "aborder",
  "aboutir",
  "aboyer",
  "abrasif",
  "abreuver",
  "abriter",
  "abroger",
  "abrupt",
  "absence",
  "absolu",
  "absurde",
  "abusif",
  "abyssal",
  "académie",
  "acajou",
  "acarien",
  "accabler",
  "accepter",
  "acclamer",
  "accolade",
  "accroche",
  "accuser",
  "acerbe",
  "achat",
  "acheter",
  "aciduler",
  "acier",
  "acompte",
  "acquérir",
  "acronyme",
  "acteur",
  "actif",
  "actuel",
  "adepte",
  "adéquat",
  "adhésif",
  "adjectif",
  "adjuger",
  "admettre",
  "admirer",
  "adopter",
  "adorer",
  "adoucir",
  "adresse",
  "adroit",
  "adulte",
  "adverbe",
  "aérer",
  "aéronef",
  "affaire",
  "affecter",
  "affiche",
  "affreux",
  "affubler",
  "agacer",
  "agencer",
  "agile",
  "agiter",
  "agrafer",
  "agréable",
  "agrume",
  "aider",
  "aiguille",
  "ailier",
  "aimable",
  "aisance",
  "ajouter",
  "ajuster",
  "alarmer",
  "alchimie",
  "alerte",
  "algèbre",
  "algue",
  "aliéner",
  "aliment",
  "alléger",
  "alliage",
  "allouer",
  "allumer",
  "alourdir",
  "alpaga",
  "altesse",
  "alvéole",
  "amateur",
  "ambigu",
  "ambre",
  "aménager",
  "amertume",
  "amidon",
  "amiral",
  "amorcer",
  "amour",
  "amovible",
  "amphibie",
  "ampleur",
  "amusant",
  "analyse",
  "anaphore",
  "anarchie",
  "anatomie",
  "ancien",
  "anéantir",
  "angle",
  "angoisse",
  "anguleux",
  "animal",
  "annexer",
  "annonce",
  "annuel",
  "anodin",
  "anomalie",
  "anonyme",
  "anormal",
  "antenne",
  "antidote",
  "anxieux",
  "apaiser",
  "apéritif",
  "aplanir",
  "apologie",
  "appareil",
  "appeler",
  "apporter",
  "appuyer",
  "aquarium",
  "aqueduc",
  "arbitre",
  "arbuste",
  "ardeur",
  "ardoise",
  "argent",
  "arlequin",
  "armature",
  "armement",
  "armoire",
  "armure",
  "arpenter",
  "arracher",
  "arriver",
  "arroser",
  "arsenic",
  "artériel",
  "article",
  "aspect",
  "asphalte",
  "aspirer",
  "assaut",
  "asservir",
  "assiette",
  "associer",
  "assurer",
  "asticot",
  "astre",
  "astuce",
  "atelier",
  "atome",
  "atrium",
  "atroce",
  "attaque",
  "attentif",
  "attirer",
  "attraper",
  "aubaine",
  "auberge",
  "audace",
  "audible",
  "augurer",
  "aurore",
  "automne",
  "autruche",
  "avaler",
  "avancer",
  "avarice",
  "avenir",
  "averse",
  "aveugle",
  "aviateur",
  "avide",
  "avion",
  "aviser",
  "avoine",
  "avouer",
  "avril",
  "axial",
  "axiome",
  "badge",
  "bafouer",
  "bagage",
  "baguette",
  "baignade",
  "balancer",
  "balcon",
  "baleine",
  "balisage",
  "bambin",
  "bancaire",
  "bandage",
  "banlieue",
  "bannière",
  "banquier",
  "barbier",
  "baril",
  "baron",
  "barque",
  "barrage",
  "bassin",
  "bastion",
  "bataille",
  "bateau",
  "batterie",
  "baudrier",
  "bavarder",
  "belette",
  "bélier",
  "belote",
  "bénéfice",
  "berceau",
  "berger",
  "berline",
  "bermuda",
  "besace",
  "besogne",
  "bétail",
  "beurre",
  "biberon",
  "bicycle",
  "bidule",
  "bijou",
  "bilan",
  "bilingue",
  "billard",
  "binaire",
  "biologie",
  "biopsie",
  "biotype",
  "biscuit",
  "bison",
  "bistouri",
  "bitume",
  "bizarre",
  "blafard",
  "blague",
  "blanchir",
  "blessant",
  "blinder",
  "blond",
  "bloquer",
  "blouson",
  "bobard",
  "bobine",
  "boire",
  "boiser",
  "bolide",
  "bonbon",
  "bondir",
  "bonheur",
  "bonifier",
  "bonus",
  "bordure",
  "borne",
  "botte",
  "boucle",
  "boueux",
  "bougie",
  "boulon",
  "bouquin",
  "bourse",
  "boussole",
  "boutique",
  "boxeur",
  "branche",
  "brasier",
  "brave",
  "brebis",
  "brèche",
  "breuvage",
  "bricoler",
  "brigade",
  "brillant",
  "brioche",
  "brique",
  "brochure",
  "broder",
  "bronzer",
  "brousse",
  "broyeur",
  "brume",
  "brusque",
  "brutal",
  "bruyant",
  "buffle",
  "buisson",
  "bulletin",
  "bureau",
  "burin",
  "bustier",
  "butiner",
  "butoir",
  "buvable",
  "buvette",
  "cabanon",
  "cabine",
  "cachette",
  "cadeau",
  "cadre",
  "caféine",
  "caillou",
  "caisson",
  "calculer",
  "calepin",
  "calibre",
  "calmer",
  "calomnie",
  "calvaire",
  "camarade",
  "caméra",
  "camion",
  "campagne",
  "canal",
  "caneton",
  "canon",
  "cantine",
  "canular",
  "capable",
  "caporal",
  "caprice",
  "capsule",
  "capter",
  "capuche",
  "carabine",
  "carbone",
  "caresser",
  "caribou",
  "carnage",
  "carotte",
  "carreau",
  "carton",
  "cascade",
  "casier",
  "casque",
  "cassure",
  "causer",
  "caution",
  "cavalier",
  "caverne",
  "caviar",
  "cédille",
  "ceinture",
  "céleste",
  "cellule",
  "cendrier",
  "censurer",
  "central",
  "cercle",
  "cérébral",
  "cerise",
  "cerner",
  "cerveau",
  "cesser",
  "chagrin",
  "chaise",
  "chaleur",
  "chambre",
  "chance",
  "chapitre",
  "charbon",
  "chasseur",
  "chaton",
  "chausson",
  "chavirer",
  "chemise",
  "chenille",
  "chéquier",
  "chercher",
  "cheval",
  "chien",
  "chiffre",
  "chignon",
  "chimère",
  "chiot",
  "chlorure",
  "chocolat",
  "choisir",
  "chose",
  "chouette",
  "chrome",
  "chute",
  "cigare",
  "cigogne",
  "cimenter",
  "cinéma",
  "cintrer",
  "circuler",
  "cirer",
  "cirque",
  "citerne",
  "citoyen",
  "citron",
  "civil",
  "clairon",
  "clameur",
  "claquer",
  "classe",
  "clavier",
  "client",
  "cligner",
  "climat",
  "clivage",
  "cloche",
  "clonage",
  "cloporte",
  "cobalt",
  "cobra",
  "cocasse",
  "cocotier",
  "coder",
  "codifier",
  "coffre",
  "cogner",
  "cohésion",
  "coiffer",
  "coincer",
  "colère",
  "colibri",
  "colline",
  "colmater",
  "colonel",
  "combat",
  "comédie",
  "commande",
  "compact",
  "concert",
  "conduire",
  "confier",
  "congeler",
  "connoter",
  "consonne",
  "contact",
  "convexe",
  "copain",
  "copie",
  "corail",
  "corbeau",
  "cordage",
  "corniche",
  "corpus",
  "correct",
  "cortège",
  "cosmique",
  "costume",
  "coton",
  "coude",
  "coupure",
  "courage",
  "couteau",
  "couvrir",
  "coyote",
  "crabe",
  "crainte",
  "cravate",
  "crayon",
  "créature",
  "créditer",
  "crémeux",
  "creuser",
  "crevette",
  "cribler",
  "crier",
  "cristal",
  "critère",
  "croire",
  "croquer",
  "crotale",
  "crucial",
  "cruel",
  "crypter",
  "cubique",
  "cueillir",
  "cuillère",
  "cuisine",
  "cuivre",
  "culminer",
  "cultiver",
  "cumuler",
  "cupide",
  "curatif",
  "curseur",
  "cyanure",
  "cycle",
  "cylindre",
  "cynique",
  "daigner",
  "damier",
  "danger",
  "danseur",
  "dauphin",
  "débattre",
  "débiter",
  "déborder",
  "débrider",
  "débutant",
  "décaler",
  "décembre",
  "déchirer",
  "décider",
  "déclarer",
  "décorer",
  "décrire",
  "décupler",
  "dédale",
  "déductif",
  "déesse",
  "défensif",
  "défiler",
  "défrayer",
  "dégager",
  "dégivrer",
  "déglutir",
  "dégrafer",
  "déjeuner",
  "délice",
  "déloger",
  "demander",
  "demeurer",
  "démolir",
  "dénicher",
  "dénouer",
  "dentelle",
  "dénuder",
  "départ",
  "dépenser",
  "déphaser",
  "déplacer",
  "déposer",
  "déranger",
  "dérober",
  "désastre",
  "descente",
  "désert",
  "désigner",
  "désobéir",
  "dessiner",
  "destrier",
  "détacher",
  "détester",
  "détourer",
  "détresse",
  "devancer",
  "devenir",
  "deviner",
  "devoir",
  "diable",
  "dialogue",
  "diamant",
  "dicter",
  "différer",
  "digérer",
  "digital",
  "digne",
  "diluer",
  "dimanche",
  "diminuer",
  "dioxyde",
  "directif",
  "diriger",
  "discuter",
  "disposer",
  "dissiper",
  "distance",
  "divertir",
  "diviser",
  "docile",
  "docteur",
  "dogme",
  "doigt",
  "domaine",
  "domicile",
  "dompter",
  "donateur",
  "donjon",
  "donner",
  "dopamine",
  "dortoir",
  "dorure",
  "dosage",
  "doseur",
  "dossier",
  "dotation",
  "douanier",
  "double",
  "douceur",
  "douter",
  "doyen",
  "dragon",
  "draper",
  "dresser",
  "dribbler",
  "droiture",
  "duperie",
  "duplexe",
  "durable",
  "durcir",
  "dynastie",
  "éblouir",
  "écarter",
  "écharpe",
  "échelle",
  "éclairer",
  "éclipse",
  "éclore",
  "écluse",
  "école",
  "économie",
  "écorce",
  "écouter",
  "écraser",
  "écrémer",
  "écrivain",
  "écrou",
  "écume",
  "écureuil",
  "édifier",
  "éduquer",
  "effacer",
  "effectif",
  "effigie",
  "effort",
  "effrayer",
  "effusion",
  "égaliser",
  "égarer",
  "éjecter",
  "élaborer",
  "élargir",
  "électron",
  "élégant",
  "éléphant",
  "élève",
  "éligible",
  "élitisme",
  "éloge",
  "élucider",
  "éluder",
  "emballer",
  "embellir",
  "embryon",
  "émeraude",
  "émission",
  "emmener",
  "émotion",
  "émouvoir",
  "empereur",
  "employer",
  "emporter",
  "emprise",
  "émulsion",
  "encadrer",
  "enchère",
  "enclave",
  "encoche",
  "endiguer",
  "endosser",
  "endroit",
  "enduire",
  "énergie",
  "enfance",
  "enfermer",
  "enfouir",
  "engager",
  "engin",
  "englober",
  "énigme",
  "enjamber",
  "enjeu",
  "enlever",
  "ennemi",
  "ennuyeux",
  "enrichir",
  "enrobage",
  "enseigne",
  "entasser",
  "entendre",
  "entier",
  "entourer",
  "entraver",
  "énumérer",
  "envahir",
  "enviable",
  "envoyer",
  "enzyme",
  "éolien",
  "épaissir",
  "épargne",
  "épatant",
  "épaule",
  "épicerie",
  "épidémie",
  "épier",
  "épilogue",
  "épine",
  "épisode",
  "épitaphe",
  "époque",
  "épreuve",
  "éprouver",
  "épuisant",
  "équerre",
  "équipe",
  "ériger",
  "érosion",
  "erreur",
  "éruption",
  "escalier",
  "espadon",
  "espèce",
  "espiègle",
  "espoir",
  "esprit",
  "esquiver",
  "essayer",
  "essence",
  "essieu",
  "essorer",
  "estime",
  "estomac",
  "estrade",
  "étagère",
  "étaler",
  "étanche",
  "étatique",
  "éteindre",
  "étendoir",
  "éternel",
  "éthanol",
  "éthique",
  "ethnie",
  "étirer",
  "étoffer",
  "étoile",
  "étonnant",
  "étourdir",
  "étrange",
  "étroit",
  "étude",
  "euphorie",
  "évaluer",
  "évasion",
  "éventail",
  "évidence",
  "éviter",
  "évolutif",
  "évoquer",
  "exact",
  "exagérer",
  "exaucer",
  "exceller",
  "excitant",
  "exclusif",
  "excuse",
  "exécuter",
  "exemple",
  "exercer",
  "exhaler",
  "exhorter",
  "exigence",
  "exiler",
  "exister",
  "exotique",
  "expédier",
  "explorer",
  "exposer",
  "exprimer",
  "exquis",
  "extensif",
  "extraire",
  "exulter",
  "fable",
  "fabuleux",
  "facette",
  "facile",
  "facture",
  "faiblir",
  "falaise",
  "fameux",
  "famille",
  "farceur",
  "farfelu",
  "farine",
  "farouche",
  "fasciner",
  "fatal",
  "fatigue",
  "faucon",
  "fautif",
  "faveur",
  "favori",
  "fébrile",
  "féconder",
  "fédérer",
  "félin",
  "femme",
  "fémur",
  "fendoir",
  "féodal",
  "fermer",
  "féroce",
  "ferveur",
  "festival",
  "feuille",
  "feutre",
  "février",
  "fiasco",
  "ficeler",
  "fictif",
  "fidèle",
  "figure",
  "filature",
  "filetage",
  "filière",
  "filleul",
  "filmer",
  "filou",
  "filtrer",
  "financer",
  "finir",
  "fiole",
  "firme",
  "fissure",
  "fixer",
  "flairer",
  "flamme",
  "flasque",
  "flatteur",
  "fléau",
  "flèche",
  "fleur",
  "flexion",
  "flocon",
  "flore",
  "fluctuer",
  "fluide",
  "fluvial",
  "folie",
  "fonderie",
  "fongible",
  "fontaine",
  "forcer",
  "forgeron",
  "formuler",
  "fortune",
  "fossile",
  "foudre",
  "fougère",
  "fouiller",
  "foulure",
  "fourmi",
  "fragile",
  "fraise",
  "franchir",
  "frapper",
  "frayeur",
  "frégate",
  "freiner",
  "frelon",
  "frémir",
  "frénésie",
  "frère",
  "friable",
  "friction",
  "frisson",
  "frivole",
  "froid",
  "fromage",
  "frontal",
  "frotter",
  "fruit",
  "fugitif",
  "fuite",
  "fureur",
  "furieux",
  "furtif",
  "fusion",
  "futur",
  "gagner",
  "galaxie",
  "galerie",
  "gambader",
  "garantir",
  "gardien",
  "garnir",
  "garrigue",
  "gazelle",
  "gazon",
  "géant",
  "gélatine",
  "gélule",
  "gendarme",
  "général",
  "génie",
  "genou",
  "gentil",
  "géologie",
  "géomètre",
  "géranium",
  "germe",
  "gestuel",
  "geyser",
  "gibier",
  "gicler",
  "girafe",
  "givre",
  "glace",
  "glaive",
  "glisser",
  "globe",
  "gloire",
  "glorieux",
  "golfeur",
  "gomme",
  "gonfler",
  "gorge",
  "gorille",
  "goudron",
  "gouffre",
  "goulot",
  "goupille",
  "gourmand",
  "goutte",
  "graduel",
  "graffiti",
  "graine",
  "grand",
  "grappin",
  "gratuit",
  "gravir",
  "grenat",
  "griffure",
  "griller",
  "grimper",
  "grogner",
  "gronder",
  "grotte",
  "groupe",
  "gruger",
  "grutier",
  "gruyère",
  "guépard",
  "guerrier",
  "guide",
  "guimauve",
  "guitare",
  "gustatif",
  "gymnaste",
  "gyrostat",
  "habitude",
  "hachoir",
  "halte",
  "hameau",
  "hangar",
  "hanneton",
  "haricot",
  "harmonie",
  "harpon",
  "hasard",
  "hélium",
  "hématome",
  "herbe",
  "hérisson",
  "hermine",
  "héron",
  "hésiter",
  "heureux",
  "hiberner",
  "hibou",
  "hilarant",
  "histoire",
  "hiver",
  "homard",
  "hommage",
  "homogène",
  "honneur",
  "honorer",
  "honteux",
  "horde",
  "horizon",
  "horloge",
  "hormone",
  "horrible",
  "houleux",
  "housse",
  "hublot",
  "huileux",
  "humain",
  "humble",
  "humide",
  "humour",
  "hurler",
  "hydromel",
  "hygiène",
  "hymne",
  "hypnose",
  "idylle",
  "ignorer",
  "iguane",
  "illicite",
  "illusion",
  "image",
  "imbiber",
  "imiter",
  "immense",
  "immobile",
  "immuable",
  "impact",
  "impérial",
  "implorer",
  "imposer",
  "imprimer",
  "imputer",
  "incarner",
  "incendie",
  "incident",
  "incliner",
  "incolore",
  "indexer",
  "indice",
  "inductif",
  "inédit",
  "ineptie",
  "inexact",
  "infini",
  "infliger",
  "informer",
  "infusion",
  "ingérer",
  "inhaler",
  "inhiber",
  "injecter",
  "injure",
  "innocent",
  "inoculer",
  "inonder",
  "inscrire",
  "insecte",
  "insigne",
  "insolite",
  "inspirer",
  "instinct",
  "insulter",
  "intact",
  "intense",
  "intime",
  "intrigue",
  "intuitif",
  "inutile",
  "invasion",
  "inventer",
  "inviter",
  "invoquer",
  "ironique",
  "irradier",
  "irréel",
  "irriter",
  "isoler",
  "ivoire",
  "ivresse",
  "jaguar",
  "jaillir",
  "jambe",
  "janvier",
  "jardin",
  "jauger",
  "jaune",
  "javelot",
  "jetable",
  "jeton",
  "jeudi",
  "jeunesse",
  "joindre",
  "joncher",
  "jongler",
  "joueur",
  "jouissif",
  "journal",
  "jovial",
  "joyau",
  "joyeux",
  "jubiler",
  "jugement",
  "junior",
  "jupon",
  "juriste",
  "justice",
  "juteux",
  "juvénile",
  "kayak",
  "kimono",
  "kiosque",
  "label",
  "labial",
  "labourer",
  "lacérer",
  "lactose",
  "lagune",
  "laine",
  "laisser",
  "laitier",
  "lambeau",
  "lamelle",
  "lampe",
  "lanceur",
  "langage",
  "lanterne",
  "lapin",
  "largeur",
  "larme",
  "laurier",
  "lavabo",
  "lavoir",
  "lecture",
  "légal",
  "léger",
  "légume",
  "lessive",
  "lettre",
  "levier",
  "lexique",
  "lézard",
  "liasse",
  "libérer",
  "libre",
  "licence",
  "licorne",
  "liège",
  "lièvre",
  "ligature",
  "ligoter",
  "ligue",
  "limer",
  "limite",
  "limonade",
  "limpide",
  "linéaire",
  "lingot",
  "lionceau",
  "liquide",
  "lisière",
  "lister",
  "lithium",
  "litige",
  "littoral",
  "livreur",
  "logique",
  "lointain",
  "loisir",
  "lombric",
  "loterie",
  "louer",
  "lourd",
  "loutre",
  "louve",
  "loyal",
  "lubie",
  "lucide",
  "lucratif",
  "lueur",
  "lugubre",
  "luisant",
  "lumière",
  "lunaire",
  "lundi",
  "luron",
  "lutter",
  "luxueux",
  "machine",
  "magasin",
  "magenta",
  "magique",
  "maigre",
  "maillon",
  "maintien",
  "mairie",
  "maison",
  "majorer",
  "malaxer",
  "maléfice",
  "malheur",
  "malice",
  "mallette",
  "mammouth",
  "mandater",
  "maniable",
  "manquant",
  "manteau",
  "manuel",
  "marathon",
  "marbre",
  "marchand",
  "mardi",
  "maritime",
  "marqueur",
  "marron",
  "marteler",
  "mascotte",
  "massif",
  "matériel",
  "matière",
  "matraque",
  "maudire",
  "maussade",
  "mauve",
  "maximal",
  "méchant",
  "méconnu",
  "médaille",
  "médecin",
  "méditer",
  "méduse",
  "meilleur",
  "mélange",
  "mélodie",
  "membre",
  "mémoire",
  "menacer",
  "mener",
  "menhir",
  "mensonge",
  "mentor",
  "mercredi",
  "mérite",
  "merle",
  "messager",
  "mesure",
  "métal",
  "météore",
  "méthode",
  "métier",
  "meuble",
  "miauler",
  "microbe",
  "miette",
  "mignon",
  "migrer",
  "milieu",
  "million",
  "mimique",
  "mince",
  "minéral",
  "minimal",
  "minorer",
  "minute",
  "miracle",
  "miroiter",
  "missile",
  "mixte",
  "mobile",
  "moderne",
  "moelleux",
  "mondial",
  "moniteur",
  "monnaie",
  "monotone",
  "monstre",
  "montagne",
  "monument",
  "moqueur",
  "morceau",
  "morsure",
  "mortier",
  "moteur",
  "motif",
  "mouche",
  "moufle",
  "moulin",
  "mousson",
  "mouton",
  "mouvant",
  "multiple",
  "munition",
  "muraille",
  "murène",
  "murmure",
  "muscle",
  "muséum",
  "musicien",
  "mutation",
  "muter",
  "mutuel",
  "myriade",
  "myrtille",
  "mystère",
  "mythique",
  "nageur",
  "nappe",
  "narquois",
  "narrer",
  "natation",
  "nation",
  "nature",
  "naufrage",
  "nautique",
  "navire",
  "nébuleux",
  "nectar",
  "néfaste",
  "négation",
  "négliger",
  "négocier",
  "neige",
  "nerveux",
  "nettoyer",
  "neurone",
  "neutron",
  "neveu",
  "niche",
  "nickel",
  "nitrate",
  "niveau",
  "noble",
  "nocif",
  "nocturne",
  "noirceur",
  "noisette",
  "nomade",
  "nombreux",
  "nommer",
  "normatif",
  "notable",
  "notifier",
  "notoire",
  "nourrir",
  "nouveau",
  "novateur",
  "novembre",
  "novice",
  "nuage",
  "nuancer",
  "nuire",
  "nuisible",
  "numéro",
  "nuptial",
  "nuque",
  "nutritif",
  "obéir",
  "objectif",
  "obliger",
  "obscur",
  "observer",
  "obstacle",
  "obtenir",
  "obturer",
  "occasion",
  "occuper",
  "océan",
  "octobre",
  "octroyer",
  "octupler",
  "oculaire",
  "odeur",
  "odorant",
  "offenser",
  "officier",
  "offrir",
  "ogive",
  "oiseau",
  "oisillon",
  "olfactif",
  "olivier",
  "ombrage",
  "omettre",
  "onctueux",
  "onduler",
  "onéreux",
  "onirique",
  "opale",
  "opaque",
  "opérer",
  "opinion",
  "opportun",
  "opprimer",
  "opter",
  "optique",
  "orageux",
  "orange",
  "orbite",
  "ordonner",
  "oreille",
  "organe",
  "orgueil",
  "orifice",
  "ornement",
  "orque",
  "ortie",
  "osciller",
  "osmose",
  "ossature",
  "otarie",
  "ouragan",
  "ourson",
  "outil",
  "outrager",
  "ouvrage",
  "ovation",
  "oxyde",
  "oxygène",
  "ozone",
  "paisible",
  "palace",
  "palmarès",
  "palourde",
  "palper",
  "panache",
  "panda",
  "pangolin",
  "paniquer",
  "panneau",
  "panorama",
  "pantalon",
  "papaye",
  "papier",
  "papoter",
  "papyrus",
  "paradoxe",
  "parcelle",
  "paresse",
  "parfumer",
  "parler",
  "parole",
  "parrain",
  "parsemer",
  "partager",
  "parure",
  "parvenir",
  "passion",
  "pastèque",
  "paternel",
  "patience",
  "patron",
  "pavillon",
  "pavoiser",
  "payer",
  "paysage",
  "peigne",
  "peintre",
  "pelage",
  "pélican",
  "pelle",
  "pelouse",
  "peluche",
  "pendule",
  "pénétrer",
  "pénible",
  "pensif",
  "pénurie",
  "pépite",
  "péplum",
  "perdrix",
  "perforer",
  "période",
  "permuter",
  "perplexe",
  "persil",
  "perte",
  "peser",
  "pétale",
  "petit",
  "pétrir",
  "peuple",
  "pharaon",
  "phobie",
  "phoque",
  "photon",
  "phrase",
  "physique",
  "piano",
  "pictural",
  "pièce",
  "pierre",
  "pieuvre",
  "pilote",
  "pinceau",
  "pipette",
  "piquer",
  "pirogue",
  "piscine",
  "piston",
  "pivoter",
  "pixel",
  "pizza",
  "placard",
  "plafond",
  "plaisir",
  "planer",
  "plaque",
  "plastron",
  "plateau",
  "pleurer",
  "plexus",
  "pliage",
  "plomb",
  "plonger",
  "pluie",
  "plumage",
  "pochette",
  "poésie",
  "poète",
  "pointe",
  "poirier",
  "poisson",
  "poivre",
  "polaire",
  "policier",
  "pollen",
  "polygone",
  "pommade",
  "pompier",
  "ponctuel",
  "pondérer",
  "poney",
  "portique",
  "position",
  "posséder",
  "posture",
  "potager",
  "poteau",
  "potion",
  "pouce",
  "poulain",
  "poumon",
  "pourpre",
  "poussin",
  "pouvoir",
  "prairie",
  "pratique",
  "précieux",
  "prédire",
  "préfixe",
  "prélude",
  "prénom",
  "présence",
  "prétexte",
  "prévoir",
  "primitif",
  "prince",
  "prison",
  "priver",
  "problème",
  "procéder",
  "prodige",
  "profond",
  "progrès",
  "proie",
  "projeter",
  "prologue",
  "promener",
  "propre",
  "prospère",
  "protéger",
  "prouesse",
  "proverbe",
  "prudence",
  "pruneau",
  "psychose",
  "public",
  "puceron",
  "puiser",
  "pulpe",
  "pulsar",
  "punaise",
  "punitif",
  "pupitre",
  "purifier",
  "puzzle",
  "pyramide",
  "quasar",
  "querelle",
  "question",
  "quiétude",
  "quitter",
  "quotient",
  "racine",
  "raconter",
  "radieux",
  "ragondin",
  "raideur",
  "raisin",
  "ralentir",
  "rallonge",
  "ramasser",
  "rapide",
  "rasage",
  "ratisser",
  "ravager",
  "ravin",
  "rayonner",
  "réactif",
  "réagir",
  "réaliser",
  "réanimer",
  "recevoir",
  "réciter",
  "réclamer",
  "récolter",
  "recruter",
  "reculer",
  "recycler",
  "rédiger",
  "redouter",
  "refaire",
  "réflexe",
  "réformer",
  "refrain",
  "refuge",
  "régalien",
  "région",
  "réglage",
  "régulier",
  "réitérer",
  "rejeter",
  "rejouer",
  "relatif",
  "relever",
  "relief",
  "remarque",
  "remède",
  "remise",
  "remonter",
  "remplir",
  "remuer",
  "renard",
  "renfort",
  "renifler",
  "renoncer",
  "rentrer",
  "renvoi",
  "replier",
  "reporter",
  "reprise",
  "reptile",
  "requin",
  "réserve",
  "résineux",
  "résoudre",
  "respect",
  "rester",
  "résultat",
  "rétablir",
  "retenir",
  "réticule",
  "retomber",
  "retracer",
  "réunion",
  "réussir",
  "revanche",
  "revivre",
  "révolte",
  "révulsif",
  "richesse",
  "rideau",
  "rieur",
  "rigide",
  "rigoler",
  "rincer",
  "riposter",
  "risible",
  "risque",
  "rituel",
  "rival",
  "rivière",
  "rocheux",
  "romance",
  "rompre",
  "ronce",
  "rondin",
  "roseau",
  "rosier",
  "rotatif",
  "rotor",
  "rotule",
  "rouge",
  "rouille",
  "rouleau",
  "routine",
  "royaume",
  "ruban",
  "rubis",
  "ruche",
  "ruelle",
  "rugueux",
  "ruiner",
  "ruisseau",
  "ruser",
  "rustique",
  "rythme",
  "sabler",
  "saboter",
  "sabre",
  "sacoche",
  "safari",
  "sagesse",
  "saisir",
  "salade",
  "salive",
  "salon",
  "saluer",
  "samedi",
  "sanction",
  "sanglier",
  "sarcasme",
  "sardine",
  "saturer",
  "saugrenu",
  "saumon",
  "sauter",
  "sauvage",
  "savant",
  "savonner",
  "scalpel",
  "scandale",
  "scélérat",
  "scénario",
  "sceptre",
  "schéma",
  "science",
  "scinder",
  "score",
  "scrutin",
  "sculpter",
  "séance",
  "sécable",
  "sécher",
  "secouer",
  "sécréter",
  "sédatif",
  "séduire",
  "seigneur",
  "séjour",
  "sélectif",
  "semaine",
  "sembler",
  "semence",
  "séminal",
  "sénateur",
  "sensible",
  "sentence",
  "séparer",
  "séquence",
  "serein",
  "sergent",
  "sérieux",
  "serrure",
  "sérum",
  "service",
  "sésame",
  "sévir",
  "sevrage",
  "sextuple",
  "sidéral",
  "siècle",
  "siéger",
  "siffler",
  "sigle",
  "signal",
  "silence",
  "silicium",
  "simple",
  "sincère",
  "sinistre",
  "siphon",
  "sirop",
  "sismique",
  "situer",
  "skier",
  "social",
  "socle",
  "sodium",
  "soigneux",
  "soldat",
  "soleil",
  "solitude",
  "soluble",
  "sombre",
  "sommeil",
  "somnoler",
  "sonde",
  "songeur",
  "sonnette",
  "sonore",
  "sorcier",
  "sortir",
  "sosie",
  "sottise",
  "soucieux",
  "soudure",
  "souffle",
  "soulever",
  "soupape",
  "source",
  "soutirer",
  "souvenir",
  "spacieux",
  "spatial",
  "spécial",
  "sphère",
  "spiral",
  "stable",
  "station",
  "sternum",
  "stimulus",
  "stipuler",
  "strict",
  "studieux",
  "stupeur",
  "styliste",
  "sublime",
  "substrat",
  "subtil",
  "subvenir",
  "succès",
  "sucre",
  "suffixe",
  "suggérer",
  "suiveur",
  "sulfate",
  "superbe",
  "supplier",
  "surface",
  "suricate",
  "surmener",
  "surprise",
  "sursaut",
  "survie",
  "suspect",
  "syllabe",
  "symbole",
  "symétrie",
  "synapse",
  "syntaxe",
  "système",
  "tabac",
  "tablier",
  "tactile",
  "tailler",
  "talent",
  "talisman",
  "talonner",
  "tambour",
  "tamiser",
  "tangible",
  "tapis",
  "taquiner",
  "tarder",
  "tarif",
  "tartine",
  "tasse",
  "tatami",
  "tatouage",
  "taupe",
  "taureau",
  "taxer",
  "témoin",
  "temporel",
  "tenaille",
  "tendre",
  "teneur",
  "tenir",
  "tension",
  "terminer",
  "terne",
  "terrible",
  "tétine",
  "texte",
  "thème",
  "théorie",
  "thérapie",
  "thorax",
  "tibia",
  "tiède",
  "timide",
  "tirelire",
  "tiroir",
  "tissu",
  "titane",
  "titre",
  "tituber",
  "toboggan",
  "tolérant",
  "tomate",
  "tonique",
  "tonneau",
  "toponyme",
  "torche",
  "tordre",
  "tornade",
  "torpille",
  "torrent",
  "torse",
  "tortue",
  "totem",
  "toucher",
  "tournage",
  "tousser",
  "toxine",
  "traction",
  "trafic",
  "tragique",
  "trahir",
  "train",
  "trancher",
  "travail",
  "trèfle",
  "tremper",
  "trésor",
  "treuil",
  "triage",
  "tribunal",
  "tricoter",
  "trilogie",
  "triomphe",
  "tripler",
  "triturer",
  "trivial",
  "trombone",
  "tronc",
  "tropical",
  "troupeau",
  "tuile",
  "tulipe",
  "tumulte",
  "tunnel",
  "turbine",
  "tuteur",
  "tutoyer",
  "tuyau",
  "tympan",
  "typhon",
  "typique",
  "tyran",
  "ubuesque",
  "ultime",
  "ultrason",
  "unanime",
  "unifier",
  "union",
  "unique",
  "unitaire",
  "univers",
  "uranium",
  "urbain",
  "urticant",
  "usage",
  "usine",
  "usuel",
  "usure",
  "utile",
  "utopie",
  "vacarme",
  "vaccin",
  "vagabond",
  "vague",
  "vaillant",
  "vaincre",
  "vaisseau",
  "valable",
  "valise",
  "vallon",
  "valve",
  "vampire",
  "vanille",
  "vapeur",
  "varier",
  "vaseux",
  "vassal",
  "vaste",
  "vecteur",
  "vedette",
  "végétal",
  "véhicule",
  "veinard",
  "véloce",
  "vendredi",
  "vénérer",
  "venger",
  "venimeux",
  "ventouse",
  "verdure",
  "vérin",
  "vernir",
  "verrou",
  "verser",
  "vertu",
  "veston",
  "vétéran",
  "vétuste",
  "vexant",
  "vexer",
  "viaduc",
  "viande",
  "victoire",
  "vidange",
  "vidéo",
  "vignette",
  "vigueur",
  "vilain",
  "village",
  "vinaigre",
  "violon",
  "vipère",
  "virement",
  "virtuose",
  "virus",
  "visage",
  "viseur",
  "vision",
  "visqueux",
  "visuel",
  "vital",
  "vitesse",
  "viticole",
  "vitrine",
  "vivace",
  "vivipare",
  "vocation",
  "voguer",
  "voile",
  "voisin",
  "voiture",
  "volaille",
  "volcan",
  "voltiger",
  "volume",
  "vorace",
  "vortex",
  "voter",
  "vouloir",
  "voyage",
  "voyelle",
  "wagon",
  "xénon",
  "yacht",
  "zèbre",
  "zénith",
  "zeste",
  "zoologie"
]

},{}],160:[function(require,module,exports){
module.exports=[
  "abaco",
  "abbaglio",
  "abbinato",
  "abete",
  "abisso",
  "abolire",
  "abrasivo",
  "abrogato",
  "accadere",
  "accenno",
  "accusato",
  "acetone",
  "achille",
  "acido",
  "acqua",
  "acre",
  "acrilico",
  "acrobata",
  "acuto",
  "adagio",
  "addebito",
  "addome",
  "adeguato",
  "aderire",
  "adipe",
  "adottare",
  "adulare",
  "affabile",
  "affetto",
  "affisso",
  "affranto",
  "aforisma",
  "afoso",
  "africano",
  "agave",
  "agente",
  "agevole",
  "aggancio",
  "agire",
  "agitare",
  "agonismo",
  "agricolo",
  "agrumeto",
  "aguzzo",
  "alabarda",
  "alato",
  "albatro",
  "alberato",
  "albo",
  "albume",
  "alce",
  "alcolico",
  "alettone",
  "alfa",
  "algebra",
  "aliante",
  "alibi",
  "alimento",
  "allagato",
  "allegro",
  "allievo",
  "allodola",
  "allusivo",
  "almeno",
  "alogeno",
  "alpaca",
  "alpestre",
  "altalena",
  "alterno",
  "alticcio",
  "altrove",
  "alunno",
  "alveolo",
  "alzare",
  "amalgama",
  "amanita",
  "amarena",
  "ambito",
  "ambrato",
  "ameba",
  "america",
  "ametista",
  "amico",
  "ammasso",
  "ammenda",
  "ammirare",
  "ammonito",
  "amore",
  "ampio",
  "ampliare",
  "amuleto",
  "anacardo",
  "anagrafe",
  "analista",
  "anarchia",
  "anatra",
  "anca",
  "ancella",
  "ancora",
  "andare",
  "andrea",
  "anello",
  "angelo",
  "angolare",
  "angusto",
  "anima",
  "annegare",
  "annidato",
  "anno",
  "annuncio",
  "anonimo",
  "anticipo",
  "anzi",
  "apatico",
  "apertura",
  "apode",
  "apparire",
  "appetito",
  "appoggio",
  "approdo",
  "appunto",
  "aprile",
  "arabica",
  "arachide",
  "aragosta",
  "araldica",
  "arancio",
  "aratura",
  "arazzo",
  "arbitro",
  "archivio",
  "ardito",
  "arenile",
  "argento",
  "argine",
  "arguto",
  "aria",
  "armonia",
  "arnese",
  "arredato",
  "arringa",
  "arrosto",
  "arsenico",
  "arso",
  "artefice",
  "arzillo",
  "asciutto",
  "ascolto",
  "asepsi",
  "asettico",
  "asfalto",
  "asino",
  "asola",
  "aspirato",
  "aspro",
  "assaggio",
  "asse",
  "assoluto",
  "assurdo",
  "asta",
  "astenuto",
  "astice",
  "astratto",
  "atavico",
  "ateismo",
  "atomico",
  "atono",
  "attesa",
  "attivare",
  "attorno",
  "attrito",
  "attuale",
  "ausilio",
  "austria",
  "autista",
  "autonomo",
  "autunno",
  "avanzato",
  "avere",
  "avvenire",
  "avviso",
  "avvolgere",
  "azione",
  "azoto",
  "azzimo",
  "azzurro",
  "babele",
  "baccano",
  "bacino",
  "baco",
  "badessa",
  "badilata",
  "bagnato",
  "baita",
  "balcone",
  "baldo",
  "balena",
  "ballata",
  "balzano",
  "bambino",
  "bandire",
  "baraonda",
  "barbaro",
  "barca",
  "baritono",
  "barlume",
  "barocco",
  "basilico",
  "basso",
  "batosta",
  "battuto",
  "baule",
  "bava",
  "bavosa",
  "becco",
  "beffa",
  "belgio",
  "belva",
  "benda",
  "benevole",
  "benigno",
  "benzina",
  "bere",
  "berlina",
  "beta",
  "bibita",
  "bici",
  "bidone",
  "bifido",
  "biga",
  "bilancia",
  "bimbo",
  "binocolo",
  "biologo",
  "bipede",
  "bipolare",
  "birbante",
  "birra",
  "biscotto",
  "bisesto",
  "bisnonno",
  "bisonte",
  "bisturi",
  "bizzarro",
  "blando",
  "blatta",
  "bollito",
  "bonifico",
  "bordo",
  "bosco",
  "botanico",
  "bottino",
  "bozzolo",
  "braccio",
  "bradipo",
  "brama",
  "branca",
  "bravura",
  "bretella",
  "brevetto",
  "brezza",
  "briglia",
  "brillante",
  "brindare",
  "broccolo",
  "brodo",
  "bronzina",
  "brullo",
  "bruno",
  "bubbone",
  "buca",
  "budino",
  "buffone",
  "buio",
  "bulbo",
  "buono",
  "burlone",
  "burrasca",
  "bussola",
  "busta",
  "cadetto",
  "caduco",
  "calamaro",
  "calcolo",
  "calesse",
  "calibro",
  "calmo",
  "caloria",
  "cambusa",
  "camerata",
  "camicia",
  "cammino",
  "camola",
  "campale",
  "canapa",
  "candela",
  "cane",
  "canino",
  "canotto",
  "cantina",
  "capace",
  "capello",
  "capitolo",
  "capogiro",
  "cappero",
  "capra",
  "capsula",
  "carapace",
  "carcassa",
  "cardo",
  "carisma",
  "carovana",
  "carretto",
  "cartolina",
  "casaccio",
  "cascata",
  "caserma",
  "caso",
  "cassone",
  "castello",
  "casuale",
  "catasta",
  "catena",
  "catrame",
  "cauto",
  "cavillo",
  "cedibile",
  "cedrata",
  "cefalo",
  "celebre",
  "cellulare",
  "cena",
  "cenone",
  "centesimo",
  "ceramica",
  "cercare",
  "certo",
  "cerume",
  "cervello",
  "cesoia",
  "cespo",
  "ceto",
  "chela",
  "chiaro",
  "chicca",
  "chiedere",
  "chimera",
  "china",
  "chirurgo",
  "chitarra",
  "ciao",
  "ciclismo",
  "cifrare",
  "cigno",
  "cilindro",
  "ciottolo",
  "circa",
  "cirrosi",
  "citrico",
  "cittadino",
  "ciuffo",
  "civetta",
  "civile",
  "classico",
  "clinica",
  "cloro",
  "cocco",
  "codardo",
  "codice",
  "coerente",
  "cognome",
  "collare",
  "colmato",
  "colore",
  "colposo",
  "coltivato",
  "colza",
  "coma",
  "cometa",
  "commando",
  "comodo",
  "computer",
  "comune",
  "conciso",
  "condurre",
  "conferma",
  "congelare",
  "coniuge",
  "connesso",
  "conoscere",
  "consumo",
  "continuo",
  "convegno",
  "coperto",
  "copione",
  "coppia",
  "copricapo",
  "corazza",
  "cordata",
  "coricato",
  "cornice",
  "corolla",
  "corpo",
  "corredo",
  "corsia",
  "cortese",
  "cosmico",
  "costante",
  "cottura",
  "covato",
  "cratere",
  "cravatta",
  "creato",
  "credere",
  "cremoso",
  "crescita",
  "creta",
  "criceto",
  "crinale",
  "crisi",
  "critico",
  "croce",
  "cronaca",
  "crostata",
  "cruciale",
  "crusca",
  "cucire",
  "cuculo",
  "cugino",
  "cullato",
  "cupola",
  "curatore",
  "cursore",
  "curvo",
  "cuscino",
  "custode",
  "dado",
  "daino",
  "dalmata",
  "damerino",
  "daniela",
  "dannoso",
  "danzare",
  "datato",
  "davanti",
  "davvero",
  "debutto",
  "decennio",
  "deciso",
  "declino",
  "decollo",
  "decreto",
  "dedicato",
  "definito",
  "deforme",
  "degno",
  "delegare",
  "delfino",
  "delirio",
  "delta",
  "demenza",
  "denotato",
  "dentro",
  "deposito",
  "derapata",
  "derivare",
  "deroga",
  "descritto",
  "deserto",
  "desiderio",
  "desumere",
  "detersivo",
  "devoto",
  "diametro",
  "dicembre",
  "diedro",
  "difeso",
  "diffuso",
  "digerire",
  "digitale",
  "diluvio",
  "dinamico",
  "dinnanzi",
  "dipinto",
  "diploma",
  "dipolo",
  "diradare",
  "dire",
  "dirotto",
  "dirupo",
  "disagio",
  "discreto",
  "disfare",
  "disgelo",
  "disposto",
  "distanza",
  "disumano",
  "dito",
  "divano",
  "divelto",
  "dividere",
  "divorato",
  "doblone",
  "docente",
  "doganale",
  "dogma",
  "dolce",
  "domato",
  "domenica",
  "dominare",
  "dondolo",
  "dono",
  "dormire",
  "dote",
  "dottore",
  "dovuto",
  "dozzina",
  "drago",
  "druido",
  "dubbio",
  "dubitare",
  "ducale",
  "duna",
  "duomo",
  "duplice",
  "duraturo",
  "ebano",
  "eccesso",
  "ecco",
  "eclissi",
  "economia",
  "edera",
  "edicola",
  "edile",
  "editoria",
  "educare",
  "egemonia",
  "egli",
  "egoismo",
  "egregio",
  "elaborato",
  "elargire",
  "elegante",
  "elencato",
  "eletto",
  "elevare",
  "elfico",
  "elica",
  "elmo",
  "elsa",
  "eluso",
  "emanato",
  "emblema",
  "emesso",
  "emiro",
  "emotivo",
  "emozione",
  "empirico",
  "emulo",
  "endemico",
  "enduro",
  "energia",
  "enfasi",
  "enoteca",
  "entrare",
  "enzima",
  "epatite",
  "epilogo",
  "episodio",
  "epocale",
  "eppure",
  "equatore",
  "erario",
  "erba",
  "erboso",
  "erede",
  "eremita",
  "erigere",
  "ermetico",
  "eroe",
  "erosivo",
  "errante",
  "esagono",
  "esame",
  "esanime",
  "esaudire",
  "esca",
  "esempio",
  "esercito",
  "esibito",
  "esigente",
  "esistere",
  "esito",
  "esofago",
  "esortato",
  "esoso",
  "espanso",
  "espresso",
  "essenza",
  "esso",
  "esteso",
  "estimare",
  "estonia",
  "estroso",
  "esultare",
  "etilico",
  "etnico",
  "etrusco",
  "etto",
  "euclideo",
  "europa",
  "evaso",
  "evidenza",
  "evitato",
  "evoluto",
  "evviva",
  "fabbrica",
  "faccenda",
  "fachiro",
  "falco",
  "famiglia",
  "fanale",
  "fanfara",
  "fango",
  "fantasma",
  "fare",
  "farfalla",
  "farinoso",
  "farmaco",
  "fascia",
  "fastoso",
  "fasullo",
  "faticare",
  "fato",
  "favoloso",
  "febbre",
  "fecola",
  "fede",
  "fegato",
  "felpa",
  "feltro",
  "femmina",
  "fendere",
  "fenomeno",
  "fermento",
  "ferro",
  "fertile",
  "fessura",
  "festivo",
  "fetta",
  "feudo",
  "fiaba",
  "fiducia",
  "fifa",
  "figurato",
  "filo",
  "finanza",
  "finestra",
  "finire",
  "fiore",
  "fiscale",
  "fisico",
  "fiume",
  "flacone",
  "flamenco",
  "flebo",
  "flemma",
  "florido",
  "fluente",
  "fluoro",
  "fobico",
  "focaccia",
  "focoso",
  "foderato",
  "foglio",
  "folata",
  "folclore",
  "folgore",
  "fondente",
  "fonetico",
  "fonia",
  "fontana",
  "forbito",
  "forchetta",
  "foresta",
  "formica",
  "fornaio",
  "foro",
  "fortezza",
  "forzare",
  "fosfato",
  "fosso",
  "fracasso",
  "frana",
  "frassino",
  "fratello",
  "freccetta",
  "frenata",
  "fresco",
  "frigo",
  "frollino",
  "fronde",
  "frugale",
  "frutta",
  "fucilata",
  "fucsia",
  "fuggente",
  "fulmine",
  "fulvo",
  "fumante",
  "fumetto",
  "fumoso",
  "fune",
  "funzione",
  "fuoco",
  "furbo",
  "furgone",
  "furore",
  "fuso",
  "futile",
  "gabbiano",
  "gaffe",
  "galateo",
  "gallina",
  "galoppo",
  "gambero",
  "gamma",
  "garanzia",
  "garbo",
  "garofano",
  "garzone",
  "gasdotto",
  "gasolio",
  "gastrico",
  "gatto",
  "gaudio",
  "gazebo",
  "gazzella",
  "geco",
  "gelatina",
  "gelso",
  "gemello",
  "gemmato",
  "gene",
  "genitore",
  "gennaio",
  "genotipo",
  "gergo",
  "ghepardo",
  "ghiaccio",
  "ghisa",
  "giallo",
  "gilda",
  "ginepro",
  "giocare",
  "gioiello",
  "giorno",
  "giove",
  "girato",
  "girone",
  "gittata",
  "giudizio",
  "giurato",
  "giusto",
  "globulo",
  "glutine",
  "gnomo",
  "gobba",
  "golf",
  "gomito",
  "gommone",
  "gonfio",
  "gonna",
  "governo",
  "gracile",
  "grado",
  "grafico",
  "grammo",
  "grande",
  "grattare",
  "gravoso",
  "grazia",
  "greca",
  "gregge",
  "grifone",
  "grigio",
  "grinza",
  "grotta",
  "gruppo",
  "guadagno",
  "guaio",
  "guanto",
  "guardare",
  "gufo",
  "guidare",
  "ibernato",
  "icona",
  "identico",
  "idillio",
  "idolo",
  "idra",
  "idrico",
  "idrogeno",
  "igiene",
  "ignaro",
  "ignorato",
  "ilare",
  "illeso",
  "illogico",
  "illudere",
  "imballo",
  "imbevuto",
  "imbocco",
  "imbuto",
  "immane",
  "immerso",
  "immolato",
  "impacco",
  "impeto",
  "impiego",
  "importo",
  "impronta",
  "inalare",
  "inarcare",
  "inattivo",
  "incanto",
  "incendio",
  "inchino",
  "incisivo",
  "incluso",
  "incontro",
  "incrocio",
  "incubo",
  "indagine",
  "india",
  "indole",
  "inedito",
  "infatti",
  "infilare",
  "inflitto",
  "ingaggio",
  "ingegno",
  "inglese",
  "ingordo",
  "ingrosso",
  "innesco",
  "inodore",
  "inoltrare",
  "inondato",
  "insano",
  "insetto",
  "insieme",
  "insonnia",
  "insulina",
  "intasato",
  "intero",
  "intonaco",
  "intuito",
  "inumidire",
  "invalido",
  "invece",
  "invito",
  "iperbole",
  "ipnotico",
  "ipotesi",
  "ippica",
  "iride",
  "irlanda",
  "ironico",
  "irrigato",
  "irrorare",
  "isolato",
  "isotopo",
  "isterico",
  "istituto",
  "istrice",
  "italia",
  "iterare",
  "labbro",
  "labirinto",
  "lacca",
  "lacerato",
  "lacrima",
  "lacuna",
  "laddove",
  "lago",
  "lampo",
  "lancetta",
  "lanterna",
  "lardoso",
  "larga",
  "laringe",
  "lastra",
  "latenza",
  "latino",
  "lattuga",
  "lavagna",
  "lavoro",
  "legale",
  "leggero",
  "lembo",
  "lentezza",
  "lenza",
  "leone",
  "lepre",
  "lesivo",
  "lessato",
  "lesto",
  "letterale",
  "leva",
  "levigato",
  "libero",
  "lido",
  "lievito",
  "lilla",
  "limatura",
  "limitare",
  "limpido",
  "lineare",
  "lingua",
  "liquido",
  "lira",
  "lirica",
  "lisca",
  "lite",
  "litigio",
  "livrea",
  "locanda",
  "lode",
  "logica",
  "lombare",
  "londra",
  "longevo",
  "loquace",
  "lorenzo",
  "loto",
  "lotteria",
  "luce",
  "lucidato",
  "lumaca",
  "luminoso",
  "lungo",
  "lupo",
  "luppolo",
  "lusinga",
  "lusso",
  "lutto",
  "macabro",
  "macchina",
  "macero",
  "macinato",
  "madama",
  "magico",
  "maglia",
  "magnete",
  "magro",
  "maiolica",
  "malafede",
  "malgrado",
  "malinteso",
  "malsano",
  "malto",
  "malumore",
  "mana",
  "mancia",
  "mandorla",
  "mangiare",
  "manifesto",
  "mannaro",
  "manovra",
  "mansarda",
  "mantide",
  "manubrio",
  "mappa",
  "maratona",
  "marcire",
  "maretta",
  "marmo",
  "marsupio",
  "maschera",
  "massaia",
  "mastino",
  "materasso",
  "matricola",
  "mattone",
  "maturo",
  "mazurca",
  "meandro",
  "meccanico",
  "mecenate",
  "medesimo",
  "meditare",
  "mega",
  "melassa",
  "melis",
  "melodia",
  "meninge",
  "meno",
  "mensola",
  "mercurio",
  "merenda",
  "merlo",
  "meschino",
  "mese",
  "messere",
  "mestolo",
  "metallo",
  "metodo",
  "mettere",
  "miagolare",
  "mica",
  "micelio",
  "michele",
  "microbo",
  "midollo",
  "miele",
  "migliore",
  "milano",
  "milite",
  "mimosa",
  "minerale",
  "mini",
  "minore",
  "mirino",
  "mirtillo",
  "miscela",
  "missiva",
  "misto",
  "misurare",
  "mitezza",
  "mitigare",
  "mitra",
  "mittente",
  "mnemonico",
  "modello",
  "modifica",
  "modulo",
  "mogano",
  "mogio",
  "mole",
  "molosso",
  "monastero",
  "monco",
  "mondina",
  "monetario",
  "monile",
  "monotono",
  "monsone",
  "montato",
  "monviso",
  "mora",
  "mordere",
  "morsicato",
  "mostro",
  "motivato",
  "motosega",
  "motto",
  "movenza",
  "movimento",
  "mozzo",
  "mucca",
  "mucosa",
  "muffa",
  "mughetto",
  "mugnaio",
  "mulatto",
  "mulinello",
  "multiplo",
  "mummia",
  "munto",
  "muovere",
  "murale",
  "musa",
  "muscolo",
  "musica",
  "mutevole",
  "muto",
  "nababbo",
  "nafta",
  "nanometro",
  "narciso",
  "narice",
  "narrato",
  "nascere",
  "nastrare",
  "naturale",
  "nautica",
  "naviglio",
  "nebulosa",
  "necrosi",
  "negativo",
  "negozio",
  "nemmeno",
  "neofita",
  "neretto",
  "nervo",
  "nessuno",
  "nettuno",
  "neutrale",
  "neve",
  "nevrotico",
  "nicchia",
  "ninfa",
  "nitido",
  "nobile",
  "nocivo",
  "nodo",
  "nome",
  "nomina",
  "nordico",
  "normale",
  "norvegese",
  "nostrano",
  "notare",
  "notizia",
  "notturno",
  "novella",
  "nucleo",
  "nulla",
  "numero",
  "nuovo",
  "nutrire",
  "nuvola",
  "nuziale",
  "oasi",
  "obbedire",
  "obbligo",
  "obelisco",
  "oblio",
  "obolo",
  "obsoleto",
  "occasione",
  "occhio",
  "occidente",
  "occorrere",
  "occultare",
  "ocra",
  "oculato",
  "odierno",
  "odorare",
  "offerta",
  "offrire",
  "offuscato",
  "oggetto",
  "oggi",
  "ognuno",
  "olandese",
  "olfatto",
  "oliato",
  "oliva",
  "ologramma",
  "oltre",
  "omaggio",
  "ombelico",
  "ombra",
  "omega",
  "omissione",
  "ondoso",
  "onere",
  "onice",
  "onnivoro",
  "onorevole",
  "onta",
  "operato",
  "opinione",
  "opposto",
  "oracolo",
  "orafo",
  "ordine",
  "orecchino",
  "orefice",
  "orfano",
  "organico",
  "origine",
  "orizzonte",
  "orma",
  "ormeggio",
  "ornativo",
  "orologio",
  "orrendo",
  "orribile",
  "ortensia",
  "ortica",
  "orzata",
  "orzo",
  "osare",
  "oscurare",
  "osmosi",
  "ospedale",
  "ospite",
  "ossa",
  "ossidare",
  "ostacolo",
  "oste",
  "otite",
  "otre",
  "ottagono",
  "ottimo",
  "ottobre",
  "ovale",
  "ovest",
  "ovino",
  "oviparo",
  "ovocito",
  "ovunque",
  "ovviare",
  "ozio",
  "pacchetto",
  "pace",
  "pacifico",
  "padella",
  "padrone",
  "paese",
  "paga",
  "pagina",
  "palazzina",
  "palesare",
  "pallido",
  "palo",
  "palude",
  "pandoro",
  "pannello",
  "paolo",
  "paonazzo",
  "paprica",
  "parabola",
  "parcella",
  "parere",
  "pargolo",
  "pari",
  "parlato",
  "parola",
  "partire",
  "parvenza",
  "parziale",
  "passivo",
  "pasticca",
  "patacca",
  "patologia",
  "pattume",
  "pavone",
  "peccato",
  "pedalare",
  "pedonale",
  "peggio",
  "peloso",
  "penare",
  "pendice",
  "penisola",
  "pennuto",
  "penombra",
  "pensare",
  "pentola",
  "pepe",
  "pepita",
  "perbene",
  "percorso",
  "perdonato",
  "perforare",
  "pergamena",
  "periodo",
  "permesso",
  "perno",
  "perplesso",
  "persuaso",
  "pertugio",
  "pervaso",
  "pesatore",
  "pesista",
  "peso",
  "pestifero",
  "petalo",
  "pettine",
  "petulante",
  "pezzo",
  "piacere",
  "pianta",
  "piattino",
  "piccino",
  "picozza",
  "piega",
  "pietra",
  "piffero",
  "pigiama",
  "pigolio",
  "pigro",
  "pila",
  "pilifero",
  "pillola",
  "pilota",
  "pimpante",
  "pineta",
  "pinna",
  "pinolo",
  "pioggia",
  "piombo",
  "piramide",
  "piretico",
  "pirite",
  "pirolisi",
  "pitone",
  "pizzico",
  "placebo",
  "planare",
  "plasma",
  "platano",
  "plenario",
  "pochezza",
  "poderoso",
  "podismo",
  "poesia",
  "poggiare",
  "polenta",
  "poligono",
  "pollice",
  "polmonite",
  "polpetta",
  "polso",
  "poltrona",
  "polvere",
  "pomice",
  "pomodoro",
  "ponte",
  "popoloso",
  "porfido",
  "poroso",
  "porpora",
  "porre",
  "portata",
  "posa",
  "positivo",
  "possesso",
  "postulato",
  "potassio",
  "potere",
  "pranzo",
  "prassi",
  "pratica",
  "precluso",
  "predica",
  "prefisso",
  "pregiato",
  "prelievo",
  "premere",
  "prenotare",
  "preparato",
  "presenza",
  "pretesto",
  "prevalso",
  "prima",
  "principe",
  "privato",
  "problema",
  "procura",
  "produrre",
  "profumo",
  "progetto",
  "prolunga",
  "promessa",
  "pronome",
  "proposta",
  "proroga",
  "proteso",
  "prova",
  "prudente",
  "prugna",
  "prurito",
  "psiche",
  "pubblico",
  "pudica",
  "pugilato",
  "pugno",
  "pulce",
  "pulito",
  "pulsante",
  "puntare",
  "pupazzo",
  "pupilla",
  "puro",
  "quadro",
  "qualcosa",
  "quasi",
  "querela",
  "quota",
  "raccolto",
  "raddoppio",
  "radicale",
  "radunato",
  "raffica",
  "ragazzo",
  "ragione",
  "ragno",
  "ramarro",
  "ramingo",
  "ramo",
  "randagio",
  "rantolare",
  "rapato",
  "rapina",
  "rappreso",
  "rasatura",
  "raschiato",
  "rasente",
  "rassegna",
  "rastrello",
  "rata",
  "ravveduto",
  "reale",
  "recepire",
  "recinto",
  "recluta",
  "recondito",
  "recupero",
  "reddito",
  "redimere",
  "regalato",
  "registro",
  "regola",
  "regresso",
  "relazione",
  "remare",
  "remoto",
  "renna",
  "replica",
  "reprimere",
  "reputare",
  "resa",
  "residente",
  "responso",
  "restauro",
  "rete",
  "retina",
  "retorica",
  "rettifica",
  "revocato",
  "riassunto",
  "ribadire",
  "ribelle",
  "ribrezzo",
  "ricarica",
  "ricco",
  "ricevere",
  "riciclato",
  "ricordo",
  "ricreduto",
  "ridicolo",
  "ridurre",
  "rifasare",
  "riflesso",
  "riforma",
  "rifugio",
  "rigare",
  "rigettato",
  "righello",
  "rilassato",
  "rilevato",
  "rimanere",
  "rimbalzo",
  "rimedio",
  "rimorchio",
  "rinascita",
  "rincaro",
  "rinforzo",
  "rinnovo",
  "rinomato",
  "rinsavito",
  "rintocco",
  "rinuncia",
  "rinvenire",
  "riparato",
  "ripetuto",
  "ripieno",
  "riportare",
  "ripresa",
  "ripulire",
  "risata",
  "rischio",
  "riserva",
  "risibile",
  "riso",
  "rispetto",
  "ristoro",
  "risultato",
  "risvolto",
  "ritardo",
  "ritegno",
  "ritmico",
  "ritrovo",
  "riunione",
  "riva",
  "riverso",
  "rivincita",
  "rivolto",
  "rizoma",
  "roba",
  "robotico",
  "robusto",
  "roccia",
  "roco",
  "rodaggio",
  "rodere",
  "roditore",
  "rogito",
  "rollio",
  "romantico",
  "rompere",
  "ronzio",
  "rosolare",
  "rospo",
  "rotante",
  "rotondo",
  "rotula",
  "rovescio",
  "rubizzo",
  "rubrica",
  "ruga",
  "rullino",
  "rumine",
  "rumoroso",
  "ruolo",
  "rupe",
  "russare",
  "rustico",
  "sabato",
  "sabbiare",
  "sabotato",
  "sagoma",
  "salasso",
  "saldatura",
  "salgemma",
  "salivare",
  "salmone",
  "salone",
  "saltare",
  "saluto",
  "salvo",
  "sapere",
  "sapido",
  "saporito",
  "saraceno",
  "sarcasmo",
  "sarto",
  "sassoso",
  "satellite",
  "satira",
  "satollo",
  "saturno",
  "savana",
  "savio",
  "saziato",
  "sbadiglio",
  "sbalzo",
  "sbancato",
  "sbarra",
  "sbattere",
  "sbavare",
  "sbendare",
  "sbirciare",
  "sbloccato",
  "sbocciato",
  "sbrinare",
  "sbruffone",
  "sbuffare",
  "scabroso",
  "scadenza",
  "scala",
  "scambiare",
  "scandalo",
  "scapola",
  "scarso",
  "scatenare",
  "scavato",
  "scelto",
  "scenico",
  "scettro",
  "scheda",
  "schiena",
  "sciarpa",
  "scienza",
  "scindere",
  "scippo",
  "sciroppo",
  "scivolo",
  "sclerare",
  "scodella",
  "scolpito",
  "scomparto",
  "sconforto",
  "scoprire",
  "scorta",
  "scossone",
  "scozzese",
  "scriba",
  "scrollare",
  "scrutinio",
  "scuderia",
  "scultore",
  "scuola",
  "scuro",
  "scusare",
  "sdebitare",
  "sdoganare",
  "seccatura",
  "secondo",
  "sedano",
  "seggiola",
  "segnalato",
  "segregato",
  "seguito",
  "selciato",
  "selettivo",
  "sella",
  "selvaggio",
  "semaforo",
  "sembrare",
  "seme",
  "seminato",
  "sempre",
  "senso",
  "sentire",
  "sepolto",
  "sequenza",
  "serata",
  "serbato",
  "sereno",
  "serio",
  "serpente",
  "serraglio",
  "servire",
  "sestina",
  "setola",
  "settimana",
  "sfacelo",
  "sfaldare",
  "sfamato",
  "sfarzoso",
  "sfaticato",
  "sfera",
  "sfida",
  "sfilato",
  "sfinge",
  "sfocato",
  "sfoderare",
  "sfogo",
  "sfoltire",
  "sforzato",
  "sfratto",
  "sfruttato",
  "sfuggito",
  "sfumare",
  "sfuso",
  "sgabello",
  "sgarbato",
  "sgonfiare",
  "sgorbio",
  "sgrassato",
  "sguardo",
  "sibilo",
  "siccome",
  "sierra",
  "sigla",
  "signore",
  "silenzio",
  "sillaba",
  "simbolo",
  "simpatico",
  "simulato",
  "sinfonia",
  "singolo",
  "sinistro",
  "sino",
  "sintesi",
  "sinusoide",
  "sipario",
  "sisma",
  "sistole",
  "situato",
  "slitta",
  "slogatura",
  "sloveno",
  "smarrito",
  "smemorato",
  "smentito",
  "smeraldo",
  "smilzo",
  "smontare",
  "smottato",
  "smussato",
  "snellire",
  "snervato",
  "snodo",
  "sobbalzo",
  "sobrio",
  "soccorso",
  "sociale",
  "sodale",
  "soffitto",
  "sogno",
  "soldato",
  "solenne",
  "solido",
  "sollazzo",
  "solo",
  "solubile",
  "solvente",
  "somatico",
  "somma",
  "sonda",
  "sonetto",
  "sonnifero",
  "sopire",
  "soppeso",
  "sopra",
  "sorgere",
  "sorpasso",
  "sorriso",
  "sorso",
  "sorteggio",
  "sorvolato",
  "sospiro",
  "sosta",
  "sottile",
  "spada",
  "spalla",
  "spargere",
  "spatola",
  "spavento",
  "spazzola",
  "specie",
  "spedire",
  "spegnere",
  "spelatura",
  "speranza",
  "spessore",
  "spettrale",
  "spezzato",
  "spia",
  "spigoloso",
  "spillato",
  "spinoso",
  "spirale",
  "splendido",
  "sportivo",
  "sposo",
  "spranga",
  "sprecare",
  "spronato",
  "spruzzo",
  "spuntino",
  "squillo",
  "sradicare",
  "srotolato",
  "stabile",
  "stacco",
  "staffa",
  "stagnare",
  "stampato",
  "stantio",
  "starnuto",
  "stasera",
  "statuto",
  "stelo",
  "steppa",
  "sterzo",
  "stiletto",
  "stima",
  "stirpe",
  "stivale",
  "stizzoso",
  "stonato",
  "storico",
  "strappo",
  "stregato",
  "stridulo",
  "strozzare",
  "strutto",
  "stuccare",
  "stufo",
  "stupendo",
  "subentro",
  "succoso",
  "sudore",
  "suggerito",
  "sugo",
  "sultano",
  "suonare",
  "superbo",
  "supporto",
  "surgelato",
  "surrogato",
  "sussurro",
  "sutura",
  "svagare",
  "svedese",
  "sveglio",
  "svelare",
  "svenuto",
  "svezia",
  "sviluppo",
  "svista",
  "svizzera",
  "svolta",
  "svuotare",
  "tabacco",
  "tabulato",
  "tacciare",
  "taciturno",
  "tale",
  "talismano",
  "tampone",
  "tannino",
  "tara",
  "tardivo",
  "targato",
  "tariffa",
  "tarpare",
  "tartaruga",
  "tasto",
  "tattico",
  "taverna",
  "tavolata",
  "tazza",
  "teca",
  "tecnico",
  "telefono",
  "temerario",
  "tempo",
  "temuto",
  "tendone",
  "tenero",
  "tensione",
  "tentacolo",
  "teorema",
  "terme",
  "terrazzo",
  "terzetto",
  "tesi",
  "tesserato",
  "testato",
  "tetro",
  "tettoia",
  "tifare",
  "tigella",
  "timbro",
  "tinto",
  "tipico",
  "tipografo",
  "tiraggio",
  "tiro",
  "titanio",
  "titolo",
  "titubante",
  "tizio",
  "tizzone",
  "toccare",
  "tollerare",
  "tolto",
  "tombola",
  "tomo",
  "tonfo",
  "tonsilla",
  "topazio",
  "topologia",
  "toppa",
  "torba",
  "tornare",
  "torrone",
  "tortora",
  "toscano",
  "tossire",
  "tostatura",
  "totano",
  "trabocco",
  "trachea",
  "trafila",
  "tragedia",
  "tralcio",
  "tramonto",
  "transito",
  "trapano",
  "trarre",
  "trasloco",
  "trattato",
  "trave",
  "treccia",
  "tremolio",
  "trespolo",
  "tributo",
  "tricheco",
  "trifoglio",
  "trillo",
  "trincea",
  "trio",
  "tristezza",
  "triturato",
  "trivella",
  "tromba",
  "trono",
  "troppo",
  "trottola",
  "trovare",
  "truccato",
  "tubatura",
  "tuffato",
  "tulipano",
  "tumulto",
  "tunisia",
  "turbare",
  "turchino",
  "tuta",
  "tutela",
  "ubicato",
  "uccello",
  "uccisore",
  "udire",
  "uditivo",
  "uffa",
  "ufficio",
  "uguale",
  "ulisse",
  "ultimato",
  "umano",
  "umile",
  "umorismo",
  "uncinetto",
  "ungere",
  "ungherese",
  "unicorno",
  "unificato",
  "unisono",
  "unitario",
  "unte",
  "uovo",
  "upupa",
  "uragano",
  "urgenza",
  "urlo",
  "usanza",
  "usato",
  "uscito",
  "usignolo",
  "usuraio",
  "utensile",
  "utilizzo",
  "utopia",
  "vacante",
  "vaccinato",
  "vagabondo",
  "vagliato",
  "valanga",
  "valgo",
  "valico",
  "valletta",
  "valoroso",
  "valutare",
  "valvola",
  "vampata",
  "vangare",
  "vanitoso",
  "vano",
  "vantaggio",
  "vanvera",
  "vapore",
  "varano",
  "varcato",
  "variante",
  "vasca",
  "vedetta",
  "vedova",
  "veduto",
  "vegetale",
  "veicolo",
  "velcro",
  "velina",
  "velluto",
  "veloce",
  "venato",
  "vendemmia",
  "vento",
  "verace",
  "verbale",
  "vergogna",
  "verifica",
  "vero",
  "verruca",
  "verticale",
  "vescica",
  "vessillo",
  "vestale",
  "veterano",
  "vetrina",
  "vetusto",
  "viandante",
  "vibrante",
  "vicenda",
  "vichingo",
  "vicinanza",
  "vidimare",
  "vigilia",
  "vigneto",
  "vigore",
  "vile",
  "villano",
  "vimini",
  "vincitore",
  "viola",
  "vipera",
  "virgola",
  "virologo",
  "virulento",
  "viscoso",
  "visione",
  "vispo",
  "vissuto",
  "visura",
  "vita",
  "vitello",
  "vittima",
  "vivanda",
  "vivido",
  "viziare",
  "voce",
  "voga",
  "volatile",
  "volere",
  "volpe",
  "voragine",
  "vulcano",
  "zampogna",
  "zanna",
  "zappato",
  "zattera",
  "zavorra",
  "zefiro",
  "zelante",
  "zelo",
  "zenzero",
  "zerbino",
  "zibetto",
  "zinco",
  "zircone",
  "zitto",
  "zolla",
  "zotico",
  "zucchero",
  "zufolo",
  "zulu",
  "zuppa"
]

},{}],161:[function(require,module,exports){
module.exports=[
  "あいこくしん",
  "あいさつ",
  "あいだ",
  "あおぞら",
  "あかちゃん",
  "あきる",
  "あけがた",
  "あける",
  "あこがれる",
  "あさい",
  "あさひ",
  "あしあと",
  "あじわう",
  "あずかる",
  "あずき",
  "あそぶ",
  "あたえる",
  "あたためる",
  "あたりまえ",
  "あたる",
  "あつい",
  "あつかう",
  "あっしゅく",
  "あつまり",
  "あつめる",
  "あてな",
  "あてはまる",
  "あひる",
  "あぶら",
  "あぶる",
  "あふれる",
  "あまい",
  "あまど",
  "あまやかす",
  "あまり",
  "あみもの",
  "あめりか",
  "あやまる",
  "あゆむ",
  "あらいぐま",
  "あらし",
  "あらすじ",
  "あらためる",
  "あらゆる",
  "あらわす",
  "ありがとう",
  "あわせる",
  "あわてる",
  "あんい",
  "あんがい",
  "あんこ",
  "あんぜん",
  "あんてい",
  "あんない",
  "あんまり",
  "いいだす",
  "いおん",
  "いがい",
  "いがく",
  "いきおい",
  "いきなり",
  "いきもの",
  "いきる",
  "いくじ",
  "いくぶん",
  "いけばな",
  "いけん",
  "いこう",
  "いこく",
  "いこつ",
  "いさましい",
  "いさん",
  "いしき",
  "いじゅう",
  "いじょう",
  "いじわる",
  "いずみ",
  "いずれ",
  "いせい",
  "いせえび",
  "いせかい",
  "いせき",
  "いぜん",
  "いそうろう",
  "いそがしい",
  "いだい",
  "いだく",
  "いたずら",
  "いたみ",
  "いたりあ",
  "いちおう",
  "いちじ",
  "いちど",
  "いちば",
  "いちぶ",
  "いちりゅう",
  "いつか",
  "いっしゅん",
  "いっせい",
  "いっそう",
  "いったん",
  "いっち",
  "いってい",
  "いっぽう",
  "いてざ",
  "いてん",
  "いどう",
  "いとこ",
  "いない",
  "いなか",
  "いねむり",
  "いのち",
  "いのる",
  "いはつ",
  "いばる",
  "いはん",
  "いびき",
  "いひん",
  "いふく",
  "いへん",
  "いほう",
  "いみん",
  "いもうと",
  "いもたれ",
  "いもり",
  "いやがる",
  "いやす",
  "いよかん",
  "いよく",
  "いらい",
  "いらすと",
  "いりぐち",
  "いりょう",
  "いれい",
  "いれもの",
  "いれる",
  "いろえんぴつ",
  "いわい",
  "いわう",
  "いわかん",
  "いわば",
  "いわゆる",
  "いんげんまめ",
  "いんさつ",
  "いんしょう",
  "いんよう",
  "うえき",
  "うえる",
  "うおざ",
  "うがい",
  "うかぶ",
  "うかべる",
  "うきわ",
  "うくらいな",
  "うくれれ",
  "うけたまわる",
  "うけつけ",
  "うけとる",
  "うけもつ",
  "うける",
  "うごかす",
  "うごく",
  "うこん",
  "うさぎ",
  "うしなう",
  "うしろがみ",
  "うすい",
  "うすぎ",
  "うすぐらい",
  "うすめる",
  "うせつ",
  "うちあわせ",
  "うちがわ",
  "うちき",
  "うちゅう",
  "うっかり",
  "うつくしい",
  "うったえる",
  "うつる",
  "うどん",
  "うなぎ",
  "うなじ",
  "うなずく",
  "うなる",
  "うねる",
  "うのう",
  "うぶげ",
  "うぶごえ",
  "うまれる",
  "うめる",
  "うもう",
  "うやまう",
  "うよく",
  "うらがえす",
  "うらぐち",
  "うらない",
  "うりあげ",
  "うりきれ",
  "うるさい",
  "うれしい",
  "うれゆき",
  "うれる",
  "うろこ",
  "うわき",
  "うわさ",
  "うんこう",
  "うんちん",
  "うんてん",
  "うんどう",
  "えいえん",
  "えいが",
  "えいきょう",
  "えいご",
  "えいせい",
  "えいぶん",
  "えいよう",
  "えいわ",
  "えおり",
  "えがお",
  "えがく",
  "えきたい",
  "えくせる",
  "えしゃく",
  "えすて",
  "えつらん",
  "えのぐ",
  "えほうまき",
  "えほん",
  "えまき",
  "えもじ",
  "えもの",
  "えらい",
  "えらぶ",
  "えりあ",
  "えんえん",
  "えんかい",
  "えんぎ",
  "えんげき",
  "えんしゅう",
  "えんぜつ",
  "えんそく",
  "えんちょう",
  "えんとつ",
  "おいかける",
  "おいこす",
  "おいしい",
  "おいつく",
  "おうえん",
  "おうさま",
  "おうじ",
  "おうせつ",
  "おうたい",
  "おうふく",
  "おうべい",
  "おうよう",
  "おえる",
  "おおい",
  "おおう",
  "おおどおり",
  "おおや",
  "おおよそ",
  "おかえり",
  "おかず",
  "おがむ",
  "おかわり",
  "おぎなう",
  "おきる",
  "おくさま",
  "おくじょう",
  "おくりがな",
  "おくる",
  "おくれる",
  "おこす",
  "おこなう",
  "おこる",
  "おさえる",
  "おさない",
  "おさめる",
  "おしいれ",
  "おしえる",
  "おじぎ",
  "おじさん",
  "おしゃれ",
  "おそらく",
  "おそわる",
  "おたがい",
  "おたく",
  "おだやか",
  "おちつく",
  "おっと",
  "おつり",
  "おでかけ",
  "おとしもの",
  "おとなしい",
  "おどり",
  "おどろかす",
  "おばさん",
  "おまいり",
  "おめでとう",
  "おもいで",
  "おもう",
  "おもたい",
  "おもちゃ",
  "おやつ",
  "おやゆび",
  "およぼす",
  "おらんだ",
  "おろす",
  "おんがく",
  "おんけい",
  "おんしゃ",
  "おんせん",
  "おんだん",
  "おんちゅう",
  "おんどけい",
  "かあつ",
  "かいが",
  "がいき",
  "がいけん",
  "がいこう",
  "かいさつ",
  "かいしゃ",
  "かいすいよく",
  "かいぜん",
  "かいぞうど",
  "かいつう",
  "かいてん",
  "かいとう",
  "かいふく",
  "がいへき",
  "かいほう",
  "かいよう",
  "がいらい",
  "かいわ",
  "かえる",
  "かおり",
  "かかえる",
  "かがく",
  "かがし",
  "かがみ",
  "かくご",
  "かくとく",
  "かざる",
  "がぞう",
  "かたい",
  "かたち",
  "がちょう",
  "がっきゅう",
  "がっこう",
  "がっさん",
  "がっしょう",
  "かなざわし",
  "かのう",
  "がはく",
  "かぶか",
  "かほう",
  "かほご",
  "かまう",
  "かまぼこ",
  "かめれおん",
  "かゆい",
  "かようび",
  "からい",
  "かるい",
  "かろう",
  "かわく",
  "かわら",
  "がんか",
  "かんけい",
  "かんこう",
  "かんしゃ",
  "かんそう",
  "かんたん",
  "かんち",
  "がんばる",
  "きあい",
  "きあつ",
  "きいろ",
  "ぎいん",
  "きうい",
  "きうん",
  "きえる",
  "きおう",
  "きおく",
  "きおち",
  "きおん",
  "きかい",
  "きかく",
  "きかんしゃ",
  "ききて",
  "きくばり",
  "きくらげ",
  "きけんせい",
  "きこう",
  "きこえる",
  "きこく",
  "きさい",
  "きさく",
  "きさま",
  "きさらぎ",
  "ぎじかがく",
  "ぎしき",
  "ぎじたいけん",
  "ぎじにってい",
  "ぎじゅつしゃ",
  "きすう",
  "きせい",
  "きせき",
  "きせつ",
  "きそう",
  "きぞく",
  "きぞん",
  "きたえる",
  "きちょう",
  "きつえん",
  "ぎっちり",
  "きつつき",
  "きつね",
  "きてい",
  "きどう",
  "きどく",
  "きない",
  "きなが",
  "きなこ",
  "きぬごし",
  "きねん",
  "きのう",
  "きのした",
  "きはく",
  "きびしい",
  "きひん",
  "きふく",
  "きぶん",
  "きぼう",
  "きほん",
  "きまる",
  "きみつ",
  "きむずかしい",
  "きめる",
  "きもだめし",
  "きもち",
  "きもの",
  "きゃく",
  "きやく",
  "ぎゅうにく",
  "きよう",
  "きょうりゅう",
  "きらい",
  "きらく",
  "きりん",
  "きれい",
  "きれつ",
  "きろく",
  "ぎろん",
  "きわめる",
  "ぎんいろ",
  "きんかくじ",
  "きんじょ",
  "きんようび",
  "ぐあい",
  "くいず",
  "くうかん",
  "くうき",
  "くうぐん",
  "くうこう",
  "ぐうせい",
  "くうそう",
  "ぐうたら",
  "くうふく",
  "くうぼ",
  "くかん",
  "くきょう",
  "くげん",
  "ぐこう",
  "くさい",
  "くさき",
  "くさばな",
  "くさる",
  "くしゃみ",
  "くしょう",
  "くすのき",
  "くすりゆび",
  "くせげ",
  "くせん",
  "ぐたいてき",
  "くださる",
  "くたびれる",
  "くちこみ",
  "くちさき",
  "くつした",
  "ぐっすり",
  "くつろぐ",
  "くとうてん",
  "くどく",
  "くなん",
  "くねくね",
  "くのう",
  "くふう",
  "くみあわせ",
  "くみたてる",
  "くめる",
  "くやくしょ",
  "くらす",
  "くらべる",
  "くるま",
  "くれる",
  "くろう",
  "くわしい",
  "ぐんかん",
  "ぐんしょく",
  "ぐんたい",
  "ぐんて",
  "けあな",
  "けいかく",
  "けいけん",
  "けいこ",
  "けいさつ",
  "げいじゅつ",
  "けいたい",
  "げいのうじん",
  "けいれき",
  "けいろ",
  "けおとす",
  "けおりもの",
  "げきか",
  "げきげん",
  "げきだん",
  "げきちん",
  "げきとつ",
  "げきは",
  "げきやく",
  "げこう",
  "げこくじょう",
  "げざい",
  "けさき",
  "げざん",
  "けしき",
  "けしごむ",
  "けしょう",
  "げすと",
  "けたば",
  "けちゃっぷ",
  "けちらす",
  "けつあつ",
  "けつい",
  "けつえき",
  "けっこん",
  "けつじょ",
  "けっせき",
  "けってい",
  "けつまつ",
  "げつようび",
  "げつれい",
  "けつろん",
  "げどく",
  "けとばす",
  "けとる",
  "けなげ",
  "けなす",
  "けなみ",
  "けぬき",
  "げねつ",
  "けねん",
  "けはい",
  "げひん",
  "けぶかい",
  "げぼく",
  "けまり",
  "けみかる",
  "けむし",
  "けむり",
  "けもの",
  "けらい",
  "けろけろ",
  "けわしい",
  "けんい",
  "けんえつ",
  "けんお",
  "けんか",
  "げんき",
  "けんげん",
  "けんこう",
  "けんさく",
  "けんしゅう",
  "けんすう",
  "げんそう",
  "けんちく",
  "けんてい",
  "けんとう",
  "けんない",
  "けんにん",
  "げんぶつ",
  "けんま",
  "けんみん",
  "けんめい",
  "けんらん",
  "けんり",
  "こあくま",
  "こいぬ",
  "こいびと",
  "ごうい",
  "こうえん",
  "こうおん",
  "こうかん",
  "ごうきゅう",
  "ごうけい",
  "こうこう",
  "こうさい",
  "こうじ",
  "こうすい",
  "ごうせい",
  "こうそく",
  "こうたい",
  "こうちゃ",
  "こうつう",
  "こうてい",
  "こうどう",
  "こうない",
  "こうはい",
  "ごうほう",
  "ごうまん",
  "こうもく",
  "こうりつ",
  "こえる",
  "こおり",
  "ごかい",
  "ごがつ",
  "ごかん",
  "こくご",
  "こくさい",
  "こくとう",
  "こくない",
  "こくはく",
  "こぐま",
  "こけい",
  "こける",
  "ここのか",
  "こころ",
  "こさめ",
  "こしつ",
  "こすう",
  "こせい",
  "こせき",
  "こぜん",
  "こそだて",
  "こたい",
  "こたえる",
  "こたつ",
  "こちょう",
  "こっか",
  "こつこつ",
  "こつばん",
  "こつぶ",
  "こてい",
  "こてん",
  "ことがら",
  "ことし",
  "ことば",
  "ことり",
  "こなごな",
  "こねこね",
  "このまま",
  "このみ",
  "このよ",
  "ごはん",
  "こひつじ",
  "こふう",
  "こふん",
  "こぼれる",
  "ごまあぶら",
  "こまかい",
  "ごますり",
  "こまつな",
  "こまる",
  "こむぎこ",
  "こもじ",
  "こもち",
  "こもの",
  "こもん",
  "こやく",
  "こやま",
  "こゆう",
  "こゆび",
  "こよい",
  "こよう",
  "こりる",
  "これくしょん",
  "ころっけ",
  "こわもて",
  "こわれる",
  "こんいん",
  "こんかい",
  "こんき",
  "こんしゅう",
  "こんすい",
  "こんだて",
  "こんとん",
  "こんなん",
  "こんびに",
  "こんぽん",
  "こんまけ",
  "こんや",
  "こんれい",
  "こんわく",
  "ざいえき",
  "さいかい",
  "さいきん",
  "ざいげん",
  "ざいこ",
  "さいしょ",
  "さいせい",
  "ざいたく",
  "ざいちゅう",
  "さいてき",
  "ざいりょう",
  "さうな",
  "さかいし",
  "さがす",
  "さかな",
  "さかみち",
  "さがる",
  "さぎょう",
  "さくし",
  "さくひん",
  "さくら",
  "さこく",
  "さこつ",
  "さずかる",
  "ざせき",
  "さたん",
  "さつえい",
  "ざつおん",
  "ざっか",
  "ざつがく",
  "さっきょく",
  "ざっし",
  "さつじん",
  "ざっそう",
  "さつたば",
  "さつまいも",
  "さてい",
  "さといも",
  "さとう",
  "さとおや",
  "さとし",
  "さとる",
  "さのう",
  "さばく",
  "さびしい",
  "さべつ",
  "さほう",
  "さほど",
  "さます",
  "さみしい",
  "さみだれ",
  "さむけ",
  "さめる",
  "さやえんどう",
  "さゆう",
  "さよう",
  "さよく",
  "さらだ",
  "ざるそば",
  "さわやか",
  "さわる",
  "さんいん",
  "さんか",
  "さんきゃく",
  "さんこう",
  "さんさい",
  "ざんしょ",
  "さんすう",
  "さんせい",
  "さんそ",
  "さんち",
  "さんま",
  "さんみ",
  "さんらん",
  "しあい",
  "しあげ",
  "しあさって",
  "しあわせ",
  "しいく",
  "しいん",
  "しうち",
  "しえい",
  "しおけ",
  "しかい",
  "しかく",
  "じかん",
  "しごと",
  "しすう",
  "じだい",
  "したうけ",
  "したぎ",
  "したて",
  "したみ",
  "しちょう",
  "しちりん",
  "しっかり",
  "しつじ",
  "しつもん",
  "してい",
  "してき",
  "してつ",
  "じてん",
  "じどう",
  "しなぎれ",
  "しなもの",
  "しなん",
  "しねま",
  "しねん",
  "しのぐ",
  "しのぶ",
  "しはい",
  "しばかり",
  "しはつ",
  "しはらい",
  "しはん",
  "しひょう",
  "しふく",
  "じぶん",
  "しへい",
  "しほう",
  "しほん",
  "しまう",
  "しまる",
  "しみん",
  "しむける",
  "じむしょ",
  "しめい",
  "しめる",
  "しもん",
  "しゃいん",
  "しゃうん",
  "しゃおん",
  "じゃがいも",
  "しやくしょ",
  "しゃくほう",
  "しゃけん",
  "しゃこ",
  "しゃざい",
  "しゃしん",
  "しゃせん",
  "しゃそう",
  "しゃたい",
  "しゃちょう",
  "しゃっきん",
  "じゃま",
  "しゃりん",
  "しゃれい",
  "じゆう",
  "じゅうしょ",
  "しゅくはく",
  "じゅしん",
  "しゅっせき",
  "しゅみ",
  "しゅらば",
  "じゅんばん",
  "しょうかい",
  "しょくたく",
  "しょっけん",
  "しょどう",
  "しょもつ",
  "しらせる",
  "しらべる",
  "しんか",
  "しんこう",
  "じんじゃ",
  "しんせいじ",
  "しんちく",
  "しんりん",
  "すあげ",
  "すあし",
  "すあな",
  "ずあん",
  "すいえい",
  "すいか",
  "すいとう",
  "ずいぶん",
  "すいようび",
  "すうがく",
  "すうじつ",
  "すうせん",
  "すおどり",
  "すきま",
  "すくう",
  "すくない",
  "すける",
  "すごい",
  "すこし",
  "ずさん",
  "すずしい",
  "すすむ",
  "すすめる",
  "すっかり",
  "ずっしり",
  "ずっと",
  "すてき",
  "すてる",
  "すねる",
  "すのこ",
  "すはだ",
  "すばらしい",
  "ずひょう",
  "ずぶぬれ",
  "すぶり",
  "すふれ",
  "すべて",
  "すべる",
  "ずほう",
  "すぼん",
  "すまい",
  "すめし",
  "すもう",
  "すやき",
  "すらすら",
  "するめ",
  "すれちがう",
  "すろっと",
  "すわる",
  "すんぜん",
  "すんぽう",
  "せあぶら",
  "せいかつ",
  "せいげん",
  "せいじ",
  "せいよう",
  "せおう",
  "せかいかん",
  "せきにん",
  "せきむ",
  "せきゆ",
  "せきらんうん",
  "せけん",
  "せこう",
  "せすじ",
  "せたい",
  "せたけ",
  "せっかく",
  "せっきゃく",
  "ぜっく",
  "せっけん",
  "せっこつ",
  "せっさたくま",
  "せつぞく",
  "せつだん",
  "せつでん",
  "せっぱん",
  "せつび",
  "せつぶん",
  "せつめい",
  "せつりつ",
  "せなか",
  "せのび",
  "せはば",
  "せびろ",
  "せぼね",
  "せまい",
  "せまる",
  "せめる",
  "せもたれ",
  "せりふ",
  "ぜんあく",
  "せんい",
  "せんえい",
  "せんか",
  "せんきょ",
  "せんく",
  "せんげん",
  "ぜんご",
  "せんさい",
  "せんしゅ",
  "せんすい",
  "せんせい",
  "せんぞ",
  "せんたく",
  "せんちょう",
  "せんてい",
  "せんとう",
  "せんぬき",
  "せんねん",
  "せんぱい",
  "ぜんぶ",
  "ぜんぽう",
  "せんむ",
  "せんめんじょ",
  "せんもん",
  "せんやく",
  "せんゆう",
  "せんよう",
  "ぜんら",
  "ぜんりゃく",
  "せんれい",
  "せんろ",
  "そあく",
  "そいとげる",
  "そいね",
  "そうがんきょう",
  "そうき",
  "そうご",
  "そうしん",
  "そうだん",
  "そうなん",
  "そうび",
  "そうめん",
  "そうり",
  "そえもの",
  "そえん",
  "そがい",
  "そげき",
  "そこう",
  "そこそこ",
  "そざい",
  "そしな",
  "そせい",
  "そせん",
  "そそぐ",
  "そだてる",
  "そつう",
  "そつえん",
  "そっかん",
  "そつぎょう",
  "そっけつ",
  "そっこう",
  "そっせん",
  "そっと",
  "そとがわ",
  "そとづら",
  "そなえる",
  "そなた",
  "そふぼ",
  "そぼく",
  "そぼろ",
  "そまつ",
  "そまる",
  "そむく",
  "そむりえ",
  "そめる",
  "そもそも",
  "そよかぜ",
  "そらまめ",
  "そろう",
  "そんかい",
  "そんけい",
  "そんざい",
  "そんしつ",
  "そんぞく",
  "そんちょう",
  "ぞんび",
  "ぞんぶん",
  "そんみん",
  "たあい",
  "たいいん",
  "たいうん",
  "たいえき",
  "たいおう",
  "だいがく",
  "たいき",
  "たいぐう",
  "たいけん",
  "たいこ",
  "たいざい",
  "だいじょうぶ",
  "だいすき",
  "たいせつ",
  "たいそう",
  "だいたい",
  "たいちょう",
  "たいてい",
  "だいどころ",
  "たいない",
  "たいねつ",
  "たいのう",
  "たいはん",
  "だいひょう",
  "たいふう",
  "たいへん",
  "たいほ",
  "たいまつばな",
  "たいみんぐ",
  "たいむ",
  "たいめん",
  "たいやき",
  "たいよう",
  "たいら",
  "たいりょく",
  "たいる",
  "たいわん",
  "たうえ",
  "たえる",
  "たおす",
  "たおる",
  "たおれる",
  "たかい",
  "たかね",
  "たきび",
  "たくさん",
  "たこく",
  "たこやき",
  "たさい",
  "たしざん",
  "だじゃれ",
  "たすける",
  "たずさわる",
  "たそがれ",
  "たたかう",
  "たたく",
  "ただしい",
  "たたみ",
  "たちばな",
  "だっかい",
  "だっきゃく",
  "だっこ",
  "だっしゅつ",
  "だったい",
  "たてる",
  "たとえる",
  "たなばた",
  "たにん",
  "たぬき",
  "たのしみ",
  "たはつ",
  "たぶん",
  "たべる",
  "たぼう",
  "たまご",
  "たまる",
  "だむる",
  "ためいき",
  "ためす",
  "ためる",
  "たもつ",
  "たやすい",
  "たよる",
  "たらす",
  "たりきほんがん",
  "たりょう",
  "たりる",
  "たると",
  "たれる",
  "たれんと",
  "たろっと",
  "たわむれる",
  "だんあつ",
  "たんい",
  "たんおん",
  "たんか",
  "たんき",
  "たんけん",
  "たんご",
  "たんさん",
  "たんじょうび",
  "だんせい",
  "たんそく",
  "たんたい",
  "だんち",
  "たんてい",
  "たんとう",
  "だんな",
  "たんにん",
  "だんねつ",
  "たんのう",
  "たんぴん",
  "だんぼう",
  "たんまつ",
  "たんめい",
  "だんれつ",
  "だんろ",
  "だんわ",
  "ちあい",
  "ちあん",
  "ちいき",
  "ちいさい",
  "ちえん",
  "ちかい",
  "ちから",
  "ちきゅう",
  "ちきん",
  "ちけいず",
  "ちけん",
  "ちこく",
  "ちさい",
  "ちしき",
  "ちしりょう",
  "ちせい",
  "ちそう",
  "ちたい",
  "ちたん",
  "ちちおや",
  "ちつじょ",
  "ちてき",
  "ちてん",
  "ちぬき",
  "ちぬり",
  "ちのう",
  "ちひょう",
  "ちへいせん",
  "ちほう",
  "ちまた",
  "ちみつ",
  "ちみどろ",
  "ちめいど",
  "ちゃんこなべ",
  "ちゅうい",
  "ちゆりょく",
  "ちょうし",
  "ちょさくけん",
  "ちらし",
  "ちらみ",
  "ちりがみ",
  "ちりょう",
  "ちるど",
  "ちわわ",
  "ちんたい",
  "ちんもく",
  "ついか",
  "ついたち",
  "つうか",
  "つうじょう",
  "つうはん",
  "つうわ",
  "つかう",
  "つかれる",
  "つくね",
  "つくる",
  "つけね",
  "つける",
  "つごう",
  "つたえる",
  "つづく",
  "つつじ",
  "つつむ",
  "つとめる",
  "つながる",
  "つなみ",
  "つねづね",
  "つのる",
  "つぶす",
  "つまらない",
  "つまる",
  "つみき",
  "つめたい",
  "つもり",
  "つもる",
  "つよい",
  "つるぼ",
  "つるみく",
  "つわもの",
  "つわり",
  "てあし",
  "てあて",
  "てあみ",
  "ていおん",
  "ていか",
  "ていき",
  "ていけい",
  "ていこく",
  "ていさつ",
  "ていし",
  "ていせい",
  "ていたい",
  "ていど",
  "ていねい",
  "ていひょう",
  "ていへん",
  "ていぼう",
  "てうち",
  "ておくれ",
  "てきとう",
  "てくび",
  "でこぼこ",
  "てさぎょう",
  "てさげ",
  "てすり",
  "てそう",
  "てちがい",
  "てちょう",
  "てつがく",
  "てつづき",
  "でっぱ",
  "てつぼう",
  "てつや",
  "でぬかえ",
  "てぬき",
  "てぬぐい",
  "てのひら",
  "てはい",
  "てぶくろ",
  "てふだ",
  "てほどき",
  "てほん",
  "てまえ",
  "てまきずし",
  "てみじか",
  "てみやげ",
  "てらす",
  "てれび",
  "てわけ",
  "てわたし",
  "でんあつ",
  "てんいん",
  "てんかい",
  "てんき",
  "てんぐ",
  "てんけん",
  "てんごく",
  "てんさい",
  "てんし",
  "てんすう",
  "でんち",
  "てんてき",
  "てんとう",
  "てんない",
  "てんぷら",
  "てんぼうだい",
  "てんめつ",
  "てんらんかい",
  "でんりょく",
  "でんわ",
  "どあい",
  "といれ",
  "どうかん",
  "とうきゅう",
  "どうぐ",
  "とうし",
  "とうむぎ",
  "とおい",
  "とおか",
  "とおく",
  "とおす",
  "とおる",
  "とかい",
  "とかす",
  "ときおり",
  "ときどき",
  "とくい",
  "とくしゅう",
  "とくてん",
  "とくに",
  "とくべつ",
  "とけい",
  "とける",
  "とこや",
  "とさか",
  "としょかん",
  "とそう",
  "とたん",
  "とちゅう",
  "とっきゅう",
  "とっくん",
  "とつぜん",
  "とつにゅう",
  "とどける",
  "ととのえる",
  "とない",
  "となえる",
  "となり",
  "とのさま",
  "とばす",
  "どぶがわ",
  "とほう",
  "とまる",
  "とめる",
  "ともだち",
  "ともる",
  "どようび",
  "とらえる",
  "とんかつ",
  "どんぶり",
  "ないかく",
  "ないこう",
  "ないしょ",
  "ないす",
  "ないせん",
  "ないそう",
  "なおす",
  "ながい",
  "なくす",
  "なげる",
  "なこうど",
  "なさけ",
  "なたでここ",
  "なっとう",
  "なつやすみ",
  "ななおし",
  "なにごと",
  "なにもの",
  "なにわ",
  "なのか",
  "なふだ",
  "なまいき",
  "なまえ",
  "なまみ",
  "なみだ",
  "なめらか",
  "なめる",
  "なやむ",
  "ならう",
  "ならび",
  "ならぶ",
  "なれる",
  "なわとび",
  "なわばり",
  "にあう",
  "にいがた",
  "にうけ",
  "におい",
  "にかい",
  "にがて",
  "にきび",
  "にくしみ",
  "にくまん",
  "にげる",
  "にさんかたんそ",
  "にしき",
  "にせもの",
  "にちじょう",
  "にちようび",
  "にっか",
  "にっき",
  "にっけい",
  "にっこう",
  "にっさん",
  "にっしょく",
  "にっすう",
  "にっせき",
  "にってい",
  "になう",
  "にほん",
  "にまめ",
  "にもつ",
  "にやり",
  "にゅういん",
  "にりんしゃ",
  "にわとり",
  "にんい",
  "にんか",
  "にんき",
  "にんげん",
  "にんしき",
  "にんずう",
  "にんそう",
  "にんたい",
  "にんち",
  "にんてい",
  "にんにく",
  "にんぷ",
  "にんまり",
  "にんむ",
  "にんめい",
  "にんよう",
  "ぬいくぎ",
  "ぬかす",
  "ぬぐいとる",
  "ぬぐう",
  "ぬくもり",
  "ぬすむ",
  "ぬまえび",
  "ぬめり",
  "ぬらす",
  "ぬんちゃく",
  "ねあげ",
  "ねいき",
  "ねいる",
  "ねいろ",
  "ねぐせ",
  "ねくたい",
  "ねくら",
  "ねこぜ",
  "ねこむ",
  "ねさげ",
  "ねすごす",
  "ねそべる",
  "ねだん",
  "ねつい",
  "ねっしん",
  "ねつぞう",
  "ねったいぎょ",
  "ねぶそく",
  "ねふだ",
  "ねぼう",
  "ねほりはほり",
  "ねまき",
  "ねまわし",
  "ねみみ",
  "ねむい",
  "ねむたい",
  "ねもと",
  "ねらう",
  "ねわざ",
  "ねんいり",
  "ねんおし",
  "ねんかん",
  "ねんきん",
  "ねんぐ",
  "ねんざ",
  "ねんし",
  "ねんちゃく",
  "ねんど",
  "ねんぴ",
  "ねんぶつ",
  "ねんまつ",
  "ねんりょう",
  "ねんれい",
  "のいず",
  "のおづま",
  "のがす",
  "のきなみ",
  "のこぎり",
  "のこす",
  "のこる",
  "のせる",
  "のぞく",
  "のぞむ",
  "のたまう",
  "のちほど",
  "のっく",
  "のばす",
  "のはら",
  "のべる",
  "のぼる",
  "のみもの",
  "のやま",
  "のらいぬ",
  "のらねこ",
  "のりもの",
  "のりゆき",
  "のれん",
  "のんき",
  "ばあい",
  "はあく",
  "ばあさん",
  "ばいか",
  "ばいく",
  "はいけん",
  "はいご",
  "はいしん",
  "はいすい",
  "はいせん",
  "はいそう",
  "はいち",
  "ばいばい",
  "はいれつ",
  "はえる",
  "はおる",
  "はかい",
  "ばかり",
  "はかる",
  "はくしゅ",
  "はけん",
  "はこぶ",
  "はさみ",
  "はさん",
  "はしご",
  "ばしょ",
  "はしる",
  "はせる",
  "ぱそこん",
  "はそん",
  "はたん",
  "はちみつ",
  "はつおん",
  "はっかく",
  "はづき",
  "はっきり",
  "はっくつ",
  "はっけん",
  "はっこう",
  "はっさん",
  "はっしん",
  "はったつ",
  "はっちゅう",
  "はってん",
  "はっぴょう",
  "はっぽう",
  "はなす",
  "はなび",
  "はにかむ",
  "はぶらし",
  "はみがき",
  "はむかう",
  "はめつ",
  "はやい",
  "はやし",
  "はらう",
  "はろうぃん",
  "はわい",
  "はんい",
  "はんえい",
  "はんおん",
  "はんかく",
  "はんきょう",
  "ばんぐみ",
  "はんこ",
  "はんしゃ",
  "はんすう",
  "はんだん",
  "ぱんち",
  "ぱんつ",
  "はんてい",
  "はんとし",
  "はんのう",
  "はんぱ",
  "はんぶん",
  "はんぺん",
  "はんぼうき",
  "はんめい",
  "はんらん",
  "はんろん",
  "ひいき",
  "ひうん",
  "ひえる",
  "ひかく",
  "ひかり",
  "ひかる",
  "ひかん",
  "ひくい",
  "ひけつ",
  "ひこうき",
  "ひこく",
  "ひさい",
  "ひさしぶり",
  "ひさん",
  "びじゅつかん",
  "ひしょ",
  "ひそか",
  "ひそむ",
  "ひたむき",
  "ひだり",
  "ひたる",
  "ひつぎ",
  "ひっこし",
  "ひっし",
  "ひつじゅひん",
  "ひっす",
  "ひつぜん",
  "ぴったり",
  "ぴっちり",
  "ひつよう",
  "ひてい",
  "ひとごみ",
  "ひなまつり",
  "ひなん",
  "ひねる",
  "ひはん",
  "ひびく",
  "ひひょう",
  "ひほう",
  "ひまわり",
  "ひまん",
  "ひみつ",
  "ひめい",
  "ひめじし",
  "ひやけ",
  "ひやす",
  "ひよう",
  "びょうき",
  "ひらがな",
  "ひらく",
  "ひりつ",
  "ひりょう",
  "ひるま",
  "ひるやすみ",
  "ひれい",
  "ひろい",
  "ひろう",
  "ひろき",
  "ひろゆき",
  "ひんかく",
  "ひんけつ",
  "ひんこん",
  "ひんしゅ",
  "ひんそう",
  "ぴんち",
  "ひんぱん",
  "びんぼう",
  "ふあん",
  "ふいうち",
  "ふうけい",
  "ふうせん",
  "ぷうたろう",
  "ふうとう",
  "ふうふ",
  "ふえる",
  "ふおん",
  "ふかい",
  "ふきん",
  "ふくざつ",
  "ふくぶくろ",
  "ふこう",
  "ふさい",
  "ふしぎ",
  "ふじみ",
  "ふすま",
  "ふせい",
  "ふせぐ",
  "ふそく",
  "ぶたにく",
  "ふたん",
  "ふちょう",
  "ふつう",
  "ふつか",
  "ふっかつ",
  "ふっき",
  "ふっこく",
  "ぶどう",
  "ふとる",
  "ふとん",
  "ふのう",
  "ふはい",
  "ふひょう",
  "ふへん",
  "ふまん",
  "ふみん",
  "ふめつ",
  "ふめん",
  "ふよう",
  "ふりこ",
  "ふりる",
  "ふるい",
  "ふんいき",
  "ぶんがく",
  "ぶんぐ",
  "ふんしつ",
  "ぶんせき",
  "ふんそう",
  "ぶんぽう",
  "へいあん",
  "へいおん",
  "へいがい",
  "へいき",
  "へいげん",
  "へいこう",
  "へいさ",
  "へいしゃ",
  "へいせつ",
  "へいそ",
  "へいたく",
  "へいてん",
  "へいねつ",
  "へいわ",
  "へきが",
  "へこむ",
  "べにいろ",
  "べにしょうが",
  "へらす",
  "へんかん",
  "べんきょう",
  "べんごし",
  "へんさい",
  "へんたい",
  "べんり",
  "ほあん",
  "ほいく",
  "ぼうぎょ",
  "ほうこく",
  "ほうそう",
  "ほうほう",
  "ほうもん",
  "ほうりつ",
  "ほえる",
  "ほおん",
  "ほかん",
  "ほきょう",
  "ぼきん",
  "ほくろ",
  "ほけつ",
  "ほけん",
  "ほこう",
  "ほこる",
  "ほしい",
  "ほしつ",
  "ほしゅ",
  "ほしょう",
  "ほせい",
  "ほそい",
  "ほそく",
  "ほたて",
  "ほたる",
  "ぽちぶくろ",
  "ほっきょく",
  "ほっさ",
  "ほったん",
  "ほとんど",
  "ほめる",
  "ほんい",
  "ほんき",
  "ほんけ",
  "ほんしつ",
  "ほんやく",
  "まいにち",
  "まかい",
  "まかせる",
  "まがる",
  "まける",
  "まこと",
  "まさつ",
  "まじめ",
  "ますく",
  "まぜる",
  "まつり",
  "まとめ",
  "まなぶ",
  "まぬけ",
  "まねく",
  "まほう",
  "まもる",
  "まゆげ",
  "まよう",
  "まろやか",
  "まわす",
  "まわり",
  "まわる",
  "まんが",
  "まんきつ",
  "まんぞく",
  "まんなか",
  "みいら",
  "みうち",
  "みえる",
  "みがく",
  "みかた",
  "みかん",
  "みけん",
  "みこん",
  "みじかい",
  "みすい",
  "みすえる",
  "みせる",
  "みっか",
  "みつかる",
  "みつける",
  "みてい",
  "みとめる",
  "みなと",
  "みなみかさい",
  "みねらる",
  "みのう",
  "みのがす",
  "みほん",
  "みもと",
  "みやげ",
  "みらい",
  "みりょく",
  "みわく",
  "みんか",
  "みんぞく",
  "むいか",
  "むえき",
  "むえん",
  "むかい",
  "むかう",
  "むかえ",
  "むかし",
  "むぎちゃ",
  "むける",
  "むげん",
  "むさぼる",
  "むしあつい",
  "むしば",
  "むじゅん",
  "むしろ",
  "むすう",
  "むすこ",
  "むすぶ",
  "むすめ",
  "むせる",
  "むせん",
  "むちゅう",
  "むなしい",
  "むのう",
  "むやみ",
  "むよう",
  "むらさき",
  "むりょう",
  "むろん",
  "めいあん",
  "めいうん",
  "めいえん",
  "めいかく",
  "めいきょく",
  "めいさい",
  "めいし",
  "めいそう",
  "めいぶつ",
  "めいれい",
  "めいわく",
  "めぐまれる",
  "めざす",
  "めした",
  "めずらしい",
  "めだつ",
  "めまい",
  "めやす",
  "めんきょ",
  "めんせき",
  "めんどう",
  "もうしあげる",
  "もうどうけん",
  "もえる",
  "もくし",
  "もくてき",
  "もくようび",
  "もちろん",
  "もどる",
  "もらう",
  "もんく",
  "もんだい",
  "やおや",
  "やける",
  "やさい",
  "やさしい",
  "やすい",
  "やすたろう",
  "やすみ",
  "やせる",
  "やそう",
  "やたい",
  "やちん",
  "やっと",
  "やっぱり",
  "やぶる",
  "やめる",
  "ややこしい",
  "やよい",
  "やわらかい",
  "ゆうき",
  "ゆうびんきょく",
  "ゆうべ",
  "ゆうめい",
  "ゆけつ",
  "ゆしゅつ",
  "ゆせん",
  "ゆそう",
  "ゆたか",
  "ゆちゃく",
  "ゆでる",
  "ゆにゅう",
  "ゆびわ",
  "ゆらい",
  "ゆれる",
  "ようい",
  "ようか",
  "ようきゅう",
  "ようじ",
  "ようす",
  "ようちえん",
  "よかぜ",
  "よかん",
  "よきん",
  "よくせい",
  "よくぼう",
  "よけい",
  "よごれる",
  "よさん",
  "よしゅう",
  "よそう",
  "よそく",
  "よっか",
  "よてい",
  "よどがわく",
  "よねつ",
  "よやく",
  "よゆう",
  "よろこぶ",
  "よろしい",
  "らいう",
  "らくがき",
  "らくご",
  "らくさつ",
  "らくだ",
  "らしんばん",
  "らせん",
  "らぞく",
  "らたい",
  "らっか",
  "られつ",
  "りえき",
  "りかい",
  "りきさく",
  "りきせつ",
  "りくぐん",
  "りくつ",
  "りけん",
  "りこう",
  "りせい",
  "りそう",
  "りそく",
  "りてん",
  "りねん",
  "りゆう",
  "りゅうがく",
  "りよう",
  "りょうり",
  "りょかん",
  "りょくちゃ",
  "りょこう",
  "りりく",
  "りれき",
  "りろん",
  "りんご",
  "るいけい",
  "るいさい",
  "るいじ",
  "るいせき",
  "るすばん",
  "るりがわら",
  "れいかん",
  "れいぎ",
  "れいせい",
  "れいぞうこ",
  "れいとう",
  "れいぼう",
  "れきし",
  "れきだい",
  "れんあい",
  "れんけい",
  "れんこん",
  "れんさい",
  "れんしゅう",
  "れんぞく",
  "れんらく",
  "ろうか",
  "ろうご",
  "ろうじん",
  "ろうそく",
  "ろくが",
  "ろこつ",
  "ろじうら",
  "ろしゅつ",
  "ろせん",
  "ろてん",
  "ろめん",
  "ろれつ",
  "ろんぎ",
  "ろんぱ",
  "ろんぶん",
  "ろんり",
  "わかす",
  "わかめ",
  "わかやま",
  "わかれる",
  "わしつ",
  "わじまし",
  "わすれもの",
  "わらう",
  "われる"
]

},{}],162:[function(require,module,exports){
module.exports=[
  "가격",
  "가끔",
  "가난",
  "가능",
  "가득",
  "가르침",
  "가뭄",
  "가방",
  "가상",
  "가슴",
  "가운데",
  "가을",
  "가이드",
  "가입",
  "가장",
  "가정",
  "가족",
  "가죽",
  "각오",
  "각자",
  "간격",
  "간부",
  "간섭",
  "간장",
  "간접",
  "간판",
  "갈등",
  "갈비",
  "갈색",
  "갈증",
  "감각",
  "감기",
  "감소",
  "감수성",
  "감자",
  "감정",
  "갑자기",
  "강남",
  "강당",
  "강도",
  "강력히",
  "강변",
  "강북",
  "강사",
  "강수량",
  "강아지",
  "강원도",
  "강의",
  "강제",
  "강조",
  "같이",
  "개구리",
  "개나리",
  "개방",
  "개별",
  "개선",
  "개성",
  "개인",
  "객관적",
  "거실",
  "거액",
  "거울",
  "거짓",
  "거품",
  "걱정",
  "건강",
  "건물",
  "건설",
  "건조",
  "건축",
  "걸음",
  "검사",
  "검토",
  "게시판",
  "게임",
  "겨울",
  "견해",
  "결과",
  "결국",
  "결론",
  "결석",
  "결승",
  "결심",
  "결정",
  "결혼",
  "경계",
  "경고",
  "경기",
  "경력",
  "경복궁",
  "경비",
  "경상도",
  "경영",
  "경우",
  "경쟁",
  "경제",
  "경주",
  "경찰",
  "경치",
  "경향",
  "경험",
  "계곡",
  "계단",
  "계란",
  "계산",
  "계속",
  "계약",
  "계절",
  "계층",
  "계획",
  "고객",
  "고구려",
  "고궁",
  "고급",
  "고등학생",
  "고무신",
  "고민",
  "고양이",
  "고장",
  "고전",
  "고집",
  "고춧가루",
  "고통",
  "고향",
  "곡식",
  "골목",
  "골짜기",
  "골프",
  "공간",
  "공개",
  "공격",
  "공군",
  "공급",
  "공기",
  "공동",
  "공무원",
  "공부",
  "공사",
  "공식",
  "공업",
  "공연",
  "공원",
  "공장",
  "공짜",
  "공책",
  "공통",
  "공포",
  "공항",
  "공휴일",
  "과목",
  "과일",
  "과장",
  "과정",
  "과학",
  "관객",
  "관계",
  "관광",
  "관념",
  "관람",
  "관련",
  "관리",
  "관습",
  "관심",
  "관점",
  "관찰",
  "광경",
  "광고",
  "광장",
  "광주",
  "괴로움",
  "굉장히",
  "교과서",
  "교문",
  "교복",
  "교실",
  "교양",
  "교육",
  "교장",
  "교직",
  "교통",
  "교환",
  "교훈",
  "구경",
  "구름",
  "구멍",
  "구별",
  "구분",
  "구석",
  "구성",
  "구속",
  "구역",
  "구입",
  "구청",
  "구체적",
  "국가",
  "국기",
  "국내",
  "국립",
  "국물",
  "국민",
  "국수",
  "국어",
  "국왕",
  "국적",
  "국제",
  "국회",
  "군대",
  "군사",
  "군인",
  "궁극적",
  "권리",
  "권위",
  "권투",
  "귀국",
  "귀신",
  "규정",
  "규칙",
  "균형",
  "그날",
  "그냥",
  "그늘",
  "그러나",
  "그룹",
  "그릇",
  "그림",
  "그제서야",
  "그토록",
  "극복",
  "극히",
  "근거",
  "근교",
  "근래",
  "근로",
  "근무",
  "근본",
  "근원",
  "근육",
  "근처",
  "글씨",
  "글자",
  "금강산",
  "금고",
  "금년",
  "금메달",
  "금액",
  "금연",
  "금요일",
  "금지",
  "긍정적",
  "기간",
  "기관",
  "기념",
  "기능",
  "기독교",
  "기둥",
  "기록",
  "기름",
  "기법",
  "기본",
  "기분",
  "기쁨",
  "기숙사",
  "기술",
  "기억",
  "기업",
  "기온",
  "기운",
  "기원",
  "기적",
  "기준",
  "기침",
  "기혼",
  "기획",
  "긴급",
  "긴장",
  "길이",
  "김밥",
  "김치",
  "김포공항",
  "깍두기",
  "깜빡",
  "깨달음",
  "깨소금",
  "껍질",
  "꼭대기",
  "꽃잎",
  "나들이",
  "나란히",
  "나머지",
  "나물",
  "나침반",
  "나흘",
  "낙엽",
  "난방",
  "날개",
  "날씨",
  "날짜",
  "남녀",
  "남대문",
  "남매",
  "남산",
  "남자",
  "남편",
  "남학생",
  "낭비",
  "낱말",
  "내년",
  "내용",
  "내일",
  "냄비",
  "냄새",
  "냇물",
  "냉동",
  "냉면",
  "냉방",
  "냉장고",
  "넥타이",
  "넷째",
  "노동",
  "노란색",
  "노력",
  "노인",
  "녹음",
  "녹차",
  "녹화",
  "논리",
  "논문",
  "논쟁",
  "놀이",
  "농구",
  "농담",
  "농민",
  "농부",
  "농업",
  "농장",
  "농촌",
  "높이",
  "눈동자",
  "눈물",
  "눈썹",
  "뉴욕",
  "느낌",
  "늑대",
  "능동적",
  "능력",
  "다방",
  "다양성",
  "다음",
  "다이어트",
  "다행",
  "단계",
  "단골",
  "단독",
  "단맛",
  "단순",
  "단어",
  "단위",
  "단점",
  "단체",
  "단추",
  "단편",
  "단풍",
  "달걀",
  "달러",
  "달력",
  "달리",
  "닭고기",
  "담당",
  "담배",
  "담요",
  "담임",
  "답변",
  "답장",
  "당근",
  "당분간",
  "당연히",
  "당장",
  "대규모",
  "대낮",
  "대단히",
  "대답",
  "대도시",
  "대략",
  "대량",
  "대륙",
  "대문",
  "대부분",
  "대신",
  "대응",
  "대장",
  "대전",
  "대접",
  "대중",
  "대책",
  "대출",
  "대충",
  "대통령",
  "대학",
  "대한민국",
  "대합실",
  "대형",
  "덩어리",
  "데이트",
  "도대체",
  "도덕",
  "도둑",
  "도망",
  "도서관",
  "도심",
  "도움",
  "도입",
  "도자기",
  "도저히",
  "도전",
  "도중",
  "도착",
  "독감",
  "독립",
  "독서",
  "독일",
  "독창적",
  "동화책",
  "뒷모습",
  "뒷산",
  "딸아이",
  "마누라",
  "마늘",
  "마당",
  "마라톤",
  "마련",
  "마무리",
  "마사지",
  "마약",
  "마요네즈",
  "마을",
  "마음",
  "마이크",
  "마중",
  "마지막",
  "마찬가지",
  "마찰",
  "마흔",
  "막걸리",
  "막내",
  "막상",
  "만남",
  "만두",
  "만세",
  "만약",
  "만일",
  "만점",
  "만족",
  "만화",
  "많이",
  "말기",
  "말씀",
  "말투",
  "맘대로",
  "망원경",
  "매년",
  "매달",
  "매력",
  "매번",
  "매스컴",
  "매일",
  "매장",
  "맥주",
  "먹이",
  "먼저",
  "먼지",
  "멀리",
  "메일",
  "며느리",
  "며칠",
  "면담",
  "멸치",
  "명단",
  "명령",
  "명예",
  "명의",
  "명절",
  "명칭",
  "명함",
  "모금",
  "모니터",
  "모델",
  "모든",
  "모범",
  "모습",
  "모양",
  "모임",
  "모조리",
  "모집",
  "모퉁이",
  "목걸이",
  "목록",
  "목사",
  "목소리",
  "목숨",
  "목적",
  "목표",
  "몰래",
  "몸매",
  "몸무게",
  "몸살",
  "몸속",
  "몸짓",
  "몸통",
  "몹시",
  "무관심",
  "무궁화",
  "무더위",
  "무덤",
  "무릎",
  "무슨",
  "무엇",
  "무역",
  "무용",
  "무조건",
  "무지개",
  "무척",
  "문구",
  "문득",
  "문법",
  "문서",
  "문제",
  "문학",
  "문화",
  "물가",
  "물건",
  "물결",
  "물고기",
  "물론",
  "물리학",
  "물음",
  "물질",
  "물체",
  "미국",
  "미디어",
  "미사일",
  "미술",
  "미역",
  "미용실",
  "미움",
  "미인",
  "미팅",
  "미혼",
  "민간",
  "민족",
  "민주",
  "믿음",
  "밀가루",
  "밀리미터",
  "밑바닥",
  "바가지",
  "바구니",
  "바나나",
  "바늘",
  "바닥",
  "바닷가",
  "바람",
  "바이러스",
  "바탕",
  "박물관",
  "박사",
  "박수",
  "반대",
  "반드시",
  "반말",
  "반발",
  "반성",
  "반응",
  "반장",
  "반죽",
  "반지",
  "반찬",
  "받침",
  "발가락",
  "발걸음",
  "발견",
  "발달",
  "발레",
  "발목",
  "발바닥",
  "발생",
  "발음",
  "발자국",
  "발전",
  "발톱",
  "발표",
  "밤하늘",
  "밥그릇",
  "밥맛",
  "밥상",
  "밥솥",
  "방금",
  "방면",
  "방문",
  "방바닥",
  "방법",
  "방송",
  "방식",
  "방안",
  "방울",
  "방지",
  "방학",
  "방해",
  "방향",
  "배경",
  "배꼽",
  "배달",
  "배드민턴",
  "백두산",
  "백색",
  "백성",
  "백인",
  "백제",
  "백화점",
  "버릇",
  "버섯",
  "버튼",
  "번개",
  "번역",
  "번지",
  "번호",
  "벌금",
  "벌레",
  "벌써",
  "범위",
  "범인",
  "범죄",
  "법률",
  "법원",
  "법적",
  "법칙",
  "베이징",
  "벨트",
  "변경",
  "변동",
  "변명",
  "변신",
  "변호사",
  "변화",
  "별도",
  "별명",
  "별일",
  "병실",
  "병아리",
  "병원",
  "보관",
  "보너스",
  "보라색",
  "보람",
  "보름",
  "보상",
  "보안",
  "보자기",
  "보장",
  "보전",
  "보존",
  "보통",
  "보편적",
  "보험",
  "복도",
  "복사",
  "복숭아",
  "복습",
  "볶음",
  "본격적",
  "본래",
  "본부",
  "본사",
  "본성",
  "본인",
  "본질",
  "볼펜",
  "봉사",
  "봉지",
  "봉투",
  "부근",
  "부끄러움",
  "부담",
  "부동산",
  "부문",
  "부분",
  "부산",
  "부상",
  "부엌",
  "부인",
  "부작용",
  "부장",
  "부정",
  "부족",
  "부지런히",
  "부친",
  "부탁",
  "부품",
  "부회장",
  "북부",
  "북한",
  "분노",
  "분량",
  "분리",
  "분명",
  "분석",
  "분야",
  "분위기",
  "분필",
  "분홍색",
  "불고기",
  "불과",
  "불교",
  "불꽃",
  "불만",
  "불법",
  "불빛",
  "불안",
  "불이익",
  "불행",
  "브랜드",
  "비극",
  "비난",
  "비닐",
  "비둘기",
  "비디오",
  "비로소",
  "비만",
  "비명",
  "비밀",
  "비바람",
  "비빔밥",
  "비상",
  "비용",
  "비율",
  "비중",
  "비타민",
  "비판",
  "빌딩",
  "빗물",
  "빗방울",
  "빗줄기",
  "빛깔",
  "빨간색",
  "빨래",
  "빨리",
  "사건",
  "사계절",
  "사나이",
  "사냥",
  "사람",
  "사랑",
  "사립",
  "사모님",
  "사물",
  "사방",
  "사상",
  "사생활",
  "사설",
  "사슴",
  "사실",
  "사업",
  "사용",
  "사월",
  "사장",
  "사전",
  "사진",
  "사촌",
  "사춘기",
  "사탕",
  "사투리",
  "사흘",
  "산길",
  "산부인과",
  "산업",
  "산책",
  "살림",
  "살인",
  "살짝",
  "삼계탕",
  "삼국",
  "삼십",
  "삼월",
  "삼촌",
  "상관",
  "상금",
  "상대",
  "상류",
  "상반기",
  "상상",
  "상식",
  "상업",
  "상인",
  "상자",
  "상점",
  "상처",
  "상추",
  "상태",
  "상표",
  "상품",
  "상황",
  "새벽",
  "색깔",
  "색연필",
  "생각",
  "생명",
  "생물",
  "생방송",
  "생산",
  "생선",
  "생신",
  "생일",
  "생활",
  "서랍",
  "서른",
  "서명",
  "서민",
  "서비스",
  "서양",
  "서울",
  "서적",
  "서점",
  "서쪽",
  "서클",
  "석사",
  "석유",
  "선거",
  "선물",
  "선배",
  "선생",
  "선수",
  "선원",
  "선장",
  "선전",
  "선택",
  "선풍기",
  "설거지",
  "설날",
  "설렁탕",
  "설명",
  "설문",
  "설사",
  "설악산",
  "설치",
  "설탕",
  "섭씨",
  "성공",
  "성당",
  "성명",
  "성별",
  "성인",
  "성장",
  "성적",
  "성질",
  "성함",
  "세금",
  "세미나",
  "세상",
  "세월",
  "세종대왕",
  "세탁",
  "센터",
  "센티미터",
  "셋째",
  "소규모",
  "소극적",
  "소금",
  "소나기",
  "소년",
  "소득",
  "소망",
  "소문",
  "소설",
  "소속",
  "소아과",
  "소용",
  "소원",
  "소음",
  "소중히",
  "소지품",
  "소질",
  "소풍",
  "소형",
  "속담",
  "속도",
  "속옷",
  "손가락",
  "손길",
  "손녀",
  "손님",
  "손등",
  "손목",
  "손뼉",
  "손실",
  "손질",
  "손톱",
  "손해",
  "솔직히",
  "솜씨",
  "송아지",
  "송이",
  "송편",
  "쇠고기",
  "쇼핑",
  "수건",
  "수년",
  "수단",
  "수돗물",
  "수동적",
  "수면",
  "수명",
  "수박",
  "수상",
  "수석",
  "수술",
  "수시로",
  "수업",
  "수염",
  "수영",
  "수입",
  "수준",
  "수집",
  "수출",
  "수컷",
  "수필",
  "수학",
  "수험생",
  "수화기",
  "숙녀",
  "숙소",
  "숙제",
  "순간",
  "순서",
  "순수",
  "순식간",
  "순위",
  "숟가락",
  "술병",
  "술집",
  "숫자",
  "스님",
  "스물",
  "스스로",
  "스승",
  "스웨터",
  "스위치",
  "스케이트",
  "스튜디오",
  "스트레스",
  "스포츠",
  "슬쩍",
  "슬픔",
  "습관",
  "습기",
  "승객",
  "승리",
  "승부",
  "승용차",
  "승진",
  "시각",
  "시간",
  "시골",
  "시금치",
  "시나리오",
  "시댁",
  "시리즈",
  "시멘트",
  "시민",
  "시부모",
  "시선",
  "시설",
  "시스템",
  "시아버지",
  "시어머니",
  "시월",
  "시인",
  "시일",
  "시작",
  "시장",
  "시절",
  "시점",
  "시중",
  "시즌",
  "시집",
  "시청",
  "시합",
  "시험",
  "식구",
  "식기",
  "식당",
  "식량",
  "식료품",
  "식물",
  "식빵",
  "식사",
  "식생활",
  "식초",
  "식탁",
  "식품",
  "신고",
  "신규",
  "신념",
  "신문",
  "신발",
  "신비",
  "신사",
  "신세",
  "신용",
  "신제품",
  "신청",
  "신체",
  "신화",
  "실감",
  "실내",
  "실력",
  "실례",
  "실망",
  "실수",
  "실습",
  "실시",
  "실장",
  "실정",
  "실질적",
  "실천",
  "실체",
  "실컷",
  "실태",
  "실패",
  "실험",
  "실현",
  "심리",
  "심부름",
  "심사",
  "심장",
  "심정",
  "심판",
  "쌍둥이",
  "씨름",
  "씨앗",
  "아가씨",
  "아나운서",
  "아드님",
  "아들",
  "아쉬움",
  "아스팔트",
  "아시아",
  "아울러",
  "아저씨",
  "아줌마",
  "아직",
  "아침",
  "아파트",
  "아프리카",
  "아픔",
  "아홉",
  "아흔",
  "악기",
  "악몽",
  "악수",
  "안개",
  "안경",
  "안과",
  "안내",
  "안녕",
  "안동",
  "안방",
  "안부",
  "안주",
  "알루미늄",
  "알코올",
  "암시",
  "암컷",
  "압력",
  "앞날",
  "앞문",
  "애인",
  "애정",
  "액수",
  "앨범",
  "야간",
  "야단",
  "야옹",
  "약간",
  "약국",
  "약속",
  "약수",
  "약점",
  "약품",
  "약혼녀",
  "양념",
  "양력",
  "양말",
  "양배추",
  "양주",
  "양파",
  "어둠",
  "어려움",
  "어른",
  "어젯밤",
  "어쨌든",
  "어쩌다가",
  "어쩐지",
  "언니",
  "언덕",
  "언론",
  "언어",
  "얼굴",
  "얼른",
  "얼음",
  "얼핏",
  "엄마",
  "업무",
  "업종",
  "업체",
  "엉덩이",
  "엉망",
  "엉터리",
  "엊그제",
  "에너지",
  "에어컨",
  "엔진",
  "여건",
  "여고생",
  "여관",
  "여군",
  "여권",
  "여대생",
  "여덟",
  "여동생",
  "여든",
  "여론",
  "여름",
  "여섯",
  "여성",
  "여왕",
  "여인",
  "여전히",
  "여직원",
  "여학생",
  "여행",
  "역사",
  "역시",
  "역할",
  "연결",
  "연구",
  "연극",
  "연기",
  "연락",
  "연설",
  "연세",
  "연속",
  "연습",
  "연애",
  "연예인",
  "연인",
  "연장",
  "연주",
  "연출",
  "연필",
  "연합",
  "연휴",
  "열기",
  "열매",
  "열쇠",
  "열심히",
  "열정",
  "열차",
  "열흘",
  "염려",
  "엽서",
  "영국",
  "영남",
  "영상",
  "영양",
  "영역",
  "영웅",
  "영원히",
  "영하",
  "영향",
  "영혼",
  "영화",
  "옆구리",
  "옆방",
  "옆집",
  "예감",
  "예금",
  "예방",
  "예산",
  "예상",
  "예선",
  "예술",
  "예습",
  "예식장",
  "예약",
  "예전",
  "예절",
  "예정",
  "예컨대",
  "옛날",
  "오늘",
  "오락",
  "오랫동안",
  "오렌지",
  "오로지",
  "오른발",
  "오븐",
  "오십",
  "오염",
  "오월",
  "오전",
  "오직",
  "오징어",
  "오페라",
  "오피스텔",
  "오히려",
  "옥상",
  "옥수수",
  "온갖",
  "온라인",
  "온몸",
  "온종일",
  "온통",
  "올가을",
  "올림픽",
  "올해",
  "옷차림",
  "와이셔츠",
  "와인",
  "완성",
  "완전",
  "왕비",
  "왕자",
  "왜냐하면",
  "왠지",
  "외갓집",
  "외국",
  "외로움",
  "외삼촌",
  "외출",
  "외침",
  "외할머니",
  "왼발",
  "왼손",
  "왼쪽",
  "요금",
  "요일",
  "요즘",
  "요청",
  "용기",
  "용서",
  "용어",
  "우산",
  "우선",
  "우승",
  "우연히",
  "우정",
  "우체국",
  "우편",
  "운동",
  "운명",
  "운반",
  "운전",
  "운행",
  "울산",
  "울음",
  "움직임",
  "웃어른",
  "웃음",
  "워낙",
  "원고",
  "원래",
  "원서",
  "원숭이",
  "원인",
  "원장",
  "원피스",
  "월급",
  "월드컵",
  "월세",
  "월요일",
  "웨이터",
  "위반",
  "위법",
  "위성",
  "위원",
  "위험",
  "위협",
  "윗사람",
  "유난히",
  "유럽",
  "유명",
  "유물",
  "유산",
  "유적",
  "유치원",
  "유학",
  "유행",
  "유형",
  "육군",
  "육상",
  "육십",
  "육체",
  "은행",
  "음력",
  "음료",
  "음반",
  "음성",
  "음식",
  "음악",
  "음주",
  "의견",
  "의논",
  "의문",
  "의복",
  "의식",
  "의심",
  "의외로",
  "의욕",
  "의원",
  "의학",
  "이것",
  "이곳",
  "이념",
  "이놈",
  "이달",
  "이대로",
  "이동",
  "이렇게",
  "이력서",
  "이론적",
  "이름",
  "이민",
  "이발소",
  "이별",
  "이불",
  "이빨",
  "이상",
  "이성",
  "이슬",
  "이야기",
  "이용",
  "이웃",
  "이월",
  "이윽고",
  "이익",
  "이전",
  "이중",
  "이튿날",
  "이틀",
  "이혼",
  "인간",
  "인격",
  "인공",
  "인구",
  "인근",
  "인기",
  "인도",
  "인류",
  "인물",
  "인생",
  "인쇄",
  "인연",
  "인원",
  "인재",
  "인종",
  "인천",
  "인체",
  "인터넷",
  "인하",
  "인형",
  "일곱",
  "일기",
  "일단",
  "일대",
  "일등",
  "일반",
  "일본",
  "일부",
  "일상",
  "일생",
  "일손",
  "일요일",
  "일월",
  "일정",
  "일종",
  "일주일",
  "일찍",
  "일체",
  "일치",
  "일행",
  "일회용",
  "임금",
  "임무",
  "입대",
  "입력",
  "입맛",
  "입사",
  "입술",
  "입시",
  "입원",
  "입장",
  "입학",
  "자가용",
  "자격",
  "자극",
  "자동",
  "자랑",
  "자부심",
  "자식",
  "자신",
  "자연",
  "자원",
  "자율",
  "자전거",
  "자정",
  "자존심",
  "자판",
  "작가",
  "작년",
  "작성",
  "작업",
  "작용",
  "작은딸",
  "작품",
  "잔디",
  "잔뜩",
  "잔치",
  "잘못",
  "잠깐",
  "잠수함",
  "잠시",
  "잠옷",
  "잠자리",
  "잡지",
  "장관",
  "장군",
  "장기간",
  "장래",
  "장례",
  "장르",
  "장마",
  "장면",
  "장모",
  "장미",
  "장비",
  "장사",
  "장소",
  "장식",
  "장애인",
  "장인",
  "장점",
  "장차",
  "장학금",
  "재능",
  "재빨리",
  "재산",
  "재생",
  "재작년",
  "재정",
  "재채기",
  "재판",
  "재학",
  "재활용",
  "저것",
  "저고리",
  "저곳",
  "저녁",
  "저런",
  "저렇게",
  "저번",
  "저울",
  "저절로",
  "저축",
  "적극",
  "적당히",
  "적성",
  "적용",
  "적응",
  "전개",
  "전공",
  "전기",
  "전달",
  "전라도",
  "전망",
  "전문",
  "전반",
  "전부",
  "전세",
  "전시",
  "전용",
  "전자",
  "전쟁",
  "전주",
  "전철",
  "전체",
  "전통",
  "전혀",
  "전후",
  "절대",
  "절망",
  "절반",
  "절약",
  "절차",
  "점검",
  "점수",
  "점심",
  "점원",
  "점점",
  "점차",
  "접근",
  "접시",
  "접촉",
  "젓가락",
  "정거장",
  "정도",
  "정류장",
  "정리",
  "정말",
  "정면",
  "정문",
  "정반대",
  "정보",
  "정부",
  "정비",
  "정상",
  "정성",
  "정오",
  "정원",
  "정장",
  "정지",
  "정치",
  "정확히",
  "제공",
  "제과점",
  "제대로",
  "제목",
  "제발",
  "제법",
  "제삿날",
  "제안",
  "제일",
  "제작",
  "제주도",
  "제출",
  "제품",
  "제한",
  "조각",
  "조건",
  "조금",
  "조깅",
  "조명",
  "조미료",
  "조상",
  "조선",
  "조용히",
  "조절",
  "조정",
  "조직",
  "존댓말",
  "존재",
  "졸업",
  "졸음",
  "종교",
  "종로",
  "종류",
  "종소리",
  "종업원",
  "종종",
  "종합",
  "좌석",
  "죄인",
  "주관적",
  "주름",
  "주말",
  "주머니",
  "주먹",
  "주문",
  "주민",
  "주방",
  "주변",
  "주식",
  "주인",
  "주일",
  "주장",
  "주전자",
  "주택",
  "준비",
  "줄거리",
  "줄기",
  "줄무늬",
  "중간",
  "중계방송",
  "중국",
  "중년",
  "중단",
  "중독",
  "중반",
  "중부",
  "중세",
  "중소기업",
  "중순",
  "중앙",
  "중요",
  "중학교",
  "즉석",
  "즉시",
  "즐거움",
  "증가",
  "증거",
  "증권",
  "증상",
  "증세",
  "지각",
  "지갑",
  "지경",
  "지극히",
  "지금",
  "지급",
  "지능",
  "지름길",
  "지리산",
  "지방",
  "지붕",
  "지식",
  "지역",
  "지우개",
  "지원",
  "지적",
  "지점",
  "지진",
  "지출",
  "직선",
  "직업",
  "직원",
  "직장",
  "진급",
  "진동",
  "진로",
  "진료",
  "진리",
  "진짜",
  "진찰",
  "진출",
  "진통",
  "진행",
  "질문",
  "질병",
  "질서",
  "짐작",
  "집단",
  "집안",
  "집중",
  "짜증",
  "찌꺼기",
  "차남",
  "차라리",
  "차량",
  "차림",
  "차별",
  "차선",
  "차츰",
  "착각",
  "찬물",
  "찬성",
  "참가",
  "참기름",
  "참새",
  "참석",
  "참여",
  "참외",
  "참조",
  "찻잔",
  "창가",
  "창고",
  "창구",
  "창문",
  "창밖",
  "창작",
  "창조",
  "채널",
  "채점",
  "책가방",
  "책방",
  "책상",
  "책임",
  "챔피언",
  "처벌",
  "처음",
  "천국",
  "천둥",
  "천장",
  "천재",
  "천천히",
  "철도",
  "철저히",
  "철학",
  "첫날",
  "첫째",
  "청년",
  "청바지",
  "청소",
  "청춘",
  "체계",
  "체력",
  "체온",
  "체육",
  "체중",
  "체험",
  "초등학생",
  "초반",
  "초밥",
  "초상화",
  "초순",
  "초여름",
  "초원",
  "초저녁",
  "초점",
  "초청",
  "초콜릿",
  "촛불",
  "총각",
  "총리",
  "총장",
  "촬영",
  "최근",
  "최상",
  "최선",
  "최신",
  "최악",
  "최종",
  "추석",
  "추억",
  "추진",
  "추천",
  "추측",
  "축구",
  "축소",
  "축제",
  "축하",
  "출근",
  "출발",
  "출산",
  "출신",
  "출연",
  "출입",
  "출장",
  "출판",
  "충격",
  "충고",
  "충돌",
  "충분히",
  "충청도",
  "취업",
  "취직",
  "취향",
  "치약",
  "친구",
  "친척",
  "칠십",
  "칠월",
  "칠판",
  "침대",
  "침묵",
  "침실",
  "칫솔",
  "칭찬",
  "카메라",
  "카운터",
  "칼국수",
  "캐릭터",
  "캠퍼스",
  "캠페인",
  "커튼",
  "컨디션",
  "컬러",
  "컴퓨터",
  "코끼리",
  "코미디",
  "콘서트",
  "콜라",
  "콤플렉스",
  "콩나물",
  "쾌감",
  "쿠데타",
  "크림",
  "큰길",
  "큰딸",
  "큰소리",
  "큰아들",
  "큰어머니",
  "큰일",
  "큰절",
  "클래식",
  "클럽",
  "킬로",
  "타입",
  "타자기",
  "탁구",
  "탁자",
  "탄생",
  "태권도",
  "태양",
  "태풍",
  "택시",
  "탤런트",
  "터널",
  "터미널",
  "테니스",
  "테스트",
  "테이블",
  "텔레비전",
  "토론",
  "토마토",
  "토요일",
  "통계",
  "통과",
  "통로",
  "통신",
  "통역",
  "통일",
  "통장",
  "통제",
  "통증",
  "통합",
  "통화",
  "퇴근",
  "퇴원",
  "퇴직금",
  "튀김",
  "트럭",
  "특급",
  "특별",
  "특성",
  "특수",
  "특징",
  "특히",
  "튼튼히",
  "티셔츠",
  "파란색",
  "파일",
  "파출소",
  "판결",
  "판단",
  "판매",
  "판사",
  "팔십",
  "팔월",
  "팝송",
  "패션",
  "팩스",
  "팩시밀리",
  "팬티",
  "퍼센트",
  "페인트",
  "편견",
  "편의",
  "편지",
  "편히",
  "평가",
  "평균",
  "평생",
  "평소",
  "평양",
  "평일",
  "평화",
  "포스터",
  "포인트",
  "포장",
  "포함",
  "표면",
  "표정",
  "표준",
  "표현",
  "품목",
  "품질",
  "풍경",
  "풍속",
  "풍습",
  "프랑스",
  "프린터",
  "플라스틱",
  "피곤",
  "피망",
  "피아노",
  "필름",
  "필수",
  "필요",
  "필자",
  "필통",
  "핑계",
  "하느님",
  "하늘",
  "하드웨어",
  "하룻밤",
  "하반기",
  "하숙집",
  "하순",
  "하여튼",
  "하지만",
  "하천",
  "하품",
  "하필",
  "학과",
  "학교",
  "학급",
  "학기",
  "학년",
  "학력",
  "학번",
  "학부모",
  "학비",
  "학생",
  "학술",
  "학습",
  "학용품",
  "학원",
  "학위",
  "학자",
  "학점",
  "한계",
  "한글",
  "한꺼번에",
  "한낮",
  "한눈",
  "한동안",
  "한때",
  "한라산",
  "한마디",
  "한문",
  "한번",
  "한복",
  "한식",
  "한여름",
  "한쪽",
  "할머니",
  "할아버지",
  "할인",
  "함께",
  "함부로",
  "합격",
  "합리적",
  "항공",
  "항구",
  "항상",
  "항의",
  "해결",
  "해군",
  "해답",
  "해당",
  "해물",
  "해석",
  "해설",
  "해수욕장",
  "해안",
  "핵심",
  "핸드백",
  "햄버거",
  "햇볕",
  "햇살",
  "행동",
  "행복",
  "행사",
  "행운",
  "행위",
  "향기",
  "향상",
  "향수",
  "허락",
  "허용",
  "헬기",
  "현관",
  "현금",
  "현대",
  "현상",
  "현실",
  "현장",
  "현재",
  "현지",
  "혈액",
  "협력",
  "형부",
  "형사",
  "형수",
  "형식",
  "형제",
  "형태",
  "형편",
  "혜택",
  "호기심",
  "호남",
  "호랑이",
  "호박",
  "호텔",
  "호흡",
  "혹시",
  "홀로",
  "홈페이지",
  "홍보",
  "홍수",
  "홍차",
  "화면",
  "화분",
  "화살",
  "화요일",
  "화장",
  "화학",
  "확보",
  "확인",
  "확장",
  "확정",
  "환갑",
  "환경",
  "환영",
  "환율",
  "환자",
  "활기",
  "활동",
  "활발히",
  "활용",
  "활짝",
  "회견",
  "회관",
  "회복",
  "회색",
  "회원",
  "회장",
  "회전",
  "횟수",
  "횡단보도",
  "효율적",
  "후반",
  "후춧가루",
  "훈련",
  "훨씬",
  "휴식",
  "휴일",
  "흉내",
  "흐름",
  "흑백",
  "흑인",
  "흔적",
  "흔히",
  "흥미",
  "흥분",
  "희곡",
  "희망",
  "희생",
  "흰색",
  "힘껏"
]

},{}],163:[function(require,module,exports){
module.exports=[
  "ábaco",
  "abdomen",
  "abeja",
  "abierto",
  "abogado",
  "abono",
  "aborto",
  "abrazo",
  "abrir",
  "abuelo",
  "abuso",
  "acabar",
  "academia",
  "acceso",
  "acción",
  "aceite",
  "acelga",
  "acento",
  "aceptar",
  "ácido",
  "aclarar",
  "acné",
  "acoger",
  "acoso",
  "activo",
  "acto",
  "actriz",
  "actuar",
  "acudir",
  "acuerdo",
  "acusar",
  "adicto",
  "admitir",
  "adoptar",
  "adorno",
  "aduana",
  "adulto",
  "aéreo",
  "afectar",
  "afición",
  "afinar",
  "afirmar",
  "ágil",
  "agitar",
  "agonía",
  "agosto",
  "agotar",
  "agregar",
  "agrio",
  "agua",
  "agudo",
  "águila",
  "aguja",
  "ahogo",
  "ahorro",
  "aire",
  "aislar",
  "ajedrez",
  "ajeno",
  "ajuste",
  "alacrán",
  "alambre",
  "alarma",
  "alba",
  "álbum",
  "alcalde",
  "aldea",
  "alegre",
  "alejar",
  "alerta",
  "aleta",
  "alfiler",
  "alga",
  "algodón",
  "aliado",
  "aliento",
  "alivio",
  "alma",
  "almeja",
  "almíbar",
  "altar",
  "alteza",
  "altivo",
  "alto",
  "altura",
  "alumno",
  "alzar",
  "amable",
  "amante",
  "amapola",
  "amargo",
  "amasar",
  "ámbar",
  "ámbito",
  "ameno",
  "amigo",
  "amistad",
  "amor",
  "amparo",
  "amplio",
  "ancho",
  "anciano",
  "ancla",
  "andar",
  "andén",
  "anemia",
  "ángulo",
  "anillo",
  "ánimo",
  "anís",
  "anotar",
  "antena",
  "antiguo",
  "antojo",
  "anual",
  "anular",
  "anuncio",
  "añadir",
  "añejo",
  "año",
  "apagar",
  "aparato",
  "apetito",
  "apio",
  "aplicar",
  "apodo",
  "aporte",
  "apoyo",
  "aprender",
  "aprobar",
  "apuesta",
  "apuro",
  "arado",
  "araña",
  "arar",
  "árbitro",
  "árbol",
  "arbusto",
  "archivo",
  "arco",
  "arder",
  "ardilla",
  "arduo",
  "área",
  "árido",
  "aries",
  "armonía",
  "arnés",
  "aroma",
  "arpa",
  "arpón",
  "arreglo",
  "arroz",
  "arruga",
  "arte",
  "artista",
  "asa",
  "asado",
  "asalto",
  "ascenso",
  "asegurar",
  "aseo",
  "asesor",
  "asiento",
  "asilo",
  "asistir",
  "asno",
  "asombro",
  "áspero",
  "astilla",
  "astro",
  "astuto",
  "asumir",
  "asunto",
  "atajo",
  "ataque",
  "atar",
  "atento",
  "ateo",
  "ático",
  "atleta",
  "átomo",
  "atraer",
  "atroz",
  "atún",
  "audaz",
  "audio",
  "auge",
  "aula",
  "aumento",
  "ausente",
  "autor",
  "aval",
  "avance",
  "avaro",
  "ave",
  "avellana",
  "avena",
  "avestruz",
  "avión",
  "aviso",
  "ayer",
  "ayuda",
  "ayuno",
  "azafrán",
  "azar",
  "azote",
  "azúcar",
  "azufre",
  "azul",
  "baba",
  "babor",
  "bache",
  "bahía",
  "baile",
  "bajar",
  "balanza",
  "balcón",
  "balde",
  "bambú",
  "banco",
  "banda",
  "baño",
  "barba",
  "barco",
  "barniz",
  "barro",
  "báscula",
  "bastón",
  "basura",
  "batalla",
  "batería",
  "batir",
  "batuta",
  "baúl",
  "bazar",
  "bebé",
  "bebida",
  "bello",
  "besar",
  "beso",
  "bestia",
  "bicho",
  "bien",
  "bingo",
  "blanco",
  "bloque",
  "blusa",
  "boa",
  "bobina",
  "bobo",
  "boca",
  "bocina",
  "boda",
  "bodega",
  "boina",
  "bola",
  "bolero",
  "bolsa",
  "bomba",
  "bondad",
  "bonito",
  "bono",
  "bonsái",
  "borde",
  "borrar",
  "bosque",
  "bote",
  "botín",
  "bóveda",
  "bozal",
  "bravo",
  "brazo",
  "brecha",
  "breve",
  "brillo",
  "brinco",
  "brisa",
  "broca",
  "broma",
  "bronce",
  "brote",
  "bruja",
  "brusco",
  "bruto",
  "buceo",
  "bucle",
  "bueno",
  "buey",
  "bufanda",
  "bufón",
  "búho",
  "buitre",
  "bulto",
  "burbuja",
  "burla",
  "burro",
  "buscar",
  "butaca",
  "buzón",
  "caballo",
  "cabeza",
  "cabina",
  "cabra",
  "cacao",
  "cadáver",
  "cadena",
  "caer",
  "café",
  "caída",
  "caimán",
  "caja",
  "cajón",
  "cal",
  "calamar",
  "calcio",
  "caldo",
  "calidad",
  "calle",
  "calma",
  "calor",
  "calvo",
  "cama",
  "cambio",
  "camello",
  "camino",
  "campo",
  "cáncer",
  "candil",
  "canela",
  "canguro",
  "canica",
  "canto",
  "caña",
  "cañón",
  "caoba",
  "caos",
  "capaz",
  "capitán",
  "capote",
  "captar",
  "capucha",
  "cara",
  "carbón",
  "cárcel",
  "careta",
  "carga",
  "cariño",
  "carne",
  "carpeta",
  "carro",
  "carta",
  "casa",
  "casco",
  "casero",
  "caspa",
  "castor",
  "catorce",
  "catre",
  "caudal",
  "causa",
  "cazo",
  "cebolla",
  "ceder",
  "cedro",
  "celda",
  "célebre",
  "celoso",
  "célula",
  "cemento",
  "ceniza",
  "centro",
  "cerca",
  "cerdo",
  "cereza",
  "cero",
  "cerrar",
  "certeza",
  "césped",
  "cetro",
  "chacal",
  "chaleco",
  "champú",
  "chancla",
  "chapa",
  "charla",
  "chico",
  "chiste",
  "chivo",
  "choque",
  "choza",
  "chuleta",
  "chupar",
  "ciclón",
  "ciego",
  "cielo",
  "cien",
  "cierto",
  "cifra",
  "cigarro",
  "cima",
  "cinco",
  "cine",
  "cinta",
  "ciprés",
  "circo",
  "ciruela",
  "cisne",
  "cita",
  "ciudad",
  "clamor",
  "clan",
  "claro",
  "clase",
  "clave",
  "cliente",
  "clima",
  "clínica",
  "cobre",
  "cocción",
  "cochino",
  "cocina",
  "coco",
  "código",
  "codo",
  "cofre",
  "coger",
  "cohete",
  "cojín",
  "cojo",
  "cola",
  "colcha",
  "colegio",
  "colgar",
  "colina",
  "collar",
  "colmo",
  "columna",
  "combate",
  "comer",
  "comida",
  "cómodo",
  "compra",
  "conde",
  "conejo",
  "conga",
  "conocer",
  "consejo",
  "contar",
  "copa",
  "copia",
  "corazón",
  "corbata",
  "corcho",
  "cordón",
  "corona",
  "correr",
  "coser",
  "cosmos",
  "costa",
  "cráneo",
  "cráter",
  "crear",
  "crecer",
  "creído",
  "crema",
  "cría",
  "crimen",
  "cripta",
  "crisis",
  "cromo",
  "crónica",
  "croqueta",
  "crudo",
  "cruz",
  "cuadro",
  "cuarto",
  "cuatro",
  "cubo",
  "cubrir",
  "cuchara",
  "cuello",
  "cuento",
  "cuerda",
  "cuesta",
  "cueva",
  "cuidar",
  "culebra",
  "culpa",
  "culto",
  "cumbre",
  "cumplir",
  "cuna",
  "cuneta",
  "cuota",
  "cupón",
  "cúpula",
  "curar",
  "curioso",
  "curso",
  "curva",
  "cutis",
  "dama",
  "danza",
  "dar",
  "dardo",
  "dátil",
  "deber",
  "débil",
  "década",
  "decir",
  "dedo",
  "defensa",
  "definir",
  "dejar",
  "delfín",
  "delgado",
  "delito",
  "demora",
  "denso",
  "dental",
  "deporte",
  "derecho",
  "derrota",
  "desayuno",
  "deseo",
  "desfile",
  "desnudo",
  "destino",
  "desvío",
  "detalle",
  "detener",
  "deuda",
  "día",
  "diablo",
  "diadema",
  "diamante",
  "diana",
  "diario",
  "dibujo",
  "dictar",
  "diente",
  "dieta",
  "diez",
  "difícil",
  "digno",
  "dilema",
  "diluir",
  "dinero",
  "directo",
  "dirigir",
  "disco",
  "diseño",
  "disfraz",
  "diva",
  "divino",
  "doble",
  "doce",
  "dolor",
  "domingo",
  "don",
  "donar",
  "dorado",
  "dormir",
  "dorso",
  "dos",
  "dosis",
  "dragón",
  "droga",
  "ducha",
  "duda",
  "duelo",
  "dueño",
  "dulce",
  "dúo",
  "duque",
  "durar",
  "dureza",
  "duro",
  "ébano",
  "ebrio",
  "echar",
  "eco",
  "ecuador",
  "edad",
  "edición",
  "edificio",
  "editor",
  "educar",
  "efecto",
  "eficaz",
  "eje",
  "ejemplo",
  "elefante",
  "elegir",
  "elemento",
  "elevar",
  "elipse",
  "élite",
  "elixir",
  "elogio",
  "eludir",
  "embudo",
  "emitir",
  "emoción",
  "empate",
  "empeño",
  "empleo",
  "empresa",
  "enano",
  "encargo",
  "enchufe",
  "encía",
  "enemigo",
  "enero",
  "enfado",
  "enfermo",
  "engaño",
  "enigma",
  "enlace",
  "enorme",
  "enredo",
  "ensayo",
  "enseñar",
  "entero",
  "entrar",
  "envase",
  "envío",
  "época",
  "equipo",
  "erizo",
  "escala",
  "escena",
  "escolar",
  "escribir",
  "escudo",
  "esencia",
  "esfera",
  "esfuerzo",
  "espada",
  "espejo",
  "espía",
  "esposa",
  "espuma",
  "esquí",
  "estar",
  "este",
  "estilo",
  "estufa",
  "etapa",
  "eterno",
  "ética",
  "etnia",
  "evadir",
  "evaluar",
  "evento",
  "evitar",
  "exacto",
  "examen",
  "exceso",
  "excusa",
  "exento",
  "exigir",
  "exilio",
  "existir",
  "éxito",
  "experto",
  "explicar",
  "exponer",
  "extremo",
  "fábrica",
  "fábula",
  "fachada",
  "fácil",
  "factor",
  "faena",
  "faja",
  "falda",
  "fallo",
  "falso",
  "faltar",
  "fama",
  "familia",
  "famoso",
  "faraón",
  "farmacia",
  "farol",
  "farsa",
  "fase",
  "fatiga",
  "fauna",
  "favor",
  "fax",
  "febrero",
  "fecha",
  "feliz",
  "feo",
  "feria",
  "feroz",
  "fértil",
  "fervor",
  "festín",
  "fiable",
  "fianza",
  "fiar",
  "fibra",
  "ficción",
  "ficha",
  "fideo",
  "fiebre",
  "fiel",
  "fiera",
  "fiesta",
  "figura",
  "fijar",
  "fijo",
  "fila",
  "filete",
  "filial",
  "filtro",
  "fin",
  "finca",
  "fingir",
  "finito",
  "firma",
  "flaco",
  "flauta",
  "flecha",
  "flor",
  "flota",
  "fluir",
  "flujo",
  "flúor",
  "fobia",
  "foca",
  "fogata",
  "fogón",
  "folio",
  "folleto",
  "fondo",
  "forma",
  "forro",
  "fortuna",
  "forzar",
  "fosa",
  "foto",
  "fracaso",
  "frágil",
  "franja",
  "frase",
  "fraude",
  "freír",
  "freno",
  "fresa",
  "frío",
  "frito",
  "fruta",
  "fuego",
  "fuente",
  "fuerza",
  "fuga",
  "fumar",
  "función",
  "funda",
  "furgón",
  "furia",
  "fusil",
  "fútbol",
  "futuro",
  "gacela",
  "gafas",
  "gaita",
  "gajo",
  "gala",
  "galería",
  "gallo",
  "gamba",
  "ganar",
  "gancho",
  "ganga",
  "ganso",
  "garaje",
  "garza",
  "gasolina",
  "gastar",
  "gato",
  "gavilán",
  "gemelo",
  "gemir",
  "gen",
  "género",
  "genio",
  "gente",
  "geranio",
  "gerente",
  "germen",
  "gesto",
  "gigante",
  "gimnasio",
  "girar",
  "giro",
  "glaciar",
  "globo",
  "gloria",
  "gol",
  "golfo",
  "goloso",
  "golpe",
  "goma",
  "gordo",
  "gorila",
  "gorra",
  "gota",
  "goteo",
  "gozar",
  "grada",
  "gráfico",
  "grano",
  "grasa",
  "gratis",
  "grave",
  "grieta",
  "grillo",
  "gripe",
  "gris",
  "grito",
  "grosor",
  "grúa",
  "grueso",
  "grumo",
  "grupo",
  "guante",
  "guapo",
  "guardia",
  "guerra",
  "guía",
  "guiño",
  "guion",
  "guiso",
  "guitarra",
  "gusano",
  "gustar",
  "haber",
  "hábil",
  "hablar",
  "hacer",
  "hacha",
  "hada",
  "hallar",
  "hamaca",
  "harina",
  "haz",
  "hazaña",
  "hebilla",
  "hebra",
  "hecho",
  "helado",
  "helio",
  "hembra",
  "herir",
  "hermano",
  "héroe",
  "hervir",
  "hielo",
  "hierro",
  "hígado",
  "higiene",
  "hijo",
  "himno",
  "historia",
  "hocico",
  "hogar",
  "hoguera",
  "hoja",
  "hombre",
  "hongo",
  "honor",
  "honra",
  "hora",
  "hormiga",
  "horno",
  "hostil",
  "hoyo",
  "hueco",
  "huelga",
  "huerta",
  "hueso",
  "huevo",
  "huida",
  "huir",
  "humano",
  "húmedo",
  "humilde",
  "humo",
  "hundir",
  "huracán",
  "hurto",
  "icono",
  "ideal",
  "idioma",
  "ídolo",
  "iglesia",
  "iglú",
  "igual",
  "ilegal",
  "ilusión",
  "imagen",
  "imán",
  "imitar",
  "impar",
  "imperio",
  "imponer",
  "impulso",
  "incapaz",
  "índice",
  "inerte",
  "infiel",
  "informe",
  "ingenio",
  "inicio",
  "inmenso",
  "inmune",
  "innato",
  "insecto",
  "instante",
  "interés",
  "íntimo",
  "intuir",
  "inútil",
  "invierno",
  "ira",
  "iris",
  "ironía",
  "isla",
  "islote",
  "jabalí",
  "jabón",
  "jamón",
  "jarabe",
  "jardín",
  "jarra",
  "jaula",
  "jazmín",
  "jefe",
  "jeringa",
  "jinete",
  "jornada",
  "joroba",
  "joven",
  "joya",
  "juerga",
  "jueves",
  "juez",
  "jugador",
  "jugo",
  "juguete",
  "juicio",
  "junco",
  "jungla",
  "junio",
  "juntar",
  "júpiter",
  "jurar",
  "justo",
  "juvenil",
  "juzgar",
  "kilo",
  "koala",
  "labio",
  "lacio",
  "lacra",
  "lado",
  "ladrón",
  "lagarto",
  "lágrima",
  "laguna",
  "laico",
  "lamer",
  "lámina",
  "lámpara",
  "lana",
  "lancha",
  "langosta",
  "lanza",
  "lápiz",
  "largo",
  "larva",
  "lástima",
  "lata",
  "látex",
  "latir",
  "laurel",
  "lavar",
  "lazo",
  "leal",
  "lección",
  "leche",
  "lector",
  "leer",
  "legión",
  "legumbre",
  "lejano",
  "lengua",
  "lento",
  "leña",
  "león",
  "leopardo",
  "lesión",
  "letal",
  "letra",
  "leve",
  "leyenda",
  "libertad",
  "libro",
  "licor",
  "líder",
  "lidiar",
  "lienzo",
  "liga",
  "ligero",
  "lima",
  "límite",
  "limón",
  "limpio",
  "lince",
  "lindo",
  "línea",
  "lingote",
  "lino",
  "linterna",
  "líquido",
  "liso",
  "lista",
  "litera",
  "litio",
  "litro",
  "llaga",
  "llama",
  "llanto",
  "llave",
  "llegar",
  "llenar",
  "llevar",
  "llorar",
  "llover",
  "lluvia",
  "lobo",
  "loción",
  "loco",
  "locura",
  "lógica",
  "logro",
  "lombriz",
  "lomo",
  "lonja",
  "lote",
  "lucha",
  "lucir",
  "lugar",
  "lujo",
  "luna",
  "lunes",
  "lupa",
  "lustro",
  "luto",
  "luz",
  "maceta",
  "macho",
  "madera",
  "madre",
  "maduro",
  "maestro",
  "mafia",
  "magia",
  "mago",
  "maíz",
  "maldad",
  "maleta",
  "malla",
  "malo",
  "mamá",
  "mambo",
  "mamut",
  "manco",
  "mando",
  "manejar",
  "manga",
  "maniquí",
  "manjar",
  "mano",
  "manso",
  "manta",
  "mañana",
  "mapa",
  "máquina",
  "mar",
  "marco",
  "marea",
  "marfil",
  "margen",
  "marido",
  "mármol",
  "marrón",
  "martes",
  "marzo",
  "masa",
  "máscara",
  "masivo",
  "matar",
  "materia",
  "matiz",
  "matriz",
  "máximo",
  "mayor",
  "mazorca",
  "mecha",
  "medalla",
  "medio",
  "médula",
  "mejilla",
  "mejor",
  "melena",
  "melón",
  "memoria",
  "menor",
  "mensaje",
  "mente",
  "menú",
  "mercado",
  "merengue",
  "mérito",
  "mes",
  "mesón",
  "meta",
  "meter",
  "método",
  "metro",
  "mezcla",
  "miedo",
  "miel",
  "miembro",
  "miga",
  "mil",
  "milagro",
  "militar",
  "millón",
  "mimo",
  "mina",
  "minero",
  "mínimo",
  "minuto",
  "miope",
  "mirar",
  "misa",
  "miseria",
  "misil",
  "mismo",
  "mitad",
  "mito",
  "mochila",
  "moción",
  "moda",
  "modelo",
  "moho",
  "mojar",
  "molde",
  "moler",
  "molino",
  "momento",
  "momia",
  "monarca",
  "moneda",
  "monja",
  "monto",
  "moño",
  "morada",
  "morder",
  "moreno",
  "morir",
  "morro",
  "morsa",
  "mortal",
  "mosca",
  "mostrar",
  "motivo",
  "mover",
  "móvil",
  "mozo",
  "mucho",
  "mudar",
  "mueble",
  "muela",
  "muerte",
  "muestra",
  "mugre",
  "mujer",
  "mula",
  "muleta",
  "multa",
  "mundo",
  "muñeca",
  "mural",
  "muro",
  "músculo",
  "museo",
  "musgo",
  "música",
  "muslo",
  "nácar",
  "nación",
  "nadar",
  "naipe",
  "naranja",
  "nariz",
  "narrar",
  "nasal",
  "natal",
  "nativo",
  "natural",
  "náusea",
  "naval",
  "nave",
  "navidad",
  "necio",
  "néctar",
  "negar",
  "negocio",
  "negro",
  "neón",
  "nervio",
  "neto",
  "neutro",
  "nevar",
  "nevera",
  "nicho",
  "nido",
  "niebla",
  "nieto",
  "niñez",
  "niño",
  "nítido",
  "nivel",
  "nobleza",
  "noche",
  "nómina",
  "noria",
  "norma",
  "norte",
  "nota",
  "noticia",
  "novato",
  "novela",
  "novio",
  "nube",
  "nuca",
  "núcleo",
  "nudillo",
  "nudo",
  "nuera",
  "nueve",
  "nuez",
  "nulo",
  "número",
  "nutria",
  "oasis",
  "obeso",
  "obispo",
  "objeto",
  "obra",
  "obrero",
  "observar",
  "obtener",
  "obvio",
  "oca",
  "ocaso",
  "océano",
  "ochenta",
  "ocho",
  "ocio",
  "ocre",
  "octavo",
  "octubre",
  "oculto",
  "ocupar",
  "ocurrir",
  "odiar",
  "odio",
  "odisea",
  "oeste",
  "ofensa",
  "oferta",
  "oficio",
  "ofrecer",
  "ogro",
  "oído",
  "oír",
  "ojo",
  "ola",
  "oleada",
  "olfato",
  "olivo",
  "olla",
  "olmo",
  "olor",
  "olvido",
  "ombligo",
  "onda",
  "onza",
  "opaco",
  "opción",
  "ópera",
  "opinar",
  "oponer",
  "optar",
  "óptica",
  "opuesto",
  "oración",
  "orador",
  "oral",
  "órbita",
  "orca",
  "orden",
  "oreja",
  "órgano",
  "orgía",
  "orgullo",
  "oriente",
  "origen",
  "orilla",
  "oro",
  "orquesta",
  "oruga",
  "osadía",
  "oscuro",
  "osezno",
  "oso",
  "ostra",
  "otoño",
  "otro",
  "oveja",
  "óvulo",
  "óxido",
  "oxígeno",
  "oyente",
  "ozono",
  "pacto",
  "padre",
  "paella",
  "página",
  "pago",
  "país",
  "pájaro",
  "palabra",
  "palco",
  "paleta",
  "pálido",
  "palma",
  "paloma",
  "palpar",
  "pan",
  "panal",
  "pánico",
  "pantera",
  "pañuelo",
  "papá",
  "papel",
  "papilla",
  "paquete",
  "parar",
  "parcela",
  "pared",
  "parir",
  "paro",
  "párpado",
  "parque",
  "párrafo",
  "parte",
  "pasar",
  "paseo",
  "pasión",
  "paso",
  "pasta",
  "pata",
  "patio",
  "patria",
  "pausa",
  "pauta",
  "pavo",
  "payaso",
  "peatón",
  "pecado",
  "pecera",
  "pecho",
  "pedal",
  "pedir",
  "pegar",
  "peine",
  "pelar",
  "peldaño",
  "pelea",
  "peligro",
  "pellejo",
  "pelo",
  "peluca",
  "pena",
  "pensar",
  "peñón",
  "peón",
  "peor",
  "pepino",
  "pequeño",
  "pera",
  "percha",
  "perder",
  "pereza",
  "perfil",
  "perico",
  "perla",
  "permiso",
  "perro",
  "persona",
  "pesa",
  "pesca",
  "pésimo",
  "pestaña",
  "pétalo",
  "petróleo",
  "pez",
  "pezuña",
  "picar",
  "pichón",
  "pie",
  "piedra",
  "pierna",
  "pieza",
  "pijama",
  "pilar",
  "piloto",
  "pimienta",
  "pino",
  "pintor",
  "pinza",
  "piña",
  "piojo",
  "pipa",
  "pirata",
  "pisar",
  "piscina",
  "piso",
  "pista",
  "pitón",
  "pizca",
  "placa",
  "plan",
  "plata",
  "playa",
  "plaza",
  "pleito",
  "pleno",
  "plomo",
  "pluma",
  "plural",
  "pobre",
  "poco",
  "poder",
  "podio",
  "poema",
  "poesía",
  "poeta",
  "polen",
  "policía",
  "pollo",
  "polvo",
  "pomada",
  "pomelo",
  "pomo",
  "pompa",
  "poner",
  "porción",
  "portal",
  "posada",
  "poseer",
  "posible",
  "poste",
  "potencia",
  "potro",
  "pozo",
  "prado",
  "precoz",
  "pregunta",
  "premio",
  "prensa",
  "preso",
  "previo",
  "primo",
  "príncipe",
  "prisión",
  "privar",
  "proa",
  "probar",
  "proceso",
  "producto",
  "proeza",
  "profesor",
  "programa",
  "prole",
  "promesa",
  "pronto",
  "propio",
  "próximo",
  "prueba",
  "público",
  "puchero",
  "pudor",
  "pueblo",
  "puerta",
  "puesto",
  "pulga",
  "pulir",
  "pulmón",
  "pulpo",
  "pulso",
  "puma",
  "punto",
  "puñal",
  "puño",
  "pupa",
  "pupila",
  "puré",
  "quedar",
  "queja",
  "quemar",
  "querer",
  "queso",
  "quieto",
  "química",
  "quince",
  "quitar",
  "rábano",
  "rabia",
  "rabo",
  "ración",
  "radical",
  "raíz",
  "rama",
  "rampa",
  "rancho",
  "rango",
  "rapaz",
  "rápido",
  "rapto",
  "rasgo",
  "raspa",
  "rato",
  "rayo",
  "raza",
  "razón",
  "reacción",
  "realidad",
  "rebaño",
  "rebote",
  "recaer",
  "receta",
  "rechazo",
  "recoger",
  "recreo",
  "recto",
  "recurso",
  "red",
  "redondo",
  "reducir",
  "reflejo",
  "reforma",
  "refrán",
  "refugio",
  "regalo",
  "regir",
  "regla",
  "regreso",
  "rehén",
  "reino",
  "reír",
  "reja",
  "relato",
  "relevo",
  "relieve",
  "relleno",
  "reloj",
  "remar",
  "remedio",
  "remo",
  "rencor",
  "rendir",
  "renta",
  "reparto",
  "repetir",
  "reposo",
  "reptil",
  "res",
  "rescate",
  "resina",
  "respeto",
  "resto",
  "resumen",
  "retiro",
  "retorno",
  "retrato",
  "reunir",
  "revés",
  "revista",
  "rey",
  "rezar",
  "rico",
  "riego",
  "rienda",
  "riesgo",
  "rifa",
  "rígido",
  "rigor",
  "rincón",
  "riñón",
  "río",
  "riqueza",
  "risa",
  "ritmo",
  "rito",
  "rizo",
  "roble",
  "roce",
  "rociar",
  "rodar",
  "rodeo",
  "rodilla",
  "roer",
  "rojizo",
  "rojo",
  "romero",
  "romper",
  "ron",
  "ronco",
  "ronda",
  "ropa",
  "ropero",
  "rosa",
  "rosca",
  "rostro",
  "rotar",
  "rubí",
  "rubor",
  "rudo",
  "rueda",
  "rugir",
  "ruido",
  "ruina",
  "ruleta",
  "rulo",
  "rumbo",
  "rumor",
  "ruptura",
  "ruta",
  "rutina",
  "sábado",
  "saber",
  "sabio",
  "sable",
  "sacar",
  "sagaz",
  "sagrado",
  "sala",
  "saldo",
  "salero",
  "salir",
  "salmón",
  "salón",
  "salsa",
  "salto",
  "salud",
  "salvar",
  "samba",
  "sanción",
  "sandía",
  "sanear",
  "sangre",
  "sanidad",
  "sano",
  "santo",
  "sapo",
  "saque",
  "sardina",
  "sartén",
  "sastre",
  "satán",
  "sauna",
  "saxofón",
  "sección",
  "seco",
  "secreto",
  "secta",
  "sed",
  "seguir",
  "seis",
  "sello",
  "selva",
  "semana",
  "semilla",
  "senda",
  "sensor",
  "señal",
  "señor",
  "separar",
  "sepia",
  "sequía",
  "ser",
  "serie",
  "sermón",
  "servir",
  "sesenta",
  "sesión",
  "seta",
  "setenta",
  "severo",
  "sexo",
  "sexto",
  "sidra",
  "siesta",
  "siete",
  "siglo",
  "signo",
  "sílaba",
  "silbar",
  "silencio",
  "silla",
  "símbolo",
  "simio",
  "sirena",
  "sistema",
  "sitio",
  "situar",
  "sobre",
  "socio",
  "sodio",
  "sol",
  "solapa",
  "soldado",
  "soledad",
  "sólido",
  "soltar",
  "solución",
  "sombra",
  "sondeo",
  "sonido",
  "sonoro",
  "sonrisa",
  "sopa",
  "soplar",
  "soporte",
  "sordo",
  "sorpresa",
  "sorteo",
  "sostén",
  "sótano",
  "suave",
  "subir",
  "suceso",
  "sudor",
  "suegra",
  "suelo",
  "sueño",
  "suerte",
  "sufrir",
  "sujeto",
  "sultán",
  "sumar",
  "superar",
  "suplir",
  "suponer",
  "supremo",
  "sur",
  "surco",
  "sureño",
  "surgir",
  "susto",
  "sutil",
  "tabaco",
  "tabique",
  "tabla",
  "tabú",
  "taco",
  "tacto",
  "tajo",
  "talar",
  "talco",
  "talento",
  "talla",
  "talón",
  "tamaño",
  "tambor",
  "tango",
  "tanque",
  "tapa",
  "tapete",
  "tapia",
  "tapón",
  "taquilla",
  "tarde",
  "tarea",
  "tarifa",
  "tarjeta",
  "tarot",
  "tarro",
  "tarta",
  "tatuaje",
  "tauro",
  "taza",
  "tazón",
  "teatro",
  "techo",
  "tecla",
  "técnica",
  "tejado",
  "tejer",
  "tejido",
  "tela",
  "teléfono",
  "tema",
  "temor",
  "templo",
  "tenaz",
  "tender",
  "tener",
  "tenis",
  "tenso",
  "teoría",
  "terapia",
  "terco",
  "término",
  "ternura",
  "terror",
  "tesis",
  "tesoro",
  "testigo",
  "tetera",
  "texto",
  "tez",
  "tibio",
  "tiburón",
  "tiempo",
  "tienda",
  "tierra",
  "tieso",
  "tigre",
  "tijera",
  "tilde",
  "timbre",
  "tímido",
  "timo",
  "tinta",
  "tío",
  "típico",
  "tipo",
  "tira",
  "tirón",
  "titán",
  "títere",
  "título",
  "tiza",
  "toalla",
  "tobillo",
  "tocar",
  "tocino",
  "todo",
  "toga",
  "toldo",
  "tomar",
  "tono",
  "tonto",
  "topar",
  "tope",
  "toque",
  "tórax",
  "torero",
  "tormenta",
  "torneo",
  "toro",
  "torpedo",
  "torre",
  "torso",
  "tortuga",
  "tos",
  "tosco",
  "toser",
  "tóxico",
  "trabajo",
  "tractor",
  "traer",
  "tráfico",
  "trago",
  "traje",
  "tramo",
  "trance",
  "trato",
  "trauma",
  "trazar",
  "trébol",
  "tregua",
  "treinta",
  "tren",
  "trepar",
  "tres",
  "tribu",
  "trigo",
  "tripa",
  "triste",
  "triunfo",
  "trofeo",
  "trompa",
  "tronco",
  "tropa",
  "trote",
  "trozo",
  "truco",
  "trueno",
  "trufa",
  "tubería",
  "tubo",
  "tuerto",
  "tumba",
  "tumor",
  "túnel",
  "túnica",
  "turbina",
  "turismo",
  "turno",
  "tutor",
  "ubicar",
  "úlcera",
  "umbral",
  "unidad",
  "unir",
  "universo",
  "uno",
  "untar",
  "uña",
  "urbano",
  "urbe",
  "urgente",
  "urna",
  "usar",
  "usuario",
  "útil",
  "utopía",
  "uva",
  "vaca",
  "vacío",
  "vacuna",
  "vagar",
  "vago",
  "vaina",
  "vajilla",
  "vale",
  "válido",
  "valle",
  "valor",
  "válvula",
  "vampiro",
  "vara",
  "variar",
  "varón",
  "vaso",
  "vecino",
  "vector",
  "vehículo",
  "veinte",
  "vejez",
  "vela",
  "velero",
  "veloz",
  "vena",
  "vencer",
  "venda",
  "veneno",
  "vengar",
  "venir",
  "venta",
  "venus",
  "ver",
  "verano",
  "verbo",
  "verde",
  "vereda",
  "verja",
  "verso",
  "verter",
  "vía",
  "viaje",
  "vibrar",
  "vicio",
  "víctima",
  "vida",
  "vídeo",
  "vidrio",
  "viejo",
  "viernes",
  "vigor",
  "vil",
  "villa",
  "vinagre",
  "vino",
  "viñedo",
  "violín",
  "viral",
  "virgo",
  "virtud",
  "visor",
  "víspera",
  "vista",
  "vitamina",
  "viudo",
  "vivaz",
  "vivero",
  "vivir",
  "vivo",
  "volcán",
  "volumen",
  "volver",
  "voraz",
  "votar",
  "voto",
  "voz",
  "vuelo",
  "vulgar",
  "yacer",
  "yate",
  "yegua",
  "yema",
  "yerno",
  "yeso",
  "yodo",
  "yoga",
  "yogur",
  "zafiro",
  "zanja",
  "zapato",
  "zarza",
  "zona",
  "zorro",
  "zumo",
  "zurdo"
]

},{}],164:[function(require,module,exports){
arguments[4][48][0].apply(exports,arguments)
},{"dup":48,"inherits":169,"safe-buffer":178,"stream":149,"string_decoder":150}],165:[function(require,module,exports){
arguments[4][51][0].apply(exports,arguments)
},{"cipher-base":164,"dup":51,"inherits":169,"md5.js":170,"ripemd160":177,"sha.js":181}],166:[function(require,module,exports){
arguments[4][52][0].apply(exports,arguments)
},{"dup":52,"md5.js":170}],167:[function(require,module,exports){
const crypto = require('crypto');
const algorithm = 'aes-256-ctr';

function Cryptr(secret) {
    if (!secret || typeof secret !== 'string') {
        throw new Error('Cryptr: secret must be a non-0-length string');
    }

    const key = crypto
        .createHash('sha256')
        .update(String(secret))
        .digest();

    this.encrypt = function encrypt(value) {
        if (value == null) {
            throw new Error('value must not be null or undefined');
        }

        const iv = crypto
            .randomBytes(16)
            .toString('hex')
            .slice(0, 16);
        const cipher = crypto.createCipheriv(algorithm, key, iv);
        const encrypted = cipher.update(String(value), 'utf8', 'hex') + cipher.final('hex');

        return iv + encrypted;
    };

    this.decrypt = function decrypt(value) {
        if (value == null) {
            throw new Error('value must not be null or undefined');
        }

        const stringValue = String(value);
        const iv = stringValue.slice(0, 16);
        const encrypted = stringValue.slice(16);

        const decipher = crypto.createDecipheriv(algorithm, key, iv);
        return decipher.update(encrypted, 'hex', 'utf8') + decipher.final('utf8');
    };
}

module.exports = Cryptr;

},{"crypto":55}],168:[function(require,module,exports){
arguments[4][84][0].apply(exports,arguments)
},{"dup":84,"inherits":169,"safe-buffer":178,"stream":149}],169:[function(require,module,exports){
arguments[4][99][0].apply(exports,arguments)
},{"dup":99}],170:[function(require,module,exports){
arguments[4][102][0].apply(exports,arguments)
},{"buffer":47,"dup":102,"hash-base":168,"inherits":169}],171:[function(require,module,exports){
arguments[4][111][0].apply(exports,arguments)
},{"./lib/async":172,"./lib/sync":175,"dup":111}],172:[function(require,module,exports){
arguments[4][112][0].apply(exports,arguments)
},{"./default-encoding":173,"./precondition":174,"./sync":175,"_process":117,"dup":112,"safe-buffer":178}],173:[function(require,module,exports){
arguments[4][113][0].apply(exports,arguments)
},{"_process":117,"dup":113}],174:[function(require,module,exports){
(function (Buffer){
var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs

function checkBuffer (buf, name) {
  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {
    throw new TypeError(name + ' must be a buffer or string')
  }
}

module.exports = function (password, salt, iterations, keylen) {
  checkBuffer(password, 'Password')
  checkBuffer(salt, 'Salt')

  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length')
  }
}

}).call(this,{"isBuffer":require("../../../../../.nvm/versions/node/v10.7.0/lib/node_modules/browserify/node_modules/is-buffer/index.js")})
},{"../../../../../.nvm/versions/node/v10.7.0/lib/node_modules/browserify/node_modules/is-buffer/index.js":100}],175:[function(require,module,exports){
arguments[4][115][0].apply(exports,arguments)
},{"./default-encoding":173,"./precondition":174,"create-hash/md5":166,"dup":115,"ripemd160":177,"safe-buffer":178,"sha.js":181}],176:[function(require,module,exports){
arguments[4][124][0].apply(exports,arguments)
},{"_process":117,"dup":124,"safe-buffer":178}],177:[function(require,module,exports){
arguments[4][139][0].apply(exports,arguments)
},{"buffer":47,"dup":139,"hash-base":168,"inherits":169}],178:[function(require,module,exports){
arguments[4][140][0].apply(exports,arguments)
},{"buffer":47,"dup":140}],179:[function(require,module,exports){
/*! secret-sharing.js - v1.3.0 - 2018-04-05 */
"use strict";var sjcl={cipher:{},hash:{},keyexchange:{},mode:{},misc:{},codec:{},exception:{corrupt:function(a){this.toString=function(){return"CORRUPT: "+this.message};this.message=a},invalid:function(a){this.toString=function(){return"INVALID: "+this.message};this.message=a},bug:function(a){this.toString=function(){return"BUG: "+this.message};this.message=a},notReady:function(a){this.toString=function(){return"NOT READY: "+this.message};this.message=a}}};
sjcl.cipher.aes=function(a){this.s[0][0][0]||this.O();var b,c,d,e,f=this.s[0][4],g=this.s[1];b=a.length;var h=1;if(4!==b&&6!==b&&8!==b)throw new sjcl.exception.invalid("invalid aes key size");this.b=[d=a.slice(0),e=[]];for(a=b;a<4*b+28;a++){c=d[a-1];if(0===a%b||8===b&&4===a%b)c=f[c>>>24]<<24^f[c>>16&255]<<16^f[c>>8&255]<<8^f[c&255],0===a%b&&(c=c<<8^c>>>24^h<<24,h=h<<1^283*(h>>7));d[a]=d[a-b]^c}for(b=0;a;b++,a--)c=d[b&3?a:a-4],e[b]=4>=a||4>b?c:g[0][f[c>>>24]]^g[1][f[c>>16&255]]^g[2][f[c>>8&255]]^g[3][f[c&
255]]};
sjcl.cipher.aes.prototype={encrypt:function(a){return t(this,a,0)},decrypt:function(a){return t(this,a,1)},s:[[[],[],[],[],[]],[[],[],[],[],[]]],O:function(){var a=this.s[0],b=this.s[1],c=a[4],d=b[4],e,f,g,h=[],k=[],l,n,m,p;for(e=0;0x100>e;e++)k[(h[e]=e<<1^283*(e>>7))^e]=e;for(f=g=0;!c[f];f^=l||1,g=k[g]||1)for(m=g^g<<1^g<<2^g<<3^g<<4,m=m>>8^m&255^99,c[f]=m,d[m]=f,n=h[e=h[l=h[f]]],p=0x1010101*n^0x10001*e^0x101*l^0x1010100*f,n=0x101*h[m]^0x1010100*m,e=0;4>e;e++)a[e][f]=n=n<<24^n>>>8,b[e][m]=p=p<<24^p>>>8;for(e=
0;5>e;e++)a[e]=a[e].slice(0),b[e]=b[e].slice(0)}};
function t(a,b,c){if(4!==b.length)throw new sjcl.exception.invalid("invalid aes block size");var d=a.b[c],e=b[0]^d[0],f=b[c?3:1]^d[1],g=b[2]^d[2];b=b[c?1:3]^d[3];var h,k,l,n=d.length/4-2,m,p=4,r=[0,0,0,0];h=a.s[c];a=h[0];var q=h[1],v=h[2],w=h[3],x=h[4];for(m=0;m<n;m++)h=a[e>>>24]^q[f>>16&255]^v[g>>8&255]^w[b&255]^d[p],k=a[f>>>24]^q[g>>16&255]^v[b>>8&255]^w[e&255]^d[p+1],l=a[g>>>24]^q[b>>16&255]^v[e>>8&255]^w[f&255]^d[p+2],b=a[b>>>24]^q[e>>16&255]^v[f>>8&255]^w[g&255]^d[p+3],p+=4,e=h,f=k,g=l;for(m=
0;4>m;m++)r[c?3&-m:m]=x[e>>>24]<<24^x[f>>16&255]<<16^x[g>>8&255]<<8^x[b&255]^d[p++],h=e,e=f,f=g,g=b,b=h;return r}
sjcl.bitArray={bitSlice:function(a,b,c){a=sjcl.bitArray.$(a.slice(b/32),32-(b&31)).slice(1);return void 0===c?a:sjcl.bitArray.clamp(a,c-b)},extract:function(a,b,c){var d=Math.floor(-b-c&31);return((b+c-1^b)&-32?a[b/32|0]<<32-d^a[b/32+1|0]>>>d:a[b/32|0]>>>d)&(1<<c)-1},concat:function(a,b){if(0===a.length||0===b.length)return a.concat(b);var c=a[a.length-1],d=sjcl.bitArray.getPartial(c);return 32===d?a.concat(b):sjcl.bitArray.$(b,d,c|0,a.slice(0,a.length-1))},bitLength:function(a){var b=a.length;return 0===
b?0:32*(b-1)+sjcl.bitArray.getPartial(a[b-1])},clamp:function(a,b){if(32*a.length<b)return a;a=a.slice(0,Math.ceil(b/32));var c=a.length;b=b&31;0<c&&b&&(a[c-1]=sjcl.bitArray.partial(b,a[c-1]&2147483648>>b-1,1));return a},partial:function(a,b,c){return 32===a?b:(c?b|0:b<<32-a)+0x10000000000*a},getPartial:function(a){return Math.round(a/0x10000000000)||32},equal:function(a,b){if(sjcl.bitArray.bitLength(a)!==sjcl.bitArray.bitLength(b))return!1;var c=0,d;for(d=0;d<a.length;d++)c|=a[d]^b[d];return 0===
c},$:function(a,b,c,d){var e;e=0;for(void 0===d&&(d=[]);32<=b;b-=32)d.push(c),c=0;if(0===b)return d.concat(a);for(e=0;e<a.length;e++)d.push(c|a[e]>>>b),c=a[e]<<32-b;e=a.length?a[a.length-1]:0;a=sjcl.bitArray.getPartial(e);d.push(sjcl.bitArray.partial(b+a&31,32<b+a?c:d.pop(),1));return d},i:function(a,b){return[a[0]^b[0],a[1]^b[1],a[2]^b[2],a[3]^b[3]]},byteswapM:function(a){var b,c;for(b=0;b<a.length;++b)c=a[b],a[b]=c>>>24|c>>>8&0xff00|(c&0xff00)<<8|c<<24;return a}};
sjcl.codec.utf8String={fromBits:function(a){var b="",c=sjcl.bitArray.bitLength(a),d,e;for(d=0;d<c/8;d++)0===(d&3)&&(e=a[d/4]),b+=String.fromCharCode(e>>>8>>>8>>>8),e<<=8;return decodeURIComponent(escape(b))},toBits:function(a){a=unescape(encodeURIComponent(a));var b=[],c,d=0;for(c=0;c<a.length;c++)d=d<<8|a.charCodeAt(c),3===(c&3)&&(b.push(d),d=0);c&3&&b.push(sjcl.bitArray.partial(8*(c&3),d));return b}};
sjcl.codec.hex={fromBits:function(a){var b="",c;for(c=0;c<a.length;c++)b+=((a[c]|0)+0xf00000000000).toString(16).substr(4);return b.substr(0,sjcl.bitArray.bitLength(a)/4)},toBits:function(a){var b,c=[],d;a=a.replace(/\s|0x/g,"");d=a.length;a=a+"00000000";for(b=0;b<a.length;b+=8)c.push(parseInt(a.substr(b,8),16)^0);return sjcl.bitArray.clamp(c,4*d)}};
sjcl.codec.base32={B:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",X:"0123456789ABCDEFGHIJKLMNOPQRSTUV",BITS:32,BASE:5,REMAINING:27,fromBits:function(a,b,c){var d=sjcl.codec.base32.BASE,e=sjcl.codec.base32.REMAINING,f="",g=0,h=sjcl.codec.base32.B,k=0,l=sjcl.bitArray.bitLength(a);c&&(h=sjcl.codec.base32.X);for(c=0;f.length*d<l;)f+=h.charAt((k^a[c]>>>g)>>>e),g<d?(k=a[c]<<d-g,g+=e,c++):(k<<=d,g-=d);for(;f.length&7&&!b;)f+="=";return f},toBits:function(a,b){a=a.replace(/\s|=/g,"").toUpperCase();var c=sjcl.codec.base32.BITS,
d=sjcl.codec.base32.BASE,e=sjcl.codec.base32.REMAINING,f=[],g,h=0,k=sjcl.codec.base32.B,l=0,n,m="base32";b&&(k=sjcl.codec.base32.X,m="base32hex");for(g=0;g<a.length;g++){n=k.indexOf(a.charAt(g));if(0>n){if(!b)try{return sjcl.codec.base32hex.toBits(a)}catch(p){}throw new sjcl.exception.invalid("this isn't "+m+"!");}h>e?(h-=e,f.push(l^n>>>h),l=n<<c-h):(h+=d,l^=n<<c-h)}h&56&&f.push(sjcl.bitArray.partial(h&56,l,1));return f}};
sjcl.codec.base32hex={fromBits:function(a,b){return sjcl.codec.base32.fromBits(a,b,1)},toBits:function(a){return sjcl.codec.base32.toBits(a,1)}};
sjcl.codec.base64={B:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",fromBits:function(a,b,c){var d="",e=0,f=sjcl.codec.base64.B,g=0,h=sjcl.bitArray.bitLength(a);c&&(f=f.substr(0,62)+"-_");for(c=0;6*d.length<h;)d+=f.charAt((g^a[c]>>>e)>>>26),6>e?(g=a[c]<<6-e,e+=26,c++):(g<<=6,e-=6);for(;d.length&3&&!b;)d+="=";return d},toBits:function(a,b){a=a.replace(/\s|=/g,"");var c=[],d,e=0,f=sjcl.codec.base64.B,g=0,h;b&&(f=f.substr(0,62)+"-_");for(d=0;d<a.length;d++){h=f.indexOf(a.charAt(d));
if(0>h)throw new sjcl.exception.invalid("this isn't base64!");26<e?(e-=26,c.push(g^h>>>e),g=h<<32-e):(e+=6,g^=h<<32-e)}e&56&&c.push(sjcl.bitArray.partial(e&56,g,1));return c}};sjcl.codec.base64url={fromBits:function(a){return sjcl.codec.base64.fromBits(a,1,1)},toBits:function(a){return sjcl.codec.base64.toBits(a,1)}};sjcl.hash.sha256=function(a){this.b[0]||this.O();a?(this.F=a.F.slice(0),this.A=a.A.slice(0),this.l=a.l):this.reset()};sjcl.hash.sha256.hash=function(a){return(new sjcl.hash.sha256).update(a).finalize()};
sjcl.hash.sha256.prototype={blockSize:512,reset:function(){this.F=this.Y.slice(0);this.A=[];this.l=0;return this},update:function(a){"string"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));var b,c=this.A=sjcl.bitArray.concat(this.A,a);b=this.l;a=this.l=b+sjcl.bitArray.bitLength(a);if(0x1fffffffffffff<a)throw new sjcl.exception.invalid("Cannot hash more than 2^53 - 1 bits");if("undefined"!==typeof Uint32Array){var d=new Uint32Array(c),e=0;for(b=512+b-(512+b&0x1ff);b<=a;b+=512)u(this,d.subarray(16*e,
16*(e+1))),e+=1;c.splice(0,16*e)}else for(b=512+b-(512+b&0x1ff);b<=a;b+=512)u(this,c.splice(0,16));return this},finalize:function(){var a,b=this.A,c=this.F,b=sjcl.bitArray.concat(b,[sjcl.bitArray.partial(1,1)]);for(a=b.length+2;a&15;a++)b.push(0);b.push(Math.floor(this.l/0x100000000));for(b.push(this.l|0);b.length;)u(this,b.splice(0,16));this.reset();return c},Y:[],b:[],O:function(){function a(a){return 0x100000000*(a-Math.floor(a))|0}for(var b=0,c=2,d,e;64>b;c++){e=!0;for(d=2;d*d<=c;d++)if(0===c%d){e=
!1;break}e&&(8>b&&(this.Y[b]=a(Math.pow(c,.5))),this.b[b]=a(Math.pow(c,1/3)),b++)}}};
function u(a,b){var c,d,e,f=a.F,g=a.b,h=f[0],k=f[1],l=f[2],n=f[3],m=f[4],p=f[5],r=f[6],q=f[7];for(c=0;64>c;c++)16>c?d=b[c]:(d=b[c+1&15],e=b[c+14&15],d=b[c&15]=(d>>>7^d>>>18^d>>>3^d<<25^d<<14)+(e>>>17^e>>>19^e>>>10^e<<15^e<<13)+b[c&15]+b[c+9&15]|0),d=d+q+(m>>>6^m>>>11^m>>>25^m<<26^m<<21^m<<7)+(r^m&(p^r))+g[c],q=r,r=p,p=m,m=n+d|0,n=l,l=k,k=h,h=d+(k&l^n&(k^l))+(k>>>2^k>>>13^k>>>22^k<<30^k<<19^k<<10)|0;f[0]=f[0]+h|0;f[1]=f[1]+k|0;f[2]=f[2]+l|0;f[3]=f[3]+n|0;f[4]=f[4]+m|0;f[5]=f[5]+p|0;f[6]=f[6]+r|0;f[7]=
f[7]+q|0}
sjcl.mode.ccm={name:"ccm",G:[],listenProgress:function(a){sjcl.mode.ccm.G.push(a)},unListenProgress:function(a){a=sjcl.mode.ccm.G.indexOf(a);-1<a&&sjcl.mode.ccm.G.splice(a,1)},fa:function(a){var b=sjcl.mode.ccm.G.slice(),c;for(c=0;c<b.length;c+=1)b[c](a)},encrypt:function(a,b,c,d,e){var f,g=b.slice(0),h=sjcl.bitArray,k=h.bitLength(c)/8,l=h.bitLength(g)/8;e=e||64;d=d||[];if(7>k)throw new sjcl.exception.invalid("ccm: iv must be at least 7 bytes");for(f=2;4>f&&l>>>8*f;f++);f<15-k&&(f=15-k);c=h.clamp(c,
8*(15-f));b=sjcl.mode.ccm.V(a,b,c,d,e,f);g=sjcl.mode.ccm.C(a,g,c,b,e,f);return h.concat(g.data,g.tag)},decrypt:function(a,b,c,d,e){e=e||64;d=d||[];var f=sjcl.bitArray,g=f.bitLength(c)/8,h=f.bitLength(b),k=f.clamp(b,h-e),l=f.bitSlice(b,h-e),h=(h-e)/8;if(7>g)throw new sjcl.exception.invalid("ccm: iv must be at least 7 bytes");for(b=2;4>b&&h>>>8*b;b++);b<15-g&&(b=15-g);c=f.clamp(c,8*(15-b));k=sjcl.mode.ccm.C(a,k,c,l,e,b);a=sjcl.mode.ccm.V(a,k.data,c,d,e,b);if(!f.equal(k.tag,a))throw new sjcl.exception.corrupt("ccm: tag doesn't match");
return k.data},na:function(a,b,c,d,e,f){var g=[],h=sjcl.bitArray,k=h.i;d=[h.partial(8,(b.length?64:0)|d-2<<2|f-1)];d=h.concat(d,c);d[3]|=e;d=a.encrypt(d);if(b.length)for(c=h.bitLength(b)/8,65279>=c?g=[h.partial(16,c)]:0xffffffff>=c&&(g=h.concat([h.partial(16,65534)],[c])),g=h.concat(g,b),b=0;b<g.length;b+=4)d=a.encrypt(k(d,g.slice(b,b+4).concat([0,0,0])));return d},V:function(a,b,c,d,e,f){var g=sjcl.bitArray,h=g.i;e/=8;if(e%2||4>e||16<e)throw new sjcl.exception.invalid("ccm: invalid tag length");
if(0xffffffff<d.length||0xffffffff<b.length)throw new sjcl.exception.bug("ccm: can't deal with 4GiB or more data");c=sjcl.mode.ccm.na(a,d,c,e,g.bitLength(b)/8,f);for(d=0;d<b.length;d+=4)c=a.encrypt(h(c,b.slice(d,d+4).concat([0,0,0])));return g.clamp(c,8*e)},C:function(a,b,c,d,e,f){var g,h=sjcl.bitArray;g=h.i;var k=b.length,l=h.bitLength(b),n=k/50,m=n;c=h.concat([h.partial(8,f-1)],c).concat([0,0,0]).slice(0,4);d=h.bitSlice(g(d,a.encrypt(c)),0,e);if(!k)return{tag:d,data:[]};for(g=0;g<k;g+=4)g>n&&(sjcl.mode.ccm.fa(g/
k),n+=m),c[3]++,e=a.encrypt(c),b[g]^=e[0],b[g+1]^=e[1],b[g+2]^=e[2],b[g+3]^=e[3];return{tag:d,data:h.clamp(b,l)}}};
sjcl.mode.ocb2={name:"ocb2",encrypt:function(a,b,c,d,e,f){if(128!==sjcl.bitArray.bitLength(c))throw new sjcl.exception.invalid("ocb iv must be 128 bits");var g,h=sjcl.mode.ocb2.S,k=sjcl.bitArray,l=k.i,n=[0,0,0,0];c=h(a.encrypt(c));var m,p=[];d=d||[];e=e||64;for(g=0;g+4<b.length;g+=4)m=b.slice(g,g+4),n=l(n,m),p=p.concat(l(c,a.encrypt(l(c,m)))),c=h(c);m=b.slice(g);b=k.bitLength(m);g=a.encrypt(l(c,[0,0,0,b]));m=k.clamp(l(m.concat([0,0,0]),g),b);n=l(n,l(m.concat([0,0,0]),g));n=a.encrypt(l(n,l(c,h(c))));
d.length&&(n=l(n,f?d:sjcl.mode.ocb2.pmac(a,d)));return p.concat(k.concat(m,k.clamp(n,e)))},decrypt:function(a,b,c,d,e,f){if(128!==sjcl.bitArray.bitLength(c))throw new sjcl.exception.invalid("ocb iv must be 128 bits");e=e||64;var g=sjcl.mode.ocb2.S,h=sjcl.bitArray,k=h.i,l=[0,0,0,0],n=g(a.encrypt(c)),m,p,r=sjcl.bitArray.bitLength(b)-e,q=[];d=d||[];for(c=0;c+4<r/32;c+=4)m=k(n,a.decrypt(k(n,b.slice(c,c+4)))),l=k(l,m),q=q.concat(m),n=g(n);p=r-32*c;m=a.encrypt(k(n,[0,0,0,p]));m=k(m,h.clamp(b.slice(c),p).concat([0,
0,0]));l=k(l,m);l=a.encrypt(k(l,k(n,g(n))));d.length&&(l=k(l,f?d:sjcl.mode.ocb2.pmac(a,d)));if(!h.equal(h.clamp(l,e),h.bitSlice(b,r)))throw new sjcl.exception.corrupt("ocb: tag doesn't match");return q.concat(h.clamp(m,p))},pmac:function(a,b){var c,d=sjcl.mode.ocb2.S,e=sjcl.bitArray,f=e.i,g=[0,0,0,0],h=a.encrypt([0,0,0,0]),h=f(h,d(d(h)));for(c=0;c+4<b.length;c+=4)h=d(h),g=f(g,a.encrypt(f(h,b.slice(c,c+4))));c=b.slice(c);128>e.bitLength(c)&&(h=f(h,d(h)),c=e.concat(c,[-2147483648,0,0,0]));g=f(g,c);
return a.encrypt(f(d(f(h,d(h))),g))},S:function(a){return[a[0]<<1^a[1]>>>31,a[1]<<1^a[2]>>>31,a[2]<<1^a[3]>>>31,a[3]<<1^135*(a[0]>>>31)]}};
sjcl.mode.gcm={name:"gcm",encrypt:function(a,b,c,d,e){var f=b.slice(0);b=sjcl.bitArray;d=d||[];a=sjcl.mode.gcm.C(!0,a,f,d,c,e||128);return b.concat(a.data,a.tag)},decrypt:function(a,b,c,d,e){var f=b.slice(0),g=sjcl.bitArray,h=g.bitLength(f);e=e||128;d=d||[];e<=h?(b=g.bitSlice(f,h-e),f=g.bitSlice(f,0,h-e)):(b=f,f=[]);a=sjcl.mode.gcm.C(!1,a,f,d,c,e);if(!g.equal(a.tag,b))throw new sjcl.exception.corrupt("gcm: tag doesn't match");return a.data},ka:function(a,b){var c,d,e,f,g,h=sjcl.bitArray.i;e=[0,0,
0,0];f=b.slice(0);for(c=0;128>c;c++){(d=0!==(a[Math.floor(c/32)]&1<<31-c%32))&&(e=h(e,f));g=0!==(f[3]&1);for(d=3;0<d;d--)f[d]=f[d]>>>1|(f[d-1]&1)<<31;f[0]>>>=1;g&&(f[0]^=-0x1f000000)}return e},j:function(a,b,c){var d,e=c.length;b=b.slice(0);for(d=0;d<e;d+=4)b[0]^=0xffffffff&c[d],b[1]^=0xffffffff&c[d+1],b[2]^=0xffffffff&c[d+2],b[3]^=0xffffffff&c[d+3],b=sjcl.mode.gcm.ka(b,a);return b},C:function(a,b,c,d,e,f){var g,h,k,l,n,m,p,r,q=sjcl.bitArray;m=c.length;p=q.bitLength(c);r=q.bitLength(d);h=q.bitLength(e);
g=b.encrypt([0,0,0,0]);96===h?(e=e.slice(0),e=q.concat(e,[1])):(e=sjcl.mode.gcm.j(g,[0,0,0,0],e),e=sjcl.mode.gcm.j(g,e,[0,0,Math.floor(h/0x100000000),h&0xffffffff]));h=sjcl.mode.gcm.j(g,[0,0,0,0],d);n=e.slice(0);d=h.slice(0);a||(d=sjcl.mode.gcm.j(g,h,c));for(l=0;l<m;l+=4)n[3]++,k=b.encrypt(n),c[l]^=k[0],c[l+1]^=k[1],c[l+2]^=k[2],c[l+3]^=k[3];c=q.clamp(c,p);a&&(d=sjcl.mode.gcm.j(g,h,c));a=[Math.floor(r/0x100000000),r&0xffffffff,Math.floor(p/0x100000000),p&0xffffffff];d=sjcl.mode.gcm.j(g,d,a);k=b.encrypt(e);
d[0]^=k[0];d[1]^=k[1];d[2]^=k[2];d[3]^=k[3];return{tag:q.bitSlice(d,0,f),data:c}}};sjcl.misc.hmac=function(a,b){this.W=b=b||sjcl.hash.sha256;var c=[[],[]],d,e=b.prototype.blockSize/32;this.w=[new b,new b];a.length>e&&(a=b.hash(a));for(d=0;d<e;d++)c[0][d]=a[d]^909522486,c[1][d]=a[d]^1549556828;this.w[0].update(c[0]);this.w[1].update(c[1]);this.R=new b(this.w[0])};
sjcl.misc.hmac.prototype.encrypt=sjcl.misc.hmac.prototype.mac=function(a){if(this.aa)throw new sjcl.exception.invalid("encrypt on already updated hmac called!");this.update(a);return this.digest(a)};sjcl.misc.hmac.prototype.reset=function(){this.R=new this.W(this.w[0]);this.aa=!1};sjcl.misc.hmac.prototype.update=function(a){this.aa=!0;this.R.update(a)};sjcl.misc.hmac.prototype.digest=function(){var a=this.R.finalize(),a=(new this.W(this.w[1])).update(a).finalize();this.reset();return a};
sjcl.misc.pbkdf2=function(a,b,c,d,e){c=c||1E4;if(0>d||0>c)throw new sjcl.exception.invalid("invalid params to pbkdf2");"string"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));"string"===typeof b&&(b=sjcl.codec.utf8String.toBits(b));e=e||sjcl.misc.hmac;a=new e(a);var f,g,h,k,l=[],n=sjcl.bitArray;for(k=1;32*l.length<(d||1);k++){e=f=a.encrypt(n.concat(b,[k]));for(g=1;g<c;g++)for(f=a.encrypt(f),h=0;h<f.length;h++)e[h]^=f[h];l=l.concat(e)}d&&(l=n.clamp(l,d));return l};
sjcl.prng=function(a){this.c=[new sjcl.hash.sha256];this.m=[0];this.P=0;this.H={};this.N=0;this.U={};this.Z=this.f=this.o=this.ha=0;this.b=[0,0,0,0,0,0,0,0];this.h=[0,0,0,0];this.L=void 0;this.M=a;this.D=!1;this.K={progress:{},seeded:{}};this.u=this.ga=0;this.I=1;this.J=2;this.ca=0x10000;this.T=[0,48,64,96,128,192,0x100,384,512,768,1024];this.da=3E4;this.ba=80};
sjcl.prng.prototype={randomWords:function(a,b){var c=[],d;d=this.isReady(b);var e;if(d===this.u)throw new sjcl.exception.notReady("generator isn't seeded");if(d&this.J){d=!(d&this.I);e=[];var f=0,g;this.Z=e[0]=(new Date).valueOf()+this.da;for(g=0;16>g;g++)e.push(0x100000000*Math.random()|0);for(g=0;g<this.c.length&&(e=e.concat(this.c[g].finalize()),f+=this.m[g],this.m[g]=0,d||!(this.P&1<<g));g++);this.P>=1<<this.c.length&&(this.c.push(new sjcl.hash.sha256),this.m.push(0));this.f-=f;f>this.o&&(this.o=
f);this.P++;this.b=sjcl.hash.sha256.hash(this.b.concat(e));this.L=new sjcl.cipher.aes(this.b);for(d=0;4>d&&(this.h[d]=this.h[d]+1|0,!this.h[d]);d++);}for(d=0;d<a;d+=4)0===(d+1)%this.ca&&y(this),e=z(this),c.push(e[0],e[1],e[2],e[3]);y(this);return c.slice(0,a)},setDefaultParanoia:function(a,b){if(0===a&&"Setting paranoia=0 will ruin your security; use it only for testing"!==b)throw new sjcl.exception.invalid("Setting paranoia=0 will ruin your security; use it only for testing");this.M=a},addEntropy:function(a,
b,c){c=c||"user";var d,e,f=(new Date).valueOf(),g=this.H[c],h=this.isReady(),k=0;d=this.U[c];void 0===d&&(d=this.U[c]=this.ha++);void 0===g&&(g=this.H[c]=0);this.H[c]=(this.H[c]+1)%this.c.length;switch(typeof a){case "number":void 0===b&&(b=1);this.c[g].update([d,this.N++,1,b,f,1,a|0]);break;case "object":c=Object.prototype.toString.call(a);if("[object Uint32Array]"===c){e=[];for(c=0;c<a.length;c++)e.push(a[c]);a=e}else for("[object Array]"!==c&&(k=1),c=0;c<a.length&&!k;c++)"number"!==typeof a[c]&&
(k=1);if(!k){if(void 0===b)for(c=b=0;c<a.length;c++)for(e=a[c];0<e;)b++,e=e>>>1;this.c[g].update([d,this.N++,2,b,f,a.length].concat(a))}break;case "string":void 0===b&&(b=a.length);this.c[g].update([d,this.N++,3,b,f,a.length]);this.c[g].update(a);break;default:k=1}if(k)throw new sjcl.exception.bug("random: addEntropy only supports number, array of numbers or string");this.m[g]+=b;this.f+=b;h===this.u&&(this.isReady()!==this.u&&A("seeded",Math.max(this.o,this.f)),A("progress",this.getProgress()))},
isReady:function(a){a=this.T[void 0!==a?a:this.M];return this.o&&this.o>=a?this.m[0]>this.ba&&(new Date).valueOf()>this.Z?this.J|this.I:this.I:this.f>=a?this.J|this.u:this.u},getProgress:function(a){a=this.T[a?a:this.M];return this.o>=a?1:this.f>a?1:this.f/a},startCollectors:function(){if(!this.D){this.a={loadTimeCollector:B(this,this.ma),mouseCollector:B(this,this.oa),keyboardCollector:B(this,this.la),accelerometerCollector:B(this,this.ea),touchCollector:B(this,this.qa)};if(window.addEventListener)window.addEventListener("load",
this.a.loadTimeCollector,!1),window.addEventListener("mousemove",this.a.mouseCollector,!1),window.addEventListener("keypress",this.a.keyboardCollector,!1),window.addEventListener("devicemotion",this.a.accelerometerCollector,!1),window.addEventListener("touchmove",this.a.touchCollector,!1);else if(document.attachEvent)document.attachEvent("onload",this.a.loadTimeCollector),document.attachEvent("onmousemove",this.a.mouseCollector),document.attachEvent("keypress",this.a.keyboardCollector);else throw new sjcl.exception.bug("can't attach event");
this.D=!0}},stopCollectors:function(){this.D&&(window.removeEventListener?(window.removeEventListener("load",this.a.loadTimeCollector,!1),window.removeEventListener("mousemove",this.a.mouseCollector,!1),window.removeEventListener("keypress",this.a.keyboardCollector,!1),window.removeEventListener("devicemotion",this.a.accelerometerCollector,!1),window.removeEventListener("touchmove",this.a.touchCollector,!1)):document.detachEvent&&(document.detachEvent("onload",this.a.loadTimeCollector),document.detachEvent("onmousemove",
this.a.mouseCollector),document.detachEvent("keypress",this.a.keyboardCollector)),this.D=!1)},addEventListener:function(a,b){this.K[a][this.ga++]=b},removeEventListener:function(a,b){var c,d,e=this.K[a],f=[];for(d in e)e.hasOwnProperty(d)&&e[d]===b&&f.push(d);for(c=0;c<f.length;c++)d=f[c],delete e[d]},la:function(){C(this,1)},oa:function(a){var b,c;try{b=a.x||a.clientX||a.offsetX||0,c=a.y||a.clientY||a.offsetY||0}catch(d){c=b=0}0!=b&&0!=c&&this.addEntropy([b,c],2,"mouse");C(this,0)},qa:function(a){a=
a.touches[0]||a.changedTouches[0];this.addEntropy([a.pageX||a.clientX,a.pageY||a.clientY],1,"touch");C(this,0)},ma:function(){C(this,2)},ea:function(a){a=a.accelerationIncludingGravity.x||a.accelerationIncludingGravity.y||a.accelerationIncludingGravity.z;if(window.orientation){var b=window.orientation;"number"===typeof b&&this.addEntropy(b,1,"accelerometer")}a&&this.addEntropy(a,2,"accelerometer");C(this,0)}};
function A(a,b){var c,d=sjcl.random.K[a],e=[];for(c in d)d.hasOwnProperty(c)&&e.push(d[c]);for(c=0;c<e.length;c++)e[c](b)}function C(a,b){"undefined"!==typeof window&&window.performance&&"function"===typeof window.performance.now?a.addEntropy(window.performance.now(),b,"loadtime"):a.addEntropy((new Date).valueOf(),b,"loadtime")}function y(a){a.b=z(a).concat(z(a));a.L=new sjcl.cipher.aes(a.b)}function z(a){for(var b=0;4>b&&(a.h[b]=a.h[b]+1|0,!a.h[b]);b++);return a.L.encrypt(a.h)}
function B(a,b){return function(){b.apply(a,arguments)}}sjcl.random=new sjcl.prng(6);
a:try{var D,E,F,G;if(G="undefined"!==typeof module&&module.exports){var H;try{H=require("crypto")}catch(a){H=null}G=E=H}if(G&&E.randomBytes)D=E.randomBytes(128),D=new Uint32Array((new Uint8Array(D)).buffer),sjcl.random.addEntropy(D,1024,"crypto['randomBytes']");else if("undefined"!==typeof window&&"undefined"!==typeof Uint32Array){F=new Uint32Array(32);if(window.crypto&&window.crypto.getRandomValues)window.crypto.getRandomValues(F);else if(window.msCrypto&&window.msCrypto.getRandomValues)window.msCrypto.getRandomValues(F);
else break a;sjcl.random.addEntropy(F,1024,"crypto['getRandomValues']")}}catch(a){"undefined"!==typeof window&&window.console&&(console.log("There was an error collecting entropy from the browser:"),console.log(a))}
sjcl.json={defaults:{v:1,iter:1E4,ks:128,ts:64,mode:"ccm",adata:"",cipher:"aes"},ja:function(a,b,c,d){c=c||{};d=d||{};var e=sjcl.json,f=e.g({iv:sjcl.random.randomWords(4,0)},e.defaults),g;e.g(f,c);c=f.adata;"string"===typeof f.salt&&(f.salt=sjcl.codec.base64.toBits(f.salt));"string"===typeof f.iv&&(f.iv=sjcl.codec.base64.toBits(f.iv));if(!sjcl.mode[f.mode]||!sjcl.cipher[f.cipher]||"string"===typeof a&&100>=f.iter||64!==f.ts&&96!==f.ts&&128!==f.ts||128!==f.ks&&192!==f.ks&&0x100!==f.ks||2>f.iv.length||
4<f.iv.length)throw new sjcl.exception.invalid("json encrypt: invalid parameters");"string"===typeof a?(g=sjcl.misc.cachedPbkdf2(a,f),a=g.key.slice(0,f.ks/32),f.salt=g.salt):sjcl.ecc&&a instanceof sjcl.ecc.elGamal.publicKey&&(g=a.kem(),f.kemtag=g.tag,a=g.key.slice(0,f.ks/32));"string"===typeof b&&(b=sjcl.codec.utf8String.toBits(b));"string"===typeof c&&(f.adata=c=sjcl.codec.utf8String.toBits(c));g=new sjcl.cipher[f.cipher](a);e.g(d,f);d.key=a;f.ct="ccm"===f.mode&&sjcl.arrayBuffer&&sjcl.arrayBuffer.ccm&&
b instanceof ArrayBuffer?sjcl.arrayBuffer.ccm.encrypt(g,b,f.iv,c,f.ts):sjcl.mode[f.mode].encrypt(g,b,f.iv,c,f.ts);return f},encrypt:function(a,b,c,d){var e=sjcl.json,f=e.ja.apply(e,arguments);return e.encode(f)},ia:function(a,b,c,d){c=c||{};d=d||{};var e=sjcl.json;b=e.g(e.g(e.g({},e.defaults),b),c,!0);var f,g;f=b.adata;"string"===typeof b.salt&&(b.salt=sjcl.codec.base64.toBits(b.salt));"string"===typeof b.iv&&(b.iv=sjcl.codec.base64.toBits(b.iv));if(!sjcl.mode[b.mode]||!sjcl.cipher[b.cipher]||"string"===
typeof a&&100>=b.iter||64!==b.ts&&96!==b.ts&&128!==b.ts||128!==b.ks&&192!==b.ks&&0x100!==b.ks||!b.iv||2>b.iv.length||4<b.iv.length)throw new sjcl.exception.invalid("json decrypt: invalid parameters");"string"===typeof a?(g=sjcl.misc.cachedPbkdf2(a,b),a=g.key.slice(0,b.ks/32),b.salt=g.salt):sjcl.ecc&&a instanceof sjcl.ecc.elGamal.secretKey&&(a=a.unkem(sjcl.codec.base64.toBits(b.kemtag)).slice(0,b.ks/32));"string"===typeof f&&(f=sjcl.codec.utf8String.toBits(f));g=new sjcl.cipher[b.cipher](a);f="ccm"===
b.mode&&sjcl.arrayBuffer&&sjcl.arrayBuffer.ccm&&b.ct instanceof ArrayBuffer?sjcl.arrayBuffer.ccm.decrypt(g,b.ct,b.iv,b.tag,f,b.ts):sjcl.mode[b.mode].decrypt(g,b.ct,b.iv,f,b.ts);e.g(d,b);d.key=a;return 1===c.raw?f:sjcl.codec.utf8String.fromBits(f)},decrypt:function(a,b,c,d){var e=sjcl.json;return e.ia(a,e.decode(b),c,d)},encode:function(a){var b,c="{",d="";for(b in a)if(a.hasOwnProperty(b)){if(!b.match(/^[a-z0-9]+$/i))throw new sjcl.exception.invalid("json encode: invalid property name");c+=d+'"'+
b+'":';d=",";switch(typeof a[b]){case "number":case "boolean":c+=a[b];break;case "string":c+='"'+escape(a[b])+'"';break;case "object":c+='"'+sjcl.codec.base64.fromBits(a[b],0)+'"';break;default:throw new sjcl.exception.bug("json encode: unsupported type");}}return c+"}"},decode:function(a){a=a.replace(/\s/g,"");if(!a.match(/^\{.*\}$/))throw new sjcl.exception.invalid("json decode: this isn't json!");a=a.replace(/^\{|\}$/g,"").split(/,/);var b={},c,d;for(c=0;c<a.length;c++){if(!(d=a[c].match(/^\s*(?:(["']?)([a-z][a-z0-9]*)\1)\s*:\s*(?:(-?\d+)|"([a-z0-9+\/%*_.@=\-]*)"|(true|false))$/i)))throw new sjcl.exception.invalid("json decode: this isn't json!");
null!=d[3]?b[d[2]]=parseInt(d[3],10):null!=d[4]?b[d[2]]=d[2].match(/^(ct|adata|salt|iv)$/)?sjcl.codec.base64.toBits(d[4]):unescape(d[4]):null!=d[5]&&(b[d[2]]="true"===d[5])}return b},g:function(a,b,c){void 0===a&&(a={});if(void 0===b)return a;for(var d in b)if(b.hasOwnProperty(d)){if(c&&void 0!==a[d]&&a[d]!==b[d])throw new sjcl.exception.invalid("required parameter overridden");a[d]=b[d]}return a},sa:function(a,b){var c={},d;for(d in a)a.hasOwnProperty(d)&&a[d]!==b[d]&&(c[d]=a[d]);return c},ra:function(a,
b){var c={},d;for(d=0;d<b.length;d++)void 0!==a[b[d]]&&(c[b[d]]=a[b[d]]);return c}};sjcl.encrypt=sjcl.json.encrypt;sjcl.decrypt=sjcl.json.decrypt;sjcl.misc.pa={};sjcl.misc.cachedPbkdf2=function(a,b){var c=sjcl.misc.pa,d;b=b||{};d=b.iter||1E3;c=c[a]=c[a]||{};d=c[d]=c[d]||{firstSalt:b.salt&&b.salt.length?b.salt.slice(0):sjcl.random.randomWords(2,0)};c=void 0===b.salt?d.firstSalt:b.salt;d[c]=d[c]||sjcl.misc.pbkdf2(a,c,b.iter);return{key:d[c].slice(0),salt:c.slice(0)}};
"undefined"!==typeof module&&module.exports&&(module.exports=sjcl);"function"===typeof define&&define([],function(){return sjcl});
;
// @preserve author Alexander Stetsyuk
// @preserve author Glenn Rempe <glenn@rempe.us>
// @preserve author Camilo Alexander Rodriguez Cuaran <camilo.rodriguez@virtualcapitalofamerica.com>
// @license MIT

/* global define, sjcl */

// UMD (Universal Module Definition)
// Uses Node, AMD or browser globals to create a module. This module creates
// a global even when AMD is used. This is useful if you have some scripts
// that are loaded by an AMD loader, but they still want access to globals.
// See : https://github.com/umdjs/umd
// See : https://github.com/umdjs/umd/blob/master/returnExportsGlobal.js
//
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define([], function () {
      return (root.secrets = factory())
    })
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory(require('crypto'))
  } else {
    // Browser globals (root is window)
    root.secrets = factory(root.crypto)
  }
}(this, function (crypto) {
  'use strict'

  var defaults,
    config,
    preGenPadding,
    runCSPRNGTest,
    sjclParanoia,
    CSPRNGTypes

  function reset () {
    defaults = {
      bits: 8, // default number of bits
      radix: 16, // work with HEX by default
      minBits: 3,
      maxBits: 20, // this permits 1,048,575 shares, though going this high is NOT recommended in JS!
      bytesPerChar: 2,
      maxBytesPerChar: 6, // Math.pow(256,7) > Math.pow(2,53)

      // Primitive polynomials (in decimal form) for Galois Fields GF(2^n), for 2 <= n <= 30
      // The index of each term in the array corresponds to the n for that polynomial
      // i.e. to get the polynomial for n=16, use primitivePolynomials[16]
      primitivePolynomials: [null, null, 1, 3, 3, 5, 3, 3, 29, 17, 9, 5, 83, 27, 43, 3, 45, 9, 39, 39, 9, 5, 3, 33, 27, 9, 71, 39, 9, 5, 83]
    }
    config = {}
    preGenPadding = new Array(1024).join('0') // Pre-generate a string of 1024 0's for use by padLeft().
    runCSPRNGTest = true
    sjclParanoia = 10

    // WARNING : Never use 'testRandom' except for testing.
    CSPRNGTypes = ['nodeCryptoRandomBytes', 'browserCryptoGetRandomValues', 'browserSJCLRandom', 'testRandom']
  }

  function isSetRNG () {
    if (config && config.rng && typeof config.rng === 'function') {
      return true
    }

    return false
  }

  // Pads a string `str` with zeros on the left so that its length is a multiple of `bits`
  function padLeft (str, multipleOfBits) {
    var missing

    if (multipleOfBits === 0 || multipleOfBits === 1) {
      return str
    }

    if (multipleOfBits && multipleOfBits > 1024) {
      throw new Error('Padding must be multiples of no larger than 1024 bits.')
    }

    multipleOfBits = multipleOfBits || config.bits

    if (str) {
      missing = str.length % multipleOfBits
    }

    if (missing) {
      return (preGenPadding + str).slice(-(multipleOfBits - missing + str.length))
    }

    return str
  }

  function hex2bin (str) {
    var bin = ''
    var num = null
    var i = 0

    for (i = str.length - 1; i >= 0; i--) {
      num = parseInt(str[i], 16)

      if (isNaN(num)) {
        throw new Error('Invalid hex character.')
      }

      bin = padLeft(num.toString(2), 4) + bin
    }
    return bin
  }

  function bin2hex (str) {
    var hex = ''
    var num = null
    var i = 0

    str = padLeft(str, 4)

    for (i = str.length; i >= 4; i -= 4) {
      num = parseInt(str.slice(i - 4, i), 2)
      if (isNaN(num)) {
        throw new Error('Invalid binary character.')
      }
      hex = num.toString(16) + hex
    }

    return hex
  }

  // Browser supports crypto.getRandomValues()
  function hasCryptoGetRandomValues () {
    if (crypto &&
      typeof crypto === 'object' &&
      (typeof crypto.getRandomValues === 'function' || typeof crypto.getRandomValues === 'object') &&
      (typeof Uint32Array === 'function' || typeof Uint32Array === 'object')) {
      return true
    }

    return false
  }

  // Node.js support for crypto.randomBytes()
  function hasCryptoRandomBytes () {
    if (typeof crypto === 'object' &&
      typeof crypto.randomBytes === 'function') {
      return true
    }

    return false
  }

  // Stanford Javascript Crypto Library Support
  function hasSJCL () {
    if (sjcl) {
      if (typeof sjcl === 'object' &&
        typeof sjcl.random === 'object') {
        return true
      }
    }

    return false
  }

  // Returns a pseudo-random number generator of the form function(bits){}
  // which should output a random string of 1's and 0's of length `bits`.
  // `type` (Optional) : A string representing the CSPRNG that you want to
  // force to be loaded, overriding feature detection. Can be one of:
  //    'nodeCryptoRandomBytes'
  //    'browserCryptoGetRandomValues'
  //    'browserSJCLRandom'
  //
  function getRNG (type) {
    function construct (bits, arr, radix, size) {
      var i = 0
      var len
      var str = ''
      var parsedInt

      if (arr) {
        len = arr.length - 1
      }

      while (i < len || (str.length < bits)) {
        // convert any negative nums to positive with Math.abs()
        parsedInt = Math.abs(parseInt(arr[i], radix))
        str = str + padLeft(parsedInt.toString(2), size)
        i++
      }

      str = str.substr(-bits)

      // return null so this result can be re-processed if the result is all 0's.
      if ((str.match(/0/g) || []).length === str.length) {
        return null
      }

      return str
    }

    // Node.js : crypto.randomBytes()
    // Note : Node.js and crypto.randomBytes() uses the OpenSSL RAND_bytes() function for its CSPRNG.
    //        Node.js will need to have been compiled with OpenSSL for this to work.
    // See : https://github.com/joyent/node/blob/d8baf8a2a4481940bfed0196308ae6189ca18eee/src/node_crypto.cc#L4696
    // See : https://www.openssl.org/docs/crypto/rand.html
    function nodeCryptoRandomBytes (bits) {
      var buf
      var bytes
      var radix
      var size
      var str = null

      radix = 16
      size = 4
      bytes = Math.ceil(bits / 8)

      while (str === null) {
        buf = crypto.randomBytes(bytes)
        str = construct(bits, buf.toString('hex'), radix, size)
      }

      return str
    }

    // Browser : crypto.getRandomValues()
    // See : https://dvcs.w3.org/hg/webcrypto-api/raw-file/tip/spec/Overview.html#dfn-Crypto
    // See : https://developer.mozilla.org/en-US/docs/Web/API/RandomSource/getRandomValues
    // Supported Browsers : http://caniuse.com/#search=crypto.getRandomValues
    function browserCryptoGetRandomValues (bits) {
      var elems
      var radix
      var size
      var str = null

      radix = 10
      size = 32
      elems = Math.ceil(bits / 32)
      while (str === null) {
        str = construct(bits, crypto.getRandomValues(new Uint32Array(elems)), radix, size)
      }

      return str
    }

    // Browser SJCL : If the Stanford Javascript Crypto Library (SJCL) is loaded in the browser
    // then use it as a fallback CSPRNG when crypto.getRandomValues() is not available.
    // It may require some time and mouse movements to be fully seeded. Uses a modified version
    // of the Fortuna RNG.
    // See : https://bitwiseshiftleft.github.io/sjcl/
    function browserSJCLRandom (bits) {
      var elems
      var radix
      var size
      var str = null

      radix = 10
      size = 32
      elems = Math.ceil(bits / 32)

      if (sjcl.random.isReady(sjclParanoia)) {
        str = construct(bits, sjcl.random.randomWords(elems, sjclParanoia), radix, size)
      } else {
        throw new Error('SJCL isn\'t finished seeding the RNG yet.')
      }

      return str
    }

    // /////////////////////////////////////////////////////////////
    // WARNING : DO NOT USE. For testing purposes only.
    // /////////////////////////////////////////////////////////////
    // This function will return repeatable non-random test bits. Can be used
    // for testing only. Node.js does not return proper random bytes
    // when run within a PhantomJS container.
    function testRandom (bits) {
      var elems = Math.ceil(bits / 32)
      var int = 123456789
      var radix = 10
      var size = 32
      var str = null
      var arr = new Uint32Array(elems)

      // Fill every element of the Uint32Array with the same int.
      for (var i = 0; i < arr.length; i++) {
        arr[i] = int
      }

      while (str === null) {
        str = construct(bits, arr, radix, size)
      }

      return str
    }

    // Return a random generator function for browsers that support HTML5
    // crypto.getRandomValues(), Node.js compiled with OpenSSL support.
    // or the Stanford Javascript Crypto Library Fortuna RNG.
    // WARNING : NEVER use testRandom outside of a testing context. Totally non-random!
    if (type && type === 'testRandom') {
      config.typeCSPRNG = type
      return testRandom
    } else if (type && type === 'nodeCryptoRandomBytes') {
      config.typeCSPRNG = type
      return nodeCryptoRandomBytes
    } else if (type && type === 'browserCryptoGetRandomValues') {
      config.typeCSPRNG = type
      return browserCryptoGetRandomValues
    } else if (type && type === 'browserSJCLRandom') {
      runCSPRNGTest = false
      config.typeCSPRNG = type
      return browserSJCLRandom
    } else if (hasCryptoRandomBytes()) {
      config.typeCSPRNG = 'nodeCryptoRandomBytes'
      return nodeCryptoRandomBytes
    } else if (hasCryptoGetRandomValues()) {
      config.typeCSPRNG = 'browserCryptoGetRandomValues'
      return browserCryptoGetRandomValues
    } else if (hasSJCL()) {
      runCSPRNGTest = false
      config.typeCSPRNG = 'browserSJCLRandom'
      return browserSJCLRandom
    }
  }

  // Splits a number string `bits`-length segments, after first
  // optionally zero-padding it to a length that is a multiple of `padLength.
  // Returns array of integers (each less than 2^bits-1), with each element
  // representing a `bits`-length segment of the input string from right to left,
  // i.e. parts[0] represents the right-most `bits`-length segment of the input string.
  function splitNumStringToIntArray (str, padLength) {
    var parts = []
    var i

    if (padLength) {
      str = padLeft(str, padLength)
    }

    for (i = str.length; i > config.bits; i -= config.bits) {
      parts.push(parseInt(str.slice(i - config.bits, i), 2))
    }

    parts.push(parseInt(str.slice(0, i), 2))

    return parts
  }

  // Polynomial evaluation at `x` using Horner's Method
  // NOTE: fx=fx * x + coeff[i] ->  exp(log(fx) + log(x)) + coeff[i],
  //       so if fx===0, just set fx to coeff[i] because
  //       using the exp/log form will result in incorrect value
  function horner (x, coeffs) {
    var logx = config.logs[x]
    var fx = 0
    var i

    for (i = coeffs.length - 1; i >= 0; i--) {
      if (fx !== 0) {
        fx = config.exps[(logx + config.logs[fx]) % config.maxShares] ^ coeffs[i]
      } else {
        fx = coeffs[i]
      }
    }

    return fx
  }

  // Evaluate the Lagrange interpolation polynomial at x = `at`
  // using x and y Arrays that are of the same length, with
  // corresponding elements constituting points on the polynomial.
  function lagrange (at, x, y) {
    var sum = 0
    var len
    var product
    var i
    var j

    for (i = 0, len = x.length; i < len; i++) {
      if (y[i]) {
        product = config.logs[y[i]]

        for (j = 0; j < len; j++) {
          if (i !== j) {
            if (at === x[j]) { // happens when computing a share that is in the list of shares used to compute it
              product = -1 // fix for a zero product term, after which the sum should be sum^0 = sum, not sum^1
              break
            }
            product = (product + config.logs[at ^ x[j]] - config.logs[x[i] ^ x[j]] + config.maxShares) % config.maxShares // to make sure it's not negative
          }
        }

        // though exps[-1] === undefined and undefined ^ anything = anything in
        // chrome, this behavior may not hold everywhere, so do the check
        sum = product === -1 ? sum : sum ^ config.exps[product]
      }
    }
    return sum
  }

  // This is the basic polynomial generation and evaluation function
  // for a `config.bits`-length secret (NOT an arbitrary length)
  // Note: no error-checking at this stage! If `secret` is NOT
  // a NUMBER less than 2^bits-1, the output will be incorrect!
  function getShares (secret, numShares, threshold) {
    var shares = []
    var coeffs = [secret]
    var i
    var len

    for (i = 1; i < threshold; i++) {
      coeffs[i] = parseInt(config.rng(config.bits), 2)
    }

    for (i = 1, len = numShares + 1; i < len; i++) {
      shares[i - 1] = {
        x: i,
        y: horner(i, coeffs)
      }
    }

    return shares
  }

  function constructPublicShareString (bits, id, data) {
    var bitsBase36,
      idHex,
      idMax,
      idPaddingLen,
      newShareString

    id = parseInt(id, config.radix)
    bits = parseInt(bits, 10) || config.bits
    bitsBase36 = bits.toString(36).toUpperCase()
    idMax = Math.pow(2, bits) - 1
    idPaddingLen = idMax.toString(config.radix).length
    idHex = padLeft(id.toString(config.radix), idPaddingLen)

    if (typeof id !== 'number' || id % 1 !== 0 || id < 1 || id > idMax) {
      throw new Error('Share id must be an integer between 1 and ' + idMax + ', inclusive.')
    }

    newShareString = bitsBase36 + idHex + data

    return newShareString
  }

  // EXPORTED FUNCTIONS
  // //////////////////

  var secrets = {

    init: function (bits, rngType) {
      var logs = []
      var exps = []
      var x = 1
      var primitive
      var i

      // reset all config back to initial state
      reset()

      if (bits && (typeof bits !== 'number' || bits % 1 !== 0 || bits < defaults.minBits || bits > defaults.maxBits)) {
        throw new Error('Number of bits must be an integer between ' + defaults.minBits + ' and ' + defaults.maxBits + ', inclusive.')
      }

      if (rngType && CSPRNGTypes.indexOf(rngType) === -1) {
        throw new Error('Invalid RNG type argument : \'' + rngType + '\'')
      }

      config.radix = defaults.radix
      config.bits = bits || defaults.bits
      config.size = Math.pow(2, config.bits)
      config.maxShares = config.size - 1

      // Construct the exp and log tables for multiplication.
      primitive = defaults.primitivePolynomials[config.bits]

      for (i = 0; i < config.size; i++) {
        exps[i] = x
        logs[x] = i
        x = x << 1 // Left shift assignment
        if (x >= config.size) {
          x = x ^ primitive // Bitwise XOR assignment
          x = x & config.maxShares // Bitwise AND assignment
        }
      }

      config.logs = logs
      config.exps = exps

      if (rngType) {
        this.setRNG(rngType)
      }

      if (!isSetRNG()) {
        this.setRNG()
      }

      // Setup SJCL and start collecting entropy from mouse movements
      if (hasSJCL() && config.typeCSPRNG === 'browserSJCLRandom') {
        sjcl.random = new sjcl.prng()

        // In a Browser
        if (hasCryptoGetRandomValues()) {
          // Collects entropy from browser mouse movement
          // which obviously won't work in Node.js.
          sjcl.random.startCollectors()
        }

        // see SJCL with browser or Node.js RNG if available.
        this.seedRNG()
      }

      if (!isSetRNG() || !config.bits || !config.size || !config.maxShares || !config.logs || !config.exps || config.logs.length !== config.size || config.exps.length !== config.size) {
        throw new Error('Initialization failed.')
      }
    },

    // Pass in additional secure entropy, and an estimate of the bits of entropy
    // provided, and a source name, and it will be used to seed the SJCL PRNG. This is
    // useful since SJCL may take a while to be seeded since it depends on mouse
    // movement and this can kickstart the generator almost immediately. SJCL will
    // also continue to collect entropy from mouse movements after seeding.
    //
    // e.g. from random data sources like:
    // https://api.random.org/json-rpc/1/
    // https://entropy.ubuntu.com/?challenge=123
    // https://qrng.anu.edu.au/API/api-demo.php
    //
    // See `examples/example_js_global.html` for sample usage with an
    // external source of entropy.
    seedRNG: function (data, estimatedEntropy, source) {
      var bytes
      var rand

      estimatedEntropy = parseInt(estimatedEntropy, 10)
      source = source || 'seedRNG'

      // Seed with browser RNG
      if (hasSJCL() && hasCryptoGetRandomValues()) {
        bytes = new Uint32Array(256)
        rand = crypto.getRandomValues(bytes)
        // console.log(rand)
        sjcl.random.addEntropy(rand, 2048, 'cryptoGetRandomValues')
      }

      // See with Node.js RNG (Async)
      if (hasSJCL() && hasCryptoRandomBytes()) {
        crypto.randomBytes(256, function (ex, buf) {
          if (ex) { throw ex }
          // console.log('Have %d bytes of random data containing %s', buf.length, buf.toString('hex'))
          sjcl.random.addEntropy(buf.toString('hex'), 2048, 'cryptoRandomBytes')
        })
      }

      if (hasSJCL() && data && estimatedEntropy && source && config.typeCSPRNG === 'browserSJCLRandom') {
        sjcl.random.addEntropy(data, estimatedEntropy, source)
      }
    },

    // Evaluates the Lagrange interpolation polynomial at x=`at` for
    // individual config.bits-length segments of each share in the `shares`
    // Array. Each share is expressed in base `inputRadix`. The output
    // is expressed in base `outputRadix'.
    combine: function (shares, at) {
      var i
      var j
      var len
      var len2
      var result = ''
      var setBits
      var share
      var splitShare
      var x = []
      var y = []

      at = at || 0

      for (i = 0, len = shares.length; i < len; i++) {
        share = this.extractShareComponents(shares[i])

        // All shares must have the same bits settings.
        if (setBits === undefined) {
          setBits = share.bits
        } else if (share.bits !== setBits) {
          throw new Error('Mismatched shares: Different bit settings.')
        }

        // Reset everything to the bit settings of the shares.
        if (config.bits !== setBits) {
          this.init(setBits)
        }

        // Proceed if this share.id is not already in the Array 'x' and
        // then split each share's hex data into an Array of Integers,
        // then 'rotate' those arrays where the first element of each row is converted to
        // its own array, the second element of each to its own Array, and so on for all of the rest.
        // Essentially zipping all of the shares together.
        //
        // e.g.
        //   [ 193, 186, 29, 150, 5, 120, 44, 46, 49, 59, 6, 1, 102, 98, 177, 196 ]
        //   [ 53, 105, 139, 49, 187, 240, 91, 92, 98, 118, 12, 2, 204, 196, 127, 149 ]
        //   [ 146, 211, 249, 167, 209, 136, 118, 114, 83, 77, 10, 3, 170, 166, 206, 81 ]
        //
        // becomes:
        //
        // [ [ 193, 53, 146 ],
        //   [ 186, 105, 211 ],
        //   [ 29, 139, 249 ],
        //   [ 150, 49, 167 ],
        //   [ 5, 187, 209 ],
        //   [ 120, 240, 136 ],
        //   [ 44, 91, 118 ],
        //   [ 46, 92, 114 ],
        //   [ 49, 98, 83 ],
        //   [ 59, 118, 77 ],
        //   [ 6, 12, 10 ],
        //   [ 1, 2, 3 ],
        //   [ 102, 204, 170 ],
        //   [ 98, 196, 166 ],
        //   [ 177, 127, 206 ],
        //   [ 196, 149, 81 ] ]
        //
        if (x.indexOf(share.id) === -1) {
          x.push(share.id)
          splitShare = splitNumStringToIntArray(hex2bin(share.data))
          for (j = 0, len2 = splitShare.length; j < len2; j++) {
            y[j] = y[j] || []
            y[j][x.length - 1] = splitShare[j]
          }
        }
      }

      // Extract the secret from the 'rotated' share data and return a
      // string of Binary digits which represent the secret directly. or in the
      // case of a newShare() return the binary string representing just that
      // new share.
      for (i = 0, len = y.length; i < len; i++) {
        result = padLeft(lagrange(at, x, y[i]).toString(2)) + result
      }

      // If 'at' is non-zero combine() was called from newShare(). In this
      // case return the result (the new share data) directly.
      //
      // Otherwise find the first '1' which was added in the share() function as a padding marker
      // and return only the data after the padding and the marker. Convert this Binary string
      // to hex, which represents the final secret result (which can be converted from hex back
      // to the original string in user space using `hex2str()`).
      return bin2hex(at >= 1 ? result : result.slice(result.indexOf('1') + 1))
    },

    getConfig: function () {
      var obj = {}
      obj.radix = config.radix
      obj.bits = config.bits
      obj.maxShares = config.maxShares
      obj.hasCSPRNG = isSetRNG()
      obj.typeCSPRNG = config.typeCSPRNG
      return obj
    },

    // Given a public share, extract the bits (Integer), share ID (Integer), and share data (Hex)
    // and return an Object containing those components.
    extractShareComponents: function (share) {
      var bits
      var id
      var idLen
      var max
      var obj = {}
      var regexStr
      var shareComponents

      // Extract the first char which represents the bits in Base 36
      bits = parseInt(share.substr(0, 1), 36)

      if (bits && (typeof bits !== 'number' || bits % 1 !== 0 || bits < defaults.minBits || bits > defaults.maxBits)) {
        throw new Error('Invalid share : Number of bits must be an integer between ' + defaults.minBits + ' and ' + defaults.maxBits + ', inclusive.')
      }

      // calc the max shares allowed for given bits
      max = Math.pow(2, bits) - 1

      // Determine the ID length which is variable and based on the bit count.
      idLen = (Math.pow(2, bits) - 1).toString(config.radix).length

      // Extract all the parts now that the segment sizes are known.
      regexStr = '^([a-kA-K3-9]{1})([a-fA-F0-9]{' + idLen + '})([a-fA-F0-9]+)$'
      shareComponents = new RegExp(regexStr).exec(share)

      // The ID is a Hex number and needs to be converted to an Integer
      if (shareComponents) {
        id = parseInt(shareComponents[2], config.radix)
      }

      if (typeof id !== 'number' || id % 1 !== 0 || id < 1 || id > max) {
        throw new Error('Invalid share : Share id must be an integer between 1 and ' + config.maxShares + ', inclusive.')
      }

      if (shareComponents && shareComponents[3]) {
        obj.bits = bits
        obj.id = id
        obj.data = shareComponents[3]
        return obj
      }

      throw new Error('The share data provided is invalid : ' + share)
    },

    // Set the PRNG to use. If no RNG function is supplied, pick a default using getRNG()
    setRNG: function (rng) {
      var errPrefix = 'Random number generator is invalid '
      var errSuffix = ' Supply an CSPRNG of the form function(bits){} that returns a string containing \'bits\' number of random 1\'s and 0\'s.'

      if (rng && typeof rng === 'string' && CSPRNGTypes.indexOf(rng) === -1) {
        throw new Error('Invalid RNG type argument : \'' + rng + '\'')
      }

      // If RNG was not specified at all,
      // try to pick one appropriate for this env.
      if (!rng) {
        rng = getRNG()
      }

      // If `rng` is a string, try to forcibly
      // set the RNG to the type specified.
      if (rng && typeof rng === 'string') {
        rng = getRNG(rng)
      }
      if (runCSPRNGTest) {
        if (rng && typeof rng !== 'function') {
          throw new Error(errPrefix + '(Not a function).' + errSuffix)
        }
        if (rng && typeof rng(config.bits) !== 'string') {
          throw new Error(errPrefix + '(Output is not a string).' + errSuffix)
        }
        if (rng && !parseInt(rng(config.bits), 2)) {
          throw new Error(errPrefix + '(Binary string output not parseable to an Integer).' + errSuffix)
        }
        if (rng && rng(config.bits).length > config.bits) {
          throw new Error(errPrefix + '(Output length is greater than config.bits).' + errSuffix)
        }
        if (rng && rng(config.bits).length < config.bits) {
          throw new Error(errPrefix + '(Output length is less than config.bits).' + errSuffix)
        }
      }

      config.rng = rng

      return true
    },

    // Converts a given UTF16 character string to the HEX representation.
    // Each character of the input string is represented by
    // `bytesPerChar` bytes in the output string which defaults to 2.
    str2hex: function (str, bytesPerChar) {
      var hexChars
      var max
      var out = ''
      var neededBytes
      var num
      var i
      var len

      if (typeof str !== 'string') {
        throw new Error('Input must be a character string.')
      }

      if (!bytesPerChar) {
        bytesPerChar = defaults.bytesPerChar
      }

      if (typeof bytesPerChar !== 'number' || bytesPerChar < 1 || bytesPerChar > defaults.maxBytesPerChar || bytesPerChar % 1 !== 0) {
        throw new Error('Bytes per character must be an integer between 1 and ' + defaults.maxBytesPerChar + ', inclusive.')
      }

      hexChars = 2 * bytesPerChar
      max = Math.pow(16, hexChars) - 1

      for (i = 0, len = str.length; i < len; i++) {
        num = str[i].charCodeAt()

        if (isNaN(num)) {
          throw new Error('Invalid character: ' + str[i])
        }

        if (num > max) {
          neededBytes = Math.ceil(Math.log(num + 1) / Math.log(256))
          throw new Error('Invalid character code (' + num + '). Maximum allowable is 256^bytes-1 (' + max + '). To convert this character, use at least ' + neededBytes + ' bytes.')
        }

        out = padLeft(num.toString(16), hexChars) + out
      }
      return out
    },

    // Converts a given HEX number string to a UTF16 character string.
    hex2str: function (str, bytesPerChar) {
      var hexChars
      var out = ''
      var i
      var len

      if (typeof str !== 'string') {
        throw new Error('Input must be a hexadecimal string.')
      }
      bytesPerChar = bytesPerChar || defaults.bytesPerChar

      if (typeof bytesPerChar !== 'number' || bytesPerChar % 1 !== 0 || bytesPerChar < 1 || bytesPerChar > defaults.maxBytesPerChar) {
        throw new Error('Bytes per character must be an integer between 1 and ' + defaults.maxBytesPerChar + ', inclusive.')
      }

      hexChars = 2 * bytesPerChar

      str = padLeft(str, hexChars)

      for (i = 0, len = str.length; i < len; i += hexChars) {
        out = String.fromCharCode(parseInt(str.slice(i, i + hexChars), 16)) + out
      }

      return out
    },

    // Generates a random bits-length number string using the PRNG
    random: function (bits) {
      if (typeof bits !== 'number' || bits % 1 !== 0 || bits < 2 || bits > 65536) {
        throw new Error('Number of bits must be an Integer between 1 and 65536.')
      }

      if (config.typeCSPRNG === 'browserSJCLRandom' && sjcl.random.isReady(sjclParanoia) < 1) {
        throw new Error('SJCL isn\'t finished seeding the RNG yet. Needs new entropy added or more mouse movement.')
      }

      return bin2hex(config.rng(bits))
    },

    // Divides a `secret` number String str expressed in radix `inputRadix` (optional, default 16)
    // into `numShares` shares, each expressed in radix `outputRadix` (optional, default to `inputRadix`),
    // requiring `threshold` number of shares to reconstruct the secret.
    // Optionally, zero-pads the secret to a length that is a multiple of padLength before sharing.
    share: function (secret, numShares, threshold, padLength) {
      var neededBits
      var subShares
      var x = new Array(numShares)
      var y = new Array(numShares)
      var i
      var j
      var len

      // Security:
      // For additional security, pad in multiples of 128 bits by default.
      // A small trade-off in larger share size to help prevent leakage of information
      // about small-ish secrets and increase the difficulty of attacking them.
      padLength = padLength || 128

      if (typeof secret !== 'string') {
        throw new Error('Secret must be a string.')
      }

      if (typeof numShares !== 'number' || numShares % 1 !== 0 || numShares < 2) {
        throw new Error('Number of shares must be an integer between 2 and 2^bits-1 (' + config.maxShares + '), inclusive.')
      }

      if (numShares > config.maxShares) {
        neededBits = Math.ceil(Math.log(numShares + 1) / Math.LN2)
        throw new Error('Number of shares must be an integer between 2 and 2^bits-1 (' + config.maxShares + '), inclusive. To create ' + numShares + ' shares, use at least ' + neededBits + ' bits.')
      }

      if (typeof threshold !== 'number' || threshold % 1 !== 0 || threshold < 2) {
        throw new Error('Threshold number of shares must be an integer between 2 and 2^bits-1 (' + config.maxShares + '), inclusive.')
      }

      if (threshold > config.maxShares) {
        neededBits = Math.ceil(Math.log(threshold + 1) / Math.LN2)
        throw new Error('Threshold number of shares must be an integer between 2 and 2^bits-1 (' + config.maxShares + '), inclusive.  To use a threshold of ' + threshold + ', use at least ' + neededBits + ' bits.')
      }

      if (threshold > numShares) {
        throw new Error('Threshold number of shares was ' + threshold + ' but must be less than or equal to the ' + numShares + ' shares specified as the total to generate.')
      }

      if (typeof padLength !== 'number' || padLength % 1 !== 0 || padLength < 0 || padLength > 1024) {
        throw new Error('Zero-pad length must be an integer between 0 and 1024 inclusive.')
      }

      secret = '1' + hex2bin(secret) // append a 1 as a marker so that we can preserve the correct number of leading zeros in our secret
      secret = splitNumStringToIntArray(secret, padLength)

      for (i = 0, len = secret.length; i < len; i++) {
        subShares = getShares(secret[i], numShares, threshold)
        for (j = 0; j < numShares; j++) {
          x[j] = x[j] || subShares[j].x.toString(config.radix)
          y[j] = padLeft(subShares[j].y.toString(2)) + (y[j] || '')
        }
      }

      for (i = 0; i < numShares; i++) {
        x[i] = constructPublicShareString(config.bits, x[i], bin2hex(y[i]))
      }

      return x
    },

    // Generate a new share with id `id` (a number between 1 and 2^bits-1)
    // `id` can be a Number or a String in the default radix (16)
    newShare: function (id, shares) {
      var share

      if (id && typeof id === 'string') {
        id = parseInt(id, config.radix)
      }

      if (id && shares && shares[0]) {
        share = this.extractShareComponents(shares[0])
        return constructPublicShareString(share.bits, id, this.combine(shares, id))
      }

      throw new Error('Invalid \'id\' or \'shares\' Array argument to newShare().')
    },

    /* test-code */
    // export private functions so they can be unit tested directly.
    _reset: reset,
    _padLeft: padLeft,
    _hex2bin: hex2bin,
    _bin2hex: bin2hex,
    _hasCryptoGetRandomValues: hasCryptoGetRandomValues,
    _hasCryptoRandomBytes: hasCryptoRandomBytes,
    _hasSJCL: hasSJCL,
    _getRNG: getRNG,
    _isSetRNG: isSetRNG,
    _splitNumStringToIntArray: splitNumStringToIntArray,
    _horner: horner,
    _lagrange: lagrange,
    _getShares: getShares,
    _constructPublicShareString: constructPublicShareString
    /* end-test-code */

  }

  // Always initialize secrets with default settings.
  secrets.init()

  return secrets
}))

},{"crypto":55}],180:[function(require,module,exports){
arguments[4][141][0].apply(exports,arguments)
},{"dup":141,"safe-buffer":178}],181:[function(require,module,exports){
arguments[4][142][0].apply(exports,arguments)
},{"./sha":182,"./sha1":183,"./sha224":184,"./sha256":185,"./sha384":186,"./sha512":187,"dup":142}],182:[function(require,module,exports){
arguments[4][143][0].apply(exports,arguments)
},{"./hash":180,"dup":143,"inherits":169,"safe-buffer":178}],183:[function(require,module,exports){
arguments[4][144][0].apply(exports,arguments)
},{"./hash":180,"dup":144,"inherits":169,"safe-buffer":178}],184:[function(require,module,exports){
arguments[4][145][0].apply(exports,arguments)
},{"./hash":180,"./sha256":185,"dup":145,"inherits":169,"safe-buffer":178}],185:[function(require,module,exports){
arguments[4][146][0].apply(exports,arguments)
},{"./hash":180,"dup":146,"inherits":169,"safe-buffer":178}],186:[function(require,module,exports){
arguments[4][147][0].apply(exports,arguments)
},{"./hash":180,"./sha512":187,"dup":147,"inherits":169,"safe-buffer":178}],187:[function(require,module,exports){
arguments[4][148][0].apply(exports,arguments)
},{"./hash":180,"dup":148,"inherits":169,"safe-buffer":178}],188:[function(require,module,exports){
(function (root) {
   "use strict";

/***** unorm.js *****/

/*
 * UnicodeNormalizer 1.0.0
 * Copyright (c) 2008 Matsuza
 * Dual licensed under the MIT (MIT-LICENSE.txt) and GPL (GPL-LICENSE.txt) licenses.
 * $Date: 2008-06-05 16:44:17 +0200 (Thu, 05 Jun 2008) $
 * $Rev: 13309 $
 */

   var DEFAULT_FEATURE = [null, 0, {}];
   var CACHE_THRESHOLD = 10;
   var SBase = 0xAC00, LBase = 0x1100, VBase = 0x1161, TBase = 0x11A7, LCount = 19, VCount = 21, TCount = 28;
   var NCount = VCount * TCount; // 588
   var SCount = LCount * NCount; // 11172

   var UChar = function(cp, feature){
      this.codepoint = cp;
      this.feature = feature;
   };

   // Strategies
   var cache = {};
   var cacheCounter = [];
   for (var i = 0; i <= 0xFF; ++i){
      cacheCounter[i] = 0;
   }

   function fromCache(next, cp, needFeature){
      var ret = cache[cp];
      if(!ret){
         ret = next(cp, needFeature);
         if(!!ret.feature && ++cacheCounter[(cp >> 8) & 0xFF] > CACHE_THRESHOLD){
            cache[cp] = ret;
         }
      }
      return ret;
   }

   function fromData(next, cp, needFeature){
      var hash = cp & 0xFF00;
      var dunit = UChar.udata[hash] || {};
      var f = dunit[cp];
      return f ? new UChar(cp, f) : new UChar(cp, DEFAULT_FEATURE);
   }
   function fromCpOnly(next, cp, needFeature){
      return !!needFeature ? next(cp, needFeature) : new UChar(cp, null);
   }
   function fromRuleBasedJamo(next, cp, needFeature){
      var j;
      if(cp < LBase || (LBase + LCount <= cp && cp < SBase) || (SBase + SCount < cp)){
         return next(cp, needFeature);
      }
      if(LBase <= cp && cp < LBase + LCount){
         var c = {};
         var base = (cp - LBase) * VCount;
         for (j = 0; j < VCount; ++j){
            c[VBase + j] = SBase + TCount * (j + base);
         }
         return new UChar(cp, [,,c]);
      }

      var SIndex = cp - SBase;
      var TIndex = SIndex % TCount;
      var feature = [];
      if(TIndex !== 0){
         feature[0] = [SBase + SIndex - TIndex, TBase + TIndex];
      } else {
         feature[0] = [LBase + Math.floor(SIndex / NCount), VBase + Math.floor((SIndex % NCount) / TCount)];
         feature[2] = {};
         for (j = 1; j < TCount; ++j){
            feature[2][TBase + j] = cp + j;
         }
      }
      return new UChar(cp, feature);
   }
   function fromCpFilter(next, cp, needFeature){
      return cp < 60 || 13311 < cp && cp < 42607 ? new UChar(cp, DEFAULT_FEATURE) : next(cp, needFeature);
   }

   var strategies = [fromCpFilter, fromCache, fromCpOnly, fromRuleBasedJamo, fromData];

   UChar.fromCharCode = strategies.reduceRight(function (next, strategy) {
      return function (cp, needFeature) {
         return strategy(next, cp, needFeature);
      };
   }, null);

   UChar.isHighSurrogate = function(cp){
      return cp >= 0xD800 && cp <= 0xDBFF;
   };
   UChar.isLowSurrogate = function(cp){
      return cp >= 0xDC00 && cp <= 0xDFFF;
   };

   UChar.prototype.prepFeature = function(){
      if(!this.feature){
         this.feature = UChar.fromCharCode(this.codepoint, true).feature;
      }
   };

   UChar.prototype.toString = function(){
      if(this.codepoint < 0x10000){
         return String.fromCharCode(this.codepoint);
      } else {
         var x = this.codepoint - 0x10000;
         return String.fromCharCode(Math.floor(x / 0x400) + 0xD800, x % 0x400 + 0xDC00);
      }
   };

   UChar.prototype.getDecomp = function(){
      this.prepFeature();
      return this.feature[0] || null;
   };

   UChar.prototype.isCompatibility = function(){
      this.prepFeature();
      return !!this.feature[1] && (this.feature[1] & (1 << 8));
   };
   UChar.prototype.isExclude = function(){
      this.prepFeature();
      return !!this.feature[1] && (this.feature[1] & (1 << 9));
   };
   UChar.prototype.getCanonicalClass = function(){
      this.prepFeature();
      return !!this.feature[1] ? (this.feature[1] & 0xff) : 0;
   };
   UChar.prototype.getComposite = function(following){
      this.prepFeature();
      if(!this.feature[2]){
         return null;
      }
      var cp = this.feature[2][following.codepoint];
      return cp ? UChar.fromCharCode(cp) : null;
   };

   var UCharIterator = function(str){
      this.str = str;
      this.cursor = 0;
   };
   UCharIterator.prototype.next = function(){
      if(!!this.str && this.cursor < this.str.length){
         var cp = this.str.charCodeAt(this.cursor++);
         var d;
         if(UChar.isHighSurrogate(cp) && this.cursor < this.str.length && UChar.isLowSurrogate((d = this.str.charCodeAt(this.cursor)))){
            cp = (cp - 0xD800) * 0x400 + (d -0xDC00) + 0x10000;
            ++this.cursor;
         }
         return UChar.fromCharCode(cp);
      } else {
         this.str = null;
         return null;
      }
   };

   var RecursDecompIterator = function(it, cano){
      this.it = it;
      this.canonical = cano;
      this.resBuf = [];
   };

   RecursDecompIterator.prototype.next = function(){
      function recursiveDecomp(cano, uchar){
         var decomp = uchar.getDecomp();
         if(!!decomp && !(cano && uchar.isCompatibility())){
            var ret = [];
            for(var i = 0; i < decomp.length; ++i){
               var a = recursiveDecomp(cano, UChar.fromCharCode(decomp[i]));
                ret = ret.concat(a);
            }
            return ret;
         } else {
            return [uchar];
         }
      }
      if(this.resBuf.length === 0){
         var uchar = this.it.next();
         if(!uchar){
            return null;
         }
         this.resBuf = recursiveDecomp(this.canonical, uchar);
      }
      return this.resBuf.shift();
   };

   var DecompIterator = function(it){
      this.it = it;
      this.resBuf = [];
   };

   DecompIterator.prototype.next = function(){
      var cc;
      if(this.resBuf.length === 0){
         do{
            var uchar = this.it.next();
            if(!uchar){
               break;
            }
            cc = uchar.getCanonicalClass();
            var inspt = this.resBuf.length;
            if(cc !== 0){
               for(; inspt > 0; --inspt){
                  var uchar2 = this.resBuf[inspt - 1];
                  var cc2 = uchar2.getCanonicalClass();
                  if(cc2 <= cc){
                     break;
                  }
               }
            }
            this.resBuf.splice(inspt, 0, uchar);
         } while(cc !== 0);
      }
      return this.resBuf.shift();
   };

   var CompIterator = function(it){
      this.it = it;
      this.procBuf = [];
      this.resBuf = [];
      this.lastClass = null;
   };

   CompIterator.prototype.next = function(){
      while(this.resBuf.length === 0){
         var uchar = this.it.next();
         if(!uchar){
            this.resBuf = this.procBuf;
            this.procBuf = [];
            break;
         }
         if(this.procBuf.length === 0){
            this.lastClass = uchar.getCanonicalClass();
            this.procBuf.push(uchar);
         } else {
            var starter = this.procBuf[0];
            var composite = starter.getComposite(uchar);
            var cc = uchar.getCanonicalClass();
            if(!!composite && (this.lastClass < cc || this.lastClass === 0)){
               this.procBuf[0] = composite;
            } else {
               if(cc === 0){
                  this.resBuf = this.procBuf;
                  this.procBuf = [];
               }
               this.lastClass = cc;
               this.procBuf.push(uchar);
            }
         }
      }
      return this.resBuf.shift();
   };

   var createIterator = function(mode, str){
      switch(mode){
         case "NFD":
            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true));
         case "NFKD":
            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false));
         case "NFC":
            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true)));
         case "NFKC":
            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false)));
      }
      throw mode + " is invalid";
   };
   var normalize = function(mode, str){
      var it = createIterator(mode, str);
      var ret = "";
      var uchar;
      while(!!(uchar = it.next())){
         ret += uchar.toString();
      }
      return ret;
   };

   /* API functions */
   function nfd(str){
      return normalize("NFD", str);
   }

   function nfkd(str){
      return normalize("NFKD", str);
   }

   function nfc(str){
      return normalize("NFC", str);
   }

   function nfkc(str){
      return normalize("NFKC", str);
   }

/* Unicode data */
UChar.udata={
0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},
256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},
512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},
768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8000,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},
1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},
1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},
1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},
1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},
2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},
2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},
2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},
2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},
3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},
3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},
3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},
3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},
4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},
4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},
4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},
4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},
5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},
5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},
5632:{71231:[,9],71350:[,9],71351:[,7]},
5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},
6144:{6313:[,228]},
6400:{6457:[,222],6458:[,230],6459:[,220]},
6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},
6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},
7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},
7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},
7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},
7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8000,768]],8003:[[8001,768]],8004:[[8000,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},
8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},
8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},
8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},
8960:{9001:[[12296]],9002:[[12297]]},
9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},
10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},
11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},
11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},
11776:{11935:[[27597],256],12019:[[40863],256]},
12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[30000],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},
12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},
12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},
12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},
13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},
27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},
27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},
42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},
42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},
43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},
43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},
43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},
43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},
48128:{113822:[,1]},
53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},
53760:{119362:[,230],119363:[,230],119364:[,230]},
54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},
54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},
54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},
55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},
59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},
60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},
61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},
61952:{},
63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23000]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},
63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149000]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32000]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},
64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[40000]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},
64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},
64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},
64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},
65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},
65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}

};

   /***** Module to export */
   var unorm = {
      nfc: nfc,
      nfd: nfd,
      nfkc: nfkc,
      nfkd: nfkd
   };

   /*globals module:true,define:true*/

   // CommonJS
   if (typeof module === "object") {
      module.exports = unorm;

   // AMD
   } else if (typeof define === "function" && define.amd) {
      define("unorm", function () {
         return unorm;
      });

   // Global
   } else {
      root.unorm = unorm;
   }

   /***** Export as shim for String::normalize method *****/
   /*
      http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#november_8_2013_draft_rev_21

      21.1.3.12 String.prototype.normalize(form="NFC")
      When the normalize method is called with one argument form, the following steps are taken:

      1. Let O be CheckObjectCoercible(this value).
      2. Let S be ToString(O).
      3. ReturnIfAbrupt(S).
      4. If form is not provided or undefined let form be "NFC".
      5. Let f be ToString(form).
      6. ReturnIfAbrupt(f).
      7. If f is not one of "NFC", "NFD", "NFKC", or "NFKD", then throw a RangeError Exception.
      8. Let ns be the String value is the result of normalizing S into the normalization form named by f as specified in Unicode Standard Annex #15, UnicodeNormalizatoin Forms.
      9. Return ns.

      The length property of the normalize method is 0.

      *NOTE* The normalize function is intentionally generic; it does not require that its this value be a String object. Therefore it can be transferred to other kinds of objects for use as a method.
   */
    unorm.shimApplied = false;

   if (!String.prototype.normalize) {
      String.prototype.normalize = function(form) {
         var str = "" + this;
         form =  form === undefined ? "NFC" : form;

         if (form === "NFC") {
            return unorm.nfc(str);
         } else if (form === "NFD") {
            return unorm.nfd(str);
         } else if (form === "NFKC") {
            return unorm.nfkc(str);
         } else if (form === "NFKD") {
            return unorm.nfkd(str);
         } else {
            throw new RangeError("Invalid normalization form: " + form);
         }
      };

      unorm.shimApplied = true;
   }
}(this));

},{}],189:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

/**
 * Custom Error class.
 * @hidden
 */
var VirgilCryptoError = /** @class */ (function (_super) {
    __extends(VirgilCryptoError, _super);
    function VirgilCryptoError(message, name) {
        if (name === void 0) { name = 'VirgilCryptoError'; }
        var _this = _super.call(this) || this;
        Object.setPrototypeOf(_this, VirgilCryptoError.prototype);
        _this.message = message;
        _this.name = name;
        return _this;
    }
    VirgilCryptoError.prototype.toString = function () {
        return this.name + ": " + this.message + ".";
    };
    return VirgilCryptoError;
}(Error));
/**
 * An error that is thrown when digital signature validation fails
 * during {@link IVirgilCrypto.decryptThenVerify} method execution.
 */
var IntegrityCheckFailedError = /** @class */ (function (_super) {
    __extends(IntegrityCheckFailedError, _super);
    function IntegrityCheckFailedError(message) {
        return _super.call(this, message, 'IntegrityCheckFailedError') || this;
    }
    return IntegrityCheckFailedError;
}(VirgilCryptoError));
/**
 * An error that is thrown when weak key material is passed to the
 * {@link IVirgilCrypto.generateKeysFromKeyMaterial} method.
 * The key material is considered weak if it's less than 32 bytes.
 */
var WeakKeyMaterialError = /** @class */ (function (_super) {
    __extends(WeakKeyMaterialError, _super);
    function WeakKeyMaterialError(message) {
        return _super.call(this, message, 'WeakKeyMaterialError') || this;
    }
    return WeakKeyMaterialError;
}(VirgilCryptoError));

/**
 * Hash algorithms supported by Virgil Crypto.
 */
(function (HashAlgorithm) {
    HashAlgorithm["MD5"] = "MD5";
    HashAlgorithm["SHA1"] = "SHA1";
    HashAlgorithm["SHA224"] = "SHA224";
    HashAlgorithm["SHA256"] = "SHA256";
    HashAlgorithm["SHA384"] = "SHA384";
    HashAlgorithm["SHA512"] = "SHA512";
})(exports.HashAlgorithm || (exports.HashAlgorithm = {}));

/**
 * Key algorithms supported by Virgil Crypto.
 */
(function (KeyPairType) {
    /** Ed25519 */
    KeyPairType["Default"] = "FAST_EC_ED25519";
    /** RSA 2048 bit */
    KeyPairType["RSA_2048"] = "RSA_2048";
    /** RSA 3072 bit */
    KeyPairType["RSA_3072"] = "RSA_3072";
    /** RSA 4096 bit */
    KeyPairType["RSA_4096"] = "RSA_4096";
    /** RSA 8192 bit */
    KeyPairType["RSA_8192"] = "RSA_8192";
    /** 256-bits NIST curve */
    KeyPairType["EC_SECP256R1"] = "EC_SECP256R1";
    /** 384-bits NIST curve */
    KeyPairType["EC_SECP384R1"] = "EC_SECP384R1";
    /** 521-bits NIST curve */
    KeyPairType["EC_SECP521R1"] = "EC_SECP521R1";
    /** 256-bits Brainpool curve */
    KeyPairType["EC_BP256R1"] = "EC_BP256R1";
    /** 384-bits Brainpool curve */
    KeyPairType["EC_BP384R1"] = "EC_BP384R1";
    /** 512-bits Brainpool curve */
    KeyPairType["EC_BP512R1"] = "EC_BP512R1";
    /** 256-bits "Koblitz" curve */
    KeyPairType["EC_SECP256K1"] = "EC_SECP256K1";
    /** Curve25519 as ECP deprecated format. */
    KeyPairType["EC_CURVE25519"] = "EC_CURVE25519";
    /** Curve25519 */
    KeyPairType["FAST_EC_X25519"] = "FAST_EC_X25519";
    /** Ed25519 */
    KeyPairType["FAST_EC_ED25519"] = "FAST_EC_ED25519";
})(exports.KeyPairType || (exports.KeyPairType = {}));

var global$1 = (typeof global !== "undefined" ? global :
            typeof self !== "undefined" ? self :
            typeof window !== "undefined" ? window : {});

var lookup = [];
var revLookup = [];
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
var inited = false;
function init () {
  inited = true;
  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
  for (var i = 0, len = code.length; i < len; ++i) {
    lookup[i] = code[i];
    revLookup[code.charCodeAt(i)] = i;
  }

  revLookup['-'.charCodeAt(0)] = 62;
  revLookup['_'.charCodeAt(0)] = 63;
}

function toByteArray (b64) {
  if (!inited) {
    init();
  }
  var i, j, l, tmp, placeHolders, arr;
  var len = b64.length;

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;

  // base64 is 4/3 + up to two characters of the original data
  arr = new Arr(len * 3 / 4 - placeHolders);

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len;

  var L = 0;

  for (i = 0, j = 0; i < l; i += 4, j += 3) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];
    arr[L++] = (tmp >> 16) & 0xFF;
    arr[L++] = (tmp >> 8) & 0xFF;
    arr[L++] = tmp & 0xFF;
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);
    arr[L++] = tmp & 0xFF;
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);
    arr[L++] = (tmp >> 8) & 0xFF;
    arr[L++] = tmp & 0xFF;
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp;
  var output = [];
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);
    output.push(tripletToBase64(tmp));
  }
  return output.join('')
}

function fromByteArray (uint8) {
  if (!inited) {
    init();
  }
  var tmp;
  var len = uint8.length;
  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes
  var output = '';
  var parts = [];
  var maxChunkLength = 16383; // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1];
    output += lookup[tmp >> 2];
    output += lookup[(tmp << 4) & 0x3F];
    output += '==';
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);
    output += lookup[tmp >> 10];
    output += lookup[(tmp >> 4) & 0x3F];
    output += lookup[(tmp << 2) & 0x3F];
    output += '=';
  }

  parts.push(output);

  return parts.join('')
}

function read (buffer, offset, isLE, mLen, nBytes) {
  var e, m;
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = -7;
  var i = isLE ? (nBytes - 1) : 0;
  var d = isLE ? -1 : 1;
  var s = buffer[offset + i];

  i += d;

  e = s & ((1 << (-nBits)) - 1);
  s >>= (-nBits);
  nBits += eLen;
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1);
  e >>= (-nBits);
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen);
    e = e - eBias;
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

function write (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c;
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);
  var i = isLE ? 0 : (nBytes - 1);
  var d = isLE ? 1 : -1;
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;

  value = Math.abs(value);

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0;
    e = eMax;
  } else {
    e = Math.floor(Math.log(value) / Math.LN2);
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * Math.pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }

    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
      e = 0;
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m;
  eLen += mLen;
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128;
}

var toString = {}.toString;

var isArray = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

var INSPECT_MAX_BYTES = 50;

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global$1.TYPED_ARRAY_SUPPORT !== undefined
  ? global$1.TYPED_ARRAY_SUPPORT
  : true;

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length);
    that.__proto__ = Buffer.prototype;
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length);
    }
    that.length = length;
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192; // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype;
  return arr
};

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
};

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype;
  Buffer.__proto__ = Uint8Array;
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size);
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
};

function allocUnsafe (that, size) {
  assertSize(size);
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0;
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
};
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
};

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8';
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0;
  that = createBuffer(that, length);

  var actual = that.write(string, encoding);

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual);
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0;
  that = createBuffer(that, length);
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255;
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength; // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array);
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset);
  } else {
    array = new Uint8Array(array, byteOffset, length);
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array;
    that.__proto__ = Buffer.prototype;
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array);
  }
  return that
}

function fromObject (that, obj) {
  if (internalIsBuffer(obj)) {
    var len = checked(obj.length) | 0;
    that = createBuffer(that, len);

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len);
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}
Buffer.isBuffer = isBuffer;
function internalIsBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
};

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
};

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i;
  if (length === undefined) {
    length = 0;
    for (i = 0; i < list.length; ++i) {
      length += list[i].length;
    }
  }

  var buffer = Buffer.allocUnsafe(length);
  var pos = 0;
  for (i = 0; i < list.length; ++i) {
    var buf = list[i];
    if (!internalIsBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos);
    pos += buf.length;
  }
  return buffer
};

function byteLength (string, encoding) {
  if (internalIsBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string;
  }

  var len = string.length;
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false;
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase();
        loweredCase = true;
    }
  }
}
Buffer.byteLength = byteLength;

function slowToString (encoding, start, end) {
  var loweredCase = false;

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0;
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length;
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0;
  start >>>= 0;

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8';

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase();
        loweredCase = true;
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true;

function swap (b, n, m) {
  var i = b[n];
  b[n] = b[m];
  b[m] = i;
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length;
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1);
  }
  return this
};

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length;
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3);
    swap(this, i + 1, i + 2);
  }
  return this
};

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length;
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7);
    swap(this, i + 1, i + 6);
    swap(this, i + 2, i + 5);
    swap(this, i + 3, i + 4);
  }
  return this
};

Buffer.prototype.toString = function toString () {
  var length = this.length | 0;
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
};

Buffer.prototype.equals = function equals (b) {
  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
};

Buffer.prototype.inspect = function inspect () {
  var str = '';
  var max = INSPECT_MAX_BYTES;
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
    if (this.length > max) str += ' ... ';
  }
  return '<Buffer ' + str + '>'
};

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!internalIsBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0;
  }
  if (end === undefined) {
    end = target ? target.length : 0;
  }
  if (thisStart === undefined) {
    thisStart = 0;
  }
  if (thisEnd === undefined) {
    thisEnd = this.length;
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0;
  end >>>= 0;
  thisStart >>>= 0;
  thisEnd >>>= 0;

  if (this === target) return 0

  var x = thisEnd - thisStart;
  var y = end - start;
  var len = Math.min(x, y);

  var thisCopy = this.slice(thisStart, thisEnd);
  var targetCopy = target.slice(start, end);

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i];
      y = targetCopy[i];
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
};

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset;
    byteOffset = 0;
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff;
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000;
  }
  byteOffset = +byteOffset;  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1);
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1;
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0;
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding);
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (internalIsBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF; // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1;
  var arrLength = arr.length;
  var valLength = val.length;

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase();
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2;
      arrLength /= 2;
      valLength /= 2;
      byteOffset /= 2;
    }
  }

  function read$$1 (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i;
  if (dir) {
    var foundIndex = -1;
    for (i = byteOffset; i < arrLength; i++) {
      if (read$$1(arr, i) === read$$1(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i;
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex;
        foundIndex = -1;
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
    for (i = byteOffset; i >= 0; i--) {
      var found = true;
      for (var j = 0; j < valLength; j++) {
        if (read$$1(arr, i + j) !== read$$1(val, j)) {
          found = false;
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
};

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
};

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
};

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0;
  var remaining = buf.length - offset;
  if (!length) {
    length = remaining;
  } else {
    length = Number(length);
    if (length > remaining) {
      length = remaining;
    }
  }

  // must be an even number of digits
  var strLen = string.length;
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2;
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16);
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed;
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write$$1 (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8';
    length = this.length;
    offset = 0;
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset;
    length = this.length;
    offset = 0;
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0;
    if (isFinite(length)) {
      length = length | 0;
      if (encoding === undefined) encoding = 'utf8';
    } else {
      encoding = length;
      length = undefined;
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset;
  if (length === undefined || length > remaining) length = remaining;

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8';

  var loweredCase = false;
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase();
        loweredCase = true;
    }
  }
};

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
};

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return fromByteArray(buf)
  } else {
    return fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end);
  var res = [];

  var i = start;
  while (i < end) {
    var firstByte = buf[i];
    var codePoint = null;
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1;

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint;

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte;
          }
          break
        case 2:
          secondByte = buf[i + 1];
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint;
            }
          }
          break
        case 3:
          secondByte = buf[i + 1];
          thirdByte = buf[i + 2];
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint;
            }
          }
          break
        case 4:
          secondByte = buf[i + 1];
          thirdByte = buf[i + 2];
          fourthByte = buf[i + 3];
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint;
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD;
      bytesPerSequence = 1;
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000;
      res.push(codePoint >>> 10 & 0x3FF | 0xD800);
      codePoint = 0xDC00 | codePoint & 0x3FF;
    }

    res.push(codePoint);
    i += bytesPerSequence;
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000;

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length;
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = '';
  var i = 0;
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    );
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = '';
  end = Math.min(buf.length, end);

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F);
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = '';
  end = Math.min(buf.length, end);

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i]);
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length;

  if (!start || start < 0) start = 0;
  if (!end || end < 0 || end > len) end = len;

  var out = '';
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i]);
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end);
  var res = '';
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length;
  start = ~~start;
  end = end === undefined ? len : ~~end;

  if (start < 0) {
    start += len;
    if (start < 0) start = 0;
  } else if (start > len) {
    start = len;
  }

  if (end < 0) {
    end += len;
    if (end < 0) end = 0;
  } else if (end > len) {
    end = len;
  }

  if (end < start) end = start;

  var newBuf;
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end);
    newBuf.__proto__ = Buffer.prototype;
  } else {
    var sliceLen = end - start;
    newBuf = new Buffer(sliceLen, undefined);
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start];
    }
  }

  return newBuf
};

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);

  var val = this[offset];
  var mul = 1;
  var i = 0;
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul;
  }

  return val
};

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length);
  }

  var val = this[offset + --byteLength];
  var mul = 1;
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul;
  }

  return val
};

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length);
  return this[offset]
};

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length);
  return this[offset] | (this[offset + 1] << 8)
};

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length);
  return (this[offset] << 8) | this[offset + 1]
};

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
};

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
};

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);

  var val = this[offset];
  var mul = 1;
  var i = 0;
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul;
  }
  mul *= 0x80;

  if (val >= mul) val -= Math.pow(2, 8 * byteLength);

  return val
};

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);

  var i = byteLength;
  var mul = 1;
  var val = this[offset + --i];
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul;
  }
  mul *= 0x80;

  if (val >= mul) val -= Math.pow(2, 8 * byteLength);

  return val
};

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length);
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
};

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length);
  var val = this[offset] | (this[offset + 1] << 8);
  return (val & 0x8000) ? val | 0xFFFF0000 : val
};

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length);
  var val = this[offset + 1] | (this[offset] << 8);
  return (val & 0x8000) ? val | 0xFFFF0000 : val
};

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
};

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
};

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);
  return read(this, offset, true, 23, 4)
};

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);
  return read(this, offset, false, 23, 4)
};

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length);
  return read(this, offset, true, 52, 8)
};

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length);
  return read(this, offset, false, 52, 8)
};

function checkInt (buf, value, offset, ext, max, min) {
  if (!internalIsBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
    checkInt(this, value, offset, byteLength, maxBytes, 0);
  }

  var mul = 1;
  var i = 0;
  this[offset] = value & 0xFF;
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF;
  }

  return offset + byteLength
};

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
    checkInt(this, value, offset, byteLength, maxBytes, 0);
  }

  var i = byteLength - 1;
  var mul = 1;
  this[offset + i] = value & 0xFF;
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF;
  }

  return offset + byteLength
};

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
  this[offset] = (value & 0xff);
  return offset + 1
};

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1;
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8;
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff);
    this[offset + 1] = (value >>> 8);
  } else {
    objectWriteUInt16(this, value, offset, true);
  }
  return offset + 2
};

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8);
    this[offset + 1] = (value & 0xff);
  } else {
    objectWriteUInt16(this, value, offset, false);
  }
  return offset + 2
};

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1;
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24);
    this[offset + 2] = (value >>> 16);
    this[offset + 1] = (value >>> 8);
    this[offset] = (value & 0xff);
  } else {
    objectWriteUInt32(this, value, offset, true);
  }
  return offset + 4
};

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24);
    this[offset + 1] = (value >>> 16);
    this[offset + 2] = (value >>> 8);
    this[offset + 3] = (value & 0xff);
  } else {
    objectWriteUInt32(this, value, offset, false);
  }
  return offset + 4
};

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1);

    checkInt(this, value, offset, byteLength, limit - 1, -limit);
  }

  var i = 0;
  var mul = 1;
  var sub = 0;
  this[offset] = value & 0xFF;
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1;
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;
  }

  return offset + byteLength
};

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1);

    checkInt(this, value, offset, byteLength, limit - 1, -limit);
  }

  var i = byteLength - 1;
  var mul = 1;
  var sub = 0;
  this[offset + i] = value & 0xFF;
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1;
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;
  }

  return offset + byteLength
};

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
  if (value < 0) value = 0xff + value + 1;
  this[offset] = (value & 0xff);
  return offset + 1
};

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff);
    this[offset + 1] = (value >>> 8);
  } else {
    objectWriteUInt16(this, value, offset, true);
  }
  return offset + 2
};

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8);
    this[offset + 1] = (value & 0xff);
  } else {
    objectWriteUInt16(this, value, offset, false);
  }
  return offset + 2
};

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff);
    this[offset + 1] = (value >>> 8);
    this[offset + 2] = (value >>> 16);
    this[offset + 3] = (value >>> 24);
  } else {
    objectWriteUInt32(this, value, offset, true);
  }
  return offset + 4
};

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
  if (value < 0) value = 0xffffffff + value + 1;
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24);
    this[offset + 1] = (value >>> 16);
    this[offset + 2] = (value >>> 8);
    this[offset + 3] = (value & 0xff);
  } else {
    objectWriteUInt32(this, value, offset, false);
  }
  return offset + 4
};

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
  }
  write(buf, value, offset, littleEndian, 23, 4);
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
};

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
};

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);
  }
  write(buf, value, offset, littleEndian, 52, 8);
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
};

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
};

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0;
  if (!end && end !== 0) end = this.length;
  if (targetStart >= target.length) targetStart = target.length;
  if (!targetStart) targetStart = 0;
  if (end > 0 && end < start) end = start;

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length;
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start;
  }

  var len = end - start;
  var i;

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start];
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start];
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    );
  }

  return len
};

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start;
      start = 0;
      end = this.length;
    } else if (typeof end === 'string') {
      encoding = end;
      end = this.length;
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0);
      if (code < 256) {
        val = code;
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255;
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0;
  end = end === undefined ? this.length : end >>> 0;

  if (!val) val = 0;

  var i;
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val;
    }
  } else {
    var bytes = internalIsBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString());
    var len = bytes.length;
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len];
    }
  }

  return this
};

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '');
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '=';
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity;
  var codePoint;
  var length = string.length;
  var leadSurrogate = null;
  var bytes = [];

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i);

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          continue
        }

        // valid lead
        leadSurrogate = codePoint;

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
        leadSurrogate = codePoint;
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
    }

    leadSurrogate = null;

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint);
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      );
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      );
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      );
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = [];
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF);
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo;
  var byteArray = [];
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i);
    hi = c >> 8;
    lo = c % 256;
    byteArray.push(lo);
    byteArray.push(hi);
  }

  return byteArray
}


function base64ToBytes (str) {
  return toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i];
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}


// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence
// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
function isBuffer(obj) {
  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))
}

function isFastBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))
}

var apply = Function.prototype.apply;
var hasOwn = Object.prototype.hasOwnProperty;
/**
 * Creates a wrapper object for the native library `lib`.
 *
 * @hidden
 *
 * @param {any} lib - Native VirgilCrypto library (browser or Node.js).
 * @returns {NativeTypeWrapper} The wrapper object.
 */
function createNativeTypeWrapper(lib) {
    var utils = createUtils(lib);
    return {
        createSafeInstanceMethods: createSafeInstanceMethods,
        createSafeStaticMethods: createSafeStaticMethods,
        utils: utils
    };
    function createSafeInstanceMethods(ctor, methods) {
        var proto;
        {
            proto = ctor.prototype;
        }
        methods.forEach(function (method) {
            if (!(method in proto) || typeof proto[method] !== 'function') {
                throw new TypeError("Method \"" + method + "\" does not exist on " + ctor.name + " prototype");
            }
            // cannot replace the method on the prototype as there are additional properties
            // associated with class prototype methods generated by emscripten
            // cannot replace the prototype either as it is used for reference
            // equality check during construction of instances (e.g. new VirgilHash()
            // fails if we replace the `VirgilHash.prototype` with a custom object)
            proto[method + 'Safe'] = wrapNativeFunction(proto[method]);
        });
    }
    function createSafeStaticMethods(ctor, methods) {
        methods.forEach(function (method) {
            if (!hasOwn.call(ctor, method) || typeof ctor[method] !== 'function') {
                throw new TypeError("Method \"" + method + "\" does not exist on " + ctor.name);
            }
            // adding Safe suffix for consistency with instance methods
            ctor[method + 'Safe'] = wrapNativeFunction(ctor[method], ctor);
        });
    }
    function wrapNativeFunction(fn, target) {
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var deletionQueue = [];
            var transformedArgs = [];
            for (var i = 0; i < args.length; i++) {
                if (utils.isBuffer(args[i])) {
                    var arr = utils.bufferToVirgilByteArray(args[i]);
                    {
                        deletionQueue.push(arr);
                    }
                    transformedArgs[i] = arr;
                }
                else {
                    transformedArgs[i] = args[i];
                }
            }
            var result;
            try {
                result = apply.call(fn, target || this, transformedArgs);
                if (utils.isVirgilByteArray(result)) {
                    {
                        deletionQueue.push(result);
                    }
                    result = utils.virgilByteArrayToBuffer(result);
                }
                return result;
            }
            finally {
                {
                    while (deletionQueue.length > 0) {
                        var item = deletionQueue.pop();
                        item.delete();
                    }
                }
            }
        };
    }
}
function createUtils(lib) {
    return {
        isBuffer: function (obj) {
            return Buffer.isBuffer(obj);
        },
        bufferToVirgilByteArray: function (buffer) {
            {
                return lib.VirgilByteArray.fromUint8Array(buffer);
            }
        },
        isVirgilByteArray: function (obj) {
            {
                return obj != null && obj.constructor === lib.VirgilByteArray;
            }
        },
        virgilByteArrayToBuffer: function (byteArray) {
            var size = byteArray.size();
            // using `allocUnsafe` for additional performance
            // as this method is used a lot
            var buffer = Buffer.allocUnsafe(size);
            for (var i = 0; i < size; ++i) {
                buffer[i] = byteArray.get(i);
            }
            return buffer;
        }
    };
}

/**
 * Converts `val` to an array. If `val` is already an array, it is returned as is.
 * @hidden
 * @param {T[] | T} val - Value to convert.
 * @returns {T[]} Converted array
 */
function toArray(val) {
    return val == null
        ? []
        : Array.isArray(val) ? val : [val];
}

/**
 * Key used to embed Data Signature into ASN.1 structure.
 * Used in `signThenEncrypt` & `decryptThenVerify`.
 *
 * @hidden
 *
 * @type {string}
 */
var DATA_SIGNATURE_KEY = 'VIRGIL-DATA-SIGNATURE';
/**
 * Key used to embed signer identifier into ASN.1 structure.
 * Used in signThenEncrypt & decryptThenVerify
 *
 * @hidden
 *
 * @type {string}
 */
var DATA_SIGNER_ID_KEY = 'VIRGIL-DATA-SIGNER-ID';

var EMPTY_BUFFER = Buffer.alloc(0);
/**
 * Creates a low level API wrapper for "native" Virgil Crypto library
 * referenced by `lib`.
 *
 * @hidden
 *
 * @param {any} lib - Native Virgil Crypto library (browser or Node.js)
 */
function createCryptoWrapper(lib) {
    var wrapper = createNativeTypeWrapper(lib);
    wrapper.createSafeInstanceMethods(lib.VirgilCipher, [
        'addKeyRecipient',
        'encrypt',
        'decryptWithKey',
        'addPasswordRecipient',
        'decryptWithPassword',
        'getContentInfo',
        'setContentInfo',
        'keyRecipientExists'
    ]);
    wrapper.createSafeInstanceMethods(lib.VirgilSigner, ['sign', 'verify']);
    wrapper.createSafeInstanceMethods(lib.VirgilHash, ['hash']);
    wrapper.createSafeInstanceMethods(lib.VirgilCustomParams, ['setData', 'getData']);
    wrapper.createSafeInstanceMethods(lib.VirgilKeyPair, ['privateKey', 'publicKey']);
    wrapper.createSafeStaticMethods(lib.VirgilKeyPair, [
        'generate',
        'generateRecommended',
        'decryptPrivateKey',
        'encryptPrivateKey',
        'extractPublicKey',
        'privateKeyToDER',
        'publicKeyToDER',
        'resetPrivateKeyPassword',
        'generateFromKeyMaterial',
        'generateRecommendedFromKeyMaterial'
    ]);
    var createVirgilCipher = function () {
        var cipher = new lib.VirgilCipher();
        cipher.deleteLater();
        return cipher;
    };
    var createVirgilSigner = function () {
        var sha512 = lib.VirgilHashAlgorithm.SHA512;
        var signer = new lib.VirgilSigner(sha512);
        signer.deleteLater();
        return signer;
    };
    var createVirgilHash = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _a;
        var hash = new ((_a = lib.VirgilHash).bind.apply(_a, [void 0].concat(args)))();
        hash.deleteLater();
        return hash;
    };
    var getRandomBytes = function (numOfBytes) {
        if (true) {
            var personalInfo = lib.VirgilByteArrayUtils.stringToBytes('');
            var random = new lib.VirgilRandom(personalInfo);
            var byteArr = void 0;
            try {
                byteArr = random.randomizeBytes(numOfBytes);
                return wrapper.utils.virgilByteArrayToBuffer(byteArr);
            }
            finally {
                personalInfo.delete();
                random.delete();
                byteArr && byteArr.delete();
            }
        }
        else {
            var random = new lib.VirgilRandom('');
        }
    };
    return {
        generateKeyPair: function (options) {
            if (options === void 0) { options = {}; }
            var type = options.type, _a = options.password, password = _a === void 0 ? EMPTY_BUFFER : _a;
            var keyPair;
            if (type) {
                keyPair = lib.VirgilKeyPair.generateSafe(getLibKeyPairType(type), password);
            }
            else {
                keyPair = lib.VirgilKeyPair.generateRecommendedSafe(password);
            }
            return {
                privateKey: keyPair.privateKeySafe(),
                publicKey: keyPair.publicKeySafe()
            };
        },
        generateKeyPairFromKeyMaterial: function (options) {
            var keyMaterial = options.keyMaterial, type = options.type, _a = options.password, password = _a === void 0 ? EMPTY_BUFFER : _a;
            if (keyMaterial.byteLength < 32) {
                throw new WeakKeyMaterialError('Key material is not secure. Expected length >= 32.');
            }
            var keyPair;
            if (type) {
                keyPair = lib.VirgilKeyPair.generateFromKeyMaterialSafe(getLibKeyPairType(type), keyMaterial, password);
            }
            else {
                keyPair = lib.VirgilKeyPair.generateRecommendedFromKeyMaterialSafe(keyMaterial, password);
            }
            return {
                privateKey: keyPair.privateKeySafe(),
                publicKey: keyPair.publicKeySafe()
            };
        },
        privateKeyToDer: function (privateKey, privateKeyPassword) {
            if (privateKeyPassword === void 0) { privateKeyPassword = EMPTY_BUFFER; }
            return lib.VirgilKeyPair.privateKeyToDERSafe(privateKey, privateKeyPassword);
        },
        publicKeyToDer: function (publicKey) {
            return lib.VirgilKeyPair.publicKeyToDERSafe(publicKey);
        },
        extractPublicKey: function (privateKey, privateKeyPassword) {
            if (privateKeyPassword === void 0) { privateKeyPassword = EMPTY_BUFFER; }
            return lib.VirgilKeyPair.extractPublicKeySafe(privateKey, privateKeyPassword);
        },
        encryptPrivateKey: function (privateKey, privateKeyPassword) {
            return lib.VirgilKeyPair.encryptPrivateKeySafe(privateKey, privateKeyPassword);
        },
        decryptPrivateKey: function (privateKey, privateKeyPassword) {
            return lib.VirgilKeyPair.decryptPrivateKeySafe(privateKey, privateKeyPassword);
        },
        changePrivateKeyPassword: function (privateKey, oldPassword, newPassword) {
            return lib.VirgilKeyPair.resetPrivateKeyPasswordSafe(privateKey, oldPassword, newPassword);
        },
        hash: function (data, algorithm) {
            if (algorithm === void 0) { algorithm = exports.HashAlgorithm.SHA256; }
            var libAlgorithm = lib.VirgilHashAlgorithm[algorithm];
            var virgilHash = createVirgilHash(libAlgorithm);
            return virgilHash.hashSafe(data);
        },
        encryptWithPassword: function (data, password) {
            var cipher = createVirgilCipher();
            cipher.addPasswordRecipientSafe(password);
            return cipher.encryptSafe(data, true);
        },
        decryptWithPassword: function (encryptedData, password) {
            var cipher = createVirgilCipher();
            return cipher.decryptWithPasswordSafe(encryptedData, password);
        },
        encrypt: function (data, encryptionKey) {
            var encryptionKeys = toArray(encryptionKey);
            var cipher = createVirgilCipher();
            encryptionKeys.forEach(function (_a) {
                var identifier = _a.identifier, key = _a.key;
                cipher.addKeyRecipientSafe(identifier, key);
            });
            return cipher.encryptSafe(data, true);
        },
        decrypt: function (encryptedData, decryptionKey) {
            var identifier = decryptionKey.identifier, key = decryptionKey.key, _a = decryptionKey.password, password = _a === void 0 ? EMPTY_BUFFER : _a;
            var cipher = createVirgilCipher();
            return cipher.decryptWithKeySafe(encryptedData, identifier, key, password);
        },
        sign: function (data, signingKey) {
            var key = signingKey.key, _a = signingKey.password, password = _a === void 0 ? EMPTY_BUFFER : _a;
            var signer = createVirgilSigner();
            return signer.signSafe(data, key, password);
        },
        verify: function (data, signature, verificationKey) {
            var key = verificationKey.key;
            var signer = createVirgilSigner();
            return signer.verifySafe(data, signature, key);
        },
        signThenEncrypt: function (data, signingKey, encryptionKey) {
            var encryptionKeys = toArray(encryptionKey);
            var signer = createVirgilSigner();
            var cipher = createVirgilCipher();
            var signatureKey = Buffer.from(DATA_SIGNATURE_KEY);
            var signerIdKey = Buffer.from(DATA_SIGNER_ID_KEY);
            var customParams = cipher.customParams();
            var signature = signer.signSafe(data, signingKey.key, signingKey.password || EMPTY_BUFFER);
            customParams.setDataSafe(signatureKey, signature);
            if (signingKey.identifier != null) {
                customParams.setDataSafe(signerIdKey, signingKey.identifier);
            }
            encryptionKeys.forEach(function (_a) {
                var identifier = _a.identifier, key = _a.key;
                return cipher.addKeyRecipientSafe(identifier, key);
            });
            return cipher.encryptSafe(data, true);
        },
        decryptThenVerify: function (cipherData, decryptionKey, verificationKey) {
            var verificationKeys = toArray(verificationKey);
            var signer = createVirgilSigner();
            var cipher = createVirgilCipher();
            var signatureKey = Buffer.from(DATA_SIGNATURE_KEY);
            var plainData = cipher.decryptWithKeySafe(cipherData, decryptionKey.identifier, decryptionKey.key, decryptionKey.password || EMPTY_BUFFER);
            var customParams = cipher.customParams();
            var signature = customParams.getDataSafe(signatureKey);
            var isValid;
            if (verificationKeys.length === 1) {
                isValid = signer.verifySafe(plainData, signature, verificationKeys[0].key);
            }
            else {
                var signerId_1 = tryGetSignerId(customParams);
                if (signerId_1 !== null) {
                    var theKey = verificationKeys.find(function (key) { return key.identifier != null && key.identifier.equals(signerId_1); });
                    if (theKey === undefined) {
                        isValid = false;
                    }
                    else {
                        isValid = signer.verifySafe(plainData, signature, theKey.key);
                    }
                }
                else {
                    // no signer id in metadata, try all public keys in sequence
                    isValid = verificationKeys.some(function (key) { return signer.verifySafe(plainData, signature, key.key); });
                }
            }
            if (!isValid) {
                throw new IntegrityCheckFailedError('Signature verification has failed.');
            }
            return plainData;
        },
        getRandomBytes: getRandomBytes,
        signThenEncryptDetached: function (data, privateKey, publicKeys) {
            var signer = createVirgilSigner();
            var cipher = createVirgilCipher();
            var customParams = cipher.customParams();
            var signature = signer.signSafe(data, privateKey.key, privateKey.password || EMPTY_BUFFER);
            customParams.setDataSafe(Buffer.from(DATA_SIGNATURE_KEY), signature);
            customParams.setDataSafe(Buffer.from(DATA_SIGNER_ID_KEY), privateKey.identifier);
            publicKeys.forEach(function (_a) {
                var identifier = _a.identifier, key = _a.key;
                return cipher.addKeyRecipientSafe(identifier, key);
            });
            var encryptedData = cipher.encryptSafe(data, false);
            var contentInfo = cipher.getContentInfoSafe();
            return { encryptedData: encryptedData, metadata: contentInfo };
        },
        decryptThenVerifyDetached: function (encryptedData, metadata, privateKey, publicKeys) {
            var signer = createVirgilSigner();
            var cipher = createVirgilCipher();
            cipher.setContentInfoSafe(metadata);
            if (!cipher.keyRecipientExistsSafe(privateKey.identifier)) {
                throw new VirgilCryptoError('Wrong private key. The data has not been encrypted with the corresponding public key.');
            }
            var decryptedData = cipher.decryptWithKeySafe(encryptedData, privateKey.identifier, privateKey.key, privateKey.password || EMPTY_BUFFER);
            var customParams = cipher.customParams();
            var signature = customParams.getDataSafe(Buffer.from(DATA_SIGNATURE_KEY));
            var signerId = tryGetSignerId(customParams);
            if (!signerId) {
                throw new VirgilCryptoError('Signer ID not found in the cryptogram.');
            }
            var matchingPublicKey = publicKeys.find(function (k) { return k.identifier.equals(signerId); });
            if (!matchingPublicKey) {
                throw new VirgilCryptoError('Wrong public key(s). The data has not been signed with the corresponding private key(s).');
            }
            if (!signer.verifySafe(decryptedData, signature, matchingPublicKey.key)) {
                throw new IntegrityCheckFailedError('Signature verification has failed.');
            }
            return decryptedData;
        }
    };
    function tryGetSignerId(customParams) {
        var signerIdKey = Buffer.from(DATA_SIGNER_ID_KEY);
        try {
            return customParams.getDataSafe(signerIdKey);
        }
        catch (e) {
            return null;
        }
    }
    function getLibKeyPairType(type) {
        return lib.VirgilKeyPairType[type];
    }
}

/**
 * Class implementing  cryptographic operations required to sign and
 * verify the validity of access tokens (i.e. the `IAccessTokenSigner` interface
 * from {@link https://bit.ly/2GAAH0F|virgil-sdk}),
 * using {@link VirgilCrypto}.
 */
var VirgilAccessTokenSigner = /** @class */ (function () {
    /**
     * Initializes the new `VirgilAccessTokenSigner`
     * @param {VirgilCrypto} virgilCrypto - VirgilCrypto instance, providing
     * implementation of crypto operations.
     */
    function VirgilAccessTokenSigner(virgilCrypto) {
        this.virgilCrypto = virgilCrypto;
        if (virgilCrypto == null)
            throw new Error('`virgilCrypto` is required');
    }
    /**
     * Returns an identifier of the algorithm used for signature calculation
     * and verification.
     *
     * @returns {string} The algorithm identifier. Currently 'VEDS512'
     */
    VirgilAccessTokenSigner.prototype.getAlgorithm = function () {
        return 'VEDS512';
    };
    /**
     * Generates digital signature of the given access token using the given
     * private key.
     * @param {Buffer | string} token - The access token bytes.
     * @param {IPrivateKey} privateKey - The private key object.
     * @returns {Buffer} - The signature.
     */
    VirgilAccessTokenSigner.prototype.generateTokenSignature = function (token, privateKey) {
        return this.virgilCrypto.calculateSignature(token, privateKey);
    };
    /**
     * Verifies the validity of the given signature for the given token and public key.
     * @param {Buffer | string} token - The token.
     * @param {Buffer | string} signature - The signature.
     * @param {IPublicKey} publicKey - The signer's public key.
     * @returns {boolean} - `true` if signature is valid, otherwise `false`
     */
    VirgilAccessTokenSigner.prototype.verifyTokenSignature = function (token, signature, publicKey) {
        return this.virgilCrypto.verifySignature(token, signature, publicKey);
    };
    return VirgilAccessTokenSigner;
}());

/**
 * Class implementing operations required to convert between raw
 * private key material and private key objects and vice versa
 * (i.e. the `IPrivateKeyExporter` interface from
 * {@link https://bit.ly/2KFRmT8|virgil-sdk}), using {@link VirgilCrypto}.
 */
var VirgilPrivateKeyExporter = /** @class */ (function () {
    /**
     * Initializes the new `VirgilPrivateKeyExporter`
     * @param {VirgilCrypto} virgilCrypto - VirgilCrypto instance, providing
     * implementation of crypto operations.
     * @param {string} [password] - Optional password used to encrypt the key
     * before export and decrypt before import.
     * NOTE: do NOT use the default (no password), unless your storage/transport
     * channel is secure.
     */
    function VirgilPrivateKeyExporter(virgilCrypto, password) {
        this.virgilCrypto = virgilCrypto;
        this.password = password;
        if (virgilCrypto == null)
            throw new Error('`virgilCrypto` is required');
    }
    /**
     * Exports private key material in DER format from the given private key object.
     *
     * @param {IPrivateKey} key - The private key object to export the key material from.
     * @returns {Buffer} - The private key material in DER format.
     */
    VirgilPrivateKeyExporter.prototype.exportPrivateKey = function (key) {
        return this.virgilCrypto.exportPrivateKey(key, this.password);
    };
    /**
     * Creates a {@link VirgilPrivateKey} object from private key material in PEM or DER format.
     *
     * @param {Buffer | string} keyData - The private key material. If `keyData` is
     * a string, base64 encoding is assumed.
     * @returns {VirgilPrivateKey} The private key object.
     */
    VirgilPrivateKeyExporter.prototype.importPrivateKey = function (keyData) {
        return this.virgilCrypto.importPrivateKey(keyData, this.password);
    };
    return VirgilPrivateKeyExporter;
}());

/**
 * Class implementing  cryptographic operations required to create and
 * verify the validity of Virgil Cards (i.e. the `ICardCrypto` interface
 * from {@link https://bit.ly/2GCZLnU|virgil-sdk}), using {@link VirgilCrypto}.
 */
var VirgilCardCrypto = /** @class */ (function () {
    /**
     * Initializes the new `VirgilCardCrypto`
     * @param {VirgilCrypto} virgilCrypto - VirgilCrypto instance, providing
     * implementation of crypto operations.
     */
    function VirgilCardCrypto(virgilCrypto) {
        this.virgilCrypto = virgilCrypto;
        if (virgilCrypto == null)
            throw new Error('`virgilCrypto` is required');
    }
    /**
     * Generates digital signature of the given data using the given private key.
     *
     * @param {Buffer | string} data - The data to be signed.
     * @param {IPrivateKey} privateKey - The private key object.
     * @returns {Buffer} - The signature data.
     */
    VirgilCardCrypto.prototype.generateSignature = function (data, privateKey) {
        return this.virgilCrypto.calculateSignature(data, privateKey);
    };
    /**
     * Verifies the validity of the digital signature for the given data and public key.
     *
     * @param {Buffer | string} data - The data that were signed.
     * @param {Buffer | string} signature - The signature.
     * @param {IPublicKey} publicKey - The signer's public key.
     * @returns {boolean} - `true` if signature is valid, otherwise `false`
     */
    VirgilCardCrypto.prototype.verifySignature = function (data, signature, publicKey) {
        return this.virgilCrypto.verifySignature(data, signature, publicKey);
    };
    /**
     * Exports public key material in DER format from the given public key object.
     *
     * @param {IPublicKey} publicKey - The public key object to export the key material from.
     * @returns {Buffer} - The public key material in DER format.
     */
    VirgilCardCrypto.prototype.exportPublicKey = function (publicKey) {
        return this.virgilCrypto.exportPublicKey(publicKey);
    };
    /**
     * Creates a {@link VirgilPublicKey} object from public key material in PEM or DER format.
     *
     * @param {Buffer | string} publicKeyData - The public key material. If `publicKeyData` is
     * a string, base64 encoding is assumed.
     * @returns {VirgilPublicKey} The public key object.
     */
    VirgilCardCrypto.prototype.importPublicKey = function (publicKeyData) {
        return this.virgilCrypto.importPublicKey(publicKeyData);
    };
    /**
     * Computes SHA-512 hash of the given data.
     * @param {Buffer | string} data - The data to be hashed.
     * @returns {Buffer} - The resulting hash value.
     */
    VirgilCardCrypto.prototype.generateSha512 = function (data) {
        return this.virgilCrypto.calculateHash(data, exports.HashAlgorithm.SHA512);
    };
    return VirgilCardCrypto;
}());

/**
 * String decoding utilities.
 */
var encoding = {
    /**
     * Decodes the base64-encoded string and returns `Buffer`.
     * @param {string} str - The string to decode.
     * @returns {Buffer}
     */
    base64ToBytes: function (str) {
        return Buffer.from(str, 'base64');
    },
    /**
     * Decodes the hex string and returns `Buffer`.
     * @param {string} str - The string to decode.
     * @returns {Buffer}
     */
    hexToBytes: function (str) {
        return Buffer.from(str, 'hex');
    },
    /**
     * Decodes the utf8 string and returns `Buffer`.
     * @param {string} str - The string to decode.
     * @returns {Buffer}
     */
    stringToBytes: function (str) {
        return Buffer.from(str, 'utf8');
    }
};

/**
 * Attempts to convert the given `value` to Buffer. Throws a `TypeError` if the
 * `value` cannot be converted.
 *
 * @hidden
 *
 * @param {string | Buffer | ArrayBuffer} value - The value to convert.
 *
 * If `value` is Buffer, it is used as is, without copying the underlying memory.
 *
 * If `value` is ArrayBuffer, creates a view if the ArrayBuffer without copying
 * the underlying memory.
 *
 * @param {string} encoding - If `value` is a string, specifies its encoding,
 * otherwise is ignored.
 * @param {string} [label] - The name of the argument to include in error message
 * in case when the value cannot be converted to Buffer.
 * @returns {Buffer}
 */
function anyToBuffer(value, encoding, label) {
    if (label === void 0) { label = 'argument'; }
    if (Buffer.isBuffer(value)) {
        return value;
    }
    if (typeof value === 'string') {
        return Buffer.from(value, encoding);
    }
    if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
        return Buffer.from(value);
    }
    throw new TypeError("Expected `" + label + "` to be a string, Buffer or ArrayBuffer, got " + typeof value + ".");
}

/*
    MIT License http://www.opensource.org/licenses/mit-license.php
    Author Tobias Koppers @sokra
  */
  function addScript(src) {
  function log(error) {
    (typeof console !== "undefined")
    && (console.error || console.log)("[global-script]", error);
  }

  // Check for IE =< 8
  function isIE() {
    return typeof attachEvent !== "undefined" && typeof addEventListener === "undefined";
  }

  try {
    if (typeof execScript !== "undefined" && isIE()) {
      execScript(src);
    } else if (typeof eval !== "undefined") {
      eval.call(null, src);
    } else {
      log("EvalError: No eval function available");
    }
  } catch (error) {
    log(error);
  }
}

addScript("var __virgilCrypto = function(__virgilCrypto) {\n  __virgilCrypto = __virgilCrypto || {};\n\nvar Module=typeof __virgilCrypto!==\"undefined\"?__virgilCrypto:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module[\"arguments\"]=[];Module[\"thisProgram\"]=\"./this.program\";Module[\"quit\"]=(function(status,toThrow){throw toThrow});Module[\"preRun\"]=[];Module[\"postRun\"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module[\"ENVIRONMENT\"]){if(Module[\"ENVIRONMENT\"]===\"WEB\"){ENVIRONMENT_IS_WEB=true}else if(Module[\"ENVIRONMENT\"]===\"WORKER\"){ENVIRONMENT_IS_WORKER=true}else if(Module[\"ENVIRONMENT\"]===\"NODE\"){ENVIRONMENT_IS_NODE=true}else if(Module[\"ENVIRONMENT\"]===\"SHELL\"){ENVIRONMENT_IS_SHELL=true}else{throw new Error(\"Module['ENVIRONMENT'] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.\")}}else{ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof require===\"function\"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER}if(ENVIRONMENT_IS_NODE){var nodeFS;var nodePath;Module[\"read\"]=function shell_read(filename,binary){var ret;ret=tryParseAsDataURI(filename);if(!ret){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename)}return binary?ret:ret.toString()};Module[\"readBinary\"]=function readBinary(filename){var ret=Module[\"read\"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){Module[\"thisProgram\"]=process[\"argv\"][1].replace(/\\\\/g,\"/\")}Module[\"arguments\"]=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));process[\"on\"](\"unhandledRejection\",(function(reason,p){process[\"exit\"](1)}));Module[\"inspect\"]=(function(){return\"[Emscripten Module object]\"})}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){Module[\"read\"]=function shell_read(f){var data=tryParseAsDataURI(f);if(data){return intArrayToString(data)}return read(f)}}Module[\"readBinary\"]=function readBinary(f){var data;data=tryParseAsDataURI(f);if(data){return data}if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){Module[\"arguments\"]=scriptArgs}else if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}if(typeof quit===\"function\"){Module[\"quit\"]=(function(status,toThrow){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module[\"read\"]=function shell_read(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data)}throw err}};if(ENVIRONMENT_IS_WORKER){Module[\"readBinary\"]=function readBinary(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}catch(err){var data=tryParseAsDataURI(url);if(data){return data}throw err}}}Module[\"readAsync\"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module[\"setWindowTitle\"]=(function(title){document.title=title})}Module[\"print\"]=typeof console!==\"undefined\"?console.log.bind(console):typeof print!==\"undefined\"?print:null;Module[\"printErr\"]=typeof printErr!==\"undefined\"?printErr:typeof console!==\"undefined\"&&console.warn.bind(console)||Module[\"print\"];Module.print=Module[\"print\"];Module.printErr=Module[\"printErr\"];for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var STACK_ALIGN=16;function staticAlloc(size){assert(!staticSealed);var ret=STATICTOP;STATICTOP=STATICTOP+size+15&-16;return ret}function dynamicAlloc(size){assert(DYNAMICTOP_PTR);var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return 0}}return ret}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;var ret=size=Math.ceil(size/factor)*factor;return ret}function getNativeTypeSize(type){switch(type){case\"i1\":case\"i8\":return 1;case\"i16\":return 2;case\"i32\":return 4;case\"i64\":return 8;case\"float\":return 4;case\"double\":return 8;default:{if(type[type.length-1]===\"*\"){return 4}else if(type[0]===\"i\"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;Module.printErr(text)}}var jsCallStartIndex=1;var functionPointers=new Array(0);var funcWrappers={};function dynCall(sig,ptr,args){if(args&&args.length){return Module[\"dynCall_\"+sig].apply(null,[ptr].concat(args))}else{return Module[\"dynCall_\"+sig].call(null,ptr)}}var GLOBAL_BASE=8;var ABORT=0;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}var JSfuncs={\"stackSave\":(function(){stackSave()}),\"stackRestore\":(function(){stackRestore()}),\"arrayToC\":(function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),\"stringToC\":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret})};var toC={\"string\":JSfuncs[\"stringToC\"],\"array\":JSfuncs[\"arrayToC\"]};function ccall(ident,returnType,argTypes,args,opts){var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(returnType===\"string\")ret=Pointer_stringify(ret);else if(returnType===\"boolean\")ret=Boolean(ret);if(stack!==0){stackRestore(stack)}return ret}function setValue(ptr,value,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":HEAP8[ptr>>0]=value;break;case\"i8\":HEAP8[ptr>>0]=value;break;case\"i16\":HEAP16[ptr>>1]=value;break;case\"i32\":HEAP32[ptr>>2]=value;break;case\"i64\":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\"float\":HEAPF32[ptr>>2]=value;break;case\"double\":HEAPF64[ptr>>3]=value;break;default:abort(\"invalid type for setValue: \"+type)}}var ALLOC_STATIC=2;var ALLOC_NONE=4;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab===\"number\"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types===\"string\"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof _malloc===\"function\"?_malloc:staticAlloc,stackAlloc,staticAlloc,dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var stop;ptr=ret;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType===\"i8\"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];type=singleType||types[i];if(type===0){i++;continue}if(type==\"i64\")type=\"i32\";setValue(ret+i,curr,type);if(previousType!==type){typeSize=getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}function Pointer_stringify(ptr,length){if(length===0||!ptr)return\"\";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret=\"\";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return UTF8ToString(ptr)}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str=\"\";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function demangle(func){return func}function demangleAll(text){var regex=/__Z[\\w\\d_]+/g;return text.replace(regex,(function(x){var y=demangle(x);return x===y?x:x+\" [\"+y+\"]\"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return\"(no stack trace available)\"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module[\"extraStackTrace\"])js+=\"\\n\"+Module[\"extraStackTrace\"]();return demangleAll(js)}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort(\"Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \"+TOTAL_MEMORY+\", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \")}function enlargeMemory(){abortOnCannotGrowMemory()}var TOTAL_STACK=Module[\"TOTAL_STACK\"]||5242880;var TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(TOTAL_MEMORY<TOTAL_STACK)Module.printErr(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+TOTAL_MEMORY+\"! (TOTAL_STACK=\"+TOTAL_STACK+\")\");if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{{buffer=new ArrayBuffer(TOTAL_MEMORY)}Module[\"buffer\"]=buffer}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}HEAP32[0]=1668509029;HEAP16[1]=25459;if(HEAPU8[2]!==115||HEAPU8[3]!==99)throw\"Runtime error: expected the system to be little-endian!\";function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_round=Math.round;var Math_min=Math.min;var Math_max=Math.max;var Math_clz32=Math.clz32;var Math_trunc=Math.trunc;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var memoryInitializer=null;var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}STATIC_BASE=GLOBAL_BASE;STATICTOP=STATIC_BASE+106464;__ATINIT__.push({func:(function(){__GLOBAL__sub_I_wrapper_cxx()})},{func:(function(){__GLOBAL__sub_I_bind_cpp()})});memoryInitializer=\"data:application/octet-stream;base64,\";var tempDoublePtr=STATICTOP;STATICTOP+=16;function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+Pointer_stringify(condition)+\", at: \"+[filename?Pointer_stringify(filename):\"unknown filename\",line,func?Pointer_stringify(func):\"unknown function\"])}function ___cxa_allocate_exception(size){return _malloc(size)}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var key in EXCEPTIONS.infos){var ptr=+key;var info=EXCEPTIONS.infos[ptr];if(info.adjusted===adjusted){return ptr}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module[\"dynCall_vi\"](info.destructor,ptr)}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};function ___cxa_begin_catch(ptr){var info=EXCEPTIONS.infos[ptr];if(info&&!info.caught){info.caught=true;__ZSt18uncaught_exceptionv.uncaught_exception--}if(info)info.rethrown=false;EXCEPTIONS.caught.push(ptr);EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));return ptr}function ___cxa_current_primary_exception(){var ret=EXCEPTIONS.caught[EXCEPTIONS.caught.length-1]||0;if(ret)EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ret));return ret}function ___cxa_decrement_exception_refcount(ptr){EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr))}function ___cxa_free_exception(ptr){try{return _free(ptr)}catch(e){}}function ___cxa_end_catch(){Module[\"setThrew\"](0);var ptr=EXCEPTIONS.caught.pop();if(ptr){EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));EXCEPTIONS.last=0}}function ___cxa_find_matching_catch_2(){return ___cxa_find_matching_catch.apply(null,arguments)}function ___cxa_find_matching_catch_3(){return ___cxa_find_matching_catch.apply(null,arguments)}function ___cxa_find_matching_catch_4(){return ___cxa_find_matching_catch.apply(null,arguments)}function ___cxa_increment_exception_refcount(ptr){EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr))}function ___cxa_pure_virtual(){ABORT=true;throw\"Pure virtual function called!\"}function ___cxa_rethrow(){var ptr=EXCEPTIONS.caught.pop();ptr=EXCEPTIONS.deAdjust(ptr);if(!EXCEPTIONS.infos[ptr].rethrown){EXCEPTIONS.caught.push(ptr);EXCEPTIONS.infos[ptr].rethrown=true}EXCEPTIONS.last=ptr;throw ptr}function ___cxa_rethrow_primary_exception(ptr){if(!ptr)return;EXCEPTIONS.caught.push(ptr);EXCEPTIONS.infos[ptr].rethrown=true;___cxa_rethrow()}function ___resumeException(ptr){if(!EXCEPTIONS.last){EXCEPTIONS.last=ptr}throw ptr}function ___cxa_find_matching_catch(){var thrown=EXCEPTIONS.last;if(!thrown){return(setTempRet0(0),0)|0}var info=EXCEPTIONS.infos[thrown];var throwntype=info.type;if(!throwntype){return(setTempRet0(0),thrown)|0}var typeArray=Array.prototype.slice.call(arguments);var pointer=Module[\"___cxa_is_pointer_type\"](throwntype);if(!___cxa_find_matching_catch.buffer)___cxa_find_matching_catch.buffer=_malloc(4);HEAP32[___cxa_find_matching_catch.buffer>>2]=thrown;thrown=___cxa_find_matching_catch.buffer;for(var i=0;i<typeArray.length;i++){if(typeArray[i]&&Module[\"___cxa_can_catch\"](typeArray[i],throwntype,thrown)){thrown=HEAP32[thrown>>2];info.adjusted=thrown;return(setTempRet0(typeArray[i]),thrown)|0}}thrown=HEAP32[thrown>>2];return(setTempRet0(throwntype),thrown)|0}function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:ptr,type:type,destructor:destructor,refcount:0,caught:false,rethrown:false};EXCEPTIONS.last=ptr;if(!(\"uncaught_exception\"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr}function ___gxx_personality_v0(){}function ___lock(){}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}function ___map_file(pathname,size){___setErrNo(ERRNO_CODES.EPERM);return-1}var ERRNO_MESSAGES={0:\"Success\",1:\"Not super-user\",2:\"No such file or directory\",3:\"No such process\",4:\"Interrupted system call\",5:\"I/O error\",6:\"No such device or address\",7:\"Arg list too long\",8:\"Exec format error\",9:\"Bad file number\",10:\"No children\",11:\"No more processes\",12:\"Not enough core\",13:\"Permission denied\",14:\"Bad address\",15:\"Block device required\",16:\"Mount device busy\",17:\"File exists\",18:\"Cross-device link\",19:\"No such device\",20:\"Not a directory\",21:\"Is a directory\",22:\"Invalid argument\",23:\"Too many open files in system\",24:\"Too many open files\",25:\"Not a typewriter\",26:\"Text file busy\",27:\"File too large\",28:\"No space left on device\",29:\"Illegal seek\",30:\"Read only file system\",31:\"Too many links\",32:\"Broken pipe\",33:\"Math arg out of domain of func\",34:\"Math result not representable\",35:\"File locking deadlock error\",36:\"File or path name too long\",37:\"No record locks available\",38:\"Function not implemented\",39:\"Directory not empty\",40:\"Too many symbolic links\",42:\"No message of desired type\",43:\"Identifier removed\",44:\"Channel number out of range\",45:\"Level 2 not synchronized\",46:\"Level 3 halted\",47:\"Level 3 reset\",48:\"Link number out of range\",49:\"Protocol driver not attached\",50:\"No CSI structure available\",51:\"Level 2 halted\",52:\"Invalid exchange\",53:\"Invalid request descriptor\",54:\"Exchange full\",55:\"No anode\",56:\"Invalid request code\",57:\"Invalid slot\",59:\"Bad font file fmt\",60:\"Device not a stream\",61:\"No data (for no delay io)\",62:\"Timer expired\",63:\"Out of streams resources\",64:\"Machine is not on the network\",65:\"Package not installed\",66:\"The object is remote\",67:\"The link has been severed\",68:\"Advertise error\",69:\"Srmount error\",70:\"Communication error on send\",71:\"Protocol error\",72:\"Multihop attempted\",73:\"Cross mount point (not really error)\",74:\"Trying to read unreadable message\",75:\"Value too large for defined data type\",76:\"Given log. name not unique\",77:\"f.d. invalid for this operation\",78:\"Remote address changed\",79:\"Can   access a needed shared lib\",80:\"Accessing a corrupted shared lib\",81:\".lib section in a.out corrupted\",82:\"Attempting to link in too many libs\",83:\"Attempting to exec a shared library\",84:\"Illegal byte sequence\",86:\"Streams pipe error\",87:\"Too many users\",88:\"Socket operation on non-socket\",89:\"Destination address required\",90:\"Message too long\",91:\"Protocol wrong type for socket\",92:\"Protocol not available\",93:\"Unknown protocol\",94:\"Socket type not supported\",95:\"Not supported\",96:\"Protocol family not supported\",97:\"Address family not supported by protocol family\",98:\"Address already in use\",99:\"Address not available\",100:\"Network interface is not configured\",101:\"Network is unreachable\",102:\"Connection reset by network\",103:\"Connection aborted\",104:\"Connection reset by peer\",105:\"No buffer space available\",106:\"Socket is already connected\",107:\"Socket is not connected\",108:\"Can't send after socket shutdown\",109:\"Too many references\",110:\"Connection timed out\",111:\"Connection refused\",112:\"Host is down\",113:\"Host is unreachable\",114:\"Socket already connected\",115:\"Connection already in progress\",116:\"Stale file handle\",122:\"Quota exceeded\",123:\"No medium (in tape drive)\",125:\"Operation canceled\",130:\"Previous owner died\",131:\"State not recoverable\"};var PATH={splitPath:(function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)}),normalizeArray:(function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts}),normalize:(function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter((function(p){return!!p})),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path}),dirname:(function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir}),basename:(function(path){if(path===\"/\")return\"/\";var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)}),extname:(function(path){return PATH.splitPath(path)[3]}),join:(function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))}),join2:(function(l,r){return PATH.normalize(l+\"/\"+r)}),resolve:(function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\"}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter((function(p){return!!p})),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"}),relative:(function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")})};var TTY={ttys:[],init:(function(){}),shutdown:(function(){}),register:(function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)}),stream_ops:{open:(function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}stream.tty=tty;stream.seekable=false}),close:(function(stream){stream.tty.ops.flush(stream.tty)}),flush:(function(stream){stream.tty.ops.flush(stream.tty)}),read:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}for(var i=0;i<length;i++){try{stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})},default_tty_ops:{get_char:(function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=new Buffer(BUFSIZE);var bytesRead=0;var isPosixPlatform=process.platform!=\"win32\";var fd=process.stdin.fd;if(isPosixPlatform){var usingDevice=false;try{fd=fs.openSync(\"/dev/stdin\",\"r\");usingDevice=true}catch(e){}}try{bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf(\"EOF\")!=-1)bytesRead=0;else throw e}if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString(\"utf-8\")}else{result=null}}else if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()}),put_char:(function(tty,val){if(val===null||val===10){Module[\"print\"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module[\"print\"](UTF8ArrayToString(tty.output,0));tty.output=[]}})},default_tty1_ops:{put_char:(function(tty,val){if(val===null||val===10){Module[\"printErr\"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module[\"printErr\"](UTF8ArrayToString(tty.output,0));tty.output=[]}})}};var MEMFS={ops_table:null,mount:(function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)}),createNode:(function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node}),getFileDataAsRegularArray:(function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents}),getFileDataAsTypedArray:(function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)}),expandFileStorage:(function(node,newCapacity){if(node.contents&&node.contents.subarray&&newCapacity>node.contents.length){node.contents=MEMFS.getFileDataAsRegularArray(node);node.usedBytes=node.contents.length}if(!node.contents||node.contents.subarray){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return}if(!node.contents&&newCapacity>0)node.contents=[];while(node.contents.length<newCapacity)node.contents.push(0)}),resizeFileStorage:(function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize}),node_ops:{getattr:(function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}}),lookup:(function(parent,name){throw FS.genericErrors[ERRNO_CODES.ENOENT]}),mknod:(function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)}),rename:(function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir}),unlink:(function(parent,name){delete parent.contents[name]}),rmdir:(function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete parent.contents[name]}),readdir:(function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node}),readlink:(function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return node.link})},stream_ops:{read:(function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size}),write:(function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position}),allocate:(function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(ERRNO_CODES.ENOMEM)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0})}};var IDBFS={dbs:{},indexedDB:(function(){if(typeof indexedDB!==\"undefined\")return indexedDB;var ret=null;if(typeof window===\"object\")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,\"IDBFS used, but indexedDB not supported\");return ret}),DB_VERSION:21,DB_STORE_NAME:\"FILE_DATA\",mount:(function(mount){return MEMFS.mount.apply(null,arguments)}),syncfs:(function(mount,populate,callback){IDBFS.getLocalSet(mount,(function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,(function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)}))}))}),getDB:(function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}if(!req){return callback(\"Unable to connect to IndexedDB\")}req.onupgradeneeded=(function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains(\"timestamp\")){fileStore.createIndex(\"timestamp\",\"timestamp\",{unique:false})}});req.onsuccess=(function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),getLocalSet:(function(mount,callback){var entries={};function isRealDir(p){return p!==\".\"&&p!==\"..\"}function toAbsolute(root){return(function(p){return PATH.join2(root,p)})}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:\"local\",entries:entries})}),getRemoteSet:(function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,(function(err,db){if(err)return callback(err);try{var transaction=db.transaction([IDBFS.DB_STORE_NAME],\"readonly\");transaction.onerror=(function(e){callback(this.error);e.preventDefault()});var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index(\"timestamp\");index.openKeyCursor().onsuccess=(function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:\"remote\",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()})}catch(e){return callback(e)}}))}),loadLocalEntry:(function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error(\"node type not supported\"))}}),storeLocalEntry:(function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{canOwn:true})}else{return callback(new Error(\"node type not supported\"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)}),removeLocalEntry:(function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)}),loadRemoteEntry:(function(store,path,callback){var req=store.get(path);req.onsuccess=(function(event){callback(null,event.target.result)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),storeRemoteEntry:(function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),removeRemoteEntry:(function(store,path,callback){var req=store.delete(path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),reconcile:(function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach((function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}}));var remove=[];Object.keys(dst.entries).forEach((function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}}));if(!total){return callback(null)}var completed=0;var db=src.type===\"remote\"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],\"readwrite\");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=total){return callback(null)}}transaction.onerror=(function(e){done(this.error);e.preventDefault()});create.sort().forEach((function(path){if(dst.type===\"local\"){IDBFS.loadRemoteEntry(store,path,(function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)}))}else{IDBFS.loadLocalEntry(path,(function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)}))}}));remove.sort().reverse().forEach((function(path){if(dst.type===\"local\"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}}))})};var NODEFS={isWindows:false,staticInit:(function(){NODEFS.isWindows=!!process.platform.match(/^win/);var flags=process[\"binding\"](\"constants\");if(flags[\"fs\"]){flags=flags[\"fs\"]}NODEFS.flagsForNodeMap={\"1024\":flags[\"O_APPEND\"],\"64\":flags[\"O_CREAT\"],\"128\":flags[\"O_EXCL\"],\"0\":flags[\"O_RDONLY\"],\"2\":flags[\"O_RDWR\"],\"4096\":flags[\"O_SYNC\"],\"512\":flags[\"O_TRUNC\"],\"1\":flags[\"O_WRONLY\"]}}),bufferFrom:(function(arrayBuffer){return Buffer.alloc?Buffer.from(arrayBuffer):new Buffer(arrayBuffer)}),mount:(function(mount){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,\"/\",NODEFS.getMode(mount.opts.root),0)}),createNode:(function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node}),getMode:(function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&292)>>2}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return stat.mode}),realPath:(function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)}),flagsForNode:(function(flags){flags&=~2097152;flags&=~2048;flags&=~32768;flags&=~524288;var newFlags=0;for(var k in NODEFS.flagsForNodeMap){if(flags&k){newFlags|=NODEFS.flagsForNodeMap[k];flags^=k}}if(!flags){return newFlags}else{throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}}),node_ops:{getattr:(function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}}),setattr:(function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),lookup:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)}),mknod:(function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,\"\",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return node}),rename:(function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),unlink:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),rmdir:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readdir:(function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),symlink:(function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readlink:(function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}})},stream_ops:{open:(function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsForNode(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),close:(function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),read:(function(stream,buffer,offset,length,position){if(length===0)return 0;try{return fs.readSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),write:(function(stream,buffer,offset,length,position){try{return fs.writeSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:(function(mount){assert(ENVIRONMENT_IS_WORKER);if(!WORKERFS.reader)WORKERFS.reader=new FileReaderSync;var root=WORKERFS.createNode(null,\"/\",WORKERFS.DIR_MODE,0);var createdParents={};function ensureParent(path){var parts=path.split(\"/\");var parent=root;for(var i=0;i<parts.length-1;i++){var curr=parts.slice(0,i+1).join(\"/\");if(!createdParents[curr]){createdParents[curr]=WORKERFS.createNode(parent,parts[i],WORKERFS.DIR_MODE,0)}parent=createdParents[curr]}return parent}function base(path){var parts=path.split(\"/\");return parts[parts.length-1]}Array.prototype.forEach.call(mount.opts[\"files\"]||[],(function(file){WORKERFS.createNode(ensureParent(file.name),base(file.name),WORKERFS.FILE_MODE,0,file,file.lastModifiedDate)}));(mount.opts[\"blobs\"]||[]).forEach((function(obj){WORKERFS.createNode(ensureParent(obj[\"name\"]),base(obj[\"name\"]),WORKERFS.FILE_MODE,0,obj[\"data\"])}));(mount.opts[\"packages\"]||[]).forEach((function(pack){pack[\"metadata\"].files.forEach((function(file){var name=file.filename.substr(1);WORKERFS.createNode(ensureParent(name),base(name),WORKERFS.FILE_MODE,0,pack[\"blob\"].slice(file.start,file.end))}))}));return root}),createNode:(function(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=WORKERFS.node_ops;node.stream_ops=WORKERFS.stream_ops;node.timestamp=(mtime||new Date).getTime();assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE);if(mode===WORKERFS.FILE_MODE){node.size=contents.size;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return node}),node_ops:{getattr:(function(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}}),lookup:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}),mknod:(function(parent,name,mode,dev){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rename:(function(oldNode,newDir,newName){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),unlink:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rmdir:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readdir:(function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newName,oldPath){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readlink:(function(node){throw new FS.ErrnoError(ERRNO_CODES.EPERM)})},stream_ops:{read:(function(stream,buffer,offset,length,position){if(position>=stream.node.size)return 0;var chunk=stream.node.contents.slice(position,position+length);var ab=WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab),offset);return chunk.size}),write:(function(stream,buffer,offset,length,position){throw new FS.ErrnoError(ERRNO_CODES.EIO)}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};STATICTOP+=16;STATICTOP+=16;STATICTOP+=16;var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:(function(e){if(!(e instanceof FS.ErrnoError))throw e+\" : \"+stackTrace();return ___setErrNo(e.errno)}),lookupPath:(function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}var parts=PATH.normalizeArray(path.split(\"/\").filter((function(p){return!!p})),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}}}}return{path:current_path,node:current}}),getPath:(function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}}),hashName:(function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length}),hashAddNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node}),hashRemoveNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}}),lookupNode:(function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)}),createNode:(function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=(function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev});FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:(function(){return(this.mode&readMode)===readMode}),set:(function(val){val?this.mode|=readMode:this.mode&=~readMode})},write:{get:(function(){return(this.mode&writeMode)===writeMode}),set:(function(val){val?this.mode|=writeMode:this.mode&=~writeMode})},isFolder:{get:(function(){return FS.isDir(this.mode)})},isDevice:{get:(function(){return FS.isChrdev(this.mode)})}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node}),destroyNode:(function(node){FS.hashRemoveNode(node)}),isRoot:(function(node){return node===node.parent}),isMountpoint:(function(node){return!!node.mounted}),isFile:(function(mode){return(mode&61440)===32768}),isDir:(function(mode){return(mode&61440)===16384}),isLink:(function(mode){return(mode&61440)===40960}),isChrdev:(function(mode){return(mode&61440)===8192}),isBlkdev:(function(mode){return(mode&61440)===24576}),isFIFO:(function(mode){return(mode&61440)===4096}),isSocket:(function(mode){return(mode&49152)===49152}),flagModes:{\"r\":0,\"rs\":1052672,\"r+\":2,\"w\":577,\"wx\":705,\"xw\":705,\"w+\":578,\"wx+\":706,\"xw+\":706,\"a\":1089,\"ax\":1217,\"xa\":1217,\"a+\":1090,\"ax+\":1218,\"xa+\":1218},modeStringToFlags:(function(str){var flags=FS.flagModes[str];if(typeof flags===\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags}),flagsToPermissionString:(function(flag){var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms}),nodePermissions:(function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf(\"r\")!==-1&&!(node.mode&292)){return ERRNO_CODES.EACCES}else if(perms.indexOf(\"w\")!==-1&&!(node.mode&146)){return ERRNO_CODES.EACCES}else if(perms.indexOf(\"x\")!==-1&&!(node.mode&73)){return ERRNO_CODES.EACCES}return 0}),mayLookup:(function(dir){var err=FS.nodePermissions(dir,\"x\");if(err)return err;if(!dir.node_ops.lookup)return ERRNO_CODES.EACCES;return 0}),mayCreate:(function(dir,name){try{var node=FS.lookupNode(dir,name);return ERRNO_CODES.EEXIST}catch(e){}return FS.nodePermissions(dir,\"wx\")}),mayDelete:(function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,\"wx\");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return ERRNO_CODES.ENOTDIR}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return ERRNO_CODES.EBUSY}}else{if(FS.isDir(node.mode)){return ERRNO_CODES.EISDIR}}return 0}),mayOpen:(function(node,flags){if(!node){return ERRNO_CODES.ENOENT}if(FS.isLink(node.mode)){return ERRNO_CODES.ELOOP}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return ERRNO_CODES.EISDIR}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))}),MAX_OPEN_FDS:4096,nextfd:(function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(ERRNO_CODES.EMFILE)}),getStream:(function(fd){return FS.streams[fd]}),createStream:(function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=(function(){});FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:(function(){return this.node}),set:(function(val){this.node=val})},isRead:{get:(function(){return(this.flags&2097155)!==1})},isWrite:{get:(function(){return(this.flags&2097155)!==0})},isAppend:{get:(function(){return this.flags&1024})}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream}),closeStream:(function(fd){FS.streams[fd]=null}),chrdev_stream_ops:{open:(function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}}),llseek:(function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)})},major:(function(dev){return dev>>8}),minor:(function(dev){return dev&255}),makedev:(function(ma,mi){return ma<<8|mi}),registerDevice:(function(dev,ops){FS.devices[dev]={stream_ops:ops}}),getDevice:(function(dev){return FS.devices[dev]}),getMounts:(function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts}),syncfs:(function(populate,callback){if(typeof populate===\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(err){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return callback(err)}function done(err){if(err){if(!done.errored){done.errored=true;return doCallback(err)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach((function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)}))}),mount:(function(type,opts,mountpoint){var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot}),unmount:(function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach((function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}}));node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)}),lookup:(function(parent,name){return parent.node_ops.lookup(parent,name)}),mknod:(function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.mknod(parent,name,mode,dev)}),create:(function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)}),mkdir:(function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)}),mkdirTree:(function(path,mode){var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=ERRNO_CODES.EEXIST)throw e}}}),mkdev:(function(path,mode,dev){if(typeof dev===\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)}),symlink:(function(oldpath,newpath){if(!PATH.resolve(oldpath)){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.symlink(parent,newname,oldpath)}),rename:(function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!old_dir||!new_dir)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(ERRNO_CODES.EXDEV)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,\"w\");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate[\"willMovePath\"]){FS.trackingDelegate[\"willMovePath\"](old_path,new_path)}}catch(e){console.log(\"FS.trackingDelegate['willMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate[\"onMovePath\"])FS.trackingDelegate[\"onMovePath\"](old_path,new_path)}catch(e){console.log(\"FS.trackingDelegate['onMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message)}}),rmdir:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path)}}catch(e){console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path)}catch(e){console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message)}}),readdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}return node.node_ops.readdir(node)}),unlink:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path)}}catch(e){console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path)}catch(e){console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message)}}),readlink:(function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!link.node_ops.readlink){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return PATH.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))}),stat:(function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!node.node_ops.getattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return node.node_ops.getattr(node)}),lstat:(function(path){return FS.stat(path,true)}),chmod:(function(path,mode,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})}),lchmod:(function(path,mode){FS.chmod(path,mode,true)}),fchmod:(function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chmod(stream.node,mode)}),chown:(function(path,uid,gid,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{timestamp:Date.now()})}),lchown:(function(path,uid,gid){FS.chown(path,uid,gid,true)}),fchown:(function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chown(stream.node,uid,gid)}),truncate:(function(path,len){if(len<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.nodePermissions(node,\"w\");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})}),ftruncate:(function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}FS.truncate(stream.node,len)}),utime:(function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})}),open:(function(path,flags,mode,fd_start,fd_end){if(path===\"\"){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}flags=typeof flags===\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode===\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path===\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(ERRNO_CODES.EEXIST)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;Module[\"printErr\"](\"read file: \"+path)}}try{if(FS.trackingDelegate[\"onOpenFile\"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate[\"onOpenFile\"](path,trackingFlags)}}catch(e){console.log(\"FS.trackingDelegate['onOpenFile']('\"+path+\"', flags) threw an exception: \"+e.message)}return stream}),close:(function(stream){if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}}),llseek:(function(stream,offset,whence){if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position}),read:(function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.read){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead}),write:(function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.write){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate[\"onWriteToFile\"])FS.trackingDelegate[\"onWriteToFile\"](stream.path)}catch(e){console.log(\"FS.trackingDelegate['onWriteToFile']('\"+path+\"') threw an exception: \"+e.message)}return bytesWritten}),allocate:(function(stream,offset,length){if(offset<0||length<=0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}stream.stream_ops.allocate(stream,offset,length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EACCES)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)}),munmap:(function(stream){return 0}),ioctl:(function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(ERRNO_CODES.ENOTTY)}return stream.stream_ops.ioctl(stream,cmd,arg)}),readFile:(function(path,opts){opts=opts||{};opts.flags=opts.flags||\"r\";opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret}),writeFile:(function(path,data,opts){opts=opts||{};opts.flags=opts.flags||\"w\";var stream=FS.open(path,opts.flags,opts.mode);if(typeof data===\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)}),cwd:(function(){return FS.currentPath}),chdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var err=FS.nodePermissions(lookup.node,\"x\");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path}),createDefaultDirectories:(function(){FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")}),createDefaultDevices:(function(){FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:(function(){return 0}),write:(function(stream,buffer,offset,length,pos){return length})});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device;if(typeof crypto!==\"undefined\"){var randomBuffer=new Uint8Array(1);random_device=(function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]})}else if(ENVIRONMENT_IS_NODE){random_device=(function(){return require(\"crypto\")[\"randomBytes\"](1)[0]})}else{random_device=(function(){return Math.random()*256|0})}FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")}),createSpecialDirectories:(function(){FS.mkdir(\"/proc\");FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:(function(){var node=FS.createNode(\"/proc/self\",\"fd\",16384|511,73);node.node_ops={lookup:(function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:(function(){return stream.path})}};ret.parent=ret;return ret})};return node})},{},\"/proc/self/fd\")}),createStandardStreams:(function(){if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",\"r\");assert(stdin.fd===0,\"invalid handle for stdin (\"+stdin.fd+\")\");var stdout=FS.open(\"/dev/stdout\",\"w\");assert(stdout.fd===1,\"invalid handle for stdout (\"+stdout.fd+\")\");var stderr=FS.open(\"/dev/stderr\",\"w\");assert(stderr.fd===2,\"invalid handle for stderr (\"+stderr.fd+\")\")}),ensureErrnoError:(function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=(function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}});this.setErrno(errno);this.message=ERRNO_MESSAGES[errno];if(this.stack)Object.defineProperty(this,\"stack\",{value:(new Error).stack,writable:true})};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach((function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"}))}),staticInit:(function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS,\"IDBFS\":IDBFS,\"NODEFS\":NODEFS,\"WORKERFS\":WORKERFS}}),init:(function(input,output,error){assert(!FS.init.initialized,\"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\");FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()}),quit:(function(){FS.init.initialized=false;var fflush=Module[\"_fflush\"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}}),getMode:(function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode}),joinPath:(function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]==\"/\")path=path.substr(1);return path}),absolutePath:(function(relative,base){return PATH.resolve(base,relative)}),standardizePath:(function(path){return PATH.normalize(path)}),findObject:(function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}}),analyzePath:(function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret}),createFolder:(function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)}),createPath:(function(parent,path,canRead,canWrite){parent=typeof parent===\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current}),createFile:(function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)}),createDataFile:(function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data===\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,\"w\");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node}),createDevice:(function(parent,name,input,output){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:(function(stream){stream.seekable=false}),close:(function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}}),read:(function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})});return FS.mkdev(path,mode,dev)}),createLink:(function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);return FS.symlink(target,path)}),forceLoadFile:(function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!==\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(Module[\"read\"]){try{obj.contents=intArrayFromString(Module[\"read\"](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}if(!success)___setErrNo(ERRNO_CODES.EIO);return success}),createLazyFile:(function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(function(from,to){if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);if(typeof Uint8Array!=\"undefined\")xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||\"\",true)}});var lazyArray=this;lazyArray.setDataGetter((function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]===\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]===\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]}));if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!==\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._length})},chunkSize:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize})}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:(function(){return this.contents.length})}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach((function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return fn.apply(null,arguments)}}));stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node}),createPreloadedFile:(function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module[\"preloadPlugins\"].forEach((function(plugin){if(handled)return;if(plugin[\"canHandle\"](fullname)){plugin[\"handle\"](byteArray,fullname,finish,(function(){if(onerror)onerror();removeRunDependency(dep)}));handled=true}}));if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){Browser.asyncLoad(url,(function(byteArray){processData(byteArray)}),onerror)}else{processData(url)}}),indexedDB:(function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}),DB_NAME:(function(){return\"EM_FS_\"+window.location.pathname}),DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror}),loadFilesFromDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror})};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:(function(dirfd,path){if(path[0]!==\"/\"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);dir=dirstream.path}path=PATH.join2(dir,path)}return path}),doStat:(function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-ERRNO_CODES.ENOTDIR}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;HEAP32[buf+36>>2]=stat.size;HEAP32[buf+40>>2]=4096;HEAP32[buf+44>>2]=stat.blocks;HEAP32[buf+48>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+52>>2]=0;HEAP32[buf+56>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ino;return 0}),doMsync:(function(addr,stream,len,flags){var buffer=new Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags)}),doMkdir:(function(path,mode){path=PATH.normalize(path);if(path[path.length-1]===\"/\")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0}),doMknod:(function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-ERRNO_CODES.EINVAL}FS.mknod(path,mode,dev);return 0}),doReadlink:(function(path,buf,bufsize){if(bufsize<=0)return-ERRNO_CODES.EINVAL;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len}),doAccess:(function(path,amode){if(amode&~7){return-ERRNO_CODES.EINVAL}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;var perms=\"\";if(amode&4)perms+=\"r\";if(amode&2)perms+=\"w\";if(amode&1)perms+=\"x\";if(perms&&FS.nodePermissions(node,perms)){return-ERRNO_CODES.EACCES}return 0}),doDup:(function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd}),doReadv:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret}),doWritev:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret}),varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),getStreamFromFD:(function(){var stream=FS.getStream(SYSCALLS.get());if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return stream}),getSocketFromFD:(function(){var socket=SOCKFS.getSocket(SYSCALLS.get());if(!socket)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return socket}),getSocketAddress:(function(allowNull){var addrp=SYSCALLS.get(),addrlen=SYSCALLS.get();if(allowNull&&addrp===0)return null;var info=__read_sockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall145(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doReadv(stream,iov,iovcnt)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doWritev(stream,iov,iovcnt)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall221(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),cmd=SYSCALLS.get();switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-ERRNO_CODES.EINVAL}var newStream;newStream=FS.open(stream.path,stream.flags,0,arg);return newStream.fd};case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0};case 12:case 12:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0};case 13:case 14:case 13:case 14:return 0;case 16:case 8:return-ERRNO_CODES.EINVAL;case 9:___setErrNo(ERRNO_CODES.EINVAL);return-1;default:{return-ERRNO_CODES.EINVAL}}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall5(which,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(),flags=SYSCALLS.get(),mode=SYSCALLS.get();var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),op=SYSCALLS.get();switch(op){case 21509:case 21505:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21519:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0};case 21520:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return-ERRNO_CODES.EINVAL};case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)};case 21523:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};default:abort(\"bad ioctl syscall \"+op)}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall91(which,varargs){SYSCALLS.varargs=varargs;try{var addr=SYSCALLS.get(),len=SYSCALLS.get();var info=SYSCALLS.mappings[addr];if(!info)return 0;if(len===info.len){var stream=FS.getStream(info.fd);SYSCALLS.doMsync(addr,stream,len,info.flags);FS.munmap(stream);SYSCALLS.mappings[addr]=null;if(info.allocated){_free(info.malloc)}}return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var cttz_i8=allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],\"i8\",ALLOC_STATIC);function ___unlock(){}var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return(new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\"))(body)}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}function __emval_register(value){switch(value){case undefined:{return 1};case null:{return 2};case true:{return 3};case false:{return 4};default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,(function(message){this.name=errorName;this.message=message;var stack=(new Error(message)).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}}));errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=(function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}});return errorClass}var PureVirtualError=undefined;function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}var delayFunction=undefined;function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function registerInheritedInstance(class_,ptr,instance){ptr=getBasestPointer(class_,ptr);if(registeredInstances.hasOwnProperty(ptr)){throwBindingError(\"Tried to register registered instance: \"+ptr)}else{registeredInstances[ptr]=instance}}function requireHandle(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value}var registeredTypes={};function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function unregisterInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);if(registeredInstances.hasOwnProperty(ptr)){delete registeredInstances[ptr]}else{throwBindingError(\"Tried to unregister unregistered instance: \"+ptr)}}function __embind_create_inheriting_constructor(constructorName,wrapperType,properties){constructorName=readLatin1String(constructorName);wrapperType=requireRegisteredType(wrapperType,\"wrapper\");properties=requireHandle(properties);var arraySlice=[].slice;var registeredClass=wrapperType.registeredClass;var wrapperPrototype=registeredClass.instancePrototype;var baseClass=registeredClass.baseClass;var baseClassPrototype=baseClass.instancePrototype;var baseConstructor=registeredClass.baseClass.constructor;var ctor=createNamedFunction(constructorName,(function(){registeredClass.baseClass.pureVirtualFunctions.forEach((function(name){if(this[name]===baseClassPrototype[name]){throw new PureVirtualError(\"Pure virtual function \"+name+\" must be implemented in JavaScript\")}}).bind(this));Object.defineProperty(this,\"__parent\",{value:wrapperPrototype});this[\"__construct\"].apply(this,arraySlice.call(arguments))}));wrapperPrototype[\"__construct\"]=function __construct(){if(this===wrapperPrototype){throwBindingError(\"Pass correct 'this' to __construct\")}var inner=baseConstructor[\"implement\"].apply(undefined,[this].concat(arraySlice.call(arguments)));var $$=inner.$$;inner[\"notifyOnDestruction\"]();$$.preservePointerOnDelete=true;Object.defineProperties(this,{$$:{value:$$}});registerInheritedInstance(registeredClass,$$.ptr,this)};wrapperPrototype[\"__destruct\"]=function __destruct(){if(this===wrapperPrototype){throwBindingError(\"Pass correct 'this' to __destruct\")}unregisterInheritedInstance(registeredClass,this.$$.ptr)};ctor.prototype=Object.create(wrapperPrototype);for(var p in properties){ctor.prototype[p]=properties[p]}return __emval_register(ctor)}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}var awaitingDependencies={};var typeDependencies={};var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach((function(type){typeDependencies[type]=dependentTypes}));function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push((function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}}))}}));if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach((function(cb){cb()}))}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(wt){return!!wt}),\"toWireType\":(function(destructors,o){return o?trueValue:falseValue}),\"argPackAdvance\":8,\"readValueFromPointer\":(function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])}),destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}});clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function runDestructor(handle){var $$=handle.$$;if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}this.$$.count.value-=1;var toDelete=0===this.$$.count.value;if(toDelete){runDestructor(this)}if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=(function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)});proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,__emval_register((function(){clonedHandle[\"delete\"]()})));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return Object.create(prototype,{$$:{value:record}})}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(dynCall){var args=[];for(var i=1;i<signature.length;++i){args.push(\"a\"+i)}var name=\"dynCall_\"+signature+\"_\"+rawFunction;var body=\"return function \"+name+\"(\"+args.join(\", \")+\") {\\n\";body+=\"    return dynCall(rawFunction\"+(args.length?\", \":\"\")+args.join(\", \")+\");\\n\";body+=\"};\\n\";return(new Function(\"dynCall\",\"rawFunction\",body))(dynCall,rawFunction)}var fp;if(Module[\"FUNCTION_TABLE_\"+signature]!==undefined){fp=Module[\"FUNCTION_TABLE_\"+signature][rawFunction]}else if(typeof FUNCTION_TABLE!==\"undefined\"){fp=FUNCTION_TABLE[rawFunction]}else{var dc=Module[\"asm\"][\"dynCall_\"+signature];if(dc===undefined){dc=Module[\"asm\"][\"dynCall_\"+signature.replace(/f/g,\"d\")];if(dc===undefined){throwBindingError(\"No dynCall invoker for signature: \"+signature)}}fp=makeDynCaller(dc)}if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,(function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])}));whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],(function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,(function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)}));var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]}))}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",(function(){}));dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function __embind_register_class_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,fn){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],(function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.constructor;if(undefined===proto[methodName]){unboundTypesHandler.argCount=argCount-1;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-1]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,(function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));var func=craftInvokerFunction(humanName,invokerArgsArray,null,rawInvoker,fn);if(undefined===proto[methodName].overloadTable){proto[methodName]=func}else{proto[methodName].overloadTable[argCount-1]=func}return[]}));return[]}))}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],(function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=function unboundTypeHandler(){throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,(function(argTypes){classType.registeredClass.constructor_body[argCount-1]=function constructor_body(){if(arguments.length!==argCount-1){throwBindingError(humanName+\" called with \"+arguments.length+\" arguments, expected \"+(argCount-1))}var destructors=[];var args=new Array(argCount);args[0]=rawConstructor;for(var i=1;i<argCount;++i){args[i]=argTypes[i][\"toWireType\"](destructors,arguments[i-1])}var ptr=invoker.apply(null,args);runDestructors(destructors);return argTypes[0][\"fromWireType\"](ptr)};return[]}));return[]}))}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],(function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,(function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]}));return[]}))}function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv}),\"toWireType\":(function(destructors,value){return __emval_register(value)}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function enumReadValueFromPointer(name,shift,signed){switch(shift){case 0:return(function(pointer){var heap=signed?HEAP8:HEAPU8;return this[\"fromWireType\"](heap[pointer])});case 1:return(function(pointer){var heap=signed?HEAP16:HEAPU16;return this[\"fromWireType\"](heap[pointer>>1])});case 2:return(function(pointer){var heap=signed?HEAP32:HEAPU32;return this[\"fromWireType\"](heap[pointer>>2])});default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_enum(rawType,name,size,isSigned){var shift=getShiftFromSize(size);name=readLatin1String(name);function ctor(){}ctor.values={};registerType(rawType,{name:name,constructor:ctor,\"fromWireType\":(function(c){return this.constructor.values[c]}),\"toWireType\":(function(destructors,c){return c.value}),\"argPackAdvance\":8,\"readValueFromPointer\":enumReadValueFromPointer(name,shift,isSigned),destructorFunction:null});exposePublicSymbol(name,ctor)}function __embind_register_enum_value(rawEnumType,name,enumValue){var enumType=requireRegisteredType(rawEnumType,\"enum\");name=readLatin1String(name);var Enum=enumType.constructor;var Value=Object.create(enumType.constructor.prototype,{value:{value:enumValue},constructor:{value:createNamedFunction(enumType.name+\"_\"+name,(function(){}))}});Enum.values[enumValue]=Value;Enum[name]=Value}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return(function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])});case 3:return(function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])});default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(value){return value}),\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value}),\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=(function(value){return value});if(minRange===0){var bitshift=32-8*size;fromWireType=(function(value){return value<<bitshift>>>bitshift})}var isUnsignedType=name.indexOf(\"unsigned\")!=-1;registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return isUnsignedType?value>>>0:value|0}),\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap[\"buffer\"],data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(value){var length=HEAPU32[value>>2];var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}_free(value);return a.join(\"\")}),\"toWireType\":(function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}function getTAElement(ta,index){return ta[index]}function getStringElement(string,index){return string.charCodeAt(index)}var getElement;if(value instanceof Uint8Array){getElement=getTAElement}else if(value instanceof Uint8ClampedArray){getElement=getTAElement}else if(value instanceof Int8Array){getElement=getTAElement}else if(typeof value===\"string\"){getElement=getStringElement}else{throwBindingError(\"Cannot pass non-string to std::string\")}var length=value.length;var ptr=_malloc(4+length);HEAPU32[ptr>>2]=length;for(var i=0;i<length;++i){var charCode=getElement(value,i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var getHeap,shift;if(charSize===2){getHeap=(function(){return HEAPU16});shift=1}else if(charSize===4){getHeap=(function(){return HEAPU32});shift=2}registerType(rawType,{name:name,\"fromWireType\":(function(value){var HEAP=getHeap();var length=HEAPU32[value>>2];var a=new Array(length);var start=value+4>>shift;for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAP[start+i])}_free(value);return a.join(\"\")}),\"toWireType\":(function(destructors,value){var HEAP=getHeap();var length=value.length;var ptr=_malloc(4+length*charSize);HEAPU32[ptr>>2]=length;var start=ptr+4>>shift;for(var i=0;i<length;++i){HEAP[start+i]=value.charCodeAt(i)}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":(function(){return undefined}),\"toWireType\":(function(destructors,o){return undefined})})}function __emval_as(handle,returnType,destructorsRef){handle=requireHandle(handle);returnType=requireRegisteredType(returnType,\"emval::as\");var destructors=[];var rd=__emval_register(destructors);HEAP32[destructorsRef>>2]=rd;return returnType[\"toWireType\"](destructors,handle)}function __emval_allocateDestructors(destructorsRef){var destructors=[];HEAP32[destructorsRef>>2]=__emval_register(destructors);return destructors}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}else{return symbol}}var emval_methodCallers=[];function __emval_call_method(caller,handle,methodName,destructorsRef,args){caller=emval_methodCallers[caller];handle=requireHandle(handle);methodName=getStringOrSymbol(methodName);return caller(handle,methodName,__emval_allocateDestructors(destructorsRef),args)}function __emval_call_void_method(caller,handle,methodName,args){caller=emval_methodCallers[caller];handle=requireHandle(handle);methodName=getStringOrSymbol(methodName);caller(handle,methodName,null,args)}function __emval_addMethodCaller(caller){var id=emval_methodCallers.length;emval_methodCallers.push(caller);return id}function __emval_lookupTypes(argCount,argTypes,argWireTypes){var a=new Array(argCount);for(var i=0;i<argCount;++i){a[i]=requireRegisteredType(HEAP32[(argTypes>>2)+i],\"parameter \"+i)}return a}function __emval_get_method_caller(argCount,argTypes){var types=__emval_lookupTypes(argCount,argTypes);var retType=types[0];var signatureName=retType.name+\"_$\"+types.slice(1).map((function(t){return t.name})).join(\"_\")+\"$\";var params=[\"retType\"];var args=[retType];var argsList=\"\";for(var i=0;i<argCount-1;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;params.push(\"argType\"+i);args.push(types[1+i])}var functionName=makeLegalFunctionName(\"methodCaller_\"+signatureName);var functionBody=\"return function \"+functionName+\"(handle, name, destructors, args) {\\n\";var offset=0;for(var i=0;i<argCount-1;++i){functionBody+=\"    var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args\"+(offset?\"+\"+offset:\"\")+\");\\n\";offset+=types[i+1][\"argPackAdvance\"]}functionBody+=\"    var rv = handle[name](\"+argsList+\");\\n\";for(var i=0;i<argCount-1;++i){if(types[i+1][\"deleteObject\"]){functionBody+=\"    argType\"+i+\".deleteObject(arg\"+i+\");\\n\"}}if(!retType.isVoid){functionBody+=\"    return retType.toWireType(destructors, rv);\\n\"}functionBody+=\"};\\n\";params.push(functionBody);var invokerFunction=new_(Function,params).apply(null,args);return __emval_addMethodCaller(invokerFunction)}function __emval_get_property(handle,key){handle=requireHandle(handle);key=requireHandle(key);return __emval_register(handle[key])}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function __emval_new_cstring(v){return __emval_register(getStringOrSymbol(v))}function __emval_run_destructors(handle){var destructors=emval_handle_array[handle].value;runDestructors(destructors);__emval_decref(handle)}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return __emval_register(v)}function __virgil_throw_error(ptr){throw new Error(readLatin1String(ptr))}function _abort(){Module[\"abort\"]()}var _environ=STATICTOP;STATICTOP+=16;function ___buildEnvironment(env){var MAX_ENV_VALUES=64;var TOTAL_ENV_SIZE=1024;var poolPtr;var envPtr;if(!___buildEnvironment.called){___buildEnvironment.called=true;ENV[\"USER\"]=ENV[\"LOGNAME\"]=\"web_user\";ENV[\"PATH\"]=\"/\";ENV[\"PWD\"]=\"/\";ENV[\"HOME\"]=\"/home/web_user\";ENV[\"LANG\"]=\"C.UTF-8\";ENV[\"_\"]=Module[\"thisProgram\"];poolPtr=staticAlloc(TOTAL_ENV_SIZE);envPtr=staticAlloc(MAX_ENV_VALUES*4);HEAP32[envPtr>>2]=poolPtr;HEAP32[_environ>>2]=envPtr}else{envPtr=HEAP32[_environ>>2];poolPtr=HEAP32[envPtr>>2]}var strings=[];var totalSize=0;for(var key in env){if(typeof env[key]===\"string\"){var line=key+\"=\"+env[key];strings.push(line);totalSize+=line.length}}if(totalSize>TOTAL_ENV_SIZE){throw new Error(\"Environment size exceeded TOTAL_ENV_SIZE!\")}var ptrSize=4;for(var i=0;i<strings.length;i++){var line=strings[i];writeAsciiToMemory(line,poolPtr);HEAP32[envPtr+i*ptrSize>>2]=poolPtr;poolPtr+=line.length+1}HEAP32[envPtr+strings.length*ptrSize>>2]=0}var ENV={};function _getenv(name){if(name===0)return 0;name=Pointer_stringify(name);if(!ENV.hasOwnProperty(name))return 0;if(_getenv.ret)_free(_getenv.ret);_getenv.ret=allocateUTF8(ENV[name]);return _getenv.ret}function _gettimeofday(ptr){var now=Date.now();HEAP32[ptr>>2]=now/1e3|0;HEAP32[ptr+4>>2]=now%1e3*1e3|0;return 0}var _llvm_ceil_f64=Math_ceil;function _llvm_eh_typeid_for(type){return type}function _llvm_trap(){abort(\"trap!\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}function _pthread_cond_wait(){return 0}var PTHREAD_SPECIFIC={};function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Module[\"dynCall_v\"](func);_pthread_once.seen[ptr]=1}function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]);return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?Pointer_stringify(tm_zone):\"\"};var pattern=Pointer_stringify(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value===\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={\"%a\":(function(date){return WEEKDAYS[date.tm_wday].substring(0,3)}),\"%A\":(function(date){return WEEKDAYS[date.tm_wday]}),\"%b\":(function(date){return MONTHS[date.tm_mon].substring(0,3)}),\"%B\":(function(date){return MONTHS[date.tm_mon]}),\"%C\":(function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)}),\"%d\":(function(date){return leadingNulls(date.tm_mday,2)}),\"%e\":(function(date){return leadingSomething(date.tm_mday,2,\" \")}),\"%g\":(function(date){return getWeekBasedYear(date).toString().substring(2)}),\"%G\":(function(date){return getWeekBasedYear(date)}),\"%H\":(function(date){return leadingNulls(date.tm_hour,2)}),\"%I\":(function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)}),\"%j\":(function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)}),\"%m\":(function(date){return leadingNulls(date.tm_mon+1,2)}),\"%M\":(function(date){return leadingNulls(date.tm_min,2)}),\"%n\":(function(){return\"\\n\"}),\"%p\":(function(date){if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}else{return\"PM\"}}),\"%S\":(function(date){return leadingNulls(date.tm_sec,2)}),\"%t\":(function(){return\"\\t\"}),\"%u\":(function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()||7}),\"%U\":(function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?\"01\":\"00\"}),\"%V\":(function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return\"53\"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return\"01\"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)}),\"%w\":(function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()}),\"%W\":(function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?\"01\":\"00\"}),\"%y\":(function(date){return(date.tm_year+1900).toString().substring(2)}),\"%Y\":(function(date){return date.tm_year+1900}),\"%z\":(function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)}),\"%Z\":(function(date){return date.tm_zone}),\"%%\":(function(){return\"%\"})};for(var rule in EXPANSION_RULES_2){if(pattern.indexOf(rule)>=0){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}FS.staticInit();__ATINIT__.unshift((function(){if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init()}));__ATMAIN__.push((function(){FS.ignorePermissions=false}));__ATEXIT__.push((function(){FS.quit()}));__ATINIT__.unshift((function(){TTY.init()}));__ATEXIT__.push((function(){TTY.shutdown()}));if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var NODEJS_PATH=require(\"path\");NODEFS.staticInit()}init_emval();PureVirtualError=Module[\"PureVirtualError\"]=extendError(Error,\"PureVirtualError\");embind_init_charCodes();init_embind();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_ClassHandle();init_RegisteredPointer();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");___buildEnvironment(ENV);DYNAMICTOP_PTR=staticAlloc(4);STACK_BASE=STACKTOP=alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;var ASSERTIONS=false;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){if(ASSERTIONS){assert(false,\"Character code \"+chr+\" (\"+String.fromCharCode(chr)+\")  at offset \"+i+\" not in 0x00-0xFF.\")}chr&=255}ret.push(String.fromCharCode(chr))}return ret.join(\"\")}var decodeBase64=typeof atob===\"function\"?atob:(function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output});function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE===\"boolean\"&&ENVIRONMENT_IS_NODE){var buf;try{buf=Buffer.from(s,\"base64\")}catch(_){buf=new Buffer(s,\"base64\")}return new Uint8Array(buf.buffer,buf.byteOffset,buf.byteLength)}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}function invoke_diii(index,a1,a2,a3){try{return Module[\"dynCall_diii\"](index,a1,a2,a3)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_i(index){try{return Module[\"dynCall_i\"](index)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_ii(index,a1){try{return Module[\"dynCall_ii\"](index,a1)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iii(index,a1,a2){try{return Module[\"dynCall_iii\"](index,a1,a2)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiii(index,a1,a2,a3){try{return Module[\"dynCall_iiii\"](index,a1,a2,a3)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiii(index,a1,a2,a3,a4){try{return Module[\"dynCall_iiiii\"](index,a1,a2,a3,a4)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiiid(index,a1,a2,a3,a4,a5){try{return Module[\"dynCall_iiiiid\"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiiii(index,a1,a2,a3,a4,a5){try{return Module[\"dynCall_iiiiii\"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6){try{return Module[\"dynCall_iiiiiid\"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){try{return Module[\"dynCall_iiiiiii\"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7){try{return Module[\"dynCall_iiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){try{return Module[\"dynCall_iiiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){try{return Module[\"dynCall_iiiiiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){try{return Module[\"dynCall_iiiiiiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){try{return Module[\"dynCall_iiiiiiiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_v(index){try{Module[\"dynCall_v\"](index)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vi(index,a1){try{Module[\"dynCall_vi\"](index,a1)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vii(index,a1,a2){try{Module[\"dynCall_vii\"](index,a1,a2)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viii(index,a1,a2,a3){try{Module[\"dynCall_viii\"](index,a1,a2,a3)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiii(index,a1,a2,a3,a4){try{Module[\"dynCall_viiii\"](index,a1,a2,a3,a4)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiii(index,a1,a2,a3,a4,a5){try{Module[\"dynCall_viiiii\"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){try{Module[\"dynCall_viiiiii\"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7){try{Module[\"dynCall_viiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){try{Module[\"dynCall_viiiiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15){try{Module[\"dynCall_viiiiiiiiiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}Module.asmGlobalArg={\"Math\":Math,\"Int8Array\":Int8Array,\"Int16Array\":Int16Array,\"Int32Array\":Int32Array,\"Uint8Array\":Uint8Array,\"Uint16Array\":Uint16Array,\"Uint32Array\":Uint32Array,\"Float32Array\":Float32Array,\"Float64Array\":Float64Array,\"NaN\":NaN,\"Infinity\":Infinity};Module.asmLibraryArg={\"abort\":abort,\"assert\":assert,\"enlargeMemory\":enlargeMemory,\"getTotalMemory\":getTotalMemory,\"abortOnCannotGrowMemory\":abortOnCannotGrowMemory,\"invoke_diii\":invoke_diii,\"invoke_i\":invoke_i,\"invoke_ii\":invoke_ii,\"invoke_iii\":invoke_iii,\"invoke_iiii\":invoke_iiii,\"invoke_iiiii\":invoke_iiiii,\"invoke_iiiiid\":invoke_iiiiid,\"invoke_iiiiii\":invoke_iiiiii,\"invoke_iiiiiid\":invoke_iiiiiid,\"invoke_iiiiiii\":invoke_iiiiiii,\"invoke_iiiiiiii\":invoke_iiiiiiii,\"invoke_iiiiiiiii\":invoke_iiiiiiiii,\"invoke_iiiiiiiiiii\":invoke_iiiiiiiiiii,\"invoke_iiiiiiiiiiii\":invoke_iiiiiiiiiiii,\"invoke_iiiiiiiiiiiii\":invoke_iiiiiiiiiiiii,\"invoke_v\":invoke_v,\"invoke_vi\":invoke_vi,\"invoke_vii\":invoke_vii,\"invoke_viii\":invoke_viii,\"invoke_viiii\":invoke_viiii,\"invoke_viiiii\":invoke_viiiii,\"invoke_viiiiii\":invoke_viiiiii,\"invoke_viiiiiii\":invoke_viiiiiii,\"invoke_viiiiiiiiii\":invoke_viiiiiiiiii,\"invoke_viiiiiiiiiiiiiii\":invoke_viiiiiiiiiiiiiii,\"ClassHandle\":ClassHandle,\"ClassHandle_clone\":ClassHandle_clone,\"ClassHandle_delete\":ClassHandle_delete,\"ClassHandle_deleteLater\":ClassHandle_deleteLater,\"ClassHandle_isAliasOf\":ClassHandle_isAliasOf,\"ClassHandle_isDeleted\":ClassHandle_isDeleted,\"RegisteredClass\":RegisteredClass,\"RegisteredPointer\":RegisteredPointer,\"RegisteredPointer_deleteObject\":RegisteredPointer_deleteObject,\"RegisteredPointer_destructor\":RegisteredPointer_destructor,\"RegisteredPointer_fromWireType\":RegisteredPointer_fromWireType,\"RegisteredPointer_getPointee\":RegisteredPointer_getPointee,\"__ZSt18uncaught_exceptionv\":__ZSt18uncaught_exceptionv,\"___assert_fail\":___assert_fail,\"___buildEnvironment\":___buildEnvironment,\"___cxa_allocate_exception\":___cxa_allocate_exception,\"___cxa_begin_catch\":___cxa_begin_catch,\"___cxa_current_primary_exception\":___cxa_current_primary_exception,\"___cxa_decrement_exception_refcount\":___cxa_decrement_exception_refcount,\"___cxa_end_catch\":___cxa_end_catch,\"___cxa_find_matching_catch\":___cxa_find_matching_catch,\"___cxa_find_matching_catch_2\":___cxa_find_matching_catch_2,\"___cxa_find_matching_catch_3\":___cxa_find_matching_catch_3,\"___cxa_find_matching_catch_4\":___cxa_find_matching_catch_4,\"___cxa_free_exception\":___cxa_free_exception,\"___cxa_increment_exception_refcount\":___cxa_increment_exception_refcount,\"___cxa_pure_virtual\":___cxa_pure_virtual,\"___cxa_rethrow\":___cxa_rethrow,\"___cxa_rethrow_primary_exception\":___cxa_rethrow_primary_exception,\"___cxa_throw\":___cxa_throw,\"___gxx_personality_v0\":___gxx_personality_v0,\"___lock\":___lock,\"___map_file\":___map_file,\"___resumeException\":___resumeException,\"___setErrNo\":___setErrNo,\"___syscall140\":___syscall140,\"___syscall145\":___syscall145,\"___syscall146\":___syscall146,\"___syscall221\":___syscall221,\"___syscall5\":___syscall5,\"___syscall54\":___syscall54,\"___syscall6\":___syscall6,\"___syscall91\":___syscall91,\"___unlock\":___unlock,\"__addDays\":__addDays,\"__arraySum\":__arraySum,\"__embind_create_inheriting_constructor\":__embind_create_inheriting_constructor,\"__embind_register_bool\":__embind_register_bool,\"__embind_register_class\":__embind_register_class,\"__embind_register_class_class_function\":__embind_register_class_class_function,\"__embind_register_class_constructor\":__embind_register_class_constructor,\"__embind_register_class_function\":__embind_register_class_function,\"__embind_register_emval\":__embind_register_emval,\"__embind_register_enum\":__embind_register_enum,\"__embind_register_enum_value\":__embind_register_enum_value,\"__embind_register_float\":__embind_register_float,\"__embind_register_integer\":__embind_register_integer,\"__embind_register_memory_view\":__embind_register_memory_view,\"__embind_register_std_string\":__embind_register_std_string,\"__embind_register_std_wstring\":__embind_register_std_wstring,\"__embind_register_void\":__embind_register_void,\"__emval_addMethodCaller\":__emval_addMethodCaller,\"__emval_allocateDestructors\":__emval_allocateDestructors,\"__emval_as\":__emval_as,\"__emval_call_method\":__emval_call_method,\"__emval_call_void_method\":__emval_call_void_method,\"__emval_decref\":__emval_decref,\"__emval_get_method_caller\":__emval_get_method_caller,\"__emval_get_property\":__emval_get_property,\"__emval_incref\":__emval_incref,\"__emval_lookupTypes\":__emval_lookupTypes,\"__emval_new_cstring\":__emval_new_cstring,\"__emval_register\":__emval_register,\"__emval_run_destructors\":__emval_run_destructors,\"__emval_take_value\":__emval_take_value,\"__isLeapYear\":__isLeapYear,\"__virgil_throw_error\":__virgil_throw_error,\"_abort\":_abort,\"_embind_repr\":_embind_repr,\"_emscripten_memcpy_big\":_emscripten_memcpy_big,\"_getenv\":_getenv,\"_gettimeofday\":_gettimeofday,\"_llvm_ceil_f64\":_llvm_ceil_f64,\"_llvm_eh_typeid_for\":_llvm_eh_typeid_for,\"_llvm_trap\":_llvm_trap,\"_pthread_cond_wait\":_pthread_cond_wait,\"_pthread_getspecific\":_pthread_getspecific,\"_pthread_key_create\":_pthread_key_create,\"_pthread_once\":_pthread_once,\"_pthread_setspecific\":_pthread_setspecific,\"_strftime\":_strftime,\"_strftime_l\":_strftime_l,\"constNoSmartPtrRawPointerToWireType\":constNoSmartPtrRawPointerToWireType,\"count_emval_handles\":count_emval_handles,\"craftInvokerFunction\":craftInvokerFunction,\"createNamedFunction\":createNamedFunction,\"downcastPointer\":downcastPointer,\"embind__requireFunction\":embind__requireFunction,\"embind_init_charCodes\":embind_init_charCodes,\"ensureOverloadTable\":ensureOverloadTable,\"enumReadValueFromPointer\":enumReadValueFromPointer,\"exposePublicSymbol\":exposePublicSymbol,\"extendError\":extendError,\"floatReadValueFromPointer\":floatReadValueFromPointer,\"flushPendingDeletes\":flushPendingDeletes,\"genericPointerToWireType\":genericPointerToWireType,\"getBasestPointer\":getBasestPointer,\"getInheritedInstance\":getInheritedInstance,\"getInheritedInstanceCount\":getInheritedInstanceCount,\"getLiveInheritedInstances\":getLiveInheritedInstances,\"getShiftFromSize\":getShiftFromSize,\"getStringOrSymbol\":getStringOrSymbol,\"getTypeName\":getTypeName,\"get_first_emval\":get_first_emval,\"heap32VectorToArray\":heap32VectorToArray,\"init_ClassHandle\":init_ClassHandle,\"init_RegisteredPointer\":init_RegisteredPointer,\"init_embind\":init_embind,\"init_emval\":init_emval,\"integerReadValueFromPointer\":integerReadValueFromPointer,\"makeClassHandle\":makeClassHandle,\"makeLegalFunctionName\":makeLegalFunctionName,\"new_\":new_,\"nonConstNoSmartPtrRawPointerToWireType\":nonConstNoSmartPtrRawPointerToWireType,\"readLatin1String\":readLatin1String,\"registerInheritedInstance\":registerInheritedInstance,\"registerType\":registerType,\"replacePublicSymbol\":replacePublicSymbol,\"requireHandle\":requireHandle,\"requireRegisteredType\":requireRegisteredType,\"runDestructor\":runDestructor,\"runDestructors\":runDestructors,\"setDelayFunction\":setDelayFunction,\"shallowCopyInternalPointer\":shallowCopyInternalPointer,\"simpleReadValueFromPointer\":simpleReadValueFromPointer,\"throwBindingError\":throwBindingError,\"throwInstanceAlreadyDeleted\":throwInstanceAlreadyDeleted,\"throwInternalError\":throwInternalError,\"throwUnboundTypeError\":throwUnboundTypeError,\"unregisterInheritedInstance\":unregisterInheritedInstance,\"upcastPointer\":upcastPointer,\"whenDependentTypesAreResolved\":whenDependentTypesAreResolved,\"DYNAMICTOP_PTR\":DYNAMICTOP_PTR,\"tempDoublePtr\":tempDoublePtr,\"ABORT\":ABORT,\"STACKTOP\":STACKTOP,\"STACK_MAX\":STACK_MAX,\"cttz_i8\":cttz_i8};// EMSCRIPTEN_START_ASM\nvar asm=(/** @suppress {uselessCode} */ function(global,env,buffer) {\n\"use asm\";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.DYNAMICTOP_PTR|0;var j=env.tempDoublePtr|0;var k=env.ABORT|0;var l=env.STACKTOP|0;var m=env.STACK_MAX|0;var n=env.cttz_i8|0;var o=0;var p=0;var q=0;var r=0;var s=global.NaN,t=global.Infinity;var u=0,v=0,w=0,x=0,y=0.0;var z=0;var A=global.Math.floor;var B=global.Math.abs;var C=global.Math.sqrt;var D=global.Math.pow;var E=global.Math.cos;var F=global.Math.sin;var G=global.Math.tan;var H=global.Math.acos;var I=global.Math.asin;var J=global.Math.atan;var K=global.Math.atan2;var L=global.Math.exp;var M=global.Math.log;var N=global.Math.ceil;var O=global.Math.imul;var P=global.Math.min;var Q=global.Math.max;var R=global.Math.clz32;var S=env.abort;var T=env.assert;var U=env.enlargeMemory;var V=env.getTotalMemory;var W=env.abortOnCannotGrowMemory;var X=env.invoke_diii;var Y=env.invoke_i;var Z=env.invoke_ii;var _=env.invoke_iii;var $=env.invoke_iiii;var aa=env.invoke_iiiii;var ba=env.invoke_iiiiid;var ca=env.invoke_iiiiii;var da=env.invoke_iiiiiid;var ea=env.invoke_iiiiiii;var fa=env.invoke_iiiiiiii;var ga=env.invoke_iiiiiiiii;var ha=env.invoke_iiiiiiiiiii;var ia=env.invoke_iiiiiiiiiiii;var ja=env.invoke_iiiiiiiiiiiii;var ka=env.invoke_v;var la=env.invoke_vi;var ma=env.invoke_vii;var na=env.invoke_viii;var oa=env.invoke_viiii;var pa=env.invoke_viiiii;var qa=env.invoke_viiiiii;var ra=env.invoke_viiiiiii;var sa=env.invoke_viiiiiiiiii;var ta=env.invoke_viiiiiiiiiiiiiii;var ua=env.ClassHandle;var va=env.ClassHandle_clone;var wa=env.ClassHandle_delete;var xa=env.ClassHandle_deleteLater;var ya=env.ClassHandle_isAliasOf;var za=env.ClassHandle_isDeleted;var Aa=env.RegisteredClass;var Ba=env.RegisteredPointer;var Ca=env.RegisteredPointer_deleteObject;var Da=env.RegisteredPointer_destructor;var Ea=env.RegisteredPointer_fromWireType;var Fa=env.RegisteredPointer_getPointee;var Ga=env.__ZSt18uncaught_exceptionv;var Ha=env.___assert_fail;var Ia=env.___buildEnvironment;var Ja=env.___cxa_allocate_exception;var Ka=env.___cxa_begin_catch;var La=env.___cxa_current_primary_exception;var Ma=env.___cxa_decrement_exception_refcount;var Na=env.___cxa_end_catch;var Oa=env.___cxa_find_matching_catch;var Pa=env.___cxa_find_matching_catch_2;var Qa=env.___cxa_find_matching_catch_3;var Ra=env.___cxa_find_matching_catch_4;var Sa=env.___cxa_free_exception;var Ta=env.___cxa_increment_exception_refcount;var Ua=env.___cxa_pure_virtual;var Va=env.___cxa_rethrow;var Wa=env.___cxa_rethrow_primary_exception;var Xa=env.___cxa_throw;var Ya=env.___gxx_personality_v0;var Za=env.___lock;var _a=env.___map_file;var $a=env.___resumeException;var ab=env.___setErrNo;var bb=env.___syscall140;var cb=env.___syscall145;var db=env.___syscall146;var eb=env.___syscall221;var fb=env.___syscall5;var gb=env.___syscall54;var hb=env.___syscall6;var ib=env.___syscall91;var jb=env.___unlock;var kb=env.__addDays;var lb=env.__arraySum;var mb=env.__embind_create_inheriting_constructor;var nb=env.__embind_register_bool;var ob=env.__embind_register_class;var pb=env.__embind_register_class_class_function;var qb=env.__embind_register_class_constructor;var rb=env.__embind_register_class_function;var sb=env.__embind_register_emval;var tb=env.__embind_register_enum;var ub=env.__embind_register_enum_value;var vb=env.__embind_register_float;var wb=env.__embind_register_integer;var xb=env.__embind_register_memory_view;var yb=env.__embind_register_std_string;var zb=env.__embind_register_std_wstring;var Ab=env.__embind_register_void;var Bb=env.__emval_addMethodCaller;var Cb=env.__emval_allocateDestructors;var Db=env.__emval_as;var Eb=env.__emval_call_method;var Fb=env.__emval_call_void_method;var Gb=env.__emval_decref;var Hb=env.__emval_get_method_caller;var Ib=env.__emval_get_property;var Jb=env.__emval_incref;var Kb=env.__emval_lookupTypes;var Lb=env.__emval_new_cstring;var Mb=env.__emval_register;var Nb=env.__emval_run_destructors;var Ob=env.__emval_take_value;var Pb=env.__isLeapYear;var Qb=env.__virgil_throw_error;var Rb=env._abort;var Sb=env._embind_repr;var Tb=env._emscripten_memcpy_big;var Ub=env._getenv;var Vb=env._gettimeofday;var Wb=env._llvm_ceil_f64;var Xb=env._llvm_eh_typeid_for;var Yb=env._llvm_trap;var Zb=env._pthread_cond_wait;var _b=env._pthread_getspecific;var $b=env._pthread_key_create;var ac=env._pthread_once;var bc=env._pthread_setspecific;var cc=env._strftime;var dc=env._strftime_l;var ec=env.constNoSmartPtrRawPointerToWireType;var fc=env.count_emval_handles;var gc=env.craftInvokerFunction;var hc=env.createNamedFunction;var ic=env.downcastPointer;var jc=env.embind__requireFunction;var kc=env.embind_init_charCodes;var lc=env.ensureOverloadTable;var mc=env.enumReadValueFromPointer;var nc=env.exposePublicSymbol;var oc=env.extendError;var pc=env.floatReadValueFromPointer;var qc=env.flushPendingDeletes;var rc=env.genericPointerToWireType;var sc=env.getBasestPointer;var tc=env.getInheritedInstance;var uc=env.getInheritedInstanceCount;var vc=env.getLiveInheritedInstances;var wc=env.getShiftFromSize;var xc=env.getStringOrSymbol;var yc=env.getTypeName;var zc=env.get_first_emval;var Ac=env.heap32VectorToArray;var Bc=env.init_ClassHandle;var Cc=env.init_RegisteredPointer;var Dc=env.init_embind;var Ec=env.init_emval;var Fc=env.integerReadValueFromPointer;var Gc=env.makeClassHandle;var Hc=env.makeLegalFunctionName;var Ic=env.new_;var Jc=env.nonConstNoSmartPtrRawPointerToWireType;var Kc=env.readLatin1String;var Lc=env.registerInheritedInstance;var Mc=env.registerType;var Nc=env.replacePublicSymbol;var Oc=env.requireHandle;var Pc=env.requireRegisteredType;var Qc=env.runDestructor;var Rc=env.runDestructors;var Sc=env.setDelayFunction;var Tc=env.shallowCopyInternalPointer;var Uc=env.simpleReadValueFromPointer;var Vc=env.throwBindingError;var Wc=env.throwInstanceAlreadyDeleted;var Xc=env.throwInternalError;var Yc=env.throwUnboundTypeError;var Zc=env.unregisterInheritedInstance;var _c=env.upcastPointer;var $c=env.whenDependentTypesAreResolved;var ad=0.0;\n// EMSCRIPTEN_START_FUNCS\nfunction py(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0;f=l;l=l+1488|0;g=f+1480|0;h=f+1472|0;i=f+1464|0;j=f+1456|0;k=f+1448|0;m=f+1440|0;n=f+1432|0;o=f+1424|0;p=f+1416|0;q=f+1408|0;r=f+1400|0;s=f+1392|0;t=f+1384|0;u=f+1376|0;v=f+1368|0;w=f+1360|0;x=f+1352|0;y=f+1344|0;z=f+1336|0;A=f+1328|0;B=f+1320|0;C=f+1312|0;D=f+1304|0;E=f+1296|0;F=f+1288|0;G=f+1280|0;H=f+1272|0;I=f+1264|0;J=f+1256|0;K=f+1248|0;L=f+1240|0;M=f+1232|0;N=f+1224|0;O=f+1216|0;P=f+1208|0;Q=f+1200|0;R=f+1192|0;S=f+1184|0;T=f+1176|0;U=f+1168|0;V=f+1160|0;W=f+1152|0;X=f+1144|0;Y=f+1136|0;Z=f+1128|0;_=f+1120|0;$=f+1112|0;aa=f+1104|0;ba=f+1096|0;ca=f+1088|0;da=f+1080|0;ea=f+1072|0;fa=f+1064|0;ga=f+1056|0;ha=f+1048|0;ia=f+1040|0;ja=f+1032|0;ka=f+1024|0;la=f+1016|0;ma=f+1008|0;na=f+1e3|0;oa=f+992|0;pa=f+984|0;qa=f+976|0;ra=f+968|0;sa=f+960|0;ta=f+952|0;ua=f+944|0;va=f+936|0;wa=f+928|0;xa=f+920|0;ya=f+912|0;za=f+904|0;Aa=f+896|0;Ba=f+888|0;Ca=f+880|0;Da=f+872|0;Ea=f+864|0;Fa=f+856|0;Ga=f+848|0;Ha=f+840|0;Ia=f+832|0;Ja=f+824|0;Ka=f+816|0;La=f+808|0;Ma=f+800|0;Na=f+792|0;Oa=f+784|0;Pa=f+776|0;Qa=f+768|0;Ra=f+760|0;Sa=f+752|0;Ta=f+744|0;Ua=f+736|0;Va=f+728|0;Wa=f+720|0;Xa=f+712|0;Ya=f+704|0;Za=f+696|0;_a=f+688|0;$a=f+680|0;ab=f+672|0;bb=f+664|0;cb=f+656|0;db=f+648|0;eb=f+640|0;fb=f+632|0;gb=f+624|0;hb=f+616|0;ib=f+608|0;jb=f+600|0;kb=f+592|0;lb=f+584|0;mb=f+576|0;nb=f+568|0;ob=f+560|0;pb=f+552|0;qb=f+544|0;rb=f+536|0;sb=f+528|0;tb=f+520|0;ub=f+512|0;vb=f+504|0;wb=f+496|0;xb=f+488|0;yb=f+480|0;zb=f+472|0;Ab=f+464|0;Bb=f+456|0;Cb=f+448|0;Db=f+440|0;Eb=f+432|0;Fb=f+424|0;Gb=f+416|0;Hb=f+408|0;Ib=f+400|0;Jb=f+392|0;Kb=f+384|0;Lb=f+376|0;Mb=f+368|0;Nb=f+360|0;Ob=f+352|0;Pb=f+344|0;Qb=f+336|0;Rb=f+328|0;Sb=f+320|0;Tb=f+312|0;Ub=f+304|0;Vb=f+296|0;Wb=f+288|0;Xb=f+280|0;Yb=f+272|0;Zb=f+264|0;_b=f+256|0;$b=f+248|0;ac=f+240|0;bc=f+232|0;cc=f+224|0;dc=f+216|0;ec=f+208|0;fc=f+200|0;gc=f+192|0;hc=f+184|0;ic=f+176|0;jc=f+168|0;kc=f+160|0;lc=f+152|0;mc=f+144|0;nc=f+136|0;oc=f+128|0;pc=f+120|0;qc=f+112|0;rc=f+104|0;sc=f+96|0;tc=f+88|0;uc=f+80|0;vc=f+72|0;wc=f+64|0;xc=f+56|0;yc=f+48|0;zc=f+40|0;Ac=f+32|0;Bc=f+24|0;Cc=f+16|0;Dc=f+8|0;if(!e){l=f;return}ET(d|0,0,e|0)|0;Ec=(b|0)<0?0-b|0:b;b=Ec&65408;switch(b>>>7&511){case 0:break;case 193:{mG(d,e,76997,f)|0;switch((b+-4224|0)>>>7&33554431|0){case 161:{Fc=4;break}case 162:{Fc=6;break}case 163:{Fc=8;break}case 164:{Fc=10;break}case 165:{Fc=12;break}case 166:{Fc=14;break}case 118:{Fc=16;break}case 117:{Fc=18;break}case 116:{Fc=20;break}case 115:{Fc=22;break}case 126:{Fc=24;break}case 125:{Fc=26;break}case 124:{Fc=28;break}case 123:{Fc=30;break}case 122:{Fc=32;break}case 121:{Fc=34;break}case 120:{Fc=36;break}case 119:{Fc=38;break}case 114:{Fc=40;break}case 113:{Fc=42;break}case 112:{Fc=43;break}case 111:{Fc=45;break}case 110:{Fc=47;break}case 109:{Fc=49;break}case 108:{Fc=51;break}case 158:{Fc=53;break}case 128:{Fc=56;break}case 129:{Fc=58;break}case 130:{Fc=59;break}case 131:{Fc=62;break}case 0:{Fc=65;break}case 1:{Fc=67;break}case 2:{Fc=69;break}case 3:{Fc=71;break}case 4:{Fc=72;break}case 5:{Fc=75;break}case 6:{Fc=76;break}case 7:{Fc=79;break}case 8:{Fc=80;break}case 94:{Fc=82;break}case 93:{Fc=84;break}case 92:{Fc=86;break}case 91:{Fc=89;break}case 90:{Fc=90;break}case 89:{Fc=93;break}case 88:{Fc=94;break}case 87:{Fc=97;break}case 86:{Fc=99;break}case 85:{Fc=101;break}case 84:{Fc=102;break}case 83:{Fc=105;break}case 82:{Fc=106;break}case 81:{Fc=108;break}case 30:{Fc=110;break}case 29:{Fc=112;break}case 28:{Fc=114;break}case 27:{Fc=117;break}case 62:{Fc=119;break}case 61:{Fc=121;break}case 60:{Fc=123;break}case 59:{Fc=125;break}case 96:{Fc=127;break}case 97:{Fc=128;break}case 98:{Fc=129;break}case 99:{Fc=130;break}case 100:{Fc=132;break}case 101:{Fc=134;break}case 102:{Fc=136;break}case 103:{Fc=139;break}case 104:{Fc=141;break}case 32:{Fc=143;break}case 33:{Fc=145;break}case 34:{Fc=147;break}case 35:{Fc=148;break}case 36:{Fc=150;break}case 37:{Fc=152;break}case 38:{Fc=154;break}case 39:{Fc=157;break}case 40:{Fc=158;break}case 41:{Fc=161;break}case 42:{Fc=162;break}case 43:{Fc=164;break}case 44:{Fc=167;break}case 45:{Fc=168;break}case 46:{Fc=171;break}case 47:{Fc=172;break}case 48:{Fc=174;break}case 49:{Fc=177;break}case 50:{Fc=178;break}default:Fc=179}break}case 194:{Fc=4;break}case 195:{Fc=6;break}case 196:{Fc=8;break}case 197:{Fc=10;break}case 198:{Fc=12;break}case 199:{Fc=14;break}case 151:{Fc=16;break}case 150:{Fc=18;break}case 149:{Fc=20;break}case 148:{Fc=22;break}case 159:{Fc=24;break}case 158:{Fc=26;break}case 157:{Fc=28;break}case 156:{Fc=30;break}case 155:{Fc=32;break}case 154:{Fc=34;break}case 153:{Fc=36;break}case 152:{Fc=38;break}case 147:{Fc=40;break}case 146:{Fc=42;break}case 145:{Fc=43;break}case 144:{Fc=45;break}case 143:{Fc=47;break}case 142:{Fc=49;break}case 141:{Fc=51;break}case 191:{Fc=53;break}case 161:{Fc=56;break}case 162:{Fc=58;break}case 163:{Fc=59;break}case 164:{mG(d,e,78266,Fb)|0;switch((b+-4224|0)>>>7&33554431|0){case 0:{Fc=65;break}case 1:{Fc=67;break}case 2:{Fc=69;break}case 3:{Fc=71;break}case 4:{Fc=72;break}case 5:{Fc=75;break}case 6:{Fc=76;break}case 7:{Fc=79;break}case 8:{Fc=80;break}default:Fc=81}break}case 33:{Fc=65;break}case 34:{Fc=67;break}case 35:{Fc=69;break}case 36:{Fc=71;break}case 37:{Fc=72;break}case 38:{Fc=75;break}case 39:{Fc=76;break}case 40:{Fc=79;break}case 41:{Fc=80;break}case 127:{Fc=82;break}case 126:{Fc=84;break}case 125:{Fc=86;break}case 124:{Fc=89;break}case 123:{Fc=90;break}case 122:{Fc=93;break}case 121:{Fc=94;break}case 120:{Fc=97;break}case 119:{Fc=99;break}case 118:{Fc=101;break}case 117:{Fc=102;break}case 116:{Fc=105;break}case 115:{Fc=106;break}case 114:{Fc=108;break}case 63:{Fc=110;break}case 62:{Fc=112;break}case 61:{Fc=114;break}case 60:{Fc=117;break}case 95:{Fc=119;break}case 94:{Fc=121;break}case 93:{Fc=123;break}case 92:{Fc=125;break}case 129:{Fc=127;break}case 130:{Fc=128;break}case 131:{Fc=129;break}case 132:{Fc=130;break}case 133:{Fc=132;break}case 134:{Fc=134;break}case 135:{Fc=136;break}case 136:{Fc=139;break}case 137:{Fc=141;break}case 65:{Fc=143;break}case 66:{Fc=145;break}case 67:{Fc=147;break}case 68:{Fc=148;break}case 69:{Fc=150;break}case 70:{Fc=152;break}case 71:{Fc=154;break}case 72:{Fc=157;break}case 73:{Fc=158;break}case 74:{Fc=161;break}case 75:{Fc=162;break}case 76:{Fc=164;break}case 77:{Fc=167;break}case 78:{Fc=168;break}case 79:{Fc=171;break}case 80:{Fc=172;break}case 81:{Fc=174;break}case 82:{Fc=177;break}case 83:{Fc=178;break}default:Fc=179}a:do if((Fc|0)==4){mG(d,e,77044,Dc)|0;Fb=b&65535;if(Fb<<16>>16>=16640){switch(Fb<<16>>16){case 25088:{Fc=7;break a;break}case 25216:{Fc=9;break a;break}case 25344:{Fc=11;break a;break}case 25472:{Fc=13;break a;break}case 19328:{Fc=15;break a;break}case 19200:{Fc=17;break a;break}case 19072:{Fc=19;break a;break}case 18944:{Fc=21;break a;break}case 20352:{Fc=23;break a;break}case 20224:{Fc=25;break a;break}case 20096:{Fc=27;break a;break}case 19968:{Fc=29;break a;break}case 19840:{Fc=31;break a;break}case 19712:{Fc=33;break a;break}case 19584:{Fc=35;break a;break}case 19456:{Fc=37;break a;break}case 18816:{Fc=39;break a;break}case 18688:{Fc=41;break a;break}case 18560:{Fc=43;break a;break}case 18432:{Fc=45;break a;break}case 18304:{Fc=47;break a;break}case 18176:{Fc=49;break a;break}case 18048:{Fc=51;break a;break}case 24448:{Fc=53;break a;break}case 20608:{Fc=55;break a;break}case 20736:{Fc=57;break a;break}case 20864:{Fc=59;break a;break}case 20992:{Fc=61;break a;break}case 16640:{Fc=128;break a;break}case 16768:{Fc=129;break a;break}case 16896:{Fc=130;break a;break}case 24960:break;default:{Gc=Fb;Fc=131;break a}}mG(d,e,77086,Cc)|0;Fc=179;break}if(Fb<<16>>16<12160)switch(Fb<<16>>16){case 4224:{Fc=64;break a;break}case 4352:{Fc=66;break a;break}case 4480:{Fc=68;break a;break}case 4608:{Fc=70;break a;break}case 4736:{Fc=72;break a;break}case 4864:{Fc=74;break a;break}case 4992:{Fc=76;break a;break}case 5120:{Fc=78;break a;break}case 5248:{Fc=80;break a;break}case 8064:{Fc=110;break a;break}case 7936:{Fc=112;break a;break}case 7808:{Fc=114;break a;break}case 7680:{Fc=116;break a;break}case 12032:{Fc=120;break a;break}case 11904:{Fc=122;break a;break}case 11776:{Fc=124;break a;break}default:{Gc=Fb;Fc=131;break a}}else switch(Fb<<16>>16){case 16256:{Fc=82;break a;break}case 16128:{Fc=84;break a;break}case 16e3:{Fc=86;break a;break}case 15872:{Fc=88;break a;break}case 15744:{Fc=90;break a;break}case 15616:{Fc=92;break a;break}case 15488:{Fc=94;break a;break}case 15360:{Fc=96;break a;break}case 15232:{Fc=98;break a;break}case 15104:{Fc=100;break a;break}case 14976:{Fc=102;break a;break}case 14848:{Fc=104;break a;break}case 14720:{Fc=106;break a;break}case 14592:{Fc=108;break a;break}case 12160:{Fc=118;break a;break}case 16512:{Fc=126;break a;break}default:{Gc=Fb;Fc=131;break a}}}else if((Fc|0)==6){mG(d,e,77086,Bc)|0;Fb=b&65535;if(Fb<<16>>16>=18944)switch(Fb<<16>>16){case 25088:{Fc=7;break a;break}case 25216:{Fc=9;break a;break}case 25344:{Fc=11;break a;break}case 25472:{Fc=13;break a;break}case 19328:{Fc=15;break a;break}case 19200:{Fc=17;break a;break}case 19072:{Fc=19;break a;break}case 18944:{Fc=21;break a;break}case 20352:{Fc=23;break a;break}case 20224:{Fc=25;break a;break}case 20096:{Fc=27;break a;break}case 19968:{Fc=29;break a;break}case 19840:{Fc=31;break a;break}case 19712:{Fc=33;break a;break}case 19584:{Fc=35;break a;break}case 19456:{Fc=37;break a;break}case 24448:{Fc=53;break a;break}case 20608:{Fc=55;break a;break}case 20736:{Fc=57;break a;break}case 20864:{Fc=59;break a;break}case 20992:{Fc=61;break a;break}default:{Fc=91;break a}}if(Fb<<16>>16>=15872)switch(Fb<<16>>16){case 18816:{Fc=39;break a;break}case 18688:{Fc=41;break a;break}case 18560:{Fc=43;break a;break}case 18432:{Fc=45;break a;break}case 18304:{Fc=47;break a;break}case 18176:{Fc=49;break a;break}case 18048:{Fc=51;break a;break}case 16256:{Fc=82;break a;break}case 16128:{Fc=84;break a;break}case 16e3:{Fc=86;break a;break}case 15872:{Fc=88;break a;break}default:{Fc=91;break a}}if(Fb<<16>>16<4864)switch(Fb<<16>>16){case 4224:{Fc=64;break a;break}case 4352:{Fc=66;break a;break}case 4480:{Fc=68;break a;break}case 4608:{Fc=70;break a;break}case 4736:{Fc=72;break a;break}default:{Fc=91;break a}}if(Fb<<16>>16<5120)switch(Fb<<16>>16){case 4864:{Fc=74;break a;break}case 4992:{Fc=76;break a;break}default:{Fc=91;break a}}if(Fb<<16>>16<5248)switch(Fb<<16>>16){case 5120:{Fc=78;break a;break}default:{Fc=91;break a}}if(Fb<<16>>16<15744)switch(Fb<<16>>16){case 5248:{Fc=80;break a;break}default:{Fc=91;break a}}else switch(Fb<<16>>16){case 15744:{Fc=90;break a;break}default:{Fc=91;break a}}}else if((Fc|0)==8){mG(d,e,77121,zc)|0;Fb=b&65535;if(Fb<<16>>16>=19456)switch(Fb<<16>>16){case 25216:{Fc=9;break a;break}case 25344:{Fc=11;break a;break}case 25472:{Fc=13;break a;break}case 20352:{Fc=23;break a;break}case 20224:{Fc=25;break a;break}case 20096:{Fc=27;break a;break}case 19968:{Fc=29;break a;break}case 19840:{Fc=31;break a;break}case 19712:{Fc=33;break a;break}case 19584:{Fc=35;break a;break}case 19456:{Fc=37;break a;break}case 24448:{Fc=53;break a;break}case 20608:{Fc=55;break a;break}case 20736:{Fc=57;break a;break}case 20864:{Fc=59;break a;break}case 20992:{Fc=61;break a;break}default:{Fc=73;break a}}if(Fb<<16>>16>=18432)switch(Fb<<16>>16){case 19328:{Fc=15;break a;break}case 19200:{Fc=17;break a;break}case 19072:{Fc=19;break a;break}case 18944:{Fc=21;break a;break}case 18816:{Fc=39;break a;break}case 18688:{Fc=41;break a;break}case 18560:{Fc=43;break a;break}case 18432:{Fc=45;break a;break}default:{Fc=73;break a}}if(Fb<<16>>16<4736)switch(Fb<<16>>16){case 4224:{Fc=64;break a;break}case 4352:{Fc=66;break a;break}case 4480:{Fc=68;break a;break}case 4608:{Fc=70;break a;break}default:{Fc=73;break a}}if(Fb<<16>>16>=18176)switch(Fb<<16>>16){case 18304:{Fc=47;break a;break}case 18176:{Fc=49;break a;break}default:{Fc=73;break a}}if(Fb<<16>>16<18048)switch(Fb<<16>>16){case 4736:{Fc=72;break a;break}default:{Fc=73;break a}}else switch(Fb<<16>>16){case 18048:{Fc=51;break a;break}default:{Fc=73;break a}}}else if((Fc|0)==10){mG(d,e,77182,xc)|0;switch((b+-18048|0)>>>7&33554431|0){case 57:{Fc=12;break}case 58:{Fc=14;break}case 10:{Fc=16;break}case 9:{Fc=18;break}case 8:{Fc=20;break}case 7:{Fc=22;break}case 18:{Fc=24;break}case 17:{Fc=26;break}case 16:{Fc=28;break}case 15:{Fc=30;break}case 14:{Fc=32;break}case 13:{Fc=34;break}case 12:{Fc=36;break}case 11:{Fc=38;break}case 6:{Fc=40;break}case 5:{Fc=42;break}case 4:{Fc=43;break}case 3:{Fc=45;break}case 2:{Fc=47;break}case 1:{Fc=49;break}case 0:{Fc=51;break}case 50:{Fc=53;break}case 20:{Fc=56;break}case 21:{Fc=58;break}case 22:{Fc=59;break}default:Fc=60}}while(0);if((Fc|0)==7){mG(d,e,77121,Ac)|0;Fc=179}else if((Fc|0)==9){mG(d,e,77182,yc)|0;Fc=179}else if((Fc|0)==11){mG(d,e,77233,wc)|0;Fc=179}else if((Fc|0)==12){mG(d,e,77233,vc)|0;vc=b&65535;switch(vc<<16>>16){case 25472:{Fc=13;break}case 19328:{Fc=15;break}case 19200:{Fc=17;break}case 19072:{Fc=19;break}case 18944:{Fc=21;break}case 20352:{Fc=23;break}case 20224:{Fc=25;break}case 20096:{Fc=27;break}case 19968:{Fc=29;break}case 19840:{Fc=31;break}case 19712:{Fc=33;break}case 19584:{Fc=35;break}case 19456:{Fc=37;break}case 18816:{Fc=39;break}case 18688:{Fc=41;break}case 18560:{Fc=43;break}case 18432:{Fc=45;break}case 18304:{Fc=47;break}case 18176:{Fc=49;break}case 18048:{Fc=51;break}case 24448:{Fc=53;break}default:{Hc=vc;Fc=54}}}else if((Fc|0)==14){mG(d,e,77281,tc)|0;switch((b+-18176|0)>>>7&33554431|0){case 9:{Fc=16;break}case 8:{Fc=18;break}case 7:{Fc=20;break}case 6:{Fc=22;break}case 17:{Fc=24;break}case 16:{Fc=26;break}case 15:{Fc=28;break}case 14:{Fc=30;break}case 13:{Fc=32;break}case 12:{Fc=34;break}case 11:{Fc=36;break}case 10:{Fc=38;break}case 5:{Fc=40;break}case 4:{Fc=42;break}case 3:{Fc=43;break}case 2:{Fc=45;break}case 1:{Fc=47;break}case 0:{Fc=49;break}default:Fc=50}}switch(Fc|0){case 13:{mG(d,e,77281,uc)|0;Fc=179;break}case 15:{mG(d,e,77341,sc)|0;Fc=179;break}case 16:{mG(d,e,77341,rc)|0;switch((b+-18304|0)>>>7&33554431|0){case 7:{Fc=18;break}case 6:{Fc=20;break}case 5:{Fc=22;break}case 16:{Fc=24;break}case 15:{Fc=26;break}case 14:{Fc=28;break}case 13:{Fc=30;break}case 12:{Fc=32;break}case 11:{Fc=34;break}case 10:{Fc=36;break}case 9:{Fc=38;break}case 4:{Fc=40;break}case 3:{Fc=42;break}case 2:{Fc=43;break}case 1:{Fc=45;break}case 0:{Fc=47;break}default:Fc=48}break}case 17:{mG(d,e,77382,qc)|0;Fc=179;break}case 19:{mG(d,e,77414,oc)|0;Fc=179;break}case 21:{mG(d,e,77450,mc)|0;Fc=179;break}case 23:{mG(d,e,77483,kc)|0;Fc=179;break}case 25:{mG(d,e,77522,ic)|0;Fc=179;break}case 27:{mG(d,e,77564,gc)|0;Fc=179;break}case 29:{mG(d,e,77600,ec)|0;Fc=179;break}case 31:{mG(d,e,77633,cc)|0;Fc=179;break}case 33:{mG(d,e,77664,ac)|0;Fc=179;break}case 35:{mG(d,e,77730,_b)|0;Fc=179;break}case 37:{mG(d,e,77766,Yb)|0;Fc=179;break}case 39:{mG(d,e,77833,Wb)|0;Fc=179;break}case 41:{mG(d,e,77869,Ub)|0;Fc=179;break}}if((Fc|0)==18){mG(d,e,77382,pc)|0;switch((b+-18432|0)>>>7&33554431|0){case 5:{Fc=20;break}case 4:{Fc=22;break}case 15:{Fc=24;break}case 14:{Fc=26;break}case 13:{Fc=28;break}case 12:{Fc=30;break}case 11:{Fc=32;break}case 10:{Fc=34;break}case 9:{Fc=36;break}case 8:{Fc=38;break}case 3:{Fc=40;break}case 2:{Fc=42;break}case 1:{Fc=43;break}case 0:{Fc=45;break}default:Fc=46}}if((Fc|0)==20){mG(d,e,77414,nc)|0;switch((b+-18560|0)>>>7&33554431|0){case 3:{Fc=22;break}case 14:{Fc=24;break}case 13:{Fc=26;break}case 12:{Fc=28;break}case 11:{Fc=30;break}case 10:{Fc=32;break}case 9:{Fc=34;break}case 8:{Fc=36;break}case 7:{Fc=38;break}case 2:{Fc=40;break}case 1:{Fc=42;break}case 0:{Fc=43;break}default:Fc=44}}if((Fc|0)==22){mG(d,e,77450,lc)|0;switch((b+-18560|0)>>>7&33554431|0){case 14:{Fc=24;break}case 13:{Fc=26;break}case 12:{Fc=28;break}case 11:{Fc=30;break}case 10:{Fc=32;break}case 9:{Fc=34;break}case 8:{Fc=36;break}case 7:{Fc=38;break}case 2:{Fc=40;break}case 1:{Fc=42;break}case 0:{Fc=43;break}default:Fc=44}}if((Fc|0)==24){mG(d,e,77483,jc)|0;switch((b+-18560|0)>>>7&33554431|0){case 13:{Fc=26;break}case 12:{Fc=28;break}case 11:{Fc=30;break}case 10:{Fc=32;break}case 9:{Fc=34;break}case 8:{Fc=36;break}case 7:{Fc=38;break}case 2:{Fc=40;break}case 1:{Fc=42;break}case 0:{Fc=43;break}default:Fc=44}}if((Fc|0)==26){mG(d,e,77522,hc)|0;switch((b+-18560|0)>>>7&33554431|0){case 12:{Fc=28;break}case 11:{Fc=30;break}case 10:{Fc=32;break}case 9:{Fc=34;break}case 8:{Fc=36;break}case 7:{Fc=38;break}case 2:{Fc=40;break}case 1:{Fc=42;break}case 0:{Fc=43;break}default:Fc=44}}if((Fc|0)==28){mG(d,e,77564,fc)|0;switch((b+-18432|0)>>>7&33554431|0){case 12:{Fc=30;break}case 11:{Fc=32;break}case 10:{Fc=34;break}case 9:{Fc=36;break}case 8:{Fc=38;break}case 3:{Fc=40;break}case 2:{Fc=42;break}case 1:{Fc=43;break}case 0:{Fc=45;break}default:Fc=46}}if((Fc|0)==30){mG(d,e,77600,dc)|0;switch((b+-18432|0)>>>7&33554431|0){case 11:{Fc=32;break}case 10:{Fc=34;break}case 9:{Fc=36;break}case 8:{Fc=38;break}case 3:{Fc=40;break}case 2:{Fc=42;break}case 1:{Fc=43;break}case 0:{Fc=45;break}default:Fc=46}}if((Fc|0)==32){mG(d,e,77633,bc)|0;switch((b+-18304|0)>>>7&33554431|0){case 11:{Fc=34;break}case 10:{Fc=36;break}case 9:{Fc=38;break}case 4:{Fc=40;break}case 3:{Fc=42;break}case 2:{Fc=43;break}case 1:{Fc=45;break}case 0:{Fc=47;break}default:Fc=48}}if((Fc|0)==34){mG(d,e,77664,$b)|0;switch((b+-18304|0)>>>7&33554431|0){case 10:{Fc=36;break}case 9:{Fc=38;break}case 4:{Fc=40;break}case 3:{Fc=42;break}case 2:{Fc=43;break}case 1:{Fc=45;break}case 0:{Fc=47;break}default:Fc=48}}if((Fc|0)==36){mG(d,e,77730,Zb)|0;switch((b+-18176|0)>>>7&33554431|0){case 10:{Fc=38;break}case 5:{Fc=40;break}case 4:{Fc=42;break}case 3:{Fc=43;break}case 2:{Fc=45;break}case 1:{Fc=47;break}case 0:{Fc=49;break}default:Fc=50}}if((Fc|0)==38){mG(d,e,77766,Xb)|0;switch((b+-18176|0)>>>7&33554431|0){case 5:{Fc=40;break}case 4:{Fc=42;break}case 3:{Fc=43;break}case 2:{Fc=45;break}case 1:{Fc=47;break}case 0:{Fc=49;break}default:Fc=50}}if((Fc|0)==40){mG(d,e,77833,Vb)|0;switch((b+-18048|0)>>>7&33554431|0){case 5:{Fc=42;break}case 4:{Fc=43;break}case 3:{Fc=45;break}case 2:{Fc=47;break}case 1:{Fc=49;break}case 0:{Fc=51;break}default:Fc=52}}b:do if((Fc|0)==42){mG(d,e,77869,Tb)|0;Vb=b&65535;if(Vb<<16>>16<18432)switch(Vb<<16>>16){case 18304:{Fc=47;break b;break}case 18176:{Fc=49;break b;break}case 18048:{Fc=51;break b;break}default:{Hc=Vb;Fc=54;break b}}if(Vb<<16>>16<18560)switch(Vb<<16>>16){case 18432:{Fc=45;break b;break}default:{Hc=Vb;Fc=54;break b}}if(Vb<<16>>16<24448)switch(Vb<<16>>16){case 18560:{Fc=43;break b;break}default:{Hc=Vb;Fc=54;break b}}else switch(Vb<<16>>16){case 24448:{Fc=53;break b;break}default:{Hc=Vb;Fc=54;break b}}}while(0);if((Fc|0)==43){mG(d,e,77900,Sb)|0;Fc=44}c:do if((Fc|0)==44){Sb=b&65535;if(Sb<<16>>16>=15872)switch(Sb<<16>>16){case 18432:{Fc=45;break c;break}case 18304:{Fc=47;break c;break}case 18176:{Fc=49;break c;break}case 18048:{Fc=51;break c;break}case 24448:{Fc=53;break c;break}case 20608:{Fc=55;break c;break}case 20736:{Fc=57;break c;break}case 20864:{Fc=59;break c;break}case 20992:{Fc=61;break c;break}case 16256:{Fc=82;break c;break}case 16128:{Fc=84;break c;break}case 16e3:{Fc=86;break c;break}case 15872:{Fc=88;break c;break}default:{Fc=95;break c}}if(Sb<<16>>16<4992)switch(Sb<<16>>16){case 4224:{Fc=64;break c;break}case 4352:{Fc=66;break c;break}case 4480:{Fc=68;break c;break}case 4608:{Fc=70;break c;break}case 4736:{Fc=72;break c;break}case 4864:{Fc=74;break c;break}default:{Fc=95;break c}}if(Sb<<16>>16<15488)switch(Sb<<16>>16){case 4992:{Fc=76;break c;break}case 5120:{Fc=78;break c;break}case 5248:{Fc=80;break c;break}default:{Fc=95;break c}}else switch(Sb<<16>>16){case 15744:{Fc=90;break c;break}case 15616:{Fc=92;break c;break}case 15488:{Fc=94;break c;break}default:{Fc=95;break c}}}while(0);if((Fc|0)==45){mG(d,e,77937,Rb)|0;Fc=46}d:do if((Fc|0)==46){Rb=b&65535;if(Rb<<16>>16>=15360)switch(Rb<<16>>16){case 18304:{Fc=47;break d;break}case 18176:{Fc=49;break d;break}case 18048:{Fc=51;break d;break}case 24448:{Fc=53;break d;break}case 20608:{Fc=55;break d;break}case 20736:{Fc=57;break d;break}case 20864:{Fc=59;break d;break}case 20992:{Fc=61;break d;break}case 16256:{Fc=82;break d;break}case 16128:{Fc=84;break d;break}case 16e3:{Fc=86;break d;break}case 15872:{Fc=88;break d;break}case 15744:{Fc=90;break d;break}case 15616:{Fc=92;break d;break}case 15488:{Fc=94;break d;break}case 15360:{Fc=96;break d;break}default:{Fc=111;break d}}if(Rb<<16>>16<5248)switch(Rb<<16>>16){case 4224:{Fc=64;break d;break}case 4352:{Fc=66;break d;break}case 4480:{Fc=68;break d;break}case 4608:{Fc=70;break d;break}case 4736:{Fc=72;break d;break}case 4864:{Fc=74;break d;break}case 4992:{Fc=76;break d;break}case 5120:{Fc=78;break d;break}default:{Fc=111;break d}}if(Rb<<16>>16>=14848)switch(Rb<<16>>16){case 15232:{Fc=98;break d;break}case 15104:{Fc=100;break d;break}case 14976:{Fc=102;break d;break}case 14848:{Fc=104;break d;break}default:{Fc=111;break d}}if(Rb<<16>>16>=14592)switch(Rb<<16>>16){case 14720:{Fc=106;break d;break}case 14592:{Fc=108;break d;break}default:{Fc=111;break d}}if(Rb<<16>>16<8064)switch(Rb<<16>>16){case 5248:{Fc=80;break d;break}default:{Fc=111;break d}}else switch(Rb<<16>>16){case 8064:{Fc=110;break d;break}default:{Fc=111;break d}}}while(0);if((Fc|0)==47){mG(d,e,77977,Qb)|0;Fc=48}e:do if((Fc|0)==48){Qb=b&65535;if(Qb<<16>>16>=15232)switch(Qb<<16>>16){case 18176:{Fc=49;break e;break}case 18048:{Fc=51;break e;break}case 24448:{Fc=53;break e;break}case 20608:{Fc=55;break e;break}case 20736:{Fc=57;break e;break}case 20864:{Fc=59;break e;break}case 20992:{Fc=61;break e;break}case 16256:{Fc=82;break e;break}case 16128:{Fc=84;break e;break}case 16e3:{Fc=86;break e;break}case 15872:{Fc=88;break e;break}case 15744:{Fc=90;break e;break}case 15616:{Fc=92;break e;break}case 15488:{Fc=94;break e;break}case 15360:{Fc=96;break e;break}case 15232:{Fc=98;break e;break}default:{Fc=113;break e}}if(Qb<<16>>16<5248)switch(Qb<<16>>16){case 4224:{Fc=64;break e;break}case 4352:{Fc=66;break e;break}case 4480:{Fc=68;break e;break}case 4608:{Fc=70;break e;break}case 4736:{Fc=72;break e;break}case 4864:{Fc=74;break e;break}case 4992:{Fc=76;break e;break}case 5120:{Fc=78;break e;break}default:{Fc=113;break e}}if(Qb<<16>>16>=14720)switch(Qb<<16>>16){case 15104:{Fc=100;break e;break}case 14976:{Fc=102;break e;break}case 14848:{Fc=104;break e;break}case 14720:{Fc=106;break e;break}default:{Fc=113;break e}}if(Qb<<16>>16<8064)if(Qb<<16>>16<7936)switch(Qb<<16>>16){case 5248:{Fc=80;break e;break}default:{Fc=113;break e}}else switch(Qb<<16>>16){case 7936:{Fc=112;break e;break}default:{Fc=113;break e}}else if(Qb<<16>>16<14592)switch(Qb<<16>>16){case 8064:{Fc=110;break e;break}default:{Fc=113;break e}}else switch(Qb<<16>>16){case 14592:{Fc=108;break e;break}default:{Fc=113;break e}}}while(0);if((Fc|0)==49){mG(d,e,78025,Pb)|0;Fc=50}f:do if((Fc|0)==50){Pb=b&65535;if(Pb<<16>>16>=15104)switch(Pb<<16>>16){case 18048:{Fc=51;break f;break}case 24448:{Fc=53;break f;break}case 20608:{Fc=55;break f;break}case 20736:{Fc=57;break f;break}case 20864:{Fc=59;break f;break}case 20992:{Fc=61;break f;break}case 16256:{Fc=82;break f;break}case 16128:{Fc=84;break f;break}case 16e3:{Fc=86;break f;break}case 15872:{Fc=88;break f;break}case 15744:{Fc=90;break f;break}case 15616:{Fc=92;break f;break}case 15488:{Fc=94;break f;break}case 15360:{Fc=96;break f;break}case 15232:{Fc=98;break f;break}case 15104:{Fc=100;break f;break}default:{Fc=115;break f}}if(Pb<<16>>16<5248)switch(Pb<<16>>16){case 4224:{Fc=64;break f;break}case 4352:{Fc=66;break f;break}case 4480:{Fc=68;break f;break}case 4608:{Fc=70;break f;break}case 4736:{Fc=72;break f;break}case 4864:{Fc=74;break f;break}case 4992:{Fc=76;break f;break}case 5120:{Fc=78;break f;break}default:{Fc=115;break f}}if(Pb<<16>>16<14592)switch(Pb<<16>>16){case 5248:{Fc=80;break f;break}case 8064:{Fc=110;break f;break}case 7936:{Fc=112;break f;break}case 7808:{Fc=114;break f;break}default:{Fc=115;break f}}else switch(Pb<<16>>16){case 14976:{Fc=102;break f;break}case 14848:{Fc=104;break f;break}case 14720:{Fc=106;break f;break}case 14592:{Fc=108;break f;break}default:{Fc=115;break f}}}while(0);if((Fc|0)==51){mG(d,e,78071,Ob)|0;Fc=52}if((Fc|0)==52)switch((b+-4224|0)>>>7&33554431|0){case 158:{Fc=53;break}case 128:{Fc=56;break}case 129:{Fc=58;break}case 130:{Fc=59;break}case 131:{Fc=62;break}case 0:{Fc=65;break}case 1:{Fc=67;break}case 2:{Fc=69;break}case 3:{Fc=71;break}case 4:{Fc=72;break}case 5:{Fc=75;break}case 6:{Fc=76;break}case 7:{Fc=79;break}case 8:{Fc=80;break}case 94:{Fc=82;break}case 93:{Fc=84;break}case 92:{Fc=86;break}case 91:{Fc=89;break}case 90:{Fc=90;break}case 89:{Fc=93;break}case 88:{Fc=94;break}case 87:{Fc=97;break}case 86:{Fc=99;break}case 85:{Fc=101;break}case 84:{Fc=102;break}case 83:{Fc=105;break}case 82:{Fc=106;break}case 81:{Fc=108;break}case 30:{Fc=110;break}case 29:{Fc=112;break}case 28:{Fc=114;break}case 27:{Fc=117;break}case 62:{Fc=119;break}case 61:{Fc=121;break}case 60:{Fc=123;break}case 59:{Fc=125;break}case 96:{Fc=127;break}case 97:{Fc=128;break}case 98:{Fc=129;break}case 99:{Fc=130;break}case 100:{Fc=132;break}case 101:{Fc=134;break}case 102:{Fc=136;break}case 103:{Fc=139;break}case 104:{Fc=141;break}case 32:{Fc=143;break}case 33:{Fc=145;break}case 34:{Fc=147;break}case 35:{Fc=148;break}case 36:{Fc=150;break}case 37:{Fc=152;break}case 38:{Fc=154;break}case 39:{Fc=157;break}case 40:{Fc=158;break}case 41:{Fc=161;break}case 42:{Fc=162;break}case 43:{Fc=164;break}case 44:{Fc=167;break}case 45:{Fc=168;break}case 46:{Fc=171;break}case 47:{Fc=172;break}case 48:{Fc=174;break}case 49:{Fc=177;break}case 50:{Fc=178;break}default:Fc=179}g:do if((Fc|0)==53){mG(d,e,78115,Nb)|0;Hc=b&65535;Fc=54}else if((Fc|0)==56){mG(d,e,78154,Lb)|0;Ob=b&65535;if(Ob<<16>>16<4864)switch(Ob<<16>>16){case 4224:{Fc=64;break g;break}case 4352:{Fc=66;break g;break}case 4480:{Fc=68;break g;break}case 4608:{Fc=70;break g;break}case 4736:{Fc=72;break g;break}default:{Fc=77;break g}}if(Ob<<16>>16<20736)switch(Ob<<16>>16){case 4864:{Fc=74;break g;break}case 4992:{Fc=76;break g;break}default:{Fc=77;break g}}else switch(Ob<<16>>16){case 20736:{Fc=57;break g;break}case 20864:{Fc=59;break g;break}case 20992:{Fc=61;break g;break}default:{Fc=77;break g}}}else if((Fc|0)==58){mG(d,e,78197,Jb)|0;Ob=b&65535;if(Ob<<16>>16<4736)switch(Ob<<16>>16){case 4224:{Fc=64;break g;break}case 4352:{Fc=66;break g;break}case 4480:{Fc=68;break g;break}case 4608:{Fc=70;break g;break}default:{Fc=77;break g}}if(Ob<<16>>16<4992)switch(Ob<<16>>16){case 4736:{Fc=72;break g;break}case 4864:{Fc=74;break g;break}default:{Fc=77;break g}}if(Ob<<16>>16<20864)switch(Ob<<16>>16){case 4992:{Fc=76;break g;break}default:{Fc=77;break g}}else switch(Ob<<16>>16){case 20864:{Fc=59;break g;break}case 20992:{Fc=61;break g;break}default:{Fc=77;break g}}}while(0);h:do if((Fc|0)==54){if(Hc<<16>>16>=15104)switch(Hc<<16>>16){case 20608:{Fc=55;break h;break}case 20736:{Fc=57;break h;break}case 20864:{Fc=59;break h;break}case 20992:{Fc=61;break h;break}case 16256:{Fc=82;break h;break}case 16128:{Fc=84;break h;break}case 16e3:{Fc=86;break h;break}case 15872:{Fc=88;break h;break}case 15744:{Fc=90;break h;break}case 15616:{Fc=92;break h;break}case 15488:{Fc=94;break h;break}case 15360:{Fc=96;break h;break}case 15232:{Fc=98;break h;break}case 15104:{Fc=100;break h;break}case 16512:{Fc=126;break h;break}case 16640:{Fc=128;break h;break}case 16768:{Fc=129;break h;break}case 16896:{Fc=130;break h;break}case 17024:{Fc=132;break h;break}case 17152:{Fc=134;break h;break}case 17280:{Fc=136;break h;break}default:{Ic=Hc;Fc=137;break h}}if(Hc<<16>>16<7808)switch(Hc<<16>>16){case 4224:{Fc=64;break h;break}case 4352:{Fc=66;break h;break}case 4480:{Fc=68;break h;break}case 4608:{Fc=70;break h;break}case 4736:{Fc=72;break h;break}case 4864:{Fc=74;break h;break}case 4992:{Fc=76;break h;break}case 5120:{Fc=78;break h;break}case 5248:{Fc=80;break h;break}case 7680:{Fc=116;break h;break}default:{Ic=Hc;Fc=137;break h}}else switch(Hc<<16>>16){case 14976:{Fc=102;break h;break}case 14848:{Fc=104;break h;break}case 14720:{Fc=106;break h;break}case 14592:{Fc=108;break h;break}case 8064:{Fc=110;break h;break}case 7936:{Fc=112;break h;break}case 7808:{Fc=114;break h;break}case 12160:{Fc=118;break h;break}case 12032:{Fc=120;break h;break}case 11904:{Fc=122;break h;break}case 11776:{Fc=124;break h;break}default:{Ic=Hc;Fc=137;break h}}}while(0);switch(Fc|0){case 55:{mG(d,e,78154,Mb)|0;Fc=179;break}case 57:{mG(d,e,78197,Kb)|0;Fc=179;break}case 59:{mG(d,e,78235,Ib)|0;Fc=60;break}case 61:{mG(d,e,78266,Hb)|0;Fc=179;break}case 64:{mG(d,e,78305,Eb)|0;Fc=179;break}case 66:{mG(d,e,78341,Cb)|0;Fc=179;break}case 92:{mG(d,e,78889,jb)|0;Fc=179;break}case 96:{mG(d,e,78985,gb)|0;Fc=179;break}case 98:{mG(d,e,79026,eb)|0;Fc=179;break}case 116:{mG(d,e,79549,Ua)|0;Fc=179;break}}if((Fc|0)==60)switch((b+-4224|0)>>>7&33554431|0){case 131:{Fc=62;break}case 0:{Fc=65;break}case 1:{Fc=67;break}case 2:{Fc=69;break}case 3:{Fc=71;break}case 4:{Fc=72;break}case 5:{Fc=75;break}case 6:{Fc=76;break}case 7:{Fc=79;break}case 8:{Fc=80;break}case 94:{Fc=82;break}case 93:{Fc=84;break}case 92:{Fc=86;break}case 91:{Fc=89;break}case 90:{Fc=90;break}case 89:{Fc=93;break}case 88:{Fc=94;break}case 87:{Fc=97;break}case 86:{Fc=99;break}case 85:{Fc=101;break}case 84:{Fc=102;break}case 83:{Fc=105;break}case 82:{Fc=106;break}case 81:{Fc=108;break}case 30:{Fc=110;break}case 29:{Fc=112;break}case 28:{Fc=114;break}case 27:{Fc=117;break}case 62:{Fc=119;break}case 61:{Fc=121;break}case 60:{Fc=123;break}case 59:{Fc=125;break}case 96:{Fc=127;break}case 97:{Fc=128;break}case 98:{Fc=129;break}case 99:{Fc=130;break}case 100:{Fc=132;break}case 101:{Fc=134;break}case 102:{Fc=136;break}case 103:{Fc=139;break}case 104:{Fc=141;break}case 32:{Fc=143;break}case 33:{Fc=145;break}case 34:{Fc=147;break}case 35:{Fc=148;break}case 36:{Fc=150;break}case 37:{Fc=152;break}case 38:{Fc=154;break}case 39:{Fc=157;break}case 40:{Fc=158;break}case 41:{Fc=161;break}case 42:{Fc=162;break}case 43:{Fc=164;break}case 44:{Fc=167;break}case 45:{Fc=168;break}case 46:{Fc=171;break}case 47:{Fc=172;break}case 48:{Fc=174;break}case 49:{Fc=177;break}case 50:{Fc=178;break}default:Fc=179}if((Fc|0)==62){mG(d,e,78266,Gb)|0;Fc=81}else if((Fc|0)==65){mG(d,e,78305,Db)|0;switch((b+-4352|0)>>>7&33554431|0){case 0:{Fc=67;break}case 1:{Fc=69;break}case 2:{Fc=71;break}case 3:{Fc=72;break}case 4:{Fc=75;break}case 5:{Fc=76;break}case 6:{Fc=79;break}case 7:{Fc=80;break}default:Fc=81}}i:do if((Fc|0)==67){mG(d,e,78341,Bb)|0;Db=b&65535;if(Db<<16>>16<4992)switch(Db<<16>>16){case 4480:{Fc=68;break i;break}case 4608:{Fc=70;break i;break}case 4736:{Fc=72;break i;break}case 4864:{Fc=74;break i;break}default:{Fc=83;break i}}if(Db<<16>>16<5248)switch(Db<<16>>16){case 4992:{Fc=76;break i;break}case 5120:{Fc=78;break i;break}default:{Fc=83;break i}}if(Db<<16>>16<16256)switch(Db<<16>>16){case 5248:{Fc=80;break i;break}default:{Fc=83;break i}}else switch(Db<<16>>16){case 16256:{Fc=82;break i;break}default:{Fc=83;break i}}}else if((Fc|0)==69){mG(d,e,78377,zb)|0;Db=b&65535;if(Db<<16>>16<4992)switch(Db<<16>>16){case 4608:{Fc=70;break i;break}case 4736:{Fc=72;break i;break}case 4864:{Fc=74;break i;break}default:{Fc=83;break i}}if(Db<<16>>16<5248)switch(Db<<16>>16){case 4992:{Fc=76;break i;break}case 5120:{Fc=78;break i;break}default:{Fc=83;break i}}if(Db<<16>>16<16256)switch(Db<<16>>16){case 5248:{Fc=80;break i;break}default:{Fc=83;break i}}else switch(Db<<16>>16){case 16256:{Fc=82;break i;break}default:{Fc=83;break i}}}else if((Fc|0)==71){mG(d,e,78409,xb)|0;Db=b&65535;if(Db<<16>>16<5120)switch(Db<<16>>16){case 4736:{Fc=72;break i;break}case 4864:{Fc=74;break i;break}case 4992:{Fc=76;break i;break}default:{Fc=85;break i}}if(Db<<16>>16<16128)switch(Db<<16>>16){case 5120:{Fc=78;break i;break}case 5248:{Fc=80;break i;break}default:{Fc=85;break i}}else switch(Db<<16>>16){case 16256:{Fc=82;break i;break}case 16128:{Fc=84;break i;break}default:{Fc=85;break i}}}while(0);if((Fc|0)==68){mG(d,e,78377,Ab)|0;Fc=179}else if((Fc|0)==70){mG(d,e,78409,yb)|0;Fc=179}else if((Fc|0)==72){mG(d,e,78443,wb)|0;Fc=73}else if((Fc|0)==74){mG(d,e,78486,vb)|0;Fc=179}if((Fc|0)==73)switch((b+-4864|0)>>>7&33554431|0){case 0:{Fc=75;break}case 1:{Fc=76;break}case 2:{Fc=79;break}case 3:{Fc=80;break}case 89:{Fc=82;break}case 88:{Fc=84;break}case 87:{Fc=86;break}case 86:{Fc=89;break}case 85:{Fc=90;break}case 84:{Fc=93;break}case 83:{Fc=94;break}case 82:{Fc=97;break}case 81:{Fc=99;break}case 80:{Fc=101;break}case 79:{Fc=102;break}case 78:{Fc=105;break}case 77:{Fc=106;break}case 76:{Fc=108;break}case 25:{Fc=110;break}case 24:{Fc=112;break}case 23:{Fc=114;break}case 22:{Fc=117;break}case 57:{Fc=119;break}case 56:{Fc=121;break}case 55:{Fc=123;break}case 54:{Fc=125;break}case 91:{Fc=127;break}case 92:{Fc=128;break}case 93:{Fc=129;break}case 94:{Fc=130;break}case 95:{Fc=132;break}case 96:{Fc=134;break}case 97:{Fc=136;break}case 98:{Fc=139;break}case 99:{Fc=141;break}case 27:{Fc=143;break}case 28:{Fc=145;break}case 29:{Fc=147;break}case 30:{Fc=148;break}case 31:{Fc=150;break}case 32:{Fc=152;break}case 33:{Fc=154;break}case 34:{Fc=157;break}case 35:{Fc=158;break}case 36:{Fc=161;break}case 37:{Fc=162;break}case 38:{Fc=164;break}case 39:{Fc=167;break}case 40:{Fc=168;break}case 41:{Fc=171;break}case 42:{Fc=172;break}case 43:{Fc=174;break}case 44:{Fc=177;break}case 45:{Fc=178;break}default:Fc=179}j:do if((Fc|0)==75){mG(d,e,78486,ub)|0;vb=b&65535;if(vb<<16>>16<16e3)switch(vb<<16>>16){case 4992:{Fc=76;break j;break}case 5120:{Fc=78;break j;break}case 5248:{Fc=80;break j;break}default:{Fc=87;break j}}else switch(vb<<16>>16){case 16256:{Fc=82;break j;break}case 16128:{Fc=84;break j;break}case 16e3:{Fc=86;break j;break}default:{Fc=87;break j}}}while(0);if((Fc|0)==76){mG(d,e,78528,tb)|0;Fc=77}else if((Fc|0)==78){mG(d,e,78599,sb)|0;Fc=179}if((Fc|0)==77)switch((b+-5120|0)>>>7&33554431|0){case 0:{Fc=79;break}case 1:{Fc=80;break}case 87:{Fc=82;break}case 86:{Fc=84;break}case 85:{Fc=86;break}case 84:{Fc=89;break}case 83:{Fc=90;break}case 82:{Fc=93;break}case 81:{Fc=94;break}case 80:{Fc=97;break}case 79:{Fc=99;break}case 78:{Fc=101;break}case 77:{Fc=102;break}case 76:{Fc=105;break}case 75:{Fc=106;break}case 74:{Fc=108;break}case 23:{Fc=110;break}case 22:{Fc=112;break}case 21:{Fc=114;break}case 20:{Fc=117;break}case 55:{Fc=119;break}case 54:{Fc=121;break}case 53:{Fc=123;break}case 52:{Fc=125;break}case 89:{Fc=127;break}case 90:{Fc=128;break}case 91:{Fc=129;break}case 92:{Fc=130;break}case 93:{Fc=132;break}case 94:{Fc=134;break}case 95:{Fc=136;break}case 96:{Fc=139;break}case 97:{Fc=141;break}case 25:{Fc=143;break}case 26:{Fc=145;break}case 27:{Fc=147;break}case 28:{Fc=148;break}case 29:{Fc=150;break}case 30:{Fc=152;break}case 31:{Fc=154;break}case 32:{Fc=157;break}case 33:{Fc=158;break}default:Fc=159}k:do if((Fc|0)==79){mG(d,e,78599,rb)|0;sb=b&65535;if(sb<<16>>16>=16e3)switch(sb<<16>>16){case 16256:{Fc=82;break k;break}case 16128:{Fc=84;break k;break}case 16e3:{Fc=86;break k;break}default:{Fc=91;break k}}if(sb<<16>>16<15744)switch(sb<<16>>16){case 5248:{Fc=80;break k;break}default:{Fc=91;break k}}else switch(sb<<16>>16){case 15872:{Fc=88;break k;break}case 15744:{Fc=90;break k;break}default:{Fc=91;break k}}}while(0);if((Fc|0)==80){mG(d,e,78662,qb)|0;Fc=81}else if((Fc|0)==88){mG(d,e,78829,mb)|0;Fc=179}if((Fc|0)==81)switch((b+-7680|0)>>>7&33554431|0){case 67:{Fc=82;break}case 66:{Fc=84;break}case 65:{Fc=86;break}case 64:{Fc=89;break}case 63:{Fc=90;break}case 62:{Fc=93;break}case 61:{Fc=94;break}case 60:{Fc=97;break}case 59:{Fc=99;break}case 58:{Fc=101;break}case 57:{Fc=102;break}case 56:{Fc=105;break}case 55:{Fc=106;break}case 54:{Fc=108;break}case 3:{Fc=110;break}case 2:{Fc=112;break}case 1:{Fc=114;break}case 0:{Fc=117;break}case 35:{Fc=119;break}case 34:{Fc=121;break}case 33:{Fc=123;break}case 32:{Fc=125;break}case 69:{Fc=127;break}case 70:{Fc=128;break}case 71:{Fc=129;break}case 72:{Fc=130;break}case 73:{Fc=132;break}case 74:{Fc=134;break}case 75:{Fc=136;break}case 76:{Fc=139;break}case 77:{Fc=141;break}case 5:{Fc=143;break}case 6:{Fc=145;break}case 7:{Fc=147;break}case 8:{Fc=148;break}case 9:{Fc=150;break}case 10:{Fc=152;break}case 11:{Fc=154;break}case 12:{Fc=157;break}case 13:{Fc=158;break}case 14:{Fc=161;break}case 15:{Fc=162;break}default:Fc=163}if((Fc|0)==82){mG(d,e,78701,pb)|0;Fc=83}if((Fc|0)==83)switch((b+-7680|0)>>>7&33554431|0){case 66:{Fc=84;break}case 65:{Fc=86;break}case 64:{Fc=89;break}case 63:{Fc=90;break}case 62:{Fc=93;break}case 61:{Fc=94;break}case 60:{Fc=97;break}case 59:{Fc=99;break}case 58:{Fc=101;break}case 57:{Fc=102;break}case 56:{Fc=105;break}case 55:{Fc=106;break}case 54:{Fc=108;break}case 3:{Fc=110;break}case 2:{Fc=112;break}case 1:{Fc=114;break}case 0:{Fc=117;break}case 35:{Fc=119;break}case 34:{Fc=121;break}case 33:{Fc=123;break}case 32:{Fc=125;break}case 69:{Fc=127;break}case 70:{Fc=128;break}case 71:{Fc=129;break}case 72:{Fc=130;break}case 73:{Fc=132;break}case 74:{Fc=134;break}case 75:{Fc=136;break}case 76:{Fc=139;break}case 77:{Fc=141;break}case 5:{Fc=143;break}case 6:{Fc=145;break}case 7:{Fc=147;break}case 8:{Fc=148;break}case 9:{Fc=150;break}case 10:{Fc=152;break}case 11:{Fc=154;break}case 12:{Fc=157;break}case 13:{Fc=158;break}case 14:{Fc=161;break}case 15:{Fc=162;break}case 16:{Fc=164;break}default:Fc=165}if((Fc|0)==84){mG(d,e,78731,ob)|0;Fc=85}if((Fc|0)==85)switch((b+-7680|0)>>>7&33554431|0){case 65:{Fc=86;break}case 64:{Fc=89;break}case 63:{Fc=90;break}case 62:{Fc=93;break}case 61:{Fc=94;break}case 60:{Fc=97;break}case 59:{Fc=99;break}case 58:{Fc=101;break}case 57:{Fc=102;break}case 56:{Fc=105;break}case 55:{Fc=106;break}case 54:{Fc=108;break}case 3:{Fc=110;break}case 2:{Fc=112;break}case 1:{Fc=114;break}case 0:{Fc=117;break}case 35:{Fc=119;break}case 34:{Fc=121;break}case 33:{Fc=123;break}case 32:{Fc=125;break}case 69:{Fc=127;break}case 70:{Fc=128;break}case 71:{Fc=129;break}case 72:{Fc=130;break}case 73:{Fc=132;break}case 74:{Fc=134;break}case 75:{Fc=136;break}case 76:{Fc=139;break}case 77:{Fc=141;break}case 5:{Fc=143;break}case 6:{Fc=145;break}case 7:{Fc=147;break}case 8:{Fc=148;break}case 9:{Fc=150;break}case 10:{Fc=152;break}case 11:{Fc=154;break}case 12:{Fc=157;break}case 13:{Fc=158;break}case 14:{Fc=161;break}case 15:{Fc=162;break}case 16:{Fc=164;break}case 17:{Fc=167;break}case 18:{Fc=168;break}case 19:{Fc=171;break}case 20:{Fc=172;break}case 21:{Fc=174;break}case 22:{Fc=177;break}case 23:{Fc=178;break}default:Fc=179}if((Fc|0)==86){mG(d,e,78791,nb)|0;Fc=87}if((Fc|0)==87)switch((b+-7680|0)>>>7&33554431|0){case 64:{Fc=89;break}case 63:{Fc=90;break}case 62:{Fc=93;break}case 61:{Fc=94;break}case 60:{Fc=97;break}case 59:{Fc=99;break}case 58:{Fc=101;break}case 57:{Fc=102;break}case 56:{Fc=105;break}case 55:{Fc=106;break}case 54:{Fc=108;break}case 3:{Fc=110;break}case 2:{Fc=112;break}case 1:{Fc=114;break}case 0:{Fc=117;break}case 35:{Fc=119;break}case 34:{Fc=121;break}case 33:{Fc=123;break}case 32:{Fc=125;break}case 69:{Fc=127;break}case 70:{Fc=128;break}case 71:{Fc=129;break}case 72:{Fc=130;break}case 73:{Fc=132;break}case 74:{Fc=134;break}case 75:{Fc=136;break}case 76:{Fc=139;break}case 77:{Fc=141;break}case 5:{Fc=143;break}case 6:{Fc=145;break}case 7:{Fc=147;break}case 8:{Fc=148;break}case 9:{Fc=150;break}case 10:{Fc=152;break}case 11:{Fc=154;break}case 12:{Fc=157;break}case 13:{Fc=158;break}case 14:{Fc=161;break}case 15:{Fc=162;break}case 16:{Fc=164;break}case 17:{Fc=167;break}case 18:{Fc=168;break}case 19:{Fc=171;break}case 20:{Fc=172;break}case 21:{Fc=174;break}case 22:{Fc=177;break}case 23:{Fc=178;break}default:Fc=179}if((Fc|0)==89){mG(d,e,78829,lb)|0;switch((b+-14976|0)>>>7&33554431|0){case 6:{Fc=90;break}case 5:{Fc=93;break}case 4:{Fc=94;break}case 3:{Fc=97;break}case 2:{Fc=99;break}case 1:{Fc=101;break}case 0:{Fc=102;break}default:Fc=103}}if((Fc|0)==90){mG(d,e,78860,kb)|0;Fc=91}if((Fc|0)==91)switch((b+-7680|0)>>>7&33554431|0){case 62:{Fc=93;break}case 61:{Fc=94;break}case 60:{Fc=97;break}case 59:{Fc=99;break}case 58:{Fc=101;break}case 57:{Fc=102;break}case 56:{Fc=105;break}case 55:{Fc=106;break}case 54:{Fc=108;break}case 3:{Fc=110;break}case 2:{Fc=112;break}case 1:{Fc=114;break}case 0:{Fc=117;break}case 35:{Fc=119;break}case 34:{Fc=121;break}case 33:{Fc=123;break}case 32:{Fc=125;break}case 69:{Fc=127;break}case 70:{Fc=128;break}case 71:{Fc=129;break}case 72:{Fc=130;break}case 73:{Fc=132;break}case 74:{Fc=134;break}case 75:{Fc=136;break}case 76:{Fc=139;break}case 77:{Fc=141;break}case 5:{Fc=143;break}case 6:{Fc=145;break}case 7:{Fc=147;break}case 8:{Fc=148;break}case 9:{Fc=150;break}case 10:{Fc=152;break}case 11:{Fc=154;break}case 12:{Fc=157;break}case 13:{Fc=158;break}case 14:{Fc=161;break}case 15:{Fc=162;break}case 16:{Fc=164;break}case 17:{Fc=167;break}case 18:{Fc=168;break}case 19:{Fc=171;break}case 20:{Fc=172;break}default:Fc=173}if((Fc|0)==93){mG(d,e,78889,ib)|0;switch((b+-14720|0)>>>7&33554431|0){case 6:{Fc=94;break}case 5:{Fc=97;break}case 4:{Fc=99;break}case 3:{Fc=101;break}case 2:{Fc=102;break}case 1:{Fc=105;break}case 0:{Fc=106;break}default:Fc=107}}if((Fc|0)==94){mG(d,e,78919,hb)|0;Fc=95}if((Fc|0)==95)switch((b+-7680|0)>>>7&33554431|0){case 60:{Fc=97;break}case 59:{Fc=99;break}case 58:{Fc=101;break}case 57:{Fc=102;break}case 56:{Fc=105;break}case 55:{Fc=106;break}case 54:{Fc=108;break}case 3:{Fc=110;break}case 2:{Fc=112;break}case 1:{Fc=114;break}case 0:{Fc=117;break}case 35:{Fc=119;break}case 34:{Fc=121;break}case 33:{Fc=123;break}case 32:{Fc=125;break}case 69:{Fc=127;break}case 70:{Fc=128;break}case 71:{Fc=129;break}case 72:{Fc=130;break}case 73:{Fc=132;break}case 74:{Fc=134;break}case 75:{Fc=136;break}case 76:{Fc=139;break}case 77:{Fc=141;break}case 5:{Fc=143;break}case 6:{Fc=145;break}case 7:{Fc=147;break}case 8:{Fc=148;break}case 9:{Fc=150;break}case 10:{Fc=152;break}case 11:{Fc=154;break}case 12:{Fc=157;break}case 13:{Fc=158;break}case 14:{Fc=161;break}case 15:{Fc=162;break}case 16:{Fc=164;break}case 17:{Fc=167;break}case 18:{Fc=168;break}case 19:{Fc=171;break}case 20:{Fc=172;break}case 21:{Fc=174;break}case 22:{Fc=177;break}case 23:{Fc=178;break}default:Fc=179}if((Fc|0)==97){mG(d,e,78985,fb)|0;switch((b+-14592|0)>>>7&33554431|0){case 5:{Fc=99;break}case 4:{Fc=101;break}case 3:{Fc=102;break}case 2:{Fc=105;break}case 1:{Fc=106;break}case 0:{Fc=108;break}default:Fc=109}}l:do if((Fc|0)==99){mG(d,e,79026,db)|0;fb=b&65535;if(fb<<16>>16>=14848)switch(fb<<16>>16){case 15104:{Fc=100;break l;break}case 14976:{Fc=102;break l;break}case 14848:{Fc=104;break l;break}default:{Fc=111;break l}}if(fb<<16>>16<14592)switch(fb<<16>>16){case 8064:{Fc=110;break l;break}default:{Fc=111;break l}}else switch(fb<<16>>16){case 14720:{Fc=106;break l;break}case 14592:{Fc=108;break l;break}default:{Fc=111;break l}}}else if((Fc|0)==101){mG(d,e,79096,bb)|0;fb=b&65535;if(fb<<16>>16>=14720)switch(fb<<16>>16){case 14976:{Fc=102;break l;break}case 14848:{Fc=104;break l;break}case 14720:{Fc=106;break l;break}default:{Fc=113;break l}}if(fb<<16>>16<8064)switch(fb<<16>>16){case 7936:{Fc=112;break l;break}default:{Fc=113;break l}}if(fb<<16>>16<14592)switch(fb<<16>>16){case 8064:{Fc=110;break l;break}default:{Fc=113;break l}}else switch(fb<<16>>16){case 14592:{Fc=108;break l;break}default:{Fc=113;break l}}}while(0);if((Fc|0)==100){mG(d,e,79096,cb)|0;Fc=179}else if((Fc|0)==102){mG(d,e,79168,ab)|0;Fc=103}else if((Fc|0)==104){mG(d,e,79211,$a)|0;Fc=179}if((Fc|0)==103)switch((b+-7680|0)>>>7&33554431|0){case 56:{Fc=105;break}case 55:{Fc=106;break}case 54:{Fc=108;break}case 3:{Fc=110;break}case 2:{Fc=112;break}case 1:{Fc=114;break}case 0:{Fc=117;break}case 35:{Fc=119;break}case 34:{Fc=121;break}case 33:{Fc=123;break}case 32:{Fc=125;break}case 69:{Fc=127;break}case 70:{Fc=128;break}case 71:{Fc=129;break}case 72:{Fc=130;break}case 73:{Fc=132;break}case 74:{Fc=134;break}case 75:{Fc=136;break}case 76:{Fc=139;break}case 77:{Fc=141;break}case 5:{Fc=143;break}case 6:{Fc=145;break}case 7:{Fc=147;break}case 8:{Fc=148;break}case 9:{Fc=150;break}case 10:{Fc=152;break}case 11:{Fc=154;break}case 12:{Fc=157;break}case 13:{Fc=158;break}case 14:{Fc=161;break}case 15:{Fc=162;break}case 16:{Fc=164;break}case 17:{Fc=167;break}case 18:{Fc=168;break}case 19:{Fc=171;break}case 20:{Fc=172;break}case 21:{Fc=174;break}case 22:{Fc=177;break}case 23:{Fc=178;break}default:Fc=179}m:do if((Fc|0)==105){mG(d,e,79211,_a)|0;$a=b&65535;if($a<<16>>16<8064)switch($a<<16>>16){case 7936:{Fc=112;break m;break}case 7808:{Fc=114;break m;break}default:{Fc=115;break m}}if($a<<16>>16<14592)switch($a<<16>>16){case 8064:{Fc=110;break m;break}default:{Fc=115;break m}}else switch($a<<16>>16){case 14720:{Fc=106;break m;break}case 14592:{Fc=108;break m;break}default:{Fc=115;break m}}}while(0);if((Fc|0)==106){mG(d,e,79279,Za)|0;Fc=107}if((Fc|0)==107)switch((b+-7680|0)>>>7&33554431|0){case 54:{Fc=108;break}case 3:{Fc=110;break}case 2:{Fc=112;break}case 1:{Fc=114;break}case 0:{Fc=117;break}case 35:{Fc=119;break}case 34:{Fc=121;break}case 33:{Fc=123;break}case 32:{Fc=125;break}case 69:{Fc=127;break}case 70:{Fc=128;break}case 71:{Fc=129;break}case 72:{Fc=130;break}case 73:{Fc=132;break}case 74:{Fc=134;break}case 75:{Fc=136;break}case 76:{Fc=139;break}case 77:{Fc=141;break}case 5:{Fc=143;break}case 6:{Fc=145;break}case 7:{Fc=147;break}case 8:{Fc=148;break}case 9:{Fc=150;break}case 10:{Fc=152;break}case 11:{Fc=154;break}case 12:{Fc=157;break}case 13:{Fc=158;break}case 14:{Fc=161;break}case 15:{Fc=162;break}case 16:{Fc=164;break}case 17:{Fc=167;break}case 18:{Fc=168;break}case 19:{Fc=171;break}case 20:{Fc=172;break}case 21:{Fc=174;break}case 22:{Fc=177;break}case 23:{Fc=178;break}default:Fc=179}if((Fc|0)==108){mG(d,e,79335,Ya)|0;Fc=109}if((Fc|0)==109)switch((b+-7680|0)>>>7&33554431|0){case 3:{Fc=110;break}case 2:{Fc=112;break}case 1:{Fc=114;break}case 0:{Fc=117;break}case 35:{Fc=119;break}case 34:{Fc=121;break}case 33:{Fc=123;break}case 32:{Fc=125;break}case 69:{Fc=127;break}case 70:{Fc=128;break}case 71:{Fc=129;break}case 72:{Fc=130;break}case 73:{Fc=132;break}case 74:{Fc=134;break}case 75:{Fc=136;break}case 76:{Fc=139;break}case 77:{Fc=141;break}case 5:{Fc=143;break}case 6:{Fc=145;break}case 7:{Fc=147;break}case 8:{Fc=148;break}case 9:{Fc=150;break}case 10:{Fc=152;break}case 11:{Fc=154;break}case 12:{Fc=157;break}case 13:{Fc=158;break}case 14:{Fc=161;break}case 15:{Fc=162;break}case 16:{Fc=164;break}case 17:{Fc=167;break}case 18:{Fc=168;break}case 19:{Fc=171;break}case 20:{Fc=172;break}case 21:{Fc=174;break}case 22:{Fc=177;break}case 23:{Fc=178;break}default:Fc=179}if((Fc|0)==110){mG(d,e,79400,Xa)|0;Fc=111}if((Fc|0)==111)switch((b+-7680|0)>>>7&33554431|0){case 2:{Fc=112;break}case 1:{Fc=114;break}case 0:{Fc=117;break}case 35:{Fc=119;break}case 34:{Fc=121;break}case 33:{Fc=123;break}case 32:{Fc=125;break}case 69:{Fc=127;break}case 70:{Fc=128;break}case 71:{Fc=129;break}case 72:{Fc=130;break}case 73:{Fc=132;break}case 74:{Fc=134;break}case 75:{Fc=136;break}case 76:{Fc=139;break}case 77:{Fc=141;break}case 5:{Fc=143;break}case 6:{Fc=145;break}case 7:{Fc=147;break}case 8:{Fc=148;break}case 9:{Fc=150;break}case 10:{Fc=152;break}case 11:{Fc=154;break}case 12:{Fc=157;break}case 13:{Fc=158;break}case 14:{Fc=161;break}case 15:{Fc=162;break}case 16:{Fc=164;break}case 17:{Fc=167;break}case 18:{Fc=168;break}case 19:{Fc=171;break}case 20:{Fc=172;break}case 21:{Fc=174;break}case 22:{Fc=177;break}case 23:{Fc=178;break}default:Fc=179}if((Fc|0)==112){mG(d,e,79442,Wa)|0;Fc=113}if((Fc|0)==113)switch((b+-7680|0)>>>7&33554431|0){case 1:{Fc=114;break}case 0:{Fc=117;break}case 35:{Fc=119;break}case 34:{Fc=121;break}case 33:{Fc=123;break}case 32:{Fc=125;break}case 69:{Fc=127;break}case 70:{Fc=128;break}case 71:{Fc=129;break}case 72:{Fc=130;break}case 73:{Fc=132;break}case 74:{Fc=134;break}case 75:{Fc=136;break}case 76:{Fc=139;break}case 77:{Fc=141;break}case 5:{Fc=143;break}case 6:{Fc=145;break}case 7:{Fc=147;break}case 8:{Fc=148;break}case 9:{Fc=150;break}case 10:{Fc=152;break}case 11:{Fc=154;break}case 12:{Fc=157;break}case 13:{Fc=158;break}case 14:{Fc=161;break}case 15:{Fc=162;break}case 16:{Fc=164;break}case 17:{Fc=167;break}case 18:{Fc=168;break}case 19:{Fc=171;break}case 20:{Fc=172;break}case 21:{Fc=174;break}case 22:{Fc=177;break}case 23:{Fc=178;break}default:Fc=179}if((Fc|0)==114){mG(d,e,79509,Va)|0;Fc=115}if((Fc|0)==115)switch((b+-7680|0)>>>7&33554431|0){case 0:{Fc=117;break}case 35:{Fc=119;break}case 34:{Fc=121;break}case 33:{Fc=123;break}case 32:{Fc=125;break}case 69:{Fc=127;break}case 70:{Fc=128;break}case 71:{Fc=129;break}case 72:{Fc=130;break}case 73:{Fc=132;break}case 74:{Fc=134;break}case 75:{Fc=136;break}case 76:{Fc=139;break}case 77:{Fc=141;break}case 5:{Fc=143;break}case 6:{Fc=145;break}case 7:{Fc=147;break}case 8:{Fc=148;break}case 9:{Fc=150;break}case 10:{Fc=152;break}case 11:{Fc=154;break}case 12:{Fc=157;break}case 13:{Fc=158;break}case 14:{Fc=161;break}case 15:{Fc=162;break}case 16:{Fc=164;break}case 17:{Fc=167;break}case 18:{Fc=168;break}case 19:{Fc=171;break}case 20:{Fc=172;break}case 21:{Fc=174;break}case 22:{Fc=177;break}case 23:{Fc=178;break}default:Fc=179}n:do if((Fc|0)==117){mG(d,e,79549,Ta)|0;switch((b+-8320|0)>>>7&33554431|0){case 30:{Fc=118;break}case 29:{Fc=120;break}case 28:{Fc=122;break}case 27:{Fc=124;break}case 64:{Fc=126;break}case 65:{Fc=128;break}case 66:{Fc=129;break}case 67:{Fc=130;break}case 68:{Fc=132;break}case 69:{Fc=134;break}case 70:{Fc=136;break}case 71:{Fc=138;break}case 72:{Fc=140;break}case 0:{Fc=142;break}case 1:{Fc=144;break}case 2:{Fc=146;break}case 3:{Fc=148;break}case 4:{Fc=150;break}case 5:{Fc=152;break}case 6:{Fc=154;break}case 7:{Fc=156;break}case 8:{Fc=158;break}case 9:{Fc=160;break}case 10:{Fc=162;break}case 11:{Fc=164;break}case 12:{Fc=166;break}case 13:{Fc=168;break}case 14:{Fc=170;break}case 15:{Fc=172;break}case 16:{Fc=174;break}case 17:{Fc=176;break}case 18:{Fc=178;break}default:Fc=179}}else if((Fc|0)==119){mG(d,e,79623,Ra)|0;switch((b+-8320|0)>>>7&33554431|0){case 29:{Fc=120;break}case 28:{Fc=122;break}case 27:{Fc=124;break}case 64:{Fc=126;break}case 65:{Fc=128;break}case 66:{Fc=129;break}case 67:{Fc=130;break}case 68:{Fc=132;break}case 69:{Fc=134;break}case 70:{Fc=136;break}case 71:{Fc=138;break}case 72:{Fc=140;break}case 0:{Fc=142;break}case 1:{Fc=144;break}case 2:{Fc=146;break}case 3:{Fc=148;break}case 4:{Fc=150;break}case 5:{Fc=152;break}case 6:{Fc=154;break}case 7:{Fc=156;break}case 8:{Fc=158;break}case 9:{Fc=160;break}case 10:{Fc=162;break}case 11:{Fc=164;break}case 12:{Fc=166;break}case 13:{Fc=168;break}case 14:{Fc=170;break}case 15:{Fc=172;break}case 16:{Fc=174;break}case 17:{Fc=176;break}case 18:{Fc=178;break}default:Fc=179}}else if((Fc|0)==121){mG(d,e,79664,Pa)|0;switch((b+-8320|0)>>>7&33554431|0){case 28:{Fc=122;break}case 27:{Fc=124;break}case 64:{Fc=126;break}case 65:{Fc=128;break}case 66:{Fc=129;break}case 67:{Fc=130;break}case 68:{Fc=132;break}case 69:{Fc=134;break}case 70:{Fc=136;break}case 71:{Fc=138;break}case 72:{Fc=140;break}case 0:{Fc=142;break}case 1:{Fc=144;break}case 2:{Fc=146;break}case 3:{Fc=148;break}case 4:{Fc=150;break}case 5:{Fc=152;break}case 6:{Fc=154;break}case 7:{Fc=156;break}case 8:{Fc=158;break}case 9:{Fc=160;break}case 10:{Fc=162;break}case 11:{Fc=164;break}case 12:{Fc=166;break}case 13:{Fc=168;break}case 14:{Fc=170;break}case 15:{Fc=172;break}case 16:{Fc=174;break}case 17:{Fc=176;break}case 18:{Fc=178;break}default:Fc=179}}else if((Fc|0)==123){mG(d,e,79694,Na)|0;switch((b&65535)<<16>>16){case 11776:{Fc=124;break}case 16512:{Fc=126;break}case 16640:{Fc=128;break}case 16768:{Fc=129;break}case 16896:{Fc=130;break}case 17024:{Fc=132;break}case 17152:{Fc=134;break}case 17280:{Fc=136;break}case 17408:{Fc=138;break}case 17536:{Fc=140;break}case 8320:{Fc=142;break}case 8448:{Fc=144;break}case 8576:{Fc=146;break}case 8704:{Fc=148;break}case 8832:{Fc=150;break}case 8960:{Fc=152;break}case 9088:{Fc=154;break}case 9216:{Fc=156;break}case 9344:{Fc=158;break}case 9472:{Fc=160;break}case 9600:{Fc=162;break}case 9728:{Fc=164;break}case 9856:{Fc=166;break}case 9984:{Fc=168;break}case 10112:{Fc=170;break}case 10240:{Fc=172;break}case 10368:{Fc=174;break}case 10496:{Fc=176;break}case 10624:{Fc=178;break}default:Fc=179}}else if((Fc|0)==125){mG(d,e,79751,La)|0;switch((b+-16512|0)>>>7&33554431|0){case 0:{Fc=127;break}case 1:{Fc=128;break}case 2:{Fc=129;break}case 3:{Fc=130;break}case 4:{Fc=132;break}default:Fc=133}}else if((Fc|0)==139){mG(d,e,80139,Ba)|0;Va=b&65535;if(Va<<16>>16<8576)switch(Va<<16>>16){case 8320:{Fc=142;break n;break}case 8448:{Fc=144;break n;break}default:{Fc=149;break n}}if(Va<<16>>16<8704)switch(Va<<16>>16){case 8576:{Fc=146;break n;break}default:{Fc=149;break n}}if(Va<<16>>16<17536)switch(Va<<16>>16){case 8704:{Fc=148;break n;break}default:{Fc=149;break n}}else switch(Va<<16>>16){case 17536:{Fc=140;break n;break}default:{Fc=149;break n}}}else if((Fc|0)==141){mG(d,e,80198,za)|0;switch((b+-8320|0)>>>7&33554431|0){case 0:{Fc=143;break}case 1:{Fc=145;break}case 2:{Fc=147;break}case 3:{Fc=148;break}case 4:{Fc=150;break}default:Fc=151}}while(0);if((Fc|0)==118){mG(d,e,79623,Sa)|0;Fc=179}else if((Fc|0)==120){mG(d,e,79664,Qa)|0;Fc=179}else if((Fc|0)==122){mG(d,e,79694,Oa)|0;Fc=179}else if((Fc|0)==124){mG(d,e,79751,Ma)|0;Fc=179}else if((Fc|0)==126){mG(d,e,79824,Ka)|0;Fc=179}else if((Fc|0)==127){mG(d,e,79824,Ja)|0;switch((b+-16640|0)>>>7&33554431|0){case 0:{Fc=128;break}case 1:{Fc=129;break}case 2:{Fc=130;break}case 3:{Fc=132;break}case 4:{Fc=134;break}default:Fc=135}}else if((Fc|0)==143){mG(d,e,80254,xa)|0;switch((b+-8448|0)>>>7&33554431|0){case 0:{Fc=145;break}case 1:{Fc=147;break}case 2:{Fc=148;break}case 3:{Fc=150;break}default:Fc=151}}if((Fc|0)==128){mG(d,e,79863,Ia)|0;switch((b&65535)<<16>>16){case 16768:{Fc=129;break}case 16896:{Fc=130;break}case 17024:{Fc=132;break}case 17152:{Fc=134;break}case 17280:{Fc=136;break}case 17408:{Fc=138;break}case 17536:{Fc=140;break}case 8320:{Fc=142;break}case 8448:{Fc=144;break}case 8576:{Fc=146;break}case 8704:{Fc=148;break}case 8832:{Fc=150;break}case 8960:{Fc=152;break}case 9088:{Fc=154;break}case 9216:{Fc=156;break}case 9344:{Fc=158;break}case 9472:{Fc=160;break}case 9600:{Fc=162;break}case 9728:{Fc=164;break}case 9856:{Fc=166;break}case 9984:{Fc=168;break}case 10112:{Fc=170;break}case 10240:{Fc=172;break}case 10368:{Fc=174;break}case 10496:{Fc=176;break}case 10624:{Fc=178;break}default:Fc=179}}else if((Fc|0)==145){mG(d,e,80322,va)|0;switch((b+-8576|0)>>>7&33554431|0){case 0:{Fc=147;break}case 1:{Fc=148;break}case 2:{Fc=150;break}case 3:{Fc=152;break}default:Fc=153}}if((Fc|0)==129){mG(d,e,79921,Ha)|0;switch((b&65535)<<16>>16){case 16896:{Fc=130;break}case 17024:{Fc=132;break}case 17152:{Fc=134;break}case 17280:{Fc=136;break}case 17408:{Fc=138;break}case 17536:{Fc=140;break}case 8320:{Fc=142;break}case 8448:{Fc=144;break}case 8576:{Fc=146;break}case 8704:{Fc=148;break}case 8832:{Fc=150;break}case 8960:{Fc=152;break}case 9088:{Fc=154;break}case 9216:{Fc=156;break}case 9344:{Fc=158;break}case 9472:{Fc=160;break}case 9600:{Fc=162;break}case 9728:{Fc=164;break}case 9856:{Fc=166;break}case 9984:{Fc=168;break}case 10112:{Fc=170;break}case 10240:{Fc=172;break}case 10368:{Fc=174;break}case 10496:{Fc=176;break}case 10624:{Fc=178;break}default:Fc=179}}else if((Fc|0)==147){mG(d,e,80354,ta)|0;switch((b+-8704|0)>>>7&33554431|0){case 0:{Fc=148;break}case 1:{Fc=150;break}case 2:{Fc=152;break}case 3:{Fc=154;break}default:Fc=155}}if((Fc|0)==130){mG(d,e,79971,Ga)|0;Gc=b&65535;Fc=131}if((Fc|0)==131)switch(Gc<<16>>16){case 17024:{Fc=132;break}case 17152:{Fc=134;break}case 17280:{Fc=136;break}case 17408:{Fc=138;break}case 17536:{Fc=140;break}case 8320:{Fc=142;break}case 8448:{Fc=144;break}case 8576:{Fc=146;break}case 8704:{Fc=148;break}case 8832:{Fc=150;break}case 8960:{Fc=152;break}case 9088:{Fc=154;break}case 9216:{Fc=156;break}case 9344:{Fc=158;break}case 9472:{Fc=160;break}case 9600:{Fc=162;break}case 9728:{Fc=164;break}case 9856:{Fc=166;break}case 9984:{Fc=168;break}case 10112:{Fc=170;break}case 10240:{Fc=172;break}case 10368:{Fc=174;break}case 10496:{Fc=176;break}case 10624:{Fc=178;break}default:Fc=179}if((Fc|0)==132){mG(d,e,80025,Fa)|0;Fc=133}if((Fc|0)==133)switch((b&65535)<<16>>16){case 17152:{Fc=134;break}case 17280:{Fc=136;break}case 17408:{Fc=138;break}case 17536:{Fc=140;break}case 8320:{Fc=142;break}case 8448:{Fc=144;break}case 8576:{Fc=146;break}case 8704:{Fc=148;break}case 8832:{Fc=150;break}case 8960:{Fc=152;break}case 9088:{Fc=154;break}case 9216:{Fc=156;break}case 9344:{Fc=158;break}case 9472:{Fc=160;break}case 9600:{Fc=162;break}case 9728:{Fc=164;break}case 9856:{Fc=166;break}case 9984:{Fc=168;break}case 10112:{Fc=170;break}case 10240:{Fc=172;break}case 10368:{Fc=174;break}case 10496:{Fc=176;break}case 10624:{Fc=178;break}default:Fc=179}if((Fc|0)==134){mG(d,e,80063,Ea)|0;Fc=135}if((Fc|0)==135)switch((b&65535)<<16>>16){case 17280:{Fc=136;break}case 17408:{Fc=138;break}case 17536:{Fc=140;break}case 8320:{Fc=142;break}case 8448:{Fc=144;break}case 8576:{Fc=146;break}case 8704:{Fc=148;break}case 8832:{Fc=150;break}case 8960:{Fc=152;break}case 9088:{Fc=154;break}case 9216:{Fc=156;break}case 9344:{Fc=158;break}case 9472:{Fc=160;break}case 9600:{Fc=162;break}case 9728:{Fc=164;break}case 9856:{Fc=166;break}case 9984:{Fc=168;break}case 10112:{Fc=170;break}case 10240:{Fc=172;break}case 10368:{Fc=174;break}case 10496:{Fc=176;break}case 10624:{Fc=178;break}default:Fc=179}if((Fc|0)==136){mG(d,e,80102,Da)|0;Ic=b&65535;Fc=137}if((Fc|0)==137)switch(Ic<<16>>16){case 17408:{Fc=138;break}case 17536:{Fc=140;break}case 8320:{Fc=142;break}case 8448:{Fc=144;break}case 8576:{Fc=146;break}case 8704:{Fc=148;break}case 8832:{Fc=150;break}case 8960:{Fc=152;break}case 9088:{Fc=154;break}case 9216:{Fc=156;break}case 9344:{Fc=158;break}case 9472:{Fc=160;break}case 9600:{Fc=162;break}case 9728:{Fc=164;break}case 9856:{Fc=166;break}case 9984:{Fc=168;break}case 10112:{Fc=170;break}case 10240:{Fc=172;break}case 10368:{Fc=174;break}case 10496:{Fc=176;break}case 10624:{Fc=178;break}default:Fc=179}switch(Fc|0){case 138:{mG(d,e,80139,Ca)|0;Fc=179;break}case 140:{mG(d,e,80198,Aa)|0;Fc=179;break}case 142:{mG(d,e,80254,ya)|0;Fc=179;break}case 144:{mG(d,e,80322,wa)|0;Fc=179;break}case 146:{mG(d,e,80354,ua)|0;Fc=179;break}case 148:{mG(d,e,80425,sa)|0;Fc=149;break}case 156:{mG(d,e,80602,oa)|0;Fc=179;break}case 160:{mG(d,e,80684,la)|0;Fc=179;break}case 166:{mG(d,e,80830,ha)|0;Fc=179;break}case 170:{mG(d,e,80987,ea)|0;Fc=179;break}}if((Fc|0)==149)switch((b+-8832|0)>>>7&33554431|0){case 0:{Fc=150;break}case 1:{Fc=152;break}case 2:{Fc=154;break}case 3:{Fc=157;break}case 4:{Fc=158;break}case 5:{Fc=161;break}case 6:{Fc=162;break}case 7:{Fc=164;break}case 8:{Fc=167;break}case 9:{Fc=168;break}case 10:{Fc=171;break}case 11:{Fc=172;break}case 12:{Fc=174;break}case 13:{Fc=177;break}case 14:{Fc=178;break}default:Fc=179}if((Fc|0)==150){mG(d,e,80475,ra)|0;Fc=151}if((Fc|0)==151)switch((b+-8960|0)>>>7&33554431|0){case 0:{Fc=152;break}case 1:{Fc=154;break}case 2:{Fc=157;break}case 3:{Fc=158;break}case 4:{Fc=161;break}case 5:{Fc=162;break}case 6:{Fc=164;break}case 7:{Fc=167;break}case 8:{Fc=168;break}case 9:{Fc=171;break}case 10:{Fc=172;break}case 11:{Fc=174;break}case 12:{Fc=177;break}case 13:{Fc=178;break}default:Fc=179}if((Fc|0)==152){mG(d,e,80517,qa)|0;Fc=153}if((Fc|0)==153)switch((b+-9088|0)>>>7&33554431|0){case 0:{Fc=154;break}case 1:{Fc=157;break}case 2:{Fc=158;break}case 3:{Fc=161;break}case 4:{Fc=162;break}case 5:{Fc=164;break}case 6:{Fc=167;break}case 7:{Fc=168;break}case 8:{Fc=171;break}case 9:{Fc=172;break}case 10:{Fc=174;break}case 11:{Fc=177;break}case 12:{Fc=178;break}default:Fc=179}if((Fc|0)==154){mG(d,e,80562,pa)|0;Fc=155}if((Fc|0)==155)switch((b+-9216|0)>>>7&33554431|0){case 0:{Fc=157;break}case 1:{Fc=158;break}case 2:{Fc=161;break}case 3:{Fc=162;break}case 4:{Fc=164;break}case 5:{Fc=167;break}case 6:{Fc=168;break}case 7:{Fc=171;break}case 8:{Fc=172;break}case 9:{Fc=174;break}case 10:{Fc=177;break}case 11:{Fc=178;break}default:Fc=179}if((Fc|0)==157){mG(d,e,80602,na)|0;switch((b+-9344|0)>>>7&33554431|0){case 0:{Fc=158;break}case 1:{Fc=161;break}case 2:{Fc=162;break}case 3:{Fc=164;break}default:Fc=165}}if((Fc|0)==158){mG(d,e,80642,ma)|0;Fc=159}if((Fc|0)==159)switch((b+-9472|0)>>>7&33554431|0){case 0:{Fc=161;break}case 1:{Fc=162;break}case 2:{Fc=164;break}case 3:{Fc=167;break}case 4:{Fc=168;break}case 5:{Fc=171;break}case 6:{Fc=172;break}case 7:{Fc=174;break}case 8:{Fc=177;break}case 9:{Fc=178;break}default:Fc=179}if((Fc|0)==161){mG(d,e,80684,ka)|0;switch((b+-9600|0)>>>7&33554431|0){case 0:{Fc=162;break}case 1:{Fc=164;break}case 2:{Fc=167;break}case 3:{Fc=168;break}default:Fc=169}}if((Fc|0)==162){mG(d,e,80729,ja)|0;Fc=163}if((Fc|0)==163)switch((b+-9728|0)>>>7&33554431|0){case 0:{Fc=164;break}case 1:{Fc=167;break}case 2:{Fc=168;break}case 3:{Fc=171;break}case 4:{Fc=172;break}case 5:{Fc=174;break}case 6:{Fc=177;break}case 7:{Fc=178;break}default:Fc=179}if((Fc|0)==164){mG(d,e,80782,ia)|0;Fc=165}if((Fc|0)==165)switch((b+-9856|0)>>>7&33554431|0){case 0:{Fc=167;break}case 1:{Fc=168;break}case 2:{Fc=171;break}case 3:{Fc=172;break}case 4:{Fc=174;break}case 5:{Fc=177;break}case 6:{Fc=178;break}default:Fc=179}if((Fc|0)==167){mG(d,e,80830,ga)|0;switch((b+-9984|0)>>>7&33554431|0){case 0:{Fc=168;break}case 1:{Fc=171;break}case 2:{Fc=172;break}case 3:{Fc=174;break}default:Fc=175}}if((Fc|0)==168){mG(d,e,80908,fa)|0;Fc=169}if((Fc|0)==169)switch((b+-10112|0)>>>7&33554431|0){case 0:{Fc=171;break}case 1:{Fc=172;break}case 2:{Fc=174;break}case 3:{Fc=177;break}case 4:{Fc=178;break}default:Fc=179}if((Fc|0)==171){mG(d,e,80987,da)|0;switch((b+-10240|0)>>>7&33554431|0){case 0:{Fc=172;break}case 1:{Fc=174;break}case 2:{Fc=177;break}case 3:{Fc=178;break}default:Fc=179}}if((Fc|0)==172){mG(d,e,81030,ca)|0;Fc=173}else if((Fc|0)==177){mG(d,e,81086,$)|0;if((b|0)==10624)Fc=178;else Fc=179}if((Fc|0)==173)switch((b&65535)<<16>>16){case 10368:{Fc=174;break}case 10496:{Fc=176;break}case 10624:{Fc=178;break}default:Fc=179}if((Fc|0)==174){mG(d,e,81051,ba)|0;Fc=175}if((Fc|0)==175)switch((b&65535)<<16>>16){case 10496:{Fc=176;break}case 10624:{Fc=178;break}default:Fc=179}if((Fc|0)==176){mG(d,e,81086,aa)|0;Fc=179}else if((Fc|0)==178){mG(d,e,81119,_)|0;Fc=179}if((Fc|0)==179?(a[d>>0]|0)==0:0){c[Z>>2]=b;mG(d,e,81158,Z)|0}Z=Ec&-65409;if(!Z){l=f;return}Ec=$F(d)|0;do if(Ec){b=e-Ec|0;if(b>>>0<5){l=f;return}else{mG(d+Ec|0,b,81184,Y)|0;b=Ec+3|0;Jc=e-b|0;Kc=d+b|0;break}}else{Jc=e;Kc=d}while(0);do switch(Z|0){case 32:{mG(Kc,Jc,81188,X)|0;break}case 34:{mG(Kc,Jc,81213,W)|0;break}case 96:{mG(Kc,Jc,81245,V)|0;break}case 98:{mG(Kc,Jc,81300,U)|0;break}case 100:{mG(Kc,Jc,81343,T)|0;break}case 102:{mG(Kc,Jc,81410,S)|0;break}case 104:{mG(Kc,Jc,81460,R)|0;break}case 106:{mG(Kc,Jc,81495,Q)|0;break}case 108:{mG(Kc,Jc,81527,P)|0;break}case 42:{mG(Kc,Jc,81585,O)|0;break}case 44:{mG(Kc,Jc,81618,N)|0;break}case 2:{mG(Kc,Jc,81654,M)|0;break}case 4:{mG(Kc,Jc,81721,L)|0;break}case 6:{mG(Kc,Jc,81763,K)|0;break}case 8:{mG(Kc,Jc,81822,J)|0;break}case 10:{mG(Kc,Jc,81867,I)|0;break}case 12:{mG(Kc,Jc,81937,H)|0;break}case 14:{mG(Kc,Jc,82008,G)|0;break}case 16:{mG(Kc,Jc,82056,F)|0;break}case 13:{mG(Kc,Jc,82090,E)|0;break}case 15:{mG(Kc,Jc,82129,D)|0;break}case 52:{mG(Kc,Jc,82167,C)|0;break}case 54:{mG(Kc,Jc,82204,B)|0;break}case 56:{mG(Kc,Jc,82256,A)|0;break}case 58:{mG(Kc,Jc,82306,z)|0;break}case 50:{mG(Kc,Jc,82342,y)|0;break}case 60:{mG(Kc,Jc,82385,x)|0;break}case 62:{mG(Kc,Jc,82427,w)|0;break}case 64:{mG(Kc,Jc,82466,v)|0;break}case 61:{mG(Kc,Jc,82511,u)|0;break}case 63:{mG(Kc,Jc,82563,t)|0;break}case 18:{mG(Kc,Jc,82598,s)|0;break}case 20:{mG(Kc,Jc,82636,r)|0;break}case 3:{mG(Kc,Jc,82675,q)|0;break}case 5:{mG(Kc,Jc,82728,p)|0;break}case 7:{mG(Kc,Jc,82779,o)|0;break}case 9:{mG(Kc,Jc,82816,n)|0;break}case 49:{mG(Kc,Jc,82854,m)|0;break}case 51:{mG(Kc,Jc,82894,k)|0;break}case 46:{mG(Kc,Jc,82934,j)|0;break}case 11:{mG(Kc,Jc,82957,i)|0;break}case 48:{mG(Kc,Jc,82990,h)|0;break}default:{}}while(0);if(a[Kc>>0]|0){l=f;return}c[g>>2]=Z;mG(Kc,Jc,81158,g)|0;l=f;return}function qy(a){a=a|0;ET(a|0,0,392)|0;return}function ry(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;h=l;l=l+32|0;i=h+8|0;j=h;k=ew(e,g,1)|0;if(!k){m=-20;l=h;return m|0}if((c[k+24>>2]|0)!=16){m=-20;l=h;return m|0}gw(b);e=hw(b,k)|0;if(e|0){m=e;l=h;return m|0}e=sw(b,f,g,1)|0;if(e|0){m=e;l=h;return m|0}c[j>>2]=0;e=i;g=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(g|0));e=ww(b,i,16,i,j)|0;if(!e){j=(d[i+1>>0]|0)<<16|(d[i>>0]|0)<<24|(d[i+2>>0]|0)<<8|(d[i+3>>0]|0);g=(d[i+5>>0]|0)<<16|(d[i+4>>0]|0)<<24|(d[i+6>>0]|0)<<8|(d[i+7>>0]|0);f=(d[i+9>>0]|0)<<16|(d[i+8>>0]|0)<<24|(d[i+10>>0]|0)<<8|(d[i+11>>0]|0);k=(d[i+13>>0]|0)<<16|(d[i+12>>0]|0)<<24|(d[i+14>>0]|0)<<8|(d[i+15>>0]|0);i=b+128|0;c[i>>2]=k;c[i+4>>2]=f;i=b+256|0;c[i>>2]=g;c[i+4>>2]=j;i=b+192|0;c[i>>2]=0;c[i+4>>2]=0;i=b+64|0;c[i>>2]=0;c[i+4>>2]=0;i=tT(0,0,k&1|0,0)|0;n=AT(g|0,0,63)|0;o=z;p=zT(k|0,f|0,1)|0;q=p|n;n=z|o;o=zT(g|0,j|0,1)|0;r=z;s=i&-520093696^r;i=b+96|0;c[i>>2]=q;c[i+4>>2]=n;i=b+224|0;c[i>>2]=o;c[i+4>>2]=s;i=tT(0,0,p&1|0,0)|0;p=AT(o|0,r|0,63)|0;r=z;t=zT(q|0,n|0,1)|0;u=t|p;p=z|r;r=zT(o|0,s|0,1)|0;v=z;w=i&-520093696^v;i=b+80|0;c[i>>2]=u;c[i+4>>2]=p;i=b+208|0;c[i>>2]=r;c[i+4>>2]=w;i=tT(0,0,t&1|0,0)|0;t=AT(r|0,v|0,63)|0;v=z;x=zT(u|0,p|0,1)|0;y=t|x;x=v|z;v=zT(r|0,w|0,1)|0;t=i&-520093696^z;i=b+72|0;c[i>>2]=y;c[i+4>>2]=x;i=b+200|0;c[i>>2]=v;c[i+4>>2]=t;i=v^r;A=t^w;B=b+216|0;c[B>>2]=i;c[B+4>>2]=A;B=y^u;C=x^p;D=b+88|0;c[D>>2]=B;c[D+4>>2]=C;D=v^o;E=t^s;F=b+232|0;c[F>>2]=D;c[F+4>>2]=E;F=y^q;G=x^n;H=b+104|0;c[H>>2]=F;c[H+4>>2]=G;H=r^o;I=w^s;J=b+240|0;c[J>>2]=H;c[J+4>>2]=I;J=u^q;K=p^n;L=b+112|0;c[L>>2]=J;c[L+4>>2]=K;L=i^o;M=A^s;N=b+248|0;c[N>>2]=L;c[N+4>>2]=M;N=B^q;O=C^n;P=b+120|0;c[P>>2]=N;c[P+4>>2]=O;P=b+264|0;c[P>>2]=v^g;c[P+4>>2]=t^j;t=b+136|0;c[t>>2]=y^k;c[t+4>>2]=x^f;x=b+272|0;c[x>>2]=r^g;c[x+4>>2]=w^j;w=b+144|0;c[w>>2]=u^k;c[w+4>>2]=p^f;p=b+280|0;c[p>>2]=i^g;c[p+4>>2]=A^j;A=b+152|0;c[A>>2]=B^k;c[A+4>>2]=C^f;C=b+288|0;c[C>>2]=o^g;c[C+4>>2]=s^j;s=b+160|0;c[s>>2]=q^k;c[s+4>>2]=n^f;n=b+296|0;c[n>>2]=D^g;c[n+4>>2]=E^j;E=b+168|0;c[E>>2]=F^k;c[E+4>>2]=G^f;G=b+304|0;c[G>>2]=H^g;c[G+4>>2]=I^j;I=b+176|0;c[I>>2]=J^k;c[I+4>>2]=K^f;K=b+312|0;c[K>>2]=L^g;c[K+4>>2]=M^j;j=b+184|0;c[j>>2]=N^k;c[j+4>>2]=O^f;Q=0}else Q=e;m=Q;l=h;return m|0}function sy(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0;i=l;l=l+16|0;j=i;c[j>>2]=0;k=b+352|0;m=b+368|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[k+20>>2]=0;c[k+24>>2]=0;c[k+28>>2]=0;c[b+384>>2]=d;d=b+320|0;n=b+328|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;if((f|0)==12){d=k;o=e;p=d+12|0;do{a[d>>0]=a[o>>0]|0;d=d+1|0;o=o+1|0}while((d|0)<(p|0));a[b+367>>0]=1}else{o=f>>>21&255;d=f>>>13&255;p=f>>>5&255;q=f<<3&255;if(!f){r=b+354|0;s=b+355|0;t=b+356|0;u=b+357|0;v=b+358|0;w=b+359|0;x=b+360|0;y=b+361|0;z=b+362|0;A=b+363|0;B=b+364|0;C=b+365|0;D=b+366|0;E=b+367|0;F=b+353|0;G=0;H=0;I=0;J=0;K=0;L=0;M=0;N=0;O=0;P=0;Q=0;R=0;S=0;T=0;U=0;V=0}else{W=f;f=e;while(1){e=W>>>0<16?W:16;if(e|0){X=0;do{Y=b+352+X|0;a[Y>>0]=a[Y>>0]^a[f+X>>0];X=X+1|0}while(X>>>0<e>>>0)}ty(b,k,k);W=W-e|0;if(!W)break;else f=f+e|0}f=b+353|0;W=b+354|0;X=b+355|0;Y=b+356|0;Z=b+357|0;_=b+358|0;$=b+359|0;aa=b+360|0;ba=b+361|0;ca=b+362|0;da=b+363|0;ea=b+364|0;fa=b+365|0;ga=b+366|0;ha=b+367|0;r=W;s=X;t=Y;u=Z;v=_;w=$;x=aa;y=ba;z=ca;A=da;B=ea;C=fa;D=ga;E=ha;F=f;G=a[k>>0]|0;H=a[f>>0]|0;I=a[W>>0]|0;J=a[X>>0]|0;K=a[Y>>0]|0;L=a[Z>>0]|0;M=a[_>>0]|0;N=a[$>>0]|0;O=a[aa>>0]|0;P=a[ba>>0]|0;Q=a[ca>>0]|0;R=a[da>>0]|0;S=a[ea>>0]|0;T=a[fa>>0]|0;U=a[ga>>0]|0;V=a[ha>>0]|0}a[k>>0]=G;a[F>>0]=H;a[r>>0]=I;a[s>>0]=J;a[t>>0]=K;a[u>>0]=L;a[v>>0]=M;a[w>>0]=N;a[x>>0]=O;a[y>>0]=P;a[z>>0]=Q;a[A>>0]=R;a[B>>0]=S^o;a[C>>0]=T^d;a[D>>0]=U^p;a[E>>0]=V^q;ty(b,k,k)}q=ww(b,k,16,b+336|0,j)|0;if(q|0){ia=q;l=i;return ia|0}q=n;c[q>>2]=h;c[q+4>>2]=0;if(!h){ia=0;l=i;return ia|0}else{ja=h;ka=g}while(1){g=ja>>>0<16?ja:16;if(g|0){h=0;do{q=b+368+h|0;a[q>>0]=a[q>>0]^a[ka+h>>0];h=h+1|0}while(h>>>0<g>>>0)}ty(b,m,m);ja=ja-g|0;if(!ja){ia=0;break}else ka=ka+g|0}l=i;return ia|0}function ty(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0;f=a[d+15>>0]|0;g=f&15;h=b+192+(g<<3)|0;i=b+64+(g<<3)|0;g=15;j=f;f=c[i>>2]|0;k=c[h>>2]|0;l=c[h+4>>2]|0;h=c[i+4>>2]|0;while(1){if((g|0)==15){m=f;n=k;o=l;p=h}else{i=j&15;q=AT(k|0,l|0,60)|0;r=z;s=zT(f|0,h|0,4)|0;t=z|r;r=zT(k|0,l|0,4)|0;u=z;v=4824+((f&15)<<3)|0;w=AT(c[v>>2]|0,c[v+4>>2]|0,48)|0;v=b+192+(i<<3)|0;x=b+64+(i<<3)|0;m=c[x>>2]^(s|q);n=w^r^c[v>>2];o=z^u^c[v+4>>2];p=c[x+4>>2]^t}t=AT(n|0,o|0,60)|0;x=z;v=zT(m|0,p|0,4)|0;u=z|x;x=zT(n|0,o|0,4)|0;r=z;w=4824+((m&15)<<3)|0;q=AT(c[w>>2]|0,c[w+4>>2]|0,48)|0;w=(j&255)>>>4&255;s=b+192+(w<<3)|0;y=q^x^c[s>>2];A=z^r^c[s+4>>2];s=b+64+(w<<3)|0;B=c[s>>2]^(v|t);C=c[s+4>>2]^u;u=g+-1|0;if((g|0)<=0)break;g=u;j=a[d+u>>0]|0;f=B;k=y;l=A;h=C}h=zT(y|0,A|0,56)|0;a[e>>0]=h;h=zT(y|0,A|0,48)|0;a[e+1>>0]=h;h=zT(y|0,A|0,40)|0;a[e+2>>0]=h;a[e+3>>0]=A;h=zT(y|0,A|0,24)|0;a[e+4>>0]=h;h=zT(y|0,A|0,16)|0;a[e+5>>0]=h;h=zT(y|0,A|0,8)|0;a[e+6>>0]=h;a[e+7>>0]=y;y=zT(B|0,C|0,56)|0;a[e+8>>0]=y;y=zT(B|0,C|0,48)|0;a[e+9>>0]=y;y=zT(B|0,C|0,40)|0;a[e+10>>0]=y;a[e+11>>0]=C;y=zT(B|0,C|0,24)|0;a[e+12>>0]=y;y=zT(B|0,C|0,16)|0;a[e+13>>0]=y;y=zT(B|0,C|0,8)|0;a[e+14>>0]=y;a[e+15>>0]=B;return}function uy(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=l;l=l+32|0;h=g+8|0;i=g;c[i>>2]=0;if(f>>>0>e>>>0?(f-e|0)>>>0<d>>>0:0){j=-20;l=g;return j|0}k=b+320|0;m=k;n=c[m>>2]|0;o=c[m+4>>2]|0;m=sT(n|0,o|0,d|0,0)|0;p=z;if(p>>>0<o>>>0|(p|0)==(o|0)&m>>>0<n>>>0|(p>>>0>15|(p|0)==15&m>>>0>4294967264)){j=-20;l=g;return j|0}n=k;c[n>>2]=m;c[n+4>>2]=p;if(!d){j=0;l=g;return j|0}p=b+352|0;n=b+368|0;m=b+384|0;k=f;f=e;e=d;while(1){d=e>>>0<16?e:16;o=16;do{if(o>>>0<=12)break;o=o+-1|0;q=b+352+o|0;r=(a[q>>0]|0)+1<<24>>24;a[q>>0]=r}while(!(r<<24>>24));o=ww(b,p,16,h,i)|0;if(o|0){j=o;s=17;break}if(d|0){o=0;do{r=b+368+o|0;q=f+o|0;if(!(c[m>>2]|0))a[r>>0]=a[r>>0]^a[q>>0];t=a[q>>0]^a[h+o>>0];a[k+o>>0]=t;if((c[m>>2]|0)==1)a[r>>0]=a[r>>0]^t;o=o+1|0}while(o>>>0<d>>>0)}ty(b,n,n);e=e-d|0;if(!e){j=0;s=17;break}else{k=k+d|0;f=f+d|0}}if((s|0)==17){l=g;return j|0}return 0}function vy(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;f=b+320|0;g=c[f>>2]|0;h=c[f+4>>2]|0;f=AT(g|0,h|0,3)|0;i=z;j=b+328|0;k=c[j>>2]|0;l=c[j+4>>2]|0;j=AT(k|0,l|0,3)|0;m=z;if((e+-4|0)>>>0>12){n=-20;return n|0}CT(d|0,b+336|0,e|0)|0;if((j|f|0)==0&(m|i|0)==0){n=0;return n|0}i=zT(k|0,l|0,29)|0;m=zT(k|0,l|0,53)|0;o=zT(k|0,l|0,45)|0;p=zT(k|0,l|0,37)|0;q=zT(k|0,l|0,21)|0;r=zT(k|0,l|0,13)|0;s=zT(k|0,l|0,5)|0;l=zT(g|0,h|0,29)|0;k=zT(g|0,h|0,53)|0;t=zT(g|0,h|0,45)|0;u=zT(g|0,h|0,37)|0;v=zT(g|0,h|0,21)|0;w=zT(g|0,h|0,13)|0;x=zT(g|0,h|0,5)|0;h=b+368|0;a[h>>0]=a[h>>0]^m&255;m=b+369|0;a[m>>0]=a[m>>0]^o&255;o=b+370|0;a[o>>0]=a[o>>0]^p&255;p=b+371|0;a[p>>0]=a[p>>0]^i&255;i=b+372|0;a[i>>0]=a[i>>0]^q&255;q=b+373|0;a[q>>0]=a[q>>0]^r&255;r=b+374|0;a[r>>0]=a[r>>0]^s&255;s=b+375|0;a[s>>0]=a[s>>0]^j&255;j=b+376|0;a[j>>0]=a[j>>0]^k&255;k=b+377|0;a[k>>0]=a[k>>0]^t&255;t=b+378|0;a[t>>0]=a[t>>0]^u&255;u=b+379|0;a[u>>0]=a[u>>0]^l&255;l=b+380|0;a[l>>0]=a[l>>0]^v&255;v=b+381|0;a[v>>0]=a[v>>0]^w&255;w=b+382|0;a[w>>0]=a[w>>0]^x&255;x=b+383|0;a[x>>0]=a[x>>0]^f&255;ty(b,h,h);h=0;do{f=d+h|0;a[f>>0]=a[f>>0]^a[b+368+h>>0];h=h+1|0}while((h|0)!=(e|0));n=0;return n|0}function wy(b){b=b|0;var c=0,d=0;gw(b);c=392;d=b;while(1){c=c+-1|0;a[d>>0]=0;if(!c)break;else d=d+1|0}return}function xy(a){a=a|0;ET(a|0,0,36880)|0;yy(a);return}function yy(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0;b=l;l=l+64|0;d=b;e=c[a>>2]|0;f=a+4|0;g=c[f>>2]|0;h=d;i=h+64|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(i|0));h=d+4|0;i=d+8|0;j=d+12|0;k=d+16|0;m=d+20|0;n=d+24|0;o=d+28|0;p=d+32|0;q=d+36|0;r=d+40|0;s=d+44|0;t=d+48|0;u=d+52|0;v=d+56|0;w=d+60|0;x=0;y=0;z=0;A=0;B=g;g=e;e=0;C=0;D=0;E=0;F=0;G=0;H=0;I=0;while(1){J=g>>20;if(!(J&1)){K=J;L=y}else{J=g>>21^1;if(!(J&1)){M=J;N=y}else{J=g>>22^1;if(!(J&1)){O=y;P=J}else{J=g>>23^1;if(!(J&1)){Q=J;R=y}else{J=g>>24^1;if(!(J&1)){S=J;T=y}else{J=g>>25^1;if(!(J&1)){U=J;V=y}else{J=g>>26^1;if(!(J&1)){W=J;X=y}else{J=g>>27^1;if(!(J&1)){Y=J;Z=y}else{J=g>>28^1;if(!(J&1)){_=J;$=y}else{J=g>>29^1;if(!(J&1)){aa=J;ba=y}else{J=g>>30^1;ca=(J&1|0)==0;da=g>>31^1;aa=ca?J:da;ba=y+(ca?0:(da&1)+1|0)+1|0}_=aa;$=ba+1|0}Y=_;Z=$+1|0}W=Y;X=Z+1|0}U=W;V=X+1|0}S=U;T=V+1|0}Q=S;R=T+1|0}O=R+1|0;P=Q}M=P;N=O+1|0}K=M;L=N+1|0}da=g>>>18&7;ca=g&8191;J=B&8191;ea=KB()|0;fa=a+4112+(ca<<2)|0;ga=c[fa>>2]|0;c[d>>2]=F^ga;ha=a+4112+(J<<2)|0;ia=c[ha>>2]|0;c[h>>2]=G^ia;ja=a+4112+((ca^1)<<2)|0;c[i>>2]=H^c[ja>>2];ka=a+4112+((J^4)<<2)|0;c[j>>2]=I^c[ka>>2];c[fa>>2]=ia<<30^ea^ia>>2;c[ha>>2]=ea^L^ga<<31^ga>>1;ga=c[ja>>2]|0;c[ja>>2]=ga<<29^ea^ga>>3;ga=c[ka>>2]|0;c[ka>>2]=ga<<28^ea^ga>>4;ga=a+4112+((ca^2)<<2)|0;c[k>>2]=e^c[ga>>2];ka=a+4112+((J^2)<<2)|0;ja=c[ka>>2]|0;c[m>>2]=C^ja;ha=a+4112+((ca^3)<<2)|0;c[n>>2]=D^c[ha>>2];ia=a+4112+((J^6)<<2)|0;c[o>>2]=E^c[ia>>2];fa=(K&1|0)==0;la=fa?ha:ga;ma=fa?ga:ha;ha=c[ma>>2]|0;c[ma>>2]=ja<<26^ea^ja>>6;c[ka>>2]=ha<<27^ea^ha>>5;ha=KB()|0;ea=c[la>>2]|0;c[la>>2]=ea<<25^ha^ea>>7;ea=c[ia>>2]|0;c[ia>>2]=ea<<24^ha^ea>>8;ea=a+4112+((ca^4)<<2)|0;ia=a+4112+((J^1)<<2)|0;la=c[a+4112+((A^7^J)<<2)>>2]^c[d+(A<<2)>>2];J=g&8;ka=la&8183|J;ja=ka^8;ma=la>>>10&7;if(!(B&2))na=z;else{if(!(B&4)){if(!(B&8)){if(!(B&16)){if(!(B&32)){if(!(B&64)){if(!(B&128)){if(!(B&256)){if(!(B&512)){if(!(B&1024))oa=z-((B&2048|0)==0?B>>>12|-2:0)+1|0;else oa=z;pa=oa+1|0}else pa=z;qa=pa+1|0}else qa=z;ra=qa+1|0}else ra=z;sa=ra+1|0}else sa=z;ta=sa+1|0}else ta=z;ua=ta+1|0}else ua=z;va=ua+1|0}else va=z;wa=va+1|0}else wa=z;na=wa+1|0}ga=a+4112+((ca^5)<<2)|0;fa=a+4112+((ka^13)<<2)|0;xa=c[ea>>2]|0;c[p>>2]=c[p>>2]^xa;ya=c[ia>>2]|0;c[q>>2]=c[q>>2]^ya;c[r>>2]=c[r>>2]^c[ga>>2];c[s>>2]=c[s>>2]^c[fa>>2];c[ea>>2]=ya<<22^ha^ya>>10;c[ia>>2]=na^ha^xa<<23^xa>>9;xa=c[ga>>2]|0;c[ga>>2]=xa<<21^ha^xa>>11;xa=c[fa>>2]|0;c[fa>>2]=xa<<20^ha^xa>>12;xa=a+4112+((ca^6)<<2)|0;fa=c[xa>>2]|0;ga=c[t>>2]^fa;c[t>>2]=ga;ia=a+4112+((ka^11)<<2)|0;ya=c[ia>>2]|0;ea=c[u>>2]^ya;c[u>>2]=ea;za=ca^7;ca=a+4112+(za<<2)|0;Aa=c[v>>2]^c[ca>>2];c[v>>2]=Aa;Ba=a+4112+((ka^15)<<2)|0;Ca=c[w>>2]^c[Ba>>2];c[w>>2]=Ca;c[xa>>2]=ya<<18^ha^ya>>14;c[ia>>2]=fa<<19^ha^fa>>13;fa=c[ca>>2]|0;c[ca>>2]=fa<<17^ha^fa>>15;fa=c[Ba>>2]|0;c[Ba>>2]=fa<<16^ha^fa>>16;fa=c[a+4112+((za^da)<<2)>>2]^c[d+((da|8)<<2)>>2];da=la&16;za=a+16+(((x|1|0)%1024|0)<<2)|0;ha=c[d>>2]|0;Ba=c[h>>2]|0;ca=c[i>>2]|0;ia=c[j>>2]|0;ya=c[k>>2]|0;xa=c[m>>2]|0;Da=c[n>>2]|0;Ea=c[o>>2]|0;Fa=da^16^fa&8190;c[za>>2]=c[za>>2]^ha^Ba^ca^ia^ya^xa^Da^Ea^c[p>>2]^c[q>>2]^c[r>>2]^c[s>>2]^ga^ea^Aa^Ca;Ca=fa>>20;if(!(Ca&1)){Ga=Ca;Ha=L}else{Ca=fa>>21^1;if(!(Ca&1)){Ia=Ca;Ja=L}else{Ca=fa>>22^1;if(!(Ca&1)){Ka=Ca;La=L}else{Ca=fa>>23^1;if(!(Ca&1)){Ma=Ca;Na=L}else{Ca=fa>>24^1;if(!(Ca&1)){Oa=Ca;Pa=L}else{Ca=fa>>25^1;if(!(Ca&1)){Qa=Ca;Ra=L}else{Ca=fa>>26^1;if(!(Ca&1)){Sa=Ca;Ta=L}else{Ca=fa>>27^1;if(!(Ca&1)){Ua=Ca;Va=L}else{Ca=fa>>28^1;if(!(Ca&1)){Wa=Ca;Xa=L}else{Ca=fa>>29^1;if(!(Ca&1)){Ya=Ca;Za=L}else{Ca=fa>>30^1;Aa=(Ca&1|0)==0;ea=fa>>31^1;Ya=Aa?Ca:ea;Za=(Aa?L:L+1+(ea&1)|0)+1|0}Wa=Ya;Xa=Za+1|0}Ua=Wa;Va=Xa+1|0}Sa=Ua;Ta=Va+1|0}Qa=Sa;Ra=Ta+1|0}Oa=Qa;Pa=Ra+1|0}Ma=Oa;Na=Pa+1|0}Ka=Ma;La=Na+1|0}Ia=Ka;Ja=La+1|0}Ga=Ia;Ha=Ja+1|0}ea=fa>>>18&7;Aa=KB()|0;Ca=a+4112+(Fa<<2)|0;ga=c[Ca>>2]|0;c[d>>2]=ha^ga;ha=a+4112+(ja<<2)|0;za=c[ha>>2]|0;c[h>>2]=Ba^za;Ba=a+4112+((Fa|1)<<2)|0;c[i>>2]=ca^c[Ba>>2];ca=a+4112+((ka^12)<<2)|0;c[j>>2]=ia^c[ca>>2];c[Ca>>2]=za<<30^Aa^za>>2;c[ha>>2]=Aa^Ha^ga<<31^ga>>1;ga=c[Ba>>2]|0;c[Ba>>2]=ga<<29^Aa^ga>>3;ga=c[ca>>2]|0;c[ca>>2]=ga<<28^Aa^ga>>4;ga=a+4112+((Fa^2)<<2)|0;c[k>>2]=ya^c[ga>>2];ya=a+4112+((ka^10)<<2)|0;ca=c[ya>>2]|0;c[m>>2]=xa^ca;xa=a+4112+((Fa^3)<<2)|0;c[n>>2]=Da^c[xa>>2];Da=a+4112+((ka^14)<<2)|0;c[o>>2]=Ea^c[Da>>2];Ea=(Ga&1|0)==0;Ba=Ea?xa:ga;ha=Ea?ga:xa;xa=c[ha>>2]|0;c[ha>>2]=ca<<26^Aa^ca>>6;c[ya>>2]=xa<<27^Aa^xa>>5;xa=KB()|0;Aa=c[Ba>>2]|0;c[Ba>>2]=Aa<<25^xa^Aa>>7;Aa=c[Da>>2]|0;c[Da>>2]=Aa<<24^xa^Aa>>8;Aa=a+4112+((Fa^4)<<2)|0;Da=a+4112+((ka^9)<<2)|0;ka=c[a+4112+((ma^7^ja)<<2)>>2]^c[d+(ma<<2)>>2];ma=fa&8;fa=ka&8183|ma;ja=fa^8;Ba=ka>>>10&7;if(!(la&2))_a=na;else{if(!(la&4)){if(!J)$a=na;else{if(!da){if(!(la&32)){if(!(la&64)){if(!(la&128)){if(!(la&256)){if(!(la&512)){if(!(la&1024))ab=na+((la&2048|0)==0?2-(la>>>12&1)|0:0)+1|0;else ab=na;bb=ab+1|0}else bb=na;cb=bb+1|0}else cb=na;db=cb+1|0}else db=na;eb=db+1|0}else eb=na;fb=eb+1|0}else fb=na;gb=fb+1|0}else gb=na;$a=gb+1|0}hb=$a+1|0}else hb=na;_a=hb+1|0}la=a+4112+((Fa^5)<<2)|0;da=a+4112+((fa^13)<<2)|0;J=c[Aa>>2]|0;c[p>>2]=c[p>>2]^J;ya=c[Da>>2]|0;c[q>>2]=c[q>>2]^ya;c[r>>2]=c[r>>2]^c[la>>2];c[s>>2]=c[s>>2]^c[da>>2];c[Aa>>2]=ya<<22^xa^ya>>10;c[Da>>2]=_a^xa^J<<23^J>>9;J=c[la>>2]|0;c[la>>2]=J<<21^xa^J>>11;J=c[da>>2]|0;c[da>>2]=J<<20^xa^J>>12;J=a+4112+((Fa^6)<<2)|0;da=c[J>>2]|0;la=c[t>>2]^da;c[t>>2]=la;Da=a+4112+((fa^11)<<2)|0;ya=c[Da>>2]|0;Aa=c[u>>2]^ya;c[u>>2]=Aa;ca=a+4112+((Fa^7)<<2)|0;ha=c[v>>2]^c[ca>>2];c[v>>2]=ha;ga=a+4112+((fa^15)<<2)|0;Ea=c[w>>2]^c[ga>>2];c[w>>2]=Ea;c[J>>2]=ya<<18^xa^ya>>14;c[Da>>2]=da<<19^xa^da>>13;da=c[ca>>2]|0;c[ca>>2]=da<<17^xa^da>>15;da=c[ga>>2]|0;c[ga>>2]=da<<16^xa^da>>16;da=c[a+4112+((ea^7^Fa)<<2)>>2]^c[d+((ea|8)<<2)>>2];ea=ka&16;Fa=a+16+(((x|2|0)%1024|0)<<2)|0;xa=c[d>>2]|0;ga=c[h>>2]|0;ca=c[i>>2]|0;Da=c[j>>2]|0;ya=c[k>>2]|0;J=c[m>>2]|0;za=c[n>>2]|0;Ca=c[o>>2]|0;ia=ea^16^da&8190;c[Fa>>2]=c[Fa>>2]^xa^ga^ca^Da^ya^J^za^Ca^c[p>>2]^c[q>>2]^c[r>>2]^c[s>>2]^la^Aa^ha^Ea;Ea=da>>20;if(!(Ea&1)){ib=Ea;jb=Ha}else{Ea=da>>21^1;if(!(Ea&1)){kb=Ea;lb=Ha}else{Ea=da>>22^1;if(!(Ea&1)){mb=Ea;nb=Ha}else{Ea=da>>23^1;if(!(Ea&1)){ob=Ea;pb=Ha}else{Ea=da>>24^1;if(!(Ea&1)){qb=Ea;rb=Ha}else{Ea=da>>25^1;if(!(Ea&1)){sb=Ea;tb=Ha}else{Ea=da>>26^1;if(!(Ea&1)){ub=Ea;vb=Ha}else{Ea=da>>27^1;if(!(Ea&1)){wb=Ea;xb=Ha}else{Ea=da>>28^1;if(!(Ea&1)){yb=Ea;zb=Ha}else{Ea=da>>29^1;if(!(Ea&1)){Ab=Ea;Bb=Ha}else{Ea=da>>30^1;ha=(Ea&1|0)==0;Aa=da>>31^1;Ab=ha?Ea:Aa;Bb=(ha?Ha:Ha+1+(Aa&1)|0)+1|0}yb=Ab;zb=Bb+1|0}wb=yb;xb=zb+1|0}ub=wb;vb=xb+1|0}sb=ub;tb=vb+1|0}qb=sb;rb=tb+1|0}ob=qb;pb=rb+1|0}mb=ob;nb=pb+1|0}kb=mb;lb=nb+1|0}ib=kb;jb=lb+1|0}Aa=da>>>18&7;ha=KB()|0;Ea=a+4112+(ia<<2)|0;la=c[Ea>>2]|0;c[d>>2]=xa^la;xa=a+4112+(ja<<2)|0;Fa=c[xa>>2]|0;c[h>>2]=ga^Fa;ga=a+4112+((ia|1)<<2)|0;c[i>>2]=ca^c[ga>>2];ca=a+4112+((fa^12)<<2)|0;c[j>>2]=Da^c[ca>>2];c[Ea>>2]=Fa<<30^ha^Fa>>2;c[xa>>2]=ha^jb^la<<31^la>>1;la=c[ga>>2]|0;c[ga>>2]=la<<29^ha^la>>3;la=c[ca>>2]|0;c[ca>>2]=la<<28^ha^la>>4;la=a+4112+((ia^2)<<2)|0;c[k>>2]=ya^c[la>>2];ya=a+4112+((fa^10)<<2)|0;ca=c[ya>>2]|0;c[m>>2]=J^ca;J=a+4112+((ia^3)<<2)|0;c[n>>2]=za^c[J>>2];za=a+4112+((fa^14)<<2)|0;c[o>>2]=Ca^c[za>>2];Ca=(ib&1|0)==0;ga=Ca?J:la;xa=Ca?la:J;J=c[xa>>2]|0;c[xa>>2]=ca<<26^ha^ca>>6;c[ya>>2]=J<<27^ha^J>>5;J=KB()|0;ha=c[ga>>2]|0;c[ga>>2]=ha<<25^J^ha>>7;ha=c[za>>2]|0;c[za>>2]=ha<<24^J^ha>>8;ha=a+4112+((ia^4)<<2)|0;za=a+4112+((fa^9)<<2)|0;fa=c[a+4112+((Ba^7^ja)<<2)>>2]^c[d+(Ba<<2)>>2];Ba=da&8;da=fa&8183|Ba;ja=da^8;ga=fa>>>10&7;if(!(ka&2))Cb=_a;else{if(!(ka&4)){if(!ma)Db=_a;else{if(!ea){if(!(ka&32)){if(!(ka&64)){if(!(ka&128)){if(!(ka&256)){if(!(ka&512)){if(!(ka&1024))Eb=_a+((ka&2048|0)==0?2-(ka>>>12&1)|0:0)+1|0;else Eb=_a;Fb=Eb+1|0}else Fb=_a;Gb=Fb+1|0}else Gb=_a;Hb=Gb+1|0}else Hb=_a;Ib=Hb+1|0}else Ib=_a;Jb=Ib+1|0}else Jb=_a;Kb=Jb+1|0}else Kb=_a;Db=Kb+1|0}Lb=Db+1|0}else Lb=_a;Cb=Lb+1|0}ka=a+4112+((ia^5)<<2)|0;ea=a+4112+((da^13)<<2)|0;ma=c[ha>>2]|0;c[p>>2]=c[p>>2]^ma;ya=c[za>>2]|0;c[q>>2]=c[q>>2]^ya;c[r>>2]=c[r>>2]^c[ka>>2];c[s>>2]=c[s>>2]^c[ea>>2];c[ha>>2]=ya<<22^J^ya>>10;c[za>>2]=Cb^J^ma<<23^ma>>9;ma=c[ka>>2]|0;c[ka>>2]=ma<<21^J^ma>>11;ma=c[ea>>2]|0;c[ea>>2]=ma<<20^J^ma>>12;ma=a+4112+((ia^6)<<2)|0;ea=c[ma>>2]|0;ka=c[t>>2]^ea;c[t>>2]=ka;za=a+4112+((da^11)<<2)|0;ya=c[za>>2]|0;ha=c[u>>2]^ya;c[u>>2]=ha;ca=a+4112+((ia^7)<<2)|0;xa=c[v>>2]^c[ca>>2];c[v>>2]=xa;la=a+4112+((da^15)<<2)|0;Ca=c[w>>2]^c[la>>2];c[w>>2]=Ca;c[ma>>2]=ya<<18^J^ya>>14;c[za>>2]=ea<<19^J^ea>>13;ea=c[ca>>2]|0;c[ca>>2]=ea<<17^J^ea>>15;ea=c[la>>2]|0;c[la>>2]=ea<<16^J^ea>>16;ea=c[a+4112+((Aa^7^ia)<<2)>>2]^c[d+((Aa|8)<<2)>>2];Aa=fa&16;ia=a+16+(((x|3|0)%1024|0)<<2)|0;J=c[d>>2]|0;la=c[h>>2]|0;ca=c[i>>2]|0;za=c[j>>2]|0;ya=c[k>>2]|0;ma=c[m>>2]|0;Fa=c[n>>2]|0;Ea=c[o>>2]|0;Da=Aa^16^ea&8190;c[ia>>2]=c[ia>>2]^J^la^ca^za^ya^ma^Fa^Ea^c[p>>2]^c[q>>2]^c[r>>2]^c[s>>2]^ka^ha^xa^Ca;Ca=ea>>20;if(!(Ca&1)){Mb=Ca;Nb=jb}else{Ca=ea>>21^1;if(!(Ca&1)){Ob=Ca;Pb=jb}else{Ca=ea>>22^1;if(!(Ca&1)){Qb=Ca;Rb=jb}else{Ca=ea>>23^1;if(!(Ca&1)){Sb=Ca;Tb=jb}else{Ca=ea>>24^1;if(!(Ca&1)){Ub=Ca;Vb=jb}else{Ca=ea>>25^1;if(!(Ca&1)){Wb=Ca;Xb=jb}else{Ca=ea>>26^1;if(!(Ca&1)){Yb=Ca;Zb=jb}else{Ca=ea>>27^1;if(!(Ca&1)){_b=Ca;$b=jb}else{Ca=ea>>28^1;if(!(Ca&1)){ac=Ca;bc=jb}else{Ca=ea>>29^1;if(!(Ca&1)){cc=Ca;dc=jb}else{Ca=ea>>30^1;xa=(Ca&1|0)==0;ha=ea>>31^1;cc=xa?Ca:ha;dc=(xa?jb:jb+1+(ha&1)|0)+1|0}ac=cc;bc=dc+1|0}_b=ac;$b=bc+1|0}Yb=_b;Zb=$b+1|0}Wb=Yb;Xb=Zb+1|0}Ub=Wb;Vb=Xb+1|0}Sb=Ub;Tb=Vb+1|0}Qb=Sb;Rb=Tb+1|0}Ob=Qb;Pb=Rb+1|0}Mb=Ob;Nb=Pb+1|0}ha=ea>>>18&7;xa=KB()|0;Ca=a+4112+(Da<<2)|0;ka=c[Ca>>2]|0;c[d>>2]=J^ka;J=a+4112+(ja<<2)|0;ia=c[J>>2]|0;c[h>>2]=la^ia;la=a+4112+((Da|1)<<2)|0;c[i>>2]=ca^c[la>>2];ca=a+4112+((da^12)<<2)|0;c[j>>2]=za^c[ca>>2];c[Ca>>2]=ia<<30^xa^ia>>2;c[J>>2]=xa^Nb^ka<<31^ka>>1;ka=c[la>>2]|0;c[la>>2]=ka<<29^xa^ka>>3;ka=c[ca>>2]|0;c[ca>>2]=ka<<28^xa^ka>>4;ka=a+4112+((Da^2)<<2)|0;c[k>>2]=ya^c[ka>>2];ya=a+4112+((da^10)<<2)|0;ca=c[ya>>2]|0;c[m>>2]=ma^ca;ma=a+4112+((Da^3)<<2)|0;c[n>>2]=Fa^c[ma>>2];Fa=a+4112+((da^14)<<2)|0;c[o>>2]=Ea^c[Fa>>2];Ea=(Mb&1|0)==0;la=Ea?ma:ka;J=Ea?ka:ma;ma=c[J>>2]|0;c[J>>2]=ca<<26^xa^ca>>6;c[ya>>2]=ma<<27^xa^ma>>5;ma=KB()|0;xa=c[la>>2]|0;c[la>>2]=xa<<25^ma^xa>>7;xa=c[Fa>>2]|0;c[Fa>>2]=xa<<24^ma^xa>>8;xa=a+4112+((Da^4)<<2)|0;Fa=a+4112+((da^9)<<2)|0;da=c[a+4112+((ga^7^ja)<<2)>>2]^c[d+(ga<<2)>>2];ga=da&8183|ea&8;B=ga^8;A=da>>>10&7;if(!(fa&2))ec=Cb;else{if(!(fa&4)){if(!Ba)fc=Cb;else{if(!Aa){if(!(fa&32)){if(!(fa&64)){if(!(fa&128)){if(!(fa&256)){if(!(fa&512)){if(!(fa&1024))gc=Cb+((fa&2048|0)==0?2-(fa>>>12&1)|0:0)+1|0;else gc=Cb;hc=gc+1|0}else hc=Cb;ic=hc+1|0}else ic=Cb;jc=ic+1|0}else jc=Cb;kc=jc+1|0}else kc=Cb;lc=kc+1|0}else lc=Cb;mc=lc+1|0}else mc=Cb;fc=mc+1|0}nc=fc+1|0}else nc=Cb;ec=nc+1|0}fa=a+4112+((Da^5)<<2)|0;Aa=a+4112+((ga^13)<<2)|0;Ba=c[xa>>2]|0;c[p>>2]=c[p>>2]^Ba;ea=c[Fa>>2]|0;c[q>>2]=c[q>>2]^ea;c[r>>2]=c[r>>2]^c[fa>>2];c[s>>2]=c[s>>2]^c[Aa>>2];c[xa>>2]=ea<<22^ma^ea>>10;c[Fa>>2]=ec^ma^Ba<<23^Ba>>9;Ba=c[fa>>2]|0;c[fa>>2]=Ba<<21^ma^Ba>>11;Ba=c[Aa>>2]|0;c[Aa>>2]=Ba<<20^ma^Ba>>12;Ba=a+4112+((Da^6)<<2)|0;Aa=c[Ba>>2]|0;fa=c[t>>2]^Aa;c[t>>2]=fa;Fa=a+4112+((ga^11)<<2)|0;ea=c[Fa>>2]|0;xa=c[u>>2]^ea;c[u>>2]=xa;ja=a+4112+((Da^7)<<2)|0;la=c[v>>2]^c[ja>>2];c[v>>2]=la;ya=a+4112+((ga^15)<<2)|0;ga=c[w>>2]^c[ya>>2];c[w>>2]=ga;c[Ba>>2]=ea<<18^ma^ea>>14;c[Fa>>2]=Aa<<19^ma^Aa>>13;Aa=c[ja>>2]|0;c[ja>>2]=Aa<<17^ma^Aa>>15;Aa=c[ya>>2]|0;c[ya>>2]=Aa<<16^ma^Aa>>16;Aa=x;x=x+4|0;ma=a+16+(((x|0)%1024|0)<<2)|0;F=c[d>>2]|0;G=c[h>>2]|0;H=c[i>>2]|0;I=c[j>>2]|0;e=c[k>>2]|0;C=c[m>>2]|0;D=c[n>>2]|0;E=c[o>>2]|0;g=da&16^16^(c[a+4112+((ha^7^Da)<<2)>>2]^c[d+((ha|8)<<2)>>2])&-2;c[ma>>2]=c[ma>>2]^F^G^H^I^e^C^D^E^c[p>>2]^c[q>>2]^c[r>>2]^c[s>>2]^fa^xa^la^ga;if((Aa|0)>=4092)break;else{y=Nb;z=ec}}c[a>>2]=g;c[f>>2]=B;c[a+8>>2]=0;c[a+12>>2]=512;l=b;return}function zy(b){b=b|0;var c=0;if(!b)return;c=b;b=36880;while(1){b=b+-1|0;a[c>>0]=0;if(!b)break;else c=c+1|0}return}function Ay(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+16|0;f=e;if(!d){l=e;return 0}g=a+8|0;h=a+12|0;i=a+16|0;j=d;d=b;while(1){b=j>>>0<4?j:4;k=c[h>>2]|0;if((k|0)>1023){yy(a);m=c[h>>2]|0}else m=k;k=c[g>>2]|0;c[g>>2]=k+1;n=c[i+(k<<2)>>2]|0;c[h>>2]=m+1;c[f>>2]=c[i+(m<<2)>>2]^n;CT(d|0,f|0,b|0)|0;j=j-b|0;if(!j)break;else d=d+b|0}l=e;return 0}function By(a){a=a|0;var b=0,c=0;if(a)if($E(83809,a)|0)if(($E(83033,a)|0)!=0?($E(83029,a)|0)!=0:0)if($E(83038,a)|0)if($E(83045,a)|0)if(!($E(83052,a)|0))b=16840;else{c=($E(83059,a)|0)==0;return (c?16888:0)|0}else b=16792;else b=16744;else b=16696;else b=16648;else b=0;return b|0}function Cy(a){a=a|0;var b=0;switch(a|0){case 3:{b=16648;break}case 4:{b=16696;break}case 5:{b=16744;break}case 6:{b=16792;break}case 7:{b=16840;break}case 8:{b=16888;break}default:b=0}return b|0}function Dy(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function Ey(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;if(!b)return;d=c[b>>2]|0;if(!d)return;e=c[b+4>>2]|0;if(e|0)rd[c[d+36>>2]&511](e);e=b+8|0;d=c[e>>2]|0;if(d|0){f=c[(c[b>>2]|0)+12>>2]|0;if(!f)g=d;else{h=f<<1;f=d;while(1){h=h+-1|0;a[f>>0]=0;if(!h)break;else f=f+1|0}g=c[e>>2]|0}CE(g)}a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;g=b+4|0;a[b+3>>0]=0;a[g>>0]=0;a[g+1>>0]=0;a[g+2>>0]=0;b=g+4|0;a[g+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;return}function Fy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if((a|0)==0|(b|0)==0){e=-20736;return e|0}f=cd[c[b+32>>2]&63]()|0;c[a+4>>2]=f;if(!f){e=-20864;return e|0}if(d|0?(d=DE(2,c[b+12>>2]|0)|0,c[a+8>>2]=d,(d|0)==0):0){rd[c[b+36>>2]&511](f);e=-20864;return e|0}c[a>>2]=b;e=0;return e|0}function Gy(a){a=a|0;var b=0,d=0;if(!a){b=-20736;return b|0}d=c[a>>2]|0;if(!d){b=-20736;return b|0}rd[c[d+16>>2]&511](c[a+4>>2]|0);b=0;return b|0}function Hy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if(!a){e=-20736;return e|0}f=c[a>>2]|0;if(!f){e=-20736;return e|0}td[c[f+20>>2]&127](c[a+4>>2]|0,b,d);e=0;return e|0}function Iy(a,b){a=a|0;b=b|0;var d=0,e=0;if(!a){d=-20736;return d|0}e=c[a>>2]|0;if(!e){d=-20736;return d|0}sd[c[e+24>>2]&255](c[a+4>>2]|0,b);d=0;return d|0}function Jy(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;if(!a){f=-20736;return f|0}td[c[a+28>>2]&127](b,d,e);f=0;return f|0}function Ky(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0;f=l;l=l+64|0;g=f;if(!b){h=-20736;l=f;return h|0}i=c[b>>2]|0;if(!i){h=-20736;l=f;return h|0}j=b+8|0;k=c[j>>2]|0;if(!k){h=-20736;l=f;return h|0}m=c[i+12>>2]|0;if(m>>>0<e>>>0){n=b+4|0;rd[c[i+16>>2]&511](c[n>>2]|0);td[c[(c[b>>2]|0)+20>>2]&127](c[n>>2]|0,d,e);sd[c[(c[b>>2]|0)+24>>2]&255](c[n>>2]|0,g);n=c[b>>2]|0;o=g;p=c[n+8>>2]|0;q=c[j>>2]|0;r=c[n+12>>2]|0}else{o=d;p=e;q=k;r=m}m=q+r|0;ET(q|0,54,r|0)|0;ET(m|0,92,c[(c[b>>2]|0)+12>>2]|0)|0;if(p|0){r=0;do{k=q+r|0;e=o+r|0;a[k>>0]=a[e>>0]^a[k>>0];k=m+r|0;a[k>>0]=a[e>>0]^a[k>>0];r=r+1|0}while((r|0)!=(p|0))}a[g>>0]=0;a[g+1>>0]=0;a[g+2>>0]=0;a[g+3>>0]=0;a[g+4>>0]=0;a[g+5>>0]=0;a[g+6>>0]=0;a[g+7>>0]=0;a[g+8>>0]=0;a[g+9>>0]=0;a[g+10>>0]=0;a[g+11>>0]=0;a[g+12>>0]=0;a[g+13>>0]=0;a[g+14>>0]=0;a[g+15>>0]=0;a[g+16>>0]=0;a[g+17>>0]=0;a[g+18>>0]=0;a[g+19>>0]=0;a[g+20>>0]=0;a[g+21>>0]=0;a[g+22>>0]=0;a[g+23>>0]=0;a[g+24>>0]=0;a[g+25>>0]=0;a[g+26>>0]=0;a[g+27>>0]=0;a[g+28>>0]=0;a[g+29>>0]=0;a[g+30>>0]=0;a[g+31>>0]=0;a[g+32>>0]=0;a[g+33>>0]=0;a[g+34>>0]=0;a[g+35>>0]=0;a[g+36>>0]=0;a[g+37>>0]=0;a[g+38>>0]=0;a[g+39>>0]=0;a[g+40>>0]=0;a[g+41>>0]=0;a[g+42>>0]=0;a[g+43>>0]=0;a[g+44>>0]=0;a[g+45>>0]=0;a[g+46>>0]=0;a[g+47>>0]=0;a[g+48>>0]=0;a[g+49>>0]=0;a[g+50>>0]=0;a[g+51>>0]=0;a[g+52>>0]=0;a[g+53>>0]=0;a[g+54>>0]=0;a[g+55>>0]=0;a[g+56>>0]=0;a[g+57>>0]=0;a[g+58>>0]=0;a[g+59>>0]=0;a[g+60>>0]=0;a[g+61>>0]=0;a[g+62>>0]=0;a[g+63>>0]=0;g=b+4|0;rd[c[(c[b>>2]|0)+16>>2]&511](c[g>>2]|0);p=c[b>>2]|0;td[c[p+20>>2]&127](c[g>>2]|0,q,c[p+12>>2]|0);h=0;l=f;return h|0}function Ly(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if(!a){e=-20736;return e|0}f=c[a>>2]|0;if(!f){e=-20736;return e|0}if(!(c[a+8>>2]|0)){e=-20736;return e|0}td[c[f+20>>2]&127](c[a+4>>2]|0,b,d);e=0;return e|0}function My(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=l;l=l+64|0;e=d;if(!a){f=-20736;l=d;return f|0}g=c[a>>2]|0;if(!g){f=-20736;l=d;return f|0}h=c[a+8>>2]|0;if(!h){f=-20736;l=d;return f|0}i=h+(c[g+12>>2]|0)|0;h=a+4|0;sd[c[g+24>>2]&255](c[h>>2]|0,e);rd[c[(c[a>>2]|0)+16>>2]&511](c[h>>2]|0);g=c[a>>2]|0;td[c[g+20>>2]&127](c[h>>2]|0,i,c[g+12>>2]|0);g=c[a>>2]|0;td[c[g+20>>2]&127](c[h>>2]|0,e,c[g+8>>2]|0);sd[c[(c[a>>2]|0)+24>>2]&255](c[h>>2]|0,b);f=0;l=d;return f|0}function Ny(a){a=a|0;var b=0,d=0,e=0,f=0;if(!a){b=-20736;return b|0}d=c[a>>2]|0;if(!d){b=-20736;return b|0}e=c[a+8>>2]|0;if(!e){b=-20736;return b|0}f=a+4|0;rd[c[d+16>>2]&511](c[f>>2]|0);d=c[a>>2]|0;td[c[d+20>>2]&127](c[f>>2]|0,e,c[d+12>>2]|0);b=0;return b|0}function Oy(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;i=l;l=l+80|0;j=i+16|0;k=i;if(!b){m=-20736;l=i;return m|0};c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;n=cd[c[b+32>>2]&63]()|0;o=k+4|0;c[o>>2]=n;if(!n){m=-20864;l=i;return m|0}p=DE(2,c[b+12>>2]|0)|0;q=k+8|0;c[q>>2]=p;if(!p){rd[c[b+36>>2]&511](n);m=-20864;l=i;return m|0}c[k>>2]=b;Ky(k,d,e)|0;e=c[k>>2]|0;do if(!e)r=j;else{if(c[q>>2]|0){td[c[e+20>>2]&127](c[o>>2]|0,f,g);d=c[k>>2]|0;if(!d){r=j;break}b=c[q>>2]|0;if(b){n=b+(c[d+12>>2]|0)|0;sd[c[d+24>>2]&255](c[o>>2]|0,j);rd[c[(c[k>>2]|0)+16>>2]&511](c[o>>2]|0);b=c[k>>2]|0;td[c[b+20>>2]&127](c[o>>2]|0,n,c[b+12>>2]|0);b=c[k>>2]|0;td[c[b+20>>2]&127](c[o>>2]|0,j,c[b+8>>2]|0);sd[c[(c[k>>2]|0)+24>>2]&255](c[o>>2]|0,h);b=c[k>>2]|0;if(!b){m=0;l=i;return m|0}else s=b}else{t=j;u=d;v=12}}else{t=j;u=e;v=12}if((v|0)==12)s=u;d=c[o>>2]|0;if(d|0)rd[c[s+36>>2]&511](d);d=c[q>>2]|0;if(d|0){b=c[(c[k>>2]|0)+12>>2]|0;if(!b)w=d;else{n=b<<1;b=d;while(1){n=n+-1|0;a[b>>0]=0;if(!n)break;else b=b+1|0}w=c[q>>2]|0}CE(w)}a[k>>0]=0;a[k+1>>0]=0;a[k+2>>0]=0;a[k+3>>0]=0;a[o>>0]=0;a[o+1>>0]=0;a[o+2>>0]=0;b=o+4|0;a[o+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;m=0;l=i;return m|0}while(0);m=0;l=i;return m|0}function Py(a){a=a|0;var b=0;if(!a){b=0;return b|0}b=c[a+8>>2]&255;return b|0}function Qy(a){a=a|0;var b=0;if(!a)b=0;else b=c[a>>2]|0;return b|0}function Ry(a){a=a|0;var b=0;if(!a)b=0;else b=c[a+4>>2]|0;return b|0}function Sy(a){a=a|0;mD(a);return}function Ty(a,b,c){a=a|0;b=b|0;c=c|0;oD(a,b,c);return}function Uy(a,b){a=a|0;b=b|0;pD(a,b);return}function Vy(){var a=0;a=DE(1,88)|0;if(!a)return a|0;jD(a);return a|0}function Wy(a){a=a|0;kD(a);CE(a);return}function Xy(a,b){a=a|0;b=b|0;lD(a,b);return}function Yy(a,b){a=a|0;b=b|0;nD(a,b);return}function Zy(a){a=a|0;pB(a);return}function _y(a,b,c){a=a|0;b=b|0;c=c|0;rB(a,b,c);return}function $y(a,b){a=a|0;b=b|0;sB(a,b);return}function az(){var a=0;a=DE(1,92)|0;if(!a)return a|0;mB(a);return a|0}function bz(a){a=a|0;nB(a);CE(a);return}function cz(a,b){a=a|0;b=b|0;oB(a,b);return}function dz(a,b){a=a|0;b=b|0;qB(a,b);return}function ez(a){a=a|0;xB(a,1);return}function fz(a,b,c){a=a|0;b=b|0;c=c|0;zB(a,b,c);return}function gz(a,b){a=a|0;b=b|0;AB(a,b);return}function hz(a,b,c){a=a|0;b=b|0;c=c|0;BB(a,b,c,1);return}function iz(){var a=0;a=DE(1,108)|0;if(!a)return a|0;uB(a);return a|0}function jz(a){a=a|0;vB(a);CE(a);return}function kz(a,b){a=a|0;b=b|0;wB(a,b);return}function lz(a,b){a=a|0;b=b|0;yB(a,b);return}function mz(a){a=a|0;xB(a,0);return}function nz(a,b,c){a=a|0;b=b|0;c=c|0;BB(a,b,c,0);return}function oz(a){a=a|0;FB(a,1);return}function pz(a,b,c){a=a|0;b=b|0;c=c|0;HB(a,b,c);return}function qz(a,b){a=a|0;b=b|0;IB(a,b);return}function rz(a,b,c){a=a|0;b=b|0;c=c|0;JB(a,b,c,1);return}function sz(){var a=0;a=DE(1,216)|0;if(!a)return a|0;CB(a);return a|0}function tz(a){a=a|0;DB(a);CE(a);return}function uz(a,b){a=a|0;b=b|0;EB(a,b);return}function vz(a,b){a=a|0;b=b|0;GB(a,b);return}function wz(a){a=a|0;FB(a,0);return}function xz(a,b,c){a=a|0;b=b|0;c=c|0;JB(a,b,c,0);return}function yz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if(!a){d=-46;return d|0}e=a+8|0;switch(c[a+4>>2]|0){case 9:{if(!(aF(83066,c[e>>2]|0,9)|0))f=16936;else{d=-46;return d|0}break}case 7:{if(!(aF(83076,c[e>>2]|0,7)|0))f=16956;else{d=-46;return d|0}break}case 5:{if(!(aF(83084,c[e>>2]|0,5)|0))f=16976;else{d=-46;return d|0}break}case 3:{a=c[e>>2]|0;if(aF(83090,a,3)|0)if(!(aF(83094,a,3)|0))f=17016;else{d=-46;return d|0}else f=16996;break}default:{d=-46;return d|0}}c[b>>2]=c[f+16>>2];d=0;return d|0}function zz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;switch(a|0){case 1:{e=16936;f=83066;break}case 2:{e=16956;f=83076;break}case 3:{e=16976;f=83084;break}case 7:{e=16996;f=83090;break}case 8:{e=17016;f=83094;break}default:{g=-46;return g|0}}c[b>>2]=f;c[d>>2]=c[e+4>>2];g=0;return g|0}function Az(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if(!a){d=-46;return d|0}e=a+8|0;switch(c[a+4>>2]|0){case 8:{a=c[e>>2]|0;if(aF(83214,a,8)|0)if(!(aF(83229,a,8)|0))f=17096;else{d=-46;return d|0}else f=17056;break}case 5:{a=c[e>>2]|0;if(aF(83223,a,5)|0)if(aF(83238,a,5)|0)if(aF(83244,a,5)|0)if(aF(83250,a,5)|0)if(aF(83256,a,5)|0)if(!(aF(83262,a,5)|0))f=17196;else{d=-46;return d|0}else f=17176;else f=17156;else f=17136;else f=17116;else f=17076;break}case 9:{a=c[e>>2]|0;if(aF(83268,a,9)|0)if(aF(83278,a,9)|0)if(!(aF(83288,a,9)|0))f=17256;else{d=-46;return d|0}else f=17236;else f=17216;break}case 10:{if(!(aF(83298,c[e>>2]|0,10)|0))f=17276;else{d=-46;return d|0}break}default:{d=-46;return d|0}}c[b>>2]=c[f+16>>2];d=0;return d|0}function Bz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;do switch(a|0){case 1:{e=17056;f=83214;break}case 2:{e=17076;f=83223;break}case 3:{e=17096;f=83229;break}case 4:{e=17116;f=83238;break}case 5:{e=17136;f=83244;break}case 10:{e=17156;f=83250;break}case 11:{e=17176;f=83256;break}case 12:{e=17196;f=83262;break}case 6:{e=17216;f=83268;break}case 7:{e=17236;f=83278;break}case 8:{e=17256;f=83288;break}case 9:{e=17276;f=83298;break}default:{g=-46;return g|0}}while(0);c[b>>2]=f;c[d>>2]=c[e+4>>2];g=0;return g|0}function Cz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if(!a){d=-46;return d|0}e=a+8|0;switch(c[a+4>>2]|0){case 5:{if(!(aF(83493,c[e>>2]|0,5)|0))f=17316;else{d=-46;return d|0}break}case 8:{if(!(aF(83499,c[e>>2]|0,8)|0))f=17336;else{d=-46;return d|0}break}case 9:{a=c[e>>2]|0;if(aF(83508,a,9)|0)if(aF(83518,a,9)|0)if(aF(83528,a,9)|0)if(aF(83538,a,9)|0)if(aF(83548,a,9)|0)if(!(aF(83558,a,9)|0))f=17456;else{d=-46;return d|0}else f=17436;else f=17416;else f=17396;else f=17376;else f=17356;break}default:{d=-46;return d|0}}c[b>>2]=c[f+16>>2];d=0;return d|0}function Dz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;switch(a|0){case 33:{e=17316;f=83493;break}case 37:{e=17336;f=83499;break}case 5:{e=17356;f=83508;break}case 6:{e=17376;f=83518;break}case 7:{e=17396;f=83528;break}case 14:{e=17416;f=83538;break}case 15:{e=17436;f=83548;break}case 16:{e=17456;f=83558;break}default:{g=-46;return g|0}}c[b>>2]=f;c[d>>2]=c[e+4>>2];g=0;return g|0}function Ez(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if(!a){d=-46;return d|0}e=a+8|0;switch(c[a+4>>2]|0){case 8:{if(!(aF(83747,c[e>>2]|0,8)|0))f=17496;else{d=-46;return d|0}break}case 5:{if(!(aF(83756,c[e>>2]|0,5)|0))f=17516;else{d=-46;return d|0}break}case 9:{a=c[e>>2]|0;if(aF(83762,a,9)|0)if(aF(83772,a,9)|0)if(aF(83782,a,9)|0)if(!(aF(83792,a,9)|0))f=17596;else{d=-46;return d|0}else f=17576;else f=17556;else f=17536;break}default:{d=-46;return d|0}}c[b>>2]=c[f+16>>2];d=0;return d|0}function Fz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;switch(a|0){case 3:{e=17496;f=83747;break}case 4:{e=17516;f=83756;break}case 5:{e=17536;f=83762;break}case 6:{e=17556;f=83772;break}case 7:{e=17576;f=83782;break}case 8:{e=17596;f=83792;break}default:{g=-46;return g|0}}c[b>>2]=f;c[d>>2]=c[e+4>>2];g=0;return g|0}function Gz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if(!a){e=-46;return e|0}if((c[a+4>>2]|0)!=10){e=-46;return e|0}f=c[a+8>>2]|0;if(aF(83899,f,10)|0)if(!(aF(83910,f,10)|0))g=17660;else{e=-46;return e|0}else g=17636;c[b>>2]=c[g+16>>2];c[d>>2]=c[g+20>>2];e=0;return e|0}function Hz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if(!a){d=-46;return d|0}if((c[a+4>>2]|0)!=7){d=-46;return d|0}e=c[a+8>>2]|0;if(aF(84043,e,7)|0)if(!(aF(84051,e,7)|0))f=17728;else{d=-46;return d|0}else f=17708;c[b>>2]=c[f+16>>2];d=0;return d|0}function Iz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;switch(a|0){case 1:{e=17708;f=84043;break}case 2:{e=17728;f=84051;break}default:{g=-46;return g|0}}c[b>>2]=f;c[d>>2]=c[e+4>>2];g=0;return g|0}function Jz(a){a=a|0;if(!a)return;c[a>>2]=0;c[a+4>>2]=0;return}function Kz(b){b=b|0;var d=0,e=0;if(!b)return;d=c[b>>2]|0;if(!d)return;e=b+4|0;rd[c[d+40>>2]&511](c[e>>2]|0);a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;a[e>>0]=0;a[b+5>>0]=0;a[b+6>>0]=0;a[b+7>>0]=0;return}function Lz(a){a=a|0;var b=0;switch(a|0){case 1:{b=17768;break}case 2:{b=17816;break}case 3:{b=17864;break}case 4:{b=17912;break}case 7:{b=17960;break}case 8:{b=18008;break}default:b=0}return b|0}function Mz(a,b){a=a|0;b=b|0;var d=0,e=0;if((a|0)==0|(b|0)==0){d=-16e3;return d|0}if(c[a>>2]|0){d=-16e3;return d|0}e=cd[c[b+36>>2]&63]()|0;c[a+4>>2]=e;if(!e){d=-16256;return d|0}c[a>>2]=b;d=0;return d|0}function Nz(a,b){a=a|0;b=b|0;var d=0,e=0;if(!a){d=0;return d|0}e=c[a>>2]|0;if(!e){d=0;return d|0}d=dd[c[e+12>>2]&255](b)|0;return d|0}function Oz(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0;if(!a){h=-16e3;return h|0}i=c[a>>2]|0;if(!i){h=-16e3;return h|0}do if(!e){j=Cy(b)|0;if(!j){h=-16e3;return h|0}else{k=(Py(j)|0)&255;l=k;m=c[a>>2]|0;break}}else{l=e;m=i}while(0);i=c[m+16>>2]|0;if(!i){h=-16128;return h|0}h=kd[i&63](c[a+4>>2]|0,b,d,l,f,g)|0;return h|0}function Pz(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0;if(!a){j=-16e3;return j|0}k=c[a>>2]|0;if(!k){j=-16e3;return j|0}do if(!e){l=Cy(b)|0;if(!l){j=-16e3;return j|0}else{m=(Py(l)|0)&255;n=m;o=c[a>>2]|0;break}}else{n=e;o=k}while(0);k=c[o+20>>2]|0;if(!k){j=-16128;return j|0}j=md[k&31](c[a+4>>2]|0,b,d,n,f,g,h,i)|0;return j|0}function Qz(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0;if(!a){j=-16e3;return j|0}k=c[a>>2]|0;if(!k){j=-16e3;return j|0}l=c[k+24>>2]|0;if(!l){j=-16128;return j|0}j=md[l&31](c[a+4>>2]|0,b,d,e,f,g,h,i)|0;return j|0}function Rz(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0;if(!a){j=-16e3;return j|0}k=c[a>>2]|0;if(!k){j=-16e3;return j|0}l=c[k+28>>2]|0;if(!l){j=-16128;return j|0}j=md[l&31](c[a+4>>2]|0,b,d,e,f,g,h,i)|0;return j|0}function Sz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;do if((((a|0)!=0?(d=c[a>>2]|0,!((b|0)==0|(d|0)==0)):0)?(e=c[b>>2]|0,(e|0)!=0):0)?(f=c[e+32>>2]|0,(f|0)!=0):0){if((c[e>>2]|0)==5){if((c[d>>2]|0)!=1){g=-16128;break}}else if((d|0)!=(e|0)){g=-16128;break}g=ed[f&255](c[a+4>>2]|0,c[b+4>>2]|0)|0}else g=-16e3;while(0);return g|0}function Tz(a){a=a|0;var b=0,d=0;if(!a){b=0;return b|0}d=c[a>>2]|0;if(!d){b=0;return b|0}b=dd[c[d+8>>2]&255](c[a+4>>2]|0)|0;return b|0}function Uz(a){a=a|0;var b=0,d=0;if((a|0)!=0?(b=c[a>>2]|0,(b|0)!=0):0)d=c[b>>2]|0;else d=0;return d|0}function Vz(a){a=a|0;return c[a+4>>2]<<3|0}function Wz(a){a=a|0;return ((a|0)==1|(a|0)==6)&1|0}function Xz(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=a+4|0;if((c[h>>2]|0)>>>0>g>>>0){i=-17280;return i|0}j=lB(a,0,0,0,b,e,d,f)|0;if(j|0){i=j;return i|0}i=(c[h>>2]|0)>>>0<g>>>0?-14592:0;return i|0}function Yz(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[g>>2]=c[a+4>>2];return jB(a,h,i,1,b,e,d,f)|0}function Zz(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;if((c[a+4>>2]|0)!=(d|0)){j=-16512;return j|0}j=hB(a,h,i,1,f,b,e,g)|0;return j|0}function _z(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0;j=c[a+4>>2]|0;c[f>>2]=j;if(j>>>0>g>>>0){k=-17408;return k|0}k=fB(a,h,i,0,d,b,e)|0;return k|0}function $z(a,b){a=a|0;b=b|0;return bB(a,b)|0}function aA(){var a=0;a=DE(1,172)|0;if(!a)return a|0;YA(a,0,0);return a|0}function bA(a){a=a|0;_A(a);CE(a);return}function cA(a,b){a=a|0;b=b|0;c[b>>2]=1;c[b+4>>2]=84087;c[b+8>>2]=a+8;c[b+12>>2]=1;c[b+16>>2]=84093;c[b+20>>2]=a+20;return}function dA(a){a=a|0;return c[a+88>>2]|0}function eA(a){a=a|0;return ((a|0)==4|(a|1|0)==3)&1|0}function fA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;b=l;l=l+176|0;g=b;cD(g);h=aD(g,a)|0;if(!h){a=$C(g,c,d,e,f)|0;i=(a|0)==-19456?-14592:a}else i=h;bD(g);l=b;return i|0}function gA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0;i=l;l=l+176|0;j=i;cD(j);k=aD(j,a)|0;if(!k)m=_C(j,b,c,d,e,f,g,h)|0;else m=k;bD(j);l=i;return m|0}function hA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return RB(a,eC(1)|0,b,c,d,e,f,g,h)|0}function iA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return QB(a,eC(1)|0,b,c,d,e,f,g,h)|0}function jA(a,b){a=a|0;b=b|0;return Yx(a,b)|0}function kA(){var a=0;a=DE(1,172)|0;if(!a)return a|0;Cx(a);return a|0}function lA(a){a=a|0;Fx(a);CE(a);return}function mA(a,b){a=a|0;b=b|0;c[b>>2]=2;c[b+4>>2]=84102;c[b+8>>2]=a+136;return}function nA(a){a=a|0;return (a|1|0)==3|0}function oA(a){a=a|0;return (a|0)==4|0}function pA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;b=$C(a,c,d,e,f)|0;return ((b|0)==-19456?-14592:b)|0}function qA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return _C(a,b,c,d,e,f,g,h)|0}function rA(){var a=0;a=DE(1,172)|0;if(!a)return a|0;cD(a);return a|0}function sA(a){a=a|0;bD(a);CE(a);return}function tA(a){a=a|0;return BC(c[a>>2]|0)|0}function uA(a){a=a|0;return (a|0)==7|0}function vA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return RB(a,eC(2)|0,b,c,d,e,f,g,h)|0}function wA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return QB(a,eC(2)|0,b,c,d,e,f,g,h)|0}function xA(a,b){a=a|0;b=b|0;return zC(a,b)|0}function yA(){var a=0;a=DE(1,12)|0;if(!a)return a|0;qC(a);return a|0}function zA(a){a=a|0;sC(a);CE(a);return}function AA(a){a=a|0;return (a+-7|0)>>>0<2|0}function BA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;b=xC(a,e,f,c,d)|0;return ((b|0)==-18432?-14592:b)|0}function CA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return wC(a,e,f,c,d)|0}function DA(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return -7936}function EA(a,b,d,e,f,g,h,i,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,m=0,n=0;k=l;l=l+16|0;m=k;c[m>>2]=0;n=FA(a,b,d,e,f,g,h,i,j,m)|0;l=k;return n|0}function FA(b,d,e,f,g,h,i,j,k,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;n=l;l=l+400|0;o=n+84|0;p=n+72|0;q=n+136|0;r=n+104|0;s=n+88|0;t=n+8|0;u=n;c[u>>2]=0;v=cw(e)|0;if(!v){w=-7936;l=n;return w|0}e=c[v+8>>2]|0;x=e>>>3;c[m>>2]=0;y=v+16|0;z=c[y>>2]|0;c[o>>2]=0;do if(h>>>0<=128){c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;ET(q|0,0,258)|0;A=b+8|0;B=(c[A>>2]|0)+(c[b+4>>2]|0)|0;if((c[b>>2]|0)==48){C=p+4|0;D=_u(A,B,C,4)|0;if(!D){E=c[A>>2]|0;c[p+8>>2]=E;c[A>>2]=E+(c[C>>2]|0);E=$u(A,B,o)|0;if(!E){if((c[A>>2]|0)!=(B|0)){F=-7910;break}}else{G=E;H=7}}else{G=D;H=7}if((H|0)==7?(D=G+-7808|0,D|0):0){F=D;break}if(h|0){D=0;do{a[q+(D<<1|1)>>0]=a[g+D>>0]|0;D=D+1|0}while((D|0)!=(h|0))}D=(h<<1)+2|0;E=p+8|0;B=GA(r,x,q,D,c[E>>2]|0,c[C>>2]|0,f,1,c[o>>2]|0)|0;if(!B)if(!z)F=0;else F=GA(s,z,q,D,c[E>>2]|0,c[C>>2]|0,f,2,c[o>>2]|0)|0;else F=B}else F=-7906}else F=-8064;while(0);if(F|0){w=F;l=n;return w|0}fw(t);F=hw(t,v)|0;if(!F){v=sw(t,r,e&-8,d)|0;if(!v){d=tw(t,s,c[y>>2]|0)|0;if(!d){y=uw(t)|0;if(!y){e=ww(t,i,j,k,u)|0;if(!e){j=c[u>>2]|0;c[m>>2]=(c[m>>2]|0)+j;i=(xw(t,k+j|0,u)|0)!=0;c[m>>2]=(c[m>>2]|0)+(c[u>>2]|0);I=i?-7680:0}else I=e}else I=y}else I=d}else I=v}else I=F;a[r>>0]=0;a[r+1>>0]=0;a[r+2>>0]=0;a[r+3>>0]=0;a[r+4>>0]=0;a[r+5>>0]=0;a[r+6>>0]=0;a[r+7>>0]=0;a[r+8>>0]=0;a[r+9>>0]=0;a[r+10>>0]=0;a[r+11>>0]=0;a[r+12>>0]=0;a[r+13>>0]=0;a[r+14>>0]=0;a[r+15>>0]=0;a[r+16>>0]=0;a[r+17>>0]=0;a[r+18>>0]=0;a[r+19>>0]=0;a[r+20>>0]=0;a[r+21>>0]=0;a[r+22>>0]=0;a[r+23>>0]=0;a[r+24>>0]=0;a[r+25>>0]=0;a[r+26>>0]=0;a[r+27>>0]=0;a[r+28>>0]=0;a[r+29>>0]=0;a[r+30>>0]=0;a[r+31>>0]=0;a[s>>0]=0;a[s+1>>0]=0;a[s+2>>0]=0;a[s+3>>0]=0;a[s+4>>0]=0;a[s+5>>0]=0;a[s+6>>0]=0;a[s+7>>0]=0;a[s+8>>0]=0;a[s+9>>0]=0;a[s+10>>0]=0;a[s+11>>0]=0;a[s+12>>0]=0;a[s+13>>0]=0;a[s+14>>0]=0;a[s+15>>0]=0;gw(t);w=I;l=n;return w|0}function GA(b,c,e,f,g,h,i,j,k){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;m=l;l=l+592|0;n=m+464|0;o=m+336|0;p=m+208|0;q=m+80|0;r=m+16|0;s=m;if(c>>>0>128|f>>>0>64|h>>>0>64){t=-8064;l=m;return t|0}u=Cy(i)|0;if(!u){t=-7936;l=m;return t|0}Dy(s);i=Fy(s,u,0)|0;if(i|0){t=i;l=m;return t|0}i=Py(u)|0;v=(i&255)<33?64:128;ET(n|0,j&255|0,v|0)|0;j=o;w=v;while(1){x=w>>>0>h>>>0?h:w;CT(j|0,g|0,x|0)|0;w=w-x|0;if(!w)break;else j=j+x|0}j=i&255;i=p;w=v;while(1){g=w>>>0>f>>>0?f:w;CT(i|0,e|0,g|0)|0;w=w-g|0;if(!w)break;else i=i+g|0}a:do if(c){i=Gy(s)|0;w=(i|0)==0;if(k>>>0<=1){if(w){y=c;z=b}else{A=i;break}while(1){e=Hy(s,n,v)|0;if(e|0){A=e;break a}e=Hy(s,o,v)|0;if(e|0){A=e;break a}e=Hy(s,p,v)|0;if(e|0){A=e;break a}e=Iy(s,r)|0;if(e|0){A=e;break a}e=y>>>0>j>>>0?j:y;CT(z|0,r|0,e|0)|0;y=y-e|0;z=z+e|0;if(!y){A=0;break a}else{B=q;C=v}while(1){e=C>>>0>j>>>0?j:C;CT(B|0,r|0,e|0)|0;C=C-e|0;if(!C){D=v;break}else B=B+e|0}while(1){if(!D){E=0;F=v;break}D=D+-1|0;e=q+D|0;f=(a[e>>0]|0)+1<<24>>24;a[e>>0]=f;if(f<<24>>24){E=0;F=v;break}}while(1){F=F+-1|0;f=o+F|0;e=(E&255)+(d[f>>0]|0)+(d[q+F>>0]|0)|0;a[f>>0]=e;if(!F){G=0;H=v;break}else E=e>>>8}while(1){H=H+-1|0;e=p+H|0;f=(G&255)+(d[e>>0]|0)+(d[q+H>>0]|0)|0;a[e>>0]=f;if(!H)break;else G=f>>>8}f=Gy(s)|0;if(f|0){A=f;break a}}}if(w){f=c;e=b;while(1){g=Hy(s,n,v)|0;if(g|0){A=g;break a}g=Hy(s,o,v)|0;if(g|0){A=g;break a}g=Hy(s,p,v)|0;if(g|0){A=g;break a}g=Iy(s,r)|0;if(!g)I=1;else{A=g;break a}do{g=Jy(u,r,j,r)|0;I=I+1|0;if(g|0){A=g;break a}}while(I>>>0<k>>>0);g=f>>>0>j>>>0?j:f;CT(e|0,r|0,g|0)|0;f=f-g|0;e=e+g|0;if(!f){A=0;break a}else{J=q;K=v}while(1){g=K>>>0>j>>>0?j:K;CT(J|0,r|0,g|0)|0;K=K-g|0;if(!K){L=v;break}else J=J+g|0}while(1){if(!L){M=0;N=v;break}L=L+-1|0;g=q+L|0;h=(a[g>>0]|0)+1<<24>>24;a[g>>0]=h;if(h<<24>>24){M=0;N=v;break}}while(1){N=N+-1|0;h=o+N|0;g=(M&255)+(d[h>>0]|0)+(d[q+N>>0]|0)|0;a[h>>0]=g;if(!N){O=0;P=v;break}else M=g>>>8}while(1){P=P+-1|0;g=p+P|0;h=(O&255)+(d[g>>0]|0)+(d[q+P>>0]|0)|0;a[g>>0]=h;if(!P)break;else O=h>>>8}h=Gy(s)|0;if(h|0){A=h;break}}}else A=i}else A=0;while(0);a[o>>0]=0;a[o+1>>0]=0;a[o+2>>0]=0;a[o+3>>0]=0;a[o+4>>0]=0;a[o+5>>0]=0;a[o+6>>0]=0;a[o+7>>0]=0;a[o+8>>0]=0;a[o+9>>0]=0;a[o+10>>0]=0;a[o+11>>0]=0;a[o+12>>0]=0;a[o+13>>0]=0;a[o+14>>0]=0;a[o+15>>0]=0;a[o+16>>0]=0;a[o+17>>0]=0;a[o+18>>0]=0;a[o+19>>0]=0;a[o+20>>0]=0;a[o+21>>0]=0;a[o+22>>0]=0;a[o+23>>0]=0;a[o+24>>0]=0;a[o+25>>0]=0;a[o+26>>0]=0;a[o+27>>0]=0;a[o+28>>0]=0;a[o+29>>0]=0;a[o+30>>0]=0;a[o+31>>0]=0;a[o+32>>0]=0;a[o+33>>0]=0;a[o+34>>0]=0;a[o+35>>0]=0;a[o+36>>0]=0;a[o+37>>0]=0;a[o+38>>0]=0;a[o+39>>0]=0;a[o+40>>0]=0;a[o+41>>0]=0;a[o+42>>0]=0;a[o+43>>0]=0;a[o+44>>0]=0;a[o+45>>0]=0;a[o+46>>0]=0;a[o+47>>0]=0;a[o+48>>0]=0;a[o+49>>0]=0;a[o+50>>0]=0;a[o+51>>0]=0;a[o+52>>0]=0;a[o+53>>0]=0;a[o+54>>0]=0;a[o+55>>0]=0;a[o+56>>0]=0;a[o+57>>0]=0;a[o+58>>0]=0;a[o+59>>0]=0;a[o+60>>0]=0;a[o+61>>0]=0;a[o+62>>0]=0;a[o+63>>0]=0;a[o+64>>0]=0;a[o+65>>0]=0;a[o+66>>0]=0;a[o+67>>0]=0;a[o+68>>0]=0;a[o+69>>0]=0;a[o+70>>0]=0;a[o+71>>0]=0;a[o+72>>0]=0;a[o+73>>0]=0;a[o+74>>0]=0;a[o+75>>0]=0;a[o+76>>0]=0;a[o+77>>0]=0;a[o+78>>0]=0;a[o+79>>0]=0;a[o+80>>0]=0;a[o+81>>0]=0;a[o+82>>0]=0;a[o+83>>0]=0;a[o+84>>0]=0;a[o+85>>0]=0;a[o+86>>0]=0;a[o+87>>0]=0;a[o+88>>0]=0;a[o+89>>0]=0;a[o+90>>0]=0;a[o+91>>0]=0;a[o+92>>0]=0;a[o+93>>0]=0;a[o+94>>0]=0;a[o+95>>0]=0;a[o+96>>0]=0;a[o+97>>0]=0;a[o+98>>0]=0;a[o+99>>0]=0;a[o+100>>0]=0;a[o+101>>0]=0;a[o+102>>0]=0;a[o+103>>0]=0;a[o+104>>0]=0;a[o+105>>0]=0;a[o+106>>0]=0;a[o+107>>0]=0;a[o+108>>0]=0;a[o+109>>0]=0;a[o+110>>0]=0;a[o+111>>0]=0;a[o+112>>0]=0;a[o+113>>0]=0;a[o+114>>0]=0;a[o+115>>0]=0;a[o+116>>0]=0;a[o+117>>0]=0;a[o+118>>0]=0;a[o+119>>0]=0;a[o+120>>0]=0;a[o+121>>0]=0;a[o+122>>0]=0;a[o+123>>0]=0;a[o+124>>0]=0;a[o+125>>0]=0;a[o+126>>0]=0;a[o+127>>0]=0;a[p>>0]=0;a[p+1>>0]=0;a[p+2>>0]=0;a[p+3>>0]=0;a[p+4>>0]=0;a[p+5>>0]=0;a[p+6>>0]=0;a[p+7>>0]=0;a[p+8>>0]=0;a[p+9>>0]=0;a[p+10>>0]=0;a[p+11>>0]=0;a[p+12>>0]=0;a[p+13>>0]=0;a[p+14>>0]=0;a[p+15>>0]=0;a[p+16>>0]=0;a[p+17>>0]=0;a[p+18>>0]=0;a[p+19>>0]=0;a[p+20>>0]=0;a[p+21>>0]=0;a[p+22>>0]=0;a[p+23>>0]=0;a[p+24>>0]=0;a[p+25>>0]=0;a[p+26>>0]=0;a[p+27>>0]=0;a[p+28>>0]=0;a[p+29>>0]=0;a[p+30>>0]=0;a[p+31>>0]=0;a[p+32>>0]=0;a[p+33>>0]=0;a[p+34>>0]=0;a[p+35>>0]=0;a[p+36>>0]=0;a[p+37>>0]=0;a[p+38>>0]=0;a[p+39>>0]=0;a[p+40>>0]=0;a[p+41>>0]=0;a[p+42>>0]=0;a[p+43>>0]=0;a[p+44>>0]=0;a[p+45>>0]=0;a[p+46>>0]=0;a[p+47>>0]=0;a[p+48>>0]=0;a[p+49>>0]=0;a[p+50>>0]=0;a[p+51>>0]=0;a[p+52>>0]=0;a[p+53>>0]=0;a[p+54>>0]=0;a[p+55>>0]=0;a[p+56>>0]=0;a[p+57>>0]=0;a[p+58>>0]=0;a[p+59>>0]=0;a[p+60>>0]=0;a[p+61>>0]=0;a[p+62>>0]=0;a[p+63>>0]=0;a[p+64>>0]=0;a[p+65>>0]=0;a[p+66>>0]=0;a[p+67>>0]=0;a[p+68>>0]=0;a[p+69>>0]=0;a[p+70>>0]=0;a[p+71>>0]=0;a[p+72>>0]=0;a[p+73>>0]=0;a[p+74>>0]=0;a[p+75>>0]=0;a[p+76>>0]=0;a[p+77>>0]=0;a[p+78>>0]=0;a[p+79>>0]=0;a[p+80>>0]=0;a[p+81>>0]=0;a[p+82>>0]=0;a[p+83>>0]=0;a[p+84>>0]=0;a[p+85>>0]=0;a[p+86>>0]=0;a[p+87>>0]=0;a[p+88>>0]=0;a[p+89>>0]=0;a[p+90>>0]=0;a[p+91>>0]=0;a[p+92>>0]=0;a[p+93>>0]=0;a[p+94>>0]=0;a[p+95>>0]=0;a[p+96>>0]=0;a[p+97>>0]=0;a[p+98>>0]=0;a[p+99>>0]=0;a[p+100>>0]=0;a[p+101>>0]=0;a[p+102>>0]=0;a[p+103>>0]=0;a[p+104>>0]=0;a[p+105>>0]=0;a[p+106>>0]=0;a[p+107>>0]=0;a[p+108>>0]=0;a[p+109>>0]=0;a[p+110>>0]=0;a[p+111>>0]=0;a[p+112>>0]=0;a[p+113>>0]=0;a[p+114>>0]=0;a[p+115>>0]=0;a[p+116>>0]=0;a[p+117>>0]=0;a[p+118>>0]=0;a[p+119>>0]=0;a[p+120>>0]=0;a[p+121>>0]=0;a[p+122>>0]=0;a[p+123>>0]=0;a[p+124>>0]=0;a[p+125>>0]=0;a[p+126>>0]=0;a[p+127>>0]=0;a[q>>0]=0;a[q+1>>0]=0;a[q+2>>0]=0;a[q+3>>0]=0;a[q+4>>0]=0;a[q+5>>0]=0;a[q+6>>0]=0;a[q+7>>0]=0;a[q+8>>0]=0;a[q+9>>0]=0;a[q+10>>0]=0;a[q+11>>0]=0;a[q+12>>0]=0;a[q+13>>0]=0;a[q+14>>0]=0;a[q+15>>0]=0;a[q+16>>0]=0;a[q+17>>0]=0;a[q+18>>0]=0;a[q+19>>0]=0;a[q+20>>0]=0;a[q+21>>0]=0;a[q+22>>0]=0;a[q+23>>0]=0;a[q+24>>0]=0;a[q+25>>0]=0;a[q+26>>0]=0;a[q+27>>0]=0;a[q+28>>0]=0;a[q+29>>0]=0;a[q+30>>0]=0;a[q+31>>0]=0;a[q+32>>0]=0;a[q+33>>0]=0;a[q+34>>0]=0;a[q+35>>0]=0;a[q+36>>0]=0;a[q+37>>0]=0;a[q+38>>0]=0;a[q+39>>0]=0;a[q+40>>0]=0;a[q+41>>0]=0;a[q+42>>0]=0;a[q+43>>0]=0;a[q+44>>0]=0;a[q+45>>0]=0;a[q+46>>0]=0;a[q+47>>0]=0;a[q+48>>0]=0;a[q+49>>0]=0;a[q+50>>0]=0;a[q+51>>0]=0;a[q+52>>0]=0;a[q+53>>0]=0;a[q+54>>0]=0;a[q+55>>0]=0;a[q+56>>0]=0;a[q+57>>0]=0;a[q+58>>0]=0;a[q+59>>0]=0;a[q+60>>0]=0;a[q+61>>0]=0;a[q+62>>0]=0;a[q+63>>0]=0;a[q+64>>0]=0;a[q+65>>0]=0;a[q+66>>0]=0;a[q+67>>0]=0;a[q+68>>0]=0;a[q+69>>0]=0;a[q+70>>0]=0;a[q+71>>0]=0;a[q+72>>0]=0;a[q+73>>0]=0;a[q+74>>0]=0;a[q+75>>0]=0;a[q+76>>0]=0;a[q+77>>0]=0;a[q+78>>0]=0;a[q+79>>0]=0;a[q+80>>0]=0;a[q+81>>0]=0;a[q+82>>0]=0;a[q+83>>0]=0;a[q+84>>0]=0;a[q+85>>0]=0;a[q+86>>0]=0;a[q+87>>0]=0;a[q+88>>0]=0;a[q+89>>0]=0;a[q+90>>0]=0;a[q+91>>0]=0;a[q+92>>0]=0;a[q+93>>0]=0;a[q+94>>0]=0;a[q+95>>0]=0;a[q+96>>0]=0;a[q+97>>0]=0;a[q+98>>0]=0;a[q+99>>0]=0;a[q+100>>0]=0;a[q+101>>0]=0;a[q+102>>0]=0;a[q+103>>0]=0;a[q+104>>0]=0;a[q+105>>0]=0;a[q+106>>0]=0;a[q+107>>0]=0;a[q+108>>0]=0;a[q+109>>0]=0;a[q+110>>0]=0;a[q+111>>0]=0;a[q+112>>0]=0;a[q+113>>0]=0;a[q+114>>0]=0;a[q+115>>0]=0;a[q+116>>0]=0;a[q+117>>0]=0;a[q+118>>0]=0;a[q+119>>0]=0;a[q+120>>0]=0;a[q+121>>0]=0;a[q+122>>0]=0;a[q+123>>0]=0;a[q+124>>0]=0;a[q+125>>0]=0;a[q+126>>0]=0;a[q+127>>0]=0;a[r>>0]=0;a[r+1>>0]=0;a[r+2>>0]=0;a[r+3>>0]=0;a[r+4>>0]=0;a[r+5>>0]=0;a[r+6>>0]=0;a[r+7>>0]=0;a[r+8>>0]=0;a[r+9>>0]=0;a[r+10>>0]=0;a[r+11>>0]=0;a[r+12>>0]=0;a[r+13>>0]=0;a[r+14>>0]=0;a[r+15>>0]=0;a[r+16>>0]=0;a[r+17>>0]=0;a[r+18>>0]=0;a[r+19>>0]=0;a[r+20>>0]=0;a[r+21>>0]=0;a[r+22>>0]=0;a[r+23>>0]=0;a[r+24>>0]=0;a[r+25>>0]=0;a[r+26>>0]=0;a[r+27>>0]=0;a[r+28>>0]=0;a[r+29>>0]=0;a[r+30>>0]=0;a[r+31>>0]=0;a[r+32>>0]=0;a[r+33>>0]=0;a[r+34>>0]=0;a[r+35>>0]=0;a[r+36>>0]=0;a[r+37>>0]=0;a[r+38>>0]=0;a[r+39>>0]=0;a[r+40>>0]=0;a[r+41>>0]=0;a[r+42>>0]=0;a[r+43>>0]=0;a[r+44>>0]=0;a[r+45>>0]=0;a[r+46>>0]=0;a[r+47>>0]=0;a[r+48>>0]=0;a[r+49>>0]=0;a[r+50>>0]=0;a[r+51>>0]=0;a[r+52>>0]=0;a[r+53>>0]=0;a[r+54>>0]=0;a[r+55>>0]=0;a[r+56>>0]=0;a[r+57>>0]=0;a[r+58>>0]=0;a[r+59>>0]=0;a[r+60>>0]=0;a[r+61>>0]=0;a[r+62>>0]=0;a[r+63>>0]=0;Ey(s);t=A;l=m;return t|0}function HA(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0;i=l;l=l+16|0;j=i;c[j>>2]=0;k=IA(a,b,d,e,f,g,h,j)|0;l=i;return k|0}function IA(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;j=l;l=l+240|0;k=j+156|0;m=j+152|0;n=j+148|0;o=j+144|0;p=j+140|0;q=j+128|0;r=j+116|0;s=j+104|0;t=j+92|0;u=j+80|0;v=j+200|0;w=j+168|0;x=j+68|0;y=j+64|0;z=j;c[n>>2]=0;c[o>>2]=0;A=c[a+8>>2]|0;c[p>>2]=A;B=A+(c[a+4>>2]|0)|0;c[i>>2]=0;if((c[a>>2]|0)!=48){C=-12130;l=j;return C|0}a=cv(p,B,q,s)|0;if(a|0){C=a+-12032|0;l=j;return C|0}if((c[q+4>>2]|0)!=9){C=-11904;l=j;return C|0}if(aF(84122,c[q+8>>2]|0,9)|0){C=-11904;l=j;return C|0}q=c[s+8>>2]|0;c[m>>2]=q;a=q+(c[s+4>>2]|0)|0;a:do if((c[s>>2]|0)==48){q=u+4|0;A=_u(m,a,q,4)|0;b:do if(!A){D=c[m>>2]|0;c[u+8>>2]=D;c[m>>2]=D+(c[q>>2]|0);D=$u(m,a,n)|0;if(!D){if((c[m>>2]|0)!=(a|0)){E=$u(m,a,o)|0;switch(E|0){case 0:case -98:break;default:{F=E;G=22;break b}}if((c[m>>2]|0)!=(a|0)){E=dv(m,a,k)|0;if(E|0){F=E;G=22;break}if((c[k+4>>2]|0)!=8){H=-11904;break a}E=c[k+8>>2]|0;if(aF(84132,E,8)|0)if(aF(84141,E,8)|0)if(aF(84150,E,8)|0)if(aF(84159,E,8)|0)if(!(aF(84168,E,8)|0))I=8;else{H=-11904;break a}else I=7;else I=6;else I=5;else I=4;if((c[m>>2]|0)==(a|0))J=I;else{H=-12134;break a}}else J=4}else J=4;K=J}else{F=D;G=22}}else{F=A;G=22}while(0);if((G|0)==22){A=F+-12032|0;if(!A)K=4;else{C=A;l=j;return C|0}}A=Cy(K)|0;if(!A){C=-11904;l=j;return C|0}D=cv(p,B,r,t)|0;if(D|0){C=D+-12032|0;l=j;return C|0}if(Cz(r,y)|0){C=-11904;l=j;return C|0}D=cw(c[y>>2]|0)|0;if(!D){C=-11904;l=j;return C|0}c[o>>2]=(c[D+8>>2]|0)>>>3;if((c[t>>2]|0)!=4){C=-12032;l=j;return C|0}E=t+4|0;if((c[E>>2]|0)!=(c[D+16>>2]|0)){C=-12032;l=j;return C|0}Dy(x);fw(z);CT(w|0,c[t+8>>2]|0,c[E>>2]|0)|0;L=Fy(x,A,1)|0;if(!L){A=JA(x,d,e,c[u+8>>2]|0,c[q>>2]|0,c[n>>2]|0,c[o>>2]|0,v)|0;if(!A){M=hw(z,D)|0;if(!M){D=sw(z,v,c[o>>2]<<3,b)|0;if(!D){N=(Aw(z,w,c[E>>2]|0,f,g,h,i)|0)!=0;O=N?-11776:0}else O=D}else O=M}else O=A}else O=L;Ey(x);gw(z);C=O;l=j;return C|0}else H=-12130;while(0);C=H;l=j;return C|0}function JA(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=l;l=l+144|0;m=k+72|0;n=k+8|0;o=k;p=Py(c[b>>2]|0)|0;c[o>>2]=0;a[o+3>>0]=1;a:do if(!i)q=0;else{r=p&255;s=h>>>0>1;t=p<<24>>24==0;u=i;v=j;while(1){w=Ky(b,d,e)|0;if(w|0){q=w;break a}w=Ly(b,f,g)|0;if(w|0){q=w;break a}w=Ly(b,o,4)|0;if(w|0){q=w;break a}w=My(b,n)|0;if(w|0){q=w;break a}CT(m|0,n|0,r|0)|0;b:do if(s){if(t){w=1;while(1){x=Ky(b,d,e)|0;if(x|0){q=x;break a}x=Ly(b,m,r)|0;if(x|0){q=x;break a}x=My(b,m)|0;if(x|0){q=x;break a}w=w+1|0;if(w>>>0>=h>>>0)break b}}else y=1;do{w=Ky(b,d,e)|0;if(w|0){q=w;break a}w=Ly(b,m,r)|0;if(w|0){q=w;break a}w=My(b,m)|0;if(!w)z=0;else{q=w;break a}do{w=n+z|0;a[w>>0]=a[w>>0]^a[m+z>>0];z=z+1|0}while((z|0)!=(r|0));y=y+1|0}while(y>>>0<h>>>0)}while(0);w=u>>>0<r>>>0?u:r;CT(v|0,n|0,w|0)|0;u=u-w|0;v=v+w|0;w=4;do{if(!w)break;w=w+-1|0;x=o+w|0;A=(a[x>>0]|0)+1<<24>>24;a[x>>0]=A}while(!(A<<24>>24));if(!u){q=0;break}}}while(0);l=k;return q|0}function KA(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=l;l=l+32|0;f=e+20|0;g=e+16|0;h=e+4|0;i=e;c[i>>2]=0;j=_u(a,b,g,48)|0;if(j|0){k=j+-15616|0;l=e;return k|0}j=(c[a>>2]|0)+(c[g>>2]|0)|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;b=cv(a,j,f,h)|0;a:do if(b){m=b+-14976|0;if(m|0){k=m;l=e;return k|0}}else{b:do if(!(yz(f,i)|0)){if((c[i>>2]|0)==1){switch(c[h>>2]|0){case 0:case 5:break;default:{n=-14976;break b}}if(c[h+4>>2]|0){n=-14976;break}}break a}else n=-15488;while(0);k=n;l=e;return k|0}while(0);n=bv(a,j,g)|0;if(n|0){k=n+-15104|0;l=e;return k|0}if(((c[a>>2]|0)+(c[g>>2]|0)|0)!=(j|0)){k=-15206;l=e;return k|0}g=Lz(c[i>>2]|0)|0;if(!g){k=-15488;l=e;return k|0}n=Mz(d,g)|0;if(n|0){k=n;l=e;return k|0}n=c[i>>2]|0;do if((n|0)==1){i=c[d+4>>2]|0;g=_u(a,j,f,48)|0;do if(!g)if(((c[a>>2]|0)+(c[f>>2]|0)|0)==(j|0)){b=i+8|0;m=av(a,j,b)|0;if(!m){o=av(a,j,i+20|0)|0;if(!o){if((c[a>>2]|0)!=(j|0)){p=-15206;break}if($A(i)|0){p=-15104;break}c[i+4>>2]=Ev(b)|0;p=0;break}else q=o}else q=m;p=q+-15104|0}else p=-15206;else p=g+-15104|0;while(0);r=p;s=40}else{if((n|1|0)!=3){if((n+-7|0)>>>0>=2){t=-15488;break}g=c[d+4>>2]|0;i=j-(c[a>>2]|0)|0;if((i|0)<(CC(c[g>>2]|0)|0)){t=-15616;break}i=rC(g,pC((n|0)==7?1:(n|0)==8?2:0)|0)|0;if(i|0){t=i;break}i=c[g+4>>2]|0;m=c[a>>2]|0;CT(i|0,m|0,CC(c[g>>2]|0)|0)|0;m=CC(c[g>>2]|0)|0;g=(c[a>>2]|0)+m|0;c[a>>2]=g;u=g;s=42;break}g=d+4|0;m=c[g>>2]|0;if((c[h>>2]|0)==6)if(!(Az(h,f)|0)){i=c[m>>2]|0;o=c[f>>2]|0;if((i|0)==0|(i|0)==(o|0)){i=Zx(m,o)|0;if(i|0){t=i;break}i=c[g>>2]|0;g=i+136|0;o=c[a>>2]|0;m=Kx(i,g,o,j-o|0)|0;if(!m)v=Nx(i,g)|0;else v=m;c[a>>2]=j;r=v;s=40;break}else w=-15616}else w=-14848;else w=-15616;t=w}while(0);if((s|0)==40)if(!r){u=c[a>>2]|0;s=42}else t=r;if((s|0)==42)if((u|0)==(j|0)){k=0;l=e;return k|0}else t=-15206;Kz(d);k=t;l=e;return k|0}function LA(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;h=l;l=l+16|0;i=h+12|0;j=h;rD(j);a:do if((e|0)!=0?(k=d+(e+-1)|0,(a[k>>0]|0)==0):0){m=sD(j,84177,84209,d,f,g,i)|0;b:do if((m|0)<-4224){switch(m|0){case -4992:{n=-15232;break a;break}case -4864:break;default:break b}n=-15360;break a}else{if((m|0)>=0){switch(m|0){case 0:break;default:break b}o=Lz(1)|0;if(!o){n=-15488;break a}p=Mz(b,o)|0;if(!p){o=MA(c[b+4>>2]|0,c[j>>2]|0,c[j+4>>2]|0)|0;if(!o)q=0;else{r=o;s=7}}else{r=p;s=7}if((s|0)==7){Kz(b);q=r}uD(j);n=q;break a}switch(m|0){case -4224:break;default:break b}if(a[k>>0]|0){s=30;break a}p=sD(j,84239,84270,d,f,g,i)|0;c:do if((p|0)<-4224){switch(p|0){case -4992:{n=-15232;break a;break}case -4864:break;default:break c}n=-15360;break a}else{if((p|0)>=0){switch(p|0){case 0:break;default:break c}o=Lz(2)|0;if(!o){n=-15488;break a}t=Mz(b,o)|0;if(!t){o=NA(c[b+4>>2]|0,c[j>>2]|0,c[j+4>>2]|0)|0;if(!o)u=0;else{v=o;s=16}}else{v=t;s=16}if((s|0)==16){Kz(b);u=v}uD(j);n=u;break a}switch(p|0){case -4224:break;default:break c}if(a[k>>0]|0){s=30;break a}t=sD(j,84299,84327,d,0,0,i)|0;if((t|0)>=0){switch(t|0){case 0:break;default:{n=t;break a}}o=OA(b,c[j>>2]|0,c[j+4>>2]|0)|0;if(o|0)Kz(b);uD(j);n=o;break a}switch(t|0){case -4224:break;default:{n=t;break a}}if(a[k>>0]|0){s=30;break a}t=sD(j,84353,84391,d,0,0,i)|0;if((t|0)<0)switch(t|0){case -4224:{s=30;break a;break}default:{n=t;break a}}switch(t|0){case 0:break;default:{n=t;break a}}t=PA(b,c[j>>2]|0,c[j+4>>2]|0,f,g)|0;if(t|0)Kz(b);uD(j);n=t;break a}while(0);n=p;break a}while(0);n=m}else s=30;while(0);if((s|0)==30){s=PA(b,d,e,f,g)|0;if(s){Kz(b);if((s|128|0)!=-15232)if(OA(b,d,e)|0){Kz(b);g=Lz(1)|0;if(g)if((Mz(b,g)|0)==0?(g=b+4|0,(MA(c[g>>2]|0,d,e)|0)!=0):0){Kz(b);f=Lz(2)|0;if(f)if((Mz(b,f)|0)==0?(NA(c[g>>2]|0,d,e)|0)!=0:0){Kz(b);n=-15616}else n=0;else n=-15488}else n=0;else n=-15488}else n=0;else n=s}else n=0}l=h;return n|0}function MA(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0;e=l;l=l+16|0;f=e+4|0;g=e;c[g>>2]=b;h=_u(g,b+d|0,f,48)|0;if(h|0){i=h+-15616|0;l=e;return i|0}h=(c[g>>2]|0)+(c[f>>2]|0)|0;f=$u(g,h,a)|0;if(f|0){i=f+-15616|0;l=e;return i|0}if(c[a>>2]|0){i=-15744;l=e;return i|0}f=a+8|0;d=av(g,h,f)|0;if(!d){b=av(g,h,a+20|0)|0;if(!b){j=av(g,h,a+32|0)|0;if(!j){k=av(g,h,a+44|0)|0;if(!k){m=av(g,h,a+56|0)|0;if(!m){n=av(g,h,a+68|0)|0;if(!n){o=av(g,h,a+80|0)|0;if(!o){p=av(g,h,a+92|0)|0;if(!p){c[a+4>>2]=Ev(f)|0;if((c[g>>2]|0)!=(h|0)){_A(a);i=-15718;l=e;return i|0}h=aB(a)|0;if(!h){i=0;l=e;return i|0}_A(a);i=h;l=e;return i|0}else q=p}else q=o}else q=n}else q=m}else q=k}else q=j}else q=b}else q=d;_A(a);i=q+-15616|0;l=e;return i|0}function NA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=l;l=l+32|0;g=f+24|0;h=f+20|0;i=f+16|0;j=f+4|0;k=f;c[k>>2]=d;m=_u(k,d+e|0,i,48)|0;if(m|0){n=m+-15616|0;l=f;return n|0}m=(c[k>>2]|0)+(c[i>>2]|0)|0;e=$u(k,m,h)|0;if(e|0){n=e+-15616|0;l=f;return n|0}if((c[h>>2]|0)!=1){n=-15744;l=f;return n|0}h=_u(k,m,i,4)|0;if(h|0){n=h+-15616|0;l=f;return n|0}h=b+124|0;e=Rv(h,c[k>>2]|0,c[i>>2]|0)|0;if(e|0){Fx(b);n=e+-15616|0;l=f;return n|0}e=(c[k>>2]|0)+(c[i>>2]|0)|0;c[k>>2]=e;a:do if((e|0)!=(m|0)){d=_u(k,m,i,160)|0;switch(d|0){case 0:{o=12;break}case -98:break;default:{Fx(b);n=d+-15616|0;l=f;return n|0}}b:do if((o|0)==12){d=c[k>>2]|0;p=d+(c[i>>2]|0)|0;q=a[d>>0]|0;d=q&255;c[j>>2]=d;do if(q<<24>>24==6){r=j+4|0;s=_u(k,p,r,d)|0;if(!s){t=c[k>>2]|0;c[j+8>>2]=t;u=t+(c[r>>2]|0)|0;c[k>>2]=u;if((u|0)!=(p|0)){v=-15718;break}}else{u=s+-15616|0;if(u|0){v=u;break}}if((c[j>>2]|0)==6)if(!(Az(j,g)|0)){u=c[b>>2]|0;s=c[g>>2]|0;if((u|0)==0|(u|0)==(s|0)){u=Zx(b,s)|0;if(!u)break b;else{v=u;break}}else w=-15616}else w=-14848;else w=-15616;v=w}else v=-15714;while(0);Fx(b);n=v;l=f;return n|0}while(0);p=_u(k,m,i,161)|0;switch(p|0){case -98:{o=31;break a;break}case 0:break;default:{Fx(b);n=p+-15616|0;l=f;return n|0}}p=(c[k>>2]|0)+(c[i>>2]|0)|0;d=bv(k,p,i)|0;if(d|0){n=d+-15616|0;l=f;return n|0}d=c[k>>2]|0;if((d+(c[i>>2]|0)|0)!=(p|0)){n=-15718;l=f;return n|0}q=b+136|0;u=Kx(b,q,d,p-d|0)|0;if(!u)x=Nx(b,q)|0;else x=u;c[k>>2]=p;if((x|0)<0){switch(x|0){case -20096:{o=31;break a;break}default:n=-15616}l=f;return n|0}else{switch(x|0){case 0:{y=b;break a;break}default:n=-15616}l=f;return n|0}}else o=31;while(0);if((o|0)==31){o=Lx(b,b+136|0,h,b+40|0,0,0)|0;if(!o)y=b;else{Fx(b);n=o+-15616|0;l=f;return n|0}}o=Mx(y,h)|0;if(!o){n=0;l=f;return n|0}Fx(b);n=o;l=f;return n|0}function OA(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=l;l=l+48|0;f=e+28|0;g=e+24|0;h=e+20|0;i=e+8|0;j=e+4|0;k=e;c[j>>2]=b;c[k>>2]=0;m=_u(j,b+d|0,h,48)|0;if(m|0){n=m+-15616|0;l=e;return n|0}m=(c[j>>2]|0)+(c[h>>2]|0)|0;d=$u(j,m,g)|0;if(d|0){n=d+-15616|0;l=e;return n|0}if(c[g>>2]|0){n=-15744;l=e;return n|0};c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;g=cv(j,m,f,i)|0;a:do if(g){d=g+-14976|0;if(d|0){o=d;p=14}}else{b:do if(!(yz(f,k)|0)){if((c[k>>2]|0)==1){switch(c[i>>2]|0){case 0:case 5:break;default:{q=-14976;break b}}if(c[i+4>>2]|0){q=-14976;break}}break a}else q=-15488;while(0);o=q;p=14}while(0);if((p|0)==14){n=o+-15616|0;l=e;return n|0}o=_u(j,m,h,4)|0;if(o|0){n=o+-15616|0;l=e;return n|0}if(!(c[h>>2]|0)){n=-15712;l=e;return n|0}o=Lz(c[k>>2]|0)|0;if(!o){n=-15488;l=e;return n|0}q=Mz(a,o)|0;if(q|0){n=q;l=e;return n|0}q=c[k>>2]|0;if((q|0)==1){k=MA(c[a+4>>2]|0,c[j>>2]|0,c[h>>2]|0)|0;if(!k){n=0;l=e;return n|0}Kz(a);n=k;l=e;return n|0}if((q|1|0)==3){k=a+4|0;o=c[k>>2]|0;if((c[i>>2]|0)==6)if(!(Az(i,f)|0)){i=c[o>>2]|0;g=c[f>>2]|0;if((i|0)==0|(i|0)==(g|0)){i=Zx(o,g)|0;if(!i){g=NA(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0)|0;if(!g){n=0;l=e;return n|0}else r=g}else r=i}else{s=-15616;p=27}}else{s=-14848;p=27}else{s=-15616;p=27}if((p|0)==27)r=s;Kz(a);n=r;l=e;return n|0}if((q+-7|0)>>>0>=2){Kz(a);n=-15488;l=e;return n|0}r=c[a+4>>2]|0;c[f>>2]=0;s=rC(r,pC((q|0)==7?1:(q|0)==8?2:0)|0)|0;do if(!s){q=_u(j,m,f,4)|0;if(!q){i=c[f>>2]|0;if((i|0)!=(CC(c[r>>2]|0)|0)){t=-15616;p=37;break}i=c[r+8>>2]|0;g=c[j>>2]|0;CT(i|0,g|0,CC(c[r>>2]|0)|0)|0;g=CC(c[r>>2]|0)|0;c[j>>2]=(c[j>>2]|0)+g;u=vC(r)|0}else u=q+-15616|0;if(!u){n=0;l=e;return n|0}else v=u}else{t=s;p=37}while(0);if((p|0)==37)v=t;Kz(a);n=v;l=e;return n|0}function PA(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0;h=l;l=l+48|0;i=h+36|0;j=h+32|0;k=h+20|0;m=h+8|0;n=h+4|0;o=h;c[j>>2]=d;p=_u(j,d+e|0,i,48)|0;if(p|0){q=p+-15616|0;l=h;return q|0}p=(c[j>>2]|0)+(c[i>>2]|0)|0;e=cv(j,p,k,m)|0;if(e|0){q=e+-15616|0;l=h;return q|0}e=_u(j,p,i,4)|0;if(e|0){q=e+-15616|0;l=h;return q|0}if(!g){q=-15360;l=h;return q|0}e=DE(1,c[i>>2]|0)|0;if(!e){q=-16256;l=h;return q|0}a:do if(!(Gz(k,o,n)|0)){p=EA(m,0,c[n>>2]|0,c[o>>2]|0,f,g,c[j>>2]|0,c[i>>2]|0,e)|0;if(p|0){CE(e);q=(p|0)==-7680?-15232:p;l=h;return q|0}}else{switch(c[k+4>>2]|0){case 10:{if(!(aF(84479,c[k+8>>2]|0,10)|0)){p=DA(m,0,f,g,c[j>>2]|0,c[i>>2]|0,e)|0;if(p|0){CE(e);q=p;l=h;return q|0}if((a[e>>0]|0)==48)break a;CE(e);q=-15232;l=h;return q|0}break}case 9:{if(!(aF(84490,c[k+8>>2]|0,9)|0)){p=HA(m,0,f,g,c[j>>2]|0,c[i>>2]|0,e)|0;if(!p)break a;CE(e);q=(p|0)==-11776?-15232:p;l=h;return q|0}break}default:{}}CE(e);q=-14720;l=h;return q|0}while(0);j=OA(b,e,c[i>>2]|0)|0;CE(e);q=j;l=h;return q|0}function QA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;f=l;l=l+32|0;g=f+16|0;h=f+12|0;i=f;rD(i);a:do if(e)if(!(a[d+(e+-1)>>0]|0)){j=sD(i,84427,84454,d,0,0,h)|0;b:do if((j|0)<0)switch(j|0){case -4224:{k=e;m=d;break a;break}default:{}}else{switch(j|0){case 0:break;default:break b}k=c[i+4>>2]|0;m=c[i>>2]|0;break a}while(0);uD(i);n=j;l=f;return n|0}else{k=e;m=d}else{k=0;m=d}while(0);c[g>>2]=m;d=KA(g,m+k|0,b)|0;uD(i);n=d;l=f;return n|0}function RA(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;e=l;l=l+144|0;f=e;g=e+4|0;if((Uz(d)|0)==1){h=c[d+4>>2]|0;i=hv(a,b,h+20|0)|0;if((i|0)<0){j=i;l=e;return j|0}k=hv(a,b,h+8|0)|0;if((k|0)<0){j=k;l=e;return j|0}h=k+i|0;i=ev(a,b,h)|0;if((i|0)<0){j=i;l=e;return j|0}k=fv(a,b,48)|0;j=((k|0)<0?0:i+h|0)+k|0;l=e;return j|0}if((Uz(d)|0)!=2){if((Uz(d)|0)!=7?(Uz(d)|0)!=8:0){j=-14720;l=e;return j|0}k=c[d+4>>2]|0;h=c[k+4>>2]|0;j=gv(a,b,h,CC(c[k>>2]|0)|0)|0;l=e;return j|0}k=c[d+4>>2]|0;c[f>>2]=0;d=Jx(k,k+136|0,0,f,g,133)|0;if(!d){k=c[a>>2]|0;if(k>>>0>=b>>>0?(h=c[f>>2]|0,i=k+(0-h)|0,(k-b|0)>>>0>=h>>>0):0){c[a>>2]=i;CT(i|0,g|0,h|0)|0;m=c[f>>2]|0}else m=-108}else m=d;j=m;l=e;return j|0}function SA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=l;l=l+32|0;g=f+16|0;h=f+12|0;i=f+8|0;j=f+4|0;k=f;c[i>>2]=d+e;e=RA(i,d,b)|0;if((e|0)<0){m=e;l=f;return m|0}n=c[i>>2]|0;if((n-d|0)<1){m=-108;l=f;return m|0}o=n+-1|0;c[i>>2]=o;a[o>>0]=0;o=e+1|0;e=ev(i,d,o)|0;if((e|0)<0){m=e;l=f;return m|0}n=fv(i,d,3)|0;if((n|0)<0){m=n;l=f;return m|0}p=e+o+n|0;n=zz(Uz(b)|0,k,j)|0;if(n|0){m=n;l=f;return m|0}if((Uz(b)|0)==2){n=Bz(c[c[b+4>>2]>>2]|0,g,h)|0;if(!n)q=jv(i,d,c[g>>2]|0,c[h>>2]|0)|0;else q=n;if((q|0)<0){m=q;l=f;return m|0}else r=q}else r=0;if((Uz(b)|0)!=7?(Uz(b)|0)!=8:0){b=kv(i,d,c[k>>2]|0,c[j>>2]|0,r)|0;if((b|0)<0){m=b;l=f;return m|0}else s=b}else{b=lv(i,d,c[k>>2]|0,c[j>>2]|0)|0;if((b|0)<0){m=b;l=f;return m|0}else s=b}b=p+s|0;s=ev(i,d,b)|0;if((s|0)<0){m=s;l=f;return m|0}p=fv(i,d,48)|0;m=((p|0)<0?0:b+s|0)+p|0;l=f;return m|0}function TA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=l;l=l+144|0;g=f+140|0;h=f+4|0;i=f;c[i>>2]=d+e;a:do if((Uz(b)|0)==1){j=c[b+4>>2]|0;k=hv(i,d,j+92|0)|0;if((k|0)>=0){m=hv(i,d,j+80|0)|0;if((m|0)>=0){n=hv(i,d,j+68|0)|0;if((n|0)>=0){o=hv(i,d,j+56|0)|0;if((o|0)>=0){p=hv(i,d,j+44|0)|0;if((p|0)>=0){q=hv(i,d,j+32|0)|0;if((q|0)>=0){r=hv(i,d,j+20|0)|0;if((r|0)>=0){s=hv(i,d,j+8|0)|0;if((s|0)>=0){j=nv(i,d,0)|0;if((j|0)>=0){t=m+k+n+o+p+q+r+s+j|0;u=ev(i,d,t)|0;if((u|0)>=0){v=fv(i,d,48)|0;w=(v|0)<0;if(w)x=v;else{y=u+t+(w?0:v)|0;z=37}}else x=u}else x=j}else x=s}else x=r}else x=q}else x=p}else x=o}else x=n}else x=m}else x=k}else{if((Uz(b)|0)!=2){if((Uz(b)|0)!=7?(Uz(b)|0)!=8:0){x=-14720;break}x=UA(b,d,e,0,0,0,0)|0;break}k=c[b+4>>2]|0;c[g>>2]=0;m=Jx(k,k+136|0,0,g,h,133)|0;do if(!m){n=c[i>>2]|0;if(n>>>0>=d>>>0?(o=c[g>>2]|0,p=n+(0-o)|0,(n-d|0)>>>0>=o>>>0):0){c[i>>2]=p;CT(p|0,h|0,o|0)|0;A=c[g>>2]|0;break}x=-108;break a}else A=m;while(0);if((A|0)>=0){m=c[i>>2]|0;if((m-d|0)>=1){o=m+-1|0;c[i>>2]=o;a[o>>0]=0;o=A+1|0;m=ev(i,d,o)|0;if((m|0)>=0){p=fv(i,d,3)|0;if((p|0)>=0){n=m+o+p|0;o=ev(i,d,n)|0;if((o|0)>=0){q=fv(i,d,-95)|0;if((q|0)>=0){r=Bz(c[k>>2]|0,g,h)|0;if(!r)B=jv(i,d,c[g>>2]|0,c[h>>2]|0)|0;else B=r;if((B|0)>=0){r=ev(i,d,B)|0;if((r|0)>=0){s=fv(i,d,-96)|0;if((s|0)>=0){j=hv(i,d,k+124|0)|0;if((j|0)>=0){a[c[i>>2]>>0]=4;u=nv(i,d,1)|0;if((u|0)>=0){v=o+n+q+B+r+s+j+u|0;n=ev(i,d,v)|0;if((n|0)>=0){w=fv(i,d,48)|0;t=(w|0)<0;if(t)x=w;else{y=n+v+(t?0:w)|0;z=37}}else x=n}else x=u}else x=j}else x=s}else x=r}else x=B}else x=q}else x=o}else x=p}else x=m}else x=-108}else x=A}while(0);if((z|0)==37)x=y;l=f;return x|0}function UA(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;j=l;l=l+192|0;k=j+180|0;m=j+44|0;n=j+40|0;o=j+36|0;p=j+32|0;q=j+20|0;r=j+8|0;s=j+4|0;t=j;u=d+e|0;c[n>>2]=u;c[o>>2]=0;do if((Uz(b)|0)==1){e=c[b+4>>2]|0;v=hv(n,d,e+92|0)|0;if((v|0)<0){w=v;l=j;return w|0}x=hv(n,d,e+80|0)|0;if((x|0)<0){w=x;l=j;return w|0}y=hv(n,d,e+68|0)|0;if((y|0)<0){w=y;l=j;return w|0}z=hv(n,d,e+56|0)|0;if((z|0)<0){w=z;l=j;return w|0}A=hv(n,d,e+44|0)|0;if((A|0)<0){w=A;l=j;return w|0}B=hv(n,d,e+32|0)|0;if((B|0)<0){w=B;l=j;return w|0}C=hv(n,d,e+20|0)|0;if((C|0)<0){w=C;l=j;return w|0}D=hv(n,d,e+8|0)|0;if((D|0)<0){w=D;l=j;return w|0}e=nv(n,d,0)|0;if((e|0)<0){w=e;l=j;return w|0}E=x+v+y+z+A+B+C+D+e|0;e=ev(n,d,E)|0;if((e|0)<0){w=e;l=j;return w|0}D=fv(n,d,48)|0;C=(D|0)<0;if(C){w=D;l=j;return w|0}else{F=D;G=e+E+(C?0:D)|0}}else{if((Uz(b)|0)!=2){if((Uz(b)|0)!=7?(Uz(b)|0)!=8:0){w=-14720;l=j;return w|0}D=c[b+4>>2]|0;C=c[D+8>>2]|0;E=ov(n,d,C,CC(c[D>>2]|0)|0)|0;if((E|0)<0)w=E;else{F=0;G=E;break}l=j;return w|0}E=c[b+4>>2]|0;c[k>>2]=0;D=Jx(E,E+136|0,0,k,m,133)|0;do if(!D){C=c[n>>2]|0;if(C>>>0>=d>>>0?(e=c[k>>2]|0,B=C+(0-e)|0,(C-d|0)>>>0>=e>>>0):0){c[n>>2]=B;CT(B|0,m|0,e|0)|0;H=c[k>>2]|0;break}w=-108;l=j;return w|0}else H=D;while(0);if((H|0)<0){w=H;l=j;return w|0}D=c[n>>2]|0;if((D-d|0)<1){w=-108;l=j;return w|0}e=D+-1|0;c[n>>2]=e;a[e>>0]=0;e=H+1|0;D=ev(n,d,e)|0;if((D|0)<0){w=D;l=j;return w|0}B=fv(n,d,3)|0;if((B|0)<0){w=B;l=j;return w|0}C=D+e+B|0;B=ev(n,d,C)|0;if((B|0)<0){w=B;l=j;return w|0}e=fv(n,d,-95)|0;if((e|0)<0){w=e;l=j;return w|0}D=hv(n,d,E+124|0)|0;if((D|0)<0){w=D;l=j;return w|0}a[c[n>>2]>>0]=4;A=nv(n,d,1)|0;if((A|0)<0){w=A;l=j;return w|0}z=B+C+e+D+A|0;A=ev(n,d,z)|0;if((A|0)<0){w=A;l=j;return w|0}D=fv(n,d,48)|0;e=(D|0)<0;if(e){w=D;l=j;return w|0}else{F=D;G=A+z+(e?0:D)|0}}while(0);H=ev(n,d,G)|0;if((H|0)<0){w=H;l=j;return w|0}D=fv(n,d,4)|0;if((D|0)<0){w=D;l=j;return w|0}e=H+G+D|0;D=zz(Uz(b)|0,p,o)|0;if(D|0){w=D;l=j;return w|0}if((Uz(b)|0)==2){D=Bz(c[c[b+4>>2]>>2]|0,k,m)|0;if(!D)I=jv(n,d,c[k>>2]|0,c[m>>2]|0)|0;else I=D;if((I|0)<0){w=I;l=j;return w|0}else J=I}else J=0;if((Uz(b)|0)!=7?(Uz(b)|0)!=8:0){b=kv(n,d,c[p>>2]|0,c[o>>2]|0,J)|0;if((b|0)<0){w=b;l=j;return w|0}else K=b}else{b=lv(n,d,c[p>>2]|0,c[o>>2]|0)|0;if((b|0)<0){w=b;l=j;return w|0}else K=b}b=nv(n,d,0)|0;if((b|0)<0){w=b;l=j;return w|0}o=e+K+b|0;b=ev(n,d,o)|0;if((b|0)<0){w=b;l=j;return w|0}K=fv(n,d,48)|0;if((K|0)<0){w=K;l=j;return w|0}e=b+o+K|0;if((f|0)!=0&(g|0)!=0&(e|0)!=0){c[s>>2]=0;c[t>>2]=h;K=cv(t,h+i|0,q,r)|0;a:do if(!K){t=DE(1,e+16|0)|0;if(t){b:do if(!(Gz(q,m,k)|0)){o=FA(r,1,c[k>>2]|0,c[m>>2]|0,f,g,c[n>>2]|0,e,t,s)|0;if(o|0){CE(t);L=0;M=o;N=e;break a}}else{switch(c[q+4>>2]|0){case 10:break;case 9:{if(aF(84490,c[q+8>>2]|0,9)|0)break b;o=IA(r,1,f,g,c[n>>2]|0,e,t,s)|0;if(!o)break b;CE(t);L=0;M=o;N=e;break a;break}default:break b}if(!(aF(84479,c[q+8>>2]|0,10)|0)){o=DA(r,1,f,g,c[n>>2]|0,e,t)|0;if(!o){c[s>>2]=e;break}else{CE(t);L=0;M=o;N=e;break a}}}while(0);E=c[s>>2]|0;o=u+(0-E)|0;c[n>>2]=o;CT(o|0,t|0,E|0)|0;CE(t);o=ev(n,d,E)|0;if((o|0)>=0){b=o+E|0;p=fv(n,d,4)|0;if((p|0)>=0){J=p+b|0;I=gv(n,d,h,i)|0;if((I|0)>=0){D=I+J|0;G=ev(n,d,D)|0;if((G|0)<0){L=0;M=G;N=D}else{H=fv(n,d,48)|0;z=(H|0)<0;L=z^1;M=z?H:F;N=G+D+(z?0:H)|0}}else{L=0;M=I;N=J}}else{L=0;M=p;N=b}}else{L=0;M=o;N=E}}else{L=0;M=-16256;N=e}}else{L=0;M=K+-16e3|0;N=e}while(0);if(L)O=N;else{w=M;l=j;return w|0}}else O=e;w=O;l=j;return w|0}function VA(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=l;l=l+2096|0;f=e+4|0;g=e;c[g>>2]=0;h=SA(a,f,2086)|0;if((h|0)<0){i=h;l=e;return i|0}i=vD(84500,84528,f+2086+(0-h)|0,h,b,d,g)|0;l=e;return i|0}function WA(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0;e=l;l=l+11424|0;f=e+5715|0;g=e+4|0;h=e+8|0;i=e;c[i>>2]=0;if((Uz(a)|0)!=7?(Uz(a)|0)!=8:0){j=TA(a,h,5707)|0;if((j|0)<0){k=j;l=e;return k|0}if((Uz(a)|0)!=1)if((Uz(a)|0)==2){m=84706;n=84643}else{k=-14720;l=e;return k|0}else{m=84675;n=84610}k=vD(n,m,h+5707+(0-j)|0,j,b,d,i)|0;l=e;return k|0}c[g>>2]=0;i=UA(a,f,5707,0,0,0,0)|0;if((i|0)<0)o=i;else o=vD(84554,84583,f+5707+(0-i)|0,i,b,d,g)|0;k=o;l=e;return k|0}function XA(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0;i=l;l=l+5712|0;j=i+4|0;k=i;c[k>>2]=0;m=UA(a,j,5707,e,f,g,h)|0;h=(e|0)!=0&(f|0)!=0;if((m|0)<0){n=m;l=i;return n|0}n=vD(h?84773:84554,h?84736:84583,j+5707+(0-m)|0,m,b,d,k)|0;l=i;return n|0}function YA(a,b,d){a=a|0;b=b|0;d=d|0;ET(a|0,0,164)|0;c[a+164>>2]=b;c[a+168>>2]=d;return}function ZA(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=l;l=l+48|0;h=g+36|0;i=g+24|0;j=g+12|0;k=g;if(!((e&1|0)==0&(((b|0)==0|e>>>0<128|(f|0)<3)^1))){m=-16512;l=g;return m|0}rv(h);rv(i);rv(j);rv(k);n=a+20|0;o=zv(n,f)|0;a:do if(!o){f=a+44|0;p=e>>>1;q=a+56|0;r=a+8|0;do{s=bw(f,p,0,b,d)|0;if(s|0){t=s;break a}s=bw(q,p,0,b,d)|0;if(s|0){t=s;break a}if(Tv(f,q)|0){s=Gv(r,f,q)|0;if(s|0){t=s;break a}if((Dv(r)|0)==(e|0)){if((Tv(f,q)|0)<0)wv(f,q);s=Nv(h,f,1)|0;if(s|0){t=s;break a}s=Nv(i,q,1)|0;if(s|0){t=s;break a}s=Gv(j,h,i)|0;if(s|0){t=s;break a}s=Yv(k,n,j)|0;if(s|0){t=s;break a}}}}while((Uv(k,1)|0)!=0);p=a+32|0;s=_v(p,n,j)|0;if(!s){u=Vv(a+68|0,p,h)|0;if(!u){v=Vv(a+80|0,p,i)|0;if(!v){p=_v(a+92|0,q,f)|0;if(!p){c[a+4>>2]=((Dv(r)|0)+7|0)>>>3;t=0}else t=p}else t=v}else t=u}else t=s}else t=o;while(0);sv(h);sv(i);sv(j);sv(k);if(!t){m=0;l=g;return m|0}_A(a);m=t+-16768|0;l=g;return m|0}function _A(a){a=a|0;sv(a+140|0);sv(a+152|0);sv(a+128|0);sv(a+116|0);sv(a+104|0);sv(a+92|0);sv(a+80|0);sv(a+68|0);sv(a+56|0);sv(a+44|0);sv(a+32|0);sv(a+20|0);sv(a+8|0);return}function $A(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+8|0;d=c[a+16>>2]|0;if(!d)return -16896;e=a+20|0;f=c[a+28>>2]|0;if(!f)return -16896;if(!(c[d>>2]&1))return -16896;if(!(c[f>>2]&1))return -16896;if((Dv(b)|0)>>>0<128)return -16896;if((Dv(b)|0)>>>0>8192)return -16896;if((Dv(e)|0)>>>0<2)return -16896;else return ((Tv(e,b)|0)>>31&16896)+-16896|0;return 0}function aB(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;b=l;l=l+160|0;d=b+144|0;e=b+132|0;f=b+120|0;g=b+108|0;h=b+96|0;i=b+84|0;j=b+72|0;k=b+60|0;m=b+48|0;n=b+36|0;o=b+24|0;p=b+12|0;q=b;r=a+8|0;s=c[a+16>>2]|0;if(!s){t=-16896;l=b;return t|0}u=a+20|0;v=c[a+28>>2]|0;if(!v){t=-16896;l=b;return t|0}if(!(c[s>>2]&1)){t=-16896;l=b;return t|0}if(!(c[v>>2]&1)){t=-16896;l=b;return t|0}if((Dv(r)|0)>>>0<128){t=-16896;l=b;return t|0}if((Dv(r)|0)>>>0>8192){t=-16896;l=b;return t|0}if((Dv(u)|0)>>>0<2){t=-16896;l=b;return t|0}v=((Tv(u,r)|0)>>31&16896)+-16896|0;if(v|0){t=v;l=b;return t|0}v=a+44|0;if(!(c[a+52>>2]|0)){t=-16896;l=b;return t|0}s=a+56|0;if(!(c[a+64>>2]|0)){t=-16896;l=b;return t|0}w=a+32|0;if(!(c[a+40>>2]|0)){t=-16896;l=b;return t|0}rv(d);rv(e);rv(f);rv(g);rv(h);rv(i);rv(j);rv(k);rv(m);rv(n);rv(o);rv(p);rv(q);x=Gv(d,v,s)|0;a:do if(!x){y=Gv(e,w,u)|0;if(!y){z=Nv(f,v,1)|0;if(!z){A=Nv(g,s,1)|0;if(!A){B=Gv(h,f,g)|0;if(!B){C=Yv(j,u,h)|0;if(!C){D=Yv(k,f,g)|0;if(!D){E=Ov(m,n,h,k)|0;if(!E){F=Vv(i,e,m)|0;if(F|0){G=F;break}F=Vv(o,w,f)|0;if(F|0){G=F;break}F=Vv(p,w,g)|0;if(F|0){G=F;break}F=_v(q,s,v)|0;if(F|0){G=F;break}do if(!(Tv(d,r)|0)){if(Tv(o,a+68|0)|0)break;if(Tv(p,a+80|0)|0)break;if(Tv(q,a+92|0)|0)break;if(Uv(n,0)|0)break;if(Uv(i,1)|0)break;if(!(Uv(j,1)|0)){G=0;break a}}while(0);G=-16896}else G=E}else G=D}else G=C}else G=B}else G=A}else G=z}else G=y}else G=x;while(0);sv(d);sv(e);sv(f);sv(g);sv(h);sv(i);sv(j);sv(k);sv(m);sv(n);sv(o);sv(p);sv(q);b:do if((G|0)<0){switch(G|0){case -16896:{t=-16896;break}default:break b}l=b;return t|0}else{switch(G|0){case 0:break;default:break b}t=0;l=b;return t|0}while(0);t=G+-16896|0;l=b;return t|0}function bB(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a+8|0;e=c[a+16>>2]|0;if(!e)return -16896;f=a+20|0;g=c[a+28>>2]|0;if(!g)return -16896;if(!(c[e>>2]&1))return -16896;if(!(c[g>>2]&1))return -16896;if((Dv(d)|0)>>>0<128)return -16896;if((Dv(d)|0)>>>0>8192)return -16896;if((Dv(f)|0)>>>0<2)return -16896;if(((Tv(f,d)|0)>>31&16896|0)!=16896)return -16896;if(aB(b)|0)return -16896;if(!(Tv(d,b+8|0)|0)){d=(Tv(f,b+20|0)|0)==0;return (d?0:-16896)|0}else return -16896;return 0}function cB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=l;l=l+16|0;f=e;rv(f);g=a+4|0;h=Rv(f,b,c[g>>2]|0)|0;if(!h){b=a+8|0;if((Tv(f,b)|0)<=-1){i=c[g>>2]|0;g=Wv(f,f,a+20|0,b,a+104|0)|0;if(!g)j=Sv(f,d,i)|0;else j=g}else j=-4}else j=h;sv(f);l=e;return ((j|0)==0?0:j+-17024|0)|0}function dB(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;g=l;l=l+48|0;h=g+24|0;i=g+12|0;j=g;k=a+44|0;if(!(c[a+52>>2]|0)){m=-16512;l=g;return m|0}n=a+56|0;if(!(c[a+64>>2]|0)){m=-16512;l=g;return m|0}if(!(c[a+40>>2]|0)){m=-16512;l=g;return m|0}rv(h);rv(i);rv(j);o=a+4|0;p=Rv(h,e,c[o>>2]|0)|0;a:do if(!p){e=a+8|0;if((Tv(h,e)|0)<=-1){q=(b|0)!=0;if(q){r=a+152|0;s=a+140|0;if(!(c[a+160>>2]|0)){t=0;while(1){if((t|0)>10){u=-17536;break a}v=Zv(r,(c[o>>2]|0)+-1|0,b,d)|0;if(v|0){u=v;break a}v=Yv(s,r,e)|0;if(v|0){u=v;break a}if(!(Uv(s,1)|0))break;else t=t+1|0}t=_v(s,r,e)|0;if(t|0){u=t;break}w=Wv(s,s,a+20|0,e,a+104|0)|0}else{t=Gv(s,s,s)|0;if(t|0){u=t;break}t=Vv(s,s,e)|0;if(t|0){u=t;break}t=Gv(r,r,r)|0;if(t|0){u=t;break}w=Vv(r,r,e)|0}if(w|0){u=w;break}t=Gv(h,h,s)|0;if(t|0){u=t;break}t=Vv(h,h,e)|0;if(t|0){u=t;break}}t=Wv(i,h,a+68|0,k,a+116|0)|0;if(!t){v=Wv(j,h,a+80|0,n,a+128|0)|0;if(!v){x=Iv(h,i,j)|0;if(!x){y=Gv(i,h,a+92|0)|0;if(!y){z=Vv(h,i,k)|0;if(!z){A=Gv(i,h,n)|0;if(!A){B=Hv(h,j,i)|0;if(!B){if(q){C=Gv(h,h,a+152|0)|0;if(C|0){u=C;break}C=Vv(h,h,e)|0;if(C|0){u=C;break}}u=Sv(h,f,c[o>>2]|0)|0}else u=B}else u=A}else u=z}else u=y}else u=x}else u=v}else u=t}else u=-4}else u=p;while(0);sv(h);sv(i);sv(j);m=(u|0)==0?0:u+-17152|0;l=g;return m|0}function eB(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;if((f|0)==1?c[b+164>>2]|0:0){j=-16512;return j|0}if((d|0)==0|(h|0)==0|(i|0)==0){j=-16512;return j|0}k=c[b+4>>2]|0;if(g>>>0>4294967284|k>>>0<(g+11|0)>>>0){j=-16512;return j|0}l=-3-g+k|0;m=i+1|0;a[i>>0]=0;n=(f|0)==0;f=i+2|0;if(n){a[m>>0]=2;o=f;p=l;while(1){if(!p)break;else q=100;p=p+-1|0;while(1){r=fd[d&127](e,o,1)|0;if(a[o>>0]|0){s=q;break}t=q+-1|0;if((t|0)!=0&(r|0)==0)q=t;else{s=t;break}}if((r|0)!=0|(s|0)==0){u=17;break}else o=o+1|0}if((u|0)==17){j=r+-17536|0;return j|0}a[o>>0]=0;CT(o+1|0,h|0,g|0)|0;if(n){j=cB(b,i,i)|0;return j|0}}else{a[m>>0]=1;if(!l)v=f;else{ET(f|0,-1,l|0)|0;v=i+(k+-1-g)|0}a[v>>0]=0;CT(v+1|0,h|0,g|0)|0}j=dB(b,d,e,i,i)|0;return j|0}function fB(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;if(c[a+164>>2]|0){i=-16640;return i|0}i=eB(a,b,d,e,f,g,h)|0;return i|0}function gB(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;m=l;l=l+1024|0;n=m;o=(g|0)==1;if(o?c[b+164>>2]|0:0){p=-16512;l=m;return p|0}q=c[b+4>>2]|0;if((q+-16|0)>>>0>1008){p=-16512;l=m;return p|0}if(!g)r=cB(b,i,n)|0;else r=dB(b,e,f,i,n)|0;if(r|0){p=r;l=m;return p|0}r=d[n>>0]|0;i=n+2|0;f=d[n+1>>0]|0;if(o){o=f^2;e=q+-3|0;if(!e){s=0;t=o}else{b=0;g=0;u=0;while(1){v=a[i+b>>0]|0;w=u&255;u=((v|0-v<<24>>24)&255)>>>7^1|w;v=((0-u&128|w)>>>7^1)+g|0;b=b+1|0;if((b|0)==(e|0)){s=v;t=o;break}else g=v}}}else{g=f^1;f=q+-3|0;if(!f){s=0;t=g}else{o=0;e=0;b=0;while(1){b=b&255|(a[i+o>>0]|0)!=-1;u=e+((b|0)==0&1)|0;o=o+1|0;if((o|0)==(f|0)){s=u;t=g;break}else e=u}}}e=i+s|0;i=e+1|0;if(((t|r|s>>>0<8|d[e>>0])&255)<<24>>24){p=-16640;l=m;return p|0}e=n-i+q|0;if(e>>>0>k>>>0){p=-17408;l=m;return p|0}c[h>>2]=e;CT(j|0,i|0,e|0)|0;p=0;l=m;return p|0}function hB(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;if(c[a+164>>2]|0){j=-16640;return j|0}j=gB(a,b,d,e,f,g,h,i)|0;return j|0}function iB(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;k=l;l=l+16|0;m=k+4|0;n=k;o=k+8|0;c[m>>2]=0;c[n>>2]=0;if((f|0)==1?c[b+164>>2]|0:0){p=-16512;l=k;return p|0}q=b+4|0;r=c[q>>2]|0;s=(g|0)==0;do if(!s){t=Cy(g)|0;if(!t){p=-16512;l=k;return p|0}if(!(Fz(g,n,m)|0)){u=r+-13-(c[m>>2]|0)|0;v=(Py(t)|0)&255;w=u;break}else{p=-16512;l=k;return p|0}}else{v=h;w=r+-3|0}while(0);h=w-v|0;if(h>>>0<8|h>>>0>r>>>0){p=-16512;l=k;return p|0}a[j>>0]=0;r=j+2|0;a[j+1>>0]=1;ET(r|0,-1,h|0)|0;w=r+h|0;h=w+1|0;a[w>>0]=0;if(s)CT(h|0,i|0,v|0)|0;else{s=h+1|0;a[h>>0]=48;h=c[m>>2]|0;m=s+1|0;a[s>>0]=v+8+h;s=m+1|0;a[m>>0]=48;m=s+1|0;a[s>>0]=h+4;s=m+1|0;a[m>>0]=6;m=s+1|0;a[s>>0]=h;CT(m|0,c[n>>2]|0,h|0)|0;n=m+h|0;h=n+1|0;a[n>>0]=5;n=h+1|0;a[h>>0]=0;h=n+1|0;a[n>>0]=4;a[h>>0]=v;CT(h+1|0,i|0,v|0)|0}if(!f){p=cB(b,j,j)|0;l=k;return p|0}f=c[q>>2]|0;v=DE(1,f)|0;if(!v){p=-16;l=k;return p|0}i=DE(1,f)|0;if(!i){CE(v);p=-16;l=k;return p|0}f=dB(b,d,e,j,v)|0;if(!f){e=cB(b,v,i)|0;if(!e){b=c[q>>2]|0;if(!b)x=0;else{q=0;d=0;while(1){h=a[j+d>>0]^a[i+d>>0]|q;d=d+1|0;if(d>>>0>=b>>>0){x=h;break}else q=h}}a[o>>0]=x;if(!(a[o>>0]|0)){CT(j|0,v|0,b|0)|0;y=0}else y=-17152}else y=e}else y=f;CE(v);CE(i);p=y;l=k;return p|0}function jB(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;if(c[a+164>>2]|0){j=-16640;return j|0}j=iB(a,b,d,e,f,g,h,i)|0;return j|0}function kB(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;k=l;l=l+1056|0;m=k+20|0;n=k+16|0;o=k+12|0;p=k;q=k+24|0;if((f|0)==1?(c[b+164>>2]|0)!=0:0)r=-16512;else s=3;a:do if((s|0)==3){t=c[b+4>>2]|0;if((t+-16|0)>>>0<=1008){if(!f)u=cB(b,j,q)|0;else u=dB(b,d,e,j,q)|0;if(!u){v=q+1|0;c[n>>2]=v;if((a[q>>0]|0)==0?(w=q+2|0,c[n>>2]=w,(a[v>>0]|0)==1):0){v=a[w>>0]|0;if(!(v<<24>>24))x=w;else{y=q+t+-1|0;z=w;w=v;while(1){if(!(z>>>0<y>>>0&w<<24>>24==-1)){r=-16640;break a}v=z+1|0;c[n>>2]=v;w=a[v>>0]|0;if(!(w<<24>>24)){x=v;break}else z=v}}z=x+1|0;c[n>>2]=z;w=q-z+t|0;if((g|0)==0&(w|0)==(h|0)){y=(aF(z,i,h)|0)==0;r=y?0:-17280;break}y=Cy(g)|0;if(y){v=(Py(y)|0)&255;y=z+w|0;if(((((((((_u(n,y,m,48)|0)==0?((c[m>>2]|0)+2|0)==(w|0):0)?(_u(n,y,m,48)|0)==0:0)?(v+6+(c[m>>2]|0)|0)==(w|0):0)?(w=p+4|0,(_u(n,y,w,6)|0)==0):0)?(z=c[n>>2]|0,c[p+8>>2]=z,c[n>>2]=z+(c[w>>2]|0),w=(Ez(p,o)|0)==0,w&(c[o>>2]|0)==(g|0)):0)?(_u(n,y,m,5)|0)==0:0)?(w=(_u(n,y,m,4)|0)==0,w&(c[m>>2]|0)==(v|0)):0)?(w=c[n>>2]|0,z=w+v|0,(aF(w,i,v)|0)==0):0){c[n>>2]=z;r=(z|0)==(y|0)?0:-17280}else r=-17280}else r=-16512}else r=-16640}else r=u}else r=-16512}while(0);l=k;return r|0}function lB(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;if(c[a+164>>2]|0){j=-16640;return j|0}j=kB(a,b,d,e,f,g,h,i)|0;return j|0}function mB(a){a=a|0;var b=0;b=a;a=b+92|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function nB(b){b=b|0;if(!b)return;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;a[b+4>>0]=0;a[b+5>>0]=0;a[b+6>>0]=0;a[b+7>>0]=0;a[b+8>>0]=0;a[b+9>>0]=0;a[b+10>>0]=0;a[b+11>>0]=0;a[b+12>>0]=0;a[b+13>>0]=0;a[b+14>>0]=0;a[b+15>>0]=0;a[b+16>>0]=0;a[b+17>>0]=0;a[b+18>>0]=0;a[b+19>>0]=0;a[b+20>>0]=0;a[b+21>>0]=0;a[b+22>>0]=0;a[b+23>>0]=0;a[b+24>>0]=0;a[b+25>>0]=0;a[b+26>>0]=0;a[b+27>>0]=0;a[b+28>>0]=0;a[b+29>>0]=0;a[b+30>>0]=0;a[b+31>>0]=0;a[b+32>>0]=0;a[b+33>>0]=0;a[b+34>>0]=0;a[b+35>>0]=0;a[b+36>>0]=0;a[b+37>>0]=0;a[b+38>>0]=0;a[b+39>>0]=0;a[b+40>>0]=0;a[b+41>>0]=0;a[b+42>>0]=0;a[b+43>>0]=0;a[b+44>>0]=0;a[b+45>>0]=0;a[b+46>>0]=0;a[b+47>>0]=0;a[b+48>>0]=0;a[b+49>>0]=0;a[b+50>>0]=0;a[b+51>>0]=0;a[b+52>>0]=0;a[b+53>>0]=0;a[b+54>>0]=0;a[b+55>>0]=0;a[b+56>>0]=0;a[b+57>>0]=0;a[b+58>>0]=0;a[b+59>>0]=0;a[b+60>>0]=0;a[b+61>>0]=0;a[b+62>>0]=0;a[b+63>>0]=0;a[b+64>>0]=0;a[b+65>>0]=0;a[b+66>>0]=0;a[b+67>>0]=0;a[b+68>>0]=0;a[b+69>>0]=0;a[b+70>>0]=0;a[b+71>>0]=0;a[b+72>>0]=0;a[b+73>>0]=0;a[b+74>>0]=0;a[b+75>>0]=0;a[b+76>>0]=0;a[b+77>>0]=0;a[b+78>>0]=0;a[b+79>>0]=0;a[b+80>>0]=0;a[b+81>>0]=0;a[b+82>>0]=0;a[b+83>>0]=0;a[b+84>>0]=0;a[b+85>>0]=0;a[b+86>>0]=0;a[b+87>>0]=0;a[b+88>>0]=0;a[b+89>>0]=0;a[b+90>>0]=0;a[b+91>>0]=0;return}function oB(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;b=d+92|0;do{c[d>>2]=c[a>>2];d=d+4|0;a=a+4|0}while((d|0)<(b|0));return}function pB(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=1732584193;c[a+12>>2]=-271733879;c[a+16>>2]=-1732584194;c[a+20>>2]=271733878;c[a+24>>2]=-1009589776;return}\nfunction Ad(a){a=a|0;var b=0;b=l;l=l+a|0;l=l+15&-16;return b|0}function Bd(){return l|0}function Cd(a){a=a|0;l=a}function Dd(a,b){a=a|0;b=b|0;l=a;m=b}function Ed(a,b){a=a|0;b=b|0;if(!o){o=a;p=b}}function Fd(a){a=a|0;z=a}function Gd(){return z|0}function Hd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;f=l;l=l+160|0;g=f+136|0;h=f;i=h+56|0;j=h+4|0;c[h>>2]=20;c[i>>2]=40;o=0;ma(69,h+56|0,j|0);k=o;o=0;if(k&1){k=Pa()|0;m=z;n=k;rH(i);$a(n|0)}c[h+128>>2]=0;c[h+132>>2]=-1;c[h>>2]=7388;c[i>>2]=7408;o=0;la(216,j|0);k=o;o=0;do if(k&1){p=Pa()|0;q=z;r=p}else{c[j>>2]=7440;p=h+36|0;c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[p+12>>2]=0;c[h+52>>2]=16;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;o=0;ma(70,j|0,g|0);s=o;o=0;if(s&1){s=Pa()|0;t=z;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);if((a[p+11>>0]|0)<0)mR(c[p>>2]|0);vH(j);q=t;r=s;break}if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);s=dd[c[(c[d>>2]|0)+8>>2]&255](d)|0;t=$F(s)|0;o=0;$(53,h|0,s|0,t|0)|0;t=o;o=0;a:do if(!(t&1)){s=sS(d,7040,5728,-2)|0;b:do if(s|0){o=0;la(217,s|0);o=0;u=Ra(7040,0)|0;v=z;w=(v|0)==(Xb(7040)|0);v=Ka(u|0)|0;if(!w){o=0;ka(3);w=o;o=0;if(w&1){x=18;break a}else break}o=0;w=$(53,h|0,69564,1)|0;u=o;o=0;if(u&1){u=Pa()|0;y=u;A=z}else{o=0;na(18,g|0,v|0,e|0);v=o;o=0;do if(v&1){u=Pa()|0;B=u;C=z}else{u=g+11|0;D=a[u>>0]|0;E=D<<24>>24<0;o=0;$(53,w|0,(E?c[g>>2]|0:g)|0,(E?c[g+4>>2]|0:D&255)|0)|0;D=o;o=0;if(D&1){D=Pa()|0;E=z;if((a[u>>0]|0)>=0){B=D;C=E;break}mR(c[g>>2]|0);B=D;C=E;break}if((a[u>>0]|0)<0)mR(c[g>>2]|0);o=0;ka(3);u=o;o=0;if(!(u&1))break b;u=Pa()|0;F=u;G=z;break a}while(0);y=B;A=C}o=0;ka(3);w=o;o=0;if(!(w&1)){F=y;G=A;break a}w=Qa(0)|0;Id(w)}while(0);o=0;ma(71,b|0,j|0);s=o;o=0;if(!(s&1)){c[h>>2]=7388;c[i>>2]=7408;c[j>>2]=7440;if((a[p+11>>0]|0)>=0){vH(j);ZH(h,7420);rH(i);l=f;return}mR(c[p>>2]|0);vH(j);ZH(h,7420);rH(i);l=f;return}else x=18}else x=18;while(0);if((x|0)==18){t=Pa()|0;F=t;G=z}c[h>>2]=7388;c[i>>2]=7408;c[j>>2]=7440;if((a[p+11>>0]|0)>=0){vH(j);ZH(h,7420);rH(i);$a(F|0)}mR(c[p>>2]|0);vH(j);ZH(h,7420);rH(i);$a(F|0)}while(0);ZH(h,7420);m=q;n=r;rH(i);$a(n|0)}function Id(a){a=a|0;Ka(a|0)|0;AS()}function Jd(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=7388;d=b+56|0;c[d>>2]=7408;e=b+4|0;c[e>>2]=7440;f=b+36|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);vH(e);ZH(b,7420);rH(d);return}function Kd(b){b=b|0;var d=0,e=0;d=l;l=l+16|0;e=d;Hd(e,b,0);b=e+11|0;o=0;la(218,((a[b>>0]|0)<0?c[e>>2]|0:e)|0);o=0;d=Pa()|0;if((a[b>>0]|0)>=0)$a(d|0);mR(c[e>>2]|0);$a(d|0)}function Ld(a){a=a|0;ob(88,96,112,0,61947,84,61950,0,61950,0,58504,61952,219);pb(88,58518,1,7496,61947,85,16);pb(88,58527,1,7500,61947,86,220);pb(88,58536,1,7500,61947,86,221);pb(88,58545,1,7496,61947,85,17);pb(88,58558,1,7496,61947,85,18);pb(88,58571,1,7496,61947,85,19);ob(160,168,184,0,61947,87,61950,0,61950,0,58584,61952,222);pb(160,58591,1,7504,61947,88,20);pb(160,58612,1,7504,61947,88,21);pb(160,58633,1,7504,61947,88,22);Md(58661);a=kR(4)|0;c[a>>2]=72;rb(232,58677,2,7576,62385,21,a|0,0);a=kR(4)|0;c[a>>2]=73;rb(232,58682,3,7584,62374,19,a|0,0);ob(296,304,320,0,61947,89,61950,0,61950,0,58689,61952,223);qb(296,3,7596,62408,54,22);a=kR(8)|0;c[a>>2]=74;c[a+4>>2]=0;rb(296,58703,2,7608,62385,23,a|0,0);a=kR(8)|0;c[a>>2]=75;c[a+4>>2]=0;rb(296,58713,2,7608,62385,23,a|0,0);pb(296,58724,3,7616,62408,55,20);pb(296,58733,2,7628,62385,24,76);pb(296,58753,4,7636,62413,18,10);pb(296,58766,4,7652,62413,19,11);pb(296,58790,3,7668,62408,56,21);pb(296,58825,4,7680,62413,20,57);pb(296,58840,3,7696,62408,58,25);pb(296,58864,2,7708,62385,26,90);pb(296,58886,4,7716,62413,21,12);pb(296,58910,3,7732,62408,59,22);pb(296,58927,3,7732,62408,59,23);pb(296,58945,3,7732,62408,59,24);pb(296,58963,2,7744,62385,27,77);pb(296,58978,2,7744,62385,27,78);pb(296,58993,3,7732,62408,59,25);pb(296,59009,3,7732,62408,59,26);tb(336,59025,4,1);ub(336,59043,0);ub(336,59051,1);ub(336,59059,2);ub(336,59068,3);ub(336,59077,4);ub(336,59086,5);ub(336,59095,6);ub(336,59104,7);ub(336,59117,8);ub(336,59130,9);ub(336,59143,10);ub(336,59156,11);ub(336,59169,12);ub(336,59180,13);ub(336,59191,14);ub(336,59202,15);ub(336,59215,16);ub(336,59228,17);ub(336,59241,18);ub(336,59255,19);ub(336,59270,20);ob(4256,344,360,0,61947,91,61950,0,61950,0,59286,61952,224);a=kR(8)|0;c[a>>2]=27;c[a+4>>2]=0;rb(4256,59303,4,7752,62379,13,a|0,0);a=kR(8)|0;c[a>>2]=79;c[a+4>>2]=0;rb(4256,59319,3,7768,62374,28,a|0,0);a=kR(8)|0;c[a>>2]=28;c[a+4>>2]=0;rb(4256,59338,3,7780,62408,60,a|0,0);a=kR(8)|0;c[a>>2]=80;c[a+4>>2]=0;rb(4256,59357,3,7768,62374,28,a|0,0);a=kR(8)|0;c[a>>2]=81;c[a+4>>2]=0;rb(4256,59378,3,7768,62374,28,a|0,0);a=kR(8)|0;c[a>>2]=225;c[a+4>>2]=0;rb(4256,59402,2,7792,62628,82,a|0,0);a=kR(8)|0;c[a>>2]=83;c[a+4>>2]=0;rb(4256,59422,2,7800,62385,29,a|0,0);a=kR(8)|0;c[a>>2]=84;c[a+4>>2]=0;rb(4256,59437,3,7768,62374,28,a|0,0);a=kR(4)|0;c[a>>2]=92;rb(4256,59452,2,7808,62385,30,a|0,0);pb(4256,59465,2,7816,62385,31,93);pb(4256,59487,4,7716,62413,21,14);ob(392,408,424,4256,61947,94,61947,95,61947,96,59501,61952,226);qb(392,1,7824,61947,97,23);a=kR(8)|0;c[a>>2]=15;c[a+4>>2]=0;rb(392,74415,4,7852,62413,22,a|0,0);a=kR(8)|0;c[a>>2]=12;c[a+4>>2]=0;rb(392,59514,6,7868,62766,48,a|0,0);a=kR(8)|0;c[a>>2]=16;c[a+4>>2]=0;rb(392,59529,4,7892,62413,23,a|0,0);ob(4512,440,456,0,61947,98,61950,0,61950,0,59549,61952,227);qb(4512,1,7908,61947,99,24);qb(4512,2,7912,62385,32,100);a=kR(8)|0;c[a>>2]=101;c[a+4>>2]=0;rb(4512,59566,2,7920,62385,33,a|0,0);a=kR(8)|0;c[a>>2]=7;c[a+4>>2]=0;rb(4512,59583,5,7928,62898,23,a|0,0);a=kR(8)|0;c[a>>2]=24;c[a+4>>2]=0;rb(4512,59592,5,7948,62898,24,a|0,0);ob(480,496,512,4512,61947,102,61947,103,61947,104,59603,61952,228);qb(480,1,7968,61947,105,25);qb(480,2,7988,62385,34,106);a=kR(4)|0;c[a>>2]=17;rb(480,59616,4,7996,62413,25,a|0,0);a=kR(4)|0;c[a>>2]=8;rb(480,59616,5,8012,62898,25,a|0,0);a=kR(4)|0;c[a>>2]=26;rb(480,59621,5,8032,62898,26,a|0,0);ob(4440,376,528,0,61947,107,61950,0,61950,0,59628,61952,229);qb(4440,1,8052,61947,108,26);a=kR(8)|0;c[a>>2]=109;c[a+4>>2]=0;rb(4440,59647,2,8056,62385,35,a|0,0);a=kR(8)|0;c[a>>2]=29;c[a+4>>2]=0;rb(4440,59655,4,8064,62379,18,a|0,0);a=kR(8)|0;c[a>>2]=36;c[a+4>>2]=0;rb(4440,59666,3,8080,62408,61,a|0,0);a=kR(8)|0;c[a>>2]=85;c[a+4>>2]=0;rb(4440,59677,3,8092,62374,30,a|0,0);a=kR(8)|0;c[a>>2]=31;c[a+4>>2]=0;rb(4440,59691,4,8104,62379,19,a|0,0);a=kR(8)|0;c[a>>2]=32;c[a+4>>2]=0;rb(4440,59701,3,8120,62408,62,a|0,0);a=kR(8)|0;c[a>>2]=86;c[a+4>>2]=0;rb(4440,59711,3,8092,62374,30,a|0,0);a=kR(8)|0;c[a>>2]=33;c[a+4>>2]=0;rb(4440,59724,4,8104,62379,19,a|0,0);a=kR(8)|0;c[a>>2]=34;c[a+4>>2]=0;rb(4440,59732,3,8120,62408,62,a|0,0);a=kR(8)|0;c[a>>2]=87;c[a+4>>2]=0;rb(4440,59740,3,8092,62374,30,a|0,0);a=kR(8)|0;c[a>>2]=230;c[a+4>>2]=0;rb(4440,59751,2,8132,62628,88,a|0,0);ob(544,552,568,0,61947,110,61950,0,61950,0,59757,61952,231);pb(544,59778,2,8140,62385,37,89);pb(544,59790,2,8148,62385,38,90);pb(544,59804,2,8140,62385,37,91);pb(544,59818,2,8140,62385,37,92);pb(544,59829,3,8156,62408,63,35);pb(544,59840,2,8168,62628,93,232);tb(584,59848,4,0);ub(584,59876,113);ub(584,59880,120);ub(584,59890,1200);ob(4552,592,608,0,61947,111,61950,0,61950,0,59899,61952,233);qb(4552,1,8176,61947,112,27);qb(4552,2,8180,62385,39,113);a=kR(8)|0;c[a>>2]=234;c[a+4>>2]=0;rb(4552,59916,2,8188,62628,94,a|0,0);a=kR(8)|0;c[a>>2]=36;c[a+4>>2]=0;rb(4552,74415,4,8196,62379,20,a|0,0);a=kR(8)|0;c[a>>2]=9;c[a+4>>2]=0;rb(4552,59922,6,8212,63281,13,a|0,0);a=kR(8)|0;c[a>>2]=114;c[a+4>>2]=0;rb(4552,59937,2,8236,62385,40,a|0,0);a=kR(8)|0;c[a>>2]=37;c[a+4>>2]=0;rb(4552,59953,3,8244,62408,64,a|0,0);a=kR(8)|0;c[a>>2]=95;c[a+4>>2]=0;rb(4552,59964,3,8256,62374,38,a|0,0);a=kR(8)|0;c[a>>2]=115;c[a+4>>2]=0;rb(4552,59975,2,8268,62385,41,a|0,0);a=kR(8)|0;c[a>>2]=21;c[a+4>>2]=0;rb(4552,74475,4,8276,62413,27,a|0,0);a=kR(8)|0;c[a>>2]=10;c[a+4>>2]=0;rb(4552,59997,5,8292,62898,27,a|0,0);ob(624,632,648,0,61947,116,61950,0,61950,0,60014,61952,235);a=kR(8)|0;c[a>>2]=0;c[a+4>>2]=1;rb(624,60029,2,8312,62385,42,a|0,1);a=kR(8)|0;c[a>>2]=4;c[a+4>>2]=1;rb(624,60036,3,8320,62374,39,a|0,1);ob(704,720,736,624,61947,117,61947,118,61947,119,60042,61952,236);a=kR(4)|0;c[a>>2]=237;rb(704,63391,2,8332,62628,96,a|0,0);pb(624,63411,2,8340,62385,43,120);pb(624,63421,3,8408,62408,65,40);ob(752,760,776,0,61947,121,61950,0,61950,0,60064,61952,238);a=kR(8)|0;c[a>>2]=0;c[a+4>>2]=1;rb(752,60081,2,8420,62385,44,a|0,1);a=kR(8)|0;c[a>>2]=4;c[a+4>>2]=1;rb(752,60089,2,8428,62385,45,a|0,1);ob(824,840,856,752,61947,122,61947,123,61947,124,60094,61952,239);a=kR(4)|0;c[a>>2]=240;rb(824,63391,2,8436,62628,97,a|0,0);pb(752,63411,2,8444,62385,46,125);pb(752,63421,3,8408,62408,65,41);ob(872,888,904,4256,61947,126,61947,127,61947,128,60118,61952,241);qb(872,1,8504,61947,129,28);a=kR(8)|0;c[a>>2]=22;c[a+4>>2]=0;rb(872,74415,5,8532,64066,11,a|0,0);a=kR(8)|0;c[a>>2]=14;c[a+4>>2]=0;rb(872,59514,7,8552,64073,1,a|0,0);a=kR(8)|0;c[a>>2]=23;c[a+4>>2]=0;rb(872,59529,5,8580,64066,12,a|0,0);ob(920,936,952,0,61947,130,61950,0,61950,0,60137,61952,242);qb(920,1,8600,61947,131,29);a=kR(8)|0;c[a>>2]=13;c[a+4>>2]=0;rb(920,59616,5,8620,62898,28,a|0,0);a=kR(8)|0;c[a>>2]=28;c[a+4>>2]=0;rb(920,59621,5,8640,62898,29,a|0,0);ob(968,984,1e3,4256,61947,132,61947,133,61947,134,60156,61952,243);qb(968,1,8660,61947,135,30);a=kR(8)|0;c[a>>2]=14;c[a+4>>2]=0;rb(968,74415,6,8688,63281,15,a|0,0);a=kR(8)|0;c[a>>2]=16;c[a+4>>2]=0;rb(968,59514,7,8712,64073,2,a|0,0);a=kR(8)|0;c[a>>2]=24;c[a+4>>2]=0;rb(968,59529,5,8740,64066,15,a|0,0);return}function Md(a){a=a|0;ob(232,256,272,0,61947,136,61950,0,61950,0,a|0,61952,244);qb(232,1,7508,61947,137,31);a=kR(8)|0;c[a>>2]=98;c[a+4>>2]=0;rb(232,62152,3,7512,62374,42,a|0,0);a=kR(8)|0;c[a>>2]=43;c[a+4>>2]=0;rb(232,62162,4,7524,62379,25,a|0,0);a=kR(8)|0;c[a>>2]=138;c[a+4>>2]=0;rb(232,62169,2,7540,62385,47,a|0,0);a=kR(4)|0;c[a>>2]=44;rb(232,62174,3,7548,62408,66,a|0,0);a=kR(4)|0;c[a>>2]=67;rb(232,62178,4,7560,62413,29,a|0,0);return}function Nd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=l;l=l+16|0;e=d;f=c[b>>2]|0;c[e>>2]=(c[b+4>>2]|0)-f;c[e+4>>2]=f;c[a>>2]=Ob(80,e|0)|0;l=d;return}function Od(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=l;l=l+16|0;e=d+4|0;f=d;g=c[b>>2]|0;c[f>>2]=g;Jb(g|0);o=0;ma(99,e|0,f|0);g=o;o=0;if(g&1){g=Pa()|0;o=0;la(245,c[f>>2]|0);b=o;o=0;if(b&1){b=Qa(0)|0;Id(b)}else $a(g|0)}g=c[a>>2]|0;b=a+4|0;if(!g)h=a+8|0;else{if((c[b>>2]|0)!=(g|0))c[b>>2]=g;mR(g);g=a+8|0;c[g>>2]=0;c[b>>2]=0;c[a>>2]=0;h=g}c[a>>2]=c[e>>2];a=e+4|0;c[b>>2]=c[a>>2];b=e+8|0;c[h>>2]=c[b>>2];c[b>>2]=0;c[a>>2]=0;c[e>>2]=0;o=0;la(245,c[f>>2]|0);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}else{l=d;return}}function Pd(a){a=a|0;return xm(a)|0}function Qd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=l;l=l+16|0;g=f;c[g>>2]=0;h=g+4|0;c[h>>2]=0;c[g+8>>2]=0;o=0;pa(16,a|0,b|0,d|0,e|0,g|0);e=o;o=0;if(e&1){e=Pa()|0;d=c[g>>2]|0;if(!d)$a(e|0);if((c[h>>2]|0)!=(d|0))c[h>>2]=d;mR(d);$a(e|0)}else{e=c[g>>2]|0;if(!e){l=f;return}if((c[h>>2]|0)!=(e|0))c[h>>2]=e;mR(e);l=f;return}}function Rd(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;xq(a,b,c,d,e);return}function Sd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return yq(a,b,c,d)|0}function Td(a){a=a|0;ob(4456,1016,1032,0,61947,139,61950,0,61950,0,60174,61952,246);qb(4456,2,8760,62385,48,140);a=kR(8)|0;c[a>>2]=100;c[a+4>>2]=0;rb(4456,60185,2,8768,62385,49,a|0,0);a=kR(8)|0;c[a>>2]=45;c[a+4>>2]=0;rb(4456,60190,3,8776,62408,68,a|0,0);a=kR(8)|0;c[a>>2]=247;c[a+4>>2]=0;rb(4456,60195,2,8788,62628,101,a|0,0);a=kR(8)|0;c[a>>2]=102;c[a+4>>2]=0;rb(4456,60201,3,8796,62374,46,a|0,0);a=kR(8)|0;c[a>>2]=103;c[a+4>>2]=0;rb(4456,60208,2,8808,62385,50,a|0,0);a=kR(8)|0;c[a>>2]=26;c[a+4>>2]=0;rb(4456,60215,4,8816,62413,30,a|0,0);a=kR(8)|0;c[a>>2]=104;c[a+4>>2]=0;rb(4456,60220,3,8796,62374,46,a|0,0);a=kR(8)|0;c[a>>2]=248;c[a+4>>2]=0;rb(4456,60230,2,8788,62628,101,a|0,0);a=kR(8)|0;c[a>>2]=105;c[a+4>>2]=0;rb(4456,60240,3,8796,62374,46,a|0,0);a=kR(8)|0;c[a>>2]=106;c[a+4>>2]=0;rb(4456,60251,2,8808,62385,50,a|0,0);a=kR(8)|0;c[a>>2]=141;c[a+4>>2]=0;rb(4456,60262,2,8832,62385,51,a|0,0);a=kR(8)|0;c[a>>2]=142;c[a+4>>2]=0;rb(4456,60270,2,8840,62385,52,a|0,0);tb(472,60280,4,1);ub(472,83809,0);ub(472,83033,1);ub(472,83038,2);ub(472,83045,3);ub(472,83052,4);ub(472,83059,5);ob(1048,1056,1072,0,61947,143,61950,0,61950,0,60300,61952,249);pb(1048,60313,2,8148,62385,38,107);pb(1048,60320,2,8140,62385,37,108);ob(4488,1088,1104,0,61947,144,61950,0,61950,0,60327,61952,250);qb(4488,2,8848,62385,53,145);qb(4488,3,8856,62408,69,54);a=kR(8)|0;c[a>>2]=109;c[a+4>>2]=0;rb(4488,60339,2,8868,62385,55,a|0,0);a=kR(8)|0;c[a>>2]=146;c[a+4>>2]=0;rb(4488,60347,2,8876,62385,56,a|0,0);a=kR(8)|0;c[a>>2]=110;c[a+4>>2]=0;rb(4488,60365,3,8884,62374,47,a|0,0);a=kR(8)|0;c[a>>2]=147;c[a+4>>2]=0;rb(4488,60378,2,8896,62385,57,a|0,0);a=kR(8)|0;c[a>>2]=111;c[a+4>>2]=0;rb(4488,60391,3,8904,62374,48,a|0,0);a=kR(8)|0;c[a>>2]=148;c[a+4>>2]=0;rb(4488,59566,2,8916,62385,58,a|0,0);a=kR(8)|0;c[a>>2]=251;c[a+4>>2]=0;rb(4488,60408,2,8924,62628,112,a|0,0);a=kR(8)|0;c[a>>2]=252;c[a+4>>2]=0;rb(4488,60435,2,8924,62628,112,a|0,0);a=kR(8)|0;c[a>>2]=27;c[a+4>>2]=0;rb(4488,60463,4,8932,62413,31,a|0,0);tb(1120,60470,4,1);ub(1120,60491,0);ob(4504,1128,1144,0,61947,149,61950,0,61950,0,60498,61952,253);qb(4504,2,8948,62385,59,150);a=kR(8)|0;c[a>>2]=49;c[a+4>>2]=0;rb(4504,60511,3,8956,62408,70,a|0,0);a=kR(8)|0;c[a>>2]=151;c[a+4>>2]=0;rb(4504,60526,2,8968,62385,60,a|0,0);a=kR(8)|0;c[a>>2]=71;c[a+4>>2]=0;rb(4504,60542,4,8976,62413,32,a|0,0);ob(4472,1160,1176,0,61947,152,61950,0,61950,0,60565,61952,254);qb(4472,3,8992,62408,72,61);qb(4472,4,9004,62413,33,73);a=kR(8)|0;c[a>>2]=28;c[a+4>>2]=0;rb(4472,74415,4,9020,62413,34,a|0,0);a=kR(8)|0;c[a>>2]=29;c[a+4>>2]=0;rb(4472,74475,4,9020,62413,34,a|0,0);tb(1192,60575,4,1);ub(1192,60594,0);ub(1192,60600,1);ob(1200,1208,1224,0,61947,153,61950,0,61950,0,60607,61952,255);qb(1200,2,9036,62385,62,154);a=kR(8)|0;c[a>>2]=17;c[a+4>>2]=0;rb(1200,60463,6,9044,62766,49,a|0,0);ob(4520,1240,1256,0,61947,155,61950,0,61950,0,60618,61952,256);qb(4520,2,9068,62385,63,156);a=kR(8)|0;c[a>>2]=113;c[a+4>>2]=0;rb(4520,60640,2,9076,62385,64,a|0,0);a=kR(8)|0;c[a>>2]=157;c[a+4>>2]=0;rb(4520,60648,2,9084,62385,65,a|0,0);a=kR(8)|0;c[a>>2]=158;c[a+4>>2]=0;rb(4520,60661,2,9084,62385,65,a|0,0);a=kR(8)|0;c[a>>2]=159;c[a+4>>2]=0;rb(4520,60671,2,9084,62385,65,a|0,0);a=kR(8)|0;c[a>>2]=160;c[a+4>>2]=0;rb(4520,60682,2,9084,62385,65,a|0,0);a=kR(8)|0;c[a>>2]=161;c[a+4>>2]=0;rb(4520,60697,2,9084,62385,65,a|0,0);a=kR(8)|0;c[a>>2]=114;c[a+4>>2]=0;rb(4520,60712,2,9092,62385,66,a|0,0);a=kR(8)|0;c[a>>2]=115;c[a+4>>2]=0;rb(4520,60718,3,9100,62374,50,a|0,0);a=kR(8)|0;c[a>>2]=116;c[a+4>>2]=0;rb(4520,60724,3,9100,62374,50,a|0,0);a=kR(8)|0;c[a>>2]=162;c[a+4>>2]=0;rb(4520,60736,2,9112,62385,67,a|0,0);a=kR(8)|0;c[a>>2]=163;c[a+4>>2]=0;rb(4520,60753,2,9112,62385,67,a|0,0);a=kR(8)|0;c[a>>2]=164;c[a+4>>2]=0;rb(4520,60770,2,9112,62385,67,a|0,0);a=kR(8)|0;c[a>>2]=165;c[a+4>>2]=0;rb(4520,60781,2,9112,62385,67,a|0,0);a=kR(8)|0;c[a>>2]=117;c[a+4>>2]=0;rb(4520,60798,3,9100,62374,50,a|0,0);a=kR(8)|0;c[a>>2]=118;c[a+4>>2]=0;rb(4520,60815,3,9100,62374,50,a|0,0);a=kR(8)|0;c[a>>2]=119;c[a+4>>2]=0;rb(4520,60832,3,9120,62374,51,a|0,0);a=kR(8)|0;c[a>>2]=257;c[a+4>>2]=0;rb(4520,59916,2,9132,62628,120,a|0,0);a=kR(8)|0;c[a>>2]=258;c[a+4>>2]=0;rb(4520,59751,2,9132,62628,120,a|0,0);a=kR(8)|0;c[a>>2]=52;c[a+4>>2]=0;rb(4520,60201,3,9140,62408,74,a|0,0);a=kR(8)|0;c[a>>2]=121;c[a+4>>2]=0;rb(4520,60208,2,9152,62385,68,a|0,0);tb(1280,60843,4,1);ub(1280,60872,0);ub(1280,60878,1);ub(1280,60890,2);ub(1280,60902,3);ub(1280,60908,4);tb(1272,60913,4,1);ub(1272,72820,0);ub(1272,72937,1);ub(1272,72844,2);ub(1272,72961,3);ob(1680,1288,1304,0,61947,166,61950,0,61950,0,60944,61952,259);qb(1680,1,9160,61947,167,32);a=kR(8)|0;c[a>>2]=168;c[a+4>>2]=0;rb(1680,60682,2,9164,62385,69,a|0,0);a=kR(8)|0;c[a>>2]=169;c[a+4>>2]=0;rb(1680,60671,2,9164,62385,69,a|0,0);pb(1680,58825,4,7680,62413,20,75);pb(1680,60967,2,7708,62385,26,170);pb(1680,60984,2,8400,62628,122,260);pb(1680,58840,3,7696,62408,58,70);pb(1680,58864,2,7708,62385,26,171);a=kR(8)|0;c[a>>2]=53;c[a+4>>2]=0;rb(1680,60999,4,9172,62379,30,a|0,0);a=kR(8)|0;c[a>>2]=123;c[a+4>>2]=0;rb(1680,61013,3,9188,62374,54,a|0,0);a=kR(8)|0;c[a>>2]=124;c[a+4>>2]=0;rb(1680,61026,3,9200,62374,55,a|0,0);a=kR(8)|0;c[a>>2]=125;c[a+4>>2]=0;rb(1680,61037,3,9212,62374,56,a|0,0);pb(1680,59487,3,9224,62408,76,57);a=kR(8)|0;c[a>>2]=58;c[a+4>>2]=0;rb(1680,61052,3,9236,62408,77,a|0,0);a=kR(8)|0;c[a>>2]=126;c[a+4>>2]=0;rb(1680,61074,2,9248,62385,71,a|0,0);a=kR(8)|0;c[a>>2]=59;c[a+4>>2]=0;rb(1680,61095,3,9236,62408,77,a|0,0);a=kR(8)|0;c[a>>2]=127;c[a+4>>2]=0;rb(1680,61117,2,9248,62385,71,a|0,0);a=kR(8)|0;c[a>>2]=60;c[a+4>>2]=0;rb(1680,74415,3,9236,62408,77,a|0,0);a=kR(8)|0;c[a>>2]=61;c[a+4>>2]=0;rb(1680,74475,3,9236,62408,77,a|0,0);a=kR(8)|0;c[a>>2]=31;c[a+4>>2]=0;rb(1680,59616,4,9256,62413,35,a|0,0);a=kR(8)|0;c[a>>2]=36;c[a+4>>2]=0;rb(1680,59621,5,9272,62898,30,a|0,0);return}function Ud(a){a=a|0;ob(1320,1328,1344,0,61947,172,61950,0,61950,0,61138,61952,261);qb(1320,5,9292,62898,31,37);a=kR(8)|0;c[a>>2]=173;c[a+4>>2]=0;rb(1320,59647,2,9312,62385,72,a|0,0);a=kR(8)|0;c[a>>2]=174;c[a+4>>2]=0;rb(1320,61155,2,9320,62385,73,a|0,0);a=kR(8)|0;c[a>>2]=175;c[a+4>>2]=0;rb(1320,61169,2,9320,62385,73,a|0,0);a=kR(8)|0;c[a>>2]=176;c[a+4>>2]=0;rb(1320,61192,2,9320,62385,73,a|0,0);a=kR(8)|0;c[a>>2]=177;c[a+4>>2]=0;rb(1320,61215,2,9320,62385,73,a|0,0);ob(1360,1368,1384,0,61947,178,61950,0,61950,0,61233,61952,262);qb(1360,1,9328,61947,179,33);qb(1360,2,9332,62385,74,180);a=kR(8)|0;c[a>>2]=181;c[a+4>>2]=0;rb(1360,59647,2,9340,62385,75,a|0,0);a=kR(8)|0;c[a>>2]=182;c[a+4>>2]=0;rb(1360,61252,2,9348,62385,76,a|0,0);ob(1400,1408,1424,0,61947,183,61950,0,61950,0,61259,61952,263);qb(1400,1,9356,61947,184,34);qb(1400,2,9360,62385,77,185);qb(1400,3,9368,62408,78,78);a=kR(8)|0;c[a>>2]=186;c[a+4>>2]=0;rb(1400,59647,2,9380,62385,79,a|0,0);a=kR(8)|0;c[a>>2]=187;c[a+4>>2]=0;rb(1400,61252,2,9388,62385,80,a|0,0);a=kR(8)|0;c[a>>2]=188;c[a+4>>2]=0;rb(1400,61279,2,9388,62385,80,a|0,0);ob(1440,1448,1464,0,61947,189,61950,0,61950,0,61291,61952,264);qb(1440,4,9396,62413,38,79);a=kR(8)|0;c[a>>2]=190;c[a+4>>2]=0;rb(1440,61317,2,9412,62385,81,a|0,0);a=kR(8)|0;c[a>>2]=191;c[a+4>>2]=0;rb(1440,60339,2,9412,62385,81,a|0,0);a=kR(8)|0;c[a>>2]=192;c[a+4>>2]=0;rb(1440,61338,2,9412,62385,81,a|0,0);ob(1480,1488,1504,0,61947,193,61950,0,61950,0,61352,61952,265);qb(1480,3,9420,62408,80,82);a=kR(8)|0;c[a>>2]=194;c[a+4>>2]=0;rb(1480,61381,2,9432,62385,83,a|0,0);a=kR(8)|0;c[a>>2]=195;c[a+4>>2]=0;rb(1480,61402,2,9432,62385,83,a|0,0);ob(1520,1528,1544,0,61947,196,61950,0,61950,0,61424,61952,266);qb(1520,3,9440,62408,81,84);a=kR(8)|0;c[a>>2]=197;c[a+4>>2]=0;rb(1520,61454,2,9452,62385,85,a|0,0);a=kR(8)|0;c[a>>2]=198;c[a+4>>2]=0;rb(1520,61476,2,9452,62385,85,a|0,0);ob(1560,1568,1584,0,61947,199,61950,0,61950,0,61499,61952,267);qb(1560,3,9460,62408,82,86);qb(1560,4,9472,62413,39,83);a=kR(8)|0;c[a>>2]=200;c[a+4>>2]=0;rb(1560,61381,2,9488,62385,87,a|0,0);a=kR(8)|0;c[a>>2]=201;c[a+4>>2]=0;rb(1560,61528,2,9488,62385,87,a|0,0);a=kR(8)|0;c[a>>2]=202;c[a+4>>2]=0;rb(1560,61549,2,9488,62385,87,a|0,0);ob(1600,1608,1624,0,61947,203,61950,0,61950,0,61569,61952,268);qb(1600,3,9496,62408,84,88);qb(1600,4,9508,62413,40,85);a=kR(8)|0;c[a>>2]=204;c[a+4>>2]=0;rb(1600,61454,2,9524,62385,89,a|0,0);a=kR(8)|0;c[a>>2]=205;c[a+4>>2]=0;rb(1600,61599,2,9524,62385,89,a|0,0);a=kR(8)|0;c[a>>2]=206;c[a+4>>2]=0;rb(1600,61621,2,9524,62385,89,a|0,0);ob(1640,1648,1664,0,61947,207,61950,0,61950,0,61642,61952,269);qb(1640,1,9532,61947,208,35);a=kR(8)|0;c[a>>2]=17;c[a+4>>2]=0;rb(1640,74132,5,9536,62898,32,a|0,0);a=kR(8)|0;c[a>>2]=18;c[a+4>>2]=0;rb(1640,74268,5,9556,62898,33,a|0,0);a=kR(8)|0;c[a>>2]=62;c[a+4>>2]=0;rb(1640,74415,3,9576,62408,86,a|0,0);a=kR(8)|0;c[a>>2]=63;c[a+4>>2]=0;rb(1640,74475,3,9588,62408,87,a|0,0);a=kR(8)|0;c[a>>2]=128;c[a+4>>2]=0;rb(1640,61652,2,9600,62385,90,a|0,0);a=kR(8)|0;c[a>>2]=129;c[a+4>>2]=0;rb(1640,61663,3,9608,62374,64,a|0,0);return}function Vd(b){b=b|0;var d=0,e=0,f=0;d=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;c[d>>2]=7388;b=d+56|0;c[b>>2]=7408;e=d+4|0;c[e>>2]=7440;f=d+36|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);vH(e);ZH(d,7420);rH(b);return}function Wd(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=7388;d=b+56|0;c[d>>2]=7408;e=b+4|0;c[e>>2]=7440;f=b+36|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);vH(e);ZH(b,7420);rH(d);mR(b);return}function Xd(b){b=b|0;var d=0,e=0,f=0;d=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;c[d>>2]=7388;b=d+56|0;c[b>>2]=7408;e=d+4|0;c[e>>2]=7440;f=d+36|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);vH(e);ZH(d,7420);rH(b);mR(d);return}function Yd(b){b=b|0;var d=0;c[b>>2]=7440;d=b+32|0;if((a[d+11>>0]|0)<0)mR(c[d>>2]|0);vH(b);return}function Zd(b){b=b|0;var d=0;c[b>>2]=7440;d=b+32|0;if((a[d+11>>0]|0)<0)mR(c[d>>2]|0);vH(b);mR(b);return}function _d(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;i=d+44|0;j=c[i>>2]|0;k=d+24|0;l=c[k>>2]|0;m=l;if(j>>>0<l>>>0){c[i>>2]=l;n=m}else n=j;j=h&24;a:do if((j|0)!=0?!((g|0)==1&(j|0)==24):0){b:do switch(g|0){case 0:{o=0;p=0;break}case 1:{if(!(h&8)){i=m-(c[d+20>>2]|0)|0;o=i;p=((i|0)<0)<<31>>31;break b}else{i=(c[d+12>>2]|0)-(c[d+8>>2]|0)|0;o=i;p=((i|0)<0)<<31>>31;break b}break}case 2:{i=d+32|0;if((a[i+11>>0]|0)<0)q=c[i>>2]|0;else q=i;i=n-q|0;o=i;p=((i|0)<0)<<31>>31;break}default:{r=-1;s=-1;break a}}while(0);i=sT(o|0,p|0,e|0,f|0)|0;t=z;if((t|0)>=0){u=d+32|0;if((a[u+11>>0]|0)<0)v=c[u>>2]|0;else v=u;u=n-v|0;w=((u|0)<0)<<31>>31;if(!((t|0)>(w|0)|(t|0)==(w|0)&i>>>0>u>>>0)){u=h&8;if(!((i|0)==0&(t|0)==0)){if(u|0?(c[d+12>>2]|0)==0:0){r=-1;s=-1;break}if((h&16|0)!=0&(l|0)==0){r=-1;s=-1;break}}if(u|0){c[d+12>>2]=(c[d+8>>2]|0)+i;c[d+16>>2]=n}if(!(h&16)){r=i;s=t}else{c[k>>2]=(c[d+20>>2]|0)+i;r=i;s=t}}else{r=-1;s=-1}}else{r=-1;s=-1}}else{r=-1;s=-1}while(0);d=b;c[d>>2]=0;c[d+4>>2]=0;d=b+8|0;c[d>>2]=r;c[d+4>>2]=s;return}function $d(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=d+8|0;wd[c[(c[b>>2]|0)+16>>2]&31](a,b,c[f>>2]|0,c[f+4>>2]|0,0,e);return}function ae(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,i=0;b=a+44|0;e=c[b>>2]|0;f=c[a+24>>2]|0;if(e>>>0<f>>>0){c[b>>2]=f;g=f}else g=e;if(!(c[a+48>>2]&8)){h=-1;return h|0}e=a+16|0;f=c[e>>2]|0;if(f>>>0<g>>>0){c[e>>2]=g;i=g}else i=f;f=c[a+12>>2]|0;if(f>>>0>=i>>>0){h=-1;return h|0}h=d[f>>0]|0;return h|0}function be(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=b+44|0;f=c[e>>2]|0;g=c[b+24>>2]|0;if(f>>>0<g>>>0){c[e>>2]=g;h=g}else h=f;f=h;h=b+12|0;g=c[h>>2]|0;if((c[b+8>>2]|0)>>>0>=g>>>0){i=-1;return i|0}if((d|0)==-1){c[h>>2]=g+-1;c[b+16>>2]=f;i=0;return i|0}if(!(c[b+48>>2]&16)){e=d&255;j=g+-1|0;if((a[j>>0]|0)==e<<24>>24){k=e;l=j}else{i=-1;return i|0}}else{k=d&255;l=g+-1|0}c[h>>2]=l;c[b+16>>2]=f;a[l>>0]=k;i=d;return i|0}function ce(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;e=l;l=l+16|0;f=e;if((d|0)==-1){g=0;l=e;return g|0}h=b+12|0;i=b+8|0;j=(c[h>>2]|0)-(c[i>>2]|0)|0;k=b+24|0;m=c[k>>2]|0;n=b+28|0;p=c[n>>2]|0;do if((m|0)==(p|0)){q=b+48|0;if(!(c[q>>2]&16)){g=-1;l=e;return g|0}r=b+20|0;s=c[r>>2]|0;t=m-s|0;u=b+44|0;v=(c[u>>2]|0)-s|0;s=b+32|0;o=0;ma(130,s|0,0);w=o;o=0;if(!(w&1)){w=s+11|0;if((a[w>>0]|0)<0)x=(c[b+40>>2]&2147483647)+-1|0;else x=10;o=0;na(65,s|0,x|0,0);y=o;o=0;if(!(y&1)){y=a[w>>0]|0;if(y<<24>>24<0){z=c[s>>2]|0;A=c[b+36>>2]|0}else{z=s;A=y&255}y=z+A|0;c[r>>2]=z;c[n>>2]=y;r=z+t|0;c[k>>2]=r;t=z+v|0;c[u>>2]=t;B=u;C=q;D=u;E=r;F=t;G=y;break}}y=Qa(0)|0;Ka(y|0)|0;Na();g=-1;l=e;return g|0}else{y=b+44|0;B=y;C=b+48|0;D=y;E=m;F=c[y>>2]|0;G=p}while(0);p=E+1|0;c[f>>2]=p;m=c[(p>>>0<F>>>0?D:f)>>2]|0;c[B>>2]=m;if(c[C>>2]&8|0){C=b+32|0;if((a[C+11>>0]|0)<0)H=c[C>>2]|0;else H=C;c[i>>2]=H;c[h>>2]=H+j;c[b+16>>2]=m}if((E|0)==(G|0)){g=ed[c[(c[b>>2]|0)+52>>2]&255](b,d&255)|0;l=e;return g|0}else{c[k>>2]=p;a[E>>0]=d;g=d&255;l=e;return g|0}return 0}function de(a){a=a|0;return (c[a+4>>2]|0)-(c[a>>2]|0)|0}function ee(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;e=l;l=l+16|0;f=e+12|0;g=e;h=e+8|0;i=c[d>>2]|0;j=Lb(61841)|0;o=0;k=_(91,i|0,j|0)|0;i=o;o=0;if(i&1){i=Pa()|0;o=0;la(245,j|0);m=o;o=0;if(m&1){m=Qa(0)|0;Id(m)}else $a(i|0)}o=0;la(245,j|0);j=o;o=0;if(j&1){j=Qa(0)|0;Id(j)}o=0;n=+X(1,k|0,7304,h|0);j=o;o=0;if(j&1){j=Pa()|0;i=z;o=0;la(245,k|0);m=o;o=0;if(m&1){m=Qa(0)|0;Id(m)}else{p=i;q=j;$a(q|0)}}o=0;la(270,c[h>>2]|0);h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}h=~~n>>>0;o=0;la(245,k|0);k=o;o=0;if(k&1){k=Qa(0)|0;Id(k)}c[b>>2]=0;k=b+4|0;c[k>>2]=0;c[b+8>>2]=0;if(!h){l=e;return}j=b+8|0;i=0;while(1){m=c[d>>2]|0;c[g>>2]=i;o=0;r=_(92,7304,g|0)|0;s=o;o=0;if(s&1){t=39;break}o=0;u=_(91,m|0,r|0)|0;m=o;o=0;if(m&1){t=21;break}o=0;la(245,r|0);m=o;o=0;if(m&1){t=20;break}o=0;n=+X(1,u|0,7264,f|0);m=o;o=0;if(m&1){t=41;break}o=0;la(270,c[f>>2]|0);m=o;o=0;if(m&1){t=25;break}m=~~n&255;s=c[k>>2]|0;v=c[j>>2]|0;w=v;if(s>>>0>=v>>>0){v=c[b>>2]|0;x=s-v|0;y=x+1|0;A=v;if((y|0)<0){t=29;break}B=w-v|0;w=B<<1;C=B>>>0<1073741823?(w>>>0<y>>>0?y:w):2147483647;if(C){o=0;w=Z(209,C|0)|0;y=o;o=0;if(y&1){t=41;break}else D=w}else D=0;w=D+x|0;a[w>>0]=m;if((x|0)>0)CT(D|0,A|0,x|0)|0;c[b>>2]=D;c[k>>2]=w+1;c[j>>2]=D+C;if(v|0)mR(A)}else{a[s>>0]=m;c[k>>2]=(c[k>>2]|0)+1}o=0;la(245,u|0);m=o;o=0;if(m&1){t=37;break}i=i+1|0;if(i>>>0>=h>>>0){t=14;break}}if((t|0)==14){l=e;return}else if((t|0)==20){e=Qa(0)|0;Id(e)}else if((t|0)==21){e=Pa()|0;h=z;o=0;la(245,r|0);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)}else{E=h;F=e;t=40}}else if((t|0)==25){e=Qa(0)|0;Id(e)}else if((t|0)==29){o=0;la(271,b|0);o=0;t=41}else if((t|0)==37){e=Qa(0)|0;Id(e)}else if((t|0)==39){e=Pa()|0;E=z;F=e;t=40}if((t|0)==40){G=E;H=F}else if((t|0)==41){t=Pa()|0;F=z;o=0;la(245,u|0);u=o;o=0;if(u&1){u=Qa(0)|0;Id(u)}else{G=F;H=t}}t=c[b>>2]|0;if(!t){p=G;q=H;$a(q|0)}if((c[k>>2]|0)!=(t|0))c[k>>2]=t;mR(t);p=G;q=H;$a(q|0)}function fe(a){a=a|0;o=0;la(245,c[a>>2]|0);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}else return}function ge(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=b+32|0;yR(e,d)|0;d=b+44|0;c[d>>2]=0;f=b+48|0;g=c[f>>2]|0;if(g&8|0){h=a[e+11>>0]|0;if(h<<24>>24<0){i=c[e>>2]|0;j=i;k=i;l=i+(c[b+36>>2]|0)|0}else{j=e;k=e;l=e+(h&255)|0}c[d>>2]=l;c[b+8>>2]=j;c[b+12>>2]=k;c[b+16>>2]=l}if(!(g&16))return;g=e+11|0;l=a[g>>0]|0;if(l<<24>>24<0){k=c[b+36>>2]|0;c[d>>2]=(c[e>>2]|0)+k;m=(c[b+40>>2]&2147483647)+-1|0;n=k}else{k=l&255;c[d>>2]=e+k;m=10;n=k}ER(e,m,0);m=a[g>>0]|0;if(m<<24>>24<0){o=c[e>>2]|0;p=c[b+36>>2]|0}else{o=e;p=m&255}m=b+24|0;c[m>>2]=o;c[b+20>>2]=o;c[b+28>>2]=o+p;if(!(c[f>>2]&3))return;c[m>>2]=o+n;return}function he(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=l;l=l+16|0;g=f+12|0;h=f;i=f+8|0;o=0;ma(131,h|0,b|0);j=o;o=0;a:do if(j&1){k=Qa(0)|0;m=k;n=b;p=b}else{do if(a[h>>0]|0){k=(c[b>>2]|0)+-12|0;c[i>>2]=c[b+(c[k>>2]|0)+24>>2];q=b+(c[k>>2]|0)|0;k=c[q+4>>2]|0;r=d+e|0;s=q+76|0;t=c[s>>2]|0;do if((t|0)==-1){o=0;ma(132,g|0,q|0);u=o;o=0;if(u&1)v=14;else{o=0;u=_(93,g|0,102968)|0;w=o;o=0;if(!(w&1)?(o=0,w=_(c[(c[u>>2]|0)+28>>2]|0,u|0,32)|0,u=o,o=0,!(u&1)):0){$I(g);u=w<<24>>24;c[s>>2]=u;x=u;v=9;break}u=Qa(0)|0;$I(g);y=u}}else{x=t;v=9}while(0);if((v|0)==9){o=0;c[g>>2]=c[i>>2];t=ea(50,g|0,d|0,((k&176|0)==32?r:d)|0,r|0,q|0,x&255|0)|0;s=o;o=0;if(s&1)v=14;else{if(t|0)break;t=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;o=0;ma(133,t|0,c[t+16>>2]|5|0);t=o;o=0;if(!(t&1))break;t=Qa(0)|0;y=t}}if((v|0)==14){t=Qa(0)|0;y=t}sI(h);m=y;n=b;p=b;break a}while(0);sI(h);l=f;return b|0}while(0);Ka(m|0)|0;o=0;la(272,n+(c[(c[p>>2]|0)+-12>>2]|0)|0);p=o;o=0;if(!(p&1)){Na();l=f;return b|0}b=Pa()|0;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}else $a(b|0);return 0}function ie(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0;i=l;l=l+16|0;j=i;k=c[b>>2]|0;if(!k){m=0;l=i;return m|0}n=f;f=d;p=n-f|0;q=g+12|0;g=c[q>>2]|0;r=(g|0)>(p|0)?g-p|0:0;p=e;g=p-f|0;if((g|0)>0?(fd[c[(c[k>>2]|0)+48>>2]&127](k,d,g)|0)!=(g|0):0){c[b>>2]=0;m=0;l=i;return m|0}do if((r|0)>0){c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;if(r>>>0<11){g=j+11|0;a[g>>0]=r;s=j;t=g;u=j}else{g=r+16&-16;d=kR(g)|0;c[j>>2]=d;c[j+8>>2]=g|-2147483648;c[j+4>>2]=r;s=d;t=j+11|0;u=j}ET(s|0,h|0,r|0)|0;a[s+r>>0]=0;o=0;d=$(c[(c[k>>2]|0)+48>>2]|0,k|0,((a[t>>0]|0)<0?c[u>>2]|0:j)|0,r|0)|0;g=o;o=0;if(g&1){g=Pa()|0;if((a[t>>0]|0)>=0)$a(g|0);mR(c[u>>2]|0);$a(g|0)}if((d|0)==(r|0)){if((a[t>>0]|0)<0)mR(c[u>>2]|0);break}c[b>>2]=0;if((a[t>>0]|0)<0)mR(c[u>>2]|0);m=0;l=i;return m|0}while(0);u=n-p|0;if((u|0)>0?(fd[c[(c[k>>2]|0)+48>>2]&127](k,e,u)|0)!=(u|0):0){c[b>>2]=0;m=0;l=i;return m|0}c[q>>2]=0;m=k;l=i;return m|0}function je(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=c[d+48>>2]|0;if(e&16|0){f=d+44|0;g=c[f>>2]|0;h=c[d+24>>2]|0;if(g>>>0<h>>>0){c[f>>2]=h;i=h}else i=g;g=c[d+20>>2]|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;h=i-g|0;if(h>>>0>4294967279)vR(b);if(h>>>0<11){a[b+11>>0]=h;j=b}else{f=h+16&-16;k=kR(f)|0;c[b>>2]=k;c[b+8>>2]=f|-2147483648;c[b+4>>2]=h;j=k}if((g|0)==(i|0))l=j;else{k=j;f=g;while(1){a[k>>0]=a[f>>0]|0;f=f+1|0;if((f|0)==(i|0))break;else k=k+1|0}l=j+h|0}a[l>>0]=0;return}if(!(e&8)){c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;return}e=c[d+8>>2]|0;l=c[d+16>>2]|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;d=l-e|0;if(d>>>0>4294967279)vR(b);if(d>>>0<11){a[b+11>>0]=d;m=b}else{h=d+16&-16;j=kR(h)|0;c[b>>2]=j;c[b+8>>2]=h|-2147483648;c[b+4>>2]=d;m=j}if((e|0)==(l|0))n=m;else{j=m;b=e;while(1){a[j>>0]=a[b>>0]|0;b=b+1|0;if((b|0)==(l|0))break;else j=j+1|0}n=m+d|0}a[n>>0]=0;return}function ke(a){a=a|0;return 88}function le(a){a=a|0;if(!a)return;mR(a);return}function me(a){a=a|0;var b=0,c=0,d=0,e=0;o=0;b=Y(a|0)|0;a=o;o=0;if(!(a&1))return b|0;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0);return 0}function ne(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;d=l;l=l+16|0;e=d;o=0;la(b|0,e|0);b=o;o=0;if(b&1){b=Qa(7040)|0;f=z;if((f|0)!=(Xb(7040)|0)){g=b;h=f;$a(g|0)}f=Ka(b|0)|0;o=0;la(273,f|0);o=0;f=Pa()|0;b=z;o=0;ka(3);i=o;o=0;if(i&1){i=Qa(0)|0;Id(i)}g=f;h=b;$a(g|0)}g=a[e+11>>0]|0;b=g<<24>>24<0;if(b){h=c[e+4>>2]|0;j=BE(h+4|0)|0;k=g&255;m=h;n=h}else{h=g&255;g=BE(h+4|0)|0;j=g;k=h;m=h;n=c[e+4>>2]|0}c[j>>2]=m;m=c[e>>2]|0;CT(j+4|0,(b?m:e)|0,(b?n:k)|0)|0;if(!b){l=d;return j|0}mR(m);l=d;return j|0}function oe(a){a=a|0;return 160}function pe(a){a=a|0;if(!a)return;mR(a);return}function qe(a){a=a|0;var b=0,c=0,d=0,e=0;o=0;b=Y(a|0)|0;a=o;o=0;if(!(a&1))return b|0;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0);return 0}function re(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=b+4|0;f=c[e>>2]|0;g=b+8|0;h=c[g>>2]|0;if((f|0)!=(h|0)){a[f>>0]=a[d>>0]|0;c[e>>2]=(c[e>>2]|0)+1;return}i=c[b>>2]|0;j=f-i|0;f=j+1|0;k=i;if((f|0)<0)CP(b);l=h-i|0;h=l<<1;m=l>>>0<1073741823?(h>>>0<f>>>0?f:h):2147483647;if(!m)n=0;else n=kR(m)|0;h=n+j|0;a[h>>0]=a[d>>0]|0;if((j|0)>0)CT(n|0,k|0,j|0)|0;c[b>>2]=n;c[e>>2]=h+1;c[g>>2]=n+m;if(!i)return;mR(k);return}function se(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=a+4|0;f=c[e>>2]|0;g=c[a>>2]|0;h=f-g|0;if(h>>>0<b>>>0){ve(a,b-h|0,d);return}if(h>>>0<=b>>>0)return;h=g+b|0;if((h|0)==(f|0))return;c[e>>2]=h;return}function te(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,i=0;f=l;l=l+16|0;g=f;h=c[b>>2]|0;if(((c[b+4>>2]|0)-h|0)>>>0<=e>>>0){i=1;c[a>>2]=i;l=f;return}c[g>>2]=d[h+e>>0];i=Ob(7264,g|0)|0;c[a>>2]=i;l=f;return}function ue(b,d,e){b=b|0;d=d|0;e=e|0;a[(c[b>>2]|0)+d>>0]=a[e>>0]|0;return 1}function ve(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b+8|0;g=c[f>>2]|0;h=b+4|0;i=c[h>>2]|0;if((g-i|0)>>>0>=d>>>0){j=d;k=i;do{a[k>>0]=a[e>>0]|0;k=(c[h>>2]|0)+1|0;c[h>>2]=k;j=j+-1|0}while((j|0)!=0);return}j=c[b>>2]|0;k=i-j|0;i=k+d|0;if((i|0)<0)CP(b);l=g-j|0;j=l<<1;g=l>>>0<1073741823?(j>>>0<i>>>0?i:j):2147483647;if(!g)m=0;else m=kR(g)|0;j=m+k|0;k=m+g|0;g=d;d=j;m=j;do{a[m>>0]=a[e>>0]|0;m=d+1|0;d=m;g=g+-1|0}while((g|0)!=0);g=c[b>>2]|0;m=(c[h>>2]|0)-g|0;e=j+(0-m)|0;if((m|0)>0)CT(e|0,g|0,m|0)|0;c[b>>2]=e;c[h>>2]=d;c[f>>2]=k;if(!g)return;mR(g);return}function we(a){a=a|0;return 232}function xe(a){a=a|0;var b=0,d=0;if(!a)return;b=c[a>>2]|0;if(b|0){d=a+4|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}mR(a);return}function ye(){var a=0;a=kR(12)|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return a|0}function ze(a){a=a|0;var b=0,c=0,d=0,e=0;o=0;b=Y(a|0)|0;a=o;o=0;if(!(a&1))return b|0;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0);return 0}function Ae(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0;f=l;l=l+16|0;g=f;h=c[b>>2]|0;i=c[b+4>>2]|0;b=d+(i>>1)|0;if(!(i&1))j=h;else j=c[(c[b>>2]|0)+h>>2]|0;a[g>>0]=e;o=0;ma(j|0,b|0,g|0);g=o;o=0;if(!(g&1)){l=f;return}f=Qa(7040)|0;g=z;if((g|0)!=(Xb(7040)|0)){k=f;m=g;$a(k|0)}g=Ka(f|0)|0;o=0;la(273,g|0);o=0;g=Pa()|0;f=z;o=0;ka(3);b=o;o=0;if(b&1){b=Qa(0)|0;Id(b)}k=g;m=f;$a(k|0)}function Be(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0;g=l;l=l+16|0;h=g;i=c[b>>2]|0;j=c[b+4>>2]|0;b=d+(j>>1)|0;if(!(j&1))k=i;else k=c[(c[b>>2]|0)+i>>2]|0;a[h>>0]=f;o=0;na(k|0,b|0,e|0,h|0);h=o;o=0;if(!(h&1)){l=g;return}g=Qa(7040)|0;h=z;if((h|0)!=(Xb(7040)|0)){m=g;n=h;$a(m|0)}h=Ka(g|0)|0;o=0;la(273,h|0);o=0;h=Pa()|0;g=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}m=h;n=g;$a(m|0)}function Ce(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function De(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=l;l=l+16|0;f=e;o=0;na(c[a>>2]|0,f|0,b|0,d|0);d=o;o=0;do if(!(d&1)){o=0;la(274,c[f>>2]|0);b=o;o=0;if(b&1){b=Qa(7040)|0;a=z;o=0;la(245,c[f>>2]|0);g=o;o=0;if(!(g&1)){h=b;i=a;break}a=Qa(0)|0;Id(a)}a=c[f>>2]|0;o=0;la(245,a|0);b=o;o=0;if(b&1){b=Qa(0)|0;Id(b)}else{l=e;return a|0}}else{a=Qa(7040)|0;h=a;i=z}while(0);if((i|0)!=(Xb(7040)|0)){j=h;k=i;$a(j|0)}i=Ka(h|0)|0;o=0;la(273,i|0);o=0;i=Pa()|0;h=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}j=i;k=h;$a(j|0);return 0}function Ee(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=l;l=l+16|0;h=g;i=c[b>>2]|0;a[h>>0]=f;o=0;f=$(i|0,d|0,e|0,h|0)|0;h=o;o=0;if(!(h&1)){l=g;return f|0}f=Qa(7040)|0;g=z;if((g|0)!=(Xb(7040)|0)){j=f;k=g;$a(j|0)}g=Ka(f|0)|0;o=0;la(273,g|0);o=0;g=Pa()|0;f=z;o=0;ka(3);h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}j=g;k=f;$a(j|0);return 0}function Fe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=l;l=l+16|0;e=d;o=0;ma(c[a>>2]|0,e|0,b|0);b=o;o=0;do if(!(b&1)){o=0;la(274,c[e>>2]|0);a=o;o=0;if(a&1){a=Qa(7040)|0;f=z;o=0;la(245,c[e>>2]|0);g=o;o=0;if(!(g&1)){h=a;i=f;break}f=Qa(0)|0;Id(f)}f=c[e>>2]|0;o=0;la(245,f|0);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}else{l=d;return f|0}}else{f=Qa(7040)|0;h=f;i=z}while(0);if((i|0)!=(Xb(7040)|0)){j=h;k=i;$a(j|0)}i=Ka(h|0)|0;o=0;la(273,i|0);o=0;i=Pa()|0;h=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}j=i;k=h;$a(j|0);return 0}function Ge(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=l;l=l+16|0;f=e;g=c[a>>2]|0;c[f>>2]=d;o=0;ma(g|0,b|0,f|0);b=o;o=0;if(!(b&1)){o=0;la(245,c[f>>2]|0);b=o;o=0;if(b&1){b=Qa(0)|0;Id(b)}else{l=e;return}}e=Qa(7040)|0;b=z;o=0;la(245,c[f>>2]|0);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}if((b|0)!=(Xb(7040)|0)){h=e;i=b;$a(h|0)}b=Ka(e|0)|0;o=0;la(273,b|0);o=0;b=Pa()|0;e=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}h=b;i=e;$a(h|0)}function He(a){a=a|0;return 296}function Ie(a){a=a|0;var b=0,d=0;if(!a)return;b=c[a+12>>2]|0;if(b|0){d=a+16|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a>>2]|0;if(b|0){d=a+4|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}mR(a);return}function Je(a,b){a=a|0;b=b|0;var c=0;c=kR(24)|0;o=0;na(66,c|0,a|0,b|0);b=o;o=0;if(b&1){b=Pa()|0;mR(c);$a(b|0)}else return c|0;return 0}function Ke(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;o=0;d=_(a|0,b|0,c|0)|0;c=o;o=0;if(!(c&1))return d|0;d=Qa(7040)|0;c=z;if((c|0)!=(Xb(7040)|0)){e=d;f=c;$a(e|0)}c=Ka(d|0)|0;o=0;la(273,c|0);o=0;c=Pa()|0;d=z;o=0;ka(3);b=o;o=0;if(b&1){b=Qa(0)|0;Id(b)}e=c;f=d;$a(e|0);return 0}function Le(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;d=l;l=l+16|0;e=d;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;o=0;ma(h|0,e|0,a|0);a=o;o=0;if(!(a&1)){o=0;a=Z(209,12)|0;h=o;o=0;if(!(h&1)){c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];l=d;return a|0}a=Qa(7040)|0;d=z;h=c[e>>2]|0;if(!h){i=a;j=d}else{f=e+4|0;if((c[f>>2]|0)!=(h|0))c[f>>2]=h;mR(h);i=a;j=d}}else{d=Qa(7040)|0;i=d;j=z}if((j|0)!=(Xb(7040)|0)){k=i;m=j;$a(k|0)}j=Ka(i|0)|0;o=0;la(273,j|0);o=0;j=Pa()|0;i=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}k=j;m=i;$a(k|0);return 0}function Me(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=l;l=l+32|0;f=e;o=0;na(a|0,f|0,b|0,d|0);d=o;o=0;if(!(d&1)){o=0;d=Z(209,24)|0;b=o;o=0;if(!(b&1)){c[d>>2]=c[f>>2];b=f+4|0;c[d+4>>2]=c[b>>2];a=f+8|0;c[d+8>>2]=c[a>>2];c[a>>2]=0;c[b>>2]=0;c[f>>2]=0;c[d+12>>2]=c[f+12>>2];c[d+16>>2]=c[f+16>>2];c[d+20>>2]=c[f+20>>2];l=e;return d|0}d=Qa(7040)|0;e=z;b=c[f+12>>2]|0;if(b|0){a=f+16|0;if((c[a>>2]|0)!=(b|0))c[a>>2]=b;mR(b)}b=c[f>>2]|0;if(!b){g=d;h=e}else{a=f+4|0;if((c[a>>2]|0)!=(b|0))c[a>>2]=b;mR(b);g=d;h=e}}else{e=Qa(7040)|0;g=e;h=z}if((h|0)!=(Xb(7040)|0)){i=g;j=h;$a(i|0)}h=Ka(g|0)|0;o=0;la(273,h|0);o=0;h=Pa()|0;g=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}i=h;j=g;$a(i|0);return 0}function Ne(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=l;l=l+32|0;e=d;o=0;ma(a|0,e|0,b|0);b=o;o=0;if(!(b&1)){o=0;b=Z(209,24)|0;a=o;o=0;if(!(a&1)){c[b>>2]=c[e>>2];a=e+4|0;c[b+4>>2]=c[a>>2];f=e+8|0;c[b+8>>2]=c[f>>2];c[f>>2]=0;c[a>>2]=0;c[e>>2]=0;c[b+12>>2]=c[e+12>>2];c[b+16>>2]=c[e+16>>2];c[b+20>>2]=c[e+20>>2];l=d;return b|0}b=Qa(7040)|0;d=z;a=c[e+12>>2]|0;if(a|0){f=e+16|0;if((c[f>>2]|0)!=(a|0))c[f>>2]=a;mR(a)}a=c[e>>2]|0;if(!a){g=b;h=d}else{f=e+4|0;if((c[f>>2]|0)!=(a|0))c[f>>2]=a;mR(a);g=b;h=d}}else{d=Qa(7040)|0;g=d;h=z}if((h|0)!=(Xb(7040)|0)){i=g;j=h;$a(i|0)}h=Ka(g|0)|0;o=0;la(273,h|0);o=0;h=Pa()|0;g=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}i=h;j=g;$a(i|0);return 0}function Oe(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=l;l=l+32|0;g=f;o=0;oa(a|0,g|0,b|0,d|0,e|0);e=o;o=0;if(!(e&1)){o=0;e=Z(209,24)|0;d=o;o=0;if(!(d&1)){c[e>>2]=c[g>>2];d=g+4|0;c[e+4>>2]=c[d>>2];b=g+8|0;c[e+8>>2]=c[b>>2];c[b>>2]=0;c[d>>2]=0;c[g>>2]=0;c[e+12>>2]=c[g+12>>2];c[e+16>>2]=c[g+16>>2];c[e+20>>2]=c[g+20>>2];l=f;return e|0}e=Qa(7040)|0;f=z;d=c[g+12>>2]|0;if(d|0){b=g+16|0;if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d)}d=c[g>>2]|0;if(!d){h=e;i=f}else{b=g+4|0;if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d);h=e;i=f}}else{f=Qa(7040)|0;h=f;i=z}if((i|0)!=(Xb(7040)|0)){j=h;k=i;$a(j|0)}i=Ka(h|0)|0;o=0;la(273,i|0);o=0;i=Pa()|0;h=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}j=i;k=h;$a(j|0);return 0}function Pe(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=l;l=l+32|0;g=f;o=0;oa(a|0,g|0,b|0,d|0,e|0);e=o;o=0;if(!(e&1)){o=0;e=Z(209,24)|0;d=o;o=0;if(!(d&1)){c[e>>2]=c[g>>2];d=g+4|0;c[e+4>>2]=c[d>>2];b=g+8|0;c[e+8>>2]=c[b>>2];c[b>>2]=0;c[d>>2]=0;c[g>>2]=0;c[e+12>>2]=c[g+12>>2];c[e+16>>2]=c[g+16>>2];c[e+20>>2]=c[g+20>>2];l=f;return e|0}e=Qa(7040)|0;f=z;d=c[g+12>>2]|0;if(d|0){b=g+16|0;if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d)}d=c[g>>2]|0;if(!d){h=e;i=f}else{b=g+4|0;if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d);h=e;i=f}}else{f=Qa(7040)|0;h=f;i=z}if((i|0)!=(Xb(7040)|0)){j=h;k=i;$a(j|0)}i=Ka(h|0)|0;o=0;la(273,i|0);o=0;i=Pa()|0;h=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}j=i;k=h;$a(j|0);return 0}function Qe(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=l;l=l+32|0;f=e;o=0;na(a|0,f|0,b|0,d|0);d=o;o=0;if(!(d&1)){o=0;d=Z(209,24)|0;b=o;o=0;if(!(b&1)){c[d>>2]=c[f>>2];b=f+4|0;c[d+4>>2]=c[b>>2];a=f+8|0;c[d+8>>2]=c[a>>2];c[a>>2]=0;c[b>>2]=0;c[f>>2]=0;c[d+12>>2]=c[f+12>>2];c[d+16>>2]=c[f+16>>2];c[d+20>>2]=c[f+20>>2];l=e;return d|0}d=Qa(7040)|0;e=z;b=c[f+12>>2]|0;if(b|0){a=f+16|0;if((c[a>>2]|0)!=(b|0))c[a>>2]=b;mR(b)}b=c[f>>2]|0;if(!b){g=d;h=e}else{a=f+4|0;if((c[a>>2]|0)!=(b|0))c[a>>2]=b;mR(b);g=d;h=e}}else{e=Qa(7040)|0;g=e;h=z}if((h|0)!=(Xb(7040)|0)){i=g;j=h;$a(i|0)}h=Ka(g|0)|0;o=0;la(273,h|0);o=0;h=Pa()|0;g=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}i=h;j=g;$a(i|0);return 0}function Re(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;o=0;e=$(a|0,b|0,c|0,d|0)|0;d=o;o=0;if(!(d&1))return e|0;e=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){f=e;g=d;$a(f|0)}d=Ka(e|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;e=z;o=0;ka(3);c=o;o=0;if(c&1){c=Qa(0)|0;Id(c)}f=d;g=e;$a(f|0);return 0}function Se(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;o=0;d=_(a|0,b|0,c|0)|0;c=o;o=0;if(!(c&1))return d|0;d=Qa(7040)|0;c=z;if((c|0)!=(Xb(7040)|0)){e=d;f=c;$a(e|0)}c=Ka(d|0)|0;o=0;la(273,c|0);o=0;c=Pa()|0;d=z;o=0;ka(3);b=o;o=0;if(b&1){b=Qa(0)|0;Id(b)}e=c;f=d;$a(e|0);return 0}function Te(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;o=0;c=Z(a|0,b|0)|0;b=o;o=0;if(!(b&1))return c|0;c=Qa(7040)|0;b=z;if((b|0)!=(Xb(7040)|0)){d=c;e=b;$a(d|0)}b=Ka(c|0)|0;o=0;la(273,b|0);o=0;b=Pa()|0;c=z;o=0;ka(3);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}d=b;e=c;$a(d|0);return 0}function Ue(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=l;l=l+16|0;g=f;o=0;oa(a|0,g|0,b|0,d|0,e|0);e=o;o=0;if(!(e&1)){o=0;e=Z(209,12)|0;d=o;o=0;if(!(d&1)){c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];l=f;return e|0}e=Qa(7040)|0;f=z;d=c[g>>2]|0;if(!d){h=e;i=f}else{b=g+4|0;if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d);h=e;i=f}}else{f=Qa(7040)|0;h=f;i=z}if((i|0)!=(Xb(7040)|0)){j=h;k=i;$a(j|0)}i=Ka(h|0)|0;o=0;la(273,i|0);o=0;i=Pa()|0;h=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}j=i;k=h;$a(j|0);return 0}function Ve(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=l;l=l+16|0;f=e;o=0;na(a|0,f|0,b|0,d|0);d=o;o=0;if(!(d&1)){o=0;d=Z(209,12)|0;b=o;o=0;if(!(b&1)){c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];l=e;return d|0}d=Qa(7040)|0;e=z;b=c[f>>2]|0;if(!b){g=d;h=e}else{a=f+4|0;if((c[a>>2]|0)!=(b|0))c[a>>2]=b;mR(b);g=d;h=e}}else{e=Qa(7040)|0;g=e;h=z}if((h|0)!=(Xb(7040)|0)){i=g;j=h;$a(i|0)}h=Ka(g|0)|0;o=0;la(273,h|0);o=0;h=Pa()|0;g=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}i=h;j=g;$a(i|0);return 0}function We(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=l;l=l+16|0;e=d;o=0;ma(a|0,e|0,b|0);b=o;o=0;if(!(b&1)){o=0;b=Z(209,12)|0;a=o;o=0;if(!(a&1)){c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];c[b+8>>2]=c[e+8>>2];l=d;return b|0}b=Qa(7040)|0;d=z;a=c[e>>2]|0;if(!a){f=b;g=d}else{h=e+4|0;if((c[h>>2]|0)!=(a|0))c[h>>2]=a;mR(a);f=b;g=d}}else{d=Qa(7040)|0;f=d;g=z}if((g|0)!=(Xb(7040)|0)){i=f;j=g;$a(i|0)}g=Ka(f|0)|0;o=0;la(273,g|0);o=0;g=Pa()|0;f=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}i=g;j=f;$a(i|0);return 0}function Xe(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function Ye(a){a=a|0;if(!a)return;rd[c[(c[a>>2]|0)+4>>2]&511](a);return}function Ze(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;o=0;na(h|0,a|0,d|0,e|0);e=o;o=0;if(!(e&1))return;e=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){i=e;j=d;$a(i|0)}d=Ka(e|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;e=z;o=0;ka(3);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}i=d;j=e;$a(i|0)}function _e(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1))g=e;else g=c[(c[a>>2]|0)+e>>2]|0;o=0;ma(g|0,a|0,d|0);d=o;o=0;if(!(d&1))return;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){h=d;i=a;$a(h|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}h=a;i=d;$a(h|0)}function $e(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1))g=e;else g=c[(c[a>>2]|0)+e>>2]|0;o=0;e=_(g|0,a|0,d|0)|0;d=o;o=0;if(!(d&1))return e|0;e=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){h=e;i=d;$a(h|0)}d=Ka(e|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;e=z;o=0;ka(3);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}h=d;i=e;$a(h|0);return 0}function af(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;la(f|0,a|0);a=o;o=0;if(!(a&1))return;a=Qa(7040)|0;f=z;if((f|0)!=(Xb(7040)|0)){g=a;h=f;$a(g|0)}f=Ka(a|0)|0;o=0;la(273,f|0);o=0;f=Pa()|0;a=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}g=f;h=a;$a(g|0)}function bf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;d=l;l=l+16|0;e=d;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;o=0;ma(h|0,e|0,a|0);a=o;o=0;if(!(a&1)){o=0;a=Z(209,12)|0;h=o;o=0;if(!(h&1)){c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];l=d;return a|0}a=Qa(7040)|0;d=z;h=c[e>>2]|0;if(!h){i=a;j=d}else{f=e+4|0;if((c[f>>2]|0)!=(h|0))c[f>>2]=h;mR(h);i=a;j=d}}else{d=Qa(7040)|0;i=d;j=z}if((j|0)!=(Xb(7040)|0)){k=i;m=j;$a(k|0)}j=Ka(i|0)|0;o=0;la(273,j|0);o=0;j=Pa()|0;i=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}k=j;m=i;$a(k|0);return 0}function cf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;o=0;d=Z(c[a>>2]|0,b|0)|0;b=o;o=0;if(!(b&1))return d|0;d=Qa(7040)|0;b=z;if((b|0)!=(Xb(7040)|0)){e=d;f=b;$a(e|0)}b=Ka(d|0)|0;o=0;la(273,b|0);o=0;b=Pa()|0;d=z;o=0;ka(3);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}e=b;f=d;$a(e|0);return 0}function df(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;o=0;c=Z(a|0,b|0)|0;b=o;o=0;if(!(b&1))return c|0;c=Qa(7040)|0;b=z;if((b|0)!=(Xb(7040)|0)){d=c;e=b;$a(d|0)}b=Ka(c|0)|0;o=0;la(273,b|0);o=0;b=Pa()|0;c=z;o=0;ka(3);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}d=b;e=c;$a(d|0);return 0}function ef(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function ff(a){a=a|0;if(!a)return;rd[c[(c[a>>2]|0)+4>>2]&511](a);return}function gf(a){a=a|0;return a|0}function hf(a){a=a|0;return a|0}function jf(){var a=0,b=0;a=kR(8)|0;b=a;c[b>>2]=0;c[b+4>>2]=0;o=0;la(275,a|0);b=o;o=0;if(b&1){b=Pa()|0;mR(a);$a(b|0)}else{c[a>>2]=7836;return a|0}return 0}function kf(a){a=a|0;var b=0,c=0,d=0,e=0;o=0;b=Y(a|0)|0;a=o;o=0;if(!(a&1))return b|0;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0);return 0}function lf(a){a=a|0;jm(a);mR(a);return}function mf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;f=l;l=l+16|0;g=f;h=c[a>>2]|0;i=c[a+4>>2]|0;a=b+(i>>1)|0;if(!(i&1))j=h;else j=c[(c[a>>2]|0)+h>>2]|0;o=0;oa(j|0,g|0,a|0,d|0,e|0);e=o;o=0;if(!(e&1)){o=0;e=Z(209,12)|0;d=o;o=0;if(!(d&1)){c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];l=f;return e|0}e=Qa(7040)|0;f=z;d=c[g>>2]|0;if(!d){k=e;m=f}else{a=g+4|0;if((c[a>>2]|0)!=(d|0))c[a>>2]=d;mR(d);k=e;m=f}}else{f=Qa(7040)|0;k=f;m=z}if((m|0)!=(Xb(7040)|0)){n=k;p=m;$a(n|0)}m=Ka(k|0)|0;o=0;la(273,m|0);o=0;m=Pa()|0;k=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}n=m;p=k;$a(n|0);return 0}function nf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0;h=l;l=l+16|0;i=h;j=c[a>>2]|0;k=c[a+4>>2]|0;a=b+(k>>1)|0;if(!(k&1))m=j;else m=c[(c[a>>2]|0)+j>>2]|0;o=0;qa(m|0,i|0,a|0,d|0,e|0,f|0,g|0);g=o;o=0;if(!(g&1)){o=0;g=Z(209,12)|0;f=o;o=0;if(!(f&1)){c[g>>2]=c[i>>2];c[g+4>>2]=c[i+4>>2];c[g+8>>2]=c[i+8>>2];l=h;return g|0}g=Qa(7040)|0;h=z;f=c[i>>2]|0;if(!f){n=g;p=h}else{e=i+4|0;if((c[e>>2]|0)!=(f|0))c[e>>2]=f;mR(f);n=g;p=h}}else{h=Qa(7040)|0;n=h;p=z}if((p|0)!=(Xb(7040)|0)){q=n;r=p;$a(q|0)}p=Ka(n|0)|0;o=0;la(273,p|0);o=0;p=Pa()|0;n=z;o=0;ka(3);h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}q=p;r=n;$a(q|0);return 0}function of(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;f=l;l=l+16|0;g=f;h=c[a>>2]|0;i=c[a+4>>2]|0;a=b+(i>>1)|0;if(!(i&1))j=h;else j=c[(c[a>>2]|0)+h>>2]|0;o=0;oa(j|0,g|0,a|0,d|0,e|0);e=o;o=0;if(!(e&1)){o=0;e=Z(209,12)|0;d=o;o=0;if(!(d&1)){c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];l=f;return e|0}e=Qa(7040)|0;f=z;d=c[g>>2]|0;if(!d){k=e;m=f}else{a=g+4|0;if((c[a>>2]|0)!=(d|0))c[a>>2]=d;mR(d);k=e;m=f}}else{f=Qa(7040)|0;k=f;m=z}if((m|0)!=(Xb(7040)|0)){n=k;p=m;$a(n|0)}m=Ka(k|0)|0;o=0;la(273,m|0);o=0;m=Pa()|0;k=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}n=m;p=k;$a(n|0);return 0}function pf(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function qf(a){a=a|0;if(!a)return;c[a>>2]=10184;fk(a+12|0);To(a+4|0);mR(a);return}function rf(){var a=0,b=0;a=kR(20)|0;o=0;ma(134,a|0,4);b=o;o=0;if(b&1){b=Pa()|0;mR(a);$a(b|0)}else return a|0;return 0}function sf(a){a=a|0;var b=0,c=0,d=0,e=0;o=0;b=Y(a|0)|0;a=o;o=0;if(!(a&1))return b|0;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0);return 0}function tf(a){a=a|0;var b=0;b=kR(20)|0;o=0;ma(134,b|0,c[a>>2]|0);a=o;o=0;if(a&1){a=Pa()|0;mR(b);$a(a|0)}else return b|0;return 0}function uf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=l;l=l+16|0;e=d;c[e>>2]=b;o=0;b=Z(a|0,e|0)|0;e=o;o=0;if(!(e&1)){l=d;return b|0}b=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){f=b;g=d;$a(f|0)}d=Ka(b|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}f=d;g=b;$a(f|0);return 0}function vf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function wf(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;g=l;l=l+16|0;h=g;i=c[a>>2]|0;j=c[a+4>>2]|0;a=b+(j>>1)|0;if(!(j&1))k=i;else k=c[(c[a>>2]|0)+i>>2]|0;o=0;pa(k|0,h|0,a|0,d|0,e|0,f|0);f=o;o=0;if(!(f&1)){o=0;f=Z(209,12)|0;e=o;o=0;if(!(e&1)){c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];c[f+8>>2]=c[h+8>>2];l=g;return f|0}f=Qa(7040)|0;g=z;e=c[h>>2]|0;if(!e){m=f;n=g}else{d=h+4|0;if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e);m=f;n=g}}else{g=Qa(7040)|0;m=g;n=z}if((n|0)!=(Xb(7040)|0)){p=m;q=n;$a(p|0)}n=Ka(m|0)|0;o=0;la(273,n|0);o=0;n=Pa()|0;m=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}p=n;q=m;$a(p|0);return 0}function xf(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[a>>2]|0)+g>>2]|0;o=0;g=aa(i|0,a|0,d|0,e|0,f|0)|0;f=o;o=0;if(!(f&1))return g|0;g=Qa(7040)|0;f=z;if((f|0)!=(Xb(7040)|0)){j=g;k=f;$a(j|0)}f=Ka(g|0)|0;o=0;la(273,f|0);o=0;f=Pa()|0;g=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}j=f;k=g;$a(j|0);return 0}function yf(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function zf(a){a=a|0;if(!a)return;c[a>>2]=10184;fk(a+12|0);To(a+4|0);mR(a);return}function Af(a){a=a|0;return a|0}function Bf(a){a=a|0;return a|0}function Cf(){var a=0,b=0;a=kR(20)|0;o=0;ma(134,a|0,4);b=o;o=0;if(b&1){b=Pa()|0;mR(a);$a(b|0)}else{c[a>>2]=7980;return a|0}return 0}function Df(a){a=a|0;var b=0,c=0,d=0,e=0;o=0;b=Y(a|0)|0;a=o;o=0;if(!(a&1))return b|0;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0);return 0}function Ef(a){a=a|0;var b=0;b=kR(20)|0;o=0;ma(134,b|0,c[a>>2]|0);a=o;o=0;if(a&1){a=Pa()|0;mR(b);$a(a|0)}else{c[b>>2]=7980;return b|0}return 0}function Ff(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=l;l=l+16|0;e=d;c[e>>2]=b;o=0;b=Z(a|0,e|0)|0;e=o;o=0;if(!(e&1)){l=d;return b|0}b=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){f=b;g=d;$a(f|0)}d=Ka(b|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}f=d;g=b;$a(f|0);return 0}function Gf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=l;l=l+16|0;g=f;o=0;oa(c[a>>2]|0,g|0,b|0,d|0,e|0);e=o;o=0;if(!(e&1)){o=0;e=Z(209,12)|0;d=o;o=0;if(!(d&1)){c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];l=f;return e|0}e=Qa(7040)|0;f=z;d=c[g>>2]|0;if(!d){h=e;i=f}else{b=g+4|0;if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d);h=e;i=f}}else{f=Qa(7040)|0;h=f;i=z}if((i|0)!=(Xb(7040)|0)){j=h;k=i;$a(j|0)}i=Ka(h|0)|0;o=0;la(273,i|0);o=0;i=Pa()|0;h=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}j=i;k=h;$a(j|0);return 0}function Hf(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0;g=l;l=l+16|0;h=g;o=0;pa(c[a>>2]|0,h|0,b|0,d|0,e|0,f|0);f=o;o=0;if(!(f&1)){o=0;f=Z(209,12)|0;e=o;o=0;if(!(e&1)){c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];c[f+8>>2]=c[h+8>>2];l=g;return f|0}f=Qa(7040)|0;g=z;e=c[h>>2]|0;if(!e){i=f;j=g}else{d=h+4|0;if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e);i=f;j=g}}else{g=Qa(7040)|0;i=g;j=z}if((j|0)!=(Xb(7040)|0)){k=i;m=j;$a(k|0)}j=Ka(i|0)|0;o=0;la(273,j|0);o=0;j=Pa()|0;i=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}k=j;m=i;$a(k|0);return 0}function If(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;o=0;g=aa(c[a>>2]|0,b|0,d|0,e|0,f|0)|0;f=o;o=0;if(!(f&1))return g|0;g=Qa(7040)|0;f=z;if((f|0)!=(Xb(7040)|0)){h=g;i=f;$a(h|0)}f=Ka(g|0)|0;o=0;la(273,f|0);o=0;f=Pa()|0;g=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}h=f;i=g;$a(h|0);return 0}function Jf(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function Kf(a){a=a|0;if(!a)return;rd[c[(c[a>>2]|0)+4>>2]&511](a);return}function Lf(){var a=0,b=0;a=kR(40)|0;c[a>>2]=10056;b=a+8|0;c[b>>2]=0;c[a+12>>2]=0;c[a+4>>2]=b;b=a+20|0;c[b>>2]=0;c[a+24>>2]=0;c[a+16>>2]=b;b=a+32|0;c[b>>2]=0;c[a+36>>2]=0;c[a+28>>2]=b;return a|0}function Mf(a){a=a|0;var b=0,c=0,d=0,e=0;o=0;b=Y(a|0)|0;a=o;o=0;if(!(a&1))return b|0;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0);return 0}function Nf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function Of(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;o=0;na(h|0,a|0,d|0,e|0);e=o;o=0;if(!(e&1))return;e=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){i=e;j=d;$a(i|0)}d=Ka(e|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;e=z;o=0;ka(3);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}i=d;j=e;$a(i|0)}function Pf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1))g=e;else g=c[(c[a>>2]|0)+e>>2]|0;o=0;e=_(g|0,a|0,d|0)|0;d=o;o=0;if(!(d&1))return e|0;e=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){h=e;i=d;$a(h|0)}d=Ka(e|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;e=z;o=0;ka(3);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}h=d;i=e;$a(h|0);return 0}function Qf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1))g=e;else g=c[(c[a>>2]|0)+e>>2]|0;o=0;ma(g|0,a|0,d|0);d=o;o=0;if(!(d&1))return;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){h=d;i=a;$a(h|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}h=a;i=d;$a(h|0)}function Rf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;o=0;na(h|0,a|0,d|0,e|0);e=o;o=0;if(!(e&1))return;e=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){i=e;j=d;$a(i|0)}d=Ka(e|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;e=z;o=0;ka(3);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}i=d;j=e;$a(i|0)}function Sf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+16|0;f=e;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[a>>2]|0)+g>>2]|0;o=0;na(i|0,f|0,a|0,d|0);d=o;o=0;if(!(d&1)){o=0;d=Z(209,12)|0;a=o;o=0;if(!(a&1)){c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];l=e;return d|0}d=Qa(7040)|0;e=z;a=c[f>>2]|0;if(!a){j=d;k=e}else{i=f+4|0;if((c[i>>2]|0)!=(a|0))c[i>>2]=a;mR(a);j=d;k=e}}else{e=Qa(7040)|0;j=e;k=z}if((k|0)!=(Xb(7040)|0)){m=j;n=k;$a(m|0)}k=Ka(j|0)|0;o=0;la(273,k|0);o=0;k=Pa()|0;j=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}m=k;n=j;$a(m|0);return 0}function Tf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;la(f|0,a|0);a=o;o=0;if(!(a&1))return;a=Qa(7040)|0;f=z;if((f|0)!=(Xb(7040)|0)){g=a;h=f;$a(g|0)}f=Ka(a|0)|0;o=0;la(273,f|0);o=0;f=Pa()|0;a=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}g=f;h=a;$a(g|0)}function Uf(a){a=a|0;return 544}function Vf(a){a=a|0;if(!a)return;mR(a);return}function Wf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=l;l=l+32|0;f=e+12|0;g=e;h=d+4|0;i=c[d>>2]|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;do if(i>>>0<=4294967279){if(i>>>0<11){a[g+11>>0]=i;if(!i)j=g;else{k=g;m=7}}else{d=i+16&-16;o=0;n=Z(209,d|0)|0;p=o;o=0;if(p&1){m=13;break}c[g>>2]=n;c[g+8>>2]=d|-2147483648;c[g+4>>2]=i;k=n;m=7}if((m|0)==7){CT(k|0,h|0,i|0)|0;j=k}a[j+i>>0]=0;o=0;ma(b|0,f|0,g|0);n=o;o=0;do if(!(n&1)){o=0;d=Z(209,12)|0;p=o;o=0;if(p&1){p=Qa(7040)|0;q=z;r=c[f>>2]|0;if(!r){s=p;t=q;break}u=f+4|0;if((c[u>>2]|0)!=(r|0))c[u>>2]=r;mR(r);s=p;t=q;break}else{c[d>>2]=c[f>>2];q=f+4|0;c[d+4>>2]=c[q>>2];p=f+8|0;c[d+8>>2]=c[p>>2];c[p>>2]=0;c[q>>2]=0;c[f>>2]=0;if((a[g+11>>0]|0)>=0){l=e;return d|0}mR(c[g>>2]|0);l=e;return d|0}}else{d=Qa(7040)|0;s=d;t=z}while(0);if((a[g+11>>0]|0)<0){mR(c[g>>2]|0);v=s;w=t}else{v=s;w=t}}else{o=0;la(276,g|0);o=0;m=13}while(0);if((m|0)==13){m=Qa(7040)|0;v=m;w=z}if((w|0)!=(Xb(7040)|0)){x=v;y=w;$a(x|0)}w=Ka(v|0)|0;o=0;la(273,w|0);o=0;w=Pa()|0;v=z;o=0;ka(3);m=o;o=0;if(m&1){m=Qa(0)|0;Id(m)}x=w;y=v;$a(x|0);return 0}function Xf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+16|0;f=e;o=0;ma(b|0,f|0,d|0);d=o;o=0;if(d&1){d=Qa(7040)|0;b=z;if((b|0)!=(Xb(7040)|0)){g=d;h=b;$a(g|0)}b=Ka(d|0)|0;o=0;la(273,b|0);o=0;b=Pa()|0;d=z;o=0;ka(3);i=o;o=0;if(i&1){i=Qa(0)|0;Id(i)}g=b;h=d;$a(g|0)}g=a[f+11>>0]|0;d=g<<24>>24<0;if(d){h=c[f+4>>2]|0;j=BE(h+4|0)|0;k=g&255;m=h;n=h}else{h=g&255;g=BE(h+4|0)|0;j=g;k=h;m=h;n=c[f+4>>2]|0}c[j>>2]=m;m=c[f>>2]|0;CT(j+4|0,(d?m:f)|0,(d?n:k)|0)|0;if(!d){l=e;return j|0}mR(m);l=e;return j|0}function Yf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;f=l;l=l+16|0;g=f;o=0;na(b|0,g|0,d|0,e|0);e=o;o=0;if(e&1){e=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){h=e;i=d;$a(h|0)}d=Ka(e|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;e=z;o=0;ka(3);b=o;o=0;if(b&1){b=Qa(0)|0;Id(b)}h=d;i=e;$a(h|0)}h=a[g+11>>0]|0;e=h<<24>>24<0;if(e){i=c[g+4>>2]|0;j=BE(i+4|0)|0;k=h&255;m=i;n=i}else{i=h&255;h=BE(i+4|0)|0;j=h;k=i;m=i;n=c[g+4>>2]|0}c[j>>2]=m;m=c[g>>2]|0;CT(j+4|0,(e?m:g)|0,(e?n:k)|0)|0;if(!e){l=f;return j|0}mR(m);l=f;return j|0}function Zf(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;o=0;la(a|0,b|0);b=o;o=0;if(!(b&1))return;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0)}function _f(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function $f(a){a=a|0;if(!a)return;rd[c[(c[a>>2]|0)+4>>2]&511](a);return}function ag(){var a=0,b=0;a=kR(8)|0;o=0;ma(135,a|0,120);b=o;o=0;if(b&1){b=Pa()|0;mR(a);$a(b|0)}else return a|0;return 0}function bg(a){a=a|0;var b=0,c=0,d=0,e=0;o=0;b=Y(a|0)|0;a=o;o=0;if(!(a&1))return b|0;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0);return 0}function cg(a){a=a|0;var b=0;b=kR(8)|0;o=0;ma(135,b|0,c[a>>2]|0);a=o;o=0;if(a&1){a=Pa()|0;mR(b);$a(a|0)}else return b|0;return 0}function dg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=l;l=l+16|0;e=d;c[e>>2]=b;o=0;b=Z(a|0,e|0)|0;e=o;o=0;if(!(e&1)){l=d;return b|0}b=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){f=b;g=d;$a(f|0)}d=Ka(b|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}f=d;g=b;$a(f|0);return 0}function eg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;la(f|0,a|0);a=o;o=0;if(!(a&1))return;a=Qa(7040)|0;f=z;if((f|0)!=(Xb(7040)|0)){g=a;h=f;$a(g|0)}f=Ka(a|0)|0;o=0;la(273,f|0);o=0;f=Pa()|0;a=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}g=f;h=a;$a(g|0)}function fg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;o=0;na(h|0,a|0,d|0,e|0);e=o;o=0;if(!(e&1))return;e=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){i=e;j=d;$a(i|0)}d=Ka(e|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;e=z;o=0;ka(3);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}i=d;j=e;$a(i|0)}function gg(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=c[a>>2]|0;i=c[a+4>>2]|0;a=b+(i>>1)|0;if(!(i&1))j=h;else j=c[(c[a>>2]|0)+h>>2]|0;o=0;pa(j|0,a|0,d|0,e|0,f|0,g|0);g=o;o=0;if(!(g&1))return;g=Qa(7040)|0;f=z;if((f|0)!=(Xb(7040)|0)){k=g;l=f;$a(k|0)}f=Ka(g|0)|0;o=0;la(273,f|0);o=0;f=Pa()|0;g=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}k=f;l=g;$a(k|0)}function hg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function ig(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+16|0;f=e;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[a>>2]|0)+g>>2]|0;o=0;na(i|0,f|0,a|0,d|0);d=o;o=0;if(!(d&1)){o=0;d=Z(209,12)|0;a=o;o=0;if(!(a&1)){c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];l=e;return d|0}d=Qa(7040)|0;e=z;a=c[f>>2]|0;if(!a){j=d;k=e}else{i=f+4|0;if((c[i>>2]|0)!=(a|0))c[i>>2]=a;mR(a);j=d;k=e}}else{e=Qa(7040)|0;j=e;k=z}if((k|0)!=(Xb(7040)|0)){m=j;n=k;$a(m|0)}k=Ka(j|0)|0;o=0;la(273,k|0);o=0;k=Pa()|0;j=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}m=k;n=j;$a(m|0);return 0}function jg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1))g=e;else g=c[(c[a>>2]|0)+e>>2]|0;o=0;ma(g|0,a|0,d|0);d=o;o=0;if(!(d&1))return;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){h=d;i=a;$a(h|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}h=a;i=d;$a(h|0)}function kg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function lg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;f=l;l=l+16|0;g=f;h=c[a>>2]|0;i=c[a+4>>2]|0;a=b+(i>>1)|0;if(!(i&1))j=h;else j=c[(c[a>>2]|0)+h>>2]|0;o=0;oa(j|0,g|0,a|0,d|0,e|0);e=o;o=0;if(!(e&1)){o=0;e=Z(209,12)|0;d=o;o=0;if(!(d&1)){c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];l=f;return e|0}e=Qa(7040)|0;f=z;d=c[g>>2]|0;if(!d){k=e;m=f}else{a=g+4|0;if((c[a>>2]|0)!=(d|0))c[a>>2]=d;mR(d);k=e;m=f}}else{f=Qa(7040)|0;k=f;m=z}if((m|0)!=(Xb(7040)|0)){n=k;p=m;$a(n|0)}m=Ka(k|0)|0;o=0;la(273,m|0);o=0;m=Pa()|0;k=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}n=m;p=k;$a(n|0);return 0}function mg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;g=l;l=l+16|0;h=g;i=c[a>>2]|0;j=c[a+4>>2]|0;a=b+(j>>1)|0;if(!(j&1))k=i;else k=c[(c[a>>2]|0)+i>>2]|0;o=0;pa(k|0,h|0,a|0,d|0,e|0,f|0);f=o;o=0;if(!(f&1)){o=0;f=Z(209,12)|0;e=o;o=0;if(!(e&1)){c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];c[f+8>>2]=c[h+8>>2];l=g;return f|0}f=Qa(7040)|0;g=z;e=c[h>>2]|0;if(!e){m=f;n=g}else{d=h+4|0;if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e);m=f;n=g}}else{g=Qa(7040)|0;m=g;n=z}if((n|0)!=(Xb(7040)|0)){p=m;q=n;$a(p|0)}n=Ka(m|0)|0;o=0;la(273,n|0);o=0;n=Pa()|0;m=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}p=n;q=m;$a(p|0);return 0}function ng(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function og(a){a=a|0;if(!a)return;rd[c[(c[a>>2]|0)+12>>2]&511](a);return}function pg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function qg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1))g=e;else g=c[(c[a>>2]|0)+e>>2]|0;o=0;ma(g|0,a|0,d|0);d=o;o=0;if(!(d&1))return;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){h=d;i=a;$a(h|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}h=a;i=d;$a(h|0)}function rg(b){b=b|0;var d=0;d=kR(12)|0;a[d+4>>0]=0;c[d+8>>2]=c[b>>2];c[b>>2]=0;c[d>>2]=8356;return d|0}function sg(b,d,e){b=b|0;d=d|0;e=e|0;c[b>>2]=mb(((a[d+11>>0]|0)<0?c[d>>2]|0:d)|0,704,c[e>>2]|0)|0;return}function tg(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function ug(a){a=a|0;if(!a)return;rd[c[(c[a>>2]|0)+12>>2]&511](a);return}function vg(a){a=a|0;return a|0}function wg(a){a=a|0;return a|0}function xg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;o=0;la(c[a>>2]|0,b|0);b=o;o=0;if(!(b&1))return;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){d=b;e=a;$a(d|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}d=a;e=b;$a(d|0)}function yg(b){b=b|0;a[b+4>>0]=1;return}function zg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=l;l=l+16|0;e=d;c[e>>2]=b;o=0;b=Z(a|0,e|0)|0;a=o;o=0;if(!(a&1)){o=0;la(245,c[e>>2]|0);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}else{l=d;return b|0}}b=Qa(7040)|0;d=z;o=0;la(245,c[e>>2]|0);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}if((d|0)!=(Xb(7040)|0)){f=b;g=d;$a(f|0)}d=Ka(b|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}f=d;g=b;$a(f|0);return 0}function Ag(a){a=a|0;return Fg(c[a+8>>2]|0,60029)|0}function Bg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=l;l=l+16|0;f=e;g=c[b+8>>2]|0;do if((a[93360]|0)==0?iT(93360)|0:0){o=0;b=_(94,2,8400)|0;h=o;o=0;if(h&1){h=Pa()|0;$a(h|0)}else{c[23516]=b;break}}while(0);b=c[23516]|0;c[f>>2]=Gg(d)|0;Fb(b|0,g|0,60036,f|0);l=e;return}function Cg(a){a=a|0;Dg(a);mR(a);return}function Dg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=l;l=l+16|0;e=d;c[b>>2]=8380;f=b+8|0;do if(a[b+4>>0]|0){g=c[f>>2]|0;do if((a[93344]|0)==0?iT(93344)|0:0){o=0;h=_(94,1,8396)|0;i=o;o=0;if(!(i&1)){c[23514]=h;break}h=Qa(0)|0;j=h;k=b+8|0;fe(k);Id(j)}while(0);o=0;oa(32,c[23514]|0,g|0,63645,e|0);h=o;o=0;if(!(h&1))break;h=Qa(0)|0;j=h;k=b+8|0;fe(k);Id(j)}while(0);o=0;la(245,c[f>>2]|0);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}else{l=d;return}}function Eg(a){a=a|0;Yb()}function Fg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0.0;e=l;l=l+16|0;f=e;g=e+8|0;do if((a[93352]|0)==0?iT(93352)|0:0){o=0;h=_(94,1,7504)|0;i=o;o=0;if(i&1){i=Pa()|0;$a(i|0)}else{c[23515]=h;break}}while(0);j=+Eb(c[23515]|0,b|0,d|0,g|0,f|0);o=0;la(270,c[g>>2]|0);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}else{l=e;return j!=0.0|0}return 0}function Gg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=kR(12)|0;c[b>>2]=0;d=b+4|0;c[d>>2]=0;e=b+8|0;c[e>>2]=0;f=c[a>>2]|0;g=(c[a+4>>2]|0)-f|0;a=f;if(!g)return b|0;if((g|0)>=0){o=0;f=Z(209,g|0)|0;h=o;o=0;if(!(h&1)){c[d>>2]=f;c[b>>2]=f;h=f+g|0;c[e>>2]=h;CT(f|0,a|0,g|0)|0;c[d>>2]=h;return b|0}}else{o=0;la(271,b|0);o=0}h=Pa()|0;g=c[b>>2]|0;if(!g){mR(b);$a(h|0)}if((c[d>>2]|0)!=(g|0))c[d>>2]=g;mR(g);mR(b);$a(h|0);return 0}function Hg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=l;l=l+32|0;g=f+16|0;h=f+4|0;i=f;j=d+4|0;k=c[d>>2]|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;do if(k>>>0<=4294967279){if(k>>>0<11){a[h+11>>0]=k;if(!k)m=h;else{n=h;p=7}}else{d=k+16&-16;o=0;q=Z(209,d|0)|0;r=o;o=0;if(r&1){p=17;break}c[h>>2]=q;c[h+8>>2]=d|-2147483648;c[h+4>>2]=k;n=q;p=7}if((p|0)==7){CT(n|0,j|0,k|0)|0;m=n}a[m+k>>0]=0;c[i>>2]=e;o=0;na(b|0,g|0,h|0,i|0);q=o;o=0;do if(q&1){d=Qa(7040)|0;s=d;t=z}else{o=0;la(274,c[g>>2]|0);d=o;o=0;if(d&1){d=Qa(7040)|0;r=z;o=0;la(245,c[g>>2]|0);u=o;o=0;if(!(u&1)){s=d;t=r;break}r=Qa(0)|0;Id(r)}r=c[g>>2]|0;o=0;la(245,r|0);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}o=0;la(245,c[i>>2]|0);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}if((a[h+11>>0]|0)>=0){l=f;return r|0}mR(c[h>>2]|0);l=f;return r|0}while(0);o=0;la(245,c[i>>2]|0);q=o;o=0;if(q&1){q=Qa(0)|0;Id(q)}if((a[h+11>>0]|0)<0){mR(c[h>>2]|0);v=s;w=t}else{v=s;w=t}}else{o=0;la(276,h|0);o=0;p=17}while(0);if((p|0)==17){p=Qa(7040)|0;v=p;w=z}if((w|0)!=(Xb(7040)|0)){x=v;y=w;$a(x|0)}w=Ka(v|0)|0;o=0;la(273,w|0);o=0;w=Pa()|0;v=z;o=0;ka(3);p=o;o=0;if(p&1){p=Qa(0)|0;Id(p)}x=w;y=v;$a(x|0);return 0}function Ig(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function Jg(a){a=a|0;if(!a)return;rd[c[(c[a>>2]|0)+12>>2]&511](a);return}function Kg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function Lg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;d=l;l=l+16|0;e=d;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;o=0;ma(h|0,e|0,a|0);a=o;o=0;if(!(a&1)){o=0;a=Z(209,12)|0;h=o;o=0;if(!(h&1)){c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];l=d;return a|0}a=Qa(7040)|0;d=z;h=c[e>>2]|0;if(!h){i=a;j=d}else{f=e+4|0;if((c[f>>2]|0)!=(h|0))c[f>>2]=h;mR(h);i=a;j=d}}else{d=Qa(7040)|0;i=d;j=z}if((j|0)!=(Xb(7040)|0)){k=i;m=j;$a(k|0)}j=Ka(i|0)|0;o=0;la(273,j|0);o=0;j=Pa()|0;i=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}k=j;m=i;$a(k|0);return 0}function Mg(b){b=b|0;var d=0;d=kR(12)|0;a[d+4>>0]=0;c[d+8>>2]=c[b>>2];c[b>>2]=0;c[d>>2]=8460;return d|0}function Ng(b,d,e){b=b|0;d=d|0;e=e|0;c[b>>2]=mb(((a[d+11>>0]|0)<0?c[d>>2]|0:d)|0,824,c[e>>2]|0)|0;return}function Og(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function Pg(a){a=a|0;if(!a)return;rd[c[(c[a>>2]|0)+12>>2]&511](a);return}function Qg(a){a=a|0;return a|0}function Rg(a){a=a|0;return a|0}function Sg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;o=0;la(c[a>>2]|0,b|0);b=o;o=0;if(!(b&1))return;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){d=b;e=a;$a(d|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}d=a;e=b;$a(d|0)}function Tg(b){b=b|0;a[b+4>>0]=1;return}function Ug(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=l;l=l+16|0;e=d;c[e>>2]=b;o=0;b=Z(a|0,e|0)|0;a=o;o=0;if(!(a&1)){o=0;la(245,c[e>>2]|0);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}else{l=d;return b|0}}b=Qa(7040)|0;d=z;o=0;la(245,c[e>>2]|0);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}if((d|0)!=(Xb(7040)|0)){f=b;g=d;$a(f|0)}d=Ka(b|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}f=d;g=b;$a(f|0);return 0}function Vg(a){a=a|0;return Fg(c[a+8>>2]|0,60081)|0}function Wg(a,b){a=a|0;b=b|0;_g(a,c[b+8>>2]|0,60089);return}function Xg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=l;l=l+16|0;e=d;c[b>>2]=8484;f=b+8|0;do if(a[b+4>>0]|0){g=c[f>>2]|0;do if((a[93344]|0)==0?iT(93344)|0:0){o=0;h=_(94,1,8396)|0;i=o;o=0;if(!(i&1)){c[23514]=h;break}h=Qa(0)|0;j=h;k=b+8|0;fe(k);Id(j)}while(0);o=0;oa(32,c[23514]|0,g|0,63645,e|0);h=o;o=0;if(!(h&1))break;h=Qa(0)|0;j=h;k=b+8|0;fe(k);Id(j)}while(0);o=0;la(245,c[f>>2]|0);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}else{l=d;return}}function Yg(a){a=a|0;Xg(a);mR(a);return}function Zg(a){a=a|0;Yb()}function _g(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0.0,m=0,n=0;f=l;l=l+16|0;g=f;h=f+8|0;do if((a[93368]|0)==0?iT(93368)|0:0){o=0;i=_(94,1,8500)|0;j=o;o=0;if(j&1){j=Pa()|0;$a(j|0)}else{c[23517]=i;break}}while(0);k=+Eb(c[23517]|0,d|0,e|0,h|0,g|0);g=c[h>>2]|0;h=~~k>>>0;e=h;c[b>>2]=0;d=b+4|0;c[d>>2]=0;c[b+8>>2]=0;i=e+4|0;j=(c[i>>2]|0)-(c[h>>2]|0)|0;do if(j|0){if((j|0)>=0){o=0;h=Z(209,j|0)|0;m=o;o=0;if(!(m&1)){c[d>>2]=h;c[b>>2]=h;c[b+8>>2]=h+j;m=c[e>>2]|0;n=(c[i>>2]|0)-m|0;if((n|0)<=0)break;CT(h|0,m|0,n|0)|0;c[d>>2]=h+n;break}}else{o=0;la(271,b|0);o=0}n=Pa()|0;h=c[b>>2]|0;if(h|0){if((c[d>>2]|0)!=(h|0))c[d>>2]=h;mR(h)}o=0;la(270,g|0);h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}else $a(n|0)}while(0);o=0;la(270,g|0);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}else{l=f;return}}function $g(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function ah(a){a=a|0;if(!a)return;rd[c[(c[a>>2]|0)+4>>2]&511](a);return}function bh(a){a=a|0;return a|0}function ch(a){a=a|0;return a|0}function dh(){var a=0,b=0;a=kR(8)|0;b=a;c[b>>2]=0;c[b+4>>2]=0;o=0;la(275,a|0);b=o;o=0;if(b&1){b=Pa()|0;mR(a);$a(b|0)}else{c[a>>2]=8516;return a|0}return 0}function eh(a){a=a|0;var b=0,c=0,d=0,e=0;o=0;b=Y(a|0)|0;a=o;o=0;if(!(a&1))return b|0;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0);return 0}function fh(a){a=a|0;jm(a);mR(a);return}function gh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[a>>2]|0)+g>>2]|0;o=0;oa(i|0,a|0,d|0,e|0,f|0);f=o;o=0;if(!(f&1))return;f=Qa(7040)|0;e=z;if((e|0)!=(Xb(7040)|0)){j=f;k=e;$a(j|0)}e=Ka(f|0)|0;o=0;la(273,e|0);o=0;e=Pa()|0;f=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}j=e;k=f;$a(j|0)}function hh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0;i=c[a>>2]|0;j=c[a+4>>2]|0;a=b+(j>>1)|0;if(!(j&1))k=i;else k=c[(c[a>>2]|0)+i>>2]|0;o=0;qa(k|0,a|0,d|0,e|0,f|0,g|0,h|0);h=o;o=0;if(!(h&1))return;h=Qa(7040)|0;g=z;if((g|0)!=(Xb(7040)|0)){l=h;m=g;$a(l|0)}g=Ka(h|0)|0;o=0;la(273,g|0);o=0;g=Pa()|0;h=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}l=g;m=h;$a(l|0)}function ih(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[a>>2]|0)+g>>2]|0;o=0;oa(i|0,a|0,d|0,e|0,f|0);f=o;o=0;if(!(f&1))return;f=Qa(7040)|0;e=z;if((e|0)!=(Xb(7040)|0)){j=f;k=e;$a(j|0)}e=Ka(f|0)|0;o=0;la(273,e|0);o=0;e=Pa()|0;f=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}j=e;k=f;$a(j|0)}function jh(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function kh(a){a=a|0;if(!a)return;c[a>>2]=10184;fk(a+12|0);To(a+4|0);mR(a);return}function lh(){var a=0,b=0;a=kR(20)|0;o=0;ma(134,a|0,4);b=o;o=0;if(b&1){b=Pa()|0;mR(a);$a(b|0)}else{c[a>>2]=8612;return a|0}return 0}function mh(a){a=a|0;var b=0,c=0,d=0,e=0;o=0;b=Y(a|0)|0;a=o;o=0;if(!(a&1))return b|0;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0);return 0}function nh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;g=l;l=l+16|0;h=g;i=c[a>>2]|0;j=c[a+4>>2]|0;a=b+(j>>1)|0;if(!(j&1))k=i;else k=c[(c[a>>2]|0)+i>>2]|0;o=0;pa(k|0,h|0,a|0,d|0,e|0,f|0);f=o;o=0;if(!(f&1)){o=0;f=Z(209,12)|0;e=o;o=0;if(!(e&1)){c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];c[f+8>>2]=c[h+8>>2];l=g;return f|0}f=Qa(7040)|0;g=z;e=c[h>>2]|0;if(!e){m=f;n=g}else{d=h+4|0;if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e);m=f;n=g}}else{g=Qa(7040)|0;m=g;n=z}if((n|0)!=(Xb(7040)|0)){p=m;q=n;$a(p|0)}n=Ka(m|0)|0;o=0;la(273,n|0);o=0;n=Pa()|0;m=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}p=n;q=m;$a(p|0);return 0}function oh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[a>>2]|0)+g>>2]|0;o=0;g=aa(i|0,a|0,d|0,e|0,f|0)|0;f=o;o=0;if(!(f&1))return g|0;g=Qa(7040)|0;f=z;if((f|0)!=(Xb(7040)|0)){j=g;k=f;$a(j|0)}f=Ka(g|0)|0;o=0;la(273,f|0);o=0;f=Pa()|0;g=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}j=f;k=g;$a(j|0);return 0}function ph(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function qh(a){a=a|0;if(!a)return;rd[c[(c[a>>2]|0)+4>>2]&511](a);return}function rh(a){a=a|0;return a|0}function sh(a){a=a|0;return a|0}function th(){var a=0,b=0;a=kR(8)|0;b=a;c[b>>2]=0;c[b+4>>2]=0;o=0;la(275,a|0);b=o;o=0;if(b&1){b=Pa()|0;mR(a);$a(b|0)}else{c[a>>2]=8672;return a|0}return 0}function uh(a){a=a|0;var b=0,c=0,d=0,e=0;o=0;b=Y(a|0)|0;a=o;o=0;if(!(a&1))return b|0;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0);return 0}function vh(a){a=a|0;jm(a);mR(a);return}function wh(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=c[a>>2]|0;i=c[a+4>>2]|0;a=b+(i>>1)|0;if(!(i&1))j=h;else j=c[(c[a>>2]|0)+h>>2]|0;o=0;pa(j|0,a|0,d|0,e|0,f|0,g|0);g=o;o=0;if(!(g&1))return;g=Qa(7040)|0;f=z;if((f|0)!=(Xb(7040)|0)){k=g;l=f;$a(k|0)}f=Ka(g|0)|0;o=0;la(273,f|0);o=0;f=Pa()|0;g=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}k=f;l=g;$a(k|0)}function xh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0;i=c[a>>2]|0;j=c[a+4>>2]|0;a=b+(j>>1)|0;if(!(j&1))k=i;else k=c[(c[a>>2]|0)+i>>2]|0;o=0;qa(k|0,a|0,d|0,e|0,f|0,g|0,h|0);h=o;o=0;if(!(h&1))return;h=Qa(7040)|0;g=z;if((g|0)!=(Xb(7040)|0)){l=h;m=g;$a(l|0)}g=Ka(h|0)|0;o=0;la(273,g|0);o=0;g=Pa()|0;h=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}l=g;m=h;$a(l|0)}function yh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[a>>2]|0)+g>>2]|0;o=0;oa(i|0,a|0,d|0,e|0,f|0);f=o;o=0;if(!(f&1))return;f=Qa(7040)|0;e=z;if((e|0)!=(Xb(7040)|0)){j=f;k=e;$a(j|0)}e=Ka(f|0)|0;o=0;la(273,e|0);o=0;e=Pa()|0;f=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}j=e;k=f;$a(j|0)}function zh(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function Ah(a){a=a|0;if(!a)return;rd[c[(c[a>>2]|0)+4>>2]&511](a);return}function Bh(a){a=a|0;var b=0;b=kR(8)|0;o=0;ma(136,b|0,c[a>>2]|0);a=o;o=0;if(a&1){a=Pa()|0;mR(b);$a(a|0)}else return b|0;return 0}function Ch(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=l;l=l+16|0;e=d;c[e>>2]=b;o=0;b=Z(a|0,e|0)|0;e=o;o=0;if(!(e&1)){l=d;return b|0}b=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){f=b;g=d;$a(f|0)}d=Ka(b|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}f=d;g=b;$a(f|0);return 0}function Dh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;e=l;l=l+16|0;f=e;g=c[b>>2]|0;h=c[b+4>>2]|0;b=d+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[b>>2]|0)+g>>2]|0;o=0;ma(i|0,f|0,b|0);b=o;o=0;if(b&1){b=Qa(7040)|0;i=z;if((i|0)!=(Xb(7040)|0)){j=b;k=i;$a(j|0)}i=Ka(b|0)|0;o=0;la(273,i|0);o=0;i=Pa()|0;b=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}j=i;k=b;$a(j|0)}j=a[f+11>>0]|0;b=j<<24>>24<0;if(b){k=c[f+4>>2]|0;m=BE(k+4|0)|0;n=j&255;p=k;q=k}else{k=j&255;j=BE(k+4|0)|0;m=j;n=k;p=k;q=c[f+4>>2]|0}c[m>>2]=p;p=c[f>>2]|0;CT(m+4|0,(b?p:f)|0,(b?q:n)|0)|0;if(!b){l=e;return m|0}mR(p);l=e;return m|0}function Eh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+16|0;f=e;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[a>>2]|0)+g>>2]|0;o=0;na(i|0,f|0,a|0,d|0);d=o;o=0;if(!(d&1)){o=0;d=Z(209,12)|0;a=o;o=0;if(!(a&1)){c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];l=e;return d|0}d=Qa(7040)|0;e=z;a=c[f>>2]|0;if(!a){j=d;k=e}else{i=f+4|0;if((c[i>>2]|0)!=(a|0))c[i>>2]=a;mR(a);j=d;k=e}}else{e=Qa(7040)|0;j=e;k=z}if((k|0)!=(Xb(7040)|0)){m=j;n=k;$a(m|0)}k=Ka(j|0)|0;o=0;la(273,k|0);o=0;k=Pa()|0;j=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}m=k;n=j;$a(m|0);return 0}function Fh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;la(f|0,a|0);a=o;o=0;if(!(a&1))return;a=Qa(7040)|0;f=z;if((f|0)!=(Xb(7040)|0)){g=a;h=f;$a(g|0)}f=Ka(a|0)|0;o=0;la(273,f|0);o=0;f=Pa()|0;a=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}g=f;h=a;$a(g|0)}function Gh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1))g=e;else g=c[(c[a>>2]|0)+e>>2]|0;o=0;ma(g|0,a|0,d|0);d=o;o=0;if(!(d&1))return;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){h=d;i=a;$a(h|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}h=a;i=d;$a(h|0)}function Hh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;d=l;l=l+16|0;e=d;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;o=0;ma(h|0,e|0,a|0);a=o;o=0;if(!(a&1)){o=0;a=Z(209,12)|0;h=o;o=0;if(!(h&1)){c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];l=d;return a|0}a=Qa(7040)|0;d=z;h=c[e>>2]|0;if(!h){i=a;j=d}else{f=e+4|0;if((c[f>>2]|0)!=(h|0))c[f>>2]=h;mR(h);i=a;j=d}}else{d=Qa(7040)|0;i=d;j=z}if((j|0)!=(Xb(7040)|0)){k=i;m=j;$a(k|0)}j=Ka(i|0)|0;o=0;la(273,j|0);o=0;j=Pa()|0;i=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}k=j;m=i;$a(k|0);return 0}function Ih(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;f=l;l=l+16|0;g=f;h=c[a>>2]|0;i=c[a+4>>2]|0;a=b+(i>>1)|0;if(!(i&1))j=h;else j=c[(c[a>>2]|0)+h>>2]|0;o=0;oa(j|0,g|0,a|0,d|0,e|0);e=o;o=0;if(!(e&1)){o=0;e=Z(209,12)|0;d=o;o=0;if(!(d&1)){c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];l=f;return e|0}e=Qa(7040)|0;f=z;d=c[g>>2]|0;if(!d){k=e;m=f}else{a=g+4|0;if((c[a>>2]|0)!=(d|0))c[a>>2]=d;mR(d);k=e;m=f}}else{f=Qa(7040)|0;k=f;m=z}if((m|0)!=(Xb(7040)|0)){n=k;p=m;$a(n|0)}m=Ka(k|0)|0;o=0;la(273,m|0);o=0;m=Pa()|0;k=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}n=m;p=k;$a(n|0);return 0}function Jh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function Kh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function Lh(a){a=a|0;return 1048}function Mh(a){a=a|0;if(!a)return;mR(a);return}function Nh(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function Oh(a){a=a|0;if(!a)return;rd[c[(c[a>>2]|0)+4>>2]&511](a);return}function Ph(a){a=a|0;var b=0;b=kR(8)|0;o=0;na(67,b|0,a|0,2048);a=o;o=0;if(a&1){a=Pa()|0;mR(b);$a(a|0)}else return b|0;return 0}function Qh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;o=0;c=Z(a|0,b|0)|0;b=o;o=0;if(!(b&1))return c|0;c=Qa(7040)|0;b=z;if((b|0)!=(Xb(7040)|0)){d=c;e=b;$a(d|0)}b=Ka(c|0)|0;o=0;la(273,b|0);o=0;b=Pa()|0;c=z;o=0;ka(3);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}d=b;e=c;$a(d|0);return 0}function Rh(a,b){a=a|0;b=b|0;var d=0;d=kR(8)|0;o=0;na(67,d|0,a|0,c[b>>2]|0);b=o;o=0;if(b&1){b=Pa()|0;mR(d);$a(b|0)}else return d|0;return 0}function Sh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=l;l=l+16|0;f=e;c[f>>2]=d;o=0;d=_(a|0,b|0,f|0)|0;f=o;o=0;if(!(f&1)){l=e;return d|0}d=Qa(7040)|0;e=z;if((e|0)!=(Xb(7040)|0)){g=d;h=e;$a(g|0)}e=Ka(d|0)|0;o=0;la(273,e|0);o=0;e=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=e;h=d;$a(g|0);return 0}function Th(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;d=l;l=l+16|0;e=d;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;o=0;ma(h|0,e|0,a|0);a=o;o=0;if(!(a&1)){o=0;a=Z(209,12)|0;h=o;o=0;if(!(h&1)){c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];l=d;return a|0}a=Qa(7040)|0;d=z;h=c[e>>2]|0;if(!h){i=a;j=d}else{f=e+4|0;if((c[f>>2]|0)!=(h|0))c[f>>2]=h;mR(h);i=a;j=d}}else{d=Qa(7040)|0;i=d;j=z}if((j|0)!=(Xb(7040)|0)){k=i;m=j;$a(k|0)}j=Ka(i|0)|0;o=0;la(273,j|0);o=0;j=Pa()|0;i=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}k=j;m=i;$a(k|0);return 0}function Uh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function Vh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1))g=e;else g=c[(c[a>>2]|0)+e>>2]|0;o=0;ma(g|0,a|0,d|0);d=o;o=0;if(!(d&1))return;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){h=d;i=a;$a(h|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}h=a;i=d;$a(h|0)}function Wh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function Xh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1))g=e;else g=c[(c[a>>2]|0)+e>>2]|0;o=0;ma(g|0,a|0,d|0);d=o;o=0;if(!(d&1))return;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){h=d;i=a;$a(h|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}h=a;i=d;$a(h|0)}function Yh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function Zh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;la(f|0,a|0);a=o;o=0;if(!(a&1))return;a=Qa(7040)|0;f=z;if((f|0)!=(Xb(7040)|0)){g=a;h=f;$a(g|0)}f=Ka(a|0)|0;o=0;la(273,f|0);o=0;f=Pa()|0;a=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}g=f;h=a;$a(g|0)}function _h(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;f=l;l=l+16|0;g=f;h=c[a>>2]|0;i=c[a+4>>2]|0;a=b+(i>>1)|0;if(!(i&1))j=h;else j=c[(c[a>>2]|0)+h>>2]|0;o=0;oa(j|0,g|0,a|0,d|0,e|0);e=o;o=0;if(!(e&1)){o=0;e=Z(209,12)|0;d=o;o=0;if(!(d&1)){c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];l=f;return e|0}e=Qa(7040)|0;f=z;d=c[g>>2]|0;if(!d){k=e;m=f}else{a=g+4|0;if((c[a>>2]|0)!=(d|0))c[a>>2]=d;mR(d);k=e;m=f}}else{f=Qa(7040)|0;k=f;m=z}if((m|0)!=(Xb(7040)|0)){n=k;p=m;$a(n|0)}m=Ka(k|0)|0;o=0;la(273,m|0);o=0;m=Pa()|0;k=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}n=m;p=k;$a(n|0);return 0}function $h(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function ai(a){a=a|0;if(!a)return;rd[c[(c[a>>2]|0)+4>>2]&511](a);return}function bi(a){a=a|0;var b=0;b=kR(8)|0;o=0;ma(137,b|0,a|0);a=o;o=0;if(a&1){a=Pa()|0;mR(b);$a(a|0)}else return b|0;return 0}function ci(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;o=0;c=Z(a|0,b|0)|0;b=o;o=0;if(!(b&1))return c|0;c=Qa(7040)|0;b=z;if((b|0)!=(Xb(7040)|0)){d=c;e=b;$a(d|0)}b=Ka(c|0)|0;o=0;la(273,b|0);o=0;b=Pa()|0;c=z;o=0;ka(3);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}d=b;e=c;$a(d|0);return 0}function di(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+16|0;f=e;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[a>>2]|0)+g>>2]|0;o=0;na(i|0,f|0,a|0,d|0);d=o;o=0;if(!(d&1)){o=0;d=Z(209,12)|0;a=o;o=0;if(!(a&1)){c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];l=e;return d|0}d=Qa(7040)|0;e=z;a=c[f>>2]|0;if(!a){j=d;k=e}else{i=f+4|0;if((c[i>>2]|0)!=(a|0))c[i>>2]=a;mR(a);j=d;k=e}}else{e=Qa(7040)|0;j=e;k=z}if((k|0)!=(Xb(7040)|0)){m=j;n=k;$a(m|0)}k=Ka(j|0)|0;o=0;la(273,k|0);o=0;k=Pa()|0;j=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}m=k;n=j;$a(m|0);return 0}function ei(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function fi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;o=0;f=$(h|0,a|0,d|0,e|0)|0;e=o;o=0;if(!(e&1))return f|0;f=Qa(7040)|0;e=z;if((e|0)!=(Xb(7040)|0)){i=f;j=e;$a(i|0)}e=Ka(f|0)|0;o=0;la(273,e|0);o=0;e=Pa()|0;f=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}i=e;j=f;$a(i|0);return 0}function gi(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function hi(a){a=a|0;if(!a)return;rd[c[(c[a>>2]|0)+4>>2]&511](a);return}function ii(a,b){a=a|0;b=b|0;var d=0;d=kR(8)|0;o=0;oa(33,d|0,c[a>>2]|0,b|0,1024);b=o;o=0;if(b&1){b=Pa()|0;mR(d);$a(b|0)}else return d|0;return 0}function ji(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0;e=l;l=l+16|0;f=e+12|0;g=e;c[f>>2]=b;c[g>>2]=0;b=g+4|0;c[b>>2]=0;c[g+8>>2]=0;h=c[d>>2]|0;i=(c[d+4>>2]|0)-h|0;d=h;do if(!i)j=10;else{if((i|0)>=0){o=0;h=Z(209,i|0)|0;k=o;o=0;if(!(k&1)){c[g>>2]=h;k=h+i|0;c[g+8>>2]=k;CT(h|0,d|0,i|0)|0;c[b>>2]=k;j=10;break}}else{o=0;la(271,g|0);o=0}k=Qa(7040)|0;h=z;m=c[g>>2]|0;if(m|0){if((c[b>>2]|0)!=(m|0))c[b>>2]=m;mR(m)}n=k;p=h}while(0);do if((j|0)==10){o=0;i=_(a|0,f|0,g|0)|0;d=o;o=0;if(d&1){d=Qa(7040)|0;h=z;k=c[g>>2]|0;if(!k){n=d;p=h;break}if((c[b>>2]|0)!=(k|0))c[b>>2]=k;mR(k);n=d;p=h;break}h=c[g>>2]|0;if(!h){l=e;return i|0}if((c[b>>2]|0)!=(h|0))c[b>>2]=h;mR(h);l=e;return i|0}while(0);if((p|0)!=(Xb(7040)|0)){q=n;r=p;$a(q|0)}p=Ka(n|0)|0;o=0;la(273,p|0);o=0;p=Pa()|0;n=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}q=p;r=n;$a(q|0);return 0}function ki(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=kR(8)|0;o=0;oa(33,e|0,c[a>>2]|0,b|0,c[d>>2]|0);d=o;o=0;if(d&1){d=Pa()|0;mR(e);$a(d|0)}else return e|0;return 0}function li(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0;f=l;l=l+32|0;g=f+16|0;h=f+4|0;i=f;c[g>>2]=b;c[h>>2]=0;b=h+4|0;c[b>>2]=0;c[h+8>>2]=0;j=c[d>>2]|0;k=(c[d+4>>2]|0)-j|0;d=j;do if(!k)m=10;else{if((k|0)>=0){o=0;j=Z(209,k|0)|0;n=o;o=0;if(!(n&1)){c[h>>2]=j;n=j+k|0;c[h+8>>2]=n;CT(j|0,d|0,k|0)|0;c[b>>2]=n;m=10;break}}else{o=0;la(271,h|0);o=0}n=Qa(7040)|0;j=z;p=c[h>>2]|0;if(p|0){if((c[b>>2]|0)!=(p|0))c[b>>2]=p;mR(p)}q=n;r=j}while(0);do if((m|0)==10){c[i>>2]=e;o=0;k=$(a|0,g|0,h|0,i|0)|0;d=o;o=0;if(d&1){d=Qa(7040)|0;j=z;n=c[h>>2]|0;if(!n){q=d;r=j;break}if((c[b>>2]|0)!=(n|0))c[b>>2]=n;mR(n);q=d;r=j;break}j=c[h>>2]|0;if(!j){l=f;return k|0}if((c[b>>2]|0)!=(j|0))c[b>>2]=j;mR(j);l=f;return k|0}while(0);if((r|0)!=(Xb(7040)|0)){s=q;t=r;$a(s|0)}r=Ka(q|0)|0;o=0;la(273,r|0);o=0;r=Pa()|0;q=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}s=r;t=q;$a(s|0);return 0}function mi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;f=l;l=l+16|0;g=f;h=c[a>>2]|0;i=c[a+4>>2]|0;a=b+(i>>1)|0;if(!(i&1))j=h;else j=c[(c[a>>2]|0)+h>>2]|0;o=0;oa(j|0,g|0,a|0,d|0,e|0);e=o;o=0;if(!(e&1)){o=0;e=Z(209,12)|0;d=o;o=0;if(!(d&1)){c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];l=f;return e|0}e=Qa(7040)|0;f=z;d=c[g>>2]|0;if(!d){k=e;m=f}else{a=g+4|0;if((c[a>>2]|0)!=(d|0))c[a>>2]=d;mR(d);k=e;m=f}}else{f=Qa(7040)|0;k=f;m=z}if((m|0)!=(Xb(7040)|0)){n=k;p=m;$a(n|0)}m=Ka(k|0)|0;o=0;la(273,m|0);o=0;m=Pa()|0;k=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}n=m;p=k;$a(n|0);return 0}function ni(a){a=a|0;return 1200}function oi(a){a=a|0;if(!a)return;mR(a);return}function pi(a){a=a|0;var b=0;b=kR(4)|0;o=0;ma(138,b|0,c[a>>2]|0);a=o;o=0;if(a&1){a=Pa()|0;mR(b);$a(a|0)}else return b|0;return 0}function qi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=l;l=l+16|0;e=d;c[e>>2]=b;o=0;b=Z(a|0,e|0)|0;e=o;o=0;if(!(e&1)){l=d;return b|0}b=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){f=b;g=d;$a(f|0)}d=Ka(b|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}f=d;g=b;$a(f|0);return 0}function ri(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0;h=l;l=l+16|0;i=h;j=c[a>>2]|0;k=c[a+4>>2]|0;a=b+(k>>1)|0;if(!(k&1))m=j;else m=c[(c[a>>2]|0)+j>>2]|0;o=0;qa(m|0,i|0,a|0,d|0,e|0,f|0,g|0);g=o;o=0;if(!(g&1)){o=0;g=Z(209,12)|0;f=o;o=0;if(!(f&1)){c[g>>2]=c[i>>2];c[g+4>>2]=c[i+4>>2];c[g+8>>2]=c[i+8>>2];l=h;return g|0}g=Qa(7040)|0;h=z;f=c[i>>2]|0;if(!f){n=g;p=h}else{e=i+4|0;if((c[e>>2]|0)!=(f|0))c[e>>2]=f;mR(f);n=g;p=h}}else{h=Qa(7040)|0;n=h;p=z}if((p|0)!=(Xb(7040)|0)){q=n;r=p;$a(q|0)}p=Ka(n|0)|0;o=0;la(273,p|0);o=0;p=Pa()|0;n=z;o=0;ka(3);h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}q=p;r=n;$a(q|0);return 0}function si(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function ti(a){a=a|0;if(!a)return;rd[c[(c[a>>2]|0)+4>>2]&511](a);return}function ui(a){a=a|0;var b=0;b=kR(8)|0;o=0;ma(139,b|0,c[a>>2]|0);a=o;o=0;if(a&1){a=Pa()|0;mR(b);$a(a|0)}else return b|0;return 0}function vi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=l;l=l+16|0;e=d;c[e>>2]=b;o=0;b=Z(a|0,e|0)|0;e=o;o=0;if(!(e&1)){l=d;return b|0}b=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){f=b;g=d;$a(f|0)}d=Ka(b|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}f=d;g=b;$a(f|0);return 0}function wi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;e=l;l=l+16|0;f=e;g=c[b>>2]|0;h=c[b+4>>2]|0;b=d+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[b>>2]|0)+g>>2]|0;o=0;ma(i|0,f|0,b|0);b=o;o=0;if(b&1){b=Qa(7040)|0;i=z;if((i|0)!=(Xb(7040)|0)){j=b;k=i;$a(j|0)}i=Ka(b|0)|0;o=0;la(273,i|0);o=0;i=Pa()|0;b=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}j=i;k=b;$a(j|0)}j=a[f+11>>0]|0;b=j<<24>>24<0;if(b){k=c[f+4>>2]|0;m=BE(k+4|0)|0;n=j&255;p=k;q=k}else{k=j&255;j=BE(k+4|0)|0;m=j;n=k;p=k;q=c[f+4>>2]|0}c[m>>2]=p;p=c[f>>2]|0;CT(m+4|0,(b?p:f)|0,(b?q:n)|0)|0;if(!b){l=e;return m|0}mR(p);l=e;return m|0}function xi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function yi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;d=l;l=l+16|0;e=d;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;o=0;ma(h|0,e|0,a|0);a=o;o=0;if(!(a&1)){o=0;a=Z(209,12)|0;h=o;o=0;if(!(h&1)){c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];l=d;return a|0}a=Qa(7040)|0;d=z;h=c[e>>2]|0;if(!h){i=a;j=d}else{f=e+4|0;if((c[f>>2]|0)!=(h|0))c[f>>2]=h;mR(h);i=a;j=d}}else{d=Qa(7040)|0;i=d;j=z}if((j|0)!=(Xb(7040)|0)){k=i;m=j;$a(k|0)}j=Ka(i|0)|0;o=0;la(273,j|0);o=0;j=Pa()|0;i=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}k=j;m=i;$a(k|0);return 0}function zi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1))g=e;else g=c[(c[a>>2]|0)+e>>2]|0;o=0;ma(g|0,a|0,d|0);d=o;o=0;if(!(d&1))return;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){h=d;i=a;$a(h|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}h=a;i=d;$a(h|0)}function Ai(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function Bi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1))g=e;else g=c[(c[a>>2]|0)+e>>2]|0;o=0;ma(g|0,a|0,d|0);d=o;o=0;if(!(d&1))return;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){h=d;i=a;$a(h|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}h=a;i=d;$a(h|0)}function Ci(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;la(f|0,a|0);a=o;o=0;if(!(a&1))return;a=Qa(7040)|0;f=z;if((f|0)!=(Xb(7040)|0)){g=a;h=f;$a(g|0)}f=Ka(a|0)|0;o=0;la(273,f|0);o=0;f=Pa()|0;a=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}g=f;h=a;$a(g|0)}function Di(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+16|0;f=e;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[a>>2]|0)+g>>2]|0;o=0;na(i|0,f|0,a|0,d|0);d=o;o=0;if(!(d&1)){o=0;d=Z(209,12)|0;a=o;o=0;if(!(a&1)){c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];l=e;return d|0}d=Qa(7040)|0;e=z;a=c[f>>2]|0;if(!a){j=d;k=e}else{i=f+4|0;if((c[i>>2]|0)!=(a|0))c[i>>2]=a;mR(a);j=d;k=e}}else{e=Qa(7040)|0;j=e;k=z}if((k|0)!=(Xb(7040)|0)){m=j;n=k;$a(m|0)}k=Ka(j|0)|0;o=0;la(273,k|0);o=0;k=Pa()|0;j=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}m=k;n=j;$a(m|0);return 0}function Ei(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;d=l;l=l+16|0;e=d;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;o=0;ma(h|0,e|0,a|0);a=o;o=0;if(!(a&1)){o=0;a=Z(209,12)|0;h=o;o=0;if(!(h&1)){c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];l=d;return a|0}a=Qa(7040)|0;d=z;h=c[e>>2]|0;if(!h){i=a;j=d}else{f=e+4|0;if((c[f>>2]|0)!=(h|0))c[f>>2]=h;mR(h);i=a;j=d}}else{d=Qa(7040)|0;i=d;j=z}if((j|0)!=(Xb(7040)|0)){k=i;m=j;$a(k|0)}j=Ka(i|0)|0;o=0;la(273,j|0);o=0;j=Pa()|0;i=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}k=j;m=i;$a(k|0);return 0}function Fi(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function Gi(a){a=a|0;if(!a)return;rd[c[(c[a>>2]|0)+4>>2]&511](a);return}function Hi(){var a=0,b=0;a=kR(8)|0;o=0;la(277,a|0);b=o;o=0;if(b&1){b=Pa()|0;mR(a);$a(b|0)}else return a|0;return 0}function Ii(a){a=a|0;var b=0,c=0,d=0,e=0;o=0;b=Y(a|0)|0;a=o;o=0;if(!(a&1))return b|0;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0);return 0}function Ji(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function Ki(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;o=0;la(a|0,b|0);b=o;o=0;if(!(b&1))return;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0)}function Li(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;o=0;na(h|0,a|0,d|0,e|0);e=o;o=0;if(!(e&1))return;e=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){i=e;j=d;$a(i|0)}d=Ka(e|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;e=z;o=0;ka(3);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}i=d;j=e;$a(i|0)}function Mi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1))g=e;else g=c[(c[a>>2]|0)+e>>2]|0;o=0;ma(g|0,a|0,d|0);d=o;o=0;if(!(d&1))return;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){h=d;i=a;$a(h|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}h=a;i=d;$a(h|0)}function Ni(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1))g=e;else g=c[(c[a>>2]|0)+e>>2]|0;o=0;ma(g|0,a|0,d|0);d=o;o=0;if(!(d&1))return;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){h=d;i=a;$a(h|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}h=a;i=d;$a(h|0)}function Oi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1))g=e;else g=c[(c[a>>2]|0)+e>>2]|0;o=0;ma(g|0,a|0,d|0);d=o;o=0;if(!(d&1))return;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){h=d;i=a;$a(h|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}h=a;i=d;$a(h|0)}function Pi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=l;l=l+16|0;f=e;o=0;na(a|0,f|0,b|0,d|0);d=o;o=0;if(!(d&1)){o=0;d=Z(209,12)|0;b=o;o=0;if(!(b&1)){c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];l=e;return d|0}d=Qa(7040)|0;e=z;b=c[f>>2]|0;if(!b){g=d;h=e}else{a=f+4|0;if((c[a>>2]|0)!=(b|0))c[a>>2]=b;mR(b);g=d;h=e}}else{e=Qa(7040)|0;g=e;h=z}if((h|0)!=(Xb(7040)|0)){i=g;j=h;$a(i|0)}h=Ka(g|0)|0;o=0;la(273,h|0);o=0;h=Pa()|0;g=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}i=h;j=g;$a(i|0);return 0}function Qi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+16|0;f=e;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[a>>2]|0)+g>>2]|0;o=0;na(i|0,f|0,a|0,d|0);d=o;o=0;if(!(d&1)){o=0;d=Z(209,12)|0;a=o;o=0;if(!(a&1)){c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];l=e;return d|0}d=Qa(7040)|0;e=z;a=c[f>>2]|0;if(!a){j=d;k=e}else{i=f+4|0;if((c[i>>2]|0)!=(a|0))c[i>>2]=a;mR(a);j=d;k=e}}else{e=Qa(7040)|0;j=e;k=z}if((k|0)!=(Xb(7040)|0)){m=j;n=k;$a(m|0)}k=Ka(j|0)|0;o=0;la(273,k|0);o=0;k=Pa()|0;j=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}m=k;n=j;$a(m|0);return 0}function Ri(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;d=l;l=l+16|0;e=d;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;o=0;ma(h|0,e|0,a|0);a=o;o=0;if(!(a&1)){o=0;a=Z(209,12)|0;h=o;o=0;if(!(h&1)){c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];l=d;return a|0}a=Qa(7040)|0;d=z;h=c[e>>2]|0;if(!h){i=a;j=d}else{f=e+4|0;if((c[f>>2]|0)!=(h|0))c[f>>2]=h;mR(h);i=a;j=d}}else{d=Qa(7040)|0;i=d;j=z}if((j|0)!=(Xb(7040)|0)){k=i;m=j;$a(k|0)}j=Ka(i|0)|0;o=0;la(273,j|0);o=0;j=Pa()|0;i=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}k=j;m=i;$a(k|0);return 0}function Si(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;f=l;l=l+16|0;g=f;h=c[a>>2]|0;i=c[a+4>>2]|0;a=b+(i>>1)|0;if(!(i&1))j=h;else j=c[(c[a>>2]|0)+h>>2]|0;o=0;oa(j|0,g|0,a|0,d|0,e|0);e=o;o=0;if(!(e&1)){o=0;e=Z(209,12)|0;d=o;o=0;if(!(d&1)){c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];l=f;return e|0}e=Qa(7040)|0;f=z;d=c[g>>2]|0;if(!d){k=e;m=f}else{a=g+4|0;if((c[a>>2]|0)!=(d|0))c[a>>2]=d;mR(d);k=e;m=f}}else{f=Qa(7040)|0;k=f;m=z}if((m|0)!=(Xb(7040)|0)){n=k;p=m;$a(n|0)}m=Ka(k|0)|0;o=0;la(273,m|0);o=0;m=Pa()|0;k=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}n=m;p=k;$a(n|0);return 0}function Ti(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[a>>2]|0)+g>>2]|0;o=0;g=aa(i|0,a|0,d|0,e|0,f|0)|0;f=o;o=0;if(!(f&1))return g|0;g=Qa(7040)|0;f=z;if((f|0)!=(Xb(7040)|0)){j=g;k=f;$a(j|0)}f=Ka(g|0)|0;o=0;la(273,f|0);o=0;f=Pa()|0;g=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}j=f;k=g;$a(j|0);return 0}function Ui(a){a=a|0;return 1320}function Vi(a){a=a|0;var b=0,d=0;if(!a)return;b=c[a+36>>2]|0;if(b|0){d=a+40|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+24>>2]|0;if(b|0){d=a+28|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+12>>2]|0;if(b|0){d=a+16|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a>>2]|0;if(b|0){d=a+4|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}mR(a);return}function Wi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;f=l;l=l+48|0;g=f+36|0;h=f+24|0;i=f+12|0;j=f;k=kR(48)|0;m=g+4|0;c[g>>2]=c[a>>2];n=a+4|0;c[m>>2]=c[n>>2];p=a+8|0;c[g+8>>2]=c[p>>2];c[p>>2]=0;c[n>>2]=0;c[a>>2]=0;a=h+4|0;c[h>>2]=c[b>>2];n=b+4|0;c[a>>2]=c[n>>2];p=b+8|0;c[h+8>>2]=c[p>>2];c[p>>2]=0;c[n>>2]=0;c[b>>2]=0;b=i+4|0;c[i>>2]=c[d>>2];n=d+4|0;c[b>>2]=c[n>>2];p=d+8|0;c[i+8>>2]=c[p>>2];c[p>>2]=0;c[n>>2]=0;c[d>>2]=0;d=j+4|0;c[j>>2]=c[e>>2];n=e+4|0;c[d>>2]=c[n>>2];p=e+8|0;c[j+8>>2]=c[p>>2];c[p>>2]=0;c[n>>2]=0;c[e>>2]=0;o=0;pa(19,k|0,g|0,h|0,i|0,j|0);e=o;o=0;if(e&1){e=Pa()|0;n=c[j>>2]|0;if(n|0){if((c[d>>2]|0)!=(n|0))c[d>>2]=n;mR(n)}n=c[i>>2]|0;if(n|0){if((c[b>>2]|0)!=(n|0))c[b>>2]=n;mR(n)}n=c[h>>2]|0;if(n|0){if((c[a>>2]|0)!=(n|0))c[a>>2]=n;mR(n)}n=c[g>>2]|0;if(!n){mR(k);$a(e|0)}if((c[m>>2]|0)!=(n|0))c[m>>2]=n;mR(n);mR(k);$a(e|0)}else{e=c[j>>2]|0;if(e|0){if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e)}e=c[i>>2]|0;if(e|0){if((c[b>>2]|0)!=(e|0))c[b>>2]=e;mR(e)}e=c[h>>2]|0;if(e|0){if((c[a>>2]|0)!=(e|0))c[a>>2]=e;mR(e)}e=c[g>>2]|0;if(!e){l=f;return k|0}if((c[m>>2]|0)!=(e|0))c[m>>2]=e;mR(e);l=f;return k|0}return 0}function Xi(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0;g=l;l=l+48|0;h=g+36|0;i=g+24|0;j=g+12|0;k=g;c[h>>2]=0;m=h+4|0;c[m>>2]=0;c[h+8>>2]=0;n=c[b>>2]|0;p=(c[b+4>>2]|0)-n|0;b=n;do if(!p)q=10;else{if((p|0)>=0){o=0;n=Z(209,p|0)|0;r=o;o=0;if(!(r&1)){c[h>>2]=n;r=n+p|0;c[h+8>>2]=r;CT(n|0,b|0,p|0)|0;c[m>>2]=r;q=10;break}}else{o=0;la(271,h|0);o=0}r=Qa(7040)|0;n=z;s=c[h>>2]|0;if(s|0){if((c[m>>2]|0)!=(s|0))c[m>>2]=s;mR(s)}t=r;u=n}while(0);if((q|0)==10){c[i>>2]=0;p=i+4|0;c[p>>2]=0;c[i+8>>2]=0;b=c[d>>2]|0;n=(c[d+4>>2]|0)-b|0;d=b;do if(!n)q=19;else{if((n|0)>=0){o=0;b=Z(209,n|0)|0;r=o;o=0;if(!(r&1)){c[i>>2]=b;r=b+n|0;c[i+8>>2]=r;CT(b|0,d|0,n|0)|0;c[p>>2]=r;q=19;break}}else{o=0;la(271,i|0);o=0}r=Qa(7040)|0;b=z;s=c[i>>2]|0;if(s|0){if((c[p>>2]|0)!=(s|0))c[p>>2]=s;mR(s)}v=r;w=b}while(0);if((q|0)==19){c[j>>2]=0;n=j+4|0;c[n>>2]=0;c[j+8>>2]=0;d=c[e>>2]|0;b=(c[e+4>>2]|0)-d|0;e=d;do if(!b)q=28;else{if((b|0)>=0){o=0;d=Z(209,b|0)|0;r=o;o=0;if(!(r&1)){c[j>>2]=d;r=d+b|0;c[j+8>>2]=r;CT(d|0,e|0,b|0)|0;c[n>>2]=r;q=28;break}}else{o=0;la(271,j|0);o=0}r=Qa(7040)|0;d=z;s=c[j>>2]|0;if(s|0){if((c[n>>2]|0)!=(s|0))c[n>>2]=s;mR(s)}x=r;y=d}while(0);if((q|0)==28){c[k>>2]=0;b=k+4|0;c[b>>2]=0;c[k+8>>2]=0;e=c[f>>2]|0;d=(c[f+4>>2]|0)-e|0;f=e;do if(!d)q=37;else{if((d|0)>=0){o=0;e=Z(209,d|0)|0;r=o;o=0;if(!(r&1)){c[k>>2]=e;r=e+d|0;c[k+8>>2]=r;CT(e|0,f|0,d|0)|0;c[b>>2]=r;q=37;break}}else{o=0;la(271,k|0);o=0}r=Qa(7040)|0;e=z;s=c[k>>2]|0;if(s|0){if((c[b>>2]|0)!=(s|0))c[b>>2]=s;mR(s)}A=r;B=e}while(0);do if((q|0)==37){o=0;d=aa(a|0,h|0,i|0,j|0,k|0)|0;f=o;o=0;if(f&1){f=Qa(7040)|0;e=z;r=c[k>>2]|0;if(!r){A=f;B=e;break}if((c[b>>2]|0)!=(r|0))c[b>>2]=r;mR(r);A=f;B=e;break}e=c[k>>2]|0;if(e|0){if((c[b>>2]|0)!=(e|0))c[b>>2]=e;mR(e)}e=c[j>>2]|0;if(e|0){if((c[n>>2]|0)!=(e|0))c[n>>2]=e;mR(e)}e=c[i>>2]|0;if(e|0){if((c[p>>2]|0)!=(e|0))c[p>>2]=e;mR(e)}e=c[h>>2]|0;if(!e){l=g;return d|0}if((c[m>>2]|0)!=(e|0))c[m>>2]=e;mR(e);l=g;return d|0}while(0);g=c[j>>2]|0;if(!g){x=A;y=B}else{if((c[n>>2]|0)!=(g|0))c[n>>2]=g;mR(g);x=A;y=B}}B=c[i>>2]|0;if(!B){v=x;w=y}else{if((c[p>>2]|0)!=(B|0))c[p>>2]=B;mR(B);v=x;w=y}}y=c[h>>2]|0;if(!y){t=v;u=w}else{if((c[m>>2]|0)!=(y|0))c[m>>2]=y;mR(y);t=v;u=w}}if((u|0)!=(Xb(7040)|0)){C=t;D=u;$a(C|0)}u=Ka(t|0)|0;o=0;la(273,u|0);o=0;u=Pa()|0;t=z;o=0;ka(3);w=o;o=0;if(w&1){w=Qa(0)|0;Id(w)}C=u;D=t;$a(C|0);return 0}function Yi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function Zi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1)?(o=0,a=Z(210,d|0)|0,d=o,o=0,!(d&1)):0)return a|0;a=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){g=a;h=d;$a(g|0)}d=Ka(a|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;a=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=d;h=a;$a(g|0);return 0}function _i(a){a=a|0;return 1360}function $i(a){a=a|0;var b=0,d=0;if(!a)return;b=c[a>>2]|0;if(b|0){d=a+4|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}mR(a);return}function aj(){var a=0,b=0,d=0,e=0,f=0,g=0;a=l;l=l+16|0;b=a;d=kR(12)|0;c[b>>2]=0;e=b+4|0;c[e>>2]=0;c[b+8>>2]=0;o=0;ma(140,d|0,b|0);f=o;o=0;if(f&1){f=Pa()|0;g=c[b>>2]|0;if(!g){mR(d);$a(f|0)}if((c[e>>2]|0)!=(g|0))c[e>>2]=g;mR(g);mR(d);$a(f|0)}else{f=c[b>>2]|0;if(!f){l=a;return d|0}if((c[e>>2]|0)!=(f|0))c[e>>2]=f;mR(f);l=a;return d|0}return 0}function bj(a){a=a|0;var b=0,c=0,d=0,e=0;o=0;b=Y(a|0)|0;a=o;o=0;if(!(a&1))return b|0;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0);return 0}function cj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=l;l=l+16|0;d=b;e=kR(12)|0;f=d+4|0;c[d>>2]=c[a>>2];g=a+4|0;c[f>>2]=c[g>>2];h=a+8|0;c[d+8>>2]=c[h>>2];c[h>>2]=0;c[g>>2]=0;c[a>>2]=0;o=0;ma(140,e|0,d|0);a=o;o=0;if(a&1){a=Pa()|0;g=c[d>>2]|0;if(!g){mR(e);$a(a|0)}if((c[f>>2]|0)!=(g|0))c[f>>2]=g;mR(g);mR(e);$a(a|0)}else{a=c[d>>2]|0;if(!a){l=b;return e|0}if((c[f>>2]|0)!=(a|0))c[f>>2]=a;mR(a);l=b;return e|0}return 0}function dj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;d=l;l=l+16|0;e=d;c[e>>2]=0;f=e+4|0;c[f>>2]=0;c[e+8>>2]=0;g=c[b>>2]|0;h=(c[b+4>>2]|0)-g|0;b=g;do if(!h)i=10;else{if((h|0)>=0){o=0;g=Z(209,h|0)|0;j=o;o=0;if(!(j&1)){c[e>>2]=g;j=g+h|0;c[e+8>>2]=j;CT(g|0,b|0,h|0)|0;c[f>>2]=j;i=10;break}}else{o=0;la(271,e|0);o=0}j=Qa(7040)|0;g=z;k=c[e>>2]|0;if(k|0){if((c[f>>2]|0)!=(k|0))c[f>>2]=k;mR(k)}m=j;n=g}while(0);do if((i|0)==10){o=0;h=Z(a|0,e|0)|0;b=o;o=0;if(b&1){b=Qa(7040)|0;g=z;j=c[e>>2]|0;if(!j){m=b;n=g;break}if((c[f>>2]|0)!=(j|0))c[f>>2]=j;mR(j);m=b;n=g;break}g=c[e>>2]|0;if(!g){l=d;return h|0}if((c[f>>2]|0)!=(g|0))c[f>>2]=g;mR(g);l=d;return h|0}while(0);if((n|0)!=(Xb(7040)|0)){p=m;q=n;$a(p|0)}n=Ka(m|0)|0;o=0;la(273,n|0);o=0;n=Pa()|0;m=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}p=n;q=m;$a(p|0);return 0}function ej(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function fj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1)?(o=0,a=Z(210,d|0)|0,d=o,o=0,!(d&1)):0)return a|0;a=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){g=a;h=d;$a(g|0)}d=Ka(a|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;a=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=d;h=a;$a(g|0);return 0}function gj(a){a=a|0;return 1400}function hj(a){a=a|0;if(!a)return;os(a);mR(a);return}function ij(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,i=0;a=l;l=l+32|0;b=a+12|0;d=a;e=kR(24)|0;c[b>>2]=0;f=b+4|0;c[f>>2]=0;c[b+8>>2]=0;c[d>>2]=0;g=d+4|0;c[g>>2]=0;c[d+8>>2]=0;o=0;na(68,e|0,b|0,d|0);h=o;o=0;if(h&1){h=Pa()|0;i=c[d>>2]|0;if(i|0){if((c[g>>2]|0)!=(i|0))c[g>>2]=i;mR(i)}i=c[b>>2]|0;if(!i){mR(e);$a(h|0)}if((c[f>>2]|0)!=(i|0))c[f>>2]=i;mR(i);mR(e);$a(h|0)}else{h=c[d>>2]|0;if(h|0){if((c[g>>2]|0)!=(h|0))c[g>>2]=h;mR(h)}h=c[b>>2]|0;if(!h){l=a;return e|0}if((c[f>>2]|0)!=(h|0))c[f>>2]=h;mR(h);l=a;return e|0}return 0}function jj(a){a=a|0;var b=0,c=0,d=0,e=0;o=0;b=Y(a|0)|0;a=o;o=0;if(!(a&1))return b|0;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0);return 0}function kj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=l;l=l+32|0;d=b+12|0;e=b;f=kR(24)|0;g=d+4|0;c[d>>2]=c[a>>2];h=a+4|0;c[g>>2]=c[h>>2];i=a+8|0;c[d+8>>2]=c[i>>2];c[i>>2]=0;c[h>>2]=0;c[a>>2]=0;c[e>>2]=0;a=e+4|0;c[a>>2]=0;c[e+8>>2]=0;o=0;na(68,f|0,d|0,e|0);h=o;o=0;if(h&1){h=Pa()|0;i=c[e>>2]|0;if(i|0){if((c[a>>2]|0)!=(i|0))c[a>>2]=i;mR(i)}i=c[d>>2]|0;if(!i){mR(f);$a(h|0)}if((c[g>>2]|0)!=(i|0))c[g>>2]=i;mR(i);mR(f);$a(h|0)}else{h=c[e>>2]|0;if(h|0){if((c[a>>2]|0)!=(h|0))c[a>>2]=h;mR(h)}h=c[d>>2]|0;if(!h){l=b;return f|0}if((c[g>>2]|0)!=(h|0))c[g>>2]=h;mR(h);l=b;return f|0}return 0}function lj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;d=l;l=l+16|0;e=d;c[e>>2]=0;f=e+4|0;c[f>>2]=0;c[e+8>>2]=0;g=c[b>>2]|0;h=(c[b+4>>2]|0)-g|0;b=g;do if(!h)i=10;else{if((h|0)>=0){o=0;g=Z(209,h|0)|0;j=o;o=0;if(!(j&1)){c[e>>2]=g;j=g+h|0;c[e+8>>2]=j;CT(g|0,b|0,h|0)|0;c[f>>2]=j;i=10;break}}else{o=0;la(271,e|0);o=0}j=Qa(7040)|0;g=z;k=c[e>>2]|0;if(k|0){if((c[f>>2]|0)!=(k|0))c[f>>2]=k;mR(k)}m=j;n=g}while(0);do if((i|0)==10){o=0;h=Z(a|0,e|0)|0;b=o;o=0;if(b&1){b=Qa(7040)|0;g=z;j=c[e>>2]|0;if(!j){m=b;n=g;break}if((c[f>>2]|0)!=(j|0))c[f>>2]=j;mR(j);m=b;n=g;break}g=c[e>>2]|0;if(!g){l=d;return h|0}if((c[f>>2]|0)!=(g|0))c[f>>2]=g;mR(g);l=d;return h|0}while(0);if((n|0)!=(Xb(7040)|0)){p=m;q=n;$a(p|0)}n=Ka(m|0)|0;o=0;la(273,n|0);o=0;n=Pa()|0;m=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}p=n;q=m;$a(p|0);return 0}function mj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=l;l=l+32|0;e=d+12|0;f=d;g=kR(24)|0;h=e+4|0;c[e>>2]=c[a>>2];i=a+4|0;c[h>>2]=c[i>>2];j=a+8|0;c[e+8>>2]=c[j>>2];c[j>>2]=0;c[i>>2]=0;c[a>>2]=0;a=f+4|0;c[f>>2]=c[b>>2];i=b+4|0;c[a>>2]=c[i>>2];j=b+8|0;c[f+8>>2]=c[j>>2];c[j>>2]=0;c[i>>2]=0;c[b>>2]=0;o=0;na(68,g|0,e|0,f|0);b=o;o=0;if(b&1){b=Pa()|0;i=c[f>>2]|0;if(i|0){if((c[a>>2]|0)!=(i|0))c[a>>2]=i;mR(i)}i=c[e>>2]|0;if(!i){mR(g);$a(b|0)}if((c[h>>2]|0)!=(i|0))c[h>>2]=i;mR(i);mR(g);$a(b|0)}else{b=c[f>>2]|0;if(b|0){if((c[a>>2]|0)!=(b|0))c[a>>2]=b;mR(b)}b=c[e>>2]|0;if(!b){l=d;return g|0}if((c[h>>2]|0)!=(b|0))c[h>>2]=b;mR(b);l=d;return g|0}return 0}function nj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0;e=l;l=l+32|0;f=e+12|0;g=e;c[f>>2]=0;h=f+4|0;c[h>>2]=0;c[f+8>>2]=0;i=c[b>>2]|0;j=(c[b+4>>2]|0)-i|0;b=i;do if(!j)k=10;else{if((j|0)>=0){o=0;i=Z(209,j|0)|0;m=o;o=0;if(!(m&1)){c[f>>2]=i;m=i+j|0;c[f+8>>2]=m;CT(i|0,b|0,j|0)|0;c[h>>2]=m;k=10;break}}else{o=0;la(271,f|0);o=0}m=Qa(7040)|0;i=z;n=c[f>>2]|0;if(n|0){if((c[h>>2]|0)!=(n|0))c[h>>2]=n;mR(n)}p=m;q=i}while(0);if((k|0)==10){c[g>>2]=0;j=g+4|0;c[j>>2]=0;c[g+8>>2]=0;b=c[d>>2]|0;i=(c[d+4>>2]|0)-b|0;d=b;do if(!i)k=19;else{if((i|0)>=0){o=0;b=Z(209,i|0)|0;m=o;o=0;if(!(m&1)){c[g>>2]=b;m=b+i|0;c[g+8>>2]=m;CT(b|0,d|0,i|0)|0;c[j>>2]=m;k=19;break}}else{o=0;la(271,g|0);o=0}m=Qa(7040)|0;b=z;n=c[g>>2]|0;if(n|0){if((c[j>>2]|0)!=(n|0))c[j>>2]=n;mR(n)}r=m;s=b}while(0);do if((k|0)==19){o=0;i=_(a|0,f|0,g|0)|0;d=o;o=0;if(d&1){d=Qa(7040)|0;b=z;m=c[g>>2]|0;if(!m){r=d;s=b;break}if((c[j>>2]|0)!=(m|0))c[j>>2]=m;mR(m);r=d;s=b;break}b=c[g>>2]|0;if(b|0){if((c[j>>2]|0)!=(b|0))c[j>>2]=b;mR(b)}b=c[f>>2]|0;if(!b){l=e;return i|0}if((c[h>>2]|0)!=(b|0))c[h>>2]=b;mR(b);l=e;return i|0}while(0);e=c[f>>2]|0;if(!e){p=r;q=s}else{if((c[h>>2]|0)!=(e|0))c[h>>2]=e;mR(e);p=r;q=s}}if((q|0)!=(Xb(7040)|0)){t=p;u=q;$a(t|0)}q=Ka(p|0)|0;o=0;la(273,q|0);o=0;q=Pa()|0;p=z;o=0;ka(3);s=o;o=0;if(s&1){s=Qa(0)|0;Id(s)}t=q;u=p;$a(t|0);return 0}function oj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1))return d|0;d=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){g=d;h=a;$a(g|0)}a=Ka(d|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;d=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=a;h=d;$a(g|0);return 0}function pj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1)?(o=0,a=Z(210,d|0)|0,d=o,o=0,!(d&1)):0)return a|0;a=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){g=a;h=d;$a(g|0)}d=Ka(a|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;a=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=d;h=a;$a(g|0);return 0}function qj(a){a=a|0;return 1440}function rj(a){a=a|0;var b=0,d=0;if(!a)return;b=c[a+24>>2]|0;if(b|0){d=a+28|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+12>>2]|0;if(b|0){d=a+16|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a>>2]|0;if(b|0){d=a+4|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}mR(a);return}function sj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;e=l;l=l+48|0;f=e+24|0;g=e+12|0;h=e;i=kR(36)|0;j=f+4|0;c[f>>2]=c[a>>2];k=a+4|0;c[j>>2]=c[k>>2];m=a+8|0;c[f+8>>2]=c[m>>2];c[m>>2]=0;c[k>>2]=0;c[a>>2]=0;a=g+4|0;c[g>>2]=c[b>>2];k=b+4|0;c[a>>2]=c[k>>2];m=b+8|0;c[g+8>>2]=c[m>>2];c[m>>2]=0;c[k>>2]=0;c[b>>2]=0;b=h+4|0;c[h>>2]=c[d>>2];k=d+4|0;c[b>>2]=c[k>>2];m=d+8|0;c[h+8>>2]=c[m>>2];c[m>>2]=0;c[k>>2]=0;c[d>>2]=0;o=0;oa(34,i|0,f|0,g|0,h|0);d=o;o=0;if(d&1){d=Pa()|0;k=c[h>>2]|0;if(k|0){if((c[b>>2]|0)!=(k|0))c[b>>2]=k;mR(k)}k=c[g>>2]|0;if(k|0){if((c[a>>2]|0)!=(k|0))c[a>>2]=k;mR(k)}k=c[f>>2]|0;if(!k){mR(i);$a(d|0)}if((c[j>>2]|0)!=(k|0))c[j>>2]=k;mR(k);mR(i);$a(d|0)}else{d=c[h>>2]|0;if(d|0){if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d)}d=c[g>>2]|0;if(d|0){if((c[a>>2]|0)!=(d|0))c[a>>2]=d;mR(d)}d=c[f>>2]|0;if(!d){l=e;return i|0}if((c[j>>2]|0)!=(d|0))c[j>>2]=d;mR(d);l=e;return i|0}return 0}function tj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=l;l=l+48|0;g=f+24|0;h=f+12|0;i=f;c[g>>2]=0;j=g+4|0;c[j>>2]=0;c[g+8>>2]=0;k=c[b>>2]|0;m=(c[b+4>>2]|0)-k|0;b=k;do if(!m)n=10;else{if((m|0)>=0){o=0;k=Z(209,m|0)|0;p=o;o=0;if(!(p&1)){c[g>>2]=k;p=k+m|0;c[g+8>>2]=p;CT(k|0,b|0,m|0)|0;c[j>>2]=p;n=10;break}}else{o=0;la(271,g|0);o=0}p=Qa(7040)|0;k=z;q=c[g>>2]|0;if(q|0){if((c[j>>2]|0)!=(q|0))c[j>>2]=q;mR(q)}r=p;s=k}while(0);if((n|0)==10){c[h>>2]=0;m=h+4|0;c[m>>2]=0;c[h+8>>2]=0;b=c[d>>2]|0;k=(c[d+4>>2]|0)-b|0;d=b;do if(!k)n=19;else{if((k|0)>=0){o=0;b=Z(209,k|0)|0;p=o;o=0;if(!(p&1)){c[h>>2]=b;p=b+k|0;c[h+8>>2]=p;CT(b|0,d|0,k|0)|0;c[m>>2]=p;n=19;break}}else{o=0;la(271,h|0);o=0}p=Qa(7040)|0;b=z;q=c[h>>2]|0;if(q|0){if((c[m>>2]|0)!=(q|0))c[m>>2]=q;mR(q)}t=p;u=b}while(0);if((n|0)==19){c[i>>2]=0;k=i+4|0;c[k>>2]=0;c[i+8>>2]=0;d=c[e>>2]|0;b=(c[e+4>>2]|0)-d|0;e=d;do if(!b)n=28;else{if((b|0)>=0){o=0;d=Z(209,b|0)|0;p=o;o=0;if(!(p&1)){c[i>>2]=d;p=d+b|0;c[i+8>>2]=p;CT(d|0,e|0,b|0)|0;c[k>>2]=p;n=28;break}}else{o=0;la(271,i|0);o=0}p=Qa(7040)|0;d=z;q=c[i>>2]|0;if(q|0){if((c[k>>2]|0)!=(q|0))c[k>>2]=q;mR(q)}v=p;w=d}while(0);do if((n|0)==28){o=0;b=$(a|0,g|0,h|0,i|0)|0;e=o;o=0;if(e&1){e=Qa(7040)|0;d=z;p=c[i>>2]|0;if(!p){v=e;w=d;break}if((c[k>>2]|0)!=(p|0))c[k>>2]=p;mR(p);v=e;w=d;break}d=c[i>>2]|0;if(d|0){if((c[k>>2]|0)!=(d|0))c[k>>2]=d;mR(d)}d=c[h>>2]|0;if(d|0){if((c[m>>2]|0)!=(d|0))c[m>>2]=d;mR(d)}d=c[g>>2]|0;if(!d){l=f;return b|0}if((c[j>>2]|0)!=(d|0))c[j>>2]=d;mR(d);l=f;return b|0}while(0);f=c[h>>2]|0;if(!f){t=v;u=w}else{if((c[m>>2]|0)!=(f|0))c[m>>2]=f;mR(f);t=v;u=w}}w=c[g>>2]|0;if(!w){r=t;s=u}else{if((c[j>>2]|0)!=(w|0))c[j>>2]=w;mR(w);r=t;s=u}}if((s|0)!=(Xb(7040)|0)){x=r;y=s;$a(x|0)}s=Ka(r|0)|0;o=0;la(273,s|0);o=0;s=Pa()|0;r=z;o=0;ka(3);u=o;o=0;if(u&1){u=Qa(0)|0;Id(u)}x=s;y=r;$a(x|0);return 0}function uj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1)?(o=0,a=Z(210,d|0)|0,d=o,o=0,!(d&1)):0)return a|0;a=Qa(7040)|0;d=z;if((d|0)!=(Xb(7040)|0)){g=a;h=d;$a(g|0)}d=Ka(a|0)|0;o=0;la(273,d|0);o=0;d=Pa()|0;a=z;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}g=d;h=a;$a(g|0);return 0}function vj(a){a=a|0;return 1480}function wj(a){a=a|0;var b=0,d=0;if(!a)return;b=c[a+12>>2]|0;if(b|0){d=a+16|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a>>2]|0;if(b|0){d=a+4|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}mR(a);return}function xj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=l;l=l+32|0;e=d+12|0;f=d;g=kR(24)|0;h=e+4|0;c[e>>2]=c[a>>2];i=a+4|0;c[h>>2]=c[i>>2];j=a+8|0;c[e+8>>2]=c[j>>2];c[j>>2]=0;c[i>>2]=0;c[a>>2]=0;a=f+4|0;c[f>>2]=c[b>>2];i=b+4|0;c[a>>2]=c[i>>2];j=b+8|0;c[f+8>>2]=c[j>>2];c[j>>2]=0;c[i>>2]=0;c[b>>2]=0;o=0;na(69,g|0,e|0,f|0);b=o;o=0;if(b&1){b=Pa()|0;i=c[f>>2]|0;if(i|0){if((c[a>>2]|0)!=(i|0))c[a>>2]=i;mR(i)}i=c[e>>2]|0;if(!i){mR(g);$a(b|0)}if((c[h>>2]|0)!=(i|0))c[h>>2]=i;mR(i);mR(g);$a(b|0)}else{b=c[f>>2]|0;if(b|0){if((c[a>>2]|0)!=(b|0))c[a>>2]=b;mR(b)}b=c[e>>2]|0;if(!b){l=d;return g|0}if((c[h>>2]|0)!=(b|0))c[h>>2]=b;mR(b);l=d;return g|0}return 0}function yj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0;e=l;l=l+32|0;f=e+12|0;g=e;c[f>>2]=0;h=f+4|0;c[h>>2]=0;c[f+8>>2]=0;i=c[b>>2]|0;j=(c[b+4>>2]|0)-i|0;b=i;do if(!j)k=10;else{if((j|0)>=0){o=0;i=Z(209,j|0)|0;m=o;o=0;if(!(m&1)){c[f>>2]=i;m=i+j|0;c[f+8>>2]=m;CT(i|0,b|0,j|0)|0;c[h>>2]=m;k=10;break}}else{o=0;la(271,f|0);o=0}m=Qa(7040)|0;i=z;n=c[f>>2]|0;if(n|0){if((c[h>>2]|0)!=(n|0))c[h>>2]=n;mR(n)}p=m;q=i}while(0);if((k|0)==10){c[g>>2]=0;j=g+4|0;c[j>>2]=0;c[g+8>>2]=0;b=c[d>>2]|0;i=(c[d+4>>2]|0)-b|0;d=b;do if(!i)k=19;else{if((i|0)>=0){o=0;b=Z(209,i|0)|0;m=o;o=0;if(!(m&1)){c[g>>2]=b;m=b+i|0;c[g+8>>2]=m;CT(b|0,d|0,i|0)|0;c[j>>2]=m;k=19;break}}else{o=0;la(271,g|0);o=0}m=Qa(7040)|0;b=z;n=c[g>>2]|0;if(n|0){if((c[j>>2]|0)!=(n|0))c[j>>2]=n;mR(n)}r=m;s=b}while(0);do if((k|0)==19){o=0;i=_(a|0,f|0,g|0)|0;d=o;o=0;if(d&1){d=Qa(7040)|0;b=z;m=c[g>>2]|0;if(!m){r=d;s=b;break}if((c[j>>2]|0)!=(m|0))c[j>>2]=m;mR(m);r=d;s=b;break}b=c[g>>2]|0;if(b|0){if((c[j>>2]|0)!=(b|0))c[j>>2]=b;mR(b)}b=c[f>>2]|0;if(!b){l=e;return i|0}if((c[h>>2]|0)!=(b|0))c[h>>2]=b;mR(b);l=e;return i|0}while(0);e=c[f>>2]|0;if(!e){p=r;q=s}else{if((c[h>>2]|0)!=(e|0))c[h>>2]=e;mR(e);p=r;q=s}}if((q|0)!=(Xb(7040)|0)){t=p;u=q;$a(t|0)}q=Ka(p|0)|0;o=0;la(273,q|0);o=0;q=Pa()|0;p=z;o=0;ka(3);s=o;o=0;if(s&1){s=Qa(0)|0;Id(s)}t=q;u=p;$a(t|0);return 0}function zj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1)?(o=0,a=Z(209,12)|0,f=o,o=0,!(f&1)):0){c[a>>2]=0;f=a+4|0;c[f>>2]=0;e=a+8|0;c[e>>2]=0;b=d+4|0;g=(c[b>>2]|0)-(c[d>>2]|0)|0;if(!g)return a|0;if((g|0)>=0){o=0;h=Z(209,g|0)|0;i=o;o=0;if(!(i&1)){c[f>>2]=h;c[a>>2]=h;c[e>>2]=h+g;g=c[d>>2]|0;d=(c[b>>2]|0)-g|0;if((d|0)<=0)return a|0;CT(h|0,g|0,d|0)|0;c[f>>2]=h+d;return a|0}}else{o=0;la(271,a|0);o=0}d=Qa(7040)|0;h=z;g=c[a>>2]|0;if(g|0){if((c[f>>2]|0)!=(g|0))c[f>>2]=g;mR(g)}mR(a);j=h;k=d}else{d=Qa(7040)|0;j=z;k=d}if((j|0)!=(Xb(7040)|0)){l=k;m=j;$a(l|0)}j=Ka(k|0)|0;o=0;la(273,j|0);o=0;j=Pa()|0;k=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}l=j;m=k;$a(l|0);return 0}function Aj(a){a=a|0;return 1520}function Bj(a){a=a|0;if(!a)return;os(a+24|0);os(a);mR(a);return}function Cj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=l;l=l+48|0;e=d+24|0;f=d;g=kR(48)|0;c[e>>2]=c[a>>2];h=a+4|0;c[e+4>>2]=c[h>>2];i=a+8|0;c[e+8>>2]=c[i>>2];c[i>>2]=0;c[h>>2]=0;c[a>>2]=0;h=a+12|0;c[e+12>>2]=c[h>>2];i=a+16|0;c[e+16>>2]=c[i>>2];j=a+20|0;c[e+20>>2]=c[j>>2];c[j>>2]=0;c[i>>2]=0;c[h>>2]=0;c[f>>2]=c[b>>2];h=b+4|0;c[f+4>>2]=c[h>>2];i=b+8|0;c[f+8>>2]=c[i>>2];c[i>>2]=0;c[h>>2]=0;c[b>>2]=0;h=b+12|0;c[f+12>>2]=c[h>>2];i=b+16|0;c[f+16>>2]=c[i>>2];j=b+20|0;c[f+20>>2]=c[j>>2];c[j>>2]=0;c[i>>2]=0;c[h>>2]=0;o=0;na(70,g|0,e|0,f|0);h=o;o=0;if(h&1){h=Pa()|0;os(f);os(e);mR(g);$a(h|0)}else{os(f);os(e);l=d;return g|0}return 0}function Dj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;d=l;l=l+48|0;e=d+24|0;f=d;o=0;ma(141,e|0,b|0);b=o;o=0;if(b&1){b=Qa(7040)|0;g=b;h=z}else{o=0;ma(141,f|0,c|0);c=o;o=0;do if(!(c&1)){o=0;b=_(a|0,e|0,f|0)|0;i=o;o=0;if(i&1){i=Qa(7040)|0;j=z;os(f);k=i;m=j;break}else{os(f);os(e);l=d;return b|0}}else{b=Qa(7040)|0;k=b;m=z}while(0);os(e);g=k;h=m}if((h|0)!=(Xb(7040)|0)){n=g;p=h;$a(n|0)}h=Ka(g|0)|0;o=0;la(273,h|0);o=0;h=Pa()|0;g=z;o=0;ka(3);m=o;o=0;if(m&1){m=Qa(0)|0;Id(m)}n=h;p=g;$a(n|0);return 0}function Ej(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;c[a>>2]=0;d=a+4|0;c[d>>2]=0;c[a+8>>2]=0;e=b+4|0;f=(c[e>>2]|0)-(c[b>>2]|0)|0;do if(f|0){if((f|0)>=0){o=0;g=Z(209,f|0)|0;h=o;o=0;if(!(h&1)){c[d>>2]=g;c[a>>2]=g;c[a+8>>2]=g+f;h=c[b>>2]|0;i=(c[e>>2]|0)-h|0;if((i|0)<=0)break;CT(g|0,h|0,i|0)|0;c[d>>2]=g+i;break}}else{o=0;la(271,a|0);o=0}i=Pa()|0;g=c[a>>2]|0;if(!g)$a(i|0);if((c[d>>2]|0)!=(g|0))c[d>>2]=g;mR(g);$a(i|0)}while(0);e=a+12|0;f=b+12|0;c[e>>2]=0;i=a+16|0;c[i>>2]=0;c[a+20>>2]=0;g=b+16|0;b=(c[g>>2]|0)-(c[f>>2]|0)|0;if(!b)return;if((b|0)>=0){o=0;h=Z(209,b|0)|0;j=o;o=0;if(!(j&1)){c[i>>2]=h;c[e>>2]=h;c[a+20>>2]=h+b;b=c[f>>2]|0;f=(c[g>>2]|0)-b|0;if((f|0)<=0)return;CT(h|0,b|0,f|0)|0;c[i>>2]=h+f;return}}else{o=0;la(271,e|0);o=0}f=Pa()|0;h=c[e>>2]|0;if(h|0){if((c[i>>2]|0)!=(h|0))c[i>>2]=h;mR(h)}h=c[a>>2]|0;if(!h)$a(f|0);if((c[d>>2]|0)!=(h|0))c[d>>2]=h;mR(h);$a(f|0)}function Fj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;do if(!(a&1)?(o=0,f=Z(209,24)|0,e=o,o=0,!(e&1)):0){o=0;ma(141,f|0,d|0);e=o;o=0;if(e&1){e=Qa(7040)|0;b=z;mR(f);g=b;h=e;break}else return f|0}else i=3;while(0);if((i|0)==3){i=Qa(7040)|0;g=z;h=i}if((g|0)!=(Xb(7040)|0)){j=h;k=g;$a(j|0)}g=Ka(h|0)|0;o=0;la(273,g|0);o=0;g=Pa()|0;h=z;o=0;ka(3);i=o;o=0;if(i&1){i=Qa(0)|0;Id(i)}j=g;k=h;$a(j|0);return 0}function Gj(a){a=a|0;return 1560}function Hj(a){a=a|0;var b=0,d=0;if(!a)return;b=c[a+24>>2]|0;if(b|0){d=a+28|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+12>>2]|0;if(b|0){d=a+16|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a>>2]|0;if(b|0){d=a+4|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}mR(a);return}function Ij(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;d=l;l=l+48|0;e=d+36|0;f=d+24|0;g=d+12|0;h=d;i=kR(36)|0;j=e+4|0;c[e>>2]=c[a>>2];k=a+4|0;c[j>>2]=c[k>>2];m=a+8|0;c[e+8>>2]=c[m>>2];c[m>>2]=0;c[k>>2]=0;c[a>>2]=0;a=f+4|0;c[f>>2]=c[b>>2];k=b+4|0;c[a>>2]=c[k>>2];m=b+8|0;c[f+8>>2]=c[m>>2];c[m>>2]=0;c[k>>2]=0;c[b>>2]=0;c[h>>2]=0;b=h+4|0;c[b>>2]=0;c[h+8>>2]=0;o=0;ma(140,g|0,h|0);k=o;o=0;do if(k&1){m=Pa()|0;n=z;p=m}else{o=0;oa(35,i|0,e|0,f|0,g|0);m=o;o=0;if(m&1){m=Pa()|0;q=z;r=c[g>>2]|0;if(!r){n=q;p=m;break}s=g+4|0;if((c[s>>2]|0)!=(r|0))c[s>>2]=r;mR(r);n=q;p=m;break}m=c[g>>2]|0;if(m|0){q=g+4|0;if((c[q>>2]|0)!=(m|0))c[q>>2]=m;mR(m)}m=c[h>>2]|0;if(m|0){if((c[b>>2]|0)!=(m|0))c[b>>2]=m;mR(m)}m=c[f>>2]|0;if(m|0){if((c[a>>2]|0)!=(m|0))c[a>>2]=m;mR(m)}m=c[e>>2]|0;if(!m){l=d;return i|0}if((c[j>>2]|0)!=(m|0))c[j>>2]=m;mR(m);l=d;return i|0}while(0);d=c[h>>2]|0;if(d|0){if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d)}d=c[f>>2]|0;if(d|0){if((c[a>>2]|0)!=(d|0))c[a>>2]=d;mR(d)}d=c[e>>2]|0;if(!d){mR(i);$a(p|0)}if((c[j>>2]|0)!=(d|0))c[j>>2]=d;mR(d);mR(i);$a(p|0);return 0}function Jj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0;e=l;l=l+32|0;f=e+12|0;g=e;c[f>>2]=0;h=f+4|0;c[h>>2]=0;c[f+8>>2]=0;i=c[b>>2]|0;j=(c[b+4>>2]|0)-i|0;b=i;do if(!j)k=10;else{if((j|0)>=0){o=0;i=Z(209,j|0)|0;m=o;o=0;if(!(m&1)){c[f>>2]=i;m=i+j|0;c[f+8>>2]=m;CT(i|0,b|0,j|0)|0;c[h>>2]=m;k=10;break}}else{o=0;la(271,f|0);o=0}m=Qa(7040)|0;i=z;n=c[f>>2]|0;if(n|0){if((c[h>>2]|0)!=(n|0))c[h>>2]=n;mR(n)}p=m;q=i}while(0);if((k|0)==10){c[g>>2]=0;j=g+4|0;c[j>>2]=0;c[g+8>>2]=0;b=c[d>>2]|0;i=(c[d+4>>2]|0)-b|0;d=b;do if(!i)k=19;else{if((i|0)>=0){o=0;b=Z(209,i|0)|0;m=o;o=0;if(!(m&1)){c[g>>2]=b;m=b+i|0;c[g+8>>2]=m;CT(b|0,d|0,i|0)|0;c[j>>2]=m;k=19;break}}else{o=0;la(271,g|0);o=0}m=Qa(7040)|0;b=z;n=c[g>>2]|0;if(n|0){if((c[j>>2]|0)!=(n|0))c[j>>2]=n;mR(n)}r=m;s=b}while(0);do if((k|0)==19){o=0;i=_(a|0,f|0,g|0)|0;d=o;o=0;if(d&1){d=Qa(7040)|0;b=z;m=c[g>>2]|0;if(!m){r=d;s=b;break}if((c[j>>2]|0)!=(m|0))c[j>>2]=m;mR(m);r=d;s=b;break}b=c[g>>2]|0;if(b|0){if((c[j>>2]|0)!=(b|0))c[j>>2]=b;mR(b)}b=c[f>>2]|0;if(!b){l=e;return i|0}if((c[h>>2]|0)!=(b|0))c[h>>2]=b;mR(b);l=e;return i|0}while(0);e=c[f>>2]|0;if(!e){p=r;q=s}else{if((c[h>>2]|0)!=(e|0))c[h>>2]=e;mR(e);p=r;q=s}}if((q|0)!=(Xb(7040)|0)){t=p;u=q;$a(t|0)}q=Ka(p|0)|0;o=0;la(273,q|0);o=0;q=Pa()|0;p=z;o=0;ka(3);s=o;o=0;if(s&1){s=Qa(0)|0;Id(s)}t=q;u=p;$a(t|0);return 0}function Kj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;e=l;l=l+48|0;f=e+24|0;g=e+12|0;h=e;i=kR(36)|0;j=f+4|0;c[f>>2]=c[a>>2];k=a+4|0;c[j>>2]=c[k>>2];m=a+8|0;c[f+8>>2]=c[m>>2];c[m>>2]=0;c[k>>2]=0;c[a>>2]=0;a=g+4|0;c[g>>2]=c[b>>2];k=b+4|0;c[a>>2]=c[k>>2];m=b+8|0;c[g+8>>2]=c[m>>2];c[m>>2]=0;c[k>>2]=0;c[b>>2]=0;b=h+4|0;c[h>>2]=c[d>>2];k=d+4|0;c[b>>2]=c[k>>2];m=d+8|0;c[h+8>>2]=c[m>>2];c[m>>2]=0;c[k>>2]=0;c[d>>2]=0;o=0;oa(35,i|0,f|0,g|0,h|0);d=o;o=0;if(d&1){d=Pa()|0;k=c[h>>2]|0;if(k|0){if((c[b>>2]|0)!=(k|0))c[b>>2]=k;mR(k)}k=c[g>>2]|0;if(k|0){if((c[a>>2]|0)!=(k|0))c[a>>2]=k;mR(k)}k=c[f>>2]|0;if(!k){mR(i);$a(d|0)}if((c[j>>2]|0)!=(k|0))c[j>>2]=k;mR(k);mR(i);$a(d|0)}else{d=c[h>>2]|0;if(d|0){if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d)}d=c[g>>2]|0;if(d|0){if((c[a>>2]|0)!=(d|0))c[a>>2]=d;mR(d)}d=c[f>>2]|0;if(!d){l=e;return i|0}if((c[j>>2]|0)!=(d|0))c[j>>2]=d;mR(d);l=e;return i|0}return 0}function Lj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=l;l=l+48|0;g=f+24|0;h=f+12|0;i=f;c[g>>2]=0;j=g+4|0;c[j>>2]=0;c[g+8>>2]=0;k=c[b>>2]|0;m=(c[b+4>>2]|0)-k|0;b=k;do if(!m)n=10;else{if((m|0)>=0){o=0;k=Z(209,m|0)|0;p=o;o=0;if(!(p&1)){c[g>>2]=k;p=k+m|0;c[g+8>>2]=p;CT(k|0,b|0,m|0)|0;c[j>>2]=p;n=10;break}}else{o=0;la(271,g|0);o=0}p=Qa(7040)|0;k=z;q=c[g>>2]|0;if(q|0){if((c[j>>2]|0)!=(q|0))c[j>>2]=q;mR(q)}r=p;s=k}while(0);if((n|0)==10){c[h>>2]=0;m=h+4|0;c[m>>2]=0;c[h+8>>2]=0;b=c[d>>2]|0;k=(c[d+4>>2]|0)-b|0;d=b;do if(!k)n=19;else{if((k|0)>=0){o=0;b=Z(209,k|0)|0;p=o;o=0;if(!(p&1)){c[h>>2]=b;p=b+k|0;c[h+8>>2]=p;CT(b|0,d|0,k|0)|0;c[m>>2]=p;n=19;break}}else{o=0;la(271,h|0);o=0}p=Qa(7040)|0;b=z;q=c[h>>2]|0;if(q|0){if((c[m>>2]|0)!=(q|0))c[m>>2]=q;mR(q)}t=p;u=b}while(0);if((n|0)==19){c[i>>2]=0;k=i+4|0;c[k>>2]=0;c[i+8>>2]=0;d=c[e>>2]|0;b=(c[e+4>>2]|0)-d|0;e=d;do if(!b)n=28;else{if((b|0)>=0){o=0;d=Z(209,b|0)|0;p=o;o=0;if(!(p&1)){c[i>>2]=d;p=d+b|0;c[i+8>>2]=p;CT(d|0,e|0,b|0)|0;c[k>>2]=p;n=28;break}}else{o=0;la(271,i|0);o=0}p=Qa(7040)|0;d=z;q=c[i>>2]|0;if(q|0){if((c[k>>2]|0)!=(q|0))c[k>>2]=q;mR(q)}v=p;w=d}while(0);do if((n|0)==28){o=0;b=$(a|0,g|0,h|0,i|0)|0;e=o;o=0;if(e&1){e=Qa(7040)|0;d=z;p=c[i>>2]|0;if(!p){v=e;w=d;break}if((c[k>>2]|0)!=(p|0))c[k>>2]=p;mR(p);v=e;w=d;break}d=c[i>>2]|0;if(d|0){if((c[k>>2]|0)!=(d|0))c[k>>2]=d;mR(d)}d=c[h>>2]|0;if(d|0){if((c[m>>2]|0)!=(d|0))c[m>>2]=d;mR(d)}d=c[g>>2]|0;if(!d){l=f;return b|0}if((c[j>>2]|0)!=(d|0))c[j>>2]=d;mR(d);l=f;return b|0}while(0);f=c[h>>2]|0;if(!f){t=v;u=w}else{if((c[m>>2]|0)!=(f|0))c[m>>2]=f;mR(f);t=v;u=w}}w=c[g>>2]|0;if(!w){r=t;s=u}else{if((c[j>>2]|0)!=(w|0))c[j>>2]=w;mR(w);r=t;s=u}}if((s|0)!=(Xb(7040)|0)){x=r;y=s;$a(x|0)}s=Ka(r|0)|0;o=0;la(273,s|0);o=0;s=Pa()|0;r=z;o=0;ka(3);u=o;o=0;if(u&1){u=Qa(0)|0;Id(u)}x=s;y=r;$a(x|0);return 0}\nfunction Pl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,na=0,oa=0,pa=0;e=l;l=l+304|0;f=e+156|0;g=e+296|0;h=e+152|0;i=e;j=e+140|0;c[b>>2]=0;k=b+4|0;c[k>>2]=0;c[b+8>>2]=0;m=f+60|0;n=f+8|0;c[f>>2]=4212;c[m>>2]=4232;c[f+4>>2]=0;o=0;ma(69,f+60|0,n|0);p=o;o=0;a:do if(p&1){q=Pa()|0;r=z;s=q;t=45}else{c[f+132>>2]=0;c[f+136>>2]=-1;c[f>>2]=9696;c[m>>2]=9716;o=0;la(216,n|0);q=o;o=0;do if(q&1){u=Pa()|0;v=z;w=u}else{c[n>>2]=7440;u=f+40|0;c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[u+12>>2]=0;c[f+56>>2]=8;o=0;ma(70,n|0,d|0);x=o;o=0;if(x&1){x=Pa()|0;y=z;if((a[u+11>>0]|0)<0)mR(c[u>>2]|0);vH(n);v=y;w=x;break};a[g>>0]=0;a[g+1>>0]=0;a[g+2>>0]=0;x=j+11|0;y=i+60|0;A=i+8|0;B=i+4|0;C=i+60|0;D=i+132|0;E=i+136|0;F=i+40|0;G=i+56|0;H=F+11|0;I=b+8|0;J=j+8|0;K=j+4|0;b:while(1){o=0;L=$(98,f|0,g|0,2)|0;M=o;o=0;if(M&1){t=46;break}if(c[L+(c[(c[L>>2]|0)+-12>>2]|0)+16>>2]&5|0){t=57;break}c[h>>2]=0;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;L=$F(g)|0;if(L>>>0>4294967279){t=14;break}if(L>>>0<11){a[x>>0]=L;if(!L)N=j;else{O=j;t=19}}else{M=L+16&-16;o=0;P=Z(209,M|0)|0;Q=o;o=0;if(Q&1){t=47;break}c[j>>2]=P;c[J>>2]=M|-2147483648;c[K>>2]=L;O=P;t=19}if((t|0)==19){t=0;CT(O|0,g|0,L|0)|0;N=O}a[N+L>>0]=0;c[i>>2]=4212;c[y>>2]=4232;c[B>>2]=0;o=0;ma(69,C|0,A|0);L=o;o=0;if(L&1){t=26;break}c[D>>2]=0;c[E>>2]=-1;c[i>>2]=9696;c[y>>2]=9716;o=0;la(216,A|0);L=o;o=0;if(L&1){t=27;break}c[A>>2]=7440;c[F>>2]=0;c[F+4>>2]=0;c[F+8>>2]=0;c[F+12>>2]=0;c[G>>2]=8;o=0;ma(70,A|0,j|0);L=o;o=0;if(L&1){t=23;break}L=i+(c[(c[i>>2]|0)+-12>>2]|0)+4|0;c[L>>2]=c[L>>2]&-75|8;o=0;_(114,i|0,h|0)|0;L=o;o=0;if(L&1){t=49;break}c[i>>2]=9696;c[y>>2]=9716;c[A>>2]=7440;if((a[H>>0]|0)<0)mR(c[F>>2]|0);vH(A);UH(i,9728);rH(y);if((a[x>>0]|0)<0)mR(c[j>>2]|0);L=c[h>>2]&255;P=c[k>>2]|0;M=c[I>>2]|0;Q=M;do if(P>>>0<M>>>0){a[P>>0]=L;c[k>>2]=(c[k>>2]|0)+1}else{R=c[b>>2]|0;S=P-R|0;T=S+1|0;U=R;if((T|0)<0){t=37;break b}V=Q-R|0;W=V<<1;X=V>>>0<1073741823?(W>>>0<T>>>0?T:W):2147483647;if(X){o=0;W=Z(209,X|0)|0;T=o;o=0;if(T&1){t=55;break b}else Y=W}else Y=0;W=Y+S|0;a[W>>0]=L;if((S|0)>0)CT(Y|0,U|0,S|0)|0;c[b>>2]=Y;c[k>>2]=W+1;c[I>>2]=Y+X;if(!R)break;mR(U)}while(0)}if((t|0)==14){o=0;la(276,j|0);o=0;t=47}else if((t|0)==23){I=Pa()|0;G=z;if((a[H>>0]|0)<0)mR(c[F>>2]|0);vH(A);aa=G;ba=I;t=28}else if((t|0)==26){I=Pa()|0;ca=z;da=I;t=48}else if((t|0)==27){I=Pa()|0;aa=z;ba=I;t=28}else if((t|0)==37){o=0;la(271,b|0);o=0;t=55}else if((t|0)==46){I=Pa()|0;ea=z;fa=I}else if((t|0)==49){I=Pa()|0;G=z;c[i>>2]=9696;c[y>>2]=9716;c[A>>2]=7440;if((a[H>>0]|0)<0)mR(c[F>>2]|0);vH(A);UH(i,9728);rH(y);ga=G;ha=I;t=52}else if((t|0)==57){c[f>>2]=9696;c[m>>2]=9716;c[n>>2]=7440;if((a[u+11>>0]|0)>=0){vH(n);UH(f,9728);rH(m);l=e;return}mR(c[u>>2]|0);vH(n);UH(f,9728);rH(m);l=e;return}if((t|0)==28){UH(i,9728);ca=aa;da=ba;t=48}else if((t|0)==47){I=Pa()|0;ia=z;ja=I;t=54}else if((t|0)==55){I=Pa()|0;ka=z;na=I;t=56}if((t|0)==48){rH(y);ga=ca;ha=da;t=52}if((t|0)==52)if((a[x>>0]|0)<0){mR(c[j>>2]|0);ia=ga;ja=ha;t=54}else{ia=ga;ja=ha;t=54}if((t|0)==54){ka=ia;na=ja;t=56}if((t|0)==56){ea=ka;fa=na}c[f>>2]=9696;c[m>>2]=9716;c[n>>2]=7440;if((a[u+11>>0]|0)<0)mR(c[u>>2]|0);vH(n);UH(f,9728);rH(m);oa=ea;pa=fa;break a}while(0);UH(f,9728);r=v;s=w;t=45}while(0);if((t|0)==45){rH(m);oa=r;pa=s}s=c[b>>2]|0;if(!s)$a(pa|0);if((c[k>>2]|0)!=(s|0))c[k>>2]=s;mR(s);$a(pa|0)}function Ql(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=9696;d=b+60|0;c[d>>2]=9716;e=b+8|0;c[e>>2]=7440;f=b+40|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);vH(e);UH(b,9728);rH(d);return}function Rl(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=9696;d=b+60|0;c[d>>2]=9716;e=b+8|0;c[e>>2]=7440;f=b+40|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);vH(e);UH(b,9728);rH(d);mR(b);return}function Sl(b){b=b|0;var d=0,e=0,f=0;d=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;c[d>>2]=9696;b=d+60|0;c[b>>2]=9716;e=d+8|0;c[e>>2]=7440;f=d+40|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);vH(e);UH(d,9728);rH(b);return}function Tl(b){b=b|0;var d=0,e=0,f=0;d=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;c[d>>2]=9696;b=d+60|0;c[b>>2]=9716;e=d+8|0;c[e>>2]=7440;f=d+40|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);vH(e);UH(d,9728);rH(b);mR(d);return}function Ul(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0;g=l;l=l+160|0;h=g+136|0;i=g;j=i+56|0;k=i+4|0;c[i>>2]=20;c[j>>2]=40;o=0;ma(69,i+56|0,k|0);m=o;o=0;if(m&1){m=Pa()|0;n=z;p=m;rH(j);$a(p|0)}c[i+128>>2]=0;c[i+132>>2]=-1;c[i>>2]=7388;c[j>>2]=7408;o=0;la(216,k|0);m=o;o=0;do if(m&1){q=Pa()|0;r=z;s=q}else{c[k>>2]=7440;q=i+36|0;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;c[i+52>>2]=16;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;o=0;ma(70,k|0,h|0);t=o;o=0;if(t&1){t=Pa()|0;u=z;if((a[h+11>>0]|0)<0)mR(c[h>>2]|0);if((a[q+11>>0]|0)<0)mR(c[q>>2]|0);vH(k);r=u;s=t;break}if((a[h+11>>0]|0)<0)mR(c[h>>2]|0);c[i+(c[(c[i>>2]|0)+-12>>2]|0)+76>>2]=48;t=e+4|0;u=c[e>>2]|0;v=u;a:do if((c[t>>2]|0)==(u|0))w=20;else{if(f){x=0;y=v}else{A=0;B=v;while(1){C=i+(c[(c[i>>2]|0)+-12>>2]|0)+4|0;c[C>>2]=c[C>>2]&-75|8;c[i+(c[(c[i>>2]|0)+-12>>2]|0)+12>>2]=2;o=0;_(115,i|0,d[B+A>>0]|0)|0;C=o;o=0;if(C&1)break a;A=A+1|0;B=c[e>>2]|0;if(A>>>0>=((c[t>>2]|0)-B|0)>>>0){w=20;break a}}}while(1){B=i+(c[(c[i>>2]|0)+-12>>2]|0)+4|0;c[B>>2]=c[B>>2]&-75|8;c[i+(c[(c[i>>2]|0)+-12>>2]|0)+12>>2]=2;o=0;_(115,i|0,d[y+x>>0]|0)|0;B=o;o=0;if(B&1)break a;x=x+1|0;o=0;$(53,i|0,((x&15|0)==0?69564:69566)|0,1)|0;B=o;o=0;if(B&1)break a;y=c[e>>2]|0;if(x>>>0>=((c[t>>2]|0)-y|0)>>>0){w=20;break}}}while(0);if((w|0)==20?(o=0,ma(71,b|0,k|0),t=o,o=0,!(t&1)):0){c[i>>2]=7388;c[j>>2]=7408;c[k>>2]=7440;if((a[q+11>>0]|0)>=0){vH(k);ZH(i,7420);rH(j);l=g;return}mR(c[q>>2]|0);vH(k);ZH(i,7420);rH(j);l=g;return}t=Pa()|0;c[i>>2]=7388;c[j>>2]=7408;c[k>>2]=7440;if((a[q+11>>0]|0)>=0){vH(k);ZH(i,7420);rH(j);$a(t|0)}mR(c[q>>2]|0);vH(k);ZH(i,7420);rH(j);$a(t|0)}while(0);ZH(i,7420);n=r;p=s;rH(j);$a(p|0)}function Vl(a){a=a|0;It(a);return}function Wl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=l;l=l+32|0;e=d+20|0;f=d+16|0;g=d+12|0;h=d+8|0;i=d+4|0;j=d;c[h>>2]=c[a+4>>2];c[i>>2]=c[b>>2];c[j>>2]=c[b+4>>2];c[g>>2]=c[h>>2];c[f>>2]=c[i>>2];c[e>>2]=c[j>>2];Xl(a,g,f,e)|0;l=d;return}function Xl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=c[b>>2]|0;h=g;i=(c[d>>2]|0)-h|0;d=g+i|0;j=c[e>>2]|0;k=c[f>>2]|0;f=k-j|0;l=j;j=k;if((f|0)<=0){m=d;return m|0}n=b+8|0;o=c[n>>2]|0;p=b+4|0;q=c[p>>2]|0;r=q;if((f|0)<=(o-r|0)){s=r-d|0;if((f|0)>(s|0)){t=l+s|0;u=t;if((t|0)==(j|0))v=q;else{w=t;t=q;while(1){a[t>>0]=a[w>>0]|0;w=w+1|0;x=(c[p>>2]|0)+1|0;c[p>>2]=x;if((w|0)==(j|0)){v=x;break}else t=x}}if((s|0)>0){y=u;z=v}else{m=d;return m|0}}else{y=k;z=q}k=z-(d+f)|0;v=d+k|0;if(v>>>0<q>>>0){u=v;v=z;do{a[v>>0]=a[u>>0]|0;u=u+1|0;v=(c[p>>2]|0)+1|0;c[p>>2]=v}while((u|0)!=(q|0))}if(k|0)DT(z+(0-k)|0,d|0,k|0)|0;k=c[e>>2]|0;e=y;if((k|0)==(e|0)){m=d;return m|0}else{A=d;B=k}while(1){a[A>>0]=a[B>>0]|0;B=B+1|0;if((B|0)==(e|0)){m=d;break}else A=A+1|0}return m|0}A=r-h+f|0;if((A|0)<0)CP(b);f=o-h|0;h=f<<1;o=f>>>0<1073741823?(h>>>0<A>>>0?A:h):2147483647;h=d;if(!o)C=0;else C=kR(o)|0;A=C+i|0;i=A;f=C+o|0;if((l|0)==(j|0)){D=i;E=g}else{g=i;i=l;l=A;do{a[l>>0]=a[i>>0]|0;l=g+1|0;g=l;i=i+1|0}while((i|0)!=(j|0));D=g;E=c[b>>2]|0}g=h-E|0;j=A+(0-g)|0;if((g|0)>0)CT(j|0,E|0,g|0)|0;g=(c[p>>2]|0)-h|0;if((g|0)>0){h=D;CT(h|0,d|0,g|0)|0;F=h+g|0;G=c[b>>2]|0}else{F=D;G=E}c[b>>2]=j;c[p>>2]=F;c[n>>2]=f;if(!G){m=A;return m|0}mR(G);m=A;return m|0}function Yl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=l;l=l+16|0;g=f;h=d+4|0;i=c[h>>2]|0;j=c[d>>2]|0;k=j;if((i-j|0)>>>0<e>>>0){c[b>>2]=j;c[d>>2]=0;c[b+4>>2]=i;c[h>>2]=0;i=d+8|0;c[b+8>>2]=c[i>>2];c[i>>2]=0;l=f;return}i=k+e|0;c[g>>2]=0;j=g+4|0;c[j>>2]=0;c[g+8>>2]=0;m=(e|0)==0;do if(m)n=0;else{if((e|0)>=0){o=0;p=Z(209,e|0)|0;q=o;o=0;if(!(q&1)){c[j>>2]=p;c[g>>2]=p;c[g+8>>2]=p+e;q=k;r=p;do{a[r>>0]=a[q>>0]|0;q=q+1|0;r=(c[j>>2]|0)+1|0;c[j>>2]=r}while((q|0)!=(i|0));q=r;p=c[d>>2]|0;s=p+e|0;if(m){n=q;break}t=c[h>>2]|0;u=t-s|0;if(!u)v=t;else{DT(p|0,s|0,u|0)|0;v=c[h>>2]|0}s=p+u|0;if((v|0)==(s|0)){n=q;break}c[h>>2]=s;n=q;break}}else{o=0;la(271,g|0);o=0}q=Pa()|0;s=c[g>>2]|0;if(!s)$a(q|0);if((c[j>>2]|0)!=(s|0))c[j>>2]=s;mR(s);$a(q|0)}while(0);c[b>>2]=c[g>>2];c[b+4>>2]=n;c[b+8>>2]=c[g+8>>2];l=f;return}function Zl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;g=l;l=l+16|0;h=g;i=Cm(a)|0;j=cr(i)|0;do if(kr(i)|0)if(j>>>0>f>>>0){k=j+-1|0;break}else{k=f+-1-((f>>>0)%(j>>>0)|0)|0;break}else k=f;while(0);_l(a,k);Wm(a);do if(e){vm(h,a);o=0;ma(154,d|0,h|0);f=o;o=0;if(!(f&1)){f=c[h>>2]|0;if(f|0){j=h+4|0;if((c[j>>2]|0)!=(f|0))c[j>>2]=f;mR(f)}break}f=Pa()|0;j=z;m=c[h>>2]|0;if(m|0){n=h+4|0;if((c[n>>2]|0)!=(m|0))c[n>>2]=m;mR(m)}p=j;q=f;$a(q|0)}while(0);c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;o=0;pa(21,b|0,d|0,i|0,k|0,h|0);h=o;o=0;if(!(h&1)){nn(a);l=g;return}g=Pa()|0;p=z;q=g;$a(q|0)}function _l(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;e=l;l=l+32|0;f=e+12|0;g=e;if((d|0)<0){h=Ja(24)|0;o=0;na(73,h|0,3,69568);i=o;o=0;if(!(i&1))Xa(h|0,4424,56);i=Pa()|0;j=z;Sa(h|0);k=j;m=i;$a(m|0)}i=xm(b)|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;b=g+11|0;a[b>>0]=9;j=g;h=69591;n=j+9|0;do{a[j>>0]=a[h>>0]|0;j=j+1|0;h=h+1|0}while((j|0)<(n|0));a[g+9>>0]=0;o=0;ma(155,f|0,g|0);h=o;o=0;do if(h&1){j=Pa()|0;p=z;q=j}else{o=0;na(29,i|0,f|0,d|0);j=o;o=0;if(j&1){j=Pa()|0;n=z;r=c[f>>2]|0;if(!r){p=n;q=j;break}s=f+4|0;if((c[s>>2]|0)!=(r|0))c[s>>2]=r;mR(r);p=n;q=j;break}j=c[f>>2]|0;if(j|0){n=f+4|0;if((c[n>>2]|0)!=(j|0))c[n>>2]=j;mR(j)}if((a[b>>0]|0)>=0){l=e;return}mR(c[g>>2]|0);l=e;return}while(0);if((a[b>>0]|0)<0)mR(c[g>>2]|0);k=p;m=q;$a(m|0)}function $l(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,_=0,$=0,aa=0,ba=0;h=l;l=l+80|0;i=h+60|0;j=h+48|0;k=h+36|0;m=h+24|0;n=h+12|0;p=h;q=dr(e)|0;c[i>>2]=0;r=i+4|0;c[r>>2]=0;c[i+8>>2]=0;a:do if(q|0){if((q|0)>=0){o=0;s=Z(209,q|0)|0;t=o;o=0;if(!(t&1)){c[r>>2]=s;c[i>>2]=s;c[i+8>>2]=s+q;t=q;u=s;while(1){a[u>>0]=0;u=(c[r>>2]|0)+1|0;c[r>>2]=u;t=t+-1|0;if(!t)break a}}}else{o=0;la(271,i|0);o=0}t=Pa()|0;u=c[i>>2]|0;if(!u)$a(t|0);if((c[r>>2]|0)!=(u|0))c[r>>2]=u;mR(u);$a(t|0)}while(0);o=0;ma(114,j|0,e|0);q=o;o=0;if(!(q&1)){c[k>>2]=0;q=k+4|0;c[q>>2]=0;c[k+8>>2]=0;t=c[g>>2]|0;u=(c[g+4>>2]|0)-t|0;g=t;do if(!u)v=18;else{if((u|0)>=0){o=0;t=Z(209,u|0)|0;s=o;o=0;if(!(s&1)){c[q>>2]=t;c[k>>2]=t;s=t+u|0;c[k+8>>2]=s;CT(t|0,g|0,u|0)|0;c[q>>2]=s;v=18;break}}else{o=0;la(271,k|0);o=0}s=Pa()|0;t=z;w=c[k>>2]|0;if(w|0){if((c[q>>2]|0)!=(w|0))c[q>>2]=w;mR(w)}x=t;y=s}while(0);if((v|0)==18){u=m+4|0;g=m+4|0;s=m+8|0;t=j+4|0;w=n+4|0;A=n+8|0;B=m+4|0;C=p+4|0;D=p+4|0;E=m+8|0;b:while(1){while(1){o=0;F=Z(c[c[b>>2]>>2]|0,b|0)|0;G=o;o=0;if(G&1){v=36;break b}if(!F)break;if(((c[q>>2]|0)-(c[k>>2]|0)|0)>>>0>=f>>>0)break;o=0;ma(c[(c[b>>2]|0)+4>>2]|0,m|0,b|0);F=o;o=0;if(F&1){v=37;break b}o=0;ma(156,k|0,m|0);F=o;o=0;if(F&1){v=38;break b}F=c[m>>2]|0;if(F|0){if((c[u>>2]|0)!=(F|0))c[u>>2]=F;mR(F)}}while(1){F=c[q>>2]|0;G=c[k>>2]|0;if((F-G|0)>>>0<f>>>0){if((G|0)==(F|0))break;o=0;F=Z(c[c[b>>2]>>2]|0,b|0)|0;G=o;o=0;if(G&1){v=36;break b}if(F)break}F=c[i>>2]|0;G=(c[r>>2]|0)-F|0;c[m>>2]=0;c[g>>2]=0;c[s>>2]=0;H=c[j>>2]|0;I=(c[t>>2]|0)-H|0;J=H;H=F;if(I|0){if((I|0)<0){v=49;break b}o=0;F=Z(209,I|0)|0;K=o;o=0;if(K&1){v=51;break b}c[g>>2]=F;c[m>>2]=F;K=F+I|0;c[E>>2]=K;CT(F|0,J|0,I|0)|0;c[g>>2]=K;if(((G|0?(I=G+-1|0,J=K+-1|0,a[J>>0]=a[J>>0]^a[H+I>>0],(I|0)!=0&(F|0)!=(J|0)):0)?(I=G+-2|0,K=J+-1|0,a[K>>0]=a[K>>0]^a[H+I>>0],(F|0)!=(K|0)&(I|0)!=0):0)?(I=G+-3|0,G=K+-1|0,a[G>>0]=a[G>>0]^a[H+I>>0],(F|0)!=(G|0)&(I|0)!=0):0){H=I;I=G;do{H=H+-1|0;I=I+-1|0;a[I>>0]=a[I>>0]^a[(c[i>>2]|0)+H>>0]}while((F|0)!=(I|0)&(H|0)!=0)}}o=0;ma(115,e|0,m|0);H=o;o=0;if(H&1){v=92;break b}H=c[m>>2]|0;if(H|0){if((c[g>>2]|0)!=(H|0))c[g>>2]=H;mR(H)}o=0;la(257,e|0);H=o;o=0;if(H&1){v=36;break b}o=0;na(81,m|0,k|0,f|0);H=o;o=0;if(H&1){v=97;break b}c[n>>2]=0;c[w>>2]=0;c[A>>2]=0;o=0;na(52,p|0,e|0,m|0);H=o;o=0;if(H&1){v=98;break b}o=0;ma(156,n|0,p|0);H=o;o=0;if(H&1){v=99;break b}H=c[p>>2]|0;if(H|0){if((c[D>>2]|0)!=(H|0))c[D>>2]=H;mR(H)}o=0;ma(121,p|0,e|0);H=o;o=0;if(H&1){v=104;break b}o=0;ma(156,n|0,p|0);H=o;o=0;if(H&1){v=105;break b}H=c[p>>2]|0;if(H|0){if((c[C>>2]|0)!=(H|0))c[C>>2]=H;mR(H)}H=c[r>>2]|0;if((c[i>>2]|0)!=(H|0)){I=H;do{I=I+-1|0;H=(a[I>>0]|0)+1<<24>>24;a[I>>0]=H}while(!(H<<24>>24?1:(c[i>>2]|0)==(I|0)))}o=0;ma(154,d|0,n|0);I=o;o=0;if(I&1){v=110;break b}I=c[n>>2]|0;if(I|0){if((c[w>>2]|0)!=(I|0))c[w>>2]=I;mR(I)}I=c[m>>2]|0;if(I|0){if((c[B>>2]|0)!=(I|0))c[B>>2]=I;mR(I)}}o=0;I=Z(c[c[b>>2]>>2]|0,b|0)|0;H=o;o=0;if(H&1){v=36;break}if(!I){v=122;break}}switch(v|0){case 36:{b=Pa()|0;L=z;M=b;break}case 37:{b=Pa()|0;N=z;O=b;v=42;break}case 38:{b=Pa()|0;d=z;e=c[m>>2]|0;if(!e){N=d;O=b;v=42}else{if((c[u>>2]|0)!=(e|0))c[u>>2]=e;mR(e);N=d;O=b;v=42}break}case 49:{o=0;la(271,m|0);o=0;b=Pa()|0;d=z;e=c[m>>2]|0;if(!e){P=b;Q=d;v=91}else{if((c[g>>2]|0)!=(e|0))c[g>>2]=e;mR(e);P=b;Q=d;v=91}break}case 51:{P=Pa()|0;Q=z;v=91;break}case 92:{d=Pa()|0;b=z;e=c[m>>2]|0;if(!e){R=b;S=d;v=96}else{if((c[g>>2]|0)!=(e|0))c[g>>2]=e;mR(e);R=b;S=d;v=96}break}case 97:{d=Pa()|0;T=z;U=d;v=119;break}case 98:{d=Pa()|0;V=z;W=d;v=103;break}case 99:{d=Pa()|0;b=z;e=c[p>>2]|0;if(!e){V=b;W=d;v=103}else{if((c[D>>2]|0)!=(e|0))c[D>>2]=e;mR(e);V=b;W=d;v=103}break}case 104:{d=Pa()|0;X=z;Y=d;v=109;break}case 105:{d=Pa()|0;b=z;e=c[p>>2]|0;if(!e){X=b;Y=d;v=109}else{if((c[C>>2]|0)!=(e|0))c[C>>2]=e;mR(e);X=b;Y=d;v=109}break}case 110:{d=Pa()|0;_=z;$=d;v=111;break}case 122:{d=c[k>>2]|0;if(d|0){if((c[q>>2]|0)!=(d|0))c[q>>2]=d;mR(d)}d=c[j>>2]|0;if(d|0){if((c[t>>2]|0)!=(d|0))c[t>>2]=d;mR(d)}d=c[i>>2]|0;if(!d){l=h;return}if((c[r>>2]|0)!=(d|0))c[r>>2]=d;mR(d);l=h;return}}if((v|0)==42){L=N;M=O}else if((v|0)==91){R=Q;S=P;v=96}else if((v|0)==103){_=V;$=W;v=111}else if((v|0)==109){_=X;$=Y;v=111}if((v|0)==96){L=R;M=S}else if((v|0)==111){S=c[n>>2]|0;if(S|0){if((c[w>>2]|0)!=(S|0))c[w>>2]=S;mR(S)}S=c[m>>2]|0;if(!S){T=_;U=$;v=119}else{if((c[B>>2]|0)!=(S|0))c[B>>2]=S;mR(S);T=_;U=$;v=119}}if((v|0)==119){L=T;M=U}U=c[k>>2]|0;if(!U){x=L;y=M}else{if((c[q>>2]|0)!=(U|0))c[q>>2]=U;mR(U);x=L;y=M}}M=c[j>>2]|0;if(!M){aa=x;ba=y}else{L=j+4|0;if((c[L>>2]|0)!=(M|0))c[L>>2]=M;mR(M);aa=x;ba=y}}else{y=Pa()|0;aa=z;ba=y}y=c[i>>2]|0;if(!y)$a(ba|0);if((c[r>>2]|0)!=(y|0))c[r>>2]=y;mR(y);$a(ba|0)}function am(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0;h=l;l=l+16|0;i=h;bm(i,a,b);o=0;j=aa(44,a|0,e|0,f|0,g|0)|0;g=o;o=0;if((((!(g&1)?(o=0,g=Z(216,a|0)|0,f=o,o=0,!(f&1)):0)?(o=0,f=Z(157,j|0)|0,e=o,o=0,!(e&1)):0)?(o=0,e=Z(165,j|0)|0,k=o,o=0,!(k&1)):0)?(o=0,k=Z(161,j|0)|0,m=o,o=0,!(m&1)):0){if(e)n=O(f,~~+N(+(+(g>>>0)/+(f>>>0)))>>>0)|0;else n=g;o=0;pa(21,b|0,d|0,j|0,n+k|0,i|0);k=o;o=0;if(!(k&1)?(o=0,la(288,a|0),a=o,o=0,!(a&1)):0){a=c[i>>2]|0;if(!a){l=h;return}k=i+4|0;if((c[k>>2]|0)!=(a|0))c[k>>2]=a;mR(a);l=h;return}}h=Pa()|0;a=c[i>>2]|0;if(!a)$a(h|0);k=i+4|0;if((c[k>>2]|0)!=(a|0))c[k>>2]=a;mR(a);$a(h|0)}function bm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0;e=l;l=l+64|0;f=e+56|0;g=e+52|0;h=e+48|0;i=e+28|0;j=e+16|0;k=e+44|0;m=e+40|0;n=e+12|0;p=e+8|0;q=e+4|0;r=e;c[i>>2]=0;s=i+4|0;c[s>>2]=0;c[i+8>>2]=0;t=j+4|0;while(1){o=0;u=Z(c[c[d>>2]>>2]|0,d|0)|0;v=o;o=0;if(v&1){w=11;break}if(!u){w=18;break}o=0;ma(c[(c[d>>2]|0)+4>>2]|0,j|0,d|0);u=o;o=0;if(u&1){w=12;break}c[k>>2]=c[s>>2];c[m>>2]=c[j>>2];c[n>>2]=c[t>>2];o=0;c[h>>2]=c[k>>2];c[g>>2]=c[m>>2];c[f>>2]=c[n>>2];aa(45,i|0,h|0,g|0,f|0)|0;u=o;o=0;if(u&1){w=13;break}u=c[j>>2]|0;if(u|0){if((c[t>>2]|0)!=(u|0))c[t>>2]=u;mR(u)}if(((c[s>>2]|0)-(c[i>>2]|0)|0)>>>0>=16){w=18;break}}a:do if((w|0)==11){n=Pa()|0;x=n;y=z}else if((w|0)==12){n=Pa()|0;A=n;B=z;w=17}else if((w|0)==13){n=Pa()|0;m=z;k=c[j>>2]|0;if(!k){A=n;B=m;w=17}else{if((c[t>>2]|0)!=(k|0))c[t>>2]=k;mR(k);A=n;B=m;w=17}}else if((w|0)==18){o=0;m=Z(93,i|0)|0;n=o;o=0;b:do if(!(n&1)){if(!m){c[a>>2]=c[i>>2];c[a+4>>2]=c[s>>2];k=i+8|0;c[a+8>>2]=c[k>>2];c[k>>2]=0;c[s>>2]=0;c[i>>2]=0;l=e;return}c:do if(((c[s>>2]|0)-(c[i>>2]|0)|0)>>>0<m>>>0){k=j+4|0;while(1){o=0;u=Z(c[c[d>>2]>>2]|0,d|0)|0;v=o;o=0;if(v&1)break b;if(!u)break c;o=0;ma(c[(c[d>>2]|0)+4>>2]|0,j|0,d|0);u=o;o=0;if(u&1){w=32;break}c[p>>2]=c[s>>2];c[q>>2]=c[j>>2];c[r>>2]=c[k>>2];o=0;c[h>>2]=c[p>>2];c[g>>2]=c[q>>2];c[f>>2]=c[r>>2];aa(45,i|0,h|0,g|0,f|0)|0;u=o;o=0;if(u&1){w=33;break}u=c[j>>2]|0;if(u|0){if((c[k>>2]|0)!=(u|0))c[k>>2]=u;mR(u)}if(((c[s>>2]|0)-(c[i>>2]|0)|0)>>>0>=m>>>0)break c}if((w|0)==32){u=Pa()|0;C=u;D=z}else if((w|0)==33){u=Pa()|0;v=z;E=c[j>>2]|0;if(!E){C=u;D=v}else{if((c[k>>2]|0)!=(E|0))c[k>>2]=E;mR(E);C=u;D=v}}x=C;y=D;break a}while(0);o=0;na(82,a|0,b|0,i|0);v=o;o=0;if(!(v&1)){v=c[i>>2]|0;if(!v){l=e;return}if((c[s>>2]|0)!=(v|0))c[s>>2]=v;mR(v);l=e;return}}while(0);m=Pa()|0;x=m;y=z}while(0);if((w|0)==17){x=A;y=B}B=c[i>>2]|0;if(!B)$a(x|0);if((c[s>>2]|0)!=(B|0))c[s>>2]=B;mR(B);$a(x|0)}function cm(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;d=l;l=l+32|0;e=d+12|0;f=d;g=ym(b)|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;b=f+11|0;a[b>>0]=9;h=f;i=69591;j=h+9|0;do{a[h>>0]=a[i>>0]|0;h=h+1|0;i=i+1|0}while((h|0)<(j|0));a[f+9>>0]=0;o=0;ma(155,e|0,f|0);i=o;o=0;do if(i&1){h=Pa()|0;k=z;m=h}else{o=0;h=_(36,g|0,e|0)|0;j=o;o=0;if(j&1){j=Pa()|0;n=z;p=c[e>>2]|0;if(!p){k=n;m=j;break}q=e+4|0;if((c[q>>2]|0)!=(p|0))c[q>>2]=p;mR(p);k=n;m=j;break}j=c[e>>2]|0;if(j|0){n=e+4|0;if((c[n>>2]|0)!=(j|0))c[n>>2]=j;mR(j)}if((a[b>>0]|0)<0)mR(c[f>>2]|0);if((h|0)>=0){l=d;return h|0}h=Ja(24)|0;o=0;na(73,h|0,4,69601);j=o;o=0;if(!(j&1))Xa(h|0,4424,56);j=Pa()|0;n=z;Sa(h|0);r=n;s=j;$a(s|0)}while(0);if((a[b>>0]|0)<0)mR(c[f>>2]|0);r=k;s=m;$a(s|0);return 0}function dm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;g=c[b>>2]|0;h=g;i=(c[d>>2]|0)-h|0;d=g+i|0;j=c[e>>2]|0;k=c[f>>2]|0;f=k-j|0;l=j;j=k;if((f|0)<=0){m=d;return m|0}n=b+8|0;o=c[n>>2]|0;p=b+4|0;q=c[p>>2]|0;r=q;if((f|0)<=(o-r|0)){s=r-d|0;if((f|0)>(s|0)){t=l+s|0;u=t;if((t|0)==(j|0))v=q;else{w=t;t=q;while(1){a[t>>0]=a[w>>0]|0;w=w+1|0;x=(c[p>>2]|0)+1|0;c[p>>2]=x;if((w|0)==(j|0)){v=x;break}else t=x}}if((s|0)>0){y=u;z=v}else{m=d;return m|0}}else{y=k;z=q}k=z-(d+f)|0;v=d+k|0;if(v>>>0<q>>>0){u=v;v=z;do{a[v>>0]=a[u>>0]|0;u=u+1|0;v=(c[p>>2]|0)+1|0;c[p>>2]=v}while((u|0)!=(q|0))}if(k|0)DT(z+(0-k)|0,d|0,k|0)|0;k=c[e>>2]|0;e=y-k|0;if(!e){m=d;return m|0}DT(d|0,k|0,e|0)|0;m=d;return m|0}e=r-h+f|0;if((e|0)<0)CP(b);f=o-h|0;h=f<<1;o=f>>>0<1073741823?(h>>>0<e>>>0?e:h):2147483647;h=d;if(!o)A=0;else A=kR(o)|0;e=A+i|0;i=e;f=A+o|0;if((l|0)==(j|0)){B=i;C=g}else{g=i;i=l;l=e;do{a[l>>0]=a[i>>0]|0;l=g+1|0;g=l;i=i+1|0}while((i|0)!=(j|0));B=g;C=c[b>>2]|0}g=h-C|0;j=e+(0-g)|0;if((g|0)>0)CT(j|0,C|0,g|0)|0;g=(c[p>>2]|0)-h|0;if((g|0)>0){h=B;CT(h|0,d|0,g|0)|0;D=h+g|0;E=c[b>>2]|0}else{D=B;E=C}c[b>>2]=j;c[p>>2]=D;c[n>>2]=f;if(!E){m=e;return m|0}mR(E);m=e;return m|0}function em(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;f=l;l=l+16|0;g=f;bm(g,a,b);o=0;h=_(116,a|0,e|0)|0;e=o;o=0;if((((!(e&1)?(o=0,e=Z(216,a|0)|0,i=o,o=0,!(i&1)):0)?(o=0,i=Z(157,h|0)|0,j=o,o=0,!(j&1)):0)?(o=0,j=Z(165,h|0)|0,k=o,o=0,!(k&1)):0)?(o=0,k=Z(161,h|0)|0,m=o,o=0,!(m&1)):0){if(j)n=O(i,~~+N(+(+(e>>>0)/+(i>>>0)))>>>0)|0;else n=e;o=0;pa(21,b|0,d|0,h|0,n+k|0,g|0);k=o;o=0;if(!(k&1)?(o=0,la(288,a|0),a=o,o=0,!(a&1)):0){a=c[g>>2]|0;if(!a){l=f;return}k=g+4|0;if((c[k>>2]|0)!=(a|0))c[k>>2]=a;mR(a);l=f;return}}f=Pa()|0;a=c[g>>2]|0;if(!a)$a(f|0);k=g+4|0;if((c[k>>2]|0)!=(a|0))c[k>>2]=a;mR(a);$a(f|0)}function fm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;f=l;l=l+80|0;g=f+56|0;h=f+52|0;i=f+48|0;j=f+28|0;k=f+8|0;m=f+44|0;n=f+40|0;p=f+24|0;q=f+20|0;r=f+4|0;s=f;t=Cm(b)|0;c[a>>2]=0;u=a+4|0;c[u>>2]=0;c[a+8>>2]=0;o=0;la(289,b|0);v=o;o=0;do if(v&1){w=Pa()|0;x=w;y=z}else{if(e){o=0;ma(83,g|0,b|0);w=o;o=0;if(w&1){w=Pa()|0;x=w;y=z;break}w=c[a>>2]|0;c[a>>2]=c[g>>2];c[g>>2]=w;A=g+4|0;B=c[u>>2]|0;c[u>>2]=c[A>>2];c[A>>2]=B;C=a+8|0;D=g+8|0;E=c[C>>2]|0;c[C>>2]=c[D>>2];c[D>>2]=E;E=w;if(w|0){if((B|0)!=(E|0))c[A>>2]=E;mR(E)}}o=0;na(52,j|0,t|0,d|0);E=o;o=0;if(!(E&1)){o=0;ma(121,k|0,t|0);E=o;o=0;if(!(E&1)){c[m>>2]=c[u>>2];c[n>>2]=c[j>>2];E=j+4|0;c[p>>2]=c[E>>2];o=0;c[i>>2]=c[m>>2];c[h>>2]=c[n>>2];c[g>>2]=c[p>>2];aa(45,a|0,i|0,h|0,g|0)|0;A=o;o=0;if((!(A&1)?(c[q>>2]=c[u>>2],c[r>>2]=c[k>>2],A=k+4|0,c[s>>2]=c[A>>2],o=0,c[i>>2]=c[q>>2],c[h>>2]=c[r>>2],c[g>>2]=c[s>>2],aa(45,a|0,i|0,h|0,g|0)|0,B=o,o=0,!(B&1)):0)?(o=0,la(288,b|0),B=o,o=0,!(B&1)):0){B=c[k>>2]|0;if(B|0){if((c[A>>2]|0)!=(B|0))c[A>>2]=B;mR(B)}B=c[j>>2]|0;if(!B){l=f;return}if((c[E>>2]|0)!=(B|0))c[E>>2]=B;mR(B);l=f;return}B=Pa()|0;E=z;A=c[k>>2]|0;if(!A){F=B;G=E}else{w=k+4|0;if((c[w>>2]|0)!=(A|0))c[w>>2]=A;mR(A);F=B;G=E}}else{E=Pa()|0;F=E;G=z}E=c[j>>2]|0;if(!E){H=F;I=G}else{B=j+4|0;if((c[B>>2]|0)!=(E|0))c[B>>2]=E;mR(E);H=F;I=G}}else{E=Pa()|0;H=E;I=z}x=H;y=I}while(0);I=c[a>>2]|0;if(!I)$a(x|0);if((c[u>>2]|0)!=(I|0))c[u>>2]=I;mR(I);$a(x|0)}function gm(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=l;l=l+16|0;i=h;Bm(i,b,d);o=0;d=aa(44,b|0,e|0,f|0,g|0)|0;g=o;o=0;if(!(g&1)?(o=0,oa(42,a|0,b|0,i|0,d|0),d=o,o=0,!(d&1)):0){d=c[i>>2]|0;if(!d){l=h;return}b=i+4|0;if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d);l=h;return}h=Pa()|0;d=c[i>>2]|0;if(!d)$a(h|0);b=i+4|0;if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d);$a(h|0)}function hm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0;f=l;l=l+64|0;g=f+56|0;h=f+52|0;i=f+48|0;j=f+28|0;k=f+16|0;m=f+44|0;n=f+40|0;p=f+12|0;q=f+8|0;r=f+4|0;s=f;sr(j,e,d);o=0;ma(121,k|0,e|0);e=o;o=0;if(!(e&1)){c[a>>2]=0;e=a+4|0;c[e>>2]=0;c[a+8>>2]=0;c[m>>2]=0;c[n>>2]=c[j>>2];d=j+4|0;c[p>>2]=c[d>>2];o=0;c[i>>2]=c[m>>2];c[h>>2]=c[n>>2];c[g>>2]=c[p>>2];aa(45,a|0,i|0,h|0,g|0)|0;p=o;o=0;if((!(p&1)?(c[q>>2]=c[e>>2],c[r>>2]=c[k>>2],p=k+4|0,c[s>>2]=c[p>>2],o=0,c[i>>2]=c[q>>2],c[h>>2]=c[r>>2],c[g>>2]=c[s>>2],aa(45,a|0,i|0,h|0,g|0)|0,g=o,o=0,!(g&1)):0)?(o=0,la(288,b|0),b=o,o=0,!(b&1)):0){b=c[k>>2]|0;if(b|0){if((c[p>>2]|0)!=(b|0))c[p>>2]=b;mR(b)}b=c[j>>2]|0;if(!b){l=f;return}if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b);l=f;return}f=Pa()|0;b=z;d=c[a>>2]|0;if(d|0){if((c[e>>2]|0)!=(d|0))c[e>>2]=d;mR(d)}d=c[k>>2]|0;if(!d){t=f;u=b}else{e=k+4|0;if((c[e>>2]|0)!=(d|0))c[e>>2]=d;mR(d);t=f;u=b}}else{b=Pa()|0;t=b;u=z}u=c[j>>2]|0;if(!u)$a(t|0);b=j+4|0;if((c[b>>2]|0)!=(u|0))c[b>>2]=u;mR(u);$a(t|0)}function im(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=l;l=l+16|0;g=f;Bm(g,b,d);o=0;d=_(116,b|0,e|0)|0;e=o;o=0;if(!(e&1)?(o=0,oa(42,a|0,b|0,g|0,d|0),d=o,o=0,!(d&1)):0){d=c[g>>2]|0;if(!d){l=f;return}b=g+4|0;if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d);l=f;return}f=Pa()|0;d=c[g>>2]|0;if(!d)$a(f|0);b=g+4|0;if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d);$a(f|0)}function jm(a){a=a|0;var b=0,d=0;c[a>>2]=9748;b=a+4|0;a=c[b>>2]|0;c[b>>2]=0;if(!a)return;rn(a+28|0);b=c[a+16>>2]|0;if(b|0){d=a+20|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}Oq(a+8|0);kq(a);mR(a);return}function km(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=9748;b=a+4|0;d=c[b>>2]|0;c[b>>2]=0;if(!d){mR(a);return}rn(d+28|0);b=c[d+16>>2]|0;if(b|0){e=d+20|0;if((c[e>>2]|0)!=(b|0))c[e>>2]=b;mR(b)}Oq(d+8|0);kq(d);mR(d);mR(a);return}function lm(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;c=l;l=l+16|0;b=c;wk(b);o=0;na(53,b|0,e|0,f|0);f=o;o=0;if(!(f&1)?(o=0,na(61,a|0,b|0,d|0),d=o,o=0,!(d&1)):0){fk(b);l=c;return}c=Pa()|0;fk(b);$a(c|0)}function mm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;b=l;l=l+16|0;f=b;Qp(f);o=0;ma(157,f|0,d|0);d=o;o=0;if(!(d&1)?(o=0,oa(29,a|0,f|0,c|0,e|0),e=o,o=0,!(e&1)):0){Kp(f);l=b;return}b=Pa()|0;Kp(f);$a(b|0)}function nm(a){a=a|0;var b=0;c[a>>2]=9748;b=kR(36)|0;om(b);c[a+4>>2]=b;return}function om(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0;d=l;l=l+32|0;e=d+12|0;f=d;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,32)|0;h=o;o=0;if(!(h&1)){c[f>>2]=g;c[f+8>>2]=-2147483616;c[f+4>>2]=24;h=g;i=69670;j=h+24|0;do{a[h>>0]=a[i>>0]|0;h=h+1|0;i=i+1|0}while((h|0)<(j|0));a[g+24>>0]=0;o=0;ma(91,e|0,f|0);g=o;o=0;do if(g&1){i=Qa(0)|0;k=i}else{o=0;ma(137,b|0,e|0);i=o;o=0;if(i&1){i=Qa(0)|0;h=c[e>>2]|0;if(!h){k=i;break}j=e+4|0;if((c[j>>2]|0)!=(h|0))c[j>>2]=h;mR(h);k=i;break}i=c[e>>2]|0;if(i|0){h=e+4|0;if((c[h>>2]|0)!=(i|0))c[h>>2]=i;mR(i)}if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);i=b+8|0;o=0;la(290,i|0);h=o;o=0;if(h&1){h=Qa(0)|0;m=h}else{h=b+16|0;c[h>>2]=0;j=b+20|0;c[j>>2]=0;c[b+24>>2]=0;o=0;la(291,b+28|0);n=o;o=0;if(!(n&1)){l=d;return}n=Qa(0)|0;p=c[h>>2]|0;if(p|0){if((c[j>>2]|0)!=(p|0))c[j>>2]=p;mR(p)}Oq(i);m=n}kq(b);q=m;Id(q)}while(0);if((a[f+11>>0]|0)<0){mR(c[f>>2]|0);r=k}else r=k}else{k=Qa(0)|0;r=k}q=r;Id(q)}function pm(a,b,d){a=a|0;b=b|0;d=d|0;Hk(d);An((c[a+4>>2]|0)+28|0,b,d);return}function qm(a,b){a=a|0;b=b|0;Gn((c[a+4>>2]|0)+28|0,b);return}function rm(a,b){a=a|0;b=b|0;return Bn((c[a+4>>2]|0)+28|0,b)|0}function sm(a,b){a=a|0;b=b|0;Kn((c[a+4>>2]|0)+28|0,b);return}function tm(a,b){a=a|0;b=b|0;Nn((c[a+4>>2]|0)+28|0,b);return}function um(a){a=a|0;Pn((c[a+4>>2]|0)+28|0);return}function vm(a,b){a=a|0;b=b|0;Us(a,(c[b+4>>2]|0)+28|0);return}function wm(a,b){a=a|0;b=b|0;Vs((c[a+4>>2]|0)+28|0,b);return}function xm(a){a=a|0;return Qn((c[a+4>>2]|0)+28|0)|0}function ym(a){a=a|0;return Qn((c[a+4>>2]|0)+28|0)|0}function zm(a){a=a|0;return ao(a)|0}function Am(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=l;l=l+16|0;f=e+8|0;g=e;wk(f);o=0;la(277,g|0);h=o;o=0;if(h&1){h=Pa()|0;i=z;j=h;fk(f);$a(j|0)}o=0;ma(123,f|0,b|0);b=o;o=0;if((!(b&1)?(o=0,na(53,g|0,c|0,d|0),d=o,o=0,!(d&1)):0)?(o=0,na(57,a|0,f|0,g|0),a=o,o=0,!(a&1)):0){fk(g);fk(f);l=e;return}e=Pa()|0;a=z;fk(g);i=a;j=e;fk(f);$a(j|0)}function Bm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0;f=l;l=l+16|0;g=f;h=ao(e)|0;if(!h){c[b>>2]=0;i=b+4|0;c[i>>2]=0;c[b+8>>2]=0;j=c[e>>2]|0;k=(c[e+4>>2]|0)-j|0;m=j;if(!k){l=f;return}if((k|0)>=0){o=0;j=Z(209,k|0)|0;n=o;o=0;if(!(n&1)){c[i>>2]=j;c[b>>2]=j;n=j+k|0;c[b+8>>2]=n;CT(j|0,m|0,k|0)|0;c[i>>2]=n;l=f;return}}else{o=0;la(271,b|0);o=0}n=Pa()|0;k=c[b>>2]|0;if(!k)$a(n|0);if((c[i>>2]|0)!=(k|0))c[i>>2]=k;mR(k);$a(n|0)}n=c[e>>2]|0;k=n+h|0;c[g>>2]=0;i=g+4|0;c[i>>2]=0;c[g+8>>2]=0;if((h|0)>=0){o=0;m=Z(209,h|0)|0;j=o;o=0;if(!(j&1)){c[i>>2]=m;c[g>>2]=m;c[g+8>>2]=m+h;j=n;n=m;do{a[n>>0]=a[j>>0]|0;j=j+1|0;n=(c[i>>2]|0)+1|0;c[i>>2]=n}while((j|0)!=(k|0));k=(c[e>>2]|0)+h|0;h=c[e+4>>2]|0;c[b>>2]=0;e=b+4|0;c[e>>2]=0;c[b+8>>2]=0;j=h-k|0;a:do if(!j)p=22;else{if((j|0)>=0){o=0;n=Z(209,j|0)|0;m=o;o=0;if(!(m&1)){c[e>>2]=n;c[b>>2]=n;c[b+8>>2]=n+j;if((k|0)==(h|0)){p=22;break}else{q=k;r=n}while(1){a[r>>0]=a[q>>0]|0;q=q+1|0;r=(c[e>>2]|0)+1|0;c[e>>2]=r;if((q|0)==(h|0)){p=22;break a}}}}else{o=0;la(271,b|0);o=0}n=Pa()|0;m=z;s=c[b>>2]|0;if(s|0){if((c[e>>2]|0)!=(s|0))c[e>>2]=s;mR(s)}t=m;u=n}while(0);do if((p|0)==22){o=0;ma(157,(c[d+4>>2]|0)+28|0,g|0);h=o;o=0;if(h&1){h=Pa()|0;q=z;r=c[b>>2]|0;if(!r){t=q;u=h;break}if((c[e>>2]|0)!=(r|0))c[e>>2]=r;mR(r);t=q;u=h;break}h=c[g>>2]|0;if(h|0){if((c[i>>2]|0)!=(h|0))c[i>>2]=h;mR(h)}l=f;return}while(0);f=c[g>>2]|0;if(!f)$a(u|0);if((c[i>>2]|0)!=(f|0))c[i>>2]=f;mR(f);$a(u|0)}}else{o=0;la(271,g|0);o=0}u=Pa()|0;f=c[g>>2]|0;if(!f)$a(u|0);if((c[i>>2]|0)!=(f|0))c[i>>2]=f;mR(f);$a(u|0)}function Cm(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=l;l=l+16|0;d=b;Zq(d,3);e=a+4|0;ar((c[e>>2]|0)+8|0,d)|0;Oq(d);a=c[e>>2]|0;uq(d,a,fr(a+8|0)|0);a=c[e>>2]|0;f=a+16|0;g=c[f>>2]|0;h=a+20|0;if(!g)i=a+24|0;else{if((c[h>>2]|0)!=(g|0))c[h>>2]=g;mR(g);g=a+24|0;c[g>>2]=0;c[h>>2]=0;c[f>>2]=0;i=g}c[f>>2]=c[d>>2];c[h>>2]=c[d+4>>2];c[i>>2]=c[d+8>>2];i=c[e>>2]|0;uq(d,i,dr(i+8|0)|0);i=c[e>>2]|0;o=0;ma(117,i+8|0,i+16|0);i=o;o=0;do if((!(i&1)?(o=0,ma(115,(c[e>>2]|0)+8|0,d|0),h=o,o=0,!(h&1)):0)?(o=0,h=Z(165,(c[e>>2]|0)+8|0)|0,f=o,o=0,!(f&1)):0){if(h?(o=0,ma(119,(c[e>>2]|0)+8|0,0),h=o,o=0,h&1):0)break;o=0;la(257,(c[e>>2]|0)+8|0);h=o;o=0;if(!(h&1)){h=(c[e>>2]|0)+8|0;f=c[d>>2]|0;if(!f){l=b;return h|0}g=d+4|0;if((c[g>>2]|0)!=(f|0))c[g>>2]=f;mR(f);l=b;return h|0}}while(0);b=Pa()|0;e=c[d>>2]|0;if(!e)$a(b|0);i=d+4|0;if((c[i>>2]|0)!=(e|0))c[i>>2]=e;mR(e);$a(b|0);return 0}function Dm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0;d=l;l=l+48|0;e=d+36|0;f=d;g=d+24|0;h=a+4|0;i=(c[h>>2]|0)+28|0;j=f+16|0;c[f>>2]=9772;c[f+4>>2]=a;c[f+8>>2]=b;c[j>>2]=f;o=0;na(83,e|0,i|0,f|0);i=o;o=0;if(i&1){i=Pa()|0;b=z;a=c[j>>2]|0;if((f|0)==(a|0)){rd[c[(c[a>>2]|0)+16>>2]&511](a);k=b;m=i;$a(m|0)}if(!a){k=b;m=i;$a(m|0)}rd[c[(c[a>>2]|0)+20>>2]&511](a);k=b;m=i;$a(m|0)}i=c[j>>2]|0;if((f|0)!=(i|0)){if(i|0)rd[c[(c[i>>2]|0)+20>>2]&511](i)}else rd[c[(c[i>>2]|0)+16>>2]&511](i);i=e+4|0;a:do if((c[e>>2]|0)==(c[i>>2]|0)){f=Ja(24)|0;j=fo()|0;o=0;na(71,f|0,13,j|0);j=o;o=0;if(j&1){j=Pa()|0;b=z;Sa(f|0);n=b;p=j;break}else{o=0;na(72,f|0,4424,56);o=0;q=14;break}}else{o=0;la(290,g|0);f=o;o=0;if(f&1){f=Pa()|0;n=z;p=f;break}ar((c[h>>2]|0)+8|0,g)|0;Oq(g);f=c[h>>2]|0;o=0;ma(158,g|0,f+28|0);j=o;o=0;do if(j&1){b=Pa()|0;r=z;s=b}else{o=0;ma(157,f+8|0,g|0);b=o;o=0;if(b&1){b=Pa()|0;a=z;t=c[g>>2]|0;if(!t){r=a;s=b;break}u=g+4|0;if((c[u>>2]|0)!=(t|0))c[u>>2]=t;mR(t);r=a;s=b;break}b=c[g>>2]|0;if(b|0){a=g+4|0;if((c[a>>2]|0)!=(b|0))c[a>>2]=b;mR(b)}o=0;ma(118,(c[h>>2]|0)+8|0,e|0);b=o;o=0;if(b&1){q=14;break a}o=0;b=Z(165,(c[h>>2]|0)+8|0)|0;a=o;o=0;if(a&1){q=14;break a}if(b?(o=0,ma(119,(c[h>>2]|0)+8|0,0),b=o,o=0,b&1):0){q=14;break a}o=0;la(257,(c[h>>2]|0)+8|0);b=o;o=0;if(b&1){q=14;break a}b=(c[h>>2]|0)+8|0;a=c[e>>2]|0;if(!a){l=d;return b|0}if((c[i>>2]|0)!=(a|0))c[i>>2]=a;mR(a);l=d;return b|0}while(0);n=r;p=s}while(0);if((q|0)==14){q=Pa()|0;n=z;p=q}q=c[e>>2]|0;if(!q){k=n;m=p;$a(m|0)}if((c[i>>2]|0)!=(q|0))c[i>>2]=q;mR(q);k=n;m=p;$a(m|0);return 0}function Em(a){a=a|0;return}function Fm(a){a=a|0;mR(a);return}function Gm(a){a=a|0;var b=0,d=0,e=0;b=kR(12)|0;c[b>>2]=9772;d=a+4|0;a=c[d+4>>2]|0;e=b+4|0;c[e>>2]=c[d>>2];c[e+4>>2]=a;return b|0}function Hm(a,b){a=a|0;b=b|0;var d=0,e=0;c[b>>2]=9772;d=a+4|0;a=c[d+4>>2]|0;e=b+4|0;c[e>>2]=c[d>>2];c[e+4>>2]=a;return}function Im(a){a=a|0;return}function Jm(a){a=a|0;mR(a);return}function Km(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=c[b+4>>2]|0;vd[c[(c[f>>2]|0)+12>>2]&31](a,f,e,d,c[b+8>>2]|0);return}function Lm(a,b){a=a|0;b=b|0;return ((c[b+4>>2]|0)==69695?a+4|0:0)|0}function Mm(a){a=a|0;return 4280}function Nm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0;f=l;l=l+48|0;g=f+36|0;h=f;i=f+24|0;j=a+4|0;k=(c[j>>2]|0)+28|0;m=h+16|0;c[h>>2]=9816;c[h+4>>2]=a;c[h+8>>2]=d;c[h+12>>2]=e;c[m>>2]=h;o=0;oa(43,g|0,k|0,b|0,h|0);b=o;o=0;if(b&1){b=Pa()|0;k=z;e=c[m>>2]|0;if((h|0)==(e|0)){rd[c[(c[e>>2]|0)+16>>2]&511](e);n=k;p=b;$a(p|0)}if(!e){n=k;p=b;$a(p|0)}rd[c[(c[e>>2]|0)+20>>2]&511](e);n=k;p=b;$a(p|0)}b=c[m>>2]|0;if((h|0)!=(b|0)){if(b|0)rd[c[(c[b>>2]|0)+20>>2]&511](b)}else rd[c[(c[b>>2]|0)+16>>2]&511](b);b=g+4|0;a:do if((c[g>>2]|0)==(c[b>>2]|0)){h=Ja(24)|0;m=fo()|0;o=0;na(71,h|0,12,m|0);m=o;o=0;if(m&1){m=Pa()|0;k=z;Sa(h|0);q=k;r=m;break}else{o=0;na(72,h|0,4424,56);o=0;s=14;break}}else{o=0;la(290,i|0);h=o;o=0;if(h&1){h=Pa()|0;q=z;r=h;break}ar((c[j>>2]|0)+8|0,i)|0;Oq(i);h=c[j>>2]|0;o=0;ma(158,i|0,h+28|0);m=o;o=0;do if(m&1){k=Pa()|0;t=z;u=k}else{o=0;ma(157,h+8|0,i|0);k=o;o=0;if(k&1){k=Pa()|0;e=z;d=c[i>>2]|0;if(!d){t=e;u=k;break}a=i+4|0;if((c[a>>2]|0)!=(d|0))c[a>>2]=d;mR(d);t=e;u=k;break}k=c[i>>2]|0;if(k|0){e=i+4|0;if((c[e>>2]|0)!=(k|0))c[e>>2]=k;mR(k)}o=0;ma(118,(c[j>>2]|0)+8|0,g|0);k=o;o=0;if(k&1){s=14;break a}o=0;k=Z(165,(c[j>>2]|0)+8|0)|0;e=o;o=0;if(e&1){s=14;break a}if(k?(o=0,ma(119,(c[j>>2]|0)+8|0,0),k=o,o=0,k&1):0){s=14;break a}o=0;la(257,(c[j>>2]|0)+8|0);k=o;o=0;if(k&1){s=14;break a}k=(c[j>>2]|0)+8|0;e=c[g>>2]|0;if(!e){l=f;return k|0}if((c[b>>2]|0)!=(e|0))c[b>>2]=e;mR(e);l=f;return k|0}while(0);q=t;r=u}while(0);if((s|0)==14){s=Pa()|0;q=z;r=s}s=c[g>>2]|0;if(!s){n=q;p=r;$a(p|0)}if((c[b>>2]|0)!=(s|0))c[b>>2]=s;mR(s);n=q;p=r;$a(p|0);return 0}function Om(a){a=a|0;mR(a);return}function Pm(a){a=a|0;var b=0,d=0;b=kR(16)|0;d=a+4|0;c[b>>2]=9816;a=b+4|0;c[a>>2]=c[d>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];return b|0}function Qm(a,b){a=a|0;b=b|0;var d=0;d=a+4|0;c[b>>2]=9816;a=b+4|0;c[a>>2]=c[d>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];return}function Rm(a){a=a|0;return}function Sm(a){a=a|0;mR(a);return}function Tm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=c[b+4>>2]|0;wd[c[(c[f>>2]|0)+8>>2]&31](a,f,d,e,c[b+8>>2]|0,c[b+12>>2]|0);return}function Um(a,b){a=a|0;b=b|0;return ((c[b+4>>2]|0)==70025?a+4|0:0)|0}function Vm(a){a=a|0;return 4312}function Wm(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;b=l;l=l+64|0;d=b+24|0;e=b;f=b+48|0;g=a+4|0;a=c[g>>2]|0;h=a+16|0;i=d+16|0;c[d>>2]=9860;c[d+4>>2]=h;c[i>>2]=d;o=0;ma(159,a+28|0,d|0);j=o;o=0;if(j&1){j=Pa()|0;k=z;m=c[i>>2]|0;if((d|0)==(m|0)){rd[c[(c[m>>2]|0)+16>>2]&511](m);n=k;p=j;$a(p|0)}if(!m){n=k;p=j;$a(p|0)}rd[c[(c[m>>2]|0)+20>>2]&511](m);n=k;p=j;$a(p|0)}j=c[i>>2]|0;if((d|0)!=(j|0)){if(j|0)rd[c[(c[j>>2]|0)+20>>2]&511](j)}else rd[c[(c[j>>2]|0)+16>>2]&511](j);j=(c[g>>2]|0)+28|0;d=e+16|0;c[e>>2]=9904;c[e+4>>2]=h;c[e+8>>2]=a;c[d>>2]=e;o=0;ma(160,j|0,e|0);j=o;o=0;if(j&1){j=Pa()|0;a=z;h=c[d>>2]|0;if((e|0)==(h|0)){rd[c[(c[h>>2]|0)+16>>2]&511](h);n=a;p=j;$a(p|0)}if(!h){n=a;p=j;$a(p|0)}rd[c[(c[h>>2]|0)+20>>2]&511](h);n=a;p=j;$a(p|0)}j=c[d>>2]|0;if((e|0)!=(j|0)){if(j|0)rd[c[(c[j>>2]|0)+20>>2]&511](j)}else rd[c[(c[j>>2]|0)+16>>2]&511](j);j=c[g>>2]|0;Us(f,j+8|0);o=0;ma(161,j+28|0,f|0);j=o;o=0;if(j&1){j=Pa()|0;g=z;e=c[f>>2]|0;if(e|0){d=f+4|0;if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e)}n=g;p=j;$a(p|0)}else{p=c[f>>2]|0;if(!p){l=b;return}j=f+4|0;if((c[j>>2]|0)!=(p|0))c[j>>2]=p;mR(p);l=b;return}}function Xm(a){a=a|0;return}function Ym(a){a=a|0;mR(a);return}function Zm(a){a=a|0;var b=0,d=0,e=0;b=kR(12)|0;c[b>>2]=9904;d=a+4|0;a=c[d+4>>2]|0;e=b+4|0;c[e>>2]=c[d>>2];c[e+4>>2]=a;return b|0}function _m(a,b){a=a|0;b=b|0;var d=0,e=0;c[b>>2]=9904;d=a+4|0;a=c[d+4>>2]|0;e=b+4|0;c[e>>2]=c[d>>2];c[e+4>>2]=a;return}function $m(a){a=a|0;return}function an(a){a=a|0;mR(a);return}function bn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0;e=l;l=l+32|0;f=e+8|0;g=e;h=b+8|0;uq(f,c[h>>2]|0,16);o=0;i=$(71,c[h>>2]|0,3072,8192)|0;h=o;o=0;if(h&1){h=Pa()|0;j=z;k=h}else{o=0;oa(33,g|0,0,f|0,i|0);i=o;o=0;if(i&1){i=Pa()|0;m=z;n=i}else{o=0;ma(162,a|0,g|0);i=o;o=0;do if(i&1){h=Pa()|0;p=z;q=h}else{o=0;oa(28,a+12|0,g|0,c[b+4>>2]|0,d|0);h=o;o=0;if(h&1){h=Pa()|0;r=z;s=c[a>>2]|0;if(!s){p=r;q=h;break}t=a+4|0;if((c[t>>2]|0)!=(s|0))c[t>>2]=s;mR(s);p=r;q=h;break}Kp(g);h=c[f>>2]|0;if(!h){l=e;return}r=f+4|0;if((c[r>>2]|0)!=(h|0))c[r>>2]=h;mR(h);l=e;return}while(0);Kp(g);m=p;n=q}j=m;k=n}n=c[f>>2]|0;if(!n)$a(k|0);m=f+4|0;if((c[m>>2]|0)!=(n|0))c[m>>2]=n;mR(n);$a(k|0)}function cn(a,b){a=a|0;b=b|0;return ((c[b+4>>2]|0)==70286?a+4|0:0)|0}function dn(a){a=a|0;return 4336}function en(a){a=a|0;mR(a);return}function fn(a){a=a|0;var b=0;b=kR(8)|0;c[b>>2]=9860;c[b+4>>2]=c[a+4>>2];return b|0}function gn(a,b){a=a|0;b=b|0;c[b>>2]=9860;c[b+4>>2]=c[a+4>>2];return}function hn(a){a=a|0;return}function jn(a){a=a|0;mR(a);return}function kn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=l;l=l+16|0;f=e;wk(f);o=0;ma(123,f|0,d|0);d=o;o=0;if(!(d&1)?(o=0,ma(162,a|0,f|0),d=o,o=0,!(d&1)):0){o=0;na(60,a+12|0,f|0,c[b+4>>2]|0);b=o;o=0;if(!(b&1)){fk(f);l=e;return}e=Pa()|0;b=z;d=c[a>>2]|0;if(!d){g=b;h=e}else{i=a+4|0;if((c[i>>2]|0)!=(d|0))c[i>>2]=d;mR(d);g=b;h=e}}else{e=Pa()|0;g=z;h=e}fk(f);$a(h|0)}function ln(a,b){a=a|0;b=b|0;return ((c[b+4>>2]|0)==70640?a+4|0:0)|0}function mn(a){a=a|0;return 4368}function nn(a){a=a|0;var b=0;b=a+4|0;Sq((c[b>>2]|0)+8|0);Vl((c[b>>2]|0)+16|0);return}function on(){return 1}function pn(){return 0}function qn(){return 1}function rn(a){a=a|0;var b=0,d=0;c[a>>2]=9948;b=a+4|0;a=c[b>>2]|0;c[b>>2]=0;if(!a)return;vn(a+132|0,c[a+136>>2]|0);wn(a+120|0,c[a+124>>2]|0);xn(a+64|0);c[a>>2]=10316;c[a+24>>2]=10056;wn(a+52|0,c[a+56>>2]|0);wn(a+40|0,c[a+44>>2]|0);yn(a+28|0,c[a+32>>2]|0);c[a+4>>2]=10288;b=c[a+12>>2]|0;if(b|0){d=a+16|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}mR(a);return}function sn(a){a=a|0;rn(a);mR(a);return}function tn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=l;l=l+16|0;f=e;g=a+4|0;a=c[g>>2]|0;c[a+8>>2]=2;Us(f,a+64|0);a=c[g>>2]|0;h=a+12|0;i=c[h>>2]|0;j=a+16|0;if(!i)k=a+20|0;else{if((c[j>>2]|0)!=(i|0))c[j>>2]=i;mR(i);i=a+20|0;c[i>>2]=0;c[j>>2]=0;c[h>>2]=0;k=i}c[h>>2]=c[f>>2];c[j>>2]=c[f+4>>2];c[k>>2]=c[f+8>>2];f=Ut(c[g>>2]|0,b,d)|0;l=e;return f|0}function un(a,b){a=a|0;b=b|0;var d=0;d=a+4|0;Vt(c[d>>2]|0,b);b=c[d>>2]|0;if((c[b+8>>2]|0)==2){Vs(b+64|0,b+12|0);return}b=Ja(24)|0;o=0;ma(143,b|0,4);d=o;o=0;if(d&1){d=Pa()|0;Sa(b|0);$a(d|0)}else Xa(b|0,4424,56)}function vn(a,b){a=a|0;b=b|0;var d=0;if(!b)return;vn(a,c[b>>2]|0);vn(a,c[b+4>>2]|0);a=c[b+16>>2]|0;if(a|0){d=b+20|0;if((c[d>>2]|0)!=(a|0))c[d>>2]=a;mR(a)}mR(b);return}function wn(a,b){a=a|0;b=b|0;var d=0;if(!b)return;wn(a,c[b>>2]|0);wn(a,c[b+4>>2]|0);a=c[b+28>>2]|0;if(a|0){d=b+32|0;if((c[d>>2]|0)!=(a|0))c[d>>2]=a;mR(a)}a=c[b+16>>2]|0;if(a|0){d=b+20|0;if((c[d>>2]|0)!=(a|0))c[d>>2]=a;mR(a)}mR(b);return}function xn(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;c[a>>2]=10372;c[a+28>>2]=10344;b=c[a+44>>2]|0;if(b|0){d=a+48|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+32>>2]|0;if(b|0){d=a+36|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=a+16|0;d=c[b>>2]|0;if(d|0){e=a+20|0;f=c[e>>2]|0;if((f|0)==(d|0))g=d;else{h=f;do{f=h+-40|0;c[e>>2]=f;rd[c[c[f>>2]>>2]&511](f);h=c[e>>2]|0}while((h|0)!=(d|0));g=c[b>>2]|0}mR(g)}g=a+4|0;b=c[g>>2]|0;if(!b)return;d=a+8|0;a=c[d>>2]|0;if((a|0)==(b|0))i=b;else{h=a;do{a=h+-40|0;c[d>>2]=a;rd[c[c[a>>2]>>2]&511](a);h=c[d>>2]|0}while((h|0)!=(b|0));i=c[g>>2]|0}mR(i);return}function yn(a,b){a=a|0;b=b|0;var d=0;if(!b)return;yn(a,c[b>>2]|0);yn(a,c[b+4>>2]|0);a=c[b+16>>2]|0;if(a|0){d=b+20|0;if((c[d>>2]|0)!=(a|0))c[d>>2]=a;mR(a)}mR(b);return}function zn(a){a=a|0;var b=0,d=0;c[a>>2]=9948;b=kR(144)|0;ET(b+8|0,0,136)|0;c[b>>2]=10316;c[b+4>>2]=10288;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;c[b+24>>2]=10056;d=b+32|0;c[d>>2]=0;c[b+36>>2]=0;c[b+28>>2]=d;d=b+44|0;c[d>>2]=0;c[b+48>>2]=0;c[b+40>>2]=d;d=b+56|0;c[d>>2]=0;c[b+60>>2]=0;c[b+52>>2]=d;c[b+64>>2]=10372;d=b+68|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;c[b+92>>2]=10344;d=b+96|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;d=b+124|0;c[d>>2]=0;c[b+128>>2]=0;c[b+120>>2]=d;d=b+136|0;c[d>>2]=0;c[b+140>>2]=0;c[b+132>>2]=d;c[a+4>>2]=b;return}function An(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;e=l;l=l+32|0;f=e+8|0;g=e;h=e+16|0;if((c[b>>2]|0)==(c[b+4>>2]|0)){i=Ja(24)|0;o=0;ma(143,i|0,3);j=o;o=0;if(!(j&1))Xa(i|0,4424,56);j=Pa()|0;k=z;Sa(i|0);m=k;n=j;$a(n|0)}j=d+4|0;if((c[d>>2]|0)==(c[j>>2]|0)){k=Ja(24)|0;o=0;ma(143,k|0,3);i=o;o=0;if(!(i&1))Xa(k|0,4424,56);i=Pa()|0;p=z;Sa(k|0);m=p;n=i;$a(n|0)}if(Bn(a,b)|0){i=Ja(24)|0;o=0;ma(143,i|0,3);p=o;o=0;if(!(p&1))Xa(i|0,4424,56);p=Pa()|0;k=z;Sa(i|0);m=k;n=p;$a(n|0)}else{n=(c[a+4>>2]|0)+120|0;c[g>>2]=b;Cn(f,n,b,104896,g,h);h=(c[f>>2]|0)+28|0;if((h|0)==(d|0)){l=e;return}Dn(h,c[d>>2]|0,c[j>>2]|0);l=e;return}}function Bn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=c[b+4>>2]|0;b=e+124|0;f=c[b>>2]|0;a:do if(f|0){g=c[d>>2]|0;h=c[d+4>>2]|0;b:do if((g|0)==(h|0)){i=f;while(1){j=c[i>>2]|0;if(!j)break;else i=j}k=i}else{j=b;l=f;while(1){m=l;c:while(1){n=c[m+20>>2]|0;o=c[m+16>>2]|0;p=g;while(1){if((o|0)==(n|0))break;q=a[o>>0]|0;r=a[p>>0]|0;if((q&255)<(r&255))break;if((r&255)<(q&255))break c;p=p+1|0;if((p|0)==(h|0))break c;else o=o+1|0}o=c[m+4>>2]|0;if(!o){k=j;break b}else m=o}l=c[m>>2]|0;if(!l){k=m;break}else j=m}}while(0);if((k|0)!=(b|0)){j=c[k+16>>2]|0;l=c[k+20>>2]|0;d:do if((j|0)!=(l|0)){i=g;o=j;while(1){if((i|0)==(h|0))break a;p=a[i>>0]|0;n=a[o>>0]|0;if((p&255)<(n&255))break a;if((n&255)<(p&255))break d;o=o+1|0;if((o|0)==(l|0))break;else i=i+1|0}}while(0);if((k|0)!=(b|0)){s=1;return s|0}}}while(0);b=c[e+68>>2]|0;k=c[e+72>>2]|0;e:do if((b|0)==(k|0))t=b;else{e=c[d>>2]|0;f=(c[d+4>>2]|0)-e|0;l=e;e=b;while(1){h=c[e+8>>2]|0;j=c[e+4>>2]|0;g=j;i=h;f:do if((h-j|0)==(f|0)){if((g|0)==(i|0)){t=e;break e}else{u=g;v=l}while(1){if((a[u>>0]|0)!=(a[v>>0]|0))break f;u=u+1|0;if((u|0)==(i|0)){t=e;break e}else v=v+1|0}}while(0);e=e+40|0;if((e|0)==(k|0)){t=k;break}}}while(0);s=(t|0)!=(k|0);return s|0}function Cn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;i=l;l=l+16|0;j=i;k=d+4|0;m=c[k>>2]|0;n=d+4|0;a:do if(m){o=c[e+4>>2]|0;p=c[e>>2]|0;b:do if((p|0)==(o|0)){q=c[m+16>>2]|0;r=c[m+20>>2]|0;if((q|0)==(r|0)){s=m;t=n;u=25}else{v=n;w=m;x=r;r=q;while(1){q=o;y=r;while(1){if((q|0)==(o|0))break;z=a[q>>0]|0;A=a[y>>0]|0;if((z&255)<(A&255))break;if((A&255)<(z&255)){s=w;t=v;u=25;break b}y=y+1|0;if((y|0)==(x|0)){s=w;t=v;u=25;break b}else q=q+1|0}q=c[w>>2]|0;if(!q){B=w;C=w;u=18;break b}r=c[q+16>>2]|0;x=c[q+20>>2]|0;if((r|0)==(x|0)){s=q;t=w;u=25;break}else{y=w;w=q;v=y}}}}else{v=n;w=m;while(1){x=c[w+16>>2]|0;r=c[w+20>>2]|0;c:do if((x|0)!=(r|0)){y=p;q=x;while(1){if((y|0)==(o|0))break;z=a[y>>0]|0;A=a[q>>0]|0;if((z&255)<(A&255))break;if((A&255)<(z&255)){D=x;E=p;u=19;break c}q=q+1|0;if((q|0)==(r|0)){D=x;E=p;u=19;break c}else y=y+1|0}y=c[w>>2]|0;if(!y){B=w;C=w;u=18;break b}else{F=w;G=y}}else{D=x;E=p;u=19}while(0);if((u|0)==19){while(1){u=0;if((D|0)==(r|0))break;x=a[D>>0]|0;y=a[E>>0]|0;if((x&255)<(y&255))break;if((y&255)<(x&255)){s=w;t=v;u=25;break b}E=E+1|0;if((E|0)==(o|0)){s=w;t=v;u=25;break b}else{D=D+1|0;u=19}}H=w+4|0;r=c[H>>2]|0;if(!r)break;else{F=H;G=r}}v=F;w=G}I=w;J=H;break a}while(0);if((u|0)==18){I=B;J=C;break}else if((u|0)==25){I=s;J=t;break}}else{I=k;J=k}while(0);k=c[J>>2]|0;if(k|0){K=k;L=0;M=K;c[b>>2]=M;N=b+4|0;a[N>>0]=L;l=i;return}En(j,d,f,g,h);h=c[j>>2]|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=I;c[J>>2]=h;I=c[c[d>>2]>>2]|0;if(!I)O=h;else{c[d>>2]=I;O=c[J>>2]|0}Fn(c[n>>2]|0,O);O=d+8|0;c[O>>2]=(c[O>>2]|0)+1;K=c[j>>2]|0;L=1;M=K;c[b>>2]=M;N=b+4|0;a[N>>0]=L;l=i;return}function Dn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=d;f=b;g=e-f|0;h=a+8|0;i=c[h>>2]|0;j=c[a>>2]|0;k=j;if(g>>>0>(i-j|0)>>>0){if(!j)l=i;else{i=a+4|0;if((c[i>>2]|0)!=(k|0))c[i>>2]=k;mR(k);c[h>>2]=0;c[i>>2]=0;c[a>>2]=0;l=0}if((g|0)<0)CP(a);i=l<<1;m=l>>>0<1073741823?(i>>>0<g>>>0?g:i):2147483647;if((m|0)<0)CP(a);i=kR(m)|0;l=a+4|0;c[l>>2]=i;c[a>>2]=i;c[h>>2]=i+m;CT(i|0,b|0,g|0)|0;c[l>>2]=i+g;return}i=a+4|0;a=(c[i>>2]|0)-j|0;j=g>>>0>a>>>0;g=j?b+a|0:d;d=g;a=d-f|0;if(a|0)DT(k|0,b|0,a|0)|0;b=k+a|0;if(j){j=e-d|0;if((j|0)<=0)return;CT(c[i>>2]|0,g|0,j|0)|0;c[i>>2]=(c[i>>2]|0)+j;return}else{if((c[i>>2]|0)==(b|0))return;c[i>>2]=b;return}}function En(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0;g=kR(40)|0;c[b>>2]=g;c[b+4>>2]=d+4;d=b+8|0;a[d>>0]=0;e=g+16|0;h=c[f>>2]|0;c[e>>2]=0;f=g+20|0;c[f>>2]=0;c[g+24>>2]=0;i=h+4|0;j=(c[i>>2]|0)-(c[h>>2]|0)|0;do if(j|0){if((j|0)>=0){o=0;k=Z(209,j|0)|0;l=o;o=0;if(!(l&1)){c[f>>2]=k;c[e>>2]=k;c[g+24>>2]=k+j;l=c[h>>2]|0;m=(c[i>>2]|0)-l|0;if((m|0)<=0)break;CT(k|0,l|0,m|0)|0;c[f>>2]=k+m;break}}else{o=0;la(271,e|0);o=0}m=Pa()|0;k=c[e>>2]|0;if(k|0){if((c[f>>2]|0)!=(k|0))c[f>>2]=k;mR(k)}k=c[b>>2]|0;c[b>>2]=0;if(!k)$a(m|0);mR(k);$a(m|0)}while(0);c[g+28>>2]=0;c[g+32>>2]=0;c[g+36>>2]=0;a[d>>0]=1;return}function Fn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=(d|0)==(b|0);a[d+12>>0]=e&1;if(e)return;else f=d;while(1){g=f+8|0;h=c[g>>2]|0;d=h+12|0;if(a[d>>0]|0){i=23;break}j=h+8|0;k=c[j>>2]|0;e=c[k>>2]|0;if((e|0)==(h|0)){l=c[k+4>>2]|0;if(!l){i=7;break}m=l+12|0;if(!(a[m>>0]|0))n=m;else{i=7;break}}else{if(!e){i=16;break}m=e+12|0;if(!(a[m>>0]|0))n=m;else{i=16;break}}a[d>>0]=1;d=(k|0)==(b|0);a[k+12>>0]=d&1;a[n>>0]=1;if(d){i=23;break}else f=k}if((i|0)==7){if((c[h>>2]|0)==(f|0)){o=h;p=k}else{n=h+4|0;b=c[n>>2]|0;d=c[b>>2]|0;c[n>>2]=d;if(!d)q=k;else{c[d+8>>2]=h;q=c[j>>2]|0}c[b+8>>2]=q;q=c[j>>2]|0;c[((c[q>>2]|0)==(h|0)?q:q+4|0)>>2]=b;c[b>>2]=h;c[j>>2]=b;o=b;p=c[b+8>>2]|0}a[o+12>>0]=1;a[p+12>>0]=0;o=c[p>>2]|0;b=o+4|0;q=c[b>>2]|0;c[p>>2]=q;if(q|0)c[q+8>>2]=p;q=p+8|0;c[o+8>>2]=c[q>>2];d=c[q>>2]|0;c[((c[d>>2]|0)==(p|0)?d:d+4|0)>>2]=o;c[b>>2]=p;c[q>>2]=o;return}else if((i|0)==16){if((c[h>>2]|0)==(f|0)){o=f+4|0;q=c[o>>2]|0;c[h>>2]=q;if(!q)r=k;else{c[q+8>>2]=h;r=c[j>>2]|0}c[g>>2]=r;r=c[j>>2]|0;c[((c[r>>2]|0)==(h|0)?r:r+4|0)>>2]=f;c[o>>2]=h;c[j>>2]=f;s=f;t=c[f+8>>2]|0}else{s=h;t=k}a[s+12>>0]=1;a[t+12>>0]=0;s=t+4|0;k=c[s>>2]|0;h=c[k>>2]|0;c[s>>2]=h;if(h|0)c[h+8>>2]=t;h=t+8|0;c[k+8>>2]=c[h>>2];s=c[h>>2]|0;c[((c[s>>2]|0)==(t|0)?s:s+4|0)>>2]=k;c[k>>2]=t;c[h>>2]=k;return}else if((i|0)==23)return}function Gn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;e=l;l=l+16|0;f=e+4|0;g=e;h=b+4|0;b=c[h>>2]|0;i=b+120|0;j=b+124|0;k=c[j>>2]|0;a:do if(k){m=c[d>>2]|0;n=c[d+4>>2]|0;b:do if((m|0)==(n|0)){o=k;while(1){p=c[o>>2]|0;if(!p)break;else o=p}q=o}else{p=j;r=k;while(1){s=r;c:while(1){t=c[s+20>>2]|0;u=c[s+16>>2]|0;v=m;while(1){if((u|0)==(t|0))break;w=a[u>>0]|0;x=a[v>>0]|0;if((w&255)<(x&255))break;if((x&255)<(w&255))break c;v=v+1|0;if((v|0)==(n|0))break c;else u=u+1|0}u=c[s+4>>2]|0;if(!u){q=p;break b}else s=u}r=c[s>>2]|0;if(!r){q=s;break}else p=s}}while(0);if((q|0)!=(j|0)){p=c[q+16>>2]|0;r=c[q+20>>2]|0;d:do if((p|0)!=(r|0)){o=m;u=p;while(1){if((o|0)==(n|0)){y=b;break a}v=a[o>>0]|0;t=a[u>>0]|0;if((v&255)<(t&255)){y=b;break a}if((t&255)<(v&255))break d;u=u+1|0;if((u|0)==(r|0))break;else o=o+1|0}}while(0);c[g>>2]=q;c[f>>2]=c[g>>2];Hn(i,f)|0;y=c[h>>2]|0}else y=b}else y=b;while(0);b=c[y+68>>2]|0;h=y+72|0;y=c[h>>2]|0;e:do if((b|0)==(y|0))z=b;else{f=c[d>>2]|0;i=(c[d+4>>2]|0)-f|0;g=f;f=b;do{q=c[f+8>>2]|0;j=c[f+4>>2]|0;k=j;r=q;f:do if((q-j|0)==(i|0)){if((k|0)==(r|0)){z=f;break e}else{A=k;B=g}while(1){if((a[A>>0]|0)!=(a[B>>0]|0))break f;A=A+1|0;if((A|0)==(r|0)){z=f;break e}else B=B+1|0}}while(0);f=f+40|0}while((f|0)!=(y|0));l=e;return}while(0);if((z|0)==(y|0)){l=e;return}B=z+40|0;if((B|0)!=(y|0)){A=B;B=z;do{In(B,A)|0;A=A+40|0;B=B+40|0}while((A|0)!=(y|0));A=c[h>>2]|0;if((A|0)==(B|0)){l=e;return}else{C=B;D=A}}else{C=z;D=y}y=D;do{D=y+-40|0;c[h>>2]=D;rd[c[c[D>>2]>>2]&511](D);y=c[h>>2]|0}while((y|0)!=(C|0));l=e;return}function Hn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[b>>2]|0;b=c[d+4>>2]|0;if(!b){e=d+8|0;f=c[e>>2]|0;if((c[f>>2]|0)==(d|0))g=f;else{f=e;do{e=c[f>>2]|0;f=e+8|0;h=c[f>>2]|0}while((c[h>>2]|0)!=(e|0));g=h}}else{f=b;while(1){b=c[f>>2]|0;if(!b)break;else f=b}g=f}if((c[a>>2]|0)==(d|0))c[a>>2]=g;f=a+8|0;c[f>>2]=(c[f>>2]|0)+-1;Jn(c[a+4>>2]|0,d);a=c[d+28>>2]|0;if(a|0){f=d+32|0;if((c[f>>2]|0)!=(a|0))c[f>>2]=a;mR(a)}a=c[d+16>>2]|0;if(!a){mR(d);return g|0}f=d+20|0;if((c[f>>2]|0)!=(a|0))c[f>>2]=a;mR(a);mR(d);return g|0}function In(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=b+4|0;f=c[d>>2]|0;g=a+8|0;if(!f)h=a+12|0;else{if((c[g>>2]|0)!=(f|0))c[g>>2]=f;mR(f);f=a+12|0;c[f>>2]=0;c[g>>2]=0;c[d>>2]=0;h=f}c[d>>2]=c[e>>2];d=b+8|0;c[g>>2]=c[d>>2];g=b+12|0;c[h>>2]=c[g>>2];c[g>>2]=0;c[d>>2]=0;c[e>>2]=0;e=a+16|0;d=b+16|0;g=c[e>>2]|0;h=a+20|0;if(!g)i=a+24|0;else{if((c[h>>2]|0)!=(g|0))c[h>>2]=g;mR(g);g=a+24|0;c[g>>2]=0;c[h>>2]=0;c[e>>2]=0;i=g}c[e>>2]=c[d>>2];e=b+20|0;c[h>>2]=c[e>>2];h=b+24|0;c[i>>2]=c[h>>2];c[h>>2]=0;c[e>>2]=0;c[d>>2]=0;d=a+28|0;e=b+28|0;h=c[d>>2]|0;i=a+32|0;if(!h){j=a+36|0;k=c[e>>2]|0;c[d>>2]=k;l=b+32|0;m=c[l>>2]|0;c[i>>2]=m;n=b+36|0;o=c[n>>2]|0;c[j>>2]=o;c[n>>2]=0;c[l>>2]=0;c[e>>2]=0;return a|0}if((c[i>>2]|0)!=(h|0))c[i>>2]=h;mR(h);h=a+36|0;c[h>>2]=0;c[i>>2]=0;c[d>>2]=0;j=h;k=c[e>>2]|0;c[d>>2]=k;l=b+32|0;m=c[l>>2]|0;c[i>>2]=m;n=b+36|0;o=c[n>>2]|0;c[j>>2]=o;c[n>>2]=0;c[l>>2]=0;c[e>>2]=0;return a|0}function Jn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;e=c[d>>2]|0;if(e){f=c[d+4>>2]|0;if(!f){g=e;h=d}else{e=f;while(1){f=c[e>>2]|0;if(!f){g=0;h=e;break}else e=f}}}else{g=0;h=d}e=h+4|0;f=c[(g|0?h:e)>>2]|0;g=(f|0)!=0;i=h+8|0;if(g)c[f+8>>2]=c[i>>2];j=c[i>>2]|0;k=c[j>>2]|0;if((k|0)==(h|0)){c[j>>2]=f;if((h|0)==(b|0)){l=f;m=0}else{l=b;m=c[j+4>>2]|0}}else{c[j+4>>2]=f;l=b;m=k}k=h+12|0;b=(a[k>>0]|0)!=0;if((h|0)==(d|0))n=l;else{j=d+8|0;o=c[j>>2]|0;c[i>>2]=o;c[((c[c[j>>2]>>2]|0)==(d|0)?o:o+4|0)>>2]=h;o=c[d>>2]|0;c[h>>2]=o;c[o+8>>2]=h;o=c[d+4>>2]|0;c[e>>2]=o;if(o|0)c[o+8>>2]=h;a[k>>0]=a[d+12>>0]|0;n=(l|0)==(d|0)?h:l}if(!(b&(n|0)!=0))return;if(g){a[f+12>>0]=1;return}else{p=m;q=n}while(1){n=p+8|0;m=c[n>>2]|0;f=p+12|0;g=(a[f>>0]|0)!=0;if((c[m>>2]|0)==(p|0)){if(g){r=p;s=q}else{a[f>>0]=1;a[m+12>>0]=0;b=p+4|0;l=c[b>>2]|0;c[m>>2]=l;if(l|0)c[l+8>>2]=m;l=m+8|0;c[n>>2]=c[l>>2];n=c[l>>2]|0;c[((c[n>>2]|0)==(m|0)?n:n+4|0)>>2]=p;c[b>>2]=m;c[l>>2]=p;r=c[m>>2]|0;s=(q|0)==(m|0)?p:q}t=c[r>>2]|0;u=(t|0)==0;if(!u?(a[t+12>>0]|0)==0:0){v=49;break}l=c[r+4>>2]|0;if(l|0?(a[l+12>>0]|0)==0:0){v=48;break}a[r+12>>0]=0;l=c[r+8>>2]|0;w=l+12|0;if((l|0)==(s|0)|(a[w>>0]|0)==0){v=47;break}else{x=s;y=l}}else{if(g){z=p;A=q}else{a[f>>0]=1;a[m+12>>0]=0;f=m+4|0;g=c[f>>2]|0;l=c[g>>2]|0;c[f>>2]=l;if(l|0)c[l+8>>2]=m;l=m+8|0;c[g+8>>2]=c[l>>2];f=c[l>>2]|0;c[((c[f>>2]|0)==(m|0)?f:f+4|0)>>2]=g;c[g>>2]=m;c[l>>2]=g;g=c[p>>2]|0;z=c[g+4>>2]|0;A=(q|0)==(g|0)?p:q}B=c[z>>2]|0;if(B|0?(a[B+12>>0]|0)==0:0){v=30;break}g=c[z+4>>2]|0;if(g|0?(a[g+12>>0]|0)==0:0){C=g;v=31;break}a[z+12>>0]=0;g=c[z+8>>2]|0;if((g|0)==(A|0)){D=A;v=29;break}if(!(a[g+12>>0]|0)){D=g;v=29;break}else{x=A;y=g}}g=c[y+8>>2]|0;p=c[((c[g>>2]|0)==(y|0)?g+4|0:g)>>2]|0;q=x}if((v|0)==29){a[D+12>>0]=1;return}else if((v|0)==30){D=c[z+4>>2]|0;if(!D)v=32;else{C=D;v=31}}else if((v|0)==47){a[w>>0]=1;return}else if((v|0)==48)if(u)v=50;else v=49;if((v|0)==31)if(!(a[C+12>>0]|0)){E=z;F=C;v=35}else v=32;else if((v|0)==49)if(!(a[t+12>>0]|0)){G=r;H=t;v=53}else v=50;if((v|0)==32){a[B+12>>0]=1;a[z+12>>0]=0;t=B+4|0;C=c[t>>2]|0;c[z>>2]=C;if(C|0)c[C+8>>2]=z;C=z+8|0;c[B+8>>2]=c[C>>2];u=c[C>>2]|0;c[((c[u>>2]|0)==(z|0)?u:u+4|0)>>2]=B;c[t>>2]=z;c[C>>2]=B;E=B;F=z;v=35}else if((v|0)==50){z=r+4|0;B=c[z>>2]|0;a[B+12>>0]=1;a[r+12>>0]=0;C=c[B>>2]|0;c[z>>2]=C;if(C|0)c[C+8>>2]=r;C=r+8|0;c[B+8>>2]=c[C>>2];z=c[C>>2]|0;c[((c[z>>2]|0)==(r|0)?z:z+4|0)>>2]=B;c[B>>2]=r;c[C>>2]=B;G=B;H=r;v=53}if((v|0)==35){r=c[E+8>>2]|0;B=r+12|0;a[E+12>>0]=a[B>>0]|0;a[B>>0]=1;a[F+12>>0]=1;F=r+4|0;B=c[F>>2]|0;E=c[B>>2]|0;c[F>>2]=E;if(E|0)c[E+8>>2]=r;E=r+8|0;c[B+8>>2]=c[E>>2];F=c[E>>2]|0;c[((c[F>>2]|0)==(r|0)?F:F+4|0)>>2]=B;c[B>>2]=r;c[E>>2]=B;return}else if((v|0)==53){v=c[G+8>>2]|0;B=v+12|0;a[G+12>>0]=a[B>>0]|0;a[B>>0]=1;a[H+12>>0]=1;H=c[v>>2]|0;B=H+4|0;G=c[B>>2]|0;c[v>>2]=G;if(G|0)c[G+8>>2]=v;G=v+8|0;c[H+8>>2]=c[G>>2];E=c[G>>2]|0;c[((c[E>>2]|0)==(v|0)?E:E+4|0)>>2]=H;c[B>>2]=v;c[G>>2]=H;return}}function Kn(a,b){a=a|0;b=b|0;var d=0;d=l;l=l+16|0;if((c[b>>2]|0)!=(c[b+4>>2]|0)){Ln(d,(c[a+4>>2]|0)+132|0,b,b);l=d;return}d=Ja(24)|0;o=0;ma(143,d|0,3);b=o;o=0;if(b&1){b=Pa()|0;Sa(d|0);$a(b|0)}else Xa(d|0,4424,56)}function Ln(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;g=l;l=l+16|0;h=g;i=d+4|0;j=c[i>>2]|0;k=d+4|0;a:do if(j){m=c[e+4>>2]|0;n=c[e>>2]|0;b:do if((n|0)==(m|0)){o=c[j+16>>2]|0;p=c[j+20>>2]|0;if((o|0)==(p|0)){q=j;r=k;s=25}else{t=k;u=j;v=p;p=o;while(1){o=m;w=p;while(1){if((o|0)==(m|0))break;x=a[o>>0]|0;y=a[w>>0]|0;if((x&255)<(y&255))break;if((y&255)<(x&255)){q=u;r=t;s=25;break b}w=w+1|0;if((w|0)==(v|0)){q=u;r=t;s=25;break b}else o=o+1|0}o=c[u>>2]|0;if(!o){z=u;A=u;s=18;break b}p=c[o+16>>2]|0;v=c[o+20>>2]|0;if((p|0)==(v|0)){q=o;r=u;s=25;break}else{w=u;u=o;t=w}}}}else{t=k;u=j;while(1){v=c[u+16>>2]|0;p=c[u+20>>2]|0;c:do if((v|0)!=(p|0)){w=n;o=v;while(1){if((w|0)==(m|0))break;x=a[w>>0]|0;y=a[o>>0]|0;if((x&255)<(y&255))break;if((y&255)<(x&255)){B=v;C=n;s=19;break c}o=o+1|0;if((o|0)==(p|0)){B=v;C=n;s=19;break c}else w=w+1|0}w=c[u>>2]|0;if(!w){z=u;A=u;s=18;break b}else{D=u;E=w}}else{B=v;C=n;s=19}while(0);if((s|0)==19){while(1){s=0;if((B|0)==(p|0))break;v=a[B>>0]|0;w=a[C>>0]|0;if((v&255)<(w&255))break;if((w&255)<(v&255)){q=u;r=t;s=25;break b}C=C+1|0;if((C|0)==(m|0)){q=u;r=t;s=25;break b}else{B=B+1|0;s=19}}F=u+4|0;p=c[F>>2]|0;if(!p)break;else{D=F;E=p}}t=D;u=E}G=u;H=F;break a}while(0);if((s|0)==18){G=z;H=A;break}else if((s|0)==25){G=q;H=r;break}}else{G=i;H=i}while(0);i=c[H>>2]|0;if(i|0){I=i;J=0;K=I;c[b>>2]=K;L=b+4|0;a[L>>0]=J;l=g;return}Mn(h,d,f);f=c[h>>2]|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=G;c[H>>2]=f;G=c[c[d>>2]>>2]|0;if(!G)M=f;else{c[d>>2]=G;M=c[H>>2]|0}Fn(c[k>>2]|0,M);M=d+8|0;c[M>>2]=(c[M>>2]|0)+1;I=c[h>>2]|0;J=1;K=I;c[b>>2]=K;L=b+4|0;a[L>>0]=J;l=g;return}function Mn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;f=kR(28)|0;c[b>>2]=f;c[b+4>>2]=d+4;d=b+8|0;a[d>>0]=0;g=f+16|0;c[g>>2]=0;h=f+20|0;c[h>>2]=0;c[f+24>>2]=0;i=e+4|0;j=(c[i>>2]|0)-(c[e>>2]|0)|0;if(!j){a[d>>0]=1;return}if((j|0)>=0){o=0;k=Z(209,j|0)|0;l=o;o=0;if(!(l&1)){c[h>>2]=k;c[g>>2]=k;c[f+24>>2]=k+j;j=c[e>>2]|0;e=(c[i>>2]|0)-j|0;if((e|0)<=0){a[d>>0]=1;return}CT(k|0,j|0,e|0)|0;c[h>>2]=k+e;a[d>>0]=1;return}}else{o=0;la(271,g|0);o=0}d=Pa()|0;e=c[g>>2]|0;if(e|0){if((c[h>>2]|0)!=(e|0))c[h>>2]=e;mR(e)}e=c[b>>2]|0;c[b>>2]=0;if(!e)$a(d|0);mR(e);$a(d|0)}function Nn(a,b){a=a|0;b=b|0;On((c[a+4>>2]|0)+132|0,b)|0;return}function On(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=b+4|0;f=c[e>>2]|0;if(!f){g=0;return g|0}h=c[d>>2]|0;i=c[d+4>>2]|0;a:do if((h|0)==(i|0)){d=f;while(1){j=c[d>>2]|0;if(!j)break;else d=j}k=d}else{j=e;l=f;while(1){m=l;b:while(1){n=c[m+20>>2]|0;o=c[m+16>>2]|0;p=h;while(1){if((o|0)==(n|0))break;q=a[o>>0]|0;r=a[p>>0]|0;if((q&255)<(r&255))break;if((r&255)<(q&255))break b;p=p+1|0;if((p|0)==(i|0))break b;else o=o+1|0}o=c[m+4>>2]|0;if(!o){k=j;break a}else m=o}l=c[m>>2]|0;if(!l){k=m;break}else j=m}}while(0);if((k|0)==(e|0)){g=0;return g|0}e=k+16|0;j=c[e>>2]|0;l=k+20|0;d=c[l>>2]|0;c:do if((j|0)!=(d|0)){o=h;p=j;while(1){if((o|0)==(i|0)){g=0;s=31;break}n=a[o>>0]|0;q=a[p>>0]|0;if((n&255)<(q&255)){g=0;s=31;break}if((q&255)<(n&255))break c;p=p+1|0;if((p|0)==(d|0))break c;else o=o+1|0}if((s|0)==31)return g|0}while(0);s=c[k+4>>2]|0;if(!s){d=k+8|0;i=c[d>>2]|0;if((c[i>>2]|0)==(k|0))t=i;else{i=d;do{d=c[i>>2]|0;i=d+8|0;j=c[i>>2]|0}while((c[j>>2]|0)!=(d|0));t=j}}else{i=s;while(1){s=c[i>>2]|0;if(!s)break;else i=s}t=i}if((c[b>>2]|0)==(k|0))c[b>>2]=t;t=b+8|0;c[t>>2]=(c[t>>2]|0)+-1;Jn(f,k);f=c[e>>2]|0;if(f|0){if((c[l>>2]|0)!=(f|0))c[l>>2]=f;mR(f)}mR(k);g=1;return g|0}function Pn(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=a+4|0;a=c[b>>2]|0;d=a+120|0;e=a+124|0;wn(d,c[e>>2]|0);c[a+128>>2]=0;c[d>>2]=e;c[e>>2]=0;e=c[b>>2]|0;d=c[e+68>>2]|0;a=e+72|0;f=c[a>>2]|0;if((f|0)==(d|0))g=e;else{e=f;do{f=e+-40|0;c[a>>2]=f;rd[c[c[f>>2]>>2]&511](f);e=c[a>>2]|0}while((e|0)!=(d|0));g=c[b>>2]|0}d=g+132|0;e=g+136|0;vn(d,c[e>>2]|0);c[g+140>>2]=0;c[d>>2]=e;c[e>>2]=0;e=c[b>>2]|0;b=c[e+80>>2]|0;d=e+84|0;e=c[d>>2]|0;if((e|0)==(b|0))return;else h=e;do{e=h+-40|0;c[d>>2]=e;rd[c[c[e>>2]>>2]&511](e);h=c[d>>2]|0}while((h|0)!=(b|0));return}function Qn(a){a=a|0;return (c[a+4>>2]|0)+24|0}function Rn(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0;g=c[f+16>>2]|0;if(!g){f=Ja(24)|0;o=0;ma(143,f|0,3);h=o;o=0;if(h&1){h=Pa()|0;Sa(f|0);$a(h|0)}else Xa(f|0,4424,56)}f=c[d+4>>2]|0;d=c[f+68>>2]|0;h=c[f+72>>2]|0;a:do if((d|0)!=(h|0)){f=c[e>>2]|0;i=(c[e+4>>2]|0)-f|0;j=f;f=d;b:while(1){k=c[f+8>>2]|0;l=c[f+4>>2]|0;m=l;n=k;c:do if((k-l|0)==(i|0)){if((m|0)==(n|0))break b;else{p=m;q=j}while(1){if((a[p>>0]|0)!=(a[q>>0]|0))break c;p=p+1|0;if((p|0)==(n|0))break b;else q=q+1|0}}while(0);n=f+40|0;if((n|0)==(h|0))break a;else f=n}ud[c[(c[g>>2]|0)+24>>2]&63](b,g,f+16|0,f+28|0);return}while(0);c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;return}function Sn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=d+16|0;d=c[e>>2]|0;if(!d){f=Ja(24)|0;o=0;ma(143,f|0,3);g=o;o=0;if(g&1){g=Pa()|0;Sa(f|0);$a(g|0)}else Xa(f|0,4424,56)}f=c[b+4>>2]|0;b=c[f+80>>2]|0;g=c[f+84>>2]|0;a:do if((b|0)!=(g|0)){f=b;h=d;while(1){if(h){o=0;oa(c[(c[h>>2]|0)+24>>2]|0,a|0,h|0,f+16|0,f+28|0);i=o;o=0;if(!(i&1))break}else{i=Ja(4)|0;c[i>>2]=9976;o=0;na(72,i|0,4392,52);o=0}i=Qa(0)|0;Ka(i|0)|0;Na();i=f+40|0;if((i|0)==(g|0))break a;f=i;h=c[e>>2]|0}return}while(0);c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function Tn(a){a=a|0;mR(a);return}function Un(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=l;l=l+64|0;e=d+40|0;f=d;g=b+16|0;b=c[g>>2]|0;if(!b){h=Ja(24)|0;o=0;ma(143,h|0,3);i=o;o=0;if(!(i&1))Xa(h|0,4424,56);i=Pa()|0;j=z;Sa(h|0);k=i;m=j;$a(k|0)}j=a+4|0;a=c[j>>2]|0;i=c[a+120>>2]|0;h=a+124|0;if((i|0)==(h|0)){n=a;p=n+120|0;q=n+124|0;r=c[q>>2]|0;wn(p,r);s=n+128|0;c[s>>2]=0;c[p>>2]=q;c[q>>2]=0;l=d;return}a=f+4|0;t=f+4|0;u=f+16|0;v=e+4|0;w=f+28|0;x=e+12|0;y=e+16|0;A=f+28|0;B=f+16|0;C=f+8|0;D=f+20|0;E=f+32|0;F=i;i=b;while(1){b=F+16|0;td[c[(c[i>>2]|0)+24>>2]&127](e,i,F+28|0);c[f>>2]=10400;G=a;H=G+36|0;do{c[G>>2]=0;G=G+4|0}while((G|0)<(H|0));if((t|0)!=(b|0)?(o=0,na(84,t|0,c[b>>2]|0,c[F+20>>2]|0),G=o,o=0,G&1):0){I=45;break}o=0;na(84,u|0,c[e>>2]|0,c[v>>2]|0);G=o;o=0;if(G&1){I=45;break}o=0;na(84,w|0,c[x>>2]|0,c[y>>2]|0);G=o;o=0;if(G&1){I=45;break}G=c[j>>2]|0;H=G+72|0;J=c[H>>2]|0;if((J|0)==(c[G+76>>2]|0)){o=0;ma(164,G+68|0,f|0);G=o;o=0;if(G&1){I=45;break}}else{o=0;ma(163,J|0,f|0);J=o;o=0;if(J&1){I=45;break}c[H>>2]=(c[H>>2]|0)+40}c[f>>2]=10400;H=c[A>>2]|0;if(H|0){if((c[E>>2]|0)!=(H|0))c[E>>2]=H;mR(H)}H=c[B>>2]|0;if(H|0){if((c[D>>2]|0)!=(H|0))c[D>>2]=H;mR(H)}H=c[a>>2]|0;if(H|0){if((c[C>>2]|0)!=(H|0))c[C>>2]=H;mR(H)}H=c[x>>2]|0;if(H|0){if((c[y>>2]|0)!=(H|0))c[y>>2]=H;mR(H)}H=c[e>>2]|0;if(H|0){if((c[v>>2]|0)!=(H|0))c[v>>2]=H;mR(H)}H=c[F+4>>2]|0;if(!H){J=F+8|0;G=c[J>>2]|0;if((c[G>>2]|0)==(F|0))K=G;else{G=J;do{J=c[G>>2]|0;G=J+8|0;L=c[G>>2]|0}while((c[L>>2]|0)!=(J|0));K=L}}else{G=H;while(1){b=c[G>>2]|0;if(!b)break;else G=b}K=G}if((K|0)==(h|0)){I=7;break}i=c[g>>2]|0;if(!i){I=9;break}else F=K}if((I|0)==7){n=c[j>>2]|0;p=n+120|0;q=n+124|0;r=c[q>>2]|0;wn(p,r);s=n+128|0;c[s>>2]=0;c[p>>2]=q;c[q>>2]=0;l=d;return}else if((I|0)==9){d=Ja(4)|0;c[d>>2]=9976;Xa(d|0,4392,52)}else if((I|0)==45){I=Pa()|0;d=z;c[f>>2]=10400;f=c[A>>2]|0;if(f|0){if((c[E>>2]|0)!=(f|0))c[E>>2]=f;mR(f)}f=c[B>>2]|0;if(f|0){if((c[D>>2]|0)!=(f|0))c[D>>2]=f;mR(f)}f=c[a>>2]|0;if(f|0){if((c[C>>2]|0)!=(f|0))c[C>>2]=f;mR(f)}f=c[x>>2]|0;if(f|0){if((c[y>>2]|0)!=(f|0))c[y>>2]=f;mR(f)}f=c[e>>2]|0;if(f|0){if((c[v>>2]|0)!=(f|0))c[v>>2]=f;mR(f)}k=I;m=d;$a(k|0)}}function Vn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0,r=0,s=0;c[a>>2]=10400;d=a+4|0;e=b+4|0;c[d>>2]=0;f=a+8|0;c[f>>2]=0;c[a+12>>2]=0;g=b+8|0;h=(c[g>>2]|0)-(c[e>>2]|0)|0;do if(h|0){if((h|0)>=0){o=0;i=Z(209,h|0)|0;j=o;o=0;if(!(j&1)){c[f>>2]=i;c[d>>2]=i;c[a+12>>2]=i+h;j=c[e>>2]|0;k=(c[g>>2]|0)-j|0;if((k|0)<=0)break;CT(i|0,j|0,k|0)|0;c[f>>2]=i+k;break}}else{o=0;la(271,d|0);o=0}k=Pa()|0;i=z;j=c[d>>2]|0;if(j|0){if((c[f>>2]|0)!=(j|0))c[f>>2]=j;mR(j)}l=i;m=k;$a(m|0)}while(0);g=a+16|0;e=b+16|0;c[g>>2]=0;h=a+20|0;c[h>>2]=0;c[a+24>>2]=0;k=b+20|0;i=(c[k>>2]|0)-(c[e>>2]|0)|0;do if(!i)n=21;else{if((i|0)>=0){o=0;j=Z(209,i|0)|0;p=o;o=0;if(!(p&1)){c[h>>2]=j;c[g>>2]=j;c[a+24>>2]=j+i;p=c[e>>2]|0;q=(c[k>>2]|0)-p|0;if((q|0)<=0){n=21;break}CT(j|0,p|0,q|0)|0;c[h>>2]=j+q;n=21;break}}else{o=0;la(271,g|0);o=0}q=Pa()|0;j=z;p=c[g>>2]|0;if(p|0){if((c[h>>2]|0)!=(p|0))c[h>>2]=p;mR(p)}r=j;s=q}while(0);if((n|0)==21){n=a+28|0;k=b+28|0;c[n>>2]=0;e=a+32|0;c[e>>2]=0;c[a+36>>2]=0;i=b+32|0;b=(c[i>>2]|0)-(c[k>>2]|0)|0;if(!b)return;if((b|0)>=0){o=0;q=Z(209,b|0)|0;j=o;o=0;if(!(j&1)){c[e>>2]=q;c[n>>2]=q;c[a+36>>2]=q+b;b=c[k>>2]|0;k=(c[i>>2]|0)-b|0;if((k|0)<=0)return;CT(q|0,b|0,k|0)|0;c[e>>2]=q+k;return}}else{o=0;la(271,n|0);o=0}k=Pa()|0;q=z;b=c[n>>2]|0;if(b|0){if((c[e>>2]|0)!=(b|0))c[e>>2]=b;mR(b)}b=c[g>>2]|0;if(!b){r=q;s=k}else{if((c[h>>2]|0)!=(b|0))c[h>>2]=b;mR(b);r=q;s=k}}k=c[d>>2]|0;if(!k){l=r;m=s;$a(m|0)}if((c[f>>2]|0)!=(k|0))c[f>>2]=k;mR(k);l=r;m=s;$a(m|0)}function Wn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e|0)/40|0;g=f+1|0;if(g>>>0>107374182)CP(a);h=a+8|0;i=((c[h>>2]|0)-e|0)/40|0;e=i<<1;j=i>>>0<53687091?(e>>>0<g>>>0?g:e):107374182;do if(j){if(j>>>0<=107374182){e=kR(j*40|0)|0;k=e;l=e;break}e=Ja(8)|0;o=0;ma(153,e|0,92198);g=o;o=0;if(g&1){g=Pa()|0;Sa(e|0);$a(g|0)}else{c[e>>2]=57580;Xa(e|0,7152,205)}}else{k=0;l=0}while(0);e=k+(f*40|0)|0;f=e;g=k+(j*40|0)|0;o=0;ma(163,e|0,b|0);b=o;o=0;if(b&1){b=Pa()|0;if(!k)$a(b|0);mR(l);$a(b|0)}b=e+40|0;l=c[a>>2]|0;k=c[d>>2]|0;if((k|0)==(l|0)){m=f;n=l;p=l}else{j=k;k=f;f=e;do{c[f+-40>>2]=10400;e=f+-36|0;i=j+-36|0;c[e>>2]=0;q=f+-32|0;c[q>>2]=0;c[f+-28>>2]=0;c[e>>2]=c[i>>2];e=j+-32|0;c[q>>2]=c[e>>2];q=j+-28|0;c[f+-28>>2]=c[q>>2];c[q>>2]=0;c[e>>2]=0;c[i>>2]=0;i=f+-24|0;e=j+-24|0;c[i>>2]=0;q=f+-20|0;c[q>>2]=0;c[f+-16>>2]=0;c[i>>2]=c[e>>2];i=j+-20|0;c[q>>2]=c[i>>2];q=j+-16|0;c[f+-16>>2]=c[q>>2];c[q>>2]=0;c[i>>2]=0;c[e>>2]=0;e=f+-12|0;i=j+-12|0;c[e>>2]=0;q=f+-8|0;c[q>>2]=0;c[f+-4>>2]=0;c[e>>2]=c[i>>2];e=j+-8|0;c[q>>2]=c[e>>2];q=j+-4|0;j=j+-40|0;c[f+-4>>2]=c[q>>2];c[q>>2]=0;c[e>>2]=0;c[i>>2]=0;f=k+-40|0;k=f}while((j|0)!=(l|0));m=k;n=c[a>>2]|0;p=c[d>>2]|0}c[a>>2]=m;c[d>>2]=b;c[h>>2]=g;g=n;if((p|0)!=(g|0)){h=p;do{h=h+-40|0;rd[c[c[h>>2]>>2]&511](h)}while((h|0)!=(g|0))}if(!n)return;mR(n);return}function Xn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=l;l=l+64|0;e=d+40|0;f=d;g=b+16|0;b=c[g>>2]|0;if(!b){h=Ja(24)|0;o=0;ma(143,h|0,3);i=o;o=0;if(!(i&1))Xa(h|0,4424,56);i=Pa()|0;j=z;Sa(h|0);k=i;m=j;$a(k|0)}j=a+4|0;a=c[j>>2]|0;i=c[a+132>>2]|0;h=a+136|0;if((i|0)==(h|0)){n=a;p=n+132|0;q=n+136|0;r=c[q>>2]|0;vn(p,r);s=n+140|0;c[s>>2]=0;c[p>>2]=q;c[q>>2]=0;l=d;return}a=f+4|0;t=f+16|0;u=e+4|0;v=f+28|0;w=e+12|0;x=e+16|0;y=f+28|0;A=f+16|0;B=f+8|0;C=f+20|0;D=f+32|0;E=i;i=b;while(1){td[c[(c[i>>2]|0)+24>>2]&127](e,i,E+16|0);c[f>>2]=10428;b=a;F=b+36|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(F|0));o=0;na(84,t|0,c[e>>2]|0,c[u>>2]|0);b=o;o=0;if(b&1){G=43;break}o=0;na(84,v|0,c[w>>2]|0,c[x>>2]|0);b=o;o=0;if(b&1){G=43;break}b=c[j>>2]|0;F=b+84|0;H=c[F>>2]|0;if((H|0)==(c[b+88>>2]|0)){o=0;ma(166,b+80|0,f|0);b=o;o=0;if(b&1){G=43;break}}else{o=0;ma(165,H|0,f|0);H=o;o=0;if(H&1){G=43;break}c[F>>2]=(c[F>>2]|0)+40}c[f>>2]=10428;F=c[y>>2]|0;if(F|0){if((c[D>>2]|0)!=(F|0))c[D>>2]=F;mR(F)}F=c[A>>2]|0;if(F|0){if((c[C>>2]|0)!=(F|0))c[C>>2]=F;mR(F)}F=c[a>>2]|0;if(F|0){if((c[B>>2]|0)!=(F|0))c[B>>2]=F;mR(F)}F=c[w>>2]|0;if(F|0){if((c[x>>2]|0)!=(F|0))c[x>>2]=F;mR(F)}F=c[e>>2]|0;if(F|0){if((c[u>>2]|0)!=(F|0))c[u>>2]=F;mR(F)}F=c[E+4>>2]|0;if(!F){H=E+8|0;b=c[H>>2]|0;if((c[b>>2]|0)==(E|0))I=b;else{b=H;do{H=c[b>>2]|0;b=H+8|0;J=c[b>>2]|0}while((c[J>>2]|0)!=(H|0));I=J}}else{b=F;while(1){J=c[b>>2]|0;if(!J)break;else b=J}I=b}if((I|0)==(h|0)){G=7;break}i=c[g>>2]|0;if(!i){G=9;break}else E=I}if((G|0)==7){n=c[j>>2]|0;p=n+132|0;q=n+136|0;r=c[q>>2]|0;vn(p,r);s=n+140|0;c[s>>2]=0;c[p>>2]=q;c[q>>2]=0;l=d;return}else if((G|0)==9){d=Ja(4)|0;c[d>>2]=9976;Xa(d|0,4392,52)}else if((G|0)==43){G=Pa()|0;d=z;c[f>>2]=10428;f=c[y>>2]|0;if(f|0){if((c[D>>2]|0)!=(f|0))c[D>>2]=f;mR(f)}f=c[A>>2]|0;if(f|0){if((c[C>>2]|0)!=(f|0))c[C>>2]=f;mR(f)}f=c[a>>2]|0;if(f|0){if((c[B>>2]|0)!=(f|0))c[B>>2]=f;mR(f)}f=c[w>>2]|0;if(f|0){if((c[x>>2]|0)!=(f|0))c[x>>2]=f;mR(f)}f=c[e>>2]|0;if(f|0){if((c[u>>2]|0)!=(f|0))c[u>>2]=f;mR(f)}k=G;m=d;$a(k|0)}}function Yn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0,r=0,s=0;c[a>>2]=10428;d=a+4|0;e=b+4|0;c[d>>2]=0;f=a+8|0;c[f>>2]=0;c[a+12>>2]=0;g=b+8|0;h=(c[g>>2]|0)-(c[e>>2]|0)|0;do if(h|0){if((h|0)>=0){o=0;i=Z(209,h|0)|0;j=o;o=0;if(!(j&1)){c[f>>2]=i;c[d>>2]=i;c[a+12>>2]=i+h;j=c[e>>2]|0;k=(c[g>>2]|0)-j|0;if((k|0)<=0)break;CT(i|0,j|0,k|0)|0;c[f>>2]=i+k;break}}else{o=0;la(271,d|0);o=0}k=Pa()|0;i=z;j=c[d>>2]|0;if(j|0){if((c[f>>2]|0)!=(j|0))c[f>>2]=j;mR(j)}l=i;m=k;$a(m|0)}while(0);g=a+16|0;e=b+16|0;c[g>>2]=0;h=a+20|0;c[h>>2]=0;c[a+24>>2]=0;k=b+20|0;i=(c[k>>2]|0)-(c[e>>2]|0)|0;do if(!i)n=21;else{if((i|0)>=0){o=0;j=Z(209,i|0)|0;p=o;o=0;if(!(p&1)){c[h>>2]=j;c[g>>2]=j;c[a+24>>2]=j+i;p=c[e>>2]|0;q=(c[k>>2]|0)-p|0;if((q|0)<=0){n=21;break}CT(j|0,p|0,q|0)|0;c[h>>2]=j+q;n=21;break}}else{o=0;la(271,g|0);o=0}q=Pa()|0;j=z;p=c[g>>2]|0;if(p|0){if((c[h>>2]|0)!=(p|0))c[h>>2]=p;mR(p)}r=j;s=q}while(0);if((n|0)==21){n=a+28|0;k=b+28|0;c[n>>2]=0;e=a+32|0;c[e>>2]=0;c[a+36>>2]=0;i=b+32|0;b=(c[i>>2]|0)-(c[k>>2]|0)|0;if(!b)return;if((b|0)>=0){o=0;q=Z(209,b|0)|0;j=o;o=0;if(!(j&1)){c[e>>2]=q;c[n>>2]=q;c[a+36>>2]=q+b;b=c[k>>2]|0;k=(c[i>>2]|0)-b|0;if((k|0)<=0)return;CT(q|0,b|0,k|0)|0;c[e>>2]=q+k;return}}else{o=0;la(271,n|0);o=0}k=Pa()|0;q=z;b=c[n>>2]|0;if(b|0){if((c[e>>2]|0)!=(b|0))c[e>>2]=b;mR(b)}b=c[g>>2]|0;if(!b){r=q;s=k}else{if((c[h>>2]|0)!=(b|0))c[h>>2]=b;mR(b);r=q;s=k}}k=c[d>>2]|0;if(!k){l=r;m=s;$a(m|0)}if((c[f>>2]|0)!=(k|0))c[f>>2]=k;mR(k);l=r;m=s;$a(m|0)}function Zn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e|0)/40|0;g=f+1|0;if(g>>>0>107374182)CP(a);h=a+8|0;i=((c[h>>2]|0)-e|0)/40|0;e=i<<1;j=i>>>0<53687091?(e>>>0<g>>>0?g:e):107374182;do if(j){if(j>>>0<=107374182){e=kR(j*40|0)|0;k=e;l=e;break}e=Ja(8)|0;o=0;ma(153,e|0,92198);g=o;o=0;if(g&1){g=Pa()|0;Sa(e|0);$a(g|0)}else{c[e>>2]=57580;Xa(e|0,7152,205)}}else{k=0;l=0}while(0);e=k+(f*40|0)|0;f=e;g=k+(j*40|0)|0;o=0;ma(165,e|0,b|0);b=o;o=0;if(b&1){b=Pa()|0;if(!k)$a(b|0);mR(l);$a(b|0)}b=e+40|0;l=c[a>>2]|0;k=c[d>>2]|0;if((k|0)==(l|0)){m=f;n=l;p=l}else{j=k;k=f;f=e;do{c[f+-40>>2]=10428;e=f+-36|0;i=j+-36|0;c[e>>2]=0;q=f+-32|0;c[q>>2]=0;c[f+-28>>2]=0;c[e>>2]=c[i>>2];e=j+-32|0;c[q>>2]=c[e>>2];q=j+-28|0;c[f+-28>>2]=c[q>>2];c[q>>2]=0;c[e>>2]=0;c[i>>2]=0;i=f+-24|0;e=j+-24|0;c[i>>2]=0;q=f+-20|0;c[q>>2]=0;c[f+-16>>2]=0;c[i>>2]=c[e>>2];i=j+-20|0;c[q>>2]=c[i>>2];q=j+-16|0;c[f+-16>>2]=c[q>>2];c[q>>2]=0;c[i>>2]=0;c[e>>2]=0;e=f+-12|0;i=j+-12|0;c[e>>2]=0;q=f+-8|0;c[q>>2]=0;c[f+-4>>2]=0;c[e>>2]=c[i>>2];e=j+-8|0;c[q>>2]=c[e>>2];q=j+-4|0;j=j+-40|0;c[f+-4>>2]=c[q>>2];c[q>>2]=0;c[e>>2]=0;c[i>>2]=0;f=k+-40|0;k=f}while((j|0)!=(l|0));m=k;n=c[a>>2]|0;p=c[d>>2]|0}c[a>>2]=m;c[d>>2]=b;c[h>>2]=g;g=n;if((p|0)!=(g|0)){h=p;do{h=h+-40|0;rd[c[c[h>>2]>>2]&511](h)}while((h|0)!=(g|0))}if(!n)return;mR(n);return}function _n(a,b){a=a|0;b=b|0;var d=0;d=(c[a+4>>2]|0)+96|0;if((d|0)==(b|0))return;Dn(d,c[b>>2]|0,c[b+4>>2]|0);return}function $n(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[b+4>>2]|0;b=d+96|0;c[a>>2]=0;e=a+4|0;c[e>>2]=0;c[a+8>>2]=0;f=d+100|0;d=(c[f>>2]|0)-(c[b>>2]|0)|0;if(!d)return;if((d|0)>=0){o=0;g=Z(209,d|0)|0;h=o;o=0;if(!(h&1)){c[e>>2]=g;c[a>>2]=g;c[a+8>>2]=g+d;d=c[b>>2]|0;b=(c[f>>2]|0)-d|0;if((b|0)<=0)return;CT(g|0,d|0,b|0)|0;c[e>>2]=g+b;return}}else{o=0;la(271,a|0);o=0}b=Pa()|0;g=c[a>>2]|0;if(!g)$a(b|0);if((c[e>>2]|0)!=(g|0))c[e>>2]=g;mR(g);$a(b|0)}function ao(a){a=a|0;return Wt(a)|0}function bo(a){a=a|0;mR(a);return}function co(a){a=a|0;return 71666}function eo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;do switch(e|0){case 1:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;d=Z(209,48)|0;f=o;o=0;if(!(f&1)){c[b>>2]=d;c[b+8>>2]=-2147483600;c[b+4>>2]=33;g=d;h=70940;i=g+33|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=d+33|0;a[j>>0]=0;return}break}case 2:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;f=Z(209,48)|0;k=o;o=0;if(!(k&1)){c[b>>2]=f;c[b+8>>2]=-2147483600;c[b+4>>2]=36;g=f;h=70974;i=g+36|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=f+36|0;a[j>>0]=0;return}break}case 3:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;d=Z(209,80)|0;k=o;o=0;if(!(k&1)){c[b>>2]=d;c[b+8>>2]=-2147483568;c[b+4>>2]=68;g=d;h=71011;i=g+68|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=d+68|0;a[j>>0]=0;return}break}case 4:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;f=Z(209,96)|0;k=o;o=0;if(!(k&1)){c[b>>2]=f;c[b+8>>2]=-2147483552;c[b+4>>2]=80;g=f;h=71080;i=g+80|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=f+80|0;a[j>>0]=0;return}break}case 5:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;d=Z(209,48)|0;k=o;o=0;if(!(k&1)){c[b>>2]=d;c[b+8>>2]=-2147483600;c[b+4>>2]=34;g=d;h=71161;i=g+34|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=d+34|0;a[j>>0]=0;return}break}case 6:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;f=Z(209,32)|0;k=o;o=0;if(!(k&1)){c[b>>2]=f;c[b+8>>2]=-2147483616;c[b+4>>2]=30;g=f;h=71196;i=g+30|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=f+30|0;a[j>>0]=0;return}break}case 7:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;d=Z(209,48)|0;k=o;o=0;if(!(k&1)){c[b>>2]=d;c[b+8>>2]=-2147483600;c[b+4>>2]=33;g=d;h=71227;i=g+33|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=d+33|0;a[j>>0]=0;return}break}case 8:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;f=Z(209,48)|0;k=o;o=0;if(!(k&1)){c[b>>2]=f;c[b+8>>2]=-2147483600;c[b+4>>2]=32;g=f;h=71261;i=g+32|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=f+32|0;a[j>>0]=0;return}break}case 9:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;d=Z(209,48)|0;k=o;o=0;if(!(k&1)){c[b>>2]=d;c[b+8>>2]=-2147483600;c[b+4>>2]=37;g=d;h=71294;i=g+37|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=d+37|0;a[j>>0]=0;return}break}case 10:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;f=Z(209,48)|0;k=o;o=0;if(!(k&1)){c[b>>2]=f;c[b+8>>2]=-2147483600;c[b+4>>2]=46;g=f;h=71332;i=g+46|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=f+46|0;a[j>>0]=0;return}break}case 11:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;d=Z(209,32)|0;k=o;o=0;if(!(k&1)){c[b>>2]=d;c[b+8>>2]=-2147483616;c[b+4>>2]=28;g=d;h=71379;i=g+28|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=d+28|0;a[j>>0]=0;return}break}case 12:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;f=Z(209,48)|0;k=o;o=0;if(!(k&1)){c[b>>2]=f;c[b+8>>2]=-2147483600;c[b+4>>2]=45;g=f;h=71408;i=g+45|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=f+45|0;a[j>>0]=0;return}break}case 13:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;d=Z(209,48)|0;k=o;o=0;if(!(k&1)){c[b>>2]=d;c[b+8>>2]=-2147483600;c[b+4>>2]=43;g=d;h=71454;i=g+43|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=d+43|0;a[j>>0]=0;return}break}case 14:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;f=Z(209,80)|0;k=o;o=0;if(!(k&1)){c[b>>2]=f;c[b+8>>2]=-2147483568;c[b+4>>2]=68;g=f;h=71498;i=g+68|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=f+68|0;a[j>>0]=0;return}break}case 15:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;d=Z(209,48)|0;k=o;o=0;if(!(k&1)){c[b>>2]=d;c[b+8>>2]=-2147483600;c[b+4>>2]=32;g=d;h=71567;i=g+32|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=d+32|0;a[j>>0]=0;return}break}case 16:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;f=Z(209,64)|0;k=o;o=0;if(!(k&1)){c[b>>2]=f;c[b+8>>2]=-2147483584;c[b+4>>2]=48;g=f;h=71600;i=g+48|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=f+48|0;a[j>>0]=0;return}break}default:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;d=Z(209,32)|0;k=o;o=0;if(!(k&1)){c[b>>2]=d;c[b+8>>2]=-2147483616;c[b+4>>2]=16;g=d;h=71649;i=g+16|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(i|0));j=d+16|0;a[j>>0]=0;return}}}while(0);j=Qa(0)|0;Id(j)}function fo(){(a[93376]|0)==0?iT(93376)|0:0;return 10024}function go(b){b=b|0;var d=0;c[b>>2]=10036;d=b+12|0;if((a[d+11>>0]|0)>=0){mR(b);return}mR(c[d>>2]|0);mR(b);return}function ho(b){b=b|0;var d=0,e=0;d=b+12|0;if((a[d+11>>0]|0)<0){e=c[d>>2]|0;return e|0}else{e=d;return e|0}return 0}function io(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;c[a>>2]=10036;e=a+4|0;c[e>>2]=b;c[a+8>>2]=d;jo(a+12|0,e);return}function jo(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=l;l=l+32|0;f=e+16|0;g=e+12|0;h=e;i=c[d+4>>2]|0;c[f>>2]=dd[c[(c[i>>2]|0)+8>>2]&255](i)|0;c[g>>2]=c[d>>2];o=0;ma(167,h|0,d|0);d=o;o=0;do if(d&1){i=Qa(0)|0;j=i}else{o=0;pa(22,b|0,71764,f|0,g|0,h|0);i=o;o=0;if(i&1){i=Qa(0)|0;if((a[h+11>>0]|0)>=0){j=i;break}mR(c[h>>2]|0);j=i;break}if((a[h+11>>0]|0)<0)mR(c[h>>2]|0);l=e;return}while(0);Ka(j|0)|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;o=0;ka(3);b=o;o=0;if(b&1){b=Qa(0)|0;Id(b)}else{l=e;return}}function ko(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;h=l;l=l+192|0;i=h+136|0;j=h;k=j+56|0;m=j+4|0;c[j>>2]=20;c[k>>2]=40;o=0;ma(69,j+56|0,m|0);n=o;o=0;if(n&1){n=Pa()|0;p=z;q=n;rH(k);$a(q|0)}c[j+128>>2]=0;c[j+132>>2]=-1;c[j>>2]=7388;c[k>>2]=7408;o=0;la(216,m|0);n=o;o=0;do if(n&1){r=Pa()|0;s=z;t=r}else{c[m>>2]=7440;r=j+36|0;c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;c[r+12>>2]=0;c[j+52>>2]=16;c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;o=0;ma(70,m|0,i|0);u=o;o=0;if(u&1){u=Pa()|0;v=z;if((a[i+11>>0]|0)<0)mR(c[i>>2]|0);if((a[r+11>>0]|0)<0)mR(c[r>>2]|0);vH(m);s=v;t=u;break}if((a[i+11>>0]|0)<0)mR(c[i>>2]|0);u=i+8|0;c[i>>2]=u;c[i+4>>2]=3;c[u>>2]=e;c[i+12>>2]=23;c[i+16>>2]=217;c[i+20>>2]=f;c[i+24>>2]=24;c[i+28>>2]=218;c[i+32>>2]=g;c[i+36>>2]=25;c[i+40>>2]=219;o=0;oa(39,j|0,d|0,u|0,3);u=o;o=0;if(!(u&1)?(o=0,ma(71,b|0,m|0),u=o,o=0,!(u&1)):0){c[j>>2]=7388;c[k>>2]=7408;c[m>>2]=7440;if((a[r+11>>0]|0)>=0){vH(m);ZH(j,7420);rH(k);l=h;return}mR(c[r>>2]|0);vH(m);ZH(j,7420);rH(k);l=h;return}u=Pa()|0;c[j>>2]=7388;c[k>>2]=7408;c[m>>2]=7440;if((a[r+11>>0]|0)>=0){vH(m);ZH(j,7420);rH(k);$a(u|0)}mR(c[r>>2]|0);vH(m);ZH(j,7420);rH(k);$a(u|0)}while(0);ZH(j,7420);p=s;q=t;rH(k);$a(q|0)}function lo(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;if((a[e+-1>>0]|0)==112){yI(b,c[g>>2]|0)|0;return}e=c[g>>2]|0;if((f|0)<=-1){he(b,e,$F(e)|0)|0;return}a:do if(!f)h=0;else{g=0;while(1){if(!(a[e+g>>0]|0)){h=g;break a}d=g+1|0;if((d|0)<(f|0))g=d;else{h=d;break}}}while(0);zI(b,e,h)|0;return}function mo(a){a=a|0;Ha(71795,71901,243,72030);return 0}function no(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;d=l;l=l+16|0;h=d;if((a[e+-1>>0]|0)==99){a[h>>0]=c[g>>2];he(b,h,1)|0;l=d;return}if((f|0)>-1){so(b,g,f);l=d;return}else{wI(b,c[g>>2]|0)|0;l=d;return}}function oo(a){a=a|0;return c[a>>2]|0}function po(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((f|0)>-1){ro(b,g,f);return}else{f=a[g+11>>0]|0;e=f<<24>>24<0;he(b,e?c[g>>2]|0:g,e?c[g+4>>2]|0:f&255)|0;return}}function qo(a){a=a|0;Ha(71795,71901,243,72030);return 0}function ro(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0;f=l;l=l+160|0;g=f+136|0;h=f;i=h+56|0;j=h+4|0;c[h>>2]=20;c[i>>2]=40;o=0;ma(69,h+56|0,j|0);k=o;o=0;if(k&1){k=Pa()|0;m=z;n=k;rH(i);$a(n|0)}c[h+128>>2]=0;c[h+132>>2]=-1;c[h>>2]=7388;c[i>>2]=7408;o=0;la(216,j|0);k=o;o=0;do if(k&1){p=Pa()|0;q=z;r=p}else{c[j>>2]=7440;p=h+36|0;c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[p+12>>2]=0;c[h+52>>2]=16;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;o=0;ma(70,j|0,g|0);s=o;o=0;if(s&1){s=Pa()|0;t=z;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);if((a[p+11>>0]|0)<0)mR(c[p>>2]|0);vH(j);q=t;r=s;break}if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);s=a[d+11>>0]|0;t=s<<24>>24<0;o=0;$(53,h|0,(t?c[d>>2]|0:d)|0,(t?c[d+4>>2]|0:s&255)|0)|0;s=o;o=0;if(s&1){s=Pa()|0;u=z;v=s}else{o=0;ma(71,g|0,j|0);s=o;o=0;do if(s&1){t=Pa()|0;w=z;x=t}else{t=g+11|0;y=a[t>>0]|0;A=y<<24>>24<0;B=A?c[g+4>>2]|0:y&255;o=0;$(92,b|0,(A?c[g>>2]|0:g)|0,((B|0)<(e|0)?B:e)|0)|0;B=o;o=0;if(B&1){B=Pa()|0;A=z;if((a[t>>0]|0)>=0){w=A;x=B;break}mR(c[g>>2]|0);w=A;x=B;break}if((a[t>>0]|0)<0)mR(c[g>>2]|0);c[h>>2]=7388;c[i>>2]=7408;c[j>>2]=7440;if((a[p+11>>0]|0)>=0){vH(j);ZH(h,7420);rH(i);l=f;return}mR(c[p>>2]|0);vH(j);ZH(h,7420);rH(i);l=f;return}while(0);u=w;v=x}c[h>>2]=7388;c[i>>2]=7408;c[j>>2]=7440;if((a[p+11>>0]|0)>=0){vH(j);ZH(h,7420);rH(i);$a(v|0)}mR(c[p>>2]|0);vH(j);ZH(h,7420);rH(i);$a(v|0)}while(0);ZH(h,7420);m=q;n=r;rH(i);$a(n|0)}function so(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0;f=l;l=l+160|0;g=f+136|0;h=f;i=h+56|0;j=h+4|0;c[h>>2]=20;c[i>>2]=40;o=0;ma(69,h+56|0,j|0);k=o;o=0;if(k&1){k=Pa()|0;m=z;n=k;rH(i);$a(n|0)}c[h+128>>2]=0;c[h+132>>2]=-1;c[h>>2]=7388;c[i>>2]=7408;o=0;la(216,j|0);k=o;o=0;do if(k&1){p=Pa()|0;q=z;r=p}else{c[j>>2]=7440;p=h+36|0;c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[p+12>>2]=0;c[h+52>>2]=16;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;o=0;ma(70,j|0,g|0);s=o;o=0;if(s&1){s=Pa()|0;t=z;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);if((a[p+11>>0]|0)<0)mR(c[p>>2]|0);vH(j);q=t;r=s;break}if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);o=0;_(115,h|0,c[d>>2]|0)|0;s=o;o=0;if(s&1){s=Pa()|0;u=z;v=s}else{o=0;ma(71,g|0,j|0);s=o;o=0;do if(s&1){t=Pa()|0;w=z;x=t}else{t=g+11|0;y=a[t>>0]|0;A=y<<24>>24<0;B=A?c[g+4>>2]|0:y&255;o=0;$(92,b|0,(A?c[g>>2]|0:g)|0,((B|0)<(e|0)?B:e)|0)|0;B=o;o=0;if(B&1){B=Pa()|0;A=z;if((a[t>>0]|0)>=0){w=A;x=B;break}mR(c[g>>2]|0);w=A;x=B;break}if((a[t>>0]|0)<0)mR(c[g>>2]|0);c[h>>2]=7388;c[i>>2]=7408;c[j>>2]=7440;if((a[p+11>>0]|0)>=0){vH(j);ZH(h,7420);rH(i);l=f;return}mR(c[p>>2]|0);vH(j);ZH(h,7420);rH(i);l=f;return}while(0);u=w;v=x}c[h>>2]=7388;c[i>>2]=7408;c[j>>2]=7440;if((a[p+11>>0]|0)>=0){vH(j);ZH(h,7420);rH(i);$a(v|0)}mR(c[p>>2]|0);vH(j);ZH(h,7420);rH(i);$a(v|0)}while(0);ZH(h,7420);m=q;n=r;rH(i);$a(n|0)}function to(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=l;l=l+16|0;h=g;c[b>>2]=10036;i=b+4|0;c[i>>2]=d;c[b+8>>2]=e;jo(h,i);o=0;oa(44,b+12|0,72037,h|0,f|0);f=o;o=0;if(f&1){f=Qa(0)|0;xR(h);Id(f)}if((a[h+11>>0]|0)>=0){l=g;return}mR(c[h>>2]|0);l=g;return}function uo(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0;g=l;l=l+176|0;h=g+136|0;i=g;j=i+56|0;k=i+4|0;c[i>>2]=20;c[j>>2]=40;o=0;ma(69,i+56|0,k|0);m=o;o=0;if(m&1){m=Pa()|0;n=z;p=m;rH(j);$a(p|0)}c[i+128>>2]=0;c[i+132>>2]=-1;c[i>>2]=7388;c[j>>2]=7408;o=0;la(216,k|0);m=o;o=0;do if(m&1){q=Pa()|0;r=z;s=q}else{c[k>>2]=7440;q=i+36|0;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;c[i+52>>2]=16;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;o=0;ma(70,k|0,h|0);t=o;o=0;if(t&1){t=Pa()|0;u=z;if((a[h+11>>0]|0)<0)mR(c[h>>2]|0);if((a[q+11>>0]|0)<0)mR(c[q>>2]|0);vH(k);r=u;s=t;break}if((a[h+11>>0]|0)<0)mR(c[h>>2]|0);t=h+8|0;c[h>>2]=t;c[h+4>>2]=2;c[t>>2]=e;c[h+12>>2]=25;c[h+16>>2]=219;c[h+20>>2]=f;c[h+24>>2]=25;c[h+28>>2]=219;o=0;oa(39,i|0,d|0,t|0,2);t=o;o=0;if(!(t&1)?(o=0,ma(71,b|0,k|0),t=o,o=0,!(t&1)):0){c[i>>2]=7388;c[j>>2]=7408;c[k>>2]=7440;if((a[q+11>>0]|0)>=0){vH(k);ZH(i,7420);rH(j);l=g;return}mR(c[q>>2]|0);vH(k);ZH(i,7420);rH(j);l=g;return}t=Pa()|0;c[i>>2]=7388;c[j>>2]=7408;c[k>>2]=7440;if((a[q+11>>0]|0)>=0){vH(k);ZH(i,7420);rH(j);$a(t|0)}mR(c[q>>2]|0);vH(k);ZH(i,7420);rH(j);$a(t|0)}while(0);ZH(i,7420);n=r;p=s;rH(j);$a(p|0)}function vo(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;g=l;l=l+32|0;h=g+12|0;i=g;c[b>>2]=10036;j=b+4|0;c[j>>2]=d;c[b+8>>2]=e;c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;e=$F(f)|0;if(e>>>0>4294967279){o=0;la(276,i|0);o=0;k=Pa()|0;m=z;$a(k|0)}do if(e>>>0<11){a[i+11>>0]=e;if(!e)n=i;else{p=i;q=7}}else{d=e+16&-16;o=0;r=Z(209,d|0)|0;s=o;o=0;if(s&1){k=Pa()|0;m=z;$a(k|0)}else{c[i>>2]=r;c[i+8>>2]=d|-2147483648;c[i+4>>2]=e;p=r;q=7;break}}while(0);if((q|0)==7){CT(p|0,f|0,e|0)|0;n=p}a[n+e>>0]=0;jo(h,j);o=0;oa(44,b+12|0,72037,h|0,i|0);b=o;o=0;if(b&1){b=Qa(0)|0;xR(h);Id(b)}if((a[h+11>>0]|0)<0)mR(c[h>>2]|0);if((a[i+11>>0]|0)>=0){l=g;return}mR(c[i>>2]|0);l=g;return}function wo(a){a=a|0;c[a>>2]=10056;wn(a+28|0,c[a+32>>2]|0);wn(a+16|0,c[a+20>>2]|0);yn(a+4|0,c[a+8>>2]|0);return}function xo(a){a=a|0;c[a>>2]=10056;wn(a+28|0,c[a+32>>2]|0);wn(a+16|0,c[a+20>>2]|0);yn(a+4|0,c[a+8>>2]|0);mR(a);return}function yo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=l;l=l+48|0;f=e+32|0;g=e+16|0;h=e;c[f>>2]=0;i=f+4|0;c[i>>2]=0;c[f+8>>2]=0;j=c[a+4>>2]|0;k=a+8|0;a:do if((j|0)==(k|0))m=3;else{n=f+8|0;p=h+4|0;q=h+8|0;r=j;while(1){o=0;la(287,g|0);s=o;o=0;if(s&1){m=24;break}o=0;s=_(117,g|0,c[r+28>>2]|0)|0;t=o;o=0;if(t&1){m=25;break}o=0;t=$(99,g|0,0,s|0)|0;u=o;o=0;if(u&1){m=25;break}o=0;u=_(112,g|0,r+16|0)|0;v=o;o=0;if(v&1){m=25;break}o=0;_(110,g|0,t+s+u|0)|0;u=o;o=0;if(u&1){m=25;break}o=0;ma(151,h|0,g|0);u=o;o=0;if(u&1){m=26;break}u=c[i>>2]|0;if(u>>>0>=(c[n>>2]|0)>>>0){o=0;ma(168,f|0,h|0);s=o;o=0;if(s&1){m=27;break}s=c[h>>2]|0;if(s|0){if((c[p>>2]|0)!=(s|0))c[p>>2]=s;mR(s)}}else{c[u>>2]=0;s=u+4|0;c[s>>2]=0;c[u+8>>2]=0;c[u>>2]=c[h>>2];c[s>>2]=c[p>>2];c[u+8>>2]=c[q>>2];c[q>>2]=0;c[p>>2]=0;c[h>>2]=0;c[i>>2]=u+12}it(g);u=c[r+4>>2]|0;if(!u){s=r+8|0;t=c[s>>2]|0;if((c[t>>2]|0)==(r|0))w=t;else{t=s;do{s=c[t>>2]|0;t=s+8|0;v=c[t>>2]|0}while((c[v>>2]|0)!=(s|0));w=v}}else{t=u;while(1){v=c[t>>2]|0;if(!v)break;else t=v}w=t}if((w|0)==(k|0)){m=3;break a}else r=w}if((m|0)==24){r=Pa()|0;x=r;y=z}else if((m|0)==25){r=Pa()|0;A=r;B=z;m=32}else if((m|0)==26){r=Pa()|0;C=r;D=z;m=31}else if((m|0)==27){r=Pa()|0;q=z;n=c[h>>2]|0;if(!n){C=r;D=q;m=31}else{if((c[p>>2]|0)!=(n|0))c[p>>2]=n;mR(n);C=r;D=q;m=31}}if((m|0)==31){A=C;B=D;m=32}if((m|0)==32){it(g);x=A;y=B}E=x;F=y}while(0);b:do if((m|0)==3){y=c[a+16>>2]|0;x=a+20|0;c:do if((y|0)!=(x|0)){B=f+8|0;A=h+4|0;D=h+8|0;C=y;while(1){o=0;la(287,g|0);w=o;o=0;if(w&1){m=55;break}o=0;w=_(112,g|0,C+28|0)|0;k=o;o=0;if(k&1){m=56;break}o=0;k=$(99,g|0,1,w|0)|0;j=o;o=0;if(j&1){m=56;break}o=0;j=_(112,g|0,C+16|0)|0;q=o;o=0;if(q&1){m=56;break}o=0;_(110,g|0,k+w+j|0)|0;j=o;o=0;if(j&1){m=56;break}o=0;ma(151,h|0,g|0);j=o;o=0;if(j&1){m=57;break}j=c[i>>2]|0;if(j>>>0>=(c[B>>2]|0)>>>0){o=0;ma(168,f|0,h|0);w=o;o=0;if(w&1){m=58;break}w=c[h>>2]|0;if(w|0){if((c[A>>2]|0)!=(w|0))c[A>>2]=w;mR(w)}}else{c[j>>2]=0;w=j+4|0;c[w>>2]=0;c[j+8>>2]=0;c[j>>2]=c[h>>2];c[w>>2]=c[A>>2];c[j+8>>2]=c[D>>2];c[D>>2]=0;c[A>>2]=0;c[h>>2]=0;c[i>>2]=j+12}it(g);j=c[C+4>>2]|0;if(!j){w=C+8|0;k=c[w>>2]|0;if((c[k>>2]|0)==(C|0))G=k;else{k=w;do{w=c[k>>2]|0;k=w+8|0;q=c[k>>2]|0}while((c[q>>2]|0)!=(w|0));G=q}}else{k=j;while(1){q=c[k>>2]|0;if(!q)break;else k=q}G=k}if((G|0)==(x|0))break c;else C=G}if((m|0)==55){C=Pa()|0;H=C;I=z}else if((m|0)==56){C=Pa()|0;J=C;K=z;m=63}else if((m|0)==57){C=Pa()|0;L=C;M=z;m=62}else if((m|0)==58){C=Pa()|0;D=z;B=c[h>>2]|0;if(!B){L=C;M=D;m=62}else{if((c[A>>2]|0)!=(B|0))c[A>>2]=B;mR(B);L=C;M=D;m=62}}if((m|0)==62){J=L;K=M;m=63}if((m|0)==63){it(g);H=J;I=K}E=H;F=I;break b}while(0);x=c[a+28>>2]|0;y=a+32|0;d:do if((x|0)!=(y|0)){p=f+8|0;D=h+4|0;C=h+8|0;B=x;while(1){o=0;la(287,g|0);t=o;o=0;if(t&1){m=85;break}o=0;t=_(119,g|0,B+28|0)|0;j=o;o=0;if(j&1){m=86;break}o=0;j=$(99,g|0,2,t|0)|0;q=o;o=0;if(q&1){m=86;break}o=0;q=_(112,g|0,B+16|0)|0;w=o;o=0;if(w&1){m=86;break}o=0;_(110,g|0,j+t+q|0)|0;q=o;o=0;if(q&1){m=86;break}o=0;ma(151,h|0,g|0);q=o;o=0;if(q&1){m=87;break}q=c[i>>2]|0;if(q>>>0>=(c[p>>2]|0)>>>0){o=0;ma(168,f|0,h|0);t=o;o=0;if(t&1){m=88;break}t=c[h>>2]|0;if(t|0){if((c[D>>2]|0)!=(t|0))c[D>>2]=t;mR(t)}}else{c[q>>2]=0;t=q+4|0;c[t>>2]=0;c[q+8>>2]=0;c[q>>2]=c[h>>2];c[t>>2]=c[D>>2];c[q+8>>2]=c[C>>2];c[C>>2]=0;c[D>>2]=0;c[h>>2]=0;c[i>>2]=q+12}it(g);q=c[B+4>>2]|0;if(!q){t=B+8|0;j=c[t>>2]|0;if((c[j>>2]|0)==(B|0))N=j;else{j=t;do{t=c[j>>2]|0;j=t+8|0;w=c[j>>2]|0}while((c[w>>2]|0)!=(t|0));N=w}}else{j=q;while(1){k=c[j>>2]|0;if(!k)break;else j=k}N=j}if((N|0)==(y|0))break d;else B=N}if((m|0)==85){B=Pa()|0;O=B;P=z}else if((m|0)==86){B=Pa()|0;Q=B;R=z;m=93}else if((m|0)==87){B=Pa()|0;S=B;T=z;m=92}else if((m|0)==88){B=Pa()|0;C=z;p=c[h>>2]|0;if(!p){S=B;T=C;m=92}else{if((c[D>>2]|0)!=(p|0))c[D>>2]=p;mR(p);S=B;T=C;m=92}}if((m|0)==92){Q=S;R=T;m=93}if((m|0)==93){it(g);O=Q;P=R}E=O;F=P;break b}while(0);o=0;y=_(118,b|0,f|0)|0;x=o;o=0;if(x&1){x=Pa()|0;E=x;F=z;break}x=y+d|0;y=c[f>>2]|0;if(!y){l=e;return x|0}C=c[i>>2]|0;if((C|0)==(y|0))U=y;else{B=C;while(1){C=B+-12|0;c[i>>2]=C;p=c[C>>2]|0;if(!p)V=C;else{C=B+-8|0;if((c[C>>2]|0)!=(p|0))c[C>>2]=p;mR(p);V=c[i>>2]|0}if((V|0)==(y|0))break;else B=V}U=c[f>>2]|0}mR(U);l=e;return x|0}while(0);e=c[f>>2]|0;if(!e)$a(E|0);U=c[i>>2]|0;if((U|0)==(e|0))W=e;else{V=U;while(1){U=V+-12|0;c[i>>2]=U;d=c[U>>2]|0;if(!d)X=U;else{U=V+-8|0;if((c[U>>2]|0)!=(d|0))c[U>>2]=d;mR(d);X=c[i>>2]|0}if((X|0)==(e|0))break;else V=X}W=c[f>>2]|0}mR(W);$a(E|0);return 0}function zo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=l;l=l+96|0;e=d+76|0;f=d+72|0;g=d+90|0;h=d+60|0;i=d+56|0;j=d+89|0;k=d+48|0;m=d+44|0;n=d+88|0;p=d+32|0;q=d+12|0;r=d;s=a+4|0;t=a+8|0;yn(s,c[t>>2]|0);c[a+12>>2]=0;c[s>>2]=t;c[t>>2]=0;t=a+16|0;u=a+20|0;wn(t,c[u>>2]|0);c[a+24>>2]=0;c[t>>2]=u;c[u>>2]=0;u=a+28|0;v=a+32|0;wn(u,c[v>>2]|0);c[a+36>>2]=0;c[u>>2]=v;c[v>>2]=0;v=ft(b)|0;if(!v){l=d;return}a=h+4|0;w=h+8|0;x=e+4|0;y=e+8|0;A=p+4|0;B=r+4|0;C=v;a:while(1){ct(p,b);o=0;ma(169,q|0,p|0);v=o;o=0;if(v&1){D=11;break}o=0;Z(220,q|0)|0;v=o;o=0;if(v&1){D=12;break}o=0;ma(170,r|0,q|0);v=o;o=0;if(v&1){D=13;break}o=0;v=_(120,q|0,0)|0;E=o;o=0;if(E&1){D=14;break}do if(!v){o=0;E=_(120,q|0,1)|0;F=o;o=0;if(F&1){D=14;break a}if(E|0){o=0;ma(170,e|0,q|0);E=o;o=0;if(E&1){D=25;break a}c[i>>2]=r;o=0;qa(20,h|0,t|0,r|0,104897,i|0,j|0);E=o;o=0;if(E&1){D=26;break a}E=c[h>>2]|0;F=E+28|0;G=c[F>>2]|0;H=E+32|0;if(!G)I=E+36|0;else{if((c[H>>2]|0)!=(G|0))c[H>>2]=G;mR(G);G=E+36|0;c[G>>2]=0;c[H>>2]=0;c[F>>2]=0;I=G}c[F>>2]=c[e>>2];c[H>>2]=c[x>>2];c[I>>2]=c[y>>2];break}o=0;H=_(120,q|0,2)|0;F=o;o=0;if(F&1){D=14;break a}if(!H){D=47;break a}o=0;ma(171,h|0,q|0);H=o;o=0;if(H&1){D=41;break a}c[f>>2]=r;o=0;qa(20,e|0,u|0,r|0,104897,f|0,g|0);H=o;o=0;if(H&1){D=42;break a}H=c[e>>2]|0;F=H+28|0;G=c[F>>2]|0;E=H+32|0;if(!G)J=H+36|0;else{if((c[E>>2]|0)!=(G|0))c[E>>2]=G;mR(G);G=H+36|0;c[G>>2]=0;c[E>>2]=0;c[F>>2]=0;J=G}c[F>>2]=c[h>>2];c[E>>2]=c[a>>2];c[J>>2]=c[w>>2]}else{o=0;E=Z(221,q|0)|0;F=o;o=0;if(F&1){D=14;break a}c[m>>2]=r;o=0;qa(19,k|0,s|0,r|0,104897,m|0,n|0);F=o;o=0;if(F&1){D=14;break a}c[(c[k>>2]|0)+28>>2]=E}while(0);v=(c[A>>2]|0)-(c[p>>2]|0)|0;E=C>>>0<=v>>>0;C=C-v|0;v=c[r>>2]|0;if(v|0){if((c[B>>2]|0)!=(v|0))c[B>>2]=v;mR(v)}Xs(q);v=c[p>>2]|0;if(v|0){if((c[A>>2]|0)!=(v|0))c[A>>2]=v;mR(v)}if((C|0)==0|E){D=70;break}}do if((D|0)==11){C=Pa()|0;K=z;L=C}else if((D|0)==12){C=Pa()|0;M=z;N=C;D=64}else if((D|0)==13){C=Pa()|0;O=z;P=C;D=63}else if((D|0)==25){C=Pa()|0;Q=z;R=C;D=30}else if((D|0)==26){C=Pa()|0;k=z;n=c[e>>2]|0;if(!n){Q=k;R=C;D=30}else{if((c[x>>2]|0)!=(n|0))c[x>>2]=n;mR(n);Q=k;R=C;D=30}}else if((D|0)==41){C=Pa()|0;S=z;T=C;D=46}else if((D|0)==42){C=Pa()|0;k=z;n=c[h>>2]|0;if(!n){S=k;T=C;D=46}else{if((c[a>>2]|0)!=(n|0))c[a>>2]=n;mR(n);S=k;T=C;D=46}}else if((D|0)==47){C=Ja(24)|0;k=fo()|0;o=0;na(71,C|0,4,k|0);k=o;o=0;if(k&1){k=Pa()|0;n=z;Sa(C|0);U=n;V=k;D=59;break}else{o=0;na(72,C|0,4424,56);o=0;D=14;break}}else if((D|0)==70){l=d;return}while(0);if((D|0)==14){d=Pa()|0;U=z;V=d;D=59}else if((D|0)==30){U=Q;V=R;D=59}else if((D|0)==46){U=S;V=T;D=59}if((D|0)==59){T=c[r>>2]|0;if(!T){O=U;P=V;D=63}else{if((c[B>>2]|0)!=(T|0))c[B>>2]=T;mR(T);O=U;P=V;D=63}}if((D|0)==63){M=O;N=P;D=64}if((D|0)==64){Xs(q);K=M;L=N}N=c[p>>2]|0;if(!N)$a(L|0);if((c[A>>2]|0)!=(N|0))c[A>>2]=N;mR(N);$a(L|0)}function Ao(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;i=l;l=l+16|0;j=i;k=d+4|0;m=c[k>>2]|0;n=d+4|0;a:do if(m){o=c[e+4>>2]|0;p=c[e>>2]|0;b:do if((p|0)==(o|0)){q=c[m+16>>2]|0;r=c[m+20>>2]|0;if((q|0)==(r|0)){s=m;t=n;u=25}else{v=n;w=m;x=r;r=q;while(1){q=o;y=r;while(1){if((q|0)==(o|0))break;z=a[q>>0]|0;A=a[y>>0]|0;if((z&255)<(A&255))break;if((A&255)<(z&255)){s=w;t=v;u=25;break b}y=y+1|0;if((y|0)==(x|0)){s=w;t=v;u=25;break b}else q=q+1|0}q=c[w>>2]|0;if(!q){B=w;C=w;u=18;break b}r=c[q+16>>2]|0;x=c[q+20>>2]|0;if((r|0)==(x|0)){s=q;t=w;u=25;break}else{y=w;w=q;v=y}}}}else{v=n;w=m;while(1){x=c[w+16>>2]|0;r=c[w+20>>2]|0;c:do if((x|0)!=(r|0)){y=p;q=x;while(1){if((y|0)==(o|0))break;z=a[y>>0]|0;A=a[q>>0]|0;if((z&255)<(A&255))break;if((A&255)<(z&255)){D=x;E=p;u=19;break c}q=q+1|0;if((q|0)==(r|0)){D=x;E=p;u=19;break c}else y=y+1|0}y=c[w>>2]|0;if(!y){B=w;C=w;u=18;break b}else{F=w;G=y}}else{D=x;E=p;u=19}while(0);if((u|0)==19){while(1){u=0;if((D|0)==(r|0))break;x=a[D>>0]|0;y=a[E>>0]|0;if((x&255)<(y&255))break;if((y&255)<(x&255)){s=w;t=v;u=25;break b}E=E+1|0;if((E|0)==(o|0)){s=w;t=v;u=25;break b}else{D=D+1|0;u=19}}H=w+4|0;r=c[H>>2]|0;if(!r)break;else{F=H;G=r}}v=F;w=G}I=w;J=H;break a}while(0);if((u|0)==18){I=B;J=C;break}else if((u|0)==25){I=s;J=t;break}}else{I=k;J=k}while(0);k=c[J>>2]|0;if(k|0){K=k;L=0;M=K;c[b>>2]=M;N=b+4|0;a[N>>0]=L;l=i;return}Bo(j,d,f,g,h);h=c[j>>2]|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=I;c[J>>2]=h;I=c[c[d>>2]>>2]|0;if(!I)O=h;else{c[d>>2]=I;O=c[J>>2]|0}Fn(c[n>>2]|0,O);O=d+8|0;c[O>>2]=(c[O>>2]|0)+1;K=c[j>>2]|0;L=1;M=K;c[b>>2]=M;N=b+4|0;a[N>>0]=L;l=i;return}function Bo(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0;g=kR(32)|0;c[b>>2]=g;c[b+4>>2]=d+4;d=b+8|0;a[d>>0]=0;e=g+16|0;h=c[f>>2]|0;c[e>>2]=0;f=g+20|0;c[f>>2]=0;c[g+24>>2]=0;i=h+4|0;j=(c[i>>2]|0)-(c[h>>2]|0)|0;if(!j){k=g+28|0;c[k>>2]=0;a[d>>0]=1;return}if((j|0)>=0){o=0;l=Z(209,j|0)|0;m=o;o=0;if(!(m&1)){c[f>>2]=l;c[e>>2]=l;c[g+24>>2]=l+j;j=c[h>>2]|0;h=(c[i>>2]|0)-j|0;if((h|0)<=0){k=g+28|0;c[k>>2]=0;a[d>>0]=1;return}CT(l|0,j|0,h|0)|0;c[f>>2]=l+h;k=g+28|0;c[k>>2]=0;a[d>>0]=1;return}}else{o=0;la(271,e|0);o=0}d=Pa()|0;k=c[e>>2]|0;if(k|0){if((c[f>>2]|0)!=(k|0))c[f>>2]=k;mR(k)}k=c[b>>2]|0;c[b>>2]=0;if(!k)$a(d|0);mR(k);$a(d|0)}function Co(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e|0)/12|0;g=f+1|0;if(g>>>0>357913941)CP(a);h=a+8|0;i=((c[h>>2]|0)-e|0)/12|0;e=i<<1;j=i>>>0<178956970?(e>>>0<g>>>0?g:e):357913941;do if(j){if(j>>>0<=357913941){k=kR(j*12|0)|0;break}e=Ja(8)|0;o=0;ma(153,e|0,92198);g=o;o=0;if(g&1){g=Pa()|0;Sa(e|0);$a(g|0)}else{c[e>>2]=57580;Xa(e|0,7152,205)}}else k=0;while(0);e=k+(f*12|0)|0;g=e;i=k+(j*12|0)|0;c[k+(f*12|0)+8>>2]=0;c[e>>2]=c[b>>2];j=b+4|0;c[k+(f*12|0)+4>>2]=c[j>>2];l=b+8|0;c[k+(f*12|0)+8>>2]=c[l>>2];c[l>>2]=0;c[j>>2]=0;c[b>>2]=0;b=e+12|0;j=c[a>>2]|0;l=c[d>>2]|0;if((l|0)==(j|0)){m=g;n=j;p=j}else{f=l;l=g;g=e;do{e=g+-12|0;k=f;f=f+-12|0;c[e>>2]=0;q=g+-8|0;c[q>>2]=0;c[g+-4>>2]=0;c[e>>2]=c[f>>2];e=k+-8|0;c[q>>2]=c[e>>2];q=k+-4|0;c[g+-4>>2]=c[q>>2];c[q>>2]=0;c[e>>2]=0;c[f>>2]=0;g=l+-12|0;l=g}while((f|0)!=(j|0));m=l;n=c[a>>2]|0;p=c[d>>2]|0}c[a>>2]=m;c[d>>2]=b;c[h>>2]=i;i=n;if((p|0)!=(i|0)){h=p;do{p=h;h=h+-12|0;b=c[h>>2]|0;if(b|0){d=p+-8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}}while((h|0)!=(i|0))}if(!n)return;mR(n);return}function Do(a){a=a|0;var b=0;if(c[a+12>>2]|0){b=0;return b|0}if(c[a+24>>2]|0){b=0;return b|0}b=(c[a+36>>2]|0)==0;return b|0}function Eo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=l;l=l+32|0;f=e+8|0;g=e;c[g>>2]=b;Ao(f,a+4|0,b,104897,g,e+16|0);c[(c[f>>2]|0)+28>>2]=d;l=e;return}function Fo(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=b+8|0;b=c[e>>2]|0;a:do if(b|0){f=c[d>>2]|0;g=c[d+4>>2]|0;b:do if((f|0)==(g|0)){h=b;while(1){i=c[h>>2]|0;if(!i)break;else h=i}j=h}else{i=e;k=b;while(1){l=k;c:while(1){m=c[l+20>>2]|0;n=c[l+16>>2]|0;p=f;while(1){if((n|0)==(m|0))break;q=a[n>>0]|0;r=a[p>>0]|0;if((q&255)<(r&255))break;if((r&255)<(q&255))break c;p=p+1|0;if((p|0)==(g|0))break c;else n=n+1|0}n=c[l+4>>2]|0;if(!n){j=i;break b}else l=n}k=c[l>>2]|0;if(!k){j=l;break}else i=l}}while(0);if((j|0)!=(e|0)){i=c[j+16>>2]|0;k=c[j+20>>2]|0;if((i|0)==(k|0)){s=j+28|0;t=c[s>>2]|0;return t|0}else{u=f;v=i}while(1){if((u|0)==(g|0))break a;i=a[u>>0]|0;h=a[v>>0]|0;if((i&255)<(h&255))break a;if((h&255)<(i&255)){w=19;break}v=v+1|0;if((v|0)==(k|0)){w=19;break}else u=u+1|0}if((w|0)==19){s=j+28|0;t=c[s>>2]|0;return t|0}}}while(0);t=Ja(24)|0;o=0;ma(143,t|0,4);s=o;o=0;if(s&1){s=Pa()|0;Sa(t|0);$a(s|0)}else Xa(t|0,4424,56);return 0}function Go(a,b){a=a|0;b=b|0;Ho(a+4|0,b)|0;return}function Ho(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=b+4|0;f=c[e>>2]|0;if(!f){g=0;return g|0}h=c[d>>2]|0;i=c[d+4>>2]|0;a:do if((h|0)==(i|0)){d=f;while(1){j=c[d>>2]|0;if(!j)break;else d=j}k=d}else{j=e;l=f;while(1){m=l;b:while(1){n=c[m+20>>2]|0;o=c[m+16>>2]|0;p=h;while(1){if((o|0)==(n|0))break;q=a[o>>0]|0;r=a[p>>0]|0;if((q&255)<(r&255))break;if((r&255)<(q&255))break b;p=p+1|0;if((p|0)==(i|0))break b;else o=o+1|0}o=c[m+4>>2]|0;if(!o){k=j;break a}else m=o}l=c[m>>2]|0;if(!l){k=m;break}else j=m}}while(0);if((k|0)==(e|0)){g=0;return g|0}e=k+16|0;j=c[e>>2]|0;l=k+20|0;d=c[l>>2]|0;c:do if((j|0)!=(d|0)){o=h;p=j;while(1){if((o|0)==(i|0)){g=0;s=31;break}n=a[o>>0]|0;q=a[p>>0]|0;if((n&255)<(q&255)){g=0;s=31;break}if((q&255)<(n&255))break c;p=p+1|0;if((p|0)==(d|0))break c;else o=o+1|0}if((s|0)==31)return g|0}while(0);s=c[k+4>>2]|0;if(!s){d=k+8|0;i=c[d>>2]|0;if((c[i>>2]|0)==(k|0))t=i;else{i=d;do{d=c[i>>2]|0;i=d+8|0;j=c[i>>2]|0}while((c[j>>2]|0)!=(d|0));t=j}}else{i=s;while(1){s=c[i>>2]|0;if(!s)break;else i=s}t=i}if((c[b>>2]|0)==(k|0))c[b>>2]=t;t=b+8|0;c[t>>2]=(c[t>>2]|0)+-1;Jn(f,k);f=c[e>>2]|0;if(f|0){if((c[l>>2]|0)!=(f|0))c[l>>2]=f;mR(f)}mR(k);g=1;return g|0}function Io(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=l;l=l+32|0;f=e+8|0;g=e;c[g>>2]=b;Cn(f,a+16|0,b,104897,g,e+16|0);g=(c[f>>2]|0)+28|0;if((g|0)==(d|0)){l=e;return}Dn(g,c[d>>2]|0,c[d+4>>2]|0);l=e;return}function Jo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0,r=0,s=0;f=d+20|0;d=c[f>>2]|0;a:do if(d|0){g=c[e>>2]|0;h=c[e+4>>2]|0;b:do if((g|0)==(h|0)){i=d;while(1){j=c[i>>2]|0;if(!j)break;else i=j}k=i}else{j=f;l=d;while(1){m=l;c:while(1){n=c[m+20>>2]|0;p=c[m+16>>2]|0;q=g;while(1){if((p|0)==(n|0))break;r=a[p>>0]|0;s=a[q>>0]|0;if((r&255)<(s&255))break;if((s&255)<(r&255))break c;q=q+1|0;if((q|0)==(h|0))break c;else p=p+1|0}p=c[m+4>>2]|0;if(!p){k=j;break b}else m=p}l=c[m>>2]|0;if(!l){k=m;break}else j=m}}while(0);if((k|0)!=(f|0)){j=c[k+16>>2]|0;l=c[k+20>>2]|0;d:do if((j|0)!=(l|0)){i=g;p=j;while(1){if((i|0)==(h|0))break a;q=a[i>>0]|0;n=a[p>>0]|0;if((q&255)<(n&255))break a;if((n&255)<(q&255))break d;p=p+1|0;if((p|0)==(l|0))break;else i=i+1|0}}while(0);l=k+28|0;c[b>>2]=0;h=b+4|0;c[h>>2]=0;c[b+8>>2]=0;j=k+32|0;g=(c[j>>2]|0)-(c[l>>2]|0)|0;if(!g)return;if((g|0)>=0){o=0;i=Z(209,g|0)|0;p=o;o=0;if(!(p&1)){c[h>>2]=i;c[b>>2]=i;c[b+8>>2]=i+g;g=c[l>>2]|0;l=(c[j>>2]|0)-g|0;if((l|0)<=0)return;CT(i|0,g|0,l|0)|0;c[h>>2]=i+l;return}}else{o=0;la(271,b|0);o=0}l=Pa()|0;i=c[b>>2]|0;if(!i)$a(l|0);if((c[h>>2]|0)!=(i|0))c[h>>2]=i;mR(i);$a(l|0)}}while(0);b=Ja(24)|0;o=0;ma(143,b|0,4);k=o;o=0;if(k&1){k=Pa()|0;Sa(b|0);$a(k|0)}else Xa(b|0,4424,56)}function Ko(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=l;l=l+16|0;f=e+4|0;g=e;h=b+16|0;i=b+20|0;b=c[i>>2]|0;if(!b){l=e;return}j=c[d>>2]|0;k=c[d+4>>2]|0;a:do if((j|0)==(k|0)){d=b;while(1){m=c[d>>2]|0;if(!m)break;else d=m}n=d}else{m=i;o=b;while(1){p=o;b:while(1){q=c[p+20>>2]|0;r=c[p+16>>2]|0;s=j;while(1){if((r|0)==(q|0))break;t=a[r>>0]|0;u=a[s>>0]|0;if((t&255)<(u&255))break;if((u&255)<(t&255))break b;s=s+1|0;if((s|0)==(k|0))break b;else r=r+1|0}r=c[p+4>>2]|0;if(!r){n=m;break a}else p=r}o=c[p>>2]|0;if(!o){n=p;break}else m=p}}while(0);if((n|0)==(i|0)){l=e;return}i=c[n+16>>2]|0;b=c[n+20>>2]|0;c:do if((i|0)!=(b|0)){m=j;o=i;while(1){if((m|0)==(k|0)){v=20;break}d=a[m>>0]|0;r=a[o>>0]|0;if((d&255)<(r&255)){v=20;break}if((r&255)<(d&255))break c;o=o+1|0;if((o|0)==(b|0))break c;else m=m+1|0}if((v|0)==20){l=e;return}}while(0);c[g>>2]=n;c[f>>2]=c[g>>2];Hn(h,f)|0;l=e;return}function Lo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=l;l=l+32|0;f=e+8|0;g=e;c[g>>2]=b;Cn(f,a+28|0,b,104897,g,e+16|0);g=(c[f>>2]|0)+28|0;if((g|0)==(d|0)){l=e;return}Dn(g,c[d>>2]|0,c[d+4>>2]|0);l=e;return}function Mo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0,r=0,s=0;f=d+32|0;d=c[f>>2]|0;a:do if(d|0){g=c[e>>2]|0;h=c[e+4>>2]|0;b:do if((g|0)==(h|0)){i=d;while(1){j=c[i>>2]|0;if(!j)break;else i=j}k=i}else{j=f;l=d;while(1){m=l;c:while(1){n=c[m+20>>2]|0;p=c[m+16>>2]|0;q=g;while(1){if((p|0)==(n|0))break;r=a[p>>0]|0;s=a[q>>0]|0;if((r&255)<(s&255))break;if((s&255)<(r&255))break c;q=q+1|0;if((q|0)==(h|0))break c;else p=p+1|0}p=c[m+4>>2]|0;if(!p){k=j;break b}else m=p}l=c[m>>2]|0;if(!l){k=m;break}else j=m}}while(0);if((k|0)!=(f|0)){j=c[k+16>>2]|0;l=c[k+20>>2]|0;d:do if((j|0)!=(l|0)){i=g;p=j;while(1){if((i|0)==(h|0))break a;q=a[i>>0]|0;n=a[p>>0]|0;if((q&255)<(n&255))break a;if((n&255)<(q&255))break d;p=p+1|0;if((p|0)==(l|0))break;else i=i+1|0}}while(0);l=k+28|0;c[b>>2]=0;h=b+4|0;c[h>>2]=0;c[b+8>>2]=0;j=k+32|0;g=(c[j>>2]|0)-(c[l>>2]|0)|0;if(!g)return;if((g|0)>=0){o=0;i=Z(209,g|0)|0;p=o;o=0;if(!(p&1)){c[h>>2]=i;c[b>>2]=i;c[b+8>>2]=i+g;g=c[l>>2]|0;l=(c[j>>2]|0)-g|0;if((l|0)<=0)return;CT(i|0,g|0,l|0)|0;c[h>>2]=i+l;return}}else{o=0;la(271,b|0);o=0}l=Pa()|0;i=c[b>>2]|0;if(!i)$a(l|0);if((c[h>>2]|0)!=(i|0))c[h>>2]=i;mR(i);$a(l|0)}}while(0);b=Ja(24)|0;o=0;ma(143,b|0,4);k=o;o=0;if(k&1){k=Pa()|0;Sa(b|0);$a(k|0)}else Xa(b|0,4424,56)}function No(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=l;l=l+16|0;f=e+4|0;g=e;h=b+28|0;i=b+32|0;b=c[i>>2]|0;if(!b){l=e;return}j=c[d>>2]|0;k=c[d+4>>2]|0;a:do if((j|0)==(k|0)){d=b;while(1){m=c[d>>2]|0;if(!m)break;else d=m}n=d}else{m=i;o=b;while(1){p=o;b:while(1){q=c[p+20>>2]|0;r=c[p+16>>2]|0;s=j;while(1){if((r|0)==(q|0))break;t=a[r>>0]|0;u=a[s>>0]|0;if((t&255)<(u&255))break;if((u&255)<(t&255))break b;s=s+1|0;if((s|0)==(k|0))break b;else r=r+1|0}r=c[p+4>>2]|0;if(!r){n=m;break a}else p=r}o=c[p>>2]|0;if(!o){n=p;break}else m=p}}while(0);if((n|0)==(i|0)){l=e;return}i=c[n+16>>2]|0;b=c[n+20>>2]|0;c:do if((i|0)!=(b|0)){m=j;o=i;while(1){if((m|0)==(k|0)){v=20;break}d=a[m>>0]|0;r=a[o>>0]|0;if((d&255)<(r&255)){v=20;break}if((r&255)<(d&255))break c;o=o+1|0;if((o|0)==(b|0))break c;else m=m+1|0}if((v|0)==20){l=e;return}}while(0);c[g>>2]=n;c[f>>2]=c[g>>2];Hn(h,f)|0;l=e;return}function Oo(a){a=a|0;var b=0,d=0;b=a+4|0;d=a+8|0;yn(b,c[d>>2]|0);c[a+12>>2]=0;c[b>>2]=d;c[d>>2]=0;d=a+16|0;b=a+20|0;wn(d,c[b>>2]|0);c[a+24>>2]=0;c[d>>2]=b;c[b>>2]=0;b=a+28|0;d=a+32|0;wn(b,c[d>>2]|0);c[a+36>>2]=0;c[b>>2]=d;c[d>>2]=0;return}function Po(a,b){a=a|0;b=b|0;if((c[b>>2]|0)==(c[b+4>>2]|0))return;if(!(dd[c[c[a>>2]>>2]&255](a)|0))return;sd[c[(c[a>>2]|0)+4>>2]&255](a,b);return}function Qo(a,b){a=a|0;b=b|0;c[a>>2]=b;return}function Ro(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;h=l;l=l+32|0;i=h+16|0;j=h;if(!g){k=Ja(24)|0;o=0;na(73,k|0,3,72080);m=o;o=0;if(!(m&1))Xa(k|0,4424,56);m=Pa()|0;n=z;Sa(k|0);p=n;q=m;$a(q|0)}ap(i,c[b>>2]|0);o=0;ma(104,i|0,e|0);e=o;o=0;if((!(e&1)?(o=0,ma(105,i|0,d|0),d=o,o=0,!(d&1)):0)?(o=0,ma(106,j|0,i|0),d=o,o=0,!(d&1)):0){To(i);o=0;pa(26,a|0,b|0,j|0,f|0,g|0);g=o;o=0;if(g&1){g=Pa()|0;f=z;b=c[j>>2]|0;if(b|0){a=j+4|0;if((c[a>>2]|0)!=(b|0))c[a>>2]=b;mR(b)}p=f;q=g;$a(q|0)}else{q=c[j>>2]|0;if(!q){l=h;return}g=j+4|0;if((c[g>>2]|0)!=(q|0))c[g>>2]=q;mR(q);l=h;return}}h=Pa()|0;To(i);$a(h|0)}function So(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;h=l;l=l+64|0;i=h+40|0;j=h+36|0;k=h+32|0;m=h+24|0;n=h+12|0;p=h+8|0;q=h+4|0;r=h;ap(m,c[d>>2]|0);o=0;d=Z(141,m|0)|0;s=o;o=0;do if(!(s&1)){if(!d){o=0;oa(41,72129,72188,71,72272);o=0;break}o=0;t=Z(141,m|0)|0;u=o;o=0;if(!(u&1)){if((t*255|0)>>>0<g>>>0){t=Ja(24)|0;u=fo()|0;o=0;oa(40,t|0,3,u|0,72279);u=o;o=0;if(!(u&1)){o=0;na(72,t|0,4424,56);o=0;break}u=Pa()|0;v=z;Sa(t|0);w=u;x=v;To(m);$a(w|0)}c[n>>2]=0;v=n+4|0;c[v>>2]=0;c[n+8>>2]=0;c[b>>2]=0;u=b+4|0;c[u>>2]=0;c[b+8>>2]=0;o=0;ma(104,m|0,e|0);t=o;o=0;a:do if(t&1)y=36;else{A=i+4|0;B=i+8|0;C=i+8|0;D=n+8|0;E=i+4|0;F=i+8|0;G=0;while(1){o=0;la(248,m|0);H=o;o=0;if(H&1){y=36;break a}o=0;ma(105,m|0,n|0);H=o;o=0;if(H&1){y=36;break a}o=0;ma(105,m|0,f|0);H=o;o=0;if(H&1){y=36;break a}G=G+1<<24>>24;c[i>>2]=0;c[A>>2]=0;c[B>>2]=0;o=0;H=Z(209,1)|0;I=o;o=0;if(I&1){y=37;break}c[i>>2]=H;I=H+1|0;c[C>>2]=I;a[H>>0]=G;c[A>>2]=I;o=0;ma(105,m|0,i|0);I=o;o=0;if(I&1){y=38;break}I=c[i>>2]|0;if(I|0){if((c[A>>2]|0)!=(I|0))c[A>>2]=I;mR(I)}o=0;ma(106,i|0,m|0);I=o;o=0;if(I&1){y=43;break}I=c[n>>2]|0;if(I|0){if((c[v>>2]|0)!=(I|0))c[v>>2]=I;mR(I);c[D>>2]=0;c[v>>2]=0;c[n>>2]=0}I=c[i>>2]|0;c[n>>2]=I;H=c[E>>2]|0;c[v>>2]=H;c[D>>2]=c[F>>2];c[p>>2]=c[u>>2];c[q>>2]=I;c[r>>2]=H;o=0;c[k>>2]=c[p>>2];c[j>>2]=c[q>>2];c[i>>2]=c[r>>2];aa(46,b|0,k|0,j|0,i|0)|0;H=o;o=0;if(H&1){y=44;break}J=c[u>>2]|0;K=c[b>>2]|0;L=J-K|0;if(L>>>0>=g>>>0){y=28;break}}if((y|0)==28){if(L>>>0>g>>>0?(F=K+g|0,(F|0)!=(J|0)):0)c[u>>2]=F;F=c[n>>2]|0;if(!F){To(m);l=h;return}if((c[v>>2]|0)!=(F|0))c[v>>2]=F;mR(F);To(m);l=h;return}else if((y|0)==37){F=Pa()|0;M=F;N=z}else if((y|0)==38){F=Pa()|0;D=z;E=c[i>>2]|0;if(!E){M=F;N=D}else{if((c[A>>2]|0)!=(E|0))c[A>>2]=E;mR(E);M=F;N=D}}else if((y|0)==43){D=Pa()|0;O=D;P=z;break}else if((y|0)==44){D=Pa()|0;O=D;P=z;break}O=M;P=N}while(0);if((y|0)==36){t=Pa()|0;O=t;P=z}t=c[b>>2]|0;if(t|0){if((c[u>>2]|0)!=(t|0))c[u>>2]=t;mR(t)}t=c[n>>2]|0;if(t|0){if((c[v>>2]|0)!=(t|0))c[v>>2]=t;mR(t)}w=O;x=P;To(m);$a(w|0)}}while(0);P=Pa()|0;w=P;x=z;To(m);$a(w|0)}function To(a){a=a|0;var b=0;c[a>>2]=10084;b=a+4|0;a=c[b>>2]|0;c[b>>2]=0;if(!a)return;Zo(a);mR(a);return}function Uo(a){a=a|0;var b=0,d=0;c[a>>2]=10084;b=a+4|0;d=c[b>>2]|0;c[b>>2]=0;if(!d){mR(a);return}Zo(d);mR(d);mR(a);return}function Vo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=l;l=l+32|0;g=f+8|0;h=f+4|0;i=f;j=b+4|0;o=0;b=Z(222,c[c[(c[j>>2]|0)+8>>2]>>2]|0)|0;k=o;o=0;if(k&1){k=Qa(0)|0;Id(k)}if(!b){b=Ja(24)|0;o=0;ma(143,b|0,14);k=o;o=0;if(k&1){k=Pa()|0;Sa(b|0);$a(k|0)}else Xa(b|0,4424,56)}c[h>>2]=0;o=0;b=Z(222,c[c[(c[j>>2]|0)+8>>2]>>2]|0)|0;j=o;o=0;if(j&1){j=Qa(0)|0;Id(j)}j=Fz(b,h,i)|0;if((j|0)<=-1){b=Ja(24)|0;k=xr()|0;o=0;na(71,b|0,j|0,k|0);k=o;o=0;if(k&1){k=Qa(0)|0;Sa(b|0);m=k}else{o=0;na(72,b|0,4424,56);o=0;b=Qa(0)|0;m=b}Ka(m|0)|0;m=fo()|0;o=0;na(71,g|0,16,m|0);m=o;o=0;if(m&1){m=Pa()|0;n=z;p=m}else{o=0;ma(144,g|0,0);o=0;m=Pa()|0;b=z;c[g>>2]=10036;k=g+12|0;if((a[k+11>>0]|0)<0)mR(c[k>>2]|0);n=b;p=m}o=0;ka(3);m=o;o=0;if(m&1){m=Qa(0)|0;Id(m)}else $a(p|0)}p=nt(d)|0;m=c[h>>2]|0;h=c[i>>2]|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;if(h>>>0>4294967279)vR(g);if(h>>>0<11){a[g+11>>0]=h;if(!h)q=g;else{r=g;s=26}}else{i=h+16&-16;b=kR(i)|0;c[g>>2]=b;c[g+8>>2]=i|-2147483648;c[g+4>>2]=h;r=b;s=26}if((s|0)==26){CT(r|0,m|0,h|0)|0;q=r}a[q+h>>0]=0;o=0;h=_(95,d|0,g|0)|0;q=o;o=0;if(q&1){q=Pa()|0;if((a[g+11>>0]|0)>=0)$a(q|0);mR(c[g>>2]|0);$a(q|0)}else{q=h+p|0;if((a[g+11>>0]|0)>=0){t=wt(d,q)|0;u=q+e|0;v=u+t|0;l=f;return v|0}mR(c[g>>2]|0);t=wt(d,q)|0;u=q+e|0;v=u+t|0;l=f;return v|0}return 0}function Wo(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0;e=l;l=l+64|0;f=e+32|0;g=e+16|0;h=e+4|0;i=e;et(d)|0;dt(f,d);o=0;ma(91,g|0,f|0);j=o;o=0;if(j&1){j=Pa()|0;k=z;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);m=k;n=j;$a(n|0)}if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);j=g+4|0;k=c[g>>2]|0;c[h+4>>2]=(c[j>>2]|0)-k;c[h+8>>2]=k;c[i>>2]=0;o=0;k=_(121,h|0,i|0)|0;h=o;o=0;a:do if(!(h&1)){if((k|0)<=-1){p=Ja(24)|0;q=xr()|0;o=0;na(71,p|0,k|0,q|0);q=o;o=0;if(q&1){q=Qa(0)|0;Sa(p|0);r=q}else{o=0;na(72,p|0,4424,56);o=0;p=Qa(0)|0;r=p}Ka(r|0)|0;p=fo()|0;o=0;na(71,f|0,16,p|0);p=o;o=0;if(p&1){p=Pa()|0;s=z;t=p}else{o=0;ma(144,f|0,0);o=0;p=Pa()|0;q=z;c[f>>2]=10036;u=f+12|0;if((a[u+11>>0]|0)<0)mR(c[u>>2]|0);s=q;t=p}o=0;ka(3);p=o;o=0;if(!(p&1)){v=s;w=t;x=33;break}p=Qa(0)|0;Id(p)}o=0;la(292,d|0);p=o;o=0;if(!(p&1)){o=0;p=Z(209,12)|0;q=o;o=0;do if(q&1){u=Pa()|0;y=z;A=u}else{o=0;la(293,p|0);u=o;o=0;if(u&1){u=Pa()|0;B=z;mR(p);y=B;A=u;break}u=p;B=c[i>>2]|0;o=0;na(85,c[p>>2]|0,B|0,0);C=o;o=0;if(!(C&1)?(o=0,na(85,c[p+4>>2]|0,B|0,1),B=o,o=0,!(B&1)):0){B=b+4|0;C=c[B>>2]|0;c[B>>2]=u;if(C|0){Zo(C);mR(C)}C=c[g>>2]|0;if(!C){l=e;return}if((c[j>>2]|0)!=(C|0))c[j>>2]=C;mR(C);l=e;return}C=Pa()|0;u=z;Zo(p);mR(p);D=u;E=C;break a}while(0);D=y;E=A}else x=32}else x=32;while(0);if((x|0)==32){A=Pa()|0;v=z;w=A;x=33}if((x|0)==33){D=v;E=w}w=c[g>>2]|0;if(!w){m=D;n=E;$a(n|0)}if((c[j>>2]|0)!=(w|0))c[j>>2]=w;mR(w);m=D;n=E;$a(n|0)}function Xo(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;o=0;b=Z(209,12)|0;d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)};c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[a>>2]=b;o=0;la(294,b|0);b=o;o=0;if(b&1){b=Qa(0)|0;d=c[a>>2]|0;c[a>>2]=0;if(!d)Id(b);mR(d);Id(b)}b=a+4|0;o=0;d=Z(209,12)|0;e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)};c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[b>>2]=d;o=0;la(294,d|0);d=o;o=0;if(d&1){d=Qa(0)|0;e=c[b>>2]|0;c[b>>2]=0;if(!e)Id(d);mR(e);Id(d)}d=c[a>>2]|0;c[a+8>>2]=d;if(d|0)return;d=Ja(24)|0;e=fo()|0;o=0;na(71,d|0,9,e|0);e=o;o=0;if(e&1){e=Pa()|0;f=z;Sa(d|0);g=f;h=e}else{o=0;na(72,d|0,4424,56);o=0;d=Pa()|0;g=z;h=d}o=0;la(295,c[b>>2]|0);d=o;o=0;if(d&1){d=Qa(0)|0;g=c[b>>2]|0;c[b>>2]=0;if(!g)Id(d);mR(g);Id(d)}d=c[b>>2]|0;c[b>>2]=0;if(d|0)mR(d);o=0;la(295,c[a>>2]|0);d=o;o=0;if(d&1){d=Qa(0)|0;b=c[a>>2]|0;c[a>>2]=0;if(!b)Id(d);mR(b);Id(d)}else{d=c[a>>2]|0;c[a>>2]=0;if(!d)$a(h|0);mR(d);$a(h|0)}}function Yo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;f=l;l=l+16|0;g=f;h=Cy(d)|0;if(h|0){i=Fy(b,h,e)|0;a[g>>0]=a[f+12>>0]|0;_o(i,g)|0;l=f;return}f=Ja(24)|0;do switch(d|0){case 0:{i=g+4|0;e=i;c[e>>2]=0;c[e+4>>2]=0;a[g+11>>0]=4;c[g>>2]=1162760014;j=i;break}case 1:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=3;a[g>>0]=a[75522]|0;a[g+1>>0]=a[75523]|0;a[g+2>>0]=a[75524]|0;j=g+3|0;break}case 2:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=3;a[g>>0]=a[75526]|0;a[g+1>>0]=a[75527]|0;a[g+2>>0]=a[75528]|0;j=g+3|0;break}case 3:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=3;a[g>>0]=a[83809]|0;a[g+1>>0]=a[83810]|0;a[g+2>>0]=a[83811]|0;j=g+3|0;break}case 4:{i=g+4|0;e=i;c[e>>2]=0;c[e+4>>2]=0;a[g+11>>0]=4;c[g>>2]=826361939;j=i;break}case 5:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=6;a[g>>0]=a[83038]|0;a[g+1>>0]=a[83039]|0;a[g+2>>0]=a[83040]|0;a[g+3>>0]=a[83041]|0;a[g+4>>0]=a[83042]|0;a[g+5>>0]=a[83043]|0;j=g+6|0;break}case 6:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=6;a[g>>0]=a[83045]|0;a[g+1>>0]=a[83046]|0;a[g+2>>0]=a[83047]|0;a[g+3>>0]=a[83048]|0;a[g+4>>0]=a[83049]|0;a[g+5>>0]=a[83050]|0;j=g+6|0;break}case 7:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=6;a[g>>0]=a[83052]|0;a[g+1>>0]=a[83053]|0;a[g+2>>0]=a[83054]|0;a[g+3>>0]=a[83055]|0;a[g+4>>0]=a[83056]|0;a[g+5>>0]=a[83057]|0;j=g+6|0;break}case 8:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=6;a[g>>0]=a[83059]|0;a[g+1>>0]=a[83060]|0;a[g+2>>0]=a[83061]|0;a[g+3>>0]=a[83062]|0;a[g+4>>0]=a[83063]|0;a[g+5>>0]=a[83064]|0;j=g+6|0;break}case 9:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=9;k=g;m=75530;n=k+9|0;do{a[k>>0]=a[m>>0]|0;k=k+1|0;m=m+1|0}while((k|0)<(n|0));j=g+9|0;break}default:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=9;k=g;m=75512;n=k+9|0;do{a[k>>0]=a[m>>0]|0;k=k+1|0;m=m+1|0}while((k|0)<(n|0));j=g+9|0}}while(0);a[j>>0]=0;j=fo()|0;o=0;oa(37,f|0,16,j|0,g|0);j=o;o=0;if(j&1)p=1;else{o=0;na(72,f|0,4424,56);o=0;p=0}j=Pa()|0;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);if(!p)$a(j|0);Sa(f|0);$a(j|0)}function Zo(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;o=0;la(295,c[b>>2]|0);d=o;o=0;if(d&1){d=Qa(0)|0;e=c[b>>2]|0;c[b>>2]=0;if(!e)Id(d);mR(e);Id(d)}d=c[b>>2]|0;c[b>>2]=0;if(d|0)mR(d);o=0;la(295,c[a>>2]|0);d=o;o=0;if(d&1){d=Qa(0)|0;b=c[a>>2]|0;c[a>>2]=0;if(!b)Id(d);mR(b);Id(d)}else{d=c[a>>2]|0;c[a>>2]=0;if(!d)return;mR(d);return}}function _o(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;d=l;l=l+32|0;e=d;if((b|0)>-1){l=d;return b|0}d=Ja(24)|0;f=xr()|0;o=0;na(71,d|0,b|0,f|0);f=o;o=0;if(f&1){f=Qa(0)|0;Sa(d|0);g=f}else{o=0;na(72,d|0,4424,56);o=0;d=Qa(0)|0;g=d}Ka(g|0)|0;g=fo()|0;o=0;na(71,e|0,3,g|0);g=o;o=0;if(g&1){g=Pa()|0;h=z;i=g}else{o=0;ma(144,e|0,0);o=0;g=Pa()|0;d=z;c[e>>2]=10036;f=e+12|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);h=d;i=g}o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}else $a(i|0);return 0}function $o(a){a=a|0;var b=0,d=0;c[a>>2]=10084;b=kR(12)|0;o=0;la(293,b|0);d=o;o=0;if(d&1){d=Pa()|0;mR(b);$a(d|0)}else{c[a+4>>2]=b;return}}function ap(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;e=l;l=l+16|0;f=e;c[b>>2]=10084;g=b+4|0;o=0;b=Z(209,12)|0;h=o;o=0;do if(h&1){i=Pa()|0;j=z;k=i}else{o=0;la(293,b|0);i=o;o=0;if(i&1){i=Pa()|0;m=z;mR(b);j=m;k=i;break}c[g>>2]=b;switch(d|0){case 0:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;i=f+11|0;a[i>>0]=3;a[f>>0]=a[83809]|0;a[f+1>>0]=a[83810]|0;a[f+2>>0]=a[83811]|0;n=i;p=f+3|0;break}case 1:{i=f+4|0;m=i;c[m>>2]=0;c[m+4>>2]=0;m=f+11|0;a[m>>0]=4;c[f>>2]=826361939;n=m;p=i;break}case 3:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;i=f+11|0;a[i>>0]=6;a[f>>0]=a[83045]|0;a[f+1>>0]=a[83046]|0;a[f+2>>0]=a[83047]|0;a[f+3>>0]=a[83048]|0;a[f+4>>0]=a[83049]|0;a[f+5>>0]=a[83050]|0;n=i;p=f+6|0;break}case 2:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;i=f+11|0;a[i>>0]=6;a[f>>0]=a[83038]|0;a[f+1>>0]=a[83039]|0;a[f+2>>0]=a[83040]|0;a[f+3>>0]=a[83041]|0;a[f+4>>0]=a[83042]|0;a[f+5>>0]=a[83043]|0;n=i;p=f+6|0;break}case 4:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;i=f+11|0;a[i>>0]=6;a[f>>0]=a[83052]|0;a[f+1>>0]=a[83053]|0;a[f+2>>0]=a[83054]|0;a[f+3>>0]=a[83055]|0;a[f+4>>0]=a[83056]|0;a[f+5>>0]=a[83057]|0;n=i;p=f+6|0;break}case 5:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;i=f+11|0;a[i>>0]=6;a[f>>0]=a[83059]|0;a[f+1>>0]=a[83060]|0;a[f+2>>0]=a[83061]|0;a[f+3>>0]=a[83062]|0;a[f+4>>0]=a[83063]|0;a[f+5>>0]=a[83064]|0;n=i;p=f+6|0;break}default:{}}a[p>>0]=0;o=0;na(86,c[b>>2]|0,f|0,0);i=o;o=0;if(!(i&1)?(o=0,na(86,c[b+4>>2]|0,f|0,1),i=o,o=0,!(i&1)):0){if((a[n>>0]|0)>=0){l=e;return}mR(c[f>>2]|0);l=e;return}i=Pa()|0;m=z;if((a[n>>0]|0)<0)mR(c[f>>2]|0);q=c[g>>2]|0;c[g>>2]=0;if(!q){r=m;s=i;$a(s|0)}Zo(q);mR(q);r=m;s=i;$a(s|0)}while(0);r=j;s=k;$a(s|0)}function bp(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;e=l;l=l+16|0;f=e+1|0;g=By(c)|0;if(g|0){h=Fy(b,g,d)|0;a[f>>0]=a[e>>0]|0;cp(h,f)|0;l=e;return}e=Ja(24)|0;o=0;na(73,e|0,16,c|0);c=o;o=0;if(c&1){c=Pa()|0;Sa(e|0);$a(c|0)}else Xa(e|0,4424,56)}function cp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;d=l;l=l+32|0;e=d;if((b|0)>-1){l=d;return b|0}d=Ja(24)|0;f=xr()|0;o=0;na(71,d|0,b|0,f|0);f=o;o=0;if(f&1){f=Qa(0)|0;Sa(d|0);g=f}else{o=0;na(72,d|0,4424,56);o=0;d=Qa(0)|0;g=d}Ka(g|0)|0;g=fo()|0;o=0;na(71,e|0,3,g|0);g=o;o=0;if(g&1){g=Pa()|0;h=z;i=g}else{o=0;ma(144,e|0,0);o=0;g=Pa()|0;d=z;c[e>>2]=10036;f=e+12|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);h=d;i=g}o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}else $a(i|0);return 0}function dp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=d+4|0;o=0;d=Z(222,c[c[(c[e>>2]|0)+8>>2]>>2]|0)|0;f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}if(!d){d=Ja(24)|0;o=0;ma(143,d|0,14);f=o;o=0;if(f&1){f=Pa()|0;Sa(d|0);$a(f|0)}else Xa(d|0,4424,56)}o=0;d=Z(223,c[c[(c[e>>2]|0)+8>>2]>>2]|0)|0;e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)};c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;e=$F(d)|0;if(e>>>0>4294967279)vR(b);if(e>>>0<11){a[b+11>>0]=e;if(!e){g=b;h=g+e|0;a[h>>0]=0;return}else i=b}else{f=e+16&-16;j=kR(f)|0;c[b>>2]=j;c[b+8>>2]=f|-2147483648;c[b+4>>2]=e;i=j}CT(i|0,d|0,e|0)|0;g=i;h=g+e|0;a[h>>0]=0;return}function ep(a,b){a=a|0;b=b|0;var d=0,e=0;d=a+4|0;e=b+4|0;b=c[e>>2]|0;c[e>>2]=0;e=c[d>>2]|0;c[d>>2]=b;if(!e)return a|0;Zo(e);mR(e);return a|0}function fp(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;d=l;l=l+16|0;e=d;f=b+4|0;o=0;b=Z(222,c[c[(c[f>>2]|0)+8>>2]>>2]|0)|0;g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}if(!b){b=Ja(24)|0;o=0;ma(143,b|0,14);g=o;o=0;if(g&1){g=Pa()|0;Sa(b|0);$a(g|0)}else Xa(b|0,4424,56)}o=0;b=Z(222,c[c[(c[f>>2]|0)+8>>2]>>2]|0)|0;f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}switch(b|0){case 4:{h=1;l=d;return h|0}case 5:{h=2;l=d;return h|0}case 6:{h=3;l=d;return h|0}case 7:{h=4;l=d;return h|0}case 8:{h=5;l=d;return h|0}case 3:{h=0;l=d;return h|0}default:{h=Ja(24)|0;switch(b|0){case 0:{b=e+4|0;d=b;c[d>>2]=0;c[d+4>>2]=0;a[e+11>>0]=4;c[e>>2]=1162760014;i=b;break}case 1:{c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;a[e+11>>0]=3;a[e>>0]=a[75522]|0;a[e+1>>0]=a[75523]|0;a[e+2>>0]=a[75524]|0;i=e+3|0;break}case 2:{c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;a[e+11>>0]=3;a[e>>0]=a[75526]|0;a[e+1>>0]=a[75527]|0;a[e+2>>0]=a[75528]|0;i=e+3|0;break}case 9:{c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;a[e+11>>0]=9;j=e;k=75530;m=j+9|0;do{a[j>>0]=a[k>>0]|0;j=j+1|0;k=k+1|0}while((j|0)<(m|0));i=e+9|0;break}default:{c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;a[e+11>>0]=9;j=e;k=75512;m=j+9|0;do{a[j>>0]=a[k>>0]|0;j=j+1|0;k=k+1|0}while((j|0)<(m|0));i=e+9|0}}a[i>>0]=0;i=fo()|0;o=0;oa(37,h|0,16,i|0,e|0);i=o;o=0;if(i&1)n=1;else{o=0;na(72,h|0,4424,56);o=0;n=0}i=Pa()|0;if((a[e+11>>0]|0)<0)mR(c[e>>2]|0);if(!n)$a(i|0);Sa(h|0);$a(i|0)}}return 0}function gp(a){a=a|0;var b=0;o=0;b=Z(222,c[c[(c[a+4>>2]|0)+8>>2]>>2]|0)|0;a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}else return b|0;return 0}function hp(a){a=a|0;var b=0,d=0;b=a+4|0;o=0;a=Z(222,c[c[(c[b>>2]|0)+8>>2]>>2]|0)|0;d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}if(!a){a=Ja(24)|0;o=0;ma(143,a|0,14);d=o;o=0;if(d&1){d=Pa()|0;Sa(a|0);$a(d|0)}else Xa(a|0,4424,56)}else{o=0;a=Z(224,c[c[(c[b>>2]|0)+8>>2]>>2]|0)|0;b=o;o=0;if(b&1){b=Qa(0)|0;Id(b)}else return a&255|0}return 0}function ip(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=l;l=l+32|0;e=d;f=b+4|0;o=0;b=Z(222,c[c[(c[f>>2]|0)+8>>2]>>2]|0)|0;g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}if(!b){b=Ja(24)|0;o=0;ma(143,b|0,14);g=o;o=0;if(g&1){g=Pa()|0;Sa(b|0);$a(g|0)}else Xa(b|0,4424,56)}b=Gy(c[c[f>>2]>>2]|0)|0;if((b|0)>-1){l=d;return}d=Ja(24)|0;f=xr()|0;o=0;na(71,d|0,b|0,f|0);f=o;o=0;if(f&1){f=Qa(0)|0;Sa(d|0);h=f}else{o=0;na(72,d|0,4424,56);o=0;d=Qa(0)|0;h=d}Ka(h|0)|0;h=fo()|0;o=0;na(71,e|0,9,h|0);h=o;o=0;if(h&1){h=Pa()|0;i=z;j=h}else{o=0;ma(144,e|0,0);o=0;h=Pa()|0;d=z;c[e>>2]=10036;f=e+12|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);i=d;j=h}o=0;ka(3);h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}else $a(j|0)}function jp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=l;l=l+32|0;f=e;g=b+4|0;o=0;b=Z(222,c[c[(c[g>>2]|0)+8>>2]>>2]|0)|0;h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}if(!b){b=Ja(24)|0;o=0;ma(143,b|0,14);h=o;o=0;if(h&1){h=Pa()|0;Sa(b|0);$a(h|0)}else Xa(b|0,4424,56)}b=c[d>>2]|0;h=Hy(c[c[g>>2]>>2]|0,b,(c[d+4>>2]|0)-b|0)|0;if((h|0)>-1){l=e;return}e=Ja(24)|0;b=xr()|0;o=0;na(71,e|0,h|0,b|0);b=o;o=0;if(b&1){b=Qa(0)|0;Sa(e|0);i=b}else{o=0;na(72,e|0,4424,56);o=0;e=Qa(0)|0;i=e}Ka(i|0)|0;i=fo()|0;o=0;na(71,f|0,9,i|0);i=o;o=0;if(i&1){i=Pa()|0;j=z;k=i}else{o=0;ma(144,f|0,0);o=0;i=Pa()|0;e=z;c[f>>2]=10036;b=f+12|0;if((a[b+11>>0]|0)<0)mR(c[b>>2]|0);j=e;k=i}o=0;ka(3);i=o;o=0;if(i&1){i=Qa(0)|0;Id(i)}else $a(k|0)}function kp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;e=l;l=l+32|0;f=e;g=d+4|0;o=0;d=Z(222,c[c[(c[g>>2]|0)+8>>2]>>2]|0)|0;h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}if(!d){d=Ja(24)|0;o=0;ma(143,d|0,14);h=o;o=0;if(h&1){h=Pa()|0;Sa(d|0);$a(h|0)}else Xa(d|0,4424,56)}o=0;d=Z(224,c[c[(c[g>>2]|0)+8>>2]>>2]|0)|0;h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}h=d&255;c[b>>2]=0;i=b+4|0;c[i>>2]=0;c[b+8>>2]=0;if(!(d<<24>>24)){j=0;k=0}else{d=kR(h)|0;c[b>>2]=d;m=d+h|0;c[b+8>>2]=m;ET(d|0,0,h|0)|0;c[i>>2]=m;j=d;k=m}o=0;m=_(122,c[c[g>>2]>>2]|0,j|0)|0;g=o;o=0;if(!(g&1)){if((m|0)>-1){l=e;return}e=Ja(24)|0;g=xr()|0;o=0;na(71,e|0,m|0,g|0);g=o;o=0;if(g&1){g=Qa(0)|0;Sa(e|0);n=g}else{o=0;na(72,e|0,4424,56);o=0;e=Qa(0)|0;n=e}Ka(n|0)|0;n=fo()|0;o=0;na(71,f|0,9,n|0);n=o;o=0;if(n&1){n=Pa()|0;p=z;q=n}else{o=0;ma(144,f|0,0);o=0;n=Pa()|0;e=z;c[f>>2]=10036;g=f+12|0;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);p=e;q=n}o=0;ka(3);n=o;o=0;if(n&1){n=Qa(0)|0;Id(n)}else{r=p;s=q}}else{q=Pa()|0;r=z;s=q}if(!j)$a(s|0);if((k|0)!=(j|0))c[i>>2]=j;mR(j);$a(s|0)}function lp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0;f=l;l=l+32|0;g=f;h=d+4|0;o=0;d=Z(222,c[c[(c[h>>2]|0)+8>>2]>>2]|0)|0;i=o;o=0;if(i&1){i=Qa(0)|0;Id(i)}if(!d){d=Ja(24)|0;o=0;ma(143,d|0,14);i=o;o=0;if(i&1){i=Pa()|0;Sa(d|0);$a(i|0)}else Xa(d|0,4424,56)}o=0;d=Z(224,c[c[(c[h>>2]|0)+8>>2]>>2]|0)|0;i=o;o=0;if(i&1){i=Qa(0)|0;Id(i)}i=d&255;c[b>>2]=0;j=b+4|0;c[j>>2]=0;c[b+8>>2]=0;if(!(d<<24>>24)){k=0;m=0}else{d=kR(i)|0;c[b>>2]=d;n=d+i|0;c[b+8>>2]=n;ET(d|0,0,i|0)|0;c[j>>2]=n;k=d;m=n}n=c[e>>2]|0;o=0;d=aa(47,c[c[c[h>>2]>>2]>>2]|0,n|0,(c[e+4>>2]|0)-n|0,k|0)|0;n=o;o=0;if(!(n&1)){if((d|0)>-1){l=f;return}f=Ja(24)|0;n=xr()|0;o=0;na(71,f|0,d|0,n|0);n=o;o=0;if(n&1){n=Qa(0)|0;Sa(f|0);p=n}else{o=0;na(72,f|0,4424,56);o=0;f=Qa(0)|0;p=f}Ka(p|0)|0;p=fo()|0;o=0;na(71,g|0,9,p|0);p=o;o=0;if(p&1){p=Pa()|0;q=z;r=p}else{o=0;ma(144,g|0,0);o=0;p=Pa()|0;f=z;c[g>>2]=10036;n=g+12|0;if((a[n+11>>0]|0)<0)mR(c[n>>2]|0);q=f;r=p}o=0;ka(3);p=o;o=0;if(p&1){p=Qa(0)|0;Id(p)}else{s=q;t=r}}else{r=Pa()|0;s=z;t=r}if(!k)$a(t|0);if((m|0)!=(k|0))c[j>>2]=k;mR(k);$a(t|0)}function mp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=l;l=l+32|0;f=e;g=b+4|0;o=0;b=Z(222,c[c[(c[g>>2]|0)+8>>2]>>2]|0)|0;h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}if(!b){b=Ja(24)|0;o=0;ma(143,b|0,14);h=o;o=0;if(h&1){h=Pa()|0;Sa(b|0);$a(h|0)}else Xa(b|0,4424,56)}b=c[d>>2]|0;h=Ky(c[(c[g>>2]|0)+4>>2]|0,b,(c[d+4>>2]|0)-b|0)|0;if((h|0)>-1){l=e;return}e=Ja(24)|0;b=xr()|0;o=0;na(71,e|0,h|0,b|0);b=o;o=0;if(b&1){b=Qa(0)|0;Sa(e|0);i=b}else{o=0;na(72,e|0,4424,56);o=0;e=Qa(0)|0;i=e}Ka(i|0)|0;i=fo()|0;o=0;na(71,f|0,9,i|0);i=o;o=0;if(i&1){i=Pa()|0;j=z;k=i}else{o=0;ma(144,f|0,0);o=0;i=Pa()|0;e=z;c[f>>2]=10036;b=f+12|0;if((a[b+11>>0]|0)<0)mR(c[b>>2]|0);j=e;k=i}o=0;ka(3);i=o;o=0;if(i&1){i=Qa(0)|0;Id(i)}else $a(k|0)}function np(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=l;l=l+32|0;e=d;f=b+4|0;o=0;b=Z(222,c[c[(c[f>>2]|0)+8>>2]>>2]|0)|0;g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}if(!b){b=Ja(24)|0;o=0;ma(143,b|0,14);g=o;o=0;if(g&1){g=Pa()|0;Sa(b|0);$a(g|0)}else Xa(b|0,4424,56)}b=Ny(c[(c[f>>2]|0)+4>>2]|0)|0;if((b|0)>-1){l=d;return}d=Ja(24)|0;f=xr()|0;o=0;na(71,d|0,b|0,f|0);f=o;o=0;if(f&1){f=Qa(0)|0;Sa(d|0);h=f}else{o=0;na(72,d|0,4424,56);o=0;d=Qa(0)|0;h=d}Ka(h|0)|0;h=fo()|0;o=0;na(71,e|0,9,h|0);h=o;o=0;if(h&1){h=Pa()|0;i=z;j=h}else{o=0;ma(144,e|0,0);o=0;h=Pa()|0;d=z;c[e>>2]=10036;f=e+12|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);i=d;j=h}o=0;ka(3);h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}else $a(j|0)}function op(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=l;l=l+32|0;f=e;g=b+4|0;o=0;b=Z(222,c[c[(c[g>>2]|0)+8>>2]>>2]|0)|0;h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}if(!b){b=Ja(24)|0;o=0;ma(143,b|0,14);h=o;o=0;if(h&1){h=Pa()|0;Sa(b|0);$a(h|0)}else Xa(b|0,4424,56)}b=c[d>>2]|0;h=Ly(c[(c[g>>2]|0)+4>>2]|0,b,(c[d+4>>2]|0)-b|0)|0;if((h|0)>-1){l=e;return}e=Ja(24)|0;b=xr()|0;o=0;na(71,e|0,h|0,b|0);b=o;o=0;if(b&1){b=Qa(0)|0;Sa(e|0);i=b}else{o=0;na(72,e|0,4424,56);o=0;e=Qa(0)|0;i=e}Ka(i|0)|0;i=fo()|0;o=0;na(71,f|0,9,i|0);i=o;o=0;if(i&1){i=Pa()|0;j=z;k=i}else{o=0;ma(144,f|0,0);o=0;i=Pa()|0;e=z;c[f>>2]=10036;b=f+12|0;if((a[b+11>>0]|0)<0)mR(c[b>>2]|0);j=e;k=i}o=0;ka(3);i=o;o=0;if(i&1){i=Qa(0)|0;Id(i)}else $a(k|0)}function pp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;e=l;l=l+32|0;f=e;g=d+4|0;o=0;d=Z(222,c[c[(c[g>>2]|0)+8>>2]>>2]|0)|0;h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}if(!d){d=Ja(24)|0;o=0;ma(143,d|0,14);h=o;o=0;if(h&1){h=Pa()|0;Sa(d|0);$a(h|0)}else Xa(d|0,4424,56)}o=0;d=Z(224,c[c[(c[g>>2]|0)+8>>2]>>2]|0)|0;h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}h=d&255;c[b>>2]=0;i=b+4|0;c[i>>2]=0;c[b+8>>2]=0;if(!(d<<24>>24)){j=0;k=0}else{d=kR(h)|0;c[b>>2]=d;m=d+h|0;c[b+8>>2]=m;ET(d|0,0,h|0)|0;c[i>>2]=m;j=d;k=m}o=0;m=_(123,c[(c[g>>2]|0)+4>>2]|0,j|0)|0;g=o;o=0;if(!(g&1)){if((m|0)>-1){l=e;return}e=Ja(24)|0;g=xr()|0;o=0;na(71,e|0,m|0,g|0);g=o;o=0;if(g&1){g=Qa(0)|0;Sa(e|0);n=g}else{o=0;na(72,e|0,4424,56);o=0;e=Qa(0)|0;n=e}Ka(n|0)|0;n=fo()|0;o=0;na(71,f|0,9,n|0);n=o;o=0;if(n&1){n=Pa()|0;p=z;q=n}else{o=0;ma(144,f|0,0);o=0;n=Pa()|0;e=z;c[f>>2]=10036;g=f+12|0;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);p=e;q=n}o=0;ka(3);n=o;o=0;if(n&1){n=Qa(0)|0;Id(n)}else{r=p;s=q}}else{q=Pa()|0;r=z;s=q}if(!j)$a(s|0);if((k|0)!=(j|0))c[i>>2]=j;mR(j);$a(s|0)}function qp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0;g=l;l=l+32|0;h=g;i=d+4|0;o=0;d=Z(222,c[c[(c[i>>2]|0)+8>>2]>>2]|0)|0;j=o;o=0;if(j&1){j=Qa(0)|0;Id(j)}if(!d){d=Ja(24)|0;o=0;ma(143,d|0,14);j=o;o=0;if(j&1){j=Pa()|0;Sa(d|0);$a(j|0)}else Xa(d|0,4424,56)}o=0;d=Z(224,c[c[(c[i>>2]|0)+8>>2]>>2]|0)|0;j=o;o=0;if(j&1){j=Qa(0)|0;Id(j)}j=d&255;c[b>>2]=0;k=b+4|0;c[k>>2]=0;c[b+8>>2]=0;if(!(d<<24>>24)){m=0;n=0}else{d=kR(j)|0;c[b>>2]=d;p=d+j|0;c[b+8>>2]=p;ET(d|0,0,j|0)|0;c[k>>2]=p;m=d;n=p}p=c[e>>2]|0;d=c[f>>2]|0;o=0;j=ea(52,c[c[(c[i>>2]|0)+4>>2]>>2]|0,p|0,(c[e+4>>2]|0)-p|0,d|0,(c[f+4>>2]|0)-d|0,m|0)|0;d=o;o=0;if(!(d&1)){if((j|0)>-1){l=g;return}g=Ja(24)|0;d=xr()|0;o=0;na(71,g|0,j|0,d|0);d=o;o=0;if(d&1){d=Qa(0)|0;Sa(g|0);q=d}else{o=0;na(72,g|0,4424,56);o=0;g=Qa(0)|0;q=g}Ka(q|0)|0;q=fo()|0;o=0;na(71,h|0,9,q|0);q=o;o=0;if(q&1){q=Pa()|0;r=z;s=q}else{o=0;ma(144,h|0,0);o=0;q=Pa()|0;g=z;c[h>>2]=10036;d=h+12|0;if((a[d+11>>0]|0)<0)mR(c[d>>2]|0);r=g;s=q}o=0;ka(3);q=o;o=0;if(q&1){q=Qa(0)|0;Id(q)}else{t=r;u=s}}else{s=Pa()|0;t=z;u=s}if(!m)$a(u|0);if((n|0)!=(m|0))c[k>>2]=m;mR(m);$a(u|0)}function rp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;e=l;l=l+32|0;f=e+24|0;g=e+12|0;h=e;wk(f);o=0;ma(124,f|0,b|0);b=o;o=0;if(b&1){b=Pa()|0;i=z;j=b;fk(f);$a(j|0)}o=0;ma(127,g|0,f|0);b=o;o=0;if(!(b&1)){o=0;na(59,h|0,f|0,d|0);d=o;o=0;do if(d&1){b=Pa()|0;k=z;m=b}else{o=0;na(66,a|0,g|0,h|0);b=o;o=0;if(b&1){b=Pa()|0;n=z;p=c[h>>2]|0;if(!p){k=n;m=b;break}q=h+4|0;if((c[q>>2]|0)!=(p|0))c[q>>2]=p;mR(p);k=n;m=b;break}b=c[h>>2]|0;if(b|0){n=h+4|0;if((c[n>>2]|0)!=(b|0))c[n>>2]=b;mR(b)}b=c[g>>2]|0;if(!b){fk(f);l=e;return}n=g+4|0;if((c[n>>2]|0)!=(b|0))c[n>>2]=b;mR(b);fk(f);l=e;return}while(0);e=c[g>>2]|0;if(!e){r=k;s=m}else{h=g+4|0;if((c[h>>2]|0)!=(e|0))c[h>>2]=e;mR(e);r=k;s=m}}else{m=Pa()|0;r=z;s=m}i=r;j=s;fk(f);$a(j|0)}function sp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;c[a>>2]=0;e=a+4|0;c[e>>2]=0;c[a+8>>2]=0;f=b+4|0;g=(c[f>>2]|0)-(c[b>>2]|0)|0;do if(g|0){if((g|0)>=0){o=0;h=Z(209,g|0)|0;i=o;o=0;if(!(i&1)){c[e>>2]=h;c[a>>2]=h;c[a+8>>2]=h+g;i=c[b>>2]|0;j=(c[f>>2]|0)-i|0;if((j|0)<=0)break;CT(h|0,i|0,j|0)|0;c[e>>2]=h+j;break}}else{o=0;la(271,a|0);o=0}j=Pa()|0;h=c[a>>2]|0;if(!h)$a(j|0);if((c[e>>2]|0)!=(h|0))c[e>>2]=h;mR(h);$a(j|0)}while(0);f=a+12|0;c[f>>2]=0;b=a+16|0;c[b>>2]=0;c[a+20>>2]=0;g=d+4|0;j=(c[g>>2]|0)-(c[d>>2]|0)|0;if(!j)return;if((j|0)>=0){o=0;h=Z(209,j|0)|0;i=o;o=0;if(!(i&1)){c[b>>2]=h;c[f>>2]=h;c[a+20>>2]=h+j;j=c[d>>2]|0;d=(c[g>>2]|0)-j|0;if((d|0)<=0)return;CT(h|0,j|0,d|0)|0;c[b>>2]=h+d;return}}else{o=0;la(271,f|0);o=0}d=Pa()|0;h=c[f>>2]|0;if(h|0){if((c[b>>2]|0)!=(h|0))c[b>>2]=h;mR(h)}h=c[a>>2]|0;if(!h)$a(d|0);if((c[e>>2]|0)!=(h|0))c[e>>2]=h;mR(h);$a(d|0)}function tp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;d=l;l=l+32|0;e=d+24|0;f=d+12|0;g=d;wk(e);o=0;ma(124,e|0,20);h=o;o=0;if(h&1){h=Pa()|0;i=z;j=h;fk(e);$a(j|0)}o=0;ma(127,f|0,e|0);h=o;o=0;if(!(h&1)){o=0;na(59,g|0,e|0,b|0);b=o;o=0;do if(b&1){h=Pa()|0;k=z;m=h}else{o=0;na(66,a|0,f|0,g|0);h=o;o=0;if(h&1){h=Pa()|0;n=z;p=c[g>>2]|0;if(!p){k=n;m=h;break}q=g+4|0;if((c[q>>2]|0)!=(p|0))c[q>>2]=p;mR(p);k=n;m=h;break}h=c[g>>2]|0;if(h|0){n=g+4|0;if((c[n>>2]|0)!=(h|0))c[n>>2]=h;mR(h)}h=c[f>>2]|0;if(!h){fk(e);l=d;return}n=f+4|0;if((c[n>>2]|0)!=(h|0))c[n>>2]=h;mR(h);fk(e);l=d;return}while(0);d=c[f>>2]|0;if(!d){r=k;s=m}else{g=f+4|0;if((c[g>>2]|0)!=(d|0))c[g>>2]=d;mR(d);r=k;s=m}}else{m=Pa()|0;r=z;s=m}i=r;j=s;fk(e);$a(j|0)}function up(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;f=l;l=l+48|0;g=f+32|0;h=f+24|0;i=f+12|0;j=f;wk(g);if((c[b>>2]|0)==(c[b+4>>2]|0)){k=b+12|0;if((c[k>>2]|0)!=(c[b+16>>2]|0)?(o=0,na(53,g|0,k|0,d|0),d=o,o=0,d&1):0)m=3}else{o=0;ma(123,g|0,b|0);b=o;o=0;if(b&1)m=3}if((m|0)==3){m=Pa()|0;n=z;p=m;fk(g);$a(p|0)}o=0;la(277,h|0);m=o;o=0;if(m&1){m=Pa()|0;q=z;r=m}else{o=0;ma(125,h|0,g|0);m=o;o=0;if(m&1){m=Pa()|0;s=z;t=m}else{o=0;ma(127,i|0,h|0);m=o;o=0;if(!(m&1)){o=0;na(59,j|0,h|0,e|0);e=o;o=0;do if(e&1){m=Pa()|0;u=z;v=m}else{o=0;na(66,a|0,i|0,j|0);m=o;o=0;if(m&1){m=Pa()|0;b=z;d=c[j>>2]|0;if(!d){u=b;v=m;break}k=j+4|0;if((c[k>>2]|0)!=(d|0))c[k>>2]=d;mR(d);u=b;v=m;break}m=c[j>>2]|0;if(m|0){b=j+4|0;if((c[b>>2]|0)!=(m|0))c[b>>2]=m;mR(m)}m=c[i>>2]|0;if(!m){fk(h);fk(g);l=f;return}b=i+4|0;if((c[b>>2]|0)!=(m|0))c[b>>2]=m;mR(m);fk(h);fk(g);l=f;return}while(0);f=c[i>>2]|0;if(!f){w=u;x=v}else{j=i+4|0;if((c[j>>2]|0)!=(f|0))c[j>>2]=f;mR(f);w=u;x=v}}else{v=Pa()|0;w=z;x=v}s=w;t=x}fk(h);q=s;r=t}n=q;p=r;fk(g);$a(p|0)}function vp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;f=l;l=l+32|0;g=f+24|0;h=f+12|0;i=f;wk(g);o=0;na(87,g|0,b|0,d|0);d=o;o=0;if(d&1){d=Pa()|0;j=z;k=d;fk(g);$a(k|0)}o=0;ma(127,h|0,g|0);d=o;o=0;if(!(d&1)){o=0;na(59,i|0,g|0,e|0);e=o;o=0;do if(e&1){d=Pa()|0;m=z;n=d}else{o=0;na(66,a|0,h|0,i|0);d=o;o=0;if(d&1){d=Pa()|0;b=z;p=c[i>>2]|0;if(!p){m=b;n=d;break}q=i+4|0;if((c[q>>2]|0)!=(p|0))c[q>>2]=p;mR(p);m=b;n=d;break}d=c[i>>2]|0;if(d|0){b=i+4|0;if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d)}d=c[h>>2]|0;if(!d){fk(g);l=f;return}b=h+4|0;if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d);fk(g);l=f;return}while(0);f=c[h>>2]|0;if(!f){r=m;s=n}else{i=h+4|0;if((c[i>>2]|0)!=(f|0))c[i>>2]=f;mR(f);r=m;s=n}}else{n=Pa()|0;r=z;s=n}j=r;k=s;fk(g);$a(k|0)}function wp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;e=l;l=l+32|0;f=e+24|0;g=e+12|0;h=e;wk(f);o=0;na(87,f|0,20,b|0);b=o;o=0;if(b&1){b=Pa()|0;i=z;j=b;fk(f);$a(j|0)}o=0;ma(127,g|0,f|0);b=o;o=0;if(!(b&1)){o=0;na(59,h|0,f|0,d|0);d=o;o=0;do if(d&1){b=Pa()|0;k=z;m=b}else{o=0;na(66,a|0,g|0,h|0);b=o;o=0;if(b&1){b=Pa()|0;n=z;p=c[h>>2]|0;if(!p){k=n;m=b;break}q=h+4|0;if((c[q>>2]|0)!=(p|0))c[q>>2]=p;mR(p);k=n;m=b;break}b=c[h>>2]|0;if(b|0){n=h+4|0;if((c[n>>2]|0)!=(b|0))c[n>>2]=b;mR(b)}b=c[g>>2]|0;if(!b){fk(f);l=e;return}n=g+4|0;if((c[n>>2]|0)!=(b|0))c[n>>2]=b;mR(b);fk(f);l=e;return}while(0);e=c[g>>2]|0;if(!e){r=k;s=m}else{h=g+4|0;if((c[h>>2]|0)!=(e|0))c[h>>2]=e;mR(e);r=k;s=m}}else{m=Pa()|0;r=z;s=m}i=r;j=s;fk(f);$a(j|0)}function xp(a,b,c){a=a|0;b=b|0;c=c|0;return Ck(a,b,c)|0}function yp(a,b){a=a|0;b=b|0;return Ik(a,b)|0}function zp(a){a=a|0;return Jk(a)|0}function Ap(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=l;l=l+16|0;h=g;wk(h);o=0;na(53,h|0,d|0,e|0);e=o;o=0;do if(!(e&1))if((a[c[d>>2]>>0]|0)==45){o=0;na(59,b|0,h|0,f|0);i=o;o=0;if(i&1)break;fk(h);l=g;return}else{o=0;na(58,b|0,h|0,f|0);i=o;o=0;if(i&1)break;fk(h);l=g;return}while(0);g=Pa()|0;fk(h);$a(g|0)}function Bp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;f=l;l=l+32|0;g=f+16|0;h=f;if((c[e>>2]|0)==(c[e+4>>2]|0)){i=Ja(24)|0;o=0;ma(143,i|0,3);j=o;o=0;if(!(j&1))Xa(i|0,4424,56);j=Pa()|0;k=z;Sa(i|0);m=k;n=j;$a(n|0)}c[h>>2]=0;j=h+4|0;c[j>>2]=0;c[h+8>>2]=0;o=0;la(277,g|0);k=o;o=0;if(!(k&1)){o=0;na(53,g|0,d|0,h|0);k=o;o=0;do if(!(k&1)){if((a[c[d>>2]>>0]|0)==45){o=0;na(59,b|0,g|0,e|0);i=o;o=0;if(i&1)break}else{o=0;na(58,b|0,g|0,e|0);i=o;o=0;if(i&1)break}fk(g);i=c[h>>2]|0;if(!i){l=f;return}if((c[j>>2]|0)!=(i|0))c[j>>2]=i;mR(i);l=f;return}while(0);f=Pa()|0;e=z;fk(g);g=c[h>>2]|0;if(!g){p=e;q=f}else{if((c[j>>2]|0)!=(g|0))c[j>>2]=g;mR(g);p=e;q=f}}else{f=Pa()|0;p=z;q=f}m=p;n=q;$a(n|0)}function Cp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0;f=l;l=l+32|0;g=f+16|0;h=f;c[h>>2]=0;i=h+4|0;c[i>>2]=0;c[h+8>>2]=0;o=0;la(277,g|0);j=o;o=0;if(j&1){j=Pa()|0;k=z;m=j;$a(m|0)}o=0;na(53,g|0,d|0,e|0);e=o;o=0;do if(!(e&1)){if((a[c[d>>2]>>0]|0)==45){o=0;na(59,b|0,g|0,h|0);j=o;o=0;if(j&1)break}else{o=0;na(58,b|0,g|0,h|0);j=o;o=0;if(j&1)break}fk(g);j=c[h>>2]|0;if(!j){l=f;return}if((c[i>>2]|0)!=(j|0))c[i>>2]=j;mR(j);l=f;return}while(0);f=Pa()|0;b=z;fk(g);g=c[h>>2]|0;if(!g){k=b;m=f;$a(m|0)}if((c[i>>2]|0)!=(g|0))c[i>>2]=g;mR(g);k=b;m=f;$a(m|0)}function Dp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=l;l=l+16|0;g=f;wk(g);o=0;na(53,g|0,d|0,e|0);e=o;o=0;do if(!(e&1))if((a[c[d>>2]>>0]|0)==45){o=0;ma(127,b|0,g|0);h=o;o=0;if(h&1)break;fk(g);l=f;return}else{o=0;ma(126,b|0,g|0);h=o;o=0;if(h&1)break;fk(g);l=f;return}while(0);f=Pa()|0;fk(g);$a(f|0)}function Ep(a,b){a=a|0;b=b|0;var c=0,d=0;c=l;l=l+16|0;d=c;wk(d);o=0;ma(123,d|0,b|0);b=o;o=0;if(!(b&1)?(o=0,ma(127,a|0,d|0),a=o,o=0,!(a&1)):0){fk(d);l=c;return}c=Pa()|0;fk(d);$a(c|0)}\nfunction MD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;c=l;l=l+160|0;d=c+120|0;e=c+80|0;f=c+40|0;g=c;QD(d,b);QD(e,d);QD(e,e);OD(e,b,e);OD(d,d,e);QD(f,d);OD(e,e,f);QD(f,e);QD(f,f);QD(f,f);QD(f,f);QD(f,f);OD(e,f,e);QD(f,e);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);OD(f,f,e);QD(g,f);QD(g,g);QD(g,g);QD(g,g);QD(g,g);QD(g,g);QD(g,g);QD(g,g);QD(g,g);QD(g,g);QD(g,g);QD(g,g);QD(g,g);QD(g,g);QD(g,g);QD(g,g);QD(g,g);QD(g,g);QD(g,g);QD(g,g);OD(f,g,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);OD(e,f,e);QD(f,e);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);OD(f,f,e);QD(g,f);b=1;do{QD(g,g);b=b+1|0}while((b|0)!=100);OD(f,g,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);OD(e,f,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);OD(a,e,d);l=c;return}function ND(b){b=b|0;var c=0,d=0;c=l;l=l+32|0;d=c;SD(d,b);l=c;return (a[d+1>>0]|a[d>>0]|a[d+2>>0]|a[d+3>>0]|a[d+4>>0]|a[d+5>>0]|a[d+6>>0]|a[d+7>>0]|a[d+8>>0]|a[d+9>>0]|a[d+10>>0]|a[d+11>>0]|a[d+12>>0]|a[d+13>>0]|a[d+14>>0]|a[d+15>>0]|a[d+16>>0]|a[d+17>>0]|a[d+18>>0]|a[d+19>>0]|a[d+20>>0]|a[d+21>>0]|a[d+22>>0]|a[d+23>>0]|a[d+24>>0]|a[d+25>>0]|a[d+26>>0]|a[d+27>>0]|a[d+28>>0]|a[d+29>>0]|a[d+30>>0]|a[d+31>>0])<<24>>24!=0|0}function OD(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0;e=c[b>>2]|0;f=c[b+4>>2]|0;g=c[b+8>>2]|0;h=c[b+12>>2]|0;i=c[b+16>>2]|0;j=c[b+20>>2]|0;k=c[b+24>>2]|0;l=c[b+28>>2]|0;m=c[b+32>>2]|0;n=c[b+36>>2]|0;b=c[d>>2]|0;o=c[d+4>>2]|0;p=c[d+8>>2]|0;q=c[d+12>>2]|0;r=c[d+16>>2]|0;s=c[d+20>>2]|0;t=c[d+24>>2]|0;u=c[d+28>>2]|0;v=c[d+32>>2]|0;w=c[d+36>>2]|0;d=o*19|0;x=p*19|0;y=q*19|0;A=r*19|0;B=s*19|0;C=t*19|0;D=u*19|0;E=v*19|0;F=w*19|0;G=f<<1;H=h<<1;I=j<<1;J=l<<1;K=n<<1;L=((e|0)<0)<<31>>31;M=((b|0)<0)<<31>>31;N=rT(b|0,M|0,e|0,L|0)|0;O=z;P=((o|0)<0)<<31>>31;Q=rT(o|0,P|0,e|0,L|0)|0;R=z;S=((p|0)<0)<<31>>31;T=rT(p|0,S|0,e|0,L|0)|0;U=z;V=((q|0)<0)<<31>>31;W=rT(q|0,V|0,e|0,L|0)|0;X=z;Y=((r|0)<0)<<31>>31;Z=rT(r|0,Y|0,e|0,L|0)|0;_=z;$=((s|0)<0)<<31>>31;aa=rT(s|0,$|0,e|0,L|0)|0;ba=z;ca=((t|0)<0)<<31>>31;da=rT(t|0,ca|0,e|0,L|0)|0;ea=z;fa=((u|0)<0)<<31>>31;ga=rT(u|0,fa|0,e|0,L|0)|0;ha=z;ia=((v|0)<0)<<31>>31;ja=rT(v|0,ia|0,e|0,L|0)|0;ka=z;la=rT(w|0,((w|0)<0)<<31>>31|0,e|0,L|0)|0;L=z;e=((f|0)<0)<<31>>31;w=rT(b|0,M|0,f|0,e|0)|0;ma=z;na=((G|0)<0)<<31>>31;oa=rT(o|0,P|0,G|0,na|0)|0;pa=z;qa=rT(p|0,S|0,f|0,e|0)|0;ra=z;sa=rT(q|0,V|0,G|0,na|0)|0;ta=z;ua=rT(r|0,Y|0,f|0,e|0)|0;va=z;wa=rT(s|0,$|0,G|0,na|0)|0;xa=z;ya=rT(t|0,ca|0,f|0,e|0)|0;za=z;Aa=rT(u|0,fa|0,G|0,na|0)|0;Ba=z;Ca=rT(v|0,ia|0,f|0,e|0)|0;e=z;f=((F|0)<0)<<31>>31;ia=rT(F|0,f|0,G|0,na|0)|0;na=z;G=((g|0)<0)<<31>>31;v=rT(b|0,M|0,g|0,G|0)|0;Da=z;Ea=rT(o|0,P|0,g|0,G|0)|0;Fa=z;Ga=rT(p|0,S|0,g|0,G|0)|0;Ha=z;Ia=rT(q|0,V|0,g|0,G|0)|0;Ja=z;Ka=rT(r|0,Y|0,g|0,G|0)|0;La=z;Ma=rT(s|0,$|0,g|0,G|0)|0;Na=z;Oa=rT(t|0,ca|0,g|0,G|0)|0;Pa=z;Qa=rT(u|0,fa|0,g|0,G|0)|0;fa=z;u=((E|0)<0)<<31>>31;Ra=rT(E|0,u|0,g|0,G|0)|0;Sa=z;Ta=rT(F|0,f|0,g|0,G|0)|0;G=z;g=((h|0)<0)<<31>>31;Ua=rT(b|0,M|0,h|0,g|0)|0;Va=z;Wa=((H|0)<0)<<31>>31;Xa=rT(o|0,P|0,H|0,Wa|0)|0;Ya=z;Za=rT(p|0,S|0,h|0,g|0)|0;_a=z;$a=rT(q|0,V|0,H|0,Wa|0)|0;ab=z;bb=rT(r|0,Y|0,h|0,g|0)|0;cb=z;db=rT(s|0,$|0,H|0,Wa|0)|0;eb=z;fb=rT(t|0,ca|0,h|0,g|0)|0;ca=z;t=((D|0)<0)<<31>>31;gb=rT(D|0,t|0,H|0,Wa|0)|0;hb=z;ib=rT(E|0,u|0,h|0,g|0)|0;g=z;h=rT(F|0,f|0,H|0,Wa|0)|0;Wa=z;H=((i|0)<0)<<31>>31;jb=rT(b|0,M|0,i|0,H|0)|0;kb=z;lb=rT(o|0,P|0,i|0,H|0)|0;mb=z;nb=rT(p|0,S|0,i|0,H|0)|0;ob=z;pb=rT(q|0,V|0,i|0,H|0)|0;qb=z;rb=rT(r|0,Y|0,i|0,H|0)|0;sb=z;tb=rT(s|0,$|0,i|0,H|0)|0;$=z;s=((C|0)<0)<<31>>31;ub=rT(C|0,s|0,i|0,H|0)|0;vb=z;wb=rT(D|0,t|0,i|0,H|0)|0;xb=z;yb=rT(E|0,u|0,i|0,H|0)|0;zb=z;Ab=rT(F|0,f|0,i|0,H|0)|0;H=z;i=((j|0)<0)<<31>>31;Bb=rT(b|0,M|0,j|0,i|0)|0;Cb=z;Db=((I|0)<0)<<31>>31;Eb=rT(o|0,P|0,I|0,Db|0)|0;Fb=z;Gb=rT(p|0,S|0,j|0,i|0)|0;Hb=z;Ib=rT(q|0,V|0,I|0,Db|0)|0;Jb=z;Kb=rT(r|0,Y|0,j|0,i|0)|0;Y=z;r=((B|0)<0)<<31>>31;Lb=rT(B|0,r|0,I|0,Db|0)|0;Mb=z;Nb=rT(C|0,s|0,j|0,i|0)|0;Ob=z;Pb=rT(D|0,t|0,I|0,Db|0)|0;Qb=z;Rb=rT(E|0,u|0,j|0,i|0)|0;i=z;j=rT(F|0,f|0,I|0,Db|0)|0;Db=z;I=((k|0)<0)<<31>>31;Sb=rT(b|0,M|0,k|0,I|0)|0;Tb=z;Ub=rT(o|0,P|0,k|0,I|0)|0;Vb=z;Wb=rT(p|0,S|0,k|0,I|0)|0;Xb=z;Yb=rT(q|0,V|0,k|0,I|0)|0;V=z;q=((A|0)<0)<<31>>31;Zb=rT(A|0,q|0,k|0,I|0)|0;_b=z;$b=rT(B|0,r|0,k|0,I|0)|0;ac=z;bc=rT(C|0,s|0,k|0,I|0)|0;cc=z;dc=rT(D|0,t|0,k|0,I|0)|0;ec=z;fc=rT(E|0,u|0,k|0,I|0)|0;gc=z;hc=rT(F|0,f|0,k|0,I|0)|0;I=z;k=((l|0)<0)<<31>>31;ic=rT(b|0,M|0,l|0,k|0)|0;jc=z;kc=((J|0)<0)<<31>>31;lc=rT(o|0,P|0,J|0,kc|0)|0;mc=z;nc=rT(p|0,S|0,l|0,k|0)|0;S=z;p=((y|0)<0)<<31>>31;oc=rT(y|0,p|0,J|0,kc|0)|0;pc=z;qc=rT(A|0,q|0,l|0,k|0)|0;rc=z;sc=rT(B|0,r|0,J|0,kc|0)|0;tc=z;uc=rT(C|0,s|0,l|0,k|0)|0;vc=z;wc=rT(D|0,t|0,J|0,kc|0)|0;xc=z;yc=rT(E|0,u|0,l|0,k|0)|0;k=z;l=rT(F|0,f|0,J|0,kc|0)|0;kc=z;J=((m|0)<0)<<31>>31;zc=rT(b|0,M|0,m|0,J|0)|0;Ac=z;Bc=rT(o|0,P|0,m|0,J|0)|0;P=z;o=((x|0)<0)<<31>>31;Cc=rT(x|0,o|0,m|0,J|0)|0;Dc=z;Ec=rT(y|0,p|0,m|0,J|0)|0;Fc=z;Gc=rT(A|0,q|0,m|0,J|0)|0;Hc=z;Ic=rT(B|0,r|0,m|0,J|0)|0;Jc=z;Kc=rT(C|0,s|0,m|0,J|0)|0;Lc=z;Mc=rT(D|0,t|0,m|0,J|0)|0;Nc=z;Oc=rT(E|0,u|0,m|0,J|0)|0;Pc=z;Qc=rT(F|0,f|0,m|0,J|0)|0;J=z;m=((n|0)<0)<<31>>31;Rc=rT(b|0,M|0,n|0,m|0)|0;M=z;b=((K|0)<0)<<31>>31;Sc=rT(d|0,((d|0)<0)<<31>>31|0,K|0,b|0)|0;d=z;Tc=rT(x|0,o|0,n|0,m|0)|0;o=z;x=rT(y|0,p|0,K|0,b|0)|0;p=z;y=rT(A|0,q|0,n|0,m|0)|0;q=z;A=rT(B|0,r|0,K|0,b|0)|0;r=z;B=rT(C|0,s|0,n|0,m|0)|0;s=z;C=rT(D|0,t|0,K|0,b|0)|0;t=z;D=rT(E|0,u|0,n|0,m|0)|0;m=z;n=rT(F|0,f|0,K|0,b|0)|0;b=z;K=sT(Sc|0,d|0,N|0,O|0)|0;O=sT(K|0,z|0,Cc|0,Dc|0)|0;Dc=sT(O|0,z|0,oc|0,pc|0)|0;pc=sT(Dc|0,z|0,Zb|0,_b|0)|0;_b=sT(pc|0,z|0,Lb|0,Mb|0)|0;Mb=sT(_b|0,z|0,ub|0,vb|0)|0;vb=sT(Mb|0,z|0,gb|0,hb|0)|0;hb=sT(vb|0,z|0,Ra|0,Sa|0)|0;Sa=sT(hb|0,z|0,ia|0,na|0)|0;na=z;ia=sT(Q|0,R|0,w|0,ma|0)|0;ma=z;w=sT(Xa|0,Ya|0,jb|0,kb|0)|0;kb=sT(w|0,z|0,Ga|0,Ha|0)|0;Ha=sT(kb|0,z|0,sa|0,ta|0)|0;ta=sT(Ha|0,z|0,Z|0,_|0)|0;_=sT(ta|0,z|0,A|0,r|0)|0;r=sT(_|0,z|0,Kc|0,Lc|0)|0;Lc=sT(r|0,z|0,wc|0,xc|0)|0;xc=sT(Lc|0,z|0,fc|0,gc|0)|0;gc=sT(xc|0,z|0,j|0,Db|0)|0;Db=z;j=sT(Sa|0,na|0,33554432,0)|0;xc=yT(j|0,z|0,26)|0;j=z;fc=sT(ia|0,ma|0,Tc|0,o|0)|0;o=sT(fc|0,z|0,Ec|0,Fc|0)|0;Fc=sT(o|0,z|0,qc|0,rc|0)|0;rc=sT(Fc|0,z|0,$b|0,ac|0)|0;ac=sT(rc|0,z|0,Nb|0,Ob|0)|0;Ob=sT(ac|0,z|0,wb|0,xb|0)|0;xb=sT(Ob|0,z|0,ib|0,g|0)|0;g=sT(xb|0,z|0,Ta|0,G|0)|0;G=sT(g|0,z|0,xc|0,j|0)|0;g=z;Ta=AT(xc|0,j|0,26)|0;j=tT(Sa|0,na|0,Ta|0,z|0)|0;Ta=z;na=sT(gc|0,Db|0,33554432,0)|0;Sa=yT(na|0,z|0,26)|0;na=z;xc=sT(lb|0,mb|0,Bb|0,Cb|0)|0;Cb=sT(xc|0,z|0,Za|0,_a|0)|0;_a=sT(Cb|0,z|0,Ia|0,Ja|0)|0;Ja=sT(_a|0,z|0,ua|0,va|0)|0;va=sT(Ja|0,z|0,aa|0,ba|0)|0;ba=sT(va|0,z|0,B|0,s|0)|0;s=sT(ba|0,z|0,Mc|0,Nc|0)|0;Nc=sT(s|0,z|0,yc|0,k|0)|0;k=sT(Nc|0,z|0,hc|0,I|0)|0;I=sT(k|0,z|0,Sa|0,na|0)|0;k=z;hc=AT(Sa|0,na|0,26)|0;na=tT(gc|0,Db|0,hc|0,z|0)|0;hc=z;Db=sT(G|0,g|0,16777216,0)|0;gc=yT(Db|0,z|0,25)|0;Db=z;Sa=sT(oa|0,pa|0,v|0,Da|0)|0;Da=sT(Sa|0,z|0,T|0,U|0)|0;U=sT(Da|0,z|0,x|0,p|0)|0;p=sT(U|0,z|0,Gc|0,Hc|0)|0;Hc=sT(p|0,z|0,sc|0,tc|0)|0;tc=sT(Hc|0,z|0,bc|0,cc|0)|0;cc=sT(tc|0,z|0,Pb|0,Qb|0)|0;Qb=sT(cc|0,z|0,yb|0,zb|0)|0;zb=sT(Qb|0,z|0,h|0,Wa|0)|0;Wa=sT(zb|0,z|0,gc|0,Db|0)|0;zb=z;h=AT(gc|0,Db|0,25)|0;Db=tT(G|0,g|0,h|0,z|0)|0;h=z;g=sT(I|0,k|0,16777216,0)|0;G=yT(g|0,z|0,25)|0;g=z;gc=sT(Eb|0,Fb|0,Sb|0,Tb|0)|0;Tb=sT(gc|0,z|0,nb|0,ob|0)|0;ob=sT(Tb|0,z|0,$a|0,ab|0)|0;ab=sT(ob|0,z|0,Ka|0,La|0)|0;La=sT(ab|0,z|0,wa|0,xa|0)|0;xa=sT(La|0,z|0,da|0,ea|0)|0;ea=sT(xa|0,z|0,C|0,t|0)|0;t=sT(ea|0,z|0,Oc|0,Pc|0)|0;Pc=sT(t|0,z|0,l|0,kc|0)|0;kc=sT(Pc|0,z|0,G|0,g|0)|0;Pc=z;l=AT(G|0,g|0,25)|0;g=tT(I|0,k|0,l|0,z|0)|0;l=z;k=sT(Wa|0,zb|0,33554432,0)|0;I=yT(k|0,z|0,26)|0;k=z;G=sT(Ea|0,Fa|0,Ua|0,Va|0)|0;Va=sT(G|0,z|0,qa|0,ra|0)|0;ra=sT(Va|0,z|0,W|0,X|0)|0;X=sT(ra|0,z|0,y|0,q|0)|0;q=sT(X|0,z|0,Ic|0,Jc|0)|0;Jc=sT(q|0,z|0,uc|0,vc|0)|0;vc=sT(Jc|0,z|0,dc|0,ec|0)|0;ec=sT(vc|0,z|0,Rb|0,i|0)|0;i=sT(ec|0,z|0,Ab|0,H|0)|0;H=sT(i|0,z|0,I|0,k|0)|0;i=z;Ab=AT(I|0,k|0,26)|0;k=tT(Wa|0,zb|0,Ab|0,z|0)|0;Ab=sT(kc|0,Pc|0,33554432,0)|0;zb=yT(Ab|0,z|0,26)|0;Ab=z;Wa=sT(Ub|0,Vb|0,ic|0,jc|0)|0;jc=sT(Wa|0,z|0,Gb|0,Hb|0)|0;Hb=sT(jc|0,z|0,pb|0,qb|0)|0;qb=sT(Hb|0,z|0,bb|0,cb|0)|0;cb=sT(qb|0,z|0,Ma|0,Na|0)|0;Na=sT(cb|0,z|0,ya|0,za|0)|0;za=sT(Na|0,z|0,ga|0,ha|0)|0;ha=sT(za|0,z|0,D|0,m|0)|0;m=sT(ha|0,z|0,Qc|0,J|0)|0;J=sT(m|0,z|0,zb|0,Ab|0)|0;m=z;Qc=AT(zb|0,Ab|0,26)|0;Ab=tT(kc|0,Pc|0,Qc|0,z|0)|0;Qc=sT(H|0,i|0,16777216,0)|0;Pc=yT(Qc|0,z|0,25)|0;Qc=z;kc=sT(Pc|0,Qc|0,na|0,hc|0)|0;hc=z;na=AT(Pc|0,Qc|0,25)|0;Qc=tT(H|0,i|0,na|0,z|0)|0;na=sT(J|0,m|0,16777216,0)|0;i=yT(na|0,z|0,25)|0;na=z;H=sT(lc|0,mc|0,zc|0,Ac|0)|0;Ac=sT(H|0,z|0,Wb|0,Xb|0)|0;Xb=sT(Ac|0,z|0,Ib|0,Jb|0)|0;Jb=sT(Xb|0,z|0,rb|0,sb|0)|0;sb=sT(Jb|0,z|0,db|0,eb|0)|0;eb=sT(sb|0,z|0,Oa|0,Pa|0)|0;Pa=sT(eb|0,z|0,Aa|0,Ba|0)|0;Ba=sT(Pa|0,z|0,ja|0,ka|0)|0;ka=sT(Ba|0,z|0,n|0,b|0)|0;b=sT(ka|0,z|0,i|0,na|0)|0;ka=z;n=AT(i|0,na|0,25)|0;na=tT(J|0,m|0,n|0,z|0)|0;n=sT(kc|0,hc|0,33554432,0)|0;m=yT(n|0,z|0,26)|0;n=z;J=sT(g|0,l|0,m|0,n|0)|0;l=AT(m|0,n|0,26)|0;n=tT(kc|0,hc|0,l|0,z|0)|0;l=sT(b|0,ka|0,33554432,0)|0;hc=yT(l|0,z|0,26)|0;l=z;kc=sT(Bc|0,P|0,Rc|0,M|0)|0;M=sT(kc|0,z|0,nc|0,S|0)|0;S=sT(M|0,z|0,Yb|0,V|0)|0;V=sT(S|0,z|0,Kb|0,Y|0)|0;Y=sT(V|0,z|0,tb|0,$|0)|0;$=sT(Y|0,z|0,fb|0,ca|0)|0;ca=sT($|0,z|0,Qa|0,fa|0)|0;fa=sT(ca|0,z|0,Ca|0,e|0)|0;e=sT(fa|0,z|0,la|0,L|0)|0;L=sT(e|0,z|0,hc|0,l|0)|0;e=z;la=AT(hc|0,l|0,26)|0;l=tT(b|0,ka|0,la|0,z|0)|0;la=sT(L|0,e|0,16777216,0)|0;ka=yT(la|0,z|0,25)|0;la=z;b=rT(ka|0,la|0,19,0)|0;hc=sT(b|0,z|0,j|0,Ta|0)|0;Ta=z;j=AT(ka|0,la|0,25)|0;la=tT(L|0,e|0,j|0,z|0)|0;j=sT(hc|0,Ta|0,33554432,0)|0;e=yT(j|0,z|0,26)|0;j=z;L=sT(Db|0,h|0,e|0,j|0)|0;h=AT(e|0,j|0,26)|0;j=tT(hc|0,Ta|0,h|0,z|0)|0;c[a>>2]=j;c[a+4>>2]=L;c[a+8>>2]=k;c[a+12>>2]=Qc;c[a+16>>2]=n;c[a+20>>2]=J;c[a+24>>2]=Ab;c[a+28>>2]=na;c[a+32>>2]=l;c[a+36>>2]=la;return}function PD(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0;d=c[b>>2]|0;e=c[b+4>>2]|0;f=c[b+8>>2]|0;g=c[b+12>>2]|0;h=c[b+16>>2]|0;i=c[b+20>>2]|0;j=c[b+24>>2]|0;k=c[b+28>>2]|0;l=c[b+32>>2]|0;m=c[b+36>>2]|0;b=rT(d|0,((d|0)<0)<<31>>31|0,121666,0)|0;d=z;n=rT(e|0,((e|0)<0)<<31>>31|0,121666,0)|0;e=z;o=rT(f|0,((f|0)<0)<<31>>31|0,121666,0)|0;f=z;p=rT(g|0,((g|0)<0)<<31>>31|0,121666,0)|0;g=z;q=rT(h|0,((h|0)<0)<<31>>31|0,121666,0)|0;h=z;r=rT(i|0,((i|0)<0)<<31>>31|0,121666,0)|0;i=z;s=rT(j|0,((j|0)<0)<<31>>31|0,121666,0)|0;j=z;t=rT(k|0,((k|0)<0)<<31>>31|0,121666,0)|0;k=z;u=rT(l|0,((l|0)<0)<<31>>31|0,121666,0)|0;l=z;v=rT(m|0,((m|0)<0)<<31>>31|0,121666,0)|0;m=z;w=sT(v|0,m|0,16777216,0)|0;x=yT(w|0,z|0,25)|0;w=z;y=rT(x|0,w|0,19,0)|0;A=sT(y|0,z|0,b|0,d|0)|0;d=z;b=AT(x|0,w|0,25)|0;w=tT(v|0,m|0,b|0,z|0)|0;b=z;m=sT(n|0,e|0,16777216,0)|0;v=yT(m|0,z|0,25)|0;m=z;x=sT(v|0,m|0,o|0,f|0)|0;f=z;o=AT(v|0,m|0,25)|0;m=tT(n|0,e|0,o|0,z|0)|0;o=z;e=sT(p|0,g|0,16777216,0)|0;n=yT(e|0,z|0,25)|0;e=z;v=sT(n|0,e|0,q|0,h|0)|0;h=z;q=AT(n|0,e|0,25)|0;e=tT(p|0,g|0,q|0,z|0)|0;q=z;g=sT(r|0,i|0,16777216,0)|0;p=yT(g|0,z|0,25)|0;g=z;n=sT(p|0,g|0,s|0,j|0)|0;j=z;s=AT(p|0,g|0,25)|0;g=tT(r|0,i|0,s|0,z|0)|0;s=z;i=sT(t|0,k|0,16777216,0)|0;r=yT(i|0,z|0,25)|0;i=z;p=sT(r|0,i|0,u|0,l|0)|0;l=z;u=AT(r|0,i|0,25)|0;i=tT(t|0,k|0,u|0,z|0)|0;u=z;k=sT(A|0,d|0,33554432,0)|0;t=yT(k|0,z|0,26)|0;k=z;r=sT(m|0,o|0,t|0,k|0)|0;o=AT(t|0,k|0,26)|0;k=tT(A|0,d|0,o|0,z|0)|0;o=sT(x|0,f|0,33554432,0)|0;d=yT(o|0,z|0,26)|0;o=z;A=sT(e|0,q|0,d|0,o|0)|0;q=AT(d|0,o|0,26)|0;o=tT(x|0,f|0,q|0,z|0)|0;q=sT(v|0,h|0,33554432,0)|0;f=yT(q|0,z|0,26)|0;q=z;x=sT(g|0,s|0,f|0,q|0)|0;s=AT(f|0,q|0,26)|0;q=tT(v|0,h|0,s|0,z|0)|0;s=sT(n|0,j|0,33554432,0)|0;h=yT(s|0,z|0,26)|0;s=z;v=sT(i|0,u|0,h|0,s|0)|0;u=AT(h|0,s|0,26)|0;s=tT(n|0,j|0,u|0,z|0)|0;u=sT(p|0,l|0,33554432,0)|0;j=yT(u|0,z|0,26)|0;u=z;n=sT(w|0,b|0,j|0,u|0)|0;b=AT(j|0,u|0,26)|0;u=tT(p|0,l|0,b|0,z|0)|0;c[a>>2]=k;c[a+4>>2]=r;c[a+8>>2]=o;c[a+12>>2]=A;c[a+16>>2]=q;c[a+20>>2]=x;c[a+24>>2]=s;c[a+28>>2]=v;c[a+32>>2]=u;c[a+36>>2]=n;return}function QD(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0;d=c[b>>2]|0;e=c[b+4>>2]|0;f=c[b+8>>2]|0;g=c[b+12>>2]|0;h=c[b+16>>2]|0;i=c[b+20>>2]|0;j=c[b+24>>2]|0;k=c[b+28>>2]|0;l=c[b+32>>2]|0;m=c[b+36>>2]|0;b=d<<1;n=e<<1;o=f<<1;p=g<<1;q=h<<1;r=i<<1;s=j<<1;t=k<<1;u=i*38|0;v=j*19|0;w=k*38|0;x=l*19|0;y=m*38|0;A=((d|0)<0)<<31>>31;B=rT(d|0,A|0,d|0,A|0)|0;A=z;d=((b|0)<0)<<31>>31;C=((e|0)<0)<<31>>31;D=rT(b|0,d|0,e|0,C|0)|0;E=z;F=((f|0)<0)<<31>>31;G=rT(f|0,F|0,b|0,d|0)|0;H=z;I=((g|0)<0)<<31>>31;J=rT(g|0,I|0,b|0,d|0)|0;K=z;L=((h|0)<0)<<31>>31;M=rT(h|0,L|0,b|0,d|0)|0;N=z;O=((i|0)<0)<<31>>31;P=rT(i|0,O|0,b|0,d|0)|0;Q=z;R=((j|0)<0)<<31>>31;S=rT(j|0,R|0,b|0,d|0)|0;T=z;U=((k|0)<0)<<31>>31;V=rT(k|0,U|0,b|0,d|0)|0;W=z;X=((l|0)<0)<<31>>31;Y=rT(l|0,X|0,b|0,d|0)|0;Z=z;_=((m|0)<0)<<31>>31;$=rT(m|0,_|0,b|0,d|0)|0;d=z;b=((n|0)<0)<<31>>31;aa=rT(n|0,b|0,e|0,C|0)|0;C=z;e=rT(n|0,b|0,f|0,F|0)|0;ba=z;ca=((p|0)<0)<<31>>31;da=rT(p|0,ca|0,n|0,b|0)|0;ea=z;fa=rT(h|0,L|0,n|0,b|0)|0;ga=z;ha=((r|0)<0)<<31>>31;ia=rT(r|0,ha|0,n|0,b|0)|0;ja=z;ka=rT(j|0,R|0,n|0,b|0)|0;la=z;ma=((t|0)<0)<<31>>31;na=rT(t|0,ma|0,n|0,b|0)|0;oa=z;pa=rT(l|0,X|0,n|0,b|0)|0;qa=z;ra=((y|0)<0)<<31>>31;sa=rT(y|0,ra|0,n|0,b|0)|0;b=z;n=rT(f|0,F|0,f|0,F|0)|0;ta=z;ua=((o|0)<0)<<31>>31;va=rT(o|0,ua|0,g|0,I|0)|0;wa=z;xa=rT(h|0,L|0,o|0,ua|0)|0;ya=z;za=rT(i|0,O|0,o|0,ua|0)|0;Aa=z;Ba=rT(j|0,R|0,o|0,ua|0)|0;Ca=z;Da=rT(k|0,U|0,o|0,ua|0)|0;Ea=z;Fa=((x|0)<0)<<31>>31;Ga=rT(x|0,Fa|0,o|0,ua|0)|0;ua=z;o=rT(y|0,ra|0,f|0,F|0)|0;F=z;f=rT(p|0,ca|0,g|0,I|0)|0;I=z;g=rT(p|0,ca|0,h|0,L|0)|0;Ha=z;Ia=rT(r|0,ha|0,p|0,ca|0)|0;Ja=z;Ka=rT(j|0,R|0,p|0,ca|0)|0;La=z;Ma=((w|0)<0)<<31>>31;Na=rT(w|0,Ma|0,p|0,ca|0)|0;Oa=z;Pa=rT(x|0,Fa|0,p|0,ca|0)|0;Qa=z;Ra=rT(y|0,ra|0,p|0,ca|0)|0;ca=z;p=rT(h|0,L|0,h|0,L|0)|0;Sa=z;Ta=((q|0)<0)<<31>>31;Ua=rT(q|0,Ta|0,i|0,O|0)|0;Va=z;Wa=((v|0)<0)<<31>>31;Xa=rT(v|0,Wa|0,q|0,Ta|0)|0;Ya=z;Za=rT(w|0,Ma|0,h|0,L|0)|0;_a=z;$a=rT(x|0,Fa|0,q|0,Ta|0)|0;Ta=z;q=rT(y|0,ra|0,h|0,L|0)|0;L=z;h=rT(u|0,((u|0)<0)<<31>>31|0,i|0,O|0)|0;O=z;i=rT(v|0,Wa|0,r|0,ha|0)|0;u=z;ab=rT(w|0,Ma|0,r|0,ha|0)|0;bb=z;cb=rT(x|0,Fa|0,r|0,ha|0)|0;db=z;eb=rT(y|0,ra|0,r|0,ha|0)|0;ha=z;r=rT(v|0,Wa|0,j|0,R|0)|0;Wa=z;v=rT(w|0,Ma|0,j|0,R|0)|0;fb=z;gb=rT(x|0,Fa|0,s|0,((s|0)<0)<<31>>31|0)|0;s=z;hb=rT(y|0,ra|0,j|0,R|0)|0;R=z;j=rT(w|0,Ma|0,k|0,U|0)|0;U=z;k=rT(x|0,Fa|0,t|0,ma|0)|0;Ma=z;w=rT(y|0,ra|0,t|0,ma|0)|0;ma=z;t=rT(x|0,Fa|0,l|0,X|0)|0;Fa=z;x=rT(y|0,ra|0,l|0,X|0)|0;X=z;l=rT(y|0,ra|0,m|0,_|0)|0;_=z;m=sT(h|0,O|0,B|0,A|0)|0;A=sT(m|0,z|0,Xa|0,Ya|0)|0;Ya=sT(A|0,z|0,Na|0,Oa|0)|0;Oa=sT(Ya|0,z|0,Ga|0,ua|0)|0;ua=sT(Oa|0,z|0,sa|0,b|0)|0;b=z;sa=sT(G|0,H|0,aa|0,C|0)|0;C=z;aa=sT(J|0,K|0,e|0,ba|0)|0;ba=z;e=sT(da|0,ea|0,n|0,ta|0)|0;ta=sT(e|0,z|0,M|0,N|0)|0;N=sT(ta|0,z|0,j|0,U|0)|0;U=sT(N|0,z|0,gb|0,s|0)|0;s=sT(U|0,z|0,eb|0,ha|0)|0;ha=z;eb=sT(ua|0,b|0,33554432,0)|0;U=yT(eb|0,z|0,26)|0;eb=z;gb=sT(i|0,u|0,D|0,E|0)|0;E=sT(gb|0,z|0,Za|0,_a|0)|0;_a=sT(E|0,z|0,Pa|0,Qa|0)|0;Qa=sT(_a|0,z|0,o|0,F|0)|0;F=sT(Qa|0,z|0,U|0,eb|0)|0;Qa=z;o=AT(U|0,eb|0,26)|0;eb=tT(ua|0,b|0,o|0,z|0)|0;o=z;b=sT(s|0,ha|0,33554432,0)|0;ua=yT(b|0,z|0,26)|0;b=z;U=sT(fa|0,ga|0,va|0,wa|0)|0;wa=sT(U|0,z|0,P|0,Q|0)|0;Q=sT(wa|0,z|0,k|0,Ma|0)|0;Ma=sT(Q|0,z|0,hb|0,R|0)|0;R=sT(Ma|0,z|0,ua|0,b|0)|0;Ma=z;hb=AT(ua|0,b|0,26)|0;b=tT(s|0,ha|0,hb|0,z|0)|0;hb=z;ha=sT(F|0,Qa|0,16777216,0)|0;s=yT(ha|0,z|0,25)|0;ha=z;ua=sT(sa|0,C|0,r|0,Wa|0)|0;Wa=sT(ua|0,z|0,ab|0,bb|0)|0;bb=sT(Wa|0,z|0,$a|0,Ta|0)|0;Ta=sT(bb|0,z|0,Ra|0,ca|0)|0;ca=sT(Ta|0,z|0,s|0,ha|0)|0;Ta=z;Ra=AT(s|0,ha|0,25)|0;ha=tT(F|0,Qa|0,Ra|0,z|0)|0;Ra=z;Qa=sT(R|0,Ma|0,16777216,0)|0;F=yT(Qa|0,z|0,25)|0;Qa=z;s=sT(f|0,I|0,xa|0,ya|0)|0;ya=sT(s|0,z|0,ia|0,ja|0)|0;ja=sT(ya|0,z|0,S|0,T|0)|0;T=sT(ja|0,z|0,t|0,Fa|0)|0;Fa=sT(T|0,z|0,w|0,ma|0)|0;ma=sT(Fa|0,z|0,F|0,Qa|0)|0;Fa=z;w=AT(F|0,Qa|0,25)|0;Qa=tT(R|0,Ma|0,w|0,z|0)|0;w=z;Ma=sT(ca|0,Ta|0,33554432,0)|0;R=yT(Ma|0,z|0,26)|0;Ma=z;F=sT(aa|0,ba|0,v|0,fb|0)|0;fb=sT(F|0,z|0,cb|0,db|0)|0;db=sT(fb|0,z|0,q|0,L|0)|0;L=sT(db|0,z|0,R|0,Ma|0)|0;db=z;q=AT(R|0,Ma|0,26)|0;Ma=tT(ca|0,Ta|0,q|0,z|0)|0;q=sT(ma|0,Fa|0,33554432,0)|0;Ta=yT(q|0,z|0,26)|0;q=z;ca=sT(za|0,Aa|0,g|0,Ha|0)|0;Ha=sT(ca|0,z|0,ka|0,la|0)|0;la=sT(Ha|0,z|0,V|0,W|0)|0;W=sT(la|0,z|0,x|0,X|0)|0;X=sT(W|0,z|0,Ta|0,q|0)|0;W=z;x=AT(Ta|0,q|0,26)|0;q=tT(ma|0,Fa|0,x|0,z|0)|0;x=sT(L|0,db|0,16777216,0)|0;Fa=yT(x|0,z|0,25)|0;x=z;ma=sT(Fa|0,x|0,b|0,hb|0)|0;hb=z;b=AT(Fa|0,x|0,25)|0;x=tT(L|0,db|0,b|0,z|0)|0;b=sT(X|0,W|0,16777216,0)|0;db=yT(b|0,z|0,25)|0;b=z;L=sT(Ba|0,Ca|0,p|0,Sa|0)|0;Sa=sT(L|0,z|0,Ia|0,Ja|0)|0;Ja=sT(Sa|0,z|0,na|0,oa|0)|0;oa=sT(Ja|0,z|0,Y|0,Z|0)|0;Z=sT(oa|0,z|0,l|0,_|0)|0;_=sT(Z|0,z|0,db|0,b|0)|0;Z=z;l=AT(db|0,b|0,25)|0;b=tT(X|0,W|0,l|0,z|0)|0;l=sT(ma|0,hb|0,33554432,0)|0;W=yT(l|0,z|0,26)|0;l=z;X=sT(Qa|0,w|0,W|0,l|0)|0;w=AT(W|0,l|0,26)|0;l=tT(ma|0,hb|0,w|0,z|0)|0;w=sT(_|0,Z|0,33554432,0)|0;hb=yT(w|0,z|0,26)|0;w=z;ma=sT(Ka|0,La|0,Ua|0,Va|0)|0;Va=sT(ma|0,z|0,Da|0,Ea|0)|0;Ea=sT(Va|0,z|0,pa|0,qa|0)|0;qa=sT(Ea|0,z|0,$|0,d|0)|0;d=sT(qa|0,z|0,hb|0,w|0)|0;qa=z;$=AT(hb|0,w|0,26)|0;w=tT(_|0,Z|0,$|0,z|0)|0;$=sT(d|0,qa|0,16777216,0)|0;Z=yT($|0,z|0,25)|0;$=z;_=rT(Z|0,$|0,19,0)|0;hb=sT(_|0,z|0,eb|0,o|0)|0;o=z;eb=AT(Z|0,$|0,25)|0;$=tT(d|0,qa|0,eb|0,z|0)|0;eb=sT(hb|0,o|0,33554432,0)|0;qa=yT(eb|0,z|0,26)|0;eb=z;d=sT(ha|0,Ra|0,qa|0,eb|0)|0;Ra=AT(qa|0,eb|0,26)|0;eb=tT(hb|0,o|0,Ra|0,z|0)|0;c[a>>2]=eb;c[a+4>>2]=d;c[a+8>>2]=Ma;c[a+12>>2]=x;c[a+16>>2]=l;c[a+20>>2]=X;c[a+24>>2]=q;c[a+28>>2]=b;c[a+32>>2]=w;c[a+36>>2]=$;return}function RD(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=(c[b+4>>2]|0)-(c[d+4>>2]|0)|0;f=(c[b+8>>2]|0)-(c[d+8>>2]|0)|0;g=(c[b+12>>2]|0)-(c[d+12>>2]|0)|0;h=(c[b+16>>2]|0)-(c[d+16>>2]|0)|0;i=(c[b+20>>2]|0)-(c[d+20>>2]|0)|0;j=(c[b+24>>2]|0)-(c[d+24>>2]|0)|0;k=(c[b+28>>2]|0)-(c[d+28>>2]|0)|0;l=(c[b+32>>2]|0)-(c[d+32>>2]|0)|0;m=(c[b+36>>2]|0)-(c[d+36>>2]|0)|0;c[a>>2]=(c[b>>2]|0)-(c[d>>2]|0);c[a+4>>2]=e;c[a+8>>2]=f;c[a+12>>2]=g;c[a+16>>2]=h;c[a+20>>2]=i;c[a+24>>2]=j;c[a+28>>2]=k;c[a+32>>2]=l;c[a+36>>2]=m;return}function SD(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=c[d>>2]|0;f=c[d+4>>2]|0;g=c[d+8>>2]|0;h=c[d+12>>2]|0;i=c[d+16>>2]|0;j=c[d+20>>2]|0;k=c[d+24>>2]|0;l=c[d+28>>2]|0;m=c[d+32>>2]|0;n=c[d+36>>2]|0;d=(((((((((((((n*19|0)+16777216>>25)+e>>26)+f>>25)+g>>26)+h>>25)+i>>26)+j>>25)+k>>26)+l>>25)+m>>26)+n>>25)*19|0)+e|0;e=d>>26;o=e+f|0;f=d-(e<<26)|0;e=o>>25;d=e+g|0;g=o-(e<<25)|0;e=d>>26;o=e+h|0;h=d-(e<<26)|0;e=o>>25;d=e+i|0;i=o-(e<<25)|0;e=d>>26;o=e+j|0;j=d-(e<<26)|0;e=o>>25;d=e+k|0;k=o-(e<<25)|0;e=d>>26;o=e+l|0;l=d-(e<<26)|0;e=o>>25;d=e+m|0;m=o-(e<<25)|0;e=d>>26;o=e+n|0;n=d-(e<<26)|0;e=o&33554431;a[b>>0]=f;a[b+1>>0]=f>>>8;a[b+2>>0]=f>>>16;a[b+3>>0]=g<<2|f>>>24;a[b+4>>0]=g>>>6;a[b+5>>0]=g>>>14;a[b+6>>0]=h<<3|g>>>22;a[b+7>>0]=h>>>5;a[b+8>>0]=h>>>13;a[b+9>>0]=i<<5|h>>>21;a[b+10>>0]=i>>>3;a[b+11>>0]=i>>>11;a[b+12>>0]=j<<6|i>>>19;a[b+13>>0]=j>>>2;a[b+14>>0]=j>>>10;a[b+15>>0]=j>>>18;a[b+16>>0]=k;a[b+17>>0]=k>>>8;a[b+18>>0]=k>>>16;a[b+19>>0]=l<<1|k>>>24;a[b+20>>0]=l>>>7;a[b+21>>0]=l>>>15;a[b+22>>0]=m<<3|l>>>23;a[b+23>>0]=m>>>5;a[b+24>>0]=m>>>13;a[b+25>>0]=n<<4|m>>>21;a[b+26>>0]=n>>>4;a[b+27>>0]=n>>>12;a[b+28>>0]=n>>>20|e<<6;a[b+29>>0]=o>>>2;a[b+30>>0]=o>>>10;a[b+31>>0]=e>>>18;return}function TD(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0;f=l;l=l+2272|0;g=f+2016|0;h=f+1760|0;i=f+480|0;j=f+320|0;k=f+160|0;m=f;UD(g,c);UD(h,e);bE(i,d);aE(j,d);ZD(m,j);vE(j,m,i);ZD(k,j);d=i+160|0;bE(d,k);vE(j,m,d);ZD(k,j);d=i+320|0;bE(d,k);vE(j,m,d);ZD(k,j);d=i+480|0;bE(d,k);vE(j,m,d);ZD(k,j);d=i+640|0;bE(d,k);vE(j,m,d);ZD(k,j);d=i+800|0;bE(d,k);vE(j,m,d);ZD(k,j);d=i+960|0;bE(d,k);vE(j,m,d);ZD(k,j);bE(i+1120|0,k);_D(b);d=255;while(1){if(a[g+d>>0]|0){n=d;break}if(a[h+d>>0]|0){n=d;break}m=d+-1|0;if((d|0)>0)d=m;else{n=m;break}}if((n|0)>-1)o=n;else{l=f;return}while(1){$D(j,b);n=a[g+o>>0]|0;if(n<<24>>24<=0){if(n<<24>>24<0){ZD(k,j);gE(j,k,i+((((n<<24>>24)/-2|0)<<24>>24)*160|0)|0)}}else{ZD(k,j);vE(j,k,i+(((n&255)>>>1&255)*160|0)|0)}n=a[h+o>>0]|0;if(n<<24>>24<=0){if(n<<24>>24<0){ZD(k,j);XD(j,k,18496+((((n<<24>>24)/-2|0)<<24>>24)*120|0)|0)}}else{ZD(k,j);WD(j,k,18496+(((n&255)>>>1&255)*120|0)|0)}YD(b,j);if((o|0)>0)o=o+-1|0;else break}l=f;return}function UD(b,c){b=b|0;c=c|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=0;do{a[b+e>>0]=(d[c+(e>>3)>>0]|0)>>>(e&7)&1;e=e+1|0}while((e|0)!=256);f=0;do{e=b+f|0;c=a[e>>0]|0;g=f;f=f+1|0;a:do if(c<<24>>24!=0&(g|0)<255){h=b+f|0;i=a[h>>0]|0;b:do if(i<<24>>24){j=c<<24>>24;k=i<<24>>24<<1;l=k+j|0;if((l|0)<16){a[e>>0]=l;a[h>>0]=0;break}l=j-k|0;if((l|0)<=-16)break a;a[e>>0]=l;l=f;while(1){m=b+l|0;if(!(a[m>>0]|0))break;a[m>>0]=0;if((l|0)<255)l=l+1|0;else break b}a[m>>0]=1}while(0);h=g+2|0;if((g|0)<254){i=b+h|0;l=a[i>>0]|0;c:do if(l<<24>>24){k=a[e>>0]|0;j=l<<24>>24<<2;n=j+k|0;if((n|0)<16){a[e>>0]=n;a[i>>0]=0;break}n=k-j|0;if((n|0)<=-16)break a;a[e>>0]=n;n=h;while(1){o=b+n|0;if(!(a[o>>0]|0))break;a[o>>0]=0;if((n|0)<255)n=n+1|0;else break c}a[o>>0]=1}while(0);h=g+3|0;if((g|0)<253){i=b+h|0;l=a[i>>0]|0;d:do if(l<<24>>24){n=a[e>>0]|0;j=l<<24>>24<<3;k=j+n|0;if((k|0)<16){a[e>>0]=k;a[i>>0]=0;break}k=n-j|0;if((k|0)<=-16)break a;a[e>>0]=k;k=h;while(1){p=b+k|0;if(!(a[p>>0]|0))break;a[p>>0]=0;if((k|0)<255)k=k+1|0;else break d}a[p>>0]=1}while(0);h=g+4|0;if((g|0)<252){i=b+h|0;l=a[i>>0]|0;e:do if(l<<24>>24){k=a[e>>0]|0;j=l<<24>>24<<4;n=j+k|0;if((n|0)<16){a[e>>0]=n;a[i>>0]=0;break}n=k-j|0;if((n|0)<=-16)break a;a[e>>0]=n;n=h;while(1){q=b+n|0;if(!(a[q>>0]|0))break;a[q>>0]=0;if((n|0)<255)n=n+1|0;else break e}a[q>>0]=1}while(0);h=g+5|0;if((g|0)<251){i=b+h|0;l=a[i>>0]|0;f:do if(l<<24>>24){n=a[e>>0]|0;j=l<<24>>24<<5;k=j+n|0;if((k|0)<16){a[e>>0]=k;a[i>>0]=0;break}k=n-j|0;if((k|0)<=-16)break a;a[e>>0]=k;k=h;while(1){r=b+k|0;if(!(a[r>>0]|0))break;a[r>>0]=0;if((k|0)<255)k=k+1|0;else break f}a[r>>0]=1}while(0);h=g+6|0;if((g|0)<250?(i=b+h|0,l=a[i>>0]|0,l<<24>>24):0){k=a[e>>0]|0;j=l<<24>>24<<6;l=j+k|0;if((l|0)<16){a[e>>0]=l;a[i>>0]=0;break}i=k-j|0;if((i|0)>-16){a[e>>0]=i;i=h;while(1){s=b+i|0;if(!(a[s>>0]|0))break;a[s>>0]=0;if((i|0)<255)i=i+1|0;else break a}a[s>>0]=1}}}}}}}while(0)}while((f|0)!=256);return}function VD(a,b){a=a|0;b=b|0;var c=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;c=l;l=l+208|0;e=c+160|0;f=c+120|0;g=c+80|0;h=c+40|0;i=c;j=a+40|0;LD(j,b);k=a+80|0;HD(k);QD(e,j);OD(f,e,19456);RD(e,e,k);ID(f,f,k);QD(g,f);OD(g,g,f);QD(a,g);OD(a,a,f);OD(a,a,e);tE(a,a);OD(a,a,g);OD(a,a,e);QD(h,a);OD(h,h,f);RD(i,h,e);do if(ND(i)|0){ID(i,h,e);if(!(ND(i)|0)){OD(a,a,19496);break}else{m=-1;l=c;return m|0}}while(0);i=rE(a)|0;if((i|0)==((d[b+31>>0]|0)>>>7|0))sE(a,a);OD(a+120|0,a,j);m=0;l=c;return m|0}function WD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;d=l;l=l+48|0;e=d;f=b+40|0;ID(a,f,b);g=a+40|0;RD(g,f,b);f=a+80|0;OD(f,a,c);OD(g,g,c+40|0);h=a+120|0;OD(h,c+80|0,b+120|0);c=b+80|0;ID(e,c,c);RD(a,f,g);ID(g,f,g);ID(f,e,h);RD(h,e,h);l=d;return}function XD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;d=l;l=l+48|0;e=d;f=b+40|0;ID(a,f,b);g=a+40|0;RD(g,f,b);f=a+80|0;OD(f,a,c+40|0);OD(g,g,c);h=a+120|0;OD(h,c+80|0,b+120|0);c=b+80|0;ID(e,c,c);RD(a,f,g);ID(g,f,g);RD(f,e,h);ID(h,e,h);l=d;return}function YD(a,b){a=a|0;b=b|0;var c=0,d=0;c=b+120|0;OD(a,b,c);d=b+80|0;OD(a+40|0,b+40|0,d);OD(a+80|0,d,c);return}function ZD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=b+120|0;OD(a,b,c);d=b+40|0;e=b+80|0;OD(a+40|0,d,e);OD(a+80|0,e,c);OD(a+120|0,b,d);return}function _D(a){a=a|0;GD(a);HD(a+40|0);HD(a+80|0);return}function $D(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;c=l;l=l+48|0;d=c;QD(a,b);e=a+80|0;f=b+40|0;QD(e,f);g=a+120|0;uE(g,b+80|0);h=a+40|0;ID(h,b,f);QD(d,h);ID(h,e,a);RD(e,e,a);RD(a,d,h);RD(g,g,e);l=c;return}function aE(a,b){a=a|0;b=b|0;var c=0,d=0;c=l;l=l+128|0;d=c;cE(d,b);$D(a,d);l=c;return}function bE(a,b){a=a|0;b=b|0;var c=0;c=b+40|0;ID(a,c,b);RD(a+40|0,c,b);JD(a+80|0,b+80|0);OD(a+120|0,b+120|0,19536);return}function cE(a,b){a=a|0;b=b|0;JD(a,b);JD(a+40|0,b+40|0);JD(a+80|0,b+80|0);return}function dE(b,c){b=b|0;c=c|0;var e=0,f=0,g=0,h=0;e=l;l=l+128|0;f=e+80|0;g=e+40|0;h=e;MD(f,c+80|0);OD(g,c,f);OD(h,c+40|0,f);SD(b,h);h=(rE(g)|0)<<7;g=b+31|0;a[g>>0]=h^(d[g>>0]|0);l=e;return}function eE(b,c){b=b|0;c=c|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+464|0;f=e+400|0;g=e+240|0;h=e+120|0;i=e;j=a[c>>0]|0;a[f>>0]=j&15;a[f+1>>0]=(j&255)>>>4;j=a[c+1>>0]|0;a[f+2>>0]=j&15;a[f+3>>0]=(j&255)>>>4;j=a[c+2>>0]|0;a[f+4>>0]=j&15;a[f+5>>0]=(j&255)>>>4;j=a[c+3>>0]|0;a[f+6>>0]=j&15;a[f+7>>0]=(j&255)>>>4;j=a[c+4>>0]|0;a[f+8>>0]=j&15;a[f+9>>0]=(j&255)>>>4;j=a[c+5>>0]|0;a[f+10>>0]=j&15;a[f+11>>0]=(j&255)>>>4;j=a[c+6>>0]|0;a[f+12>>0]=j&15;a[f+13>>0]=(j&255)>>>4;j=a[c+7>>0]|0;a[f+14>>0]=j&15;a[f+15>>0]=(j&255)>>>4;j=a[c+8>>0]|0;a[f+16>>0]=j&15;a[f+17>>0]=(j&255)>>>4;j=a[c+9>>0]|0;a[f+18>>0]=j&15;a[f+19>>0]=(j&255)>>>4;j=a[c+10>>0]|0;a[f+20>>0]=j&15;a[f+21>>0]=(j&255)>>>4;j=a[c+11>>0]|0;a[f+22>>0]=j&15;a[f+23>>0]=(j&255)>>>4;j=a[c+12>>0]|0;a[f+24>>0]=j&15;a[f+25>>0]=(j&255)>>>4;j=a[c+13>>0]|0;a[f+26>>0]=j&15;a[f+27>>0]=(j&255)>>>4;j=a[c+14>>0]|0;a[f+28>>0]=j&15;a[f+29>>0]=(j&255)>>>4;j=a[c+15>>0]|0;a[f+30>>0]=j&15;a[f+31>>0]=(j&255)>>>4;j=a[c+16>>0]|0;a[f+32>>0]=j&15;a[f+33>>0]=(j&255)>>>4;j=a[c+17>>0]|0;a[f+34>>0]=j&15;a[f+35>>0]=(j&255)>>>4;j=a[c+18>>0]|0;a[f+36>>0]=j&15;a[f+37>>0]=(j&255)>>>4;j=a[c+19>>0]|0;a[f+38>>0]=j&15;a[f+39>>0]=(j&255)>>>4;j=a[c+20>>0]|0;a[f+40>>0]=j&15;a[f+41>>0]=(j&255)>>>4;j=a[c+21>>0]|0;a[f+42>>0]=j&15;a[f+43>>0]=(j&255)>>>4;j=a[c+22>>0]|0;a[f+44>>0]=j&15;a[f+45>>0]=(j&255)>>>4;j=a[c+23>>0]|0;a[f+46>>0]=j&15;a[f+47>>0]=(j&255)>>>4;j=a[c+24>>0]|0;a[f+48>>0]=j&15;a[f+49>>0]=(j&255)>>>4;j=a[c+25>>0]|0;a[f+50>>0]=j&15;a[f+51>>0]=(j&255)>>>4;j=a[c+26>>0]|0;a[f+52>>0]=j&15;a[f+53>>0]=(j&255)>>>4;j=a[c+27>>0]|0;a[f+54>>0]=j&15;a[f+55>>0]=(j&255)>>>4;j=a[c+28>>0]|0;a[f+56>>0]=j&15;a[f+57>>0]=(j&255)>>>4;j=a[c+29>>0]|0;a[f+58>>0]=j&15;a[f+59>>0]=(j&255)>>>4;j=a[c+30>>0]|0;a[f+60>>0]=j&15;a[f+61>>0]=(j&255)>>>4;j=a[c+31>>0]|0;a[f+62>>0]=j&15;c=f+63|0;a[c>>0]=(j&255)>>>4;j=0;k=0;do{m=f+k|0;n=j+(d[m>>0]|0)|0;j=(n<<24)+134217728>>28;a[m>>0]=n-(j<<4);k=k+1|0}while((k|0)!=63);a[c>>0]=j+(d[c>>0]|0);wE(b);c=1;while(1){fE(i,c>>>1,a[f+c>>0]|0);WD(g,b,i);ZD(b,g);if((c|0)<62)c=c+2|0;else break}aE(g,b);YD(h,g);$D(g,h);YD(h,g);$D(g,h);YD(h,g);$D(g,h);ZD(b,g);h=0;while(1){fE(i,h>>>1,a[f+h>>0]|0);WD(g,b,i);ZD(b,g);if((h|0)<62)h=h+2|0;else break}l=e;return}function fE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=l;l=l+128|0;e=d;f=c<<24>>24;g=(c&255)>>>7&255;xE(a);c=f-((0-g&f)<<1)&255;f=((c^1)+-1|0)>>>31;qE(a,19576+(b*960|0)|0,f);h=a+40|0;qE(h,19576+(b*960|0)+40|0,f);i=a+80|0;qE(i,19576+(b*960|0)+80|0,f);f=((c^2)+-1|0)>>>31;qE(a,19576+(b*960|0)+120|0,f);qE(h,19576+(b*960|0)+160|0,f);qE(i,19576+(b*960|0)+200|0,f);f=((c^3)+-1|0)>>>31;qE(a,19576+(b*960|0)+240|0,f);qE(h,19576+(b*960|0)+280|0,f);qE(i,19576+(b*960|0)+320|0,f);f=((c^4)+-1|0)>>>31;qE(a,19576+(b*960|0)+360|0,f);qE(h,19576+(b*960|0)+400|0,f);qE(i,19576+(b*960|0)+440|0,f);f=((c^5)+-1|0)>>>31;qE(a,19576+(b*960|0)+480|0,f);qE(h,19576+(b*960|0)+520|0,f);qE(i,19576+(b*960|0)+560|0,f);f=((c^6)+-1|0)>>>31;qE(a,19576+(b*960|0)+600|0,f);qE(h,19576+(b*960|0)+640|0,f);qE(i,19576+(b*960|0)+680|0,f);f=((c^7)+-1|0)>>>31;qE(a,19576+(b*960|0)+720|0,f);qE(h,19576+(b*960|0)+760|0,f);qE(i,19576+(b*960|0)+800|0,f);f=((c^8)+-1|0)>>>31;qE(a,19576+(b*960|0)+840|0,f);qE(h,19576+(b*960|0)+880|0,f);qE(i,19576+(b*960|0)+920|0,f);JD(e,h);f=e+40|0;JD(f,a);b=e+80|0;sE(b,i);qE(a,e,g);qE(h,f,g);qE(i,b,g);l=d;return}function gE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;d=l;l=l+48|0;e=d;f=b+40|0;ID(a,f,b);g=a+40|0;RD(g,f,b);f=a+80|0;OD(f,a,c+40|0);OD(g,g,c);h=a+120|0;OD(h,c+120|0,b+120|0);OD(a,b+80|0,c+80|0);ID(e,a,a);RD(a,f,g);ID(g,f,g);RD(f,e,h);ID(h,e,h);l=d;return}function hE(b,c){b=b|0;c=c|0;var e=0,f=0,g=0,h=0;e=l;l=l+128|0;f=e+80|0;g=e+40|0;h=e;MD(f,c+80|0);OD(g,c,f);OD(h,c+40|0,f);SD(b,h);h=(rE(g)|0)<<7;g=b+31|0;a[g>>0]=h^(d[g>>0]|0);l=e;return}function iE(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0;g=a[c+2>>0]|0;h=d[c>>0]|0;i=AT(d[c+1>>0]|0|0,0,8)|0;j=z;k=g&255;g=AT(k|0,0,16)|0;l=i|h|g&2031616;g=AT(d[c+3>>0]|0|0,0,8)|0;h=z;i=AT(d[c+4>>0]|0|0,0,16)|0;m=h|z;h=d[c+5>>0]|0;n=AT(h|0,0,24)|0;o=zT(g|k|i|n|0,m|z|0,5)|0;m=o&2097151;o=a[c+7>>0]|0;n=AT(d[c+6>>0]|0|0,0,8)|0;i=z;k=o&255;o=AT(k|0,0,16)|0;g=zT(n|h|o|0,i|z|0,2)|0;i=g&2097151;g=AT(d[c+8>>0]|0|0,0,8)|0;o=z;h=AT(d[c+9>>0]|0|0,0,16)|0;n=o|z;o=d[c+10>>0]|0;p=AT(o|0,0,24)|0;q=zT(g|k|h|p|0,n|z|0,7)|0;n=q&2097151;q=AT(d[c+11>>0]|0|0,0,8)|0;p=z;h=AT(d[c+12>>0]|0|0,0,16)|0;k=p|z;p=d[c+13>>0]|0;g=AT(p|0,0,24)|0;r=zT(q|o|h|g|0,k|z|0,4)|0;k=r&2097151;r=a[c+15>>0]|0;g=AT(d[c+14>>0]|0|0,0,8)|0;h=z;o=r&255;r=AT(o|0,0,16)|0;q=zT(g|p|r|0,h|z|0,1)|0;h=q&2097151;q=AT(d[c+16>>0]|0|0,0,8)|0;r=z;p=AT(d[c+17>>0]|0|0,0,16)|0;g=r|z;r=d[c+18>>0]|0;s=AT(r|0,0,24)|0;t=zT(q|o|p|s|0,g|z|0,6)|0;g=t&2097151;t=a[c+20>>0]|0;s=AT(d[c+19>>0]|0|0,0,8)|0;p=z;o=AT(t&255|0,0,16)|0;t=zT(s|r|o|0,p|z|0,3)|0;p=z;o=a[c+23>>0]|0;r=d[c+21>>0]|0;s=AT(d[c+22>>0]|0|0,0,8)|0;q=z;u=o&255;o=AT(u|0,0,16)|0;v=s|r|o&2031616;o=AT(d[c+24>>0]|0|0,0,8)|0;r=z;s=AT(d[c+25>>0]|0|0,0,16)|0;w=r|z;r=d[c+26>>0]|0;x=AT(r|0,0,24)|0;y=zT(o|u|s|x|0,w|z|0,5)|0;w=y&2097151;y=a[c+28>>0]|0;x=AT(d[c+27>>0]|0|0,0,8)|0;s=z;u=y&255;y=AT(u|0,0,16)|0;o=zT(x|r|y|0,s|z|0,2)|0;s=o&2097151;o=AT(d[c+29>>0]|0|0,0,8)|0;y=z;r=AT(d[c+30>>0]|0|0,0,16)|0;x=y|z;y=AT(d[c+31>>0]|0|0,0,24)|0;c=zT(o|u|r|y|0,x|z|0,7)|0;x=z;y=a[e+2>>0]|0;r=d[e>>0]|0;u=AT(d[e+1>>0]|0|0,0,8)|0;o=z;A=y&255;y=AT(A|0,0,16)|0;B=u|r|y&2031616;y=AT(d[e+3>>0]|0|0,0,8)|0;r=z;u=AT(d[e+4>>0]|0|0,0,16)|0;C=r|z;r=d[e+5>>0]|0;D=AT(r|0,0,24)|0;E=zT(y|A|u|D|0,C|z|0,5)|0;C=E&2097151;E=a[e+7>>0]|0;D=AT(d[e+6>>0]|0|0,0,8)|0;u=z;A=E&255;E=AT(A|0,0,16)|0;y=zT(D|r|E|0,u|z|0,2)|0;u=y&2097151;y=AT(d[e+8>>0]|0|0,0,8)|0;E=z;r=AT(d[e+9>>0]|0|0,0,16)|0;D=E|z;E=d[e+10>>0]|0;F=AT(E|0,0,24)|0;G=zT(y|A|r|F|0,D|z|0,7)|0;D=G&2097151;G=AT(d[e+11>>0]|0|0,0,8)|0;F=z;r=AT(d[e+12>>0]|0|0,0,16)|0;A=F|z;F=d[e+13>>0]|0;y=AT(F|0,0,24)|0;H=zT(G|E|r|y|0,A|z|0,4)|0;A=H&2097151;H=a[e+15>>0]|0;y=AT(d[e+14>>0]|0|0,0,8)|0;r=z;E=H&255;H=AT(E|0,0,16)|0;G=zT(y|F|H|0,r|z|0,1)|0;r=G&2097151;G=AT(d[e+16>>0]|0|0,0,8)|0;H=z;F=AT(d[e+17>>0]|0|0,0,16)|0;y=H|z;H=d[e+18>>0]|0;I=AT(H|0,0,24)|0;J=zT(G|E|F|I|0,y|z|0,6)|0;y=J&2097151;J=a[e+20>>0]|0;I=AT(d[e+19>>0]|0|0,0,8)|0;F=z;E=AT(J&255|0,0,16)|0;J=zT(I|H|E|0,F|z|0,3)|0;F=z;E=a[e+23>>0]|0;H=d[e+21>>0]|0;I=AT(d[e+22>>0]|0|0,0,8)|0;G=z;K=E&255;E=AT(K|0,0,16)|0;L=I|H|E&2031616;E=AT(d[e+24>>0]|0|0,0,8)|0;H=z;I=AT(d[e+25>>0]|0|0,0,16)|0;M=H|z;H=d[e+26>>0]|0;N=AT(H|0,0,24)|0;O=zT(E|K|I|N|0,M|z|0,5)|0;M=O&2097151;O=a[e+28>>0]|0;N=AT(d[e+27>>0]|0|0,0,8)|0;I=z;K=O&255;O=AT(K|0,0,16)|0;E=zT(N|H|O|0,I|z|0,2)|0;I=E&2097151;E=AT(d[e+29>>0]|0|0,0,8)|0;O=z;H=AT(d[e+30>>0]|0|0,0,16)|0;N=O|z;O=AT(d[e+31>>0]|0|0,0,24)|0;e=zT(E|K|H|O|0,N|z|0,7)|0;N=z;O=a[f+2>>0]|0;H=d[f>>0]|0;K=AT(d[f+1>>0]|0|0,0,8)|0;E=z;P=O&255;O=AT(P|0,0,16)|0;Q=AT(d[f+3>>0]|0|0,0,8)|0;R=z;S=AT(d[f+4>>0]|0|0,0,16)|0;T=R|z;R=d[f+5>>0]|0;U=AT(R|0,0,24)|0;V=zT(Q|P|S|U|0,T|z|0,5)|0;T=a[f+7>>0]|0;U=AT(d[f+6>>0]|0|0,0,8)|0;S=z;P=T&255;T=AT(P|0,0,16)|0;Q=zT(U|R|T|0,S|z|0,2)|0;S=AT(d[f+8>>0]|0|0,0,8)|0;T=z;R=AT(d[f+9>>0]|0|0,0,16)|0;U=T|z;T=d[f+10>>0]|0;W=AT(T|0,0,24)|0;X=zT(S|P|R|W|0,U|z|0,7)|0;U=AT(d[f+11>>0]|0|0,0,8)|0;W=z;R=AT(d[f+12>>0]|0|0,0,16)|0;P=W|z;W=d[f+13>>0]|0;S=AT(W|0,0,24)|0;Y=zT(U|T|R|S|0,P|z|0,4)|0;P=a[f+15>>0]|0;S=AT(d[f+14>>0]|0|0,0,8)|0;R=z;T=P&255;P=AT(T|0,0,16)|0;U=zT(S|W|P|0,R|z|0,1)|0;R=AT(d[f+16>>0]|0|0,0,8)|0;P=z;W=AT(d[f+17>>0]|0|0,0,16)|0;S=P|z;P=d[f+18>>0]|0;Z=AT(P|0,0,24)|0;_=zT(R|T|W|Z|0,S|z|0,6)|0;S=a[f+20>>0]|0;Z=AT(d[f+19>>0]|0|0,0,8)|0;W=z;T=AT(S&255|0,0,16)|0;S=zT(Z|P|T|0,W|z|0,3)|0;W=z;T=a[f+23>>0]|0;P=d[f+21>>0]|0;Z=AT(d[f+22>>0]|0|0,0,8)|0;R=z;$=T&255;T=AT($|0,0,16)|0;aa=AT(d[f+24>>0]|0|0,0,8)|0;ba=z;ca=AT(d[f+25>>0]|0|0,0,16)|0;da=ba|z;ba=d[f+26>>0]|0;ea=AT(ba|0,0,24)|0;fa=zT(aa|$|ca|ea|0,da|z|0,5)|0;da=a[f+28>>0]|0;ea=AT(d[f+27>>0]|0|0,0,8)|0;ca=z;$=da&255;da=AT($|0,0,16)|0;aa=zT(ea|ba|da|0,ca|z|0,2)|0;ca=AT(d[f+29>>0]|0|0,0,8)|0;da=z;ba=AT(d[f+30>>0]|0|0,0,16)|0;ea=da|z;da=AT(d[f+31>>0]|0|0,0,24)|0;f=zT(ca|$|ba|da|0,ea|z|0,7)|0;ea=z;da=rT(B|0,o|0,l|0,j|0)|0;ba=sT(K|H|O&2031616|0,E|0,da|0,z|0)|0;da=z;E=rT(C|0,0,l|0,j|0)|0;O=z;H=rT(B|0,o|0,m|0,0)|0;K=z;$=rT(u|0,0,l|0,j|0)|0;ca=z;ga=rT(C|0,0,m|0,0)|0;ha=z;ia=rT(B|0,o|0,i|0,0)|0;ja=sT(ga|0,ha|0,ia|0,z|0)|0;ia=sT(ja|0,z|0,$|0,ca|0)|0;ca=sT(ia|0,z|0,Q&2097151|0,0)|0;Q=z;ia=rT(D|0,0,l|0,j|0)|0;$=z;ja=rT(u|0,0,m|0,0)|0;ha=z;ga=rT(C|0,0,i|0,0)|0;ka=z;la=rT(B|0,o|0,n|0,0)|0;ma=z;na=rT(A|0,0,l|0,j|0)|0;oa=z;pa=rT(D|0,0,m|0,0)|0;qa=z;ra=rT(u|0,0,i|0,0)|0;sa=z;ta=rT(C|0,0,n|0,0)|0;ua=z;va=rT(B|0,o|0,k|0,0)|0;wa=sT(ta|0,ua|0,va|0,z|0)|0;va=sT(wa|0,z|0,ra|0,sa|0)|0;sa=sT(va|0,z|0,pa|0,qa|0)|0;qa=sT(sa|0,z|0,na|0,oa|0)|0;oa=sT(qa|0,z|0,Y&2097151|0,0)|0;Y=z;qa=rT(r|0,0,l|0,j|0)|0;na=z;sa=rT(A|0,0,m|0,0)|0;pa=z;va=rT(D|0,0,i|0,0)|0;ra=z;wa=rT(u|0,0,n|0,0)|0;ua=z;ta=rT(C|0,0,k|0,0)|0;xa=z;ya=rT(B|0,o|0,h|0,0)|0;za=z;Aa=rT(y|0,0,l|0,j|0)|0;Ba=z;Ca=rT(r|0,0,m|0,0)|0;Da=z;Ea=rT(A|0,0,i|0,0)|0;Fa=z;Ga=rT(D|0,0,n|0,0)|0;Ha=z;Ia=rT(u|0,0,k|0,0)|0;Ja=z;Ka=rT(C|0,0,h|0,0)|0;La=z;Ma=rT(B|0,o|0,g|0,0)|0;Na=sT(Ka|0,La|0,Ma|0,z|0)|0;Ma=sT(Na|0,z|0,Ia|0,Ja|0)|0;Ja=sT(Ma|0,z|0,Ga|0,Ha|0)|0;Ha=sT(Ja|0,z|0,Ea|0,Fa|0)|0;Fa=sT(Ha|0,z|0,Ca|0,Da|0)|0;Da=sT(Fa|0,z|0,Aa|0,Ba|0)|0;Ba=sT(Da|0,z|0,_&2097151|0,0)|0;_=z;Da=rT(J|0,F|0,l|0,j|0)|0;Aa=z;Fa=rT(y|0,0,m|0,0)|0;Ca=z;Ha=rT(r|0,0,i|0,0)|0;Ea=z;Ja=rT(A|0,0,n|0,0)|0;Ga=z;Ma=rT(D|0,0,k|0,0)|0;Ia=z;Na=rT(u|0,0,h|0,0)|0;La=z;Ka=rT(C|0,0,g|0,0)|0;Oa=z;Pa=rT(B|0,o|0,t|0,p|0)|0;Qa=z;Ra=rT(L|0,G|0,l|0,j|0)|0;Sa=z;Ta=rT(J|0,F|0,m|0,0)|0;Ua=z;Va=rT(y|0,0,i|0,0)|0;Wa=z;Xa=rT(r|0,0,n|0,0)|0;Ya=z;Za=rT(A|0,0,k|0,0)|0;_a=z;$a=rT(D|0,0,h|0,0)|0;ab=z;bb=rT(u|0,0,g|0,0)|0;cb=z;db=rT(C|0,0,t|0,p|0)|0;eb=z;fb=rT(B|0,o|0,v|0,q|0)|0;gb=sT(db|0,eb|0,fb|0,z|0)|0;fb=sT(gb|0,z|0,bb|0,cb|0)|0;cb=sT(fb|0,z|0,$a|0,ab|0)|0;ab=sT(cb|0,z|0,Za|0,_a|0)|0;_a=sT(ab|0,z|0,Xa|0,Ya|0)|0;Ya=sT(_a|0,z|0,Va|0,Wa|0)|0;Wa=sT(Ya|0,z|0,Ta|0,Ua|0)|0;Ua=sT(Wa|0,z|0,Ra|0,Sa|0)|0;Sa=sT(Ua|0,z|0,Z|P|T&2031616|0,R|0)|0;R=z;T=rT(M|0,0,l|0,j|0)|0;P=z;Z=rT(L|0,G|0,m|0,0)|0;Ua=z;Ra=rT(J|0,F|0,i|0,0)|0;Wa=z;Ta=rT(y|0,0,n|0,0)|0;Ya=z;Va=rT(r|0,0,k|0,0)|0;_a=z;Xa=rT(A|0,0,h|0,0)|0;ab=z;Za=rT(D|0,0,g|0,0)|0;cb=z;$a=rT(u|0,0,t|0,p|0)|0;fb=z;bb=rT(C|0,0,v|0,q|0)|0;gb=z;eb=rT(B|0,o|0,w|0,0)|0;db=z;hb=rT(I|0,0,l|0,j|0)|0;ib=z;jb=rT(M|0,0,m|0,0)|0;kb=z;lb=rT(L|0,G|0,i|0,0)|0;mb=z;nb=rT(J|0,F|0,n|0,0)|0;ob=z;pb=rT(y|0,0,k|0,0)|0;qb=z;rb=rT(r|0,0,h|0,0)|0;sb=z;tb=rT(A|0,0,g|0,0)|0;ub=z;vb=rT(D|0,0,t|0,p|0)|0;wb=z;xb=rT(u|0,0,v|0,q|0)|0;yb=z;zb=rT(C|0,0,w|0,0)|0;Ab=z;Bb=rT(B|0,o|0,s|0,0)|0;Cb=sT(zb|0,Ab|0,Bb|0,z|0)|0;Bb=sT(Cb|0,z|0,xb|0,yb|0)|0;yb=sT(Bb|0,z|0,vb|0,wb|0)|0;wb=sT(yb|0,z|0,tb|0,ub|0)|0;ub=sT(wb|0,z|0,rb|0,sb|0)|0;sb=sT(ub|0,z|0,pb|0,qb|0)|0;qb=sT(sb|0,z|0,nb|0,ob|0)|0;ob=sT(qb|0,z|0,lb|0,mb|0)|0;mb=sT(ob|0,z|0,jb|0,kb|0)|0;kb=sT(mb|0,z|0,hb|0,ib|0)|0;ib=sT(kb|0,z|0,aa&2097151|0,0)|0;aa=z;kb=rT(e|0,N|0,l|0,j|0)|0;j=z;l=rT(I|0,0,m|0,0)|0;hb=z;mb=rT(M|0,0,i|0,0)|0;jb=z;ob=rT(L|0,G|0,n|0,0)|0;lb=z;qb=rT(J|0,F|0,k|0,0)|0;nb=z;sb=rT(y|0,0,h|0,0)|0;pb=z;ub=rT(r|0,0,g|0,0)|0;rb=z;wb=rT(A|0,0,t|0,p|0)|0;tb=z;yb=rT(D|0,0,v|0,q|0)|0;vb=z;Bb=rT(u|0,0,w|0,0)|0;xb=z;Cb=rT(C|0,0,s|0,0)|0;Ab=z;zb=rT(B|0,o|0,c|0,x|0)|0;o=z;B=rT(e|0,N|0,m|0,0)|0;m=z;Db=rT(I|0,0,i|0,0)|0;Eb=z;Fb=rT(M|0,0,n|0,0)|0;Gb=z;Hb=rT(L|0,G|0,k|0,0)|0;Ib=z;Jb=rT(J|0,F|0,h|0,0)|0;Kb=z;Lb=rT(y|0,0,g|0,0)|0;Mb=z;Nb=rT(r|0,0,t|0,p|0)|0;Ob=z;Pb=rT(A|0,0,v|0,q|0)|0;Qb=z;Rb=rT(D|0,0,w|0,0)|0;Sb=z;Tb=rT(u|0,0,s|0,0)|0;Ub=z;Vb=rT(C|0,0,c|0,x|0)|0;C=sT(Tb|0,Ub|0,Vb|0,z|0)|0;Vb=sT(C|0,z|0,Rb|0,Sb|0)|0;Sb=sT(Vb|0,z|0,Pb|0,Qb|0)|0;Qb=sT(Sb|0,z|0,Nb|0,Ob|0)|0;Ob=sT(Qb|0,z|0,Lb|0,Mb|0)|0;Mb=sT(Ob|0,z|0,Jb|0,Kb|0)|0;Kb=sT(Mb|0,z|0,Hb|0,Ib|0)|0;Ib=sT(Kb|0,z|0,Fb|0,Gb|0)|0;Gb=sT(Ib|0,z|0,Db|0,Eb|0)|0;Eb=sT(Gb|0,z|0,B|0,m|0)|0;m=z;B=rT(e|0,N|0,i|0,0)|0;i=z;Gb=rT(I|0,0,n|0,0)|0;Db=z;Ib=rT(M|0,0,k|0,0)|0;Fb=z;Kb=rT(L|0,G|0,h|0,0)|0;Hb=z;Mb=rT(J|0,F|0,g|0,0)|0;Jb=z;Ob=rT(y|0,0,t|0,p|0)|0;Lb=z;Qb=rT(r|0,0,v|0,q|0)|0;Nb=z;Sb=rT(A|0,0,w|0,0)|0;Pb=z;Vb=rT(D|0,0,s|0,0)|0;Rb=z;C=rT(u|0,0,c|0,x|0)|0;u=z;Ub=rT(e|0,N|0,n|0,0)|0;n=z;Tb=rT(I|0,0,k|0,0)|0;Wb=z;Xb=rT(M|0,0,h|0,0)|0;Yb=z;Zb=rT(L|0,G|0,g|0,0)|0;_b=z;$b=rT(J|0,F|0,t|0,p|0)|0;ac=z;bc=rT(y|0,0,v|0,q|0)|0;cc=z;dc=rT(r|0,0,w|0,0)|0;ec=z;fc=rT(A|0,0,s|0,0)|0;gc=z;hc=rT(D|0,0,c|0,x|0)|0;D=sT(fc|0,gc|0,hc|0,z|0)|0;hc=sT(D|0,z|0,dc|0,ec|0)|0;ec=sT(hc|0,z|0,bc|0,cc|0)|0;cc=sT(ec|0,z|0,$b|0,ac|0)|0;ac=sT(cc|0,z|0,Zb|0,_b|0)|0;_b=sT(ac|0,z|0,Xb|0,Yb|0)|0;Yb=sT(_b|0,z|0,Tb|0,Wb|0)|0;Wb=sT(Yb|0,z|0,Ub|0,n|0)|0;n=z;Ub=rT(e|0,N|0,k|0,0)|0;k=z;Yb=rT(I|0,0,h|0,0)|0;Tb=z;_b=rT(M|0,0,g|0,0)|0;Xb=z;ac=rT(L|0,G|0,t|0,p|0)|0;Zb=z;cc=rT(J|0,F|0,v|0,q|0)|0;$b=z;ec=rT(y|0,0,w|0,0)|0;bc=z;hc=rT(r|0,0,s|0,0)|0;dc=z;D=rT(A|0,0,c|0,x|0)|0;A=z;gc=rT(e|0,N|0,h|0,0)|0;h=z;fc=rT(I|0,0,g|0,0)|0;ic=z;jc=rT(M|0,0,t|0,p|0)|0;kc=z;lc=rT(L|0,G|0,v|0,q|0)|0;mc=z;nc=rT(J|0,F|0,w|0,0)|0;oc=z;pc=rT(y|0,0,s|0,0)|0;qc=z;rc=rT(r|0,0,c|0,x|0)|0;r=sT(pc|0,qc|0,rc|0,z|0)|0;rc=sT(r|0,z|0,nc|0,oc|0)|0;oc=sT(rc|0,z|0,lc|0,mc|0)|0;mc=sT(oc|0,z|0,jc|0,kc|0)|0;kc=sT(mc|0,z|0,fc|0,ic|0)|0;ic=sT(kc|0,z|0,gc|0,h|0)|0;h=z;gc=rT(e|0,N|0,g|0,0)|0;g=z;kc=rT(I|0,0,t|0,p|0)|0;fc=z;mc=rT(M|0,0,v|0,q|0)|0;jc=z;oc=rT(L|0,G|0,w|0,0)|0;lc=z;rc=rT(J|0,F|0,s|0,0)|0;nc=z;r=rT(y|0,0,c|0,x|0)|0;y=z;qc=rT(e|0,N|0,t|0,p|0)|0;p=z;t=rT(I|0,0,v|0,q|0)|0;pc=z;sc=rT(M|0,0,w|0,0)|0;tc=z;uc=rT(L|0,G|0,s|0,0)|0;vc=z;wc=rT(J|0,F|0,c|0,x|0)|0;F=sT(uc|0,vc|0,wc|0,z|0)|0;wc=sT(F|0,z|0,sc|0,tc|0)|0;tc=sT(wc|0,z|0,t|0,pc|0)|0;pc=sT(tc|0,z|0,qc|0,p|0)|0;p=z;qc=rT(e|0,N|0,v|0,q|0)|0;q=z;v=rT(I|0,0,w|0,0)|0;tc=z;t=rT(M|0,0,s|0,0)|0;wc=z;sc=rT(L|0,G|0,c|0,x|0)|0;G=z;L=rT(e|0,N|0,w|0,0)|0;w=z;F=rT(I|0,0,s|0,0)|0;vc=z;uc=rT(M|0,0,c|0,x|0)|0;M=sT(F|0,vc|0,uc|0,z|0)|0;uc=sT(M|0,z|0,L|0,w|0)|0;w=z;L=rT(e|0,N|0,s|0,0)|0;s=z;M=rT(I|0,0,c|0,x|0)|0;I=sT(L|0,s|0,M|0,z|0)|0;M=z;s=rT(e|0,N|0,c|0,x|0)|0;x=z;c=sT(ba|0,da|0,1048576,0)|0;N=z;e=zT(c|0,N|0,21)|0;L=z;vc=sT(E|0,O|0,H|0,K|0)|0;K=sT(vc|0,z|0,e|0,L|0)|0;L=sT(K|0,z|0,V&2097151|0,0)|0;V=z;K=tT(ba|0,da|0,c&-2097152|0,N&4095|0)|0;N=z;c=sT(ca|0,Q|0,1048576,0)|0;da=z;ba=zT(c|0,da|0,21)|0;e=z;vc=sT(ga|0,ka|0,la|0,ma|0)|0;ma=sT(vc|0,z|0,ja|0,ha|0)|0;ha=sT(ma|0,z|0,ia|0,$|0)|0;$=sT(ha|0,z|0,X&2097151|0,0)|0;X=sT($|0,z|0,ba|0,e|0)|0;e=z;ba=sT(oa|0,Y|0,1048576,0)|0;$=yT(ba|0,z|0,21)|0;ba=z;ha=sT(ta|0,xa|0,ya|0,za|0)|0;za=sT(ha|0,z|0,wa|0,ua|0)|0;ua=sT(za|0,z|0,va|0,ra|0)|0;ra=sT(ua|0,z|0,sa|0,pa|0)|0;pa=sT(ra|0,z|0,qa|0,na|0)|0;na=sT(pa|0,z|0,U&2097151|0,0)|0;U=sT(na|0,z|0,$|0,ba|0)|0;na=z;pa=AT($|0,ba|0,21)|0;ba=z;$=sT(Ba|0,_|0,1048576,0)|0;qa=yT($|0,z|0,21)|0;$=z;ra=sT(Ka|0,Oa|0,Pa|0,Qa|0)|0;Qa=sT(ra|0,z|0,Na|0,La|0)|0;La=sT(Qa|0,z|0,Ma|0,Ia|0)|0;Ia=sT(La|0,z|0,Ja|0,Ga|0)|0;Ga=sT(Ia|0,z|0,Ha|0,Ea|0)|0;Ea=sT(Ga|0,z|0,Fa|0,Ca|0)|0;Ca=sT(Ea|0,z|0,Da|0,Aa|0)|0;Aa=sT(Ca|0,z|0,S|0,W|0)|0;W=sT(Aa|0,z|0,qa|0,$|0)|0;Aa=z;S=AT(qa|0,$|0,21)|0;$=z;qa=sT(Sa|0,R|0,1048576,0)|0;Ca=yT(qa|0,z|0,21)|0;qa=z;Da=sT(bb|0,gb|0,eb|0,db|0)|0;db=sT(Da|0,z|0,$a|0,fb|0)|0;fb=sT(db|0,z|0,Za|0,cb|0)|0;cb=sT(fb|0,z|0,Xa|0,ab|0)|0;ab=sT(cb|0,z|0,Va|0,_a|0)|0;_a=sT(ab|0,z|0,Ta|0,Ya|0)|0;Ya=sT(_a|0,z|0,Ra|0,Wa|0)|0;Wa=sT(Ya|0,z|0,Z|0,Ua|0)|0;Ua=sT(Wa|0,z|0,T|0,P|0)|0;P=sT(Ua|0,z|0,fa&2097151|0,0)|0;fa=sT(P|0,z|0,Ca|0,qa|0)|0;P=z;Ua=AT(Ca|0,qa|0,21)|0;qa=z;Ca=sT(ib|0,aa|0,1048576,0)|0;T=yT(Ca|0,z|0,21)|0;Ca=z;Wa=sT(Cb|0,Ab|0,zb|0,o|0)|0;o=sT(Wa|0,z|0,Bb|0,xb|0)|0;xb=sT(o|0,z|0,yb|0,vb|0)|0;vb=sT(xb|0,z|0,wb|0,tb|0)|0;tb=sT(vb|0,z|0,ub|0,rb|0)|0;rb=sT(tb|0,z|0,sb|0,pb|0)|0;pb=sT(rb|0,z|0,qb|0,nb|0)|0;nb=sT(pb|0,z|0,ob|0,lb|0)|0;lb=sT(nb|0,z|0,mb|0,jb|0)|0;jb=sT(lb|0,z|0,l|0,hb|0)|0;hb=sT(jb|0,z|0,kb|0,j|0)|0;j=sT(hb|0,z|0,f|0,ea|0)|0;ea=sT(j|0,z|0,T|0,Ca|0)|0;j=z;f=AT(T|0,Ca|0,21)|0;Ca=z;T=sT(Eb|0,m|0,1048576,0)|0;hb=yT(T|0,z|0,21)|0;T=z;kb=sT(Vb|0,Rb|0,C|0,u|0)|0;u=sT(kb|0,z|0,Sb|0,Pb|0)|0;Pb=sT(u|0,z|0,Qb|0,Nb|0)|0;Nb=sT(Pb|0,z|0,Ob|0,Lb|0)|0;Lb=sT(Nb|0,z|0,Mb|0,Jb|0)|0;Jb=sT(Lb|0,z|0,Kb|0,Hb|0)|0;Hb=sT(Jb|0,z|0,Ib|0,Fb|0)|0;Fb=sT(Hb|0,z|0,Gb|0,Db|0)|0;Db=sT(Fb|0,z|0,B|0,i|0)|0;i=sT(Db|0,z|0,hb|0,T|0)|0;Db=z;B=AT(hb|0,T|0,21)|0;T=z;hb=sT(Wb|0,n|0,1048576,0)|0;Fb=yT(hb|0,z|0,21)|0;hb=z;Gb=sT(hc|0,dc|0,D|0,A|0)|0;A=sT(Gb|0,z|0,ec|0,bc|0)|0;bc=sT(A|0,z|0,cc|0,$b|0)|0;$b=sT(bc|0,z|0,ac|0,Zb|0)|0;Zb=sT($b|0,z|0,_b|0,Xb|0)|0;Xb=sT(Zb|0,z|0,Yb|0,Tb|0)|0;Tb=sT(Xb|0,z|0,Ub|0,k|0)|0;k=sT(Tb|0,z|0,Fb|0,hb|0)|0;Tb=z;Ub=AT(Fb|0,hb|0,21)|0;hb=z;Fb=sT(ic|0,h|0,1048576,0)|0;Xb=yT(Fb|0,z|0,21)|0;Fb=z;Yb=sT(rc|0,nc|0,r|0,y|0)|0;y=sT(Yb|0,z|0,oc|0,lc|0)|0;lc=sT(y|0,z|0,mc|0,jc|0)|0;jc=sT(lc|0,z|0,kc|0,fc|0)|0;fc=sT(jc|0,z|0,gc|0,g|0)|0;g=sT(fc|0,z|0,Xb|0,Fb|0)|0;fc=z;gc=AT(Xb|0,Fb|0,21)|0;Fb=z;Xb=sT(pc|0,p|0,1048576,0)|0;jc=yT(Xb|0,z|0,21)|0;Xb=z;kc=sT(t|0,wc|0,sc|0,G|0)|0;G=sT(kc|0,z|0,v|0,tc|0)|0;tc=sT(G|0,z|0,qc|0,q|0)|0;q=sT(tc|0,z|0,jc|0,Xb|0)|0;tc=z;qc=AT(jc|0,Xb|0,21)|0;Xb=tT(pc|0,p|0,qc|0,z|0)|0;qc=z;p=sT(uc|0,w|0,1048576,0)|0;pc=z;jc=zT(p|0,pc|0,21)|0;G=sT(I|0,M|0,jc|0,z|0)|0;jc=z;M=tT(uc|0,w|0,p&-2097152|0,pc&2147483647|0)|0;pc=z;p=sT(s|0,x|0,1048576,0)|0;w=z;uc=zT(p|0,w|0,21)|0;I=z;v=tT(s|0,x|0,p&-2097152|0,w&2147483647|0)|0;w=z;p=sT(L|0,V|0,1048576,0)|0;x=z;s=zT(p|0,x|0,21)|0;kc=z;sc=tT(L|0,V|0,p&-2097152|0,x|0)|0;x=z;p=sT(X|0,e|0,1048576,0)|0;V=yT(p|0,z|0,21)|0;p=z;L=AT(V|0,p|0,21)|0;wc=tT(X|0,e|0,L|0,z|0)|0;L=z;e=sT(U|0,na|0,1048576,0)|0;X=yT(e|0,z|0,21)|0;e=z;t=AT(X|0,e|0,21)|0;lc=z;mc=sT(W|0,Aa|0,1048576,0)|0;y=yT(mc|0,z|0,21)|0;mc=z;oc=AT(y|0,mc|0,21)|0;Yb=z;r=sT(fa|0,P|0,1048576,0)|0;nc=yT(r|0,z|0,21)|0;r=z;rc=AT(nc|0,r|0,21)|0;Zb=z;_b=sT(ea|0,j|0,1048576,0)|0;$b=yT(_b|0,z|0,21)|0;_b=z;ac=AT($b|0,_b|0,21)|0;bc=z;cc=sT(i|0,Db|0,1048576,0)|0;A=yT(cc|0,z|0,21)|0;cc=z;ec=AT(A|0,cc|0,21)|0;Gb=z;D=sT(k|0,Tb|0,1048576,0)|0;dc=yT(D|0,z|0,21)|0;D=z;hc=AT(dc|0,D|0,21)|0;Hb=z;Ib=sT(g|0,fc|0,1048576,0)|0;Jb=yT(Ib|0,z|0,21)|0;Ib=z;Kb=sT(Jb|0,Ib|0,Xb|0,qc|0)|0;qc=z;Xb=AT(Jb|0,Ib|0,21)|0;Ib=tT(g|0,fc|0,Xb|0,z|0)|0;Xb=z;fc=sT(q|0,tc|0,1048576,0)|0;g=yT(fc|0,z|0,21)|0;fc=z;Jb=sT(g|0,fc|0,M|0,pc|0)|0;pc=z;M=AT(g|0,fc|0,21)|0;fc=tT(q|0,tc|0,M|0,z|0)|0;M=z;tc=sT(G|0,jc|0,1048576,0)|0;q=z;g=zT(tc|0,q|0,21)|0;Lb=sT(g|0,z|0,v|0,w|0)|0;w=z;v=tT(G|0,jc|0,tc&-2097152|0,q&2147483647|0)|0;q=z;tc=rT(uc|0,I|0,666643,0)|0;jc=z;G=rT(uc|0,I|0,470296,0)|0;g=z;Mb=rT(uc|0,I|0,654183,0)|0;Nb=z;Ob=rT(uc|0,I|0,-997805,-1)|0;Pb=z;Qb=rT(uc|0,I|0,136657,0)|0;u=z;Sb=rT(uc|0,I|0,-683901,-1)|0;I=sT(ic|0,h|0,Sb|0,z|0)|0;Sb=tT(I|0,z|0,gc|0,Fb|0)|0;Fb=sT(Sb|0,z|0,dc|0,D|0)|0;D=z;dc=rT(Lb|0,w|0,666643,0)|0;Sb=z;gc=rT(Lb|0,w|0,470296,0)|0;I=z;h=rT(Lb|0,w|0,654183,0)|0;ic=z;uc=rT(Lb|0,w|0,-997805,-1)|0;kb=z;C=rT(Lb|0,w|0,136657,0)|0;Rb=z;Vb=rT(Lb|0,w|0,-683901,-1)|0;w=z;Lb=rT(v|0,q|0,666643,0)|0;jb=z;l=rT(v|0,q|0,470296,0)|0;lb=z;mb=rT(v|0,q|0,654183,0)|0;nb=z;ob=rT(v|0,q|0,-997805,-1)|0;pb=z;qb=rT(v|0,q|0,136657,0)|0;rb=z;sb=rT(v|0,q|0,-683901,-1)|0;q=z;v=sT(Wb|0,n|0,Ob|0,Pb|0)|0;Pb=sT(v|0,z|0,C|0,Rb|0)|0;Rb=sT(Pb|0,z|0,sb|0,q|0)|0;q=tT(Rb|0,z|0,Ub|0,hb|0)|0;hb=sT(q|0,z|0,A|0,cc|0)|0;cc=z;A=rT(Jb|0,pc|0,666643,0)|0;q=z;Ub=rT(Jb|0,pc|0,470296,0)|0;Rb=z;sb=rT(Jb|0,pc|0,654183,0)|0;Pb=z;C=rT(Jb|0,pc|0,-997805,-1)|0;v=z;Ob=rT(Jb|0,pc|0,136657,0)|0;n=z;Wb=rT(Jb|0,pc|0,-683901,-1)|0;pc=z;Jb=rT(fc|0,M|0,666643,0)|0;tb=z;ub=rT(fc|0,M|0,470296,0)|0;vb=z;wb=rT(fc|0,M|0,654183,0)|0;xb=z;yb=rT(fc|0,M|0,-997805,-1)|0;o=z;Bb=rT(fc|0,M|0,136657,0)|0;Wa=z;zb=rT(fc|0,M|0,-683901,-1)|0;M=z;fc=sT(h|0,ic|0,G|0,g|0)|0;g=sT(fc|0,z|0,ob|0,pb|0)|0;pb=sT(g|0,z|0,Eb|0,m|0)|0;m=sT(pb|0,z|0,Ob|0,n|0)|0;n=sT(m|0,z|0,zb|0,M|0)|0;M=tT(n|0,z|0,B|0,T|0)|0;T=sT(M|0,z|0,$b|0,_b|0)|0;_b=z;$b=rT(Kb|0,qc|0,666643,0)|0;M=sT(X|0,e|0,$b|0,z|0)|0;$b=sT(M|0,z|0,Ba|0,_|0)|0;_=tT($b|0,z|0,S|0,$|0)|0;$=z;S=rT(Kb|0,qc|0,470296,0)|0;$b=z;Ba=rT(Kb|0,qc|0,654183,0)|0;M=z;e=sT(ub|0,vb|0,A|0,q|0)|0;q=sT(e|0,z|0,Ba|0,M|0)|0;M=sT(q|0,z|0,y|0,mc|0)|0;mc=sT(M|0,z|0,Sa|0,R|0)|0;R=tT(mc|0,z|0,Ua|0,qa|0)|0;qa=z;Ua=rT(Kb|0,qc|0,-997805,-1)|0;mc=z;Sa=rT(Kb|0,qc|0,136657,0)|0;M=z;y=sT(l|0,lb|0,dc|0,Sb|0)|0;Sb=sT(y|0,z|0,sb|0,Pb|0)|0;Pb=sT(Sb|0,z|0,yb|0,o|0)|0;o=sT(Pb|0,z|0,Sa|0,M|0)|0;M=sT(o|0,z|0,nc|0,r|0)|0;r=sT(M|0,z|0,ib|0,aa|0)|0;aa=tT(r|0,z|0,f|0,Ca|0)|0;Ca=z;f=rT(Kb|0,qc|0,-683901,-1)|0;qc=z;Kb=sT(_|0,$|0,1048576,0)|0;r=yT(Kb|0,z|0,21)|0;Kb=z;ib=sT(S|0,$b|0,Jb|0,tb|0)|0;tb=sT(ib|0,z|0,W|0,Aa|0)|0;Aa=tT(tb|0,z|0,oc|0,Yb|0)|0;Yb=sT(Aa|0,z|0,r|0,Kb|0)|0;Aa=z;oc=AT(r|0,Kb|0,21)|0;Kb=z;r=sT(R|0,qa|0,1048576,0)|0;tb=yT(r|0,z|0,21)|0;r=z;W=sT(Ub|0,Rb|0,Lb|0,jb|0)|0;jb=sT(W|0,z|0,wb|0,xb|0)|0;xb=sT(jb|0,z|0,Ua|0,mc|0)|0;mc=sT(xb|0,z|0,fa|0,P|0)|0;P=tT(mc|0,z|0,rc|0,Zb|0)|0;Zb=sT(P|0,z|0,tb|0,r|0)|0;P=z;rc=AT(tb|0,r|0,21)|0;r=z;tb=sT(aa|0,Ca|0,1048576,0)|0;mc=yT(tb|0,z|0,21)|0;tb=z;fa=sT(gc|0,I|0,tc|0,jc|0)|0;jc=sT(fa|0,z|0,mb|0,nb|0)|0;nb=sT(jc|0,z|0,C|0,v|0)|0;v=sT(nb|0,z|0,Bb|0,Wa|0)|0;Wa=sT(v|0,z|0,f|0,qc|0)|0;qc=sT(Wa|0,z|0,ea|0,j|0)|0;j=tT(qc|0,z|0,ac|0,bc|0)|0;bc=sT(j|0,z|0,mc|0,tb|0)|0;j=z;ac=AT(mc|0,tb|0,21)|0;tb=z;mc=sT(T|0,_b|0,1048576,0)|0;qc=yT(mc|0,z|0,21)|0;mc=z;ea=sT(uc|0,kb|0,Mb|0,Nb|0)|0;Nb=sT(ea|0,z|0,qb|0,rb|0)|0;rb=sT(Nb|0,z|0,Wb|0,pc|0)|0;pc=sT(rb|0,z|0,i|0,Db|0)|0;Db=tT(pc|0,z|0,ec|0,Gb|0)|0;Gb=sT(Db|0,z|0,qc|0,mc|0)|0;Db=z;ec=AT(qc|0,mc|0,21)|0;mc=tT(T|0,_b|0,ec|0,z|0)|0;ec=z;_b=sT(hb|0,cc|0,1048576,0)|0;T=yT(_b|0,z|0,21)|0;_b=z;qc=sT(Vb|0,w|0,Qb|0,u|0)|0;u=sT(qc|0,z|0,k|0,Tb|0)|0;Tb=tT(u|0,z|0,hc|0,Hb|0)|0;Hb=sT(Tb|0,z|0,T|0,_b|0)|0;Tb=z;hc=AT(T|0,_b|0,21)|0;_b=tT(hb|0,cc|0,hc|0,z|0)|0;hc=z;cc=sT(Fb|0,D|0,1048576,0)|0;hb=yT(cc|0,z|0,21)|0;cc=z;T=sT(hb|0,cc|0,Ib|0,Xb|0)|0;Xb=z;Ib=AT(hb|0,cc|0,21)|0;cc=tT(Fb|0,D|0,Ib|0,z|0)|0;Ib=z;D=sT(Yb|0,Aa|0,1048576,0)|0;Fb=yT(D|0,z|0,21)|0;D=z;hb=AT(Fb|0,D|0,21)|0;u=z;k=sT(Zb|0,P|0,1048576,0)|0;qc=yT(k|0,z|0,21)|0;k=z;Qb=AT(qc|0,k|0,21)|0;w=z;Vb=sT(bc|0,j|0,1048576,0)|0;pc=yT(Vb|0,z|0,21)|0;Vb=z;i=sT(pc|0,Vb|0,mc|0,ec|0)|0;ec=z;mc=AT(pc|0,Vb|0,21)|0;Vb=tT(bc|0,j|0,mc|0,z|0)|0;mc=z;j=sT(Gb|0,Db|0,1048576,0)|0;bc=yT(j|0,z|0,21)|0;j=z;pc=sT(bc|0,j|0,_b|0,hc|0)|0;hc=z;_b=AT(bc|0,j|0,21)|0;j=tT(Gb|0,Db|0,_b|0,z|0)|0;_b=z;Db=sT(Hb|0,Tb|0,1048576,0)|0;Gb=yT(Db|0,z|0,21)|0;Db=z;bc=sT(Gb|0,Db|0,cc|0,Ib|0)|0;Ib=z;cc=AT(Gb|0,Db|0,21)|0;Db=tT(Hb|0,Tb|0,cc|0,z|0)|0;cc=z;Tb=rT(T|0,Xb|0,666643,0)|0;Hb=z;Gb=rT(T|0,Xb|0,470296,0)|0;rb=z;Wb=rT(T|0,Xb|0,654183,0)|0;Nb=z;qb=rT(T|0,Xb|0,-997805,-1)|0;ea=z;Mb=rT(T|0,Xb|0,136657,0)|0;kb=z;uc=rT(T|0,Xb|0,-683901,-1)|0;Xb=sT(qc|0,k|0,uc|0,z|0)|0;uc=sT(Xb|0,z|0,aa|0,Ca|0)|0;Ca=tT(uc|0,z|0,ac|0,tb|0)|0;tb=z;ac=rT(bc|0,Ib|0,666643,0)|0;uc=z;aa=rT(bc|0,Ib|0,470296,0)|0;Xb=z;k=rT(bc|0,Ib|0,654183,0)|0;qc=z;T=rT(bc|0,Ib|0,-997805,-1)|0;Wa=z;f=rT(bc|0,Ib|0,136657,0)|0;v=z;Bb=rT(bc|0,Ib|0,-683901,-1)|0;Ib=z;bc=rT(Db|0,cc|0,666643,0)|0;nb=sT(wc|0,L|0,bc|0,z|0)|0;bc=z;L=rT(Db|0,cc|0,470296,0)|0;wc=z;C=rT(Db|0,cc|0,654183,0)|0;jc=z;mb=rT(Db|0,cc|0,-997805,-1)|0;fa=z;tc=rT(Db|0,cc|0,136657,0)|0;I=z;gc=rT(Db|0,cc|0,-683901,-1)|0;cc=z;Db=sT(f|0,v|0,qb|0,ea|0)|0;ea=sT(Db|0,z|0,gc|0,cc|0)|0;cc=sT(ea|0,z|0,Fb|0,D|0)|0;D=sT(cc|0,z|0,R|0,qa|0)|0;qa=tT(D|0,z|0,rc|0,r|0)|0;r=z;rc=rT(pc|0,hc|0,666643,0)|0;D=z;R=rT(pc|0,hc|0,470296,0)|0;cc=sT(nb|0,bc|0,R|0,z|0)|0;R=z;bc=rT(pc|0,hc|0,654183,0)|0;nb=z;Fb=rT(pc|0,hc|0,-997805,-1)|0;ea=z;gc=rT(pc|0,hc|0,136657,0)|0;Db=z;qb=rT(pc|0,hc|0,-683901,-1)|0;hc=z;pc=rT(j|0,_b|0,666643,0)|0;v=z;f=rT(j|0,_b|0,470296,0)|0;xb=z;Ua=rT(j|0,_b|0,654183,0)|0;jb=z;wb=rT(j|0,_b|0,-997805,-1)|0;W=z;Lb=rT(j|0,_b|0,136657,0)|0;Rb=z;Ub=rT(j|0,_b|0,-683901,-1)|0;_b=z;j=sT(k|0,qc|0,Gb|0,rb|0)|0;rb=sT(j|0,z|0,mb|0,fa|0)|0;fa=sT(rb|0,z|0,_|0,$|0)|0;$=tT(fa|0,z|0,oc|0,Kb|0)|0;Kb=sT($|0,z|0,gc|0,Db|0)|0;Db=sT(Kb|0,z|0,Ub|0,_b|0)|0;_b=z;Ub=rT(i|0,ec|0,666643,0)|0;Kb=sT(Ub|0,z|0,K|0,N|0)|0;N=z;K=rT(i|0,ec|0,470296,0)|0;Ub=z;gc=rT(i|0,ec|0,654183,0)|0;$=z;oc=sT(ca|0,Q|0,s|0,kc|0)|0;kc=tT(oc|0,z|0,c&-2097152|0,da|0)|0;da=sT(kc|0,z|0,rc|0,D|0)|0;D=sT(da|0,z|0,gc|0,$|0)|0;$=sT(D|0,z|0,f|0,xb|0)|0;xb=z;f=rT(i|0,ec|0,-997805,-1)|0;D=z;gc=rT(i|0,ec|0,136657,0)|0;da=z;rc=sT(oa|0,Y|0,V|0,p|0)|0;p=tT(rc|0,z|0,pa|0,ba|0)|0;ba=sT(p|0,z|0,ac|0,uc|0)|0;uc=sT(ba|0,z|0,L|0,wc|0)|0;wc=sT(uc|0,z|0,bc|0,nb|0)|0;nb=sT(wc|0,z|0,gc|0,da|0)|0;da=sT(nb|0,z|0,wb|0,W|0)|0;W=z;wb=rT(i|0,ec|0,-683901,-1)|0;ec=z;i=sT(Kb|0,N|0,1048576,0)|0;nb=yT(i|0,z|0,21)|0;i=z;gc=sT(sc|0,x|0,K|0,Ub|0)|0;Ub=sT(gc|0,z|0,pc|0,v|0)|0;v=sT(Ub|0,z|0,nb|0,i|0)|0;Ub=z;pc=AT(nb|0,i|0,21)|0;i=tT(Kb|0,N|0,pc|0,z|0)|0;pc=z;N=sT($|0,xb|0,1048576,0)|0;Kb=yT(N|0,z|0,21)|0;N=z;nb=sT(cc|0,R|0,f|0,D|0)|0;D=sT(nb|0,z|0,Ua|0,jb|0)|0;jb=sT(D|0,z|0,Kb|0,N|0)|0;D=z;Ua=AT(Kb|0,N|0,21)|0;N=z;Kb=sT(da|0,W|0,1048576,0)|0;nb=yT(Kb|0,z|0,21)|0;Kb=z;f=sT(aa|0,Xb|0,Tb|0,Hb|0)|0;Hb=sT(f|0,z|0,C|0,jc|0)|0;jc=sT(Hb|0,z|0,U|0,na|0)|0;na=tT(jc|0,z|0,t|0,lc|0)|0;lc=sT(na|0,z|0,Fb|0,ea|0)|0;ea=sT(lc|0,z|0,wb|0,ec|0)|0;ec=sT(ea|0,z|0,Lb|0,Rb|0)|0;Rb=sT(ec|0,z|0,nb|0,Kb|0)|0;ec=z;Lb=AT(nb|0,Kb|0,21)|0;Kb=z;nb=sT(Db|0,_b|0,1048576,0)|0;ea=yT(nb|0,z|0,21)|0;nb=z;wb=sT(T|0,Wa|0,Wb|0,Nb|0)|0;Nb=sT(wb|0,z|0,tc|0,I|0)|0;I=sT(Nb|0,z|0,Yb|0,Aa|0)|0;Aa=tT(I|0,z|0,hb|0,u|0)|0;u=sT(Aa|0,z|0,qb|0,hc|0)|0;hc=sT(u|0,z|0,ea|0,nb|0)|0;u=z;qb=AT(ea|0,nb|0,21)|0;nb=tT(Db|0,_b|0,qb|0,z|0)|0;qb=z;_b=sT(qa|0,r|0,1048576,0)|0;Db=yT(_b|0,z|0,21)|0;_b=z;ea=sT(Bb|0,Ib|0,Mb|0,kb|0)|0;kb=sT(ea|0,z|0,Zb|0,P|0)|0;P=sT(kb|0,z|0,Db|0,_b|0)|0;kb=tT(P|0,z|0,Qb|0,w|0)|0;w=z;Qb=AT(Db|0,_b|0,21)|0;_b=tT(qa|0,r|0,Qb|0,z|0)|0;Qb=z;r=sT(Ca|0,tb|0,1048576,0)|0;qa=yT(r|0,z|0,21)|0;r=z;Db=sT(Vb|0,mc|0,qa|0,r|0)|0;mc=z;Vb=AT(qa|0,r|0,21)|0;r=z;qa=sT(v|0,Ub|0,1048576,0)|0;P=yT(qa|0,z|0,21)|0;qa=z;Zb=AT(P|0,qa|0,21)|0;ea=z;Mb=sT(jb|0,D|0,1048576,0)|0;Ib=yT(Mb|0,z|0,21)|0;Mb=z;Bb=AT(Ib|0,Mb|0,21)|0;Aa=z;hb=sT(Rb|0,ec|0,1048576,0)|0;I=yT(hb|0,z|0,21)|0;hb=z;Yb=sT(nb|0,qb|0,I|0,hb|0)|0;qb=z;nb=AT(I|0,hb|0,21)|0;hb=z;I=sT(hc|0,u|0,1048576,0)|0;Nb=yT(I|0,z|0,21)|0;I=z;tc=sT(_b|0,Qb|0,Nb|0,I|0)|0;Qb=z;_b=AT(Nb|0,I|0,21)|0;I=tT(hc|0,u|0,_b|0,z|0)|0;_b=z;u=sT(kb|0,w|0,1048576,0)|0;hc=yT(u|0,z|0,21)|0;u=z;Nb=AT(hc|0,u|0,21)|0;wb=tT(kb|0,w|0,Nb|0,z|0)|0;Nb=z;w=sT(Db|0,mc|0,1048576,0)|0;kb=yT(w|0,z|0,21)|0;w=z;Wb=AT(kb|0,w|0,21)|0;Wa=tT(Db|0,mc|0,Wb|0,z|0)|0;Wb=z;mc=rT(kb|0,w|0,666643,0)|0;Db=sT(i|0,pc|0,mc|0,z|0)|0;mc=z;pc=rT(kb|0,w|0,470296,0)|0;i=z;T=rT(kb|0,w|0,654183,0)|0;lc=z;Fb=rT(kb|0,w|0,-997805,-1)|0;na=z;t=rT(kb|0,w|0,136657,0)|0;jc=z;U=rT(kb|0,w|0,-683901,-1)|0;w=z;kb=yT(Db|0,mc|0,21)|0;Hb=z;C=sT(pc|0,i|0,v|0,Ub|0)|0;Ub=tT(C|0,z|0,Zb|0,ea|0)|0;ea=sT(Ub|0,z|0,kb|0,Hb|0)|0;Ub=z;Zb=AT(kb|0,Hb|0,21)|0;Hb=tT(Db|0,mc|0,Zb|0,z|0)|0;Zb=z;mc=yT(ea|0,Ub|0,21)|0;Db=z;kb=sT(T|0,lc|0,$|0,xb|0)|0;xb=tT(kb|0,z|0,Ua|0,N|0)|0;N=sT(xb|0,z|0,P|0,qa|0)|0;qa=sT(N|0,z|0,mc|0,Db|0)|0;N=z;P=AT(mc|0,Db|0,21)|0;Db=tT(ea|0,Ub|0,P|0,z|0)|0;P=z;Ub=yT(qa|0,N|0,21)|0;ea=z;mc=sT(jb|0,D|0,Fb|0,na|0)|0;na=tT(mc|0,z|0,Bb|0,Aa|0)|0;Aa=sT(na|0,z|0,Ub|0,ea|0)|0;na=z;Bb=AT(Ub|0,ea|0,21)|0;ea=tT(qa|0,N|0,Bb|0,z|0)|0;Bb=z;N=yT(Aa|0,na|0,21)|0;qa=z;Ub=sT(t|0,jc|0,da|0,W|0)|0;W=tT(Ub|0,z|0,Lb|0,Kb|0)|0;Kb=sT(W|0,z|0,Ib|0,Mb|0)|0;Mb=sT(Kb|0,z|0,N|0,qa|0)|0;Kb=z;Ib=AT(N|0,qa|0,21)|0;qa=tT(Aa|0,na|0,Ib|0,z|0)|0;Ib=z;na=yT(Mb|0,Kb|0,21)|0;Aa=z;N=sT(Rb|0,ec|0,U|0,w|0)|0;w=tT(N|0,z|0,nb|0,hb|0)|0;hb=sT(w|0,z|0,na|0,Aa|0)|0;w=z;nb=AT(na|0,Aa|0,21)|0;Aa=tT(Mb|0,Kb|0,nb|0,z|0)|0;nb=z;Kb=yT(hb|0,w|0,21)|0;Mb=z;na=sT(Yb|0,qb|0,Kb|0,Mb|0)|0;qb=z;Yb=AT(Kb|0,Mb|0,21)|0;Mb=tT(hb|0,w|0,Yb|0,z|0)|0;Yb=z;w=yT(na|0,qb|0,21)|0;hb=z;Kb=sT(w|0,hb|0,I|0,_b|0)|0;_b=z;I=AT(w|0,hb|0,21)|0;hb=tT(na|0,qb|0,I|0,z|0)|0;I=z;qb=yT(Kb|0,_b|0,21)|0;na=z;w=sT(tc|0,Qb|0,qb|0,na|0)|0;Qb=z;tc=AT(qb|0,na|0,21)|0;na=tT(Kb|0,_b|0,tc|0,z|0)|0;tc=z;_b=yT(w|0,Qb|0,21)|0;Kb=z;qb=sT(_b|0,Kb|0,wb|0,Nb|0)|0;Nb=z;wb=AT(_b|0,Kb|0,21)|0;Kb=tT(w|0,Qb|0,wb|0,z|0)|0;wb=z;Qb=yT(qb|0,Nb|0,21)|0;w=z;_b=sT(Ca|0,tb|0,hc|0,u|0)|0;u=tT(_b|0,z|0,Vb|0,r|0)|0;r=sT(u|0,z|0,Qb|0,w|0)|0;u=z;Vb=AT(Qb|0,w|0,21)|0;w=tT(qb|0,Nb|0,Vb|0,z|0)|0;Vb=z;Nb=yT(r|0,u|0,21)|0;qb=z;Qb=sT(Nb|0,qb|0,Wa|0,Wb|0)|0;Wb=z;Wa=AT(Nb|0,qb|0,21)|0;qb=tT(r|0,u|0,Wa|0,z|0)|0;Wa=z;u=yT(Qb|0,Wb|0,21)|0;r=z;Nb=AT(u|0,r|0,21)|0;_b=tT(Qb|0,Wb|0,Nb|0,z|0)|0;Nb=z;Wb=rT(u|0,r|0,666643,0)|0;Qb=sT(Wb|0,z|0,Hb|0,Zb|0)|0;Zb=z;Hb=rT(u|0,r|0,470296,0)|0;Wb=sT(Db|0,P|0,Hb|0,z|0)|0;Hb=z;P=rT(u|0,r|0,654183,0)|0;Db=sT(ea|0,Bb|0,P|0,z|0)|0;P=z;Bb=rT(u|0,r|0,-997805,-1)|0;ea=sT(qa|0,Ib|0,Bb|0,z|0)|0;Bb=z;Ib=rT(u|0,r|0,136657,0)|0;qa=sT(Aa|0,nb|0,Ib|0,z|0)|0;Ib=z;nb=rT(u|0,r|0,-683901,-1)|0;r=sT(Mb|0,Yb|0,nb|0,z|0)|0;nb=z;Yb=yT(Qb|0,Zb|0,21)|0;Mb=z;u=sT(Wb|0,Hb|0,Yb|0,Mb|0)|0;Hb=z;Wb=AT(Yb|0,Mb|0,21)|0;Mb=tT(Qb|0,Zb|0,Wb|0,z|0)|0;Wb=z;Zb=yT(u|0,Hb|0,21)|0;Qb=z;Yb=sT(Db|0,P|0,Zb|0,Qb|0)|0;P=z;Db=AT(Zb|0,Qb|0,21)|0;Qb=tT(u|0,Hb|0,Db|0,z|0)|0;Db=z;Hb=yT(Yb|0,P|0,21)|0;u=z;Zb=sT(ea|0,Bb|0,Hb|0,u|0)|0;Bb=z;ea=AT(Hb|0,u|0,21)|0;u=tT(Yb|0,P|0,ea|0,z|0)|0;ea=z;P=yT(Zb|0,Bb|0,21)|0;Yb=z;Hb=sT(qa|0,Ib|0,P|0,Yb|0)|0;Ib=z;qa=AT(P|0,Yb|0,21)|0;Yb=tT(Zb|0,Bb|0,qa|0,z|0)|0;qa=z;Bb=yT(Hb|0,Ib|0,21)|0;Zb=z;P=sT(r|0,nb|0,Bb|0,Zb|0)|0;nb=z;r=AT(Bb|0,Zb|0,21)|0;Zb=tT(Hb|0,Ib|0,r|0,z|0)|0;r=z;Ib=yT(P|0,nb|0,21)|0;Hb=z;Bb=sT(Ib|0,Hb|0,hb|0,I|0)|0;I=z;hb=AT(Ib|0,Hb|0,21)|0;Hb=tT(P|0,nb|0,hb|0,z|0)|0;hb=z;nb=yT(Bb|0,I|0,21)|0;P=z;Ib=sT(nb|0,P|0,na|0,tc|0)|0;tc=z;na=AT(nb|0,P|0,21)|0;P=tT(Bb|0,I|0,na|0,z|0)|0;na=z;I=yT(Ib|0,tc|0,21)|0;Bb=z;nb=sT(I|0,Bb|0,Kb|0,wb|0)|0;wb=z;Kb=AT(I|0,Bb|0,21)|0;Bb=tT(Ib|0,tc|0,Kb|0,z|0)|0;Kb=z;tc=yT(nb|0,wb|0,21)|0;Ib=z;I=sT(tc|0,Ib|0,w|0,Vb|0)|0;Vb=z;w=AT(tc|0,Ib|0,21)|0;Ib=tT(nb|0,wb|0,w|0,z|0)|0;w=z;wb=yT(I|0,Vb|0,21)|0;nb=z;tc=sT(wb|0,nb|0,qb|0,Wa|0)|0;Wa=z;qb=AT(wb|0,nb|0,21)|0;nb=tT(I|0,Vb|0,qb|0,z|0)|0;qb=z;Vb=yT(tc|0,Wa|0,21)|0;I=z;wb=sT(Vb|0,I|0,_b|0,Nb|0)|0;Nb=z;_b=AT(Vb|0,I|0,21)|0;I=tT(tc|0,Wa|0,_b|0,z|0)|0;_b=z;a[b>>0]=Mb;Wa=zT(Mb|0,Wb|0,8)|0;a[b+1>>0]=Wa;Wa=zT(Mb|0,Wb|0,16)|0;Wb=z;Wb=AT(Qb|0,Db|0,5)|0;a[b+2>>0]=Wb|Wa;Wa=zT(Qb|0,Db|0,3)|0;a[b+3>>0]=Wa;Wa=zT(Qb|0,Db|0,11)|0;a[b+4>>0]=Wa;Wa=zT(Qb|0,Db|0,19)|0;Db=z;Db=AT(u|0,ea|0,2)|0;a[b+5>>0]=Db|Wa;Wa=zT(u|0,ea|0,6)|0;a[b+6>>0]=Wa;Wa=zT(u|0,ea|0,14)|0;ea=z;ea=AT(Yb|0,qa|0,7)|0;a[b+7>>0]=ea|Wa;Wa=zT(Yb|0,qa|0,1)|0;a[b+8>>0]=Wa;Wa=zT(Yb|0,qa|0,9)|0;a[b+9>>0]=Wa;Wa=zT(Yb|0,qa|0,17)|0;qa=z;qa=AT(Zb|0,r|0,4)|0;a[b+10>>0]=qa|Wa;Wa=zT(Zb|0,r|0,4)|0;a[b+11>>0]=Wa;Wa=zT(Zb|0,r|0,12)|0;a[b+12>>0]=Wa;Wa=zT(Zb|0,r|0,20)|0;r=z;r=AT(Hb|0,hb|0,1)|0;a[b+13>>0]=r|Wa;Wa=zT(Hb|0,hb|0,7)|0;a[b+14>>0]=Wa;Wa=zT(Hb|0,hb|0,15)|0;hb=z;hb=AT(P|0,na|0,6)|0;a[b+15>>0]=hb|Wa;Wa=zT(P|0,na|0,2)|0;a[b+16>>0]=Wa;Wa=zT(P|0,na|0,10)|0;a[b+17>>0]=Wa;Wa=zT(P|0,na|0,18)|0;na=z;na=AT(Bb|0,Kb|0,3)|0;a[b+18>>0]=na|Wa;Wa=zT(Bb|0,Kb|0,5)|0;a[b+19>>0]=Wa;Wa=zT(Bb|0,Kb|0,13)|0;a[b+20>>0]=Wa;a[b+21>>0]=Ib;Wa=zT(Ib|0,w|0,8)|0;a[b+22>>0]=Wa;Wa=zT(Ib|0,w|0,16)|0;w=z;w=AT(nb|0,qb|0,5)|0;a[b+23>>0]=w|Wa;Wa=zT(nb|0,qb|0,3)|0;a[b+24>>0]=Wa;Wa=zT(nb|0,qb|0,11)|0;a[b+25>>0]=Wa;Wa=zT(nb|0,qb|0,19)|0;qb=z;qb=AT(I|0,_b|0,2)|0;a[b+26>>0]=qb|Wa;Wa=zT(I|0,_b|0,6)|0;a[b+27>>0]=Wa;Wa=zT(I|0,_b|0,14)|0;_b=z;_b=AT(wb|0,Nb|0,7)|0;a[b+28>>0]=Wa|_b;_b=zT(wb|0,Nb|0,1)|0;a[b+29>>0]=_b;_b=zT(wb|0,Nb|0,9)|0;a[b+30>>0]=_b;_b=zT(wb|0,Nb|0,17)|0;a[b+31>>0]=_b;return}function jE(b){b=b|0;var c=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0;c=b+1|0;e=b+2|0;f=a[e>>0]|0;g=d[b>>0]|0;h=AT(d[c>>0]|0|0,0,8)|0;i=z;j=f&255;f=AT(j|0,0,16)|0;k=b+3|0;l=AT(d[k>>0]|0|0,0,8)|0;m=z;n=b+4|0;o=AT(d[n>>0]|0|0,0,16)|0;p=m|z;m=b+5|0;q=d[m>>0]|0;r=AT(q|0,0,24)|0;s=zT(l|j|o|r|0,p|z|0,5)|0;p=b+6|0;r=b+7|0;o=a[r>>0]|0;j=AT(d[p>>0]|0|0,0,8)|0;l=z;t=o&255;o=AT(t|0,0,16)|0;u=zT(j|q|o|0,l|z|0,2)|0;l=b+8|0;o=AT(d[l>>0]|0|0,0,8)|0;q=z;j=b+9|0;v=AT(d[j>>0]|0|0,0,16)|0;w=q|z;q=b+10|0;x=d[q>>0]|0;y=AT(x|0,0,24)|0;A=zT(o|t|v|y|0,w|z|0,7)|0;w=b+11|0;y=AT(d[w>>0]|0|0,0,8)|0;v=z;t=b+12|0;o=AT(d[t>>0]|0|0,0,16)|0;B=v|z;v=b+13|0;C=d[v>>0]|0;D=AT(C|0,0,24)|0;E=zT(y|x|o|D|0,B|z|0,4)|0;B=b+14|0;D=b+15|0;o=a[D>>0]|0;x=AT(d[B>>0]|0|0,0,8)|0;y=z;F=o&255;o=AT(F|0,0,16)|0;G=zT(x|C|o|0,y|z|0,1)|0;y=b+16|0;o=AT(d[y>>0]|0|0,0,8)|0;C=z;x=b+17|0;H=AT(d[x>>0]|0|0,0,16)|0;I=C|z;C=b+18|0;J=d[C>>0]|0;K=AT(J|0,0,24)|0;L=zT(o|F|H|K|0,I|z|0,6)|0;I=b+19|0;K=b+20|0;H=a[K>>0]|0;F=AT(d[I>>0]|0|0,0,8)|0;o=z;M=AT(H&255|0,0,16)|0;H=zT(F|J|M|0,o|z|0,3)|0;o=z;M=b+21|0;J=b+22|0;F=b+23|0;N=a[F>>0]|0;O=d[M>>0]|0;P=AT(d[J>>0]|0|0,0,8)|0;Q=z;R=N&255;N=AT(R|0,0,16)|0;S=b+24|0;T=AT(d[S>>0]|0|0,0,8)|0;U=z;V=b+25|0;W=AT(d[V>>0]|0|0,0,16)|0;X=U|z;U=b+26|0;Y=d[U>>0]|0;Z=AT(Y|0,0,24)|0;_=zT(T|R|W|Z|0,X|z|0,5)|0;X=b+27|0;Z=b+28|0;W=a[Z>>0]|0;R=AT(d[X>>0]|0|0,0,8)|0;T=z;$=W&255;W=AT($|0,0,16)|0;aa=zT(R|Y|W|0,T|z|0,2)|0;T=b+29|0;W=AT(d[T>>0]|0|0,0,8)|0;Y=z;R=b+30|0;ba=AT(d[R>>0]|0|0,0,16)|0;ca=Y|z;Y=b+31|0;da=d[Y>>0]|0;ea=AT(da|0,0,24)|0;fa=zT(W|$|ba|ea|0,ca|z|0,7)|0;ca=AT(d[b+32>>0]|0|0,0,8)|0;ea=z;ba=AT(d[b+33>>0]|0|0,0,16)|0;$=ea|z;ea=d[b+34>>0]|0;W=AT(ea|0,0,24)|0;ga=zT(ca|da|ba|W|0,$|z|0,4)|0;$=a[b+36>>0]|0;W=AT(d[b+35>>0]|0|0,0,8)|0;ba=z;da=$&255;$=AT(da|0,0,16)|0;ca=zT(W|ea|$|0,ba|z|0,1)|0;ba=AT(d[b+37>>0]|0|0,0,8)|0;$=z;ea=AT(d[b+38>>0]|0|0,0,16)|0;W=$|z;$=d[b+39>>0]|0;ha=AT($|0,0,24)|0;ia=zT(ba|da|ea|ha|0,W|z|0,6)|0;W=a[b+41>>0]|0;ha=AT(d[b+40>>0]|0|0,0,8)|0;ea=z;da=AT(W&255|0,0,16)|0;W=zT(ha|$|da|0,ea|z|0,3)|0;ea=z;da=a[b+44>>0]|0;$=d[b+42>>0]|0;ha=AT(d[b+43>>0]|0|0,0,8)|0;ba=z;ja=da&255;da=AT(ja|0,0,16)|0;ka=AT(d[b+45>>0]|0|0,0,8)|0;la=z;ma=AT(d[b+46>>0]|0|0,0,16)|0;na=la|z;la=d[b+47>>0]|0;oa=AT(la|0,0,24)|0;pa=zT(ka|ja|ma|oa|0,na|z|0,5)|0;na=a[b+49>>0]|0;oa=AT(d[b+48>>0]|0|0,0,8)|0;ma=z;ja=na&255;na=AT(ja|0,0,16)|0;ka=zT(oa|la|na|0,ma|z|0,2)|0;ma=ka&2097151;ka=AT(d[b+50>>0]|0|0,0,8)|0;na=z;la=AT(d[b+51>>0]|0|0,0,16)|0;oa=na|z;na=d[b+52>>0]|0;qa=AT(na|0,0,24)|0;ra=zT(ka|ja|la|qa|0,oa|z|0,7)|0;oa=ra&2097151;ra=AT(d[b+53>>0]|0|0,0,8)|0;qa=z;la=AT(d[b+54>>0]|0|0,0,16)|0;ja=qa|z;qa=d[b+55>>0]|0;ka=AT(qa|0,0,24)|0;sa=zT(ra|na|la|ka|0,ja|z|0,4)|0;ja=sa&2097151;sa=a[b+57>>0]|0;ka=AT(d[b+56>>0]|0|0,0,8)|0;la=z;na=sa&255;sa=AT(na|0,0,16)|0;ra=zT(ka|qa|sa|0,la|z|0,1)|0;la=ra&2097151;ra=AT(d[b+58>>0]|0|0,0,8)|0;sa=z;qa=AT(d[b+59>>0]|0|0,0,16)|0;ka=sa|z;sa=d[b+60>>0]|0;ta=AT(sa|0,0,24)|0;ua=zT(ra|na|qa|ta|0,ka|z|0,6)|0;ka=ua&2097151;ua=AT(d[b+61>>0]|0|0,0,8)|0;ta=z;qa=AT(d[b+62>>0]|0|0,0,16)|0;na=ta|z;ta=AT(d[b+63>>0]|0|0,0,24)|0;ra=zT(ua|sa|qa|ta|0,na|z|0,3)|0;na=z;ta=rT(ra|0,na|0,666643,0)|0;qa=z;sa=rT(ra|0,na|0,470296,0)|0;ua=z;va=rT(ra|0,na|0,654183,0)|0;wa=z;xa=rT(ra|0,na|0,-997805,-1)|0;ya=z;za=rT(ra|0,na|0,136657,0)|0;Aa=z;Ba=rT(ra|0,na|0,-683901,-1)|0;na=sT(Ba|0,z|0,ha|$|da&2031616|0,ba|0)|0;ba=z;da=rT(ka|0,0,666643,0)|0;$=z;ha=rT(ka|0,0,470296,0)|0;Ba=z;ra=rT(ka|0,0,654183,0)|0;Ca=z;Da=rT(ka|0,0,-997805,-1)|0;Ea=z;Fa=rT(ka|0,0,136657,0)|0;Ga=z;Ha=rT(ka|0,0,-683901,-1)|0;ka=z;Ia=rT(la|0,0,666643,0)|0;Ja=z;Ka=rT(la|0,0,470296,0)|0;La=z;Ma=rT(la|0,0,654183,0)|0;Na=z;Oa=rT(la|0,0,-997805,-1)|0;Pa=z;Qa=rT(la|0,0,136657,0)|0;Ra=z;Sa=rT(la|0,0,-683901,-1)|0;la=sT(Sa|0,z|0,ia&2097151|0,0)|0;ia=sT(la|0,z|0,Fa|0,Ga|0)|0;Ga=sT(ia|0,z|0,xa|0,ya|0)|0;ya=z;xa=rT(ja|0,0,666643,0)|0;ia=z;Fa=rT(ja|0,0,470296,0)|0;la=z;Sa=rT(ja|0,0,654183,0)|0;Ta=z;Ua=rT(ja|0,0,-997805,-1)|0;Va=z;Wa=rT(ja|0,0,136657,0)|0;Xa=z;Ya=rT(ja|0,0,-683901,-1)|0;ja=z;Za=rT(oa|0,0,666643,0)|0;_a=z;$a=rT(oa|0,0,470296,0)|0;ab=z;bb=rT(oa|0,0,654183,0)|0;cb=z;db=rT(oa|0,0,-997805,-1)|0;eb=z;fb=rT(oa|0,0,136657,0)|0;gb=z;hb=rT(oa|0,0,-683901,-1)|0;oa=sT(hb|0,z|0,ga&2097151|0,0)|0;ga=sT(oa|0,z|0,Wa|0,Xa|0)|0;Xa=sT(ga|0,z|0,Oa|0,Pa|0)|0;Pa=sT(Xa|0,z|0,ra|0,Ca|0)|0;Ca=sT(Pa|0,z|0,sa|0,ua|0)|0;ua=z;sa=rT(ma|0,0,666643,0)|0;Pa=sT(sa|0,z|0,L&2097151|0,0)|0;L=z;sa=rT(ma|0,0,470296,0)|0;ra=z;Xa=rT(ma|0,0,654183,0)|0;Oa=sT(Xa|0,z|0,P|O|N&2031616|0,Q|0)|0;Q=sT(Oa|0,z|0,$a|0,ab|0)|0;ab=sT(Q|0,z|0,xa|0,ia|0)|0;ia=z;xa=rT(ma|0,0,-997805,-1)|0;Q=z;$a=rT(ma|0,0,136657,0)|0;Oa=sT($a|0,z|0,aa&2097151|0,0)|0;aa=sT(Oa|0,z|0,db|0,eb|0)|0;eb=sT(aa|0,z|0,Sa|0,Ta|0)|0;Ta=sT(eb|0,z|0,Ka|0,La|0)|0;La=sT(Ta|0,z|0,da|0,$|0)|0;$=z;da=rT(ma|0,0,-683901,-1)|0;ma=z;Ta=sT(Pa|0,L|0,1048576,0)|0;Ka=z;eb=zT(Ta|0,Ka|0,21)|0;Sa=z;aa=sT(sa|0,ra|0,H|0,o|0)|0;o=sT(aa|0,z|0,eb|0,Sa|0)|0;Sa=sT(o|0,z|0,Za|0,_a|0)|0;_a=z;Za=tT(Pa|0,L|0,Ta&-2097152|0,Ka&2047|0)|0;Ka=z;Ta=sT(ab|0,ia|0,1048576,0)|0;L=z;Pa=zT(Ta|0,L|0,21)|0;o=z;eb=sT(xa|0,Q|0,_&2097151|0,0)|0;_=sT(eb|0,z|0,bb|0,cb|0)|0;cb=sT(_|0,z|0,Fa|0,la|0)|0;la=sT(cb|0,z|0,Ia|0,Ja|0)|0;Ja=sT(la|0,z|0,Pa|0,o|0)|0;o=z;Pa=sT(La|0,$|0,1048576,0)|0;la=yT(Pa|0,z|0,21)|0;Pa=z;Ia=sT(da|0,ma|0,fa&2097151|0,0)|0;fa=sT(Ia|0,z|0,fb|0,gb|0)|0;gb=sT(fa|0,z|0,Ua|0,Va|0)|0;Va=sT(gb|0,z|0,Ma|0,Na|0)|0;Na=sT(Va|0,z|0,ha|0,Ba|0)|0;Ba=sT(Na|0,z|0,ta|0,qa|0)|0;qa=sT(Ba|0,z|0,la|0,Pa|0)|0;Ba=z;ta=AT(la|0,Pa|0,21)|0;Pa=z;la=sT(Ca|0,ua|0,1048576,0)|0;Na=yT(la|0,z|0,21)|0;la=z;ha=sT(Ya|0,ja|0,ca&2097151|0,0)|0;ca=sT(ha|0,z|0,Qa|0,Ra|0)|0;Ra=sT(ca|0,z|0,Da|0,Ea|0)|0;Ea=sT(Ra|0,z|0,va|0,wa|0)|0;wa=sT(Ea|0,z|0,Na|0,la|0)|0;Ea=z;va=AT(Na|0,la|0,21)|0;la=tT(Ca|0,ua|0,va|0,z|0)|0;va=z;ua=sT(Ga|0,ya|0,1048576,0)|0;Ca=yT(ua|0,z|0,21)|0;ua=z;Na=sT(Ha|0,ka|0,W|0,ea|0)|0;ea=sT(Na|0,z|0,za|0,Aa|0)|0;Aa=sT(ea|0,z|0,Ca|0,ua|0)|0;ea=z;za=AT(Ca|0,ua|0,21)|0;ua=tT(Ga|0,ya|0,za|0,z|0)|0;za=z;ya=sT(na|0,ba|0,1048576,0)|0;Ga=yT(ya|0,z|0,21)|0;ya=z;Ca=sT(Ga|0,ya|0,pa&2097151|0,0)|0;pa=z;Na=AT(Ga|0,ya|0,21)|0;ya=tT(na|0,ba|0,Na|0,z|0)|0;Na=z;ba=sT(Sa|0,_a|0,1048576,0)|0;na=z;Ga=zT(ba|0,na|0,21)|0;W=z;ka=tT(Sa|0,_a|0,ba&-2097152|0,na|0)|0;na=z;ba=sT(Ja|0,o|0,1048576,0)|0;_a=yT(ba|0,z|0,21)|0;ba=z;Sa=AT(_a|0,ba|0,21)|0;Ha=tT(Ja|0,o|0,Sa|0,z|0)|0;Sa=z;o=sT(qa|0,Ba|0,1048576,0)|0;Ja=yT(o|0,z|0,21)|0;o=z;Ra=sT(la|0,va|0,Ja|0,o|0)|0;va=z;la=AT(Ja|0,o|0,21)|0;o=tT(qa|0,Ba|0,la|0,z|0)|0;la=z;Ba=sT(wa|0,Ea|0,1048576,0)|0;qa=yT(Ba|0,z|0,21)|0;Ba=z;Ja=sT(qa|0,Ba|0,ua|0,za|0)|0;za=z;ua=AT(qa|0,Ba|0,21)|0;Ba=tT(wa|0,Ea|0,ua|0,z|0)|0;ua=z;Ea=sT(Aa|0,ea|0,1048576,0)|0;wa=yT(Ea|0,z|0,21)|0;Ea=z;qa=sT(wa|0,Ea|0,ya|0,Na|0)|0;Na=z;ya=AT(wa|0,Ea|0,21)|0;Ea=tT(Aa|0,ea|0,ya|0,z|0)|0;ya=z;ea=rT(Ca|0,pa|0,666643,0)|0;Aa=sT(ea|0,z|0,G&2097151|0,0)|0;G=z;ea=rT(Ca|0,pa|0,470296,0)|0;wa=sT(Za|0,Ka|0,ea|0,z|0)|0;ea=z;Ka=rT(Ca|0,pa|0,654183,0)|0;Za=sT(ka|0,na|0,Ka|0,z|0)|0;Ka=z;na=rT(Ca|0,pa|0,-997805,-1)|0;ka=z;Da=rT(Ca|0,pa|0,136657,0)|0;ca=sT(Ha|0,Sa|0,Da|0,z|0)|0;Da=z;Sa=rT(Ca|0,pa|0,-683901,-1)|0;pa=z;Ca=sT(La|0,$|0,_a|0,ba|0)|0;ba=tT(Ca|0,z|0,ta|0,Pa|0)|0;Pa=sT(ba|0,z|0,Sa|0,pa|0)|0;pa=z;Sa=rT(qa|0,Na|0,666643,0)|0;ba=sT(Sa|0,z|0,E&2097151|0,0)|0;E=z;Sa=rT(qa|0,Na|0,470296,0)|0;ta=sT(Aa|0,G|0,Sa|0,z|0)|0;Sa=z;G=rT(qa|0,Na|0,654183,0)|0;Aa=sT(wa|0,ea|0,G|0,z|0)|0;G=z;ea=rT(qa|0,Na|0,-997805,-1)|0;wa=sT(Za|0,Ka|0,ea|0,z|0)|0;ea=z;Ka=rT(qa|0,Na|0,136657,0)|0;Za=z;Ca=rT(qa|0,Na|0,-683901,-1)|0;Na=sT(ca|0,Da|0,Ca|0,z|0)|0;Ca=z;Da=rT(Ea|0,ya|0,666643,0)|0;ca=sT(Da|0,z|0,A&2097151|0,0)|0;A=z;Da=rT(Ea|0,ya|0,470296,0)|0;qa=sT(ba|0,E|0,Da|0,z|0)|0;Da=z;E=rT(Ea|0,ya|0,654183,0)|0;ba=sT(ta|0,Sa|0,E|0,z|0)|0;E=z;Sa=rT(Ea|0,ya|0,-997805,-1)|0;ta=sT(Aa|0,G|0,Sa|0,z|0)|0;Sa=z;G=rT(Ea|0,ya|0,136657,0)|0;Aa=sT(wa|0,ea|0,G|0,z|0)|0;G=z;ea=rT(Ea|0,ya|0,-683901,-1)|0;ya=z;Ea=sT(ab|0,ia|0,Ga|0,W|0)|0;W=tT(Ea|0,z|0,Ta&-2097152|0,L|0)|0;L=sT(W|0,z|0,na|0,ka|0)|0;ka=sT(L|0,z|0,Ka|0,Za|0)|0;Za=sT(ka|0,z|0,ea|0,ya|0)|0;ya=z;ea=rT(Ja|0,za|0,666643,0)|0;ka=z;Ka=rT(Ja|0,za|0,470296,0)|0;L=z;na=rT(Ja|0,za|0,654183,0)|0;W=z;Ta=rT(Ja|0,za|0,-997805,-1)|0;Ea=z;Ga=rT(Ja|0,za|0,136657,0)|0;ia=sT(ta|0,Sa|0,Ga|0,z|0)|0;Ga=z;Sa=rT(Ja|0,za|0,-683901,-1)|0;za=sT(Aa|0,G|0,Sa|0,z|0)|0;Sa=z;G=rT(Ba|0,ua|0,666643,0)|0;Aa=z;Ja=rT(Ba|0,ua|0,470296,0)|0;ta=z;ab=rT(Ba|0,ua|0,654183,0)|0;wa=z;_a=rT(Ba|0,ua|0,-997805,-1)|0;$=z;La=rT(Ba|0,ua|0,136657,0)|0;Ha=z;Qa=rT(Ba|0,ua|0,-683901,-1)|0;ua=sT(ia|0,Ga|0,Qa|0,z|0)|0;Qa=z;Ga=rT(Ra|0,va|0,666643,0)|0;ia=sT(Ga|0,z|0,h|g|f&2031616|0,i|0)|0;i=z;f=rT(Ra|0,va|0,470296,0)|0;g=z;h=rT(Ra|0,va|0,654183,0)|0;Ga=sT(h|0,z|0,u&2097151|0,0)|0;u=sT(Ga|0,z|0,ea|0,ka|0)|0;ka=sT(u|0,z|0,Ja|0,ta|0)|0;ta=z;Ja=rT(Ra|0,va|0,-997805,-1)|0;u=z;ea=rT(Ra|0,va|0,136657,0)|0;Ga=sT(qa|0,Da|0,ea|0,z|0)|0;ea=sT(Ga|0,z|0,na|0,W|0)|0;W=sT(ea|0,z|0,_a|0,$|0)|0;$=z;_a=rT(Ra|0,va|0,-683901,-1)|0;va=z;Ra=sT(ia|0,i|0,1048576,0)|0;ea=yT(Ra|0,z|0,21)|0;Ra=z;na=sT(f|0,g|0,s&2097151|0,0)|0;s=sT(na|0,z|0,G|0,Aa|0)|0;Aa=sT(s|0,z|0,ea|0,Ra|0)|0;s=z;G=AT(ea|0,Ra|0,21)|0;Ra=tT(ia|0,i|0,G|0,z|0)|0;G=z;i=sT(ka|0,ta|0,1048576,0)|0;ia=yT(i|0,z|0,21)|0;i=z;ea=sT(ca|0,A|0,Ja|0,u|0)|0;u=sT(ea|0,z|0,Ka|0,L|0)|0;L=sT(u|0,z|0,ab|0,wa|0)|0;wa=sT(L|0,z|0,ia|0,i|0)|0;L=z;ab=AT(ia|0,i|0,21)|0;i=z;ia=sT(W|0,$|0,1048576,0)|0;u=yT(ia|0,z|0,21)|0;ia=z;Ka=sT(ba|0,E|0,_a|0,va|0)|0;va=sT(Ka|0,z|0,Ta|0,Ea|0)|0;Ea=sT(va|0,z|0,La|0,Ha|0)|0;Ha=sT(Ea|0,z|0,u|0,ia|0)|0;Ea=z;La=AT(u|0,ia|0,21)|0;ia=z;u=sT(ua|0,Qa|0,1048576,0)|0;va=yT(u|0,z|0,21)|0;u=z;Ta=sT(za|0,Sa|0,va|0,u|0)|0;Sa=z;za=AT(va|0,u|0,21)|0;u=tT(ua|0,Qa|0,za|0,z|0)|0;za=z;Qa=sT(Za|0,ya|0,1048576,0)|0;ua=yT(Qa|0,z|0,21)|0;Qa=z;va=sT(Na|0,Ca|0,ua|0,Qa|0)|0;Ca=z;Na=AT(ua|0,Qa|0,21)|0;Qa=tT(Za|0,ya|0,Na|0,z|0)|0;Na=z;ya=sT(Pa|0,pa|0,1048576,0)|0;Za=yT(ya|0,z|0,21)|0;ya=z;ua=sT(o|0,la|0,Za|0,ya|0)|0;la=z;o=AT(Za|0,ya|0,21)|0;ya=tT(Pa|0,pa|0,o|0,z|0)|0;o=z;pa=sT(Aa|0,s|0,1048576,0)|0;Pa=yT(pa|0,z|0,21)|0;pa=z;Za=AT(Pa|0,pa|0,21)|0;Ka=z;_a=sT(wa|0,L|0,1048576,0)|0;E=yT(_a|0,z|0,21)|0;_a=z;ba=AT(E|0,_a|0,21)|0;ea=z;Ja=sT(Ha|0,Ea|0,1048576,0)|0;A=yT(Ja|0,z|0,21)|0;Ja=z;ca=sT(u|0,za|0,A|0,Ja|0)|0;za=z;u=AT(A|0,Ja|0,21)|0;Ja=z;A=sT(Ta|0,Sa|0,1048576,0)|0;na=yT(A|0,z|0,21)|0;A=z;g=sT(Qa|0,Na|0,na|0,A|0)|0;Na=z;Qa=AT(na|0,A|0,21)|0;A=tT(Ta|0,Sa|0,Qa|0,z|0)|0;Qa=z;Sa=sT(va|0,Ca|0,1048576,0)|0;Ta=yT(Sa|0,z|0,21)|0;Sa=z;na=sT(ya|0,o|0,Ta|0,Sa|0)|0;o=z;ya=AT(Ta|0,Sa|0,21)|0;Sa=tT(va|0,Ca|0,ya|0,z|0)|0;ya=z;Ca=sT(ua|0,la|0,1048576,0)|0;va=yT(Ca|0,z|0,21)|0;Ca=z;Ta=AT(va|0,Ca|0,21)|0;f=tT(ua|0,la|0,Ta|0,z|0)|0;Ta=z;la=rT(va|0,Ca|0,666643,0)|0;ua=sT(Ra|0,G|0,la|0,z|0)|0;la=z;G=rT(va|0,Ca|0,470296,0)|0;Ra=z;Ga=rT(va|0,Ca|0,654183,0)|0;Da=z;qa=rT(va|0,Ca|0,-997805,-1)|0;h=z;Ba=rT(va|0,Ca|0,136657,0)|0;ha=z;ja=rT(va|0,Ca|0,-683901,-1)|0;Ca=z;va=yT(ua|0,la|0,21)|0;Ya=z;Va=sT(Aa|0,s|0,G|0,Ra|0)|0;Ra=sT(Va|0,z|0,va|0,Ya|0)|0;Va=tT(Ra|0,z|0,Za|0,Ka|0)|0;Ka=z;Za=AT(va|0,Ya|0,21)|0;Ya=tT(ua|0,la|0,Za|0,z|0)|0;Za=z;la=yT(Va|0,Ka|0,21)|0;ua=z;va=sT(Ga|0,Da|0,ka|0,ta|0)|0;ta=tT(va|0,z|0,ab|0,i|0)|0;i=sT(ta|0,z|0,Pa|0,pa|0)|0;pa=sT(i|0,z|0,la|0,ua|0)|0;i=z;Pa=AT(la|0,ua|0,21)|0;ua=tT(Va|0,Ka|0,Pa|0,z|0)|0;Pa=z;Ka=yT(pa|0,i|0,21)|0;Va=z;la=sT(wa|0,L|0,qa|0,h|0)|0;h=tT(la|0,z|0,ba|0,ea|0)|0;ea=sT(h|0,z|0,Ka|0,Va|0)|0;h=z;ba=AT(Ka|0,Va|0,21)|0;Va=tT(pa|0,i|0,ba|0,z|0)|0;ba=z;i=yT(ea|0,h|0,21)|0;pa=z;Ka=sT(Ba|0,ha|0,W|0,$|0)|0;$=tT(Ka|0,z|0,La|0,ia|0)|0;ia=sT($|0,z|0,E|0,_a|0)|0;_a=sT(ia|0,z|0,i|0,pa|0)|0;ia=z;E=AT(i|0,pa|0,21)|0;pa=tT(ea|0,h|0,E|0,z|0)|0;E=z;h=yT(_a|0,ia|0,21)|0;ea=z;i=sT(Ha|0,Ea|0,ja|0,Ca|0)|0;Ca=tT(i|0,z|0,u|0,Ja|0)|0;Ja=sT(Ca|0,z|0,h|0,ea|0)|0;Ca=z;u=AT(h|0,ea|0,21)|0;ea=tT(_a|0,ia|0,u|0,z|0)|0;u=z;ia=yT(Ja|0,Ca|0,21)|0;_a=z;h=sT(ca|0,za|0,ia|0,_a|0)|0;za=z;ca=AT(ia|0,_a|0,21)|0;_a=tT(Ja|0,Ca|0,ca|0,z|0)|0;ca=z;Ca=yT(h|0,za|0,21)|0;Ja=z;ia=sT(Ca|0,Ja|0,A|0,Qa|0)|0;Qa=z;A=AT(Ca|0,Ja|0,21)|0;Ja=tT(h|0,za|0,A|0,z|0)|0;A=z;za=yT(ia|0,Qa|0,21)|0;h=z;Ca=sT(g|0,Na|0,za|0,h|0)|0;Na=z;g=AT(za|0,h|0,21)|0;h=tT(ia|0,Qa|0,g|0,z|0)|0;g=z;Qa=yT(Ca|0,Na|0,21)|0;ia=z;za=sT(Qa|0,ia|0,Sa|0,ya|0)|0;ya=z;Sa=AT(Qa|0,ia|0,21)|0;ia=tT(Ca|0,Na|0,Sa|0,z|0)|0;Sa=z;Na=yT(za|0,ya|0,21)|0;Ca=z;Qa=sT(na|0,o|0,Na|0,Ca|0)|0;o=z;na=AT(Na|0,Ca|0,21)|0;Ca=tT(za|0,ya|0,na|0,z|0)|0;na=z;ya=yT(Qa|0,o|0,21)|0;za=z;Na=sT(ya|0,za|0,f|0,Ta|0)|0;Ta=z;f=AT(ya|0,za|0,21)|0;za=tT(Qa|0,o|0,f|0,z|0)|0;f=z;o=yT(Na|0,Ta|0,21)|0;Qa=z;ya=AT(o|0,Qa|0,21)|0;i=tT(Na|0,Ta|0,ya|0,z|0)|0;ya=z;Ta=rT(o|0,Qa|0,666643,0)|0;Na=sT(Ta|0,z|0,Ya|0,Za|0)|0;Za=z;Ya=rT(o|0,Qa|0,470296,0)|0;Ta=sT(ua|0,Pa|0,Ya|0,z|0)|0;Ya=z;Pa=rT(o|0,Qa|0,654183,0)|0;ua=sT(Va|0,ba|0,Pa|0,z|0)|0;Pa=z;ba=rT(o|0,Qa|0,-997805,-1)|0;Va=sT(pa|0,E|0,ba|0,z|0)|0;ba=z;E=rT(o|0,Qa|0,136657,0)|0;pa=sT(ea|0,u|0,E|0,z|0)|0;E=z;u=rT(o|0,Qa|0,-683901,-1)|0;Qa=sT(_a|0,ca|0,u|0,z|0)|0;u=z;ca=yT(Na|0,Za|0,21)|0;_a=z;o=sT(Ta|0,Ya|0,ca|0,_a|0)|0;Ya=z;Ta=AT(ca|0,_a|0,21)|0;_a=tT(Na|0,Za|0,Ta|0,z|0)|0;Ta=z;Za=yT(o|0,Ya|0,21)|0;Na=z;ca=sT(ua|0,Pa|0,Za|0,Na|0)|0;Pa=z;ua=AT(Za|0,Na|0,21)|0;Na=tT(o|0,Ya|0,ua|0,z|0)|0;ua=z;Ya=yT(ca|0,Pa|0,21)|0;o=z;Za=sT(Va|0,ba|0,Ya|0,o|0)|0;ba=z;Va=AT(Ya|0,o|0,21)|0;o=tT(ca|0,Pa|0,Va|0,z|0)|0;Va=z;Pa=yT(Za|0,ba|0,21)|0;ca=z;Ya=sT(pa|0,E|0,Pa|0,ca|0)|0;E=z;pa=AT(Pa|0,ca|0,21)|0;ca=tT(Za|0,ba|0,pa|0,z|0)|0;pa=z;ba=yT(Ya|0,E|0,21)|0;Za=z;Pa=sT(Qa|0,u|0,ba|0,Za|0)|0;u=z;Qa=AT(ba|0,Za|0,21)|0;Za=tT(Ya|0,E|0,Qa|0,z|0)|0;Qa=z;E=yT(Pa|0,u|0,21)|0;Ya=z;ba=sT(E|0,Ya|0,Ja|0,A|0)|0;A=z;Ja=AT(E|0,Ya|0,21)|0;Ya=tT(Pa|0,u|0,Ja|0,z|0)|0;Ja=z;u=yT(ba|0,A|0,21)|0;Pa=z;E=sT(u|0,Pa|0,h|0,g|0)|0;g=z;h=AT(u|0,Pa|0,21)|0;Pa=tT(ba|0,A|0,h|0,z|0)|0;h=z;A=yT(E|0,g|0,21)|0;ba=z;u=sT(A|0,ba|0,ia|0,Sa|0)|0;Sa=z;ia=AT(A|0,ba|0,21)|0;ba=tT(E|0,g|0,ia|0,z|0)|0;ia=z;g=yT(u|0,Sa|0,21)|0;E=z;A=sT(g|0,E|0,Ca|0,na|0)|0;na=z;Ca=AT(g|0,E|0,21)|0;E=tT(u|0,Sa|0,Ca|0,z|0)|0;Ca=z;Sa=yT(A|0,na|0,21)|0;u=z;g=sT(Sa|0,u|0,za|0,f|0)|0;f=z;za=AT(Sa|0,u|0,21)|0;u=tT(A|0,na|0,za|0,z|0)|0;za=z;na=yT(g|0,f|0,21)|0;A=z;Sa=sT(na|0,A|0,i|0,ya|0)|0;ya=z;i=AT(na|0,A|0,21)|0;A=tT(g|0,f|0,i|0,z|0)|0;i=z;a[b>>0]=_a;b=zT(_a|0,Ta|0,8)|0;a[c>>0]=b;b=zT(_a|0,Ta|0,16)|0;Ta=z;Ta=AT(Na|0,ua|0,5)|0;a[e>>0]=Ta|b;b=zT(Na|0,ua|0,3)|0;a[k>>0]=b;b=zT(Na|0,ua|0,11)|0;a[n>>0]=b;b=zT(Na|0,ua|0,19)|0;ua=z;ua=AT(o|0,Va|0,2)|0;a[m>>0]=ua|b;b=zT(o|0,Va|0,6)|0;a[p>>0]=b;b=zT(o|0,Va|0,14)|0;Va=z;Va=AT(ca|0,pa|0,7)|0;a[r>>0]=Va|b;b=zT(ca|0,pa|0,1)|0;a[l>>0]=b;b=zT(ca|0,pa|0,9)|0;a[j>>0]=b;b=zT(ca|0,pa|0,17)|0;pa=z;pa=AT(Za|0,Qa|0,4)|0;a[q>>0]=pa|b;b=zT(Za|0,Qa|0,4)|0;a[w>>0]=b;b=zT(Za|0,Qa|0,12)|0;a[t>>0]=b;b=zT(Za|0,Qa|0,20)|0;Qa=z;Qa=AT(Ya|0,Ja|0,1)|0;a[v>>0]=Qa|b;b=zT(Ya|0,Ja|0,7)|0;a[B>>0]=b;b=zT(Ya|0,Ja|0,15)|0;Ja=z;Ja=AT(Pa|0,h|0,6)|0;a[D>>0]=Ja|b;b=zT(Pa|0,h|0,2)|0;a[y>>0]=b;b=zT(Pa|0,h|0,10)|0;a[x>>0]=b;b=zT(Pa|0,h|0,18)|0;h=z;h=AT(ba|0,ia|0,3)|0;a[C>>0]=h|b;b=zT(ba|0,ia|0,5)|0;a[I>>0]=b;b=zT(ba|0,ia|0,13)|0;a[K>>0]=b;a[M>>0]=E;M=zT(E|0,Ca|0,8)|0;a[J>>0]=M;M=zT(E|0,Ca|0,16)|0;Ca=z;Ca=AT(u|0,za|0,5)|0;a[F>>0]=Ca|M;M=zT(u|0,za|0,3)|0;a[S>>0]=M;M=zT(u|0,za|0,11)|0;a[V>>0]=M;M=zT(u|0,za|0,19)|0;za=z;za=AT(A|0,i|0,2)|0;a[U>>0]=za|M;M=zT(A|0,i|0,6)|0;a[X>>0]=M;M=zT(A|0,i|0,14)|0;i=z;i=AT(Sa|0,ya|0,7)|0;a[Z>>0]=M|i;i=zT(Sa|0,ya|0,1)|0;a[T>>0]=i;i=zT(Sa|0,ya|0,9)|0;a[R>>0]=i;i=zT(Sa|0,ya|0,17)|0;a[Y>>0]=i;return}function kE(b){b=b|0;var c=0;if(!b)return;c=b;b=216;while(1){b=b+-1|0;a[c>>0]=0;if(!b)break;else c=c+1|0}return}function lE(a,b){a=a|0;b=b|0;var d=0,e=0;d=(b|0)==0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;e=a+16|0;c[e>>2]=d?-205731576:-1056596264;c[e+4>>2]=d?1779033703:-876896931;e=a+24|0;c[e>>2]=d?-2067093701:914150663;c[e+4>>2]=d?-1150833019:1654270250;e=a+32|0;c[e>>2]=d?-23791573:812702999;c[e+4>>2]=d?1013904242:-1856437926;e=a+40|0;c[e>>2]=d?1595750129:-150054599;c[e+4>>2]=d?-1521486534:355462360;e=a+48|0;c[e>>2]=d?-1377402159:-4191439;c[e+4>>2]=d?1359893119:1731405415;e=a+56|0;c[e>>2]=d?725511199:1750603025;c[e+4>>2]=d?-1694144372:-1900787065;e=a+64|0;c[e>>2]=d?-79577749:1694076839;c[e+4>>2]=d?528734635:-619958771;e=a+72|0;c[e>>2]=d?327033209:-1090891868;c[e+4>>2]=d?1541459225:1203062813;c[a+208>>2]=b;return}function mE(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0;e=l;l=l+640|0;f=e;g=0;do{h=g<<3;i=AT(d[b+h>>0]|0|0,0,56)|0;j=z;k=AT(d[b+(h|1)>>0]|0|0,0,48)|0;m=z|j;j=AT(d[b+(h|2)>>0]|0|0,0,40)|0;n=m|z|(d[b+(h|3)>>0]|0);m=AT(d[b+(h|4)>>0]|0|0,0,24)|0;o=n|z;n=AT(d[b+(h|5)>>0]|0|0,0,16)|0;p=o|z;o=AT(d[b+(h|6)>>0]|0|0,0,8)|0;q=f+(g<<3)|0;c[q>>2]=k|i|j|m|n|o|(d[b+(h|7)>>0]|0);c[q+4>>2]=p|z;g=g+1|0}while((g|0)!=16);g=f;b=16;p=c[g>>2]|0;q=c[g+4>>2]|0;while(1){g=f+(b+-2<<3)|0;h=c[g>>2]|0;o=c[g+4>>2]|0;g=zT(h|0,o|0,19)|0;n=z;m=AT(h|0,o|0,45)|0;j=n|z;n=zT(h|0,o|0,61)|0;i=z;k=AT(h|0,o|0,3)|0;r=i|z;i=zT(h|0,o|0,6)|0;o=r^z^j;j=f+(b+-7<<3)|0;r=c[j>>2]|0;h=c[j+4>>2]|0;j=f+(b+-15<<3)|0;s=p;p=c[j>>2]|0;t=q;q=c[j+4>>2]|0;j=zT(p|0,q|0,1)|0;u=z;v=AT(p|0,q|0,63)|0;w=u|z;u=zT(p|0,q|0,8)|0;x=z;y=AT(p|0,q|0,56)|0;A=x|z;x=zT(p|0,q|0,7)|0;B=A^z^w;w=sT(s|0,t|0,r|0,h|0)|0;h=sT(w|0,z|0,(n|k)^i^(g|m)|0,o|0)|0;o=sT(h|0,z|0,(u|y)^x^(j|v)|0,B|0)|0;B=f+(b<<3)|0;c[B>>2]=o;c[B+4>>2]=z;if((b|0)>=79)break;else b=b+1|0}b=a+16|0;q=b;p=a+24|0;B=p;o=a+32|0;v=o;j=a+40|0;x=j;y=a+48|0;u=y;h=a+56|0;m=h;g=a+64|0;i=g;k=a+72|0;a=k;n=0;w=c[u>>2]|0;r=c[u+4>>2]|0;u=c[a>>2]|0;t=c[a+4>>2]|0;a=c[i>>2]|0;s=c[m>>2]|0;A=c[i+4>>2]|0;i=c[m+4>>2]|0;m=c[q>>2]|0;C=c[q+4>>2]|0;q=c[B>>2]|0;D=c[B+4>>2]|0;B=c[v>>2]|0;E=c[v+4>>2]|0;v=c[x>>2]|0;F=c[x+4>>2]|0;while(1){x=zT(w|0,r|0,14)|0;G=z;H=AT(w|0,r|0,50)|0;I=G|z;G=zT(w|0,r|0,18)|0;J=z;K=AT(w|0,r|0,46)|0;L=I^(J|z);J=zT(w|0,r|0,41)|0;I=z;M=AT(w|0,r|0,23)|0;N=sT((x|H)^(G|K)^(J|M)|0,L^(I|z)|0,u|0,t|0)|0;I=4952+(n<<3)|0;L=f+(n<<3)|0;M=c[L>>2]|0;J=c[L+4>>2]|0;L=sT(N|0,z|0,c[I>>2]|0,c[I+4>>2]|0)|0;I=sT(L|0,z|0,(a^s)&w^a|0,(A^i)&r^A|0)|0;L=sT(I|0,z|0,M|0,J|0)|0;J=z;M=zT(m|0,C|0,28)|0;I=z;N=AT(m|0,C|0,36)|0;K=I|z;I=zT(m|0,C|0,34)|0;G=z;H=AT(m|0,C|0,30)|0;x=K^(G|z);G=zT(m|0,C|0,39)|0;K=z;O=AT(m|0,C|0,25)|0;P=sT((M|N)^(I|H)^(G|O)|0,x^(K|z)|0,B&(q|m)|q&m|0,E&(D|C)|D&C|0)|0;K=z;x=sT(L|0,J|0,v|0,F|0)|0;O=z;G=sT(P|0,K|0,L|0,J|0)|0;J=z;L=n|1;K=zT(x|0,O|0,14)|0;P=z;H=AT(x|0,O|0,50)|0;I=P|z;P=zT(x|0,O|0,18)|0;N=z;M=AT(x|0,O|0,46)|0;Q=I^(N|z);N=zT(x|0,O|0,41)|0;I=z;R=AT(x|0,O|0,23)|0;S=Q^(I|z);I=4952+(L<<3)|0;Q=f+(L<<3)|0;L=c[Q>>2]|0;T=c[Q+4>>2]|0;Q=sT(c[I>>2]|0,c[I+4>>2]|0,a|0,A|0)|0;I=sT(Q|0,z|0,L|0,T|0)|0;T=sT(I|0,z|0,x&(s^w)^s|0,O&(i^r)^i|0)|0;I=sT(T|0,z|0,(K|H)^(P|M)^(N|R)|0,S|0)|0;S=z;R=zT(G|0,J|0,28)|0;N=z;M=AT(G|0,J|0,36)|0;P=N|z;N=zT(G|0,J|0,34)|0;H=z;K=AT(G|0,J|0,30)|0;T=P^(H|z);H=zT(G|0,J|0,39)|0;P=z;L=AT(G|0,J|0,25)|0;Q=sT((R|M)^(N|K)^(H|L)|0,T^(P|z)|0,(G|m)&q|G&m|0,(J|C)&D|J&C|0)|0;P=z;T=sT(I|0,S|0,B|0,E|0)|0;L=z;H=sT(Q|0,P|0,I|0,S|0)|0;S=z;I=n|2;P=zT(T|0,L|0,14)|0;Q=z;K=AT(T|0,L|0,50)|0;N=Q|z;Q=zT(T|0,L|0,18)|0;M=z;R=AT(T|0,L|0,46)|0;U=N^(M|z);M=zT(T|0,L|0,41)|0;N=z;V=AT(T|0,L|0,23)|0;W=U^(N|z);N=4952+(I<<3)|0;U=f+(I<<3)|0;I=c[U>>2]|0;X=c[U+4>>2]|0;U=sT(c[N>>2]|0,c[N+4>>2]|0,s|0,i|0)|0;N=sT(U|0,z|0,I|0,X|0)|0;X=sT(N|0,z|0,T&(x^w)^w|0,L&(O^r)^r|0)|0;N=sT(X|0,z|0,(P|K)^(Q|R)^(M|V)|0,W|0)|0;W=z;V=zT(H|0,S|0,28)|0;M=z;R=AT(H|0,S|0,36)|0;Q=M|z;M=zT(H|0,S|0,34)|0;K=z;P=AT(H|0,S|0,30)|0;X=Q^(K|z);K=zT(H|0,S|0,39)|0;Q=z;I=AT(H|0,S|0,25)|0;U=sT((V|R)^(M|P)^(K|I)|0,X^(Q|z)|0,(H|G)&m|H&G|0,(S|J)&C|S&J|0)|0;Q=z;X=sT(N|0,W|0,q|0,D|0)|0;I=z;K=sT(U|0,Q|0,N|0,W|0)|0;W=z;N=n|3;Q=zT(X|0,I|0,14)|0;U=z;P=AT(X|0,I|0,50)|0;M=U|z;U=zT(X|0,I|0,18)|0;R=z;V=AT(X|0,I|0,46)|0;Y=M^(R|z);R=zT(X|0,I|0,41)|0;M=z;Z=AT(X|0,I|0,23)|0;_=Y^(M|z);M=4952+(N<<3)|0;Y=f+(N<<3)|0;N=c[Y>>2]|0;$=c[Y+4>>2]|0;Y=sT(c[M>>2]|0,c[M+4>>2]|0,w|0,r|0)|0;M=sT(Y|0,z|0,N|0,$|0)|0;$=sT(M|0,z|0,X&(T^x)^x|0,I&(L^O)^O|0)|0;M=sT($|0,z|0,(Q|P)^(U|V)^(R|Z)|0,_|0)|0;_=z;Z=zT(K|0,W|0,28)|0;R=z;V=AT(K|0,W|0,36)|0;U=R|z;R=zT(K|0,W|0,34)|0;P=z;Q=AT(K|0,W|0,30)|0;$=U^(P|z);P=zT(K|0,W|0,39)|0;U=z;N=AT(K|0,W|0,25)|0;Y=sT((Z|V)^(R|Q)^(P|N)|0,$^(U|z)|0,(K|H)&G|K&H|0,(W|S)&J|W&S|0)|0;U=z;$=sT(M|0,_|0,m|0,C|0)|0;N=z;P=sT(Y|0,U|0,M|0,_|0)|0;_=z;M=n|4;U=zT($|0,N|0,14)|0;Y=z;Q=AT($|0,N|0,50)|0;R=Y|z;Y=zT($|0,N|0,18)|0;V=z;Z=AT($|0,N|0,46)|0;aa=R^(V|z);V=zT($|0,N|0,41)|0;R=z;ba=AT($|0,N|0,23)|0;ca=aa^(R|z);R=4952+(M<<3)|0;aa=f+(M<<3)|0;M=c[aa>>2]|0;da=c[aa+4>>2]|0;aa=sT(c[R>>2]|0,c[R+4>>2]|0,x|0,O|0)|0;O=sT(aa|0,z|0,M|0,da|0)|0;da=sT(O|0,z|0,$&(X^T)^T|0,N&(I^L)^L|0)|0;O=sT(da|0,z|0,(U|Q)^(Y|Z)^(V|ba)|0,ca|0)|0;ca=z;ba=zT(P|0,_|0,28)|0;V=z;Z=AT(P|0,_|0,36)|0;Y=V|z;V=zT(P|0,_|0,34)|0;Q=z;U=AT(P|0,_|0,30)|0;da=Y^(Q|z);Q=zT(P|0,_|0,39)|0;Y=z;M=AT(P|0,_|0,25)|0;aa=sT((ba|Z)^(V|U)^(Q|M)|0,da^(Y|z)|0,(P|K)&H|P&K|0,(_|W)&S|_&W|0)|0;Y=z;u=sT(O|0,ca|0,G|0,J|0)|0;t=z;v=sT(aa|0,Y|0,O|0,ca|0)|0;F=z;ca=n|5;O=zT(u|0,t|0,14)|0;Y=z;aa=AT(u|0,t|0,50)|0;J=Y|z;Y=zT(u|0,t|0,18)|0;G=z;da=AT(u|0,t|0,46)|0;M=J^(G|z);G=zT(u|0,t|0,41)|0;J=z;Q=AT(u|0,t|0,23)|0;U=M^(J|z);J=4952+(ca<<3)|0;M=f+(ca<<3)|0;ca=sT(c[M>>2]|0,c[M+4>>2]|0,c[J>>2]|0,c[J+4>>2]|0)|0;J=sT(ca|0,z|0,T|0,L|0)|0;L=sT(J|0,z|0,u&($^X)^X|0,t&(N^I)^I|0)|0;J=sT(L|0,z|0,(O|aa)^(Y|da)^(G|Q)|0,U|0)|0;U=z;Q=zT(v|0,F|0,28)|0;G=z;da=AT(v|0,F|0,36)|0;Y=G|z;G=zT(v|0,F|0,34)|0;aa=z;O=AT(v|0,F|0,30)|0;L=Y^(aa|z);aa=zT(v|0,F|0,39)|0;Y=z;T=AT(v|0,F|0,25)|0;ca=sT((Q|da)^(G|O)^(aa|T)|0,L^(Y|z)|0,(v|P)&K|v&P|0,(F|_)&W|F&_|0)|0;Y=z;a=sT(J|0,U|0,H|0,S|0)|0;A=z;B=sT(ca|0,Y|0,J|0,U|0)|0;E=z;U=n|6;J=zT(a|0,A|0,14)|0;Y=z;ca=AT(a|0,A|0,50)|0;S=Y|z;Y=zT(a|0,A|0,18)|0;H=z;L=AT(a|0,A|0,46)|0;T=S^(H|z);H=zT(a|0,A|0,41)|0;S=z;aa=AT(a|0,A|0,23)|0;O=T^(S|z);S=4952+(U<<3)|0;T=f+(U<<3)|0;U=sT(c[T>>2]|0,c[T+4>>2]|0,c[S>>2]|0,c[S+4>>2]|0)|0;S=sT(U|0,z|0,X|0,I|0)|0;I=sT(S|0,z|0,a&(u^$)^$|0,A&(t^N)^N|0)|0;S=sT(I|0,z|0,(J|ca)^(Y|L)^(H|aa)|0,O|0)|0;O=z;aa=zT(B|0,E|0,28)|0;H=z;L=AT(B|0,E|0,36)|0;Y=H|z;H=zT(B|0,E|0,34)|0;ca=z;J=AT(B|0,E|0,30)|0;I=Y^(ca|z);ca=zT(B|0,E|0,39)|0;Y=z;X=AT(B|0,E|0,25)|0;U=sT((aa|L)^(H|J)^(ca|X)|0,I^(Y|z)|0,(B|v)&P|B&v|0,(E|F)&_|E&F|0)|0;Y=z;s=sT(S|0,O|0,K|0,W|0)|0;i=z;q=sT(U|0,Y|0,S|0,O|0)|0;D=z;O=n|7;S=zT(s|0,i|0,14)|0;Y=z;U=AT(s|0,i|0,50)|0;W=Y|z;Y=zT(s|0,i|0,18)|0;K=z;I=AT(s|0,i|0,46)|0;X=W^(K|z);K=zT(s|0,i|0,41)|0;W=z;ca=AT(s|0,i|0,23)|0;J=X^(W|z);W=4952+(O<<3)|0;X=f+(O<<3)|0;O=sT(c[X>>2]|0,c[X+4>>2]|0,c[W>>2]|0,c[W+4>>2]|0)|0;W=sT(O|0,z|0,$|0,N|0)|0;N=sT(W|0,z|0,s&(a^u)^u|0,i&(A^t)^t|0)|0;W=sT(N|0,z|0,(S|U)^(Y|I)^(K|ca)|0,J|0)|0;J=z;ca=zT(q|0,D|0,28)|0;K=z;I=AT(q|0,D|0,36)|0;Y=K|z;K=zT(q|0,D|0,34)|0;U=z;S=AT(q|0,D|0,30)|0;N=Y^(U|z);U=zT(q|0,D|0,39)|0;Y=z;$=AT(q|0,D|0,25)|0;O=sT((ca|I)^(K|S)^(U|$)|0,N^(Y|z)|0,(q|B)&v|q&B|0,(D|E)&F|D&E|0)|0;Y=z;w=sT(W|0,J|0,P|0,_|0)|0;r=z;m=sT(O|0,Y|0,W|0,J|0)|0;C=z;if((n|0)>=72)break;else n=n+8|0}n=b;f=sT(c[n>>2]|0,c[n+4>>2]|0,m|0,C|0)|0;C=b;c[C>>2]=f;c[C+4>>2]=z;C=p;f=sT(c[C>>2]|0,c[C+4>>2]|0,q|0,D|0)|0;D=p;c[D>>2]=f;c[D+4>>2]=z;D=o;f=sT(c[D>>2]|0,c[D+4>>2]|0,B|0,E|0)|0;E=o;c[E>>2]=f;c[E+4>>2]=z;E=j;f=sT(c[E>>2]|0,c[E+4>>2]|0,v|0,F|0)|0;F=j;c[F>>2]=f;c[F+4>>2]=z;F=y;f=sT(c[F>>2]|0,c[F+4>>2]|0,w|0,r|0)|0;r=y;c[r>>2]=f;c[r+4>>2]=z;r=h;f=sT(c[r>>2]|0,c[r+4>>2]|0,s|0,i|0)|0;i=h;c[i>>2]=f;c[i+4>>2]=z;i=g;f=sT(c[i>>2]|0,c[i+4>>2]|0,a|0,A|0)|0;A=g;c[A>>2]=f;c[A+4>>2]=z;A=k;f=sT(c[A>>2]|0,c[A+4>>2]|0,u|0,t|0)|0;t=k;c[t>>2]=f;c[t+4>>2]=z;l=e;return}function nE(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;if(!d)return;e=a;f=c[e>>2]|0;g=f&127;h=128-g|0;i=sT(f|0,c[e+4>>2]|0,d|0,0)|0;e=z;f=a;c[f>>2]=i;c[f+4>>2]=e;if(e>>>0<0|(e|0)==0&i>>>0<d>>>0){i=a+8|0;e=i;f=sT(c[e>>2]|0,c[e+4>>2]|0,1,0)|0;e=i;c[e>>2]=f;c[e+4>>2]=z}if((g|0)==0|h>>>0>d>>>0){j=g;k=b;l=d}else{CT(a+80+g|0,b|0,h|0)|0;mE(a,a+80|0);j=0;k=b+h|0;l=d-h|0}if(l>>>0>127){h=l+-128|0;d=h&-128;b=k+(d+128)|0;g=k;e=l;while(1){mE(a,g);e=e+-128|0;if(e>>>0<=127)break;else g=g+128|0}m=b;n=h-d|0}else{m=k;n=l}if(!n)return;CT(a+80+j|0,m|0,n|0)|0;return}function oE(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0;e=l;l=l+16|0;f=e;g=b;h=c[g>>2]|0;i=c[g+4>>2]|0;g=zT(h|0,i|0,61)|0;j=z;j=b+8|0;k=j;m=c[k>>2]|0;n=c[k+4>>2]|0;k=AT(m|0,n|0,3)|0;o=zT(m|0,n|0,53)|0;a[f>>0]=o;o=zT(m|0,n|0,45)|0;a[f+1>>0]=o;o=zT(m|0,n|0,37)|0;a[f+2>>0]=o;o=zT(m|0,n|0,29)|0;a[f+3>>0]=o;o=zT(m|0,n|0,21)|0;a[f+4>>0]=o;o=zT(m|0,n|0,13)|0;a[f+5>>0]=o;o=zT(m|0,n|0,5)|0;a[f+6>>0]=o;a[f+7>>0]=k|g;g=zT(h|0,i|0,53)|0;a[f+8>>0]=g;g=zT(h|0,i|0,45)|0;a[f+9>>0]=g;g=zT(h|0,i|0,37)|0;a[f+10>>0]=g;g=zT(h|0,i|0,29)|0;a[f+11>>0]=g;g=zT(h|0,i|0,21)|0;a[f+12>>0]=g;g=zT(h|0,i|0,13)|0;a[f+13>>0]=g;g=zT(h|0,i|0,5)|0;a[f+14>>0]=g;a[f+15>>0]=(h&255)<<3;g=h&127;k=(g>>>0<112?112:240)-g|0;if(k|0){o=128-g|0;p=sT(h|0,i|0,k|0,0)|0;i=z;h=b;c[h>>2]=p;c[h+4>>2]=i;if(i>>>0<0|(i|0)==0&p>>>0<k>>>0){p=sT(m|0,n|0,1,0)|0;n=j;c[n>>2]=p;c[n+4>>2]=z}if((g|0)==0|k>>>0<o>>>0){q=g;r=85331;s=k}else{CT(b+80+g|0,85331,o|0)|0;mE(b,b+80|0);q=0;r=85331+o|0;s=k-o|0}if(s>>>0>127){o=s+-128|0;k=o&-128;g=k+128|0;n=r;p=s;while(1){mE(b,n);p=p+-128|0;if(p>>>0<=127)break;else n=n+128|0}t=r+g|0;u=o-k|0}else{t=r;u=s}if(u|0)CT(b+80+q|0,t|0,u|0)|0}u=b;t=c[u>>2]|0;q=c[u+4>>2]|0;u=t&127;s=128-u|0;r=sT(t|0,q|0,16,0)|0;k=b;c[k>>2]=r;c[k+4>>2]=z;if(q>>>0>4294967295|(q|0)==-1&t>>>0>4294967279){t=j;q=sT(c[t>>2]|0,c[t+4>>2]|0,1,0)|0;t=j;c[t>>2]=q;c[t+4>>2]=z}t=16-s|0;q=f+s|0;if(!((u|0)==0|s>>>0>16)){j=b+80|0;CT(b+80+u|0,f|0,s|0)|0;mE(b,j);if(t>>>0>127){s=t+-128|0;k=s&-128;r=k+128|0;o=q;g=t;while(1){mE(b,o);g=g+-128|0;if(g>>>0<=127)break;else o=o+128|0}v=q+r|0;w=s-k|0}else{v=q;w=t}if(w|0){x=v;y=w;A=j;B=21}}else{x=f;y=16;A=b+80+u|0;B=21}if((B|0)==21)CT(A|0,x|0,y|0)|0;y=b+16|0;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,48)|0;a[d+1>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+2>>0]=A;a[d+3>>0]=c[y+4>>2];A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,24)|0;a[d+4>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+5>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,8)|0;a[d+6>>0]=x;a[d+7>>0]=c[y>>2];y=b+24|0;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+8>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,48)|0;a[d+9>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+10>>0]=A;a[d+11>>0]=c[y+4>>2];A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,24)|0;a[d+12>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+13>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,8)|0;a[d+14>>0]=x;a[d+15>>0]=c[y>>2];y=b+32|0;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+16>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,48)|0;a[d+17>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+18>>0]=A;a[d+19>>0]=c[y+4>>2];A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,24)|0;a[d+20>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+21>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,8)|0;a[d+22>>0]=x;a[d+23>>0]=c[y>>2];y=b+40|0;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+24>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,48)|0;a[d+25>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+26>>0]=A;a[d+27>>0]=c[y+4>>2];A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,24)|0;a[d+28>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+29>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,8)|0;a[d+30>>0]=x;a[d+31>>0]=c[y>>2];y=b+48|0;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+32>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,48)|0;a[d+33>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+34>>0]=A;a[d+35>>0]=c[y+4>>2];A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,24)|0;a[d+36>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+37>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,8)|0;a[d+38>>0]=x;a[d+39>>0]=c[y>>2];y=b+56|0;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+40>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,48)|0;a[d+41>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+42>>0]=A;a[d+43>>0]=c[y+4>>2];A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,24)|0;a[d+44>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+45>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,8)|0;a[d+46>>0]=x;a[d+47>>0]=c[y>>2];if(c[b+208>>2]|0){l=e;return}y=b+64|0;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+48>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,48)|0;a[d+49>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+50>>0]=A;a[d+51>>0]=c[y+4>>2];A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,24)|0;a[d+52>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+53>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,8)|0;a[d+54>>0]=x;a[d+55>>0]=c[y>>2];y=b+72|0;b=y;x=zT(c[b>>2]|0,c[b+4>>2]|0,56)|0;a[d+56>>0]=x;x=y;b=zT(c[x>>2]|0,c[x+4>>2]|0,48)|0;a[d+57>>0]=b;b=y;x=zT(c[b>>2]|0,c[b+4>>2]|0,40)|0;a[d+58>>0]=x;a[d+59>>0]=c[y+4>>2];x=y;b=zT(c[x>>2]|0,c[x+4>>2]|0,24)|0;a[d+60>>0]=b;b=y;x=zT(c[b>>2]|0,c[b+4>>2]|0,16)|0;a[d+61>>0]=x;x=y;b=zT(c[x>>2]|0,c[x+4>>2]|0,8)|0;a[d+62>>0]=b;a[d+63>>0]=c[y>>2];l=e;return}function pE(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0;g=l;l=l+224|0;h=g;i=(f|0)==0;ET(h|0,0,216)|0;j=h+16|0;c[j>>2]=i?-205731576:-1056596264;c[j+4>>2]=i?1779033703:-876896931;j=h+24|0;c[j>>2]=i?-2067093701:914150663;c[j+4>>2]=i?-1150833019:1654270250;j=h+32|0;c[j>>2]=i?-23791573:812702999;c[j+4>>2]=i?1013904242:-1856437926;j=h+40|0;c[j>>2]=i?1595750129:-150054599;c[j+4>>2]=i?-1521486534:355462360;j=h+48|0;c[j>>2]=i?-1377402159:-4191439;c[j+4>>2]=i?1359893119:1731405415;j=h+56|0;c[j>>2]=i?725511199:1750603025;c[j+4>>2]=i?-1694144372:-1900787065;j=h+64|0;c[j>>2]=i?-79577749:1694076839;c[j+4>>2]=i?528734635:-619958771;j=h+72|0;c[j>>2]=i?327033209:-1090891868;c[j+4>>2]=i?1541459225:1203062813;c[h+208>>2]=f;do if(d|0){f=h;c[f>>2]=d;c[f+4>>2]=0;if(d>>>0>127){f=d+-128|0;i=f&-128;j=i+128|0;k=b;m=d;while(1){mE(h,k);m=m+-128|0;if(m>>>0<=127)break;else k=k+128|0}k=f-i|0;if(!k)break;else{n=b+j|0;o=k}}else{n=b;o=d}CT(h+80|0,n|0,o|0)|0}while(0);oE(h,e);e=h;h=216;while(1){h=h+-1|0;a[e>>0]=0;if(!h)break;else e=e+1|0}l=g;return}function qE(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;e=c[a>>2]|0;f=a+4|0;g=c[f>>2]|0;h=a+8|0;i=c[h>>2]|0;j=a+12|0;k=c[j>>2]|0;l=a+16|0;m=c[l>>2]|0;n=a+20|0;o=c[n>>2]|0;p=a+24|0;q=c[p>>2]|0;r=a+28|0;s=c[r>>2]|0;t=a+32|0;u=c[t>>2]|0;v=a+36|0;w=c[v>>2]|0;x=0-d|0;d=(c[b+4>>2]^g)&x;y=(c[b+8>>2]^i)&x;z=(c[b+12>>2]^k)&x;A=(c[b+16>>2]^m)&x;B=(c[b+20>>2]^o)&x;C=(c[b+24>>2]^q)&x;D=(c[b+28>>2]^s)&x;E=(c[b+32>>2]^u)&x;F=(c[b+36>>2]^w)&x;c[a>>2]=(c[b>>2]^e)&x^e;c[f>>2]=d^g;c[h>>2]=y^i;c[j>>2]=z^k;c[l>>2]=A^m;c[n>>2]=B^o;c[p>>2]=C^q;c[r>>2]=D^s;c[t>>2]=E^u;c[v>>2]=F^w;return}function rE(b){b=b|0;var c=0,d=0;c=l;l=l+32|0;d=c;SD(d,b);l=c;return a[d>>0]&1|0}function sE(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=0-(c[b+4>>2]|0)|0;e=0-(c[b+8>>2]|0)|0;f=0-(c[b+12>>2]|0)|0;g=0-(c[b+16>>2]|0)|0;h=0-(c[b+20>>2]|0)|0;i=0-(c[b+24>>2]|0)|0;j=0-(c[b+28>>2]|0)|0;k=0-(c[b+32>>2]|0)|0;l=0-(c[b+36>>2]|0)|0;c[a>>2]=0-(c[b>>2]|0);c[a+4>>2]=d;c[a+8>>2]=e;c[a+12>>2]=f;c[a+16>>2]=g;c[a+20>>2]=h;c[a+24>>2]=i;c[a+28>>2]=j;c[a+32>>2]=k;c[a+36>>2]=l;return}function tE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;c=l;l=l+128|0;d=c+80|0;e=c+40|0;f=c;QD(d,b);QD(e,d);QD(e,e);OD(e,b,e);OD(d,d,e);QD(d,d);OD(d,e,d);QD(e,d);QD(e,e);QD(e,e);QD(e,e);QD(e,e);OD(d,e,d);QD(e,d);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);OD(e,e,d);QD(f,e);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);QD(f,f);OD(e,f,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);OD(d,e,d);QD(e,d);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);OD(e,e,d);QD(f,e);g=1;do{QD(f,f);g=g+1|0}while((g|0)!=100);OD(e,f,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);QD(e,e);OD(d,e,d);QD(d,d);QD(d,d);OD(a,d,b);l=c;return}function uE(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0;d=c[b>>2]|0;e=c[b+4>>2]|0;f=c[b+8>>2]|0;g=c[b+12>>2]|0;h=c[b+16>>2]|0;i=c[b+20>>2]|0;j=c[b+24>>2]|0;k=c[b+28>>2]|0;l=c[b+32>>2]|0;m=c[b+36>>2]|0;b=d<<1;n=e<<1;o=f<<1;p=g<<1;q=h<<1;r=i<<1;s=j<<1;t=k<<1;u=i*38|0;v=j*19|0;w=k*38|0;x=l*19|0;y=m*38|0;A=((d|0)<0)<<31>>31;B=rT(d|0,A|0,d|0,A|0)|0;A=z;d=((b|0)<0)<<31>>31;C=((e|0)<0)<<31>>31;D=rT(b|0,d|0,e|0,C|0)|0;E=z;F=((f|0)<0)<<31>>31;G=rT(f|0,F|0,b|0,d|0)|0;H=z;I=((g|0)<0)<<31>>31;J=rT(g|0,I|0,b|0,d|0)|0;K=z;L=((h|0)<0)<<31>>31;M=rT(h|0,L|0,b|0,d|0)|0;N=z;O=((i|0)<0)<<31>>31;P=rT(i|0,O|0,b|0,d|0)|0;Q=z;R=((j|0)<0)<<31>>31;S=rT(j|0,R|0,b|0,d|0)|0;T=z;U=((k|0)<0)<<31>>31;V=rT(k|0,U|0,b|0,d|0)|0;W=z;X=((l|0)<0)<<31>>31;Y=rT(l|0,X|0,b|0,d|0)|0;Z=z;_=((m|0)<0)<<31>>31;$=rT(m|0,_|0,b|0,d|0)|0;d=z;b=((n|0)<0)<<31>>31;aa=rT(n|0,b|0,e|0,C|0)|0;C=z;e=rT(n|0,b|0,f|0,F|0)|0;ba=z;ca=((p|0)<0)<<31>>31;da=rT(p|0,ca|0,n|0,b|0)|0;ea=z;fa=rT(h|0,L|0,n|0,b|0)|0;ga=z;ha=((r|0)<0)<<31>>31;ia=rT(r|0,ha|0,n|0,b|0)|0;ja=z;ka=rT(j|0,R|0,n|0,b|0)|0;la=z;ma=((t|0)<0)<<31>>31;na=rT(t|0,ma|0,n|0,b|0)|0;oa=z;pa=rT(l|0,X|0,n|0,b|0)|0;qa=z;ra=((y|0)<0)<<31>>31;sa=rT(y|0,ra|0,n|0,b|0)|0;b=z;n=rT(f|0,F|0,f|0,F|0)|0;ta=z;ua=((o|0)<0)<<31>>31;va=rT(o|0,ua|0,g|0,I|0)|0;wa=z;xa=rT(h|0,L|0,o|0,ua|0)|0;ya=z;za=rT(i|0,O|0,o|0,ua|0)|0;Aa=z;Ba=rT(j|0,R|0,o|0,ua|0)|0;Ca=z;Da=rT(k|0,U|0,o|0,ua|0)|0;Ea=z;Fa=((x|0)<0)<<31>>31;Ga=rT(x|0,Fa|0,o|0,ua|0)|0;ua=z;o=rT(y|0,ra|0,f|0,F|0)|0;F=z;f=rT(p|0,ca|0,g|0,I|0)|0;I=z;g=rT(p|0,ca|0,h|0,L|0)|0;Ha=z;Ia=rT(r|0,ha|0,p|0,ca|0)|0;Ja=z;Ka=rT(j|0,R|0,p|0,ca|0)|0;La=z;Ma=((w|0)<0)<<31>>31;Na=rT(w|0,Ma|0,p|0,ca|0)|0;Oa=z;Pa=rT(x|0,Fa|0,p|0,ca|0)|0;Qa=z;Ra=rT(y|0,ra|0,p|0,ca|0)|0;ca=z;p=rT(h|0,L|0,h|0,L|0)|0;Sa=z;Ta=((q|0)<0)<<31>>31;Ua=rT(q|0,Ta|0,i|0,O|0)|0;Va=z;Wa=((v|0)<0)<<31>>31;Xa=rT(v|0,Wa|0,q|0,Ta|0)|0;Ya=z;Za=rT(w|0,Ma|0,h|0,L|0)|0;_a=z;$a=rT(x|0,Fa|0,q|0,Ta|0)|0;Ta=z;q=rT(y|0,ra|0,h|0,L|0)|0;L=z;h=rT(u|0,((u|0)<0)<<31>>31|0,i|0,O|0)|0;O=z;i=rT(v|0,Wa|0,r|0,ha|0)|0;u=z;ab=rT(w|0,Ma|0,r|0,ha|0)|0;bb=z;cb=rT(x|0,Fa|0,r|0,ha|0)|0;db=z;eb=rT(y|0,ra|0,r|0,ha|0)|0;ha=z;r=rT(v|0,Wa|0,j|0,R|0)|0;Wa=z;v=rT(w|0,Ma|0,j|0,R|0)|0;fb=z;gb=rT(x|0,Fa|0,s|0,((s|0)<0)<<31>>31|0)|0;s=z;hb=rT(y|0,ra|0,j|0,R|0)|0;R=z;j=rT(w|0,Ma|0,k|0,U|0)|0;U=z;k=rT(x|0,Fa|0,t|0,ma|0)|0;Ma=z;w=rT(y|0,ra|0,t|0,ma|0)|0;ma=z;t=rT(x|0,Fa|0,l|0,X|0)|0;Fa=z;x=rT(y|0,ra|0,l|0,X|0)|0;X=z;l=rT(y|0,ra|0,m|0,_|0)|0;_=z;m=sT(h|0,O|0,B|0,A|0)|0;A=sT(m|0,z|0,Xa|0,Ya|0)|0;Ya=sT(A|0,z|0,Na|0,Oa|0)|0;Oa=sT(Ya|0,z|0,Ga|0,ua|0)|0;ua=sT(Oa|0,z|0,sa|0,b|0)|0;b=z;sa=sT(i|0,u|0,D|0,E|0)|0;E=sT(sa|0,z|0,Za|0,_a|0)|0;_a=sT(E|0,z|0,Pa|0,Qa|0)|0;Qa=sT(_a|0,z|0,o|0,F|0)|0;F=z;o=sT(G|0,H|0,aa|0,C|0)|0;C=sT(o|0,z|0,r|0,Wa|0)|0;Wa=sT(C|0,z|0,ab|0,bb|0)|0;bb=sT(Wa|0,z|0,$a|0,Ta|0)|0;Ta=sT(bb|0,z|0,Ra|0,ca|0)|0;ca=z;Ra=sT(J|0,K|0,e|0,ba|0)|0;ba=sT(Ra|0,z|0,v|0,fb|0)|0;fb=sT(ba|0,z|0,cb|0,db|0)|0;db=sT(fb|0,z|0,q|0,L|0)|0;L=z;q=sT(da|0,ea|0,n|0,ta|0)|0;ta=sT(q|0,z|0,M|0,N|0)|0;N=sT(ta|0,z|0,j|0,U|0)|0;U=sT(N|0,z|0,gb|0,s|0)|0;s=sT(U|0,z|0,eb|0,ha|0)|0;ha=z;eb=sT(fa|0,ga|0,va|0,wa|0)|0;wa=sT(eb|0,z|0,P|0,Q|0)|0;Q=sT(wa|0,z|0,k|0,Ma|0)|0;Ma=sT(Q|0,z|0,hb|0,R|0)|0;R=z;hb=sT(f|0,I|0,xa|0,ya|0)|0;ya=sT(hb|0,z|0,ia|0,ja|0)|0;ja=sT(ya|0,z|0,S|0,T|0)|0;T=sT(ja|0,z|0,t|0,Fa|0)|0;Fa=sT(T|0,z|0,w|0,ma|0)|0;ma=z;w=sT(za|0,Aa|0,g|0,Ha|0)|0;Ha=sT(w|0,z|0,ka|0,la|0)|0;la=sT(Ha|0,z|0,V|0,W|0)|0;W=sT(la|0,z|0,x|0,X|0)|0;X=z;x=sT(Ba|0,Ca|0,p|0,Sa|0)|0;Sa=sT(x|0,z|0,Ia|0,Ja|0)|0;Ja=sT(Sa|0,z|0,na|0,oa|0)|0;oa=sT(Ja|0,z|0,Y|0,Z|0)|0;Z=sT(oa|0,z|0,l|0,_|0)|0;_=z;l=sT(Ka|0,La|0,Ua|0,Va|0)|0;Va=sT(l|0,z|0,Da|0,Ea|0)|0;Ea=sT(Va|0,z|0,pa|0,qa|0)|0;qa=sT(Ea|0,z|0,$|0,d|0)|0;d=z;$=AT(ua|0,b|0,1)|0;b=z;ua=AT(Qa|0,F|0,1)|0;F=z;Qa=AT(Ta|0,ca|0,1)|0;ca=z;Ta=AT(db|0,L|0,1)|0;L=z;db=AT(s|0,ha|0,1)|0;ha=z;s=AT(Ma|0,R|0,1)|0;R=z;Ma=AT(Fa|0,ma|0,1)|0;ma=z;Fa=AT(W|0,X|0,1)|0;X=z;W=AT(Z|0,_|0,1)|0;_=z;Z=AT(qa|0,d|0,1)|0;d=z;qa=sT($|0,b|0,33554432,0)|0;Ea=yT(qa|0,z|0,26)|0;qa=z;pa=sT(Ea|0,qa|0,ua|0,F|0)|0;F=z;ua=AT(Ea|0,qa|0,26)|0;qa=tT($|0,b|0,ua|0,z|0)|0;ua=z;b=sT(db|0,ha|0,33554432,0)|0;$=yT(b|0,z|0,26)|0;b=z;Ea=sT($|0,b|0,s|0,R|0)|0;R=z;s=AT($|0,b|0,26)|0;b=tT(db|0,ha|0,s|0,z|0)|0;s=z;ha=sT(pa|0,F|0,16777216,0)|0;db=yT(ha|0,z|0,25)|0;ha=z;$=sT(db|0,ha|0,Qa|0,ca|0)|0;ca=z;Qa=AT(db|0,ha|0,25)|0;ha=tT(pa|0,F|0,Qa|0,z|0)|0;Qa=z;F=sT(Ea|0,R|0,16777216,0)|0;pa=yT(F|0,z|0,25)|0;F=z;db=sT(pa|0,F|0,Ma|0,ma|0)|0;ma=z;Ma=AT(pa|0,F|0,25)|0;F=tT(Ea|0,R|0,Ma|0,z|0)|0;Ma=z;R=sT($|0,ca|0,33554432,0)|0;Ea=yT(R|0,z|0,26)|0;R=z;pa=sT(Ea|0,R|0,Ta|0,L|0)|0;L=z;Ta=AT(Ea|0,R|0,26)|0;R=tT($|0,ca|0,Ta|0,z|0)|0;Ta=sT(db|0,ma|0,33554432,0)|0;ca=yT(Ta|0,z|0,26)|0;Ta=z;$=sT(ca|0,Ta|0,Fa|0,X|0)|0;X=z;Fa=AT(ca|0,Ta|0,26)|0;Ta=tT(db|0,ma|0,Fa|0,z|0)|0;Fa=sT(pa|0,L|0,16777216,0)|0;ma=yT(Fa|0,z|0,25)|0;Fa=z;db=sT(ma|0,Fa|0,b|0,s|0)|0;s=z;b=AT(ma|0,Fa|0,25)|0;Fa=tT(pa|0,L|0,b|0,z|0)|0;b=sT($|0,X|0,16777216,0)|0;L=yT(b|0,z|0,25)|0;b=z;pa=sT(L|0,b|0,W|0,_|0)|0;_=z;W=AT(L|0,b|0,25)|0;b=tT($|0,X|0,W|0,z|0)|0;W=sT(db|0,s|0,33554432,0)|0;X=yT(W|0,z|0,26)|0;W=z;$=sT(F|0,Ma|0,X|0,W|0)|0;Ma=AT(X|0,W|0,26)|0;W=tT(db|0,s|0,Ma|0,z|0)|0;Ma=sT(pa|0,_|0,33554432,0)|0;s=yT(Ma|0,z|0,26)|0;Ma=z;db=sT(s|0,Ma|0,Z|0,d|0)|0;d=z;Z=AT(s|0,Ma|0,26)|0;Ma=tT(pa|0,_|0,Z|0,z|0)|0;Z=sT(db|0,d|0,16777216,0)|0;_=yT(Z|0,z|0,25)|0;Z=z;pa=rT(_|0,Z|0,19,0)|0;s=sT(pa|0,z|0,qa|0,ua|0)|0;ua=z;qa=AT(_|0,Z|0,25)|0;Z=tT(db|0,d|0,qa|0,z|0)|0;qa=sT(s|0,ua|0,33554432,0)|0;d=yT(qa|0,z|0,26)|0;qa=z;db=sT(ha|0,Qa|0,d|0,qa|0)|0;Qa=AT(d|0,qa|0,26)|0;qa=tT(s|0,ua|0,Qa|0,z|0)|0;c[a>>2]=qa;c[a+4>>2]=db;c[a+8>>2]=R;c[a+12>>2]=Fa;c[a+16>>2]=W;c[a+20>>2]=$;c[a+24>>2]=Ta;c[a+28>>2]=b;c[a+32>>2]=Ma;c[a+36>>2]=Z;return}function vE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;d=l;l=l+48|0;e=d;f=b+40|0;ID(a,f,b);g=a+40|0;RD(g,f,b);f=a+80|0;OD(f,a,c);OD(g,g,c+40|0);h=a+120|0;OD(h,c+120|0,b+120|0);OD(a,b+80|0,c+80|0);ID(e,a,a);RD(a,f,g);ID(g,f,g);ID(f,e,h);RD(h,e,h);l=d;return}function wE(a){a=a|0;GD(a);HD(a+40|0);HD(a+80|0);GD(a+120|0);return}function xE(a){a=a|0;HD(a);HD(a+40|0);GD(a+80|0);return}function yE(){zE(0);return}function zE(a){a=a|0;Ab(7232,85459);nb(7248,85464,1,1,0);wb(7256,85469,1,-128,127);wb(7272,85474,1,-128,127);wb(7264,85486,1,0,255);wb(7280,85500,2,-32768,32767);wb(7288,85506,2,0,65535);wb(7296,85521,4,-2147483648,2147483647);wb(7304,85525,4,0,-1);wb(7312,85538,4,-2147483648,2147483647);wb(7320,85543,4,0,-1);vb(7328,85557,4);vb(7336,85563,8);yb(136,85570);yb(5592,85582);zb(5616,4,85615);sb(288,85628);xb(5640,0,85644);xb(5648,0,85674);xb(80,1,85711);xb(5656,2,85750);xb(5664,3,85781);xb(5672,4,85821);xb(5680,5,85850);xb(5688,4,85888);xb(5696,5,85918);xb(5648,0,85957);xb(80,1,85989);xb(5656,2,86022);xb(5664,3,86055);xb(5672,4,86089);xb(5680,5,86122);xb(5704,6,86156);xb(5712,7,86187);xb(5720,7,86219);return}function AE(a){a=a|0;return qG(c[a+4>>2]|0)|0}function BE(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0;b=l;l=l+16|0;d=b;do if(a>>>0<245){e=a>>>0<11?16:a+11&-8;f=e>>>3;g=c[25583]|0;h=g>>>f;if(h&3|0){i=(h&1^1)+f|0;j=102372+(i<<1<<2)|0;k=j+8|0;m=c[k>>2]|0;n=m+8|0;o=c[n>>2]|0;if((o|0)==(j|0))c[25583]=g&~(1<<i);else{c[o+12>>2]=j;c[k>>2]=o}o=i<<3;c[m+4>>2]=o|3;i=m+o+4|0;c[i>>2]=c[i>>2]|1;p=n;l=b;return p|0}n=c[25585]|0;if(e>>>0>n>>>0){if(h|0){i=2<<f;o=h<<f&(i|0-i);i=(o&0-o)+-1|0;o=i>>>12&16;f=i>>>o;i=f>>>5&8;h=f>>>i;f=h>>>2&4;m=h>>>f;h=m>>>1&2;k=m>>>h;m=k>>>1&1;j=(i|o|f|h|m)+(k>>>m)|0;m=102372+(j<<1<<2)|0;k=m+8|0;h=c[k>>2]|0;f=h+8|0;o=c[f>>2]|0;if((o|0)==(m|0)){i=g&~(1<<j);c[25583]=i;q=i}else{c[o+12>>2]=m;c[k>>2]=o;q=g}o=j<<3;j=o-e|0;c[h+4>>2]=e|3;k=h+e|0;c[k+4>>2]=j|1;c[h+o>>2]=j;if(n|0){o=c[25588]|0;h=n>>>3;m=102372+(h<<1<<2)|0;i=1<<h;if(!(q&i)){c[25583]=q|i;r=m;s=m+8|0}else{i=m+8|0;r=c[i>>2]|0;s=i}c[s>>2]=o;c[r+12>>2]=o;c[o+8>>2]=r;c[o+12>>2]=m}c[25585]=j;c[25588]=k;p=f;l=b;return p|0}f=c[25584]|0;if(f){k=(f&0-f)+-1|0;j=k>>>12&16;m=k>>>j;k=m>>>5&8;o=m>>>k;m=o>>>2&4;i=o>>>m;o=i>>>1&2;h=i>>>o;i=h>>>1&1;t=c[102636+((k|j|m|o|i)+(h>>>i)<<2)>>2]|0;i=(c[t+4>>2]&-8)-e|0;h=c[t+16+(((c[t+16>>2]|0)==0&1)<<2)>>2]|0;if(!h){u=t;v=i}else{o=t;t=i;i=h;while(1){h=(c[i+4>>2]&-8)-e|0;m=h>>>0<t>>>0;j=m?h:t;h=m?i:o;i=c[i+16+(((c[i+16>>2]|0)==0&1)<<2)>>2]|0;if(!i){u=h;v=j;break}else{o=h;t=j}}}t=u+e|0;if(t>>>0>u>>>0){o=c[u+24>>2]|0;i=c[u+12>>2]|0;do if((i|0)==(u|0)){j=u+20|0;h=c[j>>2]|0;if(!h){m=u+16|0;k=c[m>>2]|0;if(!k){w=0;break}else{x=k;y=m}}else{x=h;y=j}while(1){j=x+20|0;h=c[j>>2]|0;if(h|0){x=h;y=j;continue}j=x+16|0;h=c[j>>2]|0;if(!h)break;else{x=h;y=j}}c[y>>2]=0;w=x}else{j=c[u+8>>2]|0;c[j+12>>2]=i;c[i+8>>2]=j;w=i}while(0);do if(o|0){i=c[u+28>>2]|0;j=102636+(i<<2)|0;if((u|0)==(c[j>>2]|0)){c[j>>2]=w;if(!w){c[25584]=f&~(1<<i);break}}else{c[o+16+(((c[o+16>>2]|0)!=(u|0)&1)<<2)>>2]=w;if(!w)break}c[w+24>>2]=o;i=c[u+16>>2]|0;if(i|0){c[w+16>>2]=i;c[i+24>>2]=w}i=c[u+20>>2]|0;if(i|0){c[w+20>>2]=i;c[i+24>>2]=w}}while(0);if(v>>>0<16){o=v+e|0;c[u+4>>2]=o|3;f=u+o+4|0;c[f>>2]=c[f>>2]|1}else{c[u+4>>2]=e|3;c[t+4>>2]=v|1;c[t+v>>2]=v;if(n|0){f=c[25588]|0;o=n>>>3;i=102372+(o<<1<<2)|0;j=1<<o;if(!(g&j)){c[25583]=g|j;z=i;A=i+8|0}else{j=i+8|0;z=c[j>>2]|0;A=j}c[A>>2]=f;c[z+12>>2]=f;c[f+8>>2]=z;c[f+12>>2]=i}c[25585]=v;c[25588]=t}p=u+8|0;l=b;return p|0}else B=e}else B=e}else B=e}else if(a>>>0<=4294967231){i=a+11|0;f=i&-8;j=c[25584]|0;if(j){o=0-f|0;h=i>>>8;if(h)if(f>>>0>16777215)C=31;else{i=(h+1048320|0)>>>16&8;m=h<<i;h=(m+520192|0)>>>16&4;k=m<<h;m=(k+245760|0)>>>16&2;D=14-(h|i|m)+(k<<m>>>15)|0;C=f>>>(D+7|0)&1|D<<1}else C=0;D=c[102636+(C<<2)>>2]|0;a:do if(!D){E=0;F=0;G=o;H=57}else{m=0;k=o;i=D;h=f<<((C|0)==31?0:25-(C>>>1)|0);I=0;while(1){J=(c[i+4>>2]&-8)-f|0;if(J>>>0<k>>>0)if(!J){K=0;L=i;M=i;H=61;break a}else{N=i;O=J}else{N=m;O=k}J=c[i+20>>2]|0;i=c[i+16+(h>>>31<<2)>>2]|0;P=(J|0)==0|(J|0)==(i|0)?I:J;J=(i|0)==0;if(J){E=P;F=N;G=O;H=57;break}else{m=N;k=O;h=h<<((J^1)&1);I=P}}}while(0);if((H|0)==57){if((E|0)==0&(F|0)==0){D=2<<C;o=j&(D|0-D);if(!o){B=f;break}D=(o&0-o)+-1|0;o=D>>>12&16;e=D>>>o;D=e>>>5&8;t=e>>>D;e=t>>>2&4;g=t>>>e;t=g>>>1&2;n=g>>>t;g=n>>>1&1;Q=0;R=c[102636+((D|o|e|t|g)+(n>>>g)<<2)>>2]|0}else{Q=F;R=E}if(!R){S=Q;T=G}else{K=G;L=R;M=Q;H=61}}if((H|0)==61)while(1){H=0;g=(c[L+4>>2]&-8)-f|0;n=g>>>0<K>>>0;t=n?g:K;g=n?L:M;L=c[L+16+(((c[L+16>>2]|0)==0&1)<<2)>>2]|0;if(!L){S=g;T=t;break}else{K=t;M=g;H=61}}if((S|0)!=0?T>>>0<((c[25585]|0)-f|0)>>>0:0){g=S+f|0;if(g>>>0<=S>>>0){p=0;l=b;return p|0}t=c[S+24>>2]|0;n=c[S+12>>2]|0;do if((n|0)==(S|0)){e=S+20|0;o=c[e>>2]|0;if(!o){D=S+16|0;I=c[D>>2]|0;if(!I){U=0;break}else{V=I;W=D}}else{V=o;W=e}while(1){e=V+20|0;o=c[e>>2]|0;if(o|0){V=o;W=e;continue}e=V+16|0;o=c[e>>2]|0;if(!o)break;else{V=o;W=e}}c[W>>2]=0;U=V}else{e=c[S+8>>2]|0;c[e+12>>2]=n;c[n+8>>2]=e;U=n}while(0);do if(t){n=c[S+28>>2]|0;e=102636+(n<<2)|0;if((S|0)==(c[e>>2]|0)){c[e>>2]=U;if(!U){e=j&~(1<<n);c[25584]=e;X=e;break}}else{c[t+16+(((c[t+16>>2]|0)!=(S|0)&1)<<2)>>2]=U;if(!U){X=j;break}}c[U+24>>2]=t;e=c[S+16>>2]|0;if(e|0){c[U+16>>2]=e;c[e+24>>2]=U}e=c[S+20>>2]|0;if(e){c[U+20>>2]=e;c[e+24>>2]=U;X=j}else X=j}else X=j;while(0);do if(T>>>0>=16){c[S+4>>2]=f|3;c[g+4>>2]=T|1;c[g+T>>2]=T;j=T>>>3;if(T>>>0<256){t=102372+(j<<1<<2)|0;e=c[25583]|0;n=1<<j;if(!(e&n)){c[25583]=e|n;Y=t;Z=t+8|0}else{n=t+8|0;Y=c[n>>2]|0;Z=n}c[Z>>2]=g;c[Y+12>>2]=g;c[g+8>>2]=Y;c[g+12>>2]=t;break}t=T>>>8;if(t)if(T>>>0>16777215)_=31;else{n=(t+1048320|0)>>>16&8;e=t<<n;t=(e+520192|0)>>>16&4;j=e<<t;e=(j+245760|0)>>>16&2;o=14-(t|n|e)+(j<<e>>>15)|0;_=T>>>(o+7|0)&1|o<<1}else _=0;o=102636+(_<<2)|0;c[g+28>>2]=_;e=g+16|0;c[e+4>>2]=0;c[e>>2]=0;e=1<<_;if(!(X&e)){c[25584]=X|e;c[o>>2]=g;c[g+24>>2]=o;c[g+12>>2]=g;c[g+8>>2]=g;break}e=T<<((_|0)==31?0:25-(_>>>1)|0);j=c[o>>2]|0;while(1){if((c[j+4>>2]&-8|0)==(T|0)){H=97;break}$=j+16+(e>>>31<<2)|0;o=c[$>>2]|0;if(!o){H=96;break}else{e=e<<1;j=o}}if((H|0)==96){c[$>>2]=g;c[g+24>>2]=j;c[g+12>>2]=g;c[g+8>>2]=g;break}else if((H|0)==97){e=j+8|0;o=c[e>>2]|0;c[o+12>>2]=g;c[e>>2]=g;c[g+8>>2]=o;c[g+12>>2]=j;c[g+24>>2]=0;break}}else{o=T+f|0;c[S+4>>2]=o|3;e=S+o+4|0;c[e>>2]=c[e>>2]|1}while(0);p=S+8|0;l=b;return p|0}else B=f}else B=f}else B=-1;while(0);S=c[25585]|0;if(S>>>0>=B>>>0){T=S-B|0;$=c[25588]|0;if(T>>>0>15){_=$+B|0;c[25588]=_;c[25585]=T;c[_+4>>2]=T|1;c[$+S>>2]=T;c[$+4>>2]=B|3}else{c[25585]=0;c[25588]=0;c[$+4>>2]=S|3;T=$+S+4|0;c[T>>2]=c[T>>2]|1}p=$+8|0;l=b;return p|0}$=c[25586]|0;if($>>>0>B>>>0){T=$-B|0;c[25586]=T;S=c[25589]|0;_=S+B|0;c[25589]=_;c[_+4>>2]=T|1;c[S+4>>2]=B|3;p=S+8|0;l=b;return p|0}if(!(c[25701]|0)){c[25703]=4096;c[25702]=4096;c[25704]=-1;c[25705]=-1;c[25706]=0;c[25694]=0;c[25701]=d&-16^1431655768;aa=4096}else aa=c[25703]|0;d=B+48|0;S=B+47|0;T=aa+S|0;_=0-aa|0;aa=T&_;if(aa>>>0<=B>>>0){p=0;l=b;return p|0}X=c[25693]|0;if(X|0?(Y=c[25691]|0,Z=Y+aa|0,Z>>>0<=Y>>>0|Z>>>0>X>>>0):0){p=0;l=b;return p|0}b:do if(!(c[25694]&4)){X=c[25589]|0;c:do if(X){Z=102780;while(1){Y=c[Z>>2]|0;if(Y>>>0<=X>>>0?(ba=Z+4|0,(Y+(c[ba>>2]|0)|0)>>>0>X>>>0):0)break;Y=c[Z+8>>2]|0;if(!Y){H=118;break c}else Z=Y}j=T-$&_;if(j>>>0<2147483647){Y=IT(j|0)|0;if((Y|0)==((c[Z>>2]|0)+(c[ba>>2]|0)|0))if((Y|0)==(-1|0))ca=j;else{da=j;ea=Y;H=135;break b}else{fa=Y;ga=j;H=126}}else ca=0}else H=118;while(0);do if((H|0)==118){X=IT(0)|0;if((X|0)!=(-1|0)?(f=X,j=c[25702]|0,Y=j+-1|0,U=((Y&f|0)==0?0:(Y+f&0-j)-f|0)+aa|0,f=c[25691]|0,j=U+f|0,U>>>0>B>>>0&U>>>0<2147483647):0){Y=c[25693]|0;if(Y|0?j>>>0<=f>>>0|j>>>0>Y>>>0:0){ca=0;break}Y=IT(U|0)|0;if((Y|0)==(X|0)){da=U;ea=X;H=135;break b}else{fa=Y;ga=U;H=126}}else ca=0}while(0);do if((H|0)==126){U=0-ga|0;if(!(d>>>0>ga>>>0&(ga>>>0<2147483647&(fa|0)!=(-1|0))))if((fa|0)==(-1|0)){ca=0;break}else{da=ga;ea=fa;H=135;break b}Y=c[25703]|0;X=S-ga+Y&0-Y;if(X>>>0>=2147483647){da=ga;ea=fa;H=135;break b}if((IT(X|0)|0)==(-1|0)){IT(U|0)|0;ca=0;break}else{da=X+ga|0;ea=fa;H=135;break b}}while(0);c[25694]=c[25694]|4;ha=ca;H=133}else{ha=0;H=133}while(0);if(((H|0)==133?aa>>>0<2147483647:0)?(ca=IT(aa|0)|0,aa=IT(0)|0,fa=aa-ca|0,ga=fa>>>0>(B+40|0)>>>0,!((ca|0)==(-1|0)|ga^1|ca>>>0<aa>>>0&((ca|0)!=(-1|0)&(aa|0)!=(-1|0))^1)):0){da=ga?fa:ha;ea=ca;H=135}if((H|0)==135){ca=(c[25691]|0)+da|0;c[25691]=ca;if(ca>>>0>(c[25692]|0)>>>0)c[25692]=ca;ca=c[25589]|0;do if(ca){ha=102780;while(1){ia=c[ha>>2]|0;ja=ha+4|0;ka=c[ja>>2]|0;if((ea|0)==(ia+ka|0)){H=143;break}fa=c[ha+8>>2]|0;if(!fa)break;else ha=fa}if(((H|0)==143?(c[ha+12>>2]&8|0)==0:0)?ea>>>0>ca>>>0&ia>>>0<=ca>>>0:0){c[ja>>2]=ka+da;fa=(c[25586]|0)+da|0;ga=ca+8|0;aa=(ga&7|0)==0?0:0-ga&7;ga=ca+aa|0;S=fa-aa|0;c[25589]=ga;c[25586]=S;c[ga+4>>2]=S|1;c[ca+fa+4>>2]=40;c[25590]=c[25705];break}if(ea>>>0<(c[25587]|0)>>>0)c[25587]=ea;fa=ea+da|0;S=102780;while(1){if((c[S>>2]|0)==(fa|0)){H=151;break}ga=c[S+8>>2]|0;if(!ga){la=102780;break}else S=ga}if((H|0)==151)if(!(c[S+12>>2]&8)){c[S>>2]=ea;ha=S+4|0;c[ha>>2]=(c[ha>>2]|0)+da;ha=ea+8|0;ga=ea+((ha&7|0)==0?0:0-ha&7)|0;ha=fa+8|0;aa=fa+((ha&7|0)==0?0:0-ha&7)|0;ha=ga+B|0;d=aa-ga-B|0;c[ga+4>>2]=B|3;do if((ca|0)!=(aa|0)){if((c[25588]|0)==(aa|0)){ba=(c[25585]|0)+d|0;c[25585]=ba;c[25588]=ha;c[ha+4>>2]=ba|1;c[ha+ba>>2]=ba;break}ba=c[aa+4>>2]|0;if((ba&3|0)==1){_=ba&-8;$=ba>>>3;d:do if(ba>>>0<256){T=c[aa+8>>2]|0;X=c[aa+12>>2]|0;if((X|0)==(T|0)){c[25583]=c[25583]&~(1<<$);break}else{c[T+12>>2]=X;c[X+8>>2]=T;break}}else{T=c[aa+24>>2]|0;X=c[aa+12>>2]|0;do if((X|0)==(aa|0)){U=aa+16|0;Y=U+4|0;j=c[Y>>2]|0;if(!j){f=c[U>>2]|0;if(!f){ma=0;break}else{na=f;oa=U}}else{na=j;oa=Y}while(1){Y=na+20|0;j=c[Y>>2]|0;if(j|0){na=j;oa=Y;continue}Y=na+16|0;j=c[Y>>2]|0;if(!j)break;else{na=j;oa=Y}}c[oa>>2]=0;ma=na}else{Y=c[aa+8>>2]|0;c[Y+12>>2]=X;c[X+8>>2]=Y;ma=X}while(0);if(!T)break;X=c[aa+28>>2]|0;Y=102636+(X<<2)|0;do if((c[Y>>2]|0)!=(aa|0)){c[T+16+(((c[T+16>>2]|0)!=(aa|0)&1)<<2)>>2]=ma;if(!ma)break d}else{c[Y>>2]=ma;if(ma|0)break;c[25584]=c[25584]&~(1<<X);break d}while(0);c[ma+24>>2]=T;X=aa+16|0;Y=c[X>>2]|0;if(Y|0){c[ma+16>>2]=Y;c[Y+24>>2]=ma}Y=c[X+4>>2]|0;if(!Y)break;c[ma+20>>2]=Y;c[Y+24>>2]=ma}while(0);pa=aa+_|0;qa=_+d|0}else{pa=aa;qa=d}$=pa+4|0;c[$>>2]=c[$>>2]&-2;c[ha+4>>2]=qa|1;c[ha+qa>>2]=qa;$=qa>>>3;if(qa>>>0<256){ba=102372+($<<1<<2)|0;Z=c[25583]|0;Y=1<<$;if(!(Z&Y)){c[25583]=Z|Y;ra=ba;sa=ba+8|0}else{Y=ba+8|0;ra=c[Y>>2]|0;sa=Y}c[sa>>2]=ha;c[ra+12>>2]=ha;c[ha+8>>2]=ra;c[ha+12>>2]=ba;break}ba=qa>>>8;do if(!ba)ta=0;else{if(qa>>>0>16777215){ta=31;break}Y=(ba+1048320|0)>>>16&8;Z=ba<<Y;$=(Z+520192|0)>>>16&4;X=Z<<$;Z=(X+245760|0)>>>16&2;j=14-($|Y|Z)+(X<<Z>>>15)|0;ta=qa>>>(j+7|0)&1|j<<1}while(0);ba=102636+(ta<<2)|0;c[ha+28>>2]=ta;_=ha+16|0;c[_+4>>2]=0;c[_>>2]=0;_=c[25584]|0;j=1<<ta;if(!(_&j)){c[25584]=_|j;c[ba>>2]=ha;c[ha+24>>2]=ba;c[ha+12>>2]=ha;c[ha+8>>2]=ha;break}j=qa<<((ta|0)==31?0:25-(ta>>>1)|0);_=c[ba>>2]|0;while(1){if((c[_+4>>2]&-8|0)==(qa|0)){H=192;break}ua=_+16+(j>>>31<<2)|0;ba=c[ua>>2]|0;if(!ba){H=191;break}else{j=j<<1;_=ba}}if((H|0)==191){c[ua>>2]=ha;c[ha+24>>2]=_;c[ha+12>>2]=ha;c[ha+8>>2]=ha;break}else if((H|0)==192){j=_+8|0;ba=c[j>>2]|0;c[ba+12>>2]=ha;c[j>>2]=ha;c[ha+8>>2]=ba;c[ha+12>>2]=_;c[ha+24>>2]=0;break}}else{ba=(c[25586]|0)+d|0;c[25586]=ba;c[25589]=ha;c[ha+4>>2]=ba|1}while(0);p=ga+8|0;l=b;return p|0}else la=102780;while(1){ha=c[la>>2]|0;if(ha>>>0<=ca>>>0?(va=ha+(c[la+4>>2]|0)|0,va>>>0>ca>>>0):0)break;la=c[la+8>>2]|0}ga=va+-47|0;ha=ga+8|0;d=ga+((ha&7|0)==0?0:0-ha&7)|0;ha=ca+16|0;ga=d>>>0<ha>>>0?ca:d;d=ga+8|0;aa=da+-40|0;fa=ea+8|0;S=(fa&7|0)==0?0:0-fa&7;fa=ea+S|0;ba=aa-S|0;c[25589]=fa;c[25586]=ba;c[fa+4>>2]=ba|1;c[ea+aa+4>>2]=40;c[25590]=c[25705];aa=ga+4|0;c[aa>>2]=27;c[d>>2]=c[25695];c[d+4>>2]=c[25696];c[d+8>>2]=c[25697];c[d+12>>2]=c[25698];c[25695]=ea;c[25696]=da;c[25698]=0;c[25697]=d;d=ga+24|0;do{ba=d;d=d+4|0;c[d>>2]=7}while((ba+8|0)>>>0<va>>>0);if((ga|0)!=(ca|0)){d=ga-ca|0;c[aa>>2]=c[aa>>2]&-2;c[ca+4>>2]=d|1;c[ga>>2]=d;ba=d>>>3;if(d>>>0<256){fa=102372+(ba<<1<<2)|0;S=c[25583]|0;j=1<<ba;if(!(S&j)){c[25583]=S|j;wa=fa;xa=fa+8|0}else{j=fa+8|0;wa=c[j>>2]|0;xa=j}c[xa>>2]=ca;c[wa+12>>2]=ca;c[ca+8>>2]=wa;c[ca+12>>2]=fa;break}fa=d>>>8;if(fa)if(d>>>0>16777215)ya=31;else{j=(fa+1048320|0)>>>16&8;S=fa<<j;fa=(S+520192|0)>>>16&4;ba=S<<fa;S=(ba+245760|0)>>>16&2;Z=14-(fa|j|S)+(ba<<S>>>15)|0;ya=d>>>(Z+7|0)&1|Z<<1}else ya=0;Z=102636+(ya<<2)|0;c[ca+28>>2]=ya;c[ca+20>>2]=0;c[ha>>2]=0;S=c[25584]|0;ba=1<<ya;if(!(S&ba)){c[25584]=S|ba;c[Z>>2]=ca;c[ca+24>>2]=Z;c[ca+12>>2]=ca;c[ca+8>>2]=ca;break}ba=d<<((ya|0)==31?0:25-(ya>>>1)|0);S=c[Z>>2]|0;while(1){if((c[S+4>>2]&-8|0)==(d|0)){H=213;break}za=S+16+(ba>>>31<<2)|0;Z=c[za>>2]|0;if(!Z){H=212;break}else{ba=ba<<1;S=Z}}if((H|0)==212){c[za>>2]=ca;c[ca+24>>2]=S;c[ca+12>>2]=ca;c[ca+8>>2]=ca;break}else if((H|0)==213){ba=S+8|0;d=c[ba>>2]|0;c[d+12>>2]=ca;c[ba>>2]=ca;c[ca+8>>2]=d;c[ca+12>>2]=S;c[ca+24>>2]=0;break}}}else{d=c[25587]|0;if((d|0)==0|ea>>>0<d>>>0)c[25587]=ea;c[25695]=ea;c[25696]=da;c[25698]=0;c[25592]=c[25701];c[25591]=-1;c[25596]=102372;c[25595]=102372;c[25598]=102380;c[25597]=102380;c[25600]=102388;c[25599]=102388;c[25602]=102396;c[25601]=102396;c[25604]=102404;c[25603]=102404;c[25606]=102412;c[25605]=102412;c[25608]=102420;c[25607]=102420;c[25610]=102428;c[25609]=102428;c[25612]=102436;c[25611]=102436;c[25614]=102444;c[25613]=102444;c[25616]=102452;c[25615]=102452;c[25618]=102460;c[25617]=102460;c[25620]=102468;c[25619]=102468;c[25622]=102476;c[25621]=102476;c[25624]=102484;c[25623]=102484;c[25626]=102492;c[25625]=102492;c[25628]=102500;c[25627]=102500;c[25630]=102508;c[25629]=102508;c[25632]=102516;c[25631]=102516;c[25634]=102524;c[25633]=102524;c[25636]=102532;c[25635]=102532;c[25638]=102540;c[25637]=102540;c[25640]=102548;c[25639]=102548;c[25642]=102556;c[25641]=102556;c[25644]=102564;c[25643]=102564;c[25646]=102572;c[25645]=102572;c[25648]=102580;c[25647]=102580;c[25650]=102588;c[25649]=102588;c[25652]=102596;c[25651]=102596;c[25654]=102604;c[25653]=102604;c[25656]=102612;c[25655]=102612;c[25658]=102620;c[25657]=102620;d=da+-40|0;ba=ea+8|0;ha=(ba&7|0)==0?0:0-ba&7;ba=ea+ha|0;ga=d-ha|0;c[25589]=ba;c[25586]=ga;c[ba+4>>2]=ga|1;c[ea+d+4>>2]=40;c[25590]=c[25705]}while(0);ea=c[25586]|0;if(ea>>>0>B>>>0){da=ea-B|0;c[25586]=da;ea=c[25589]|0;ca=ea+B|0;c[25589]=ca;c[ca+4>>2]=da|1;c[ea+4>>2]=B|3;p=ea+8|0;l=b;return p|0}}c[(LE()|0)>>2]=12;p=0;l=b;return p|0}function CE(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;if(!a)return;b=a+-8|0;d=c[25587]|0;e=c[a+-4>>2]|0;a=e&-8;f=b+a|0;do if(!(e&1)){g=c[b>>2]|0;if(!(e&3))return;h=b+(0-g)|0;i=g+a|0;if(h>>>0<d>>>0)return;if((c[25588]|0)==(h|0)){j=f+4|0;k=c[j>>2]|0;if((k&3|0)!=3){l=h;m=i;n=h;break}c[25585]=i;c[j>>2]=k&-2;c[h+4>>2]=i|1;c[h+i>>2]=i;return}k=g>>>3;if(g>>>0<256){g=c[h+8>>2]|0;j=c[h+12>>2]|0;if((j|0)==(g|0)){c[25583]=c[25583]&~(1<<k);l=h;m=i;n=h;break}else{c[g+12>>2]=j;c[j+8>>2]=g;l=h;m=i;n=h;break}}g=c[h+24>>2]|0;j=c[h+12>>2]|0;do if((j|0)==(h|0)){k=h+16|0;o=k+4|0;p=c[o>>2]|0;if(!p){q=c[k>>2]|0;if(!q){r=0;break}else{s=q;t=k}}else{s=p;t=o}while(1){o=s+20|0;p=c[o>>2]|0;if(p|0){s=p;t=o;continue}o=s+16|0;p=c[o>>2]|0;if(!p)break;else{s=p;t=o}}c[t>>2]=0;r=s}else{o=c[h+8>>2]|0;c[o+12>>2]=j;c[j+8>>2]=o;r=j}while(0);if(g){j=c[h+28>>2]|0;o=102636+(j<<2)|0;if((c[o>>2]|0)==(h|0)){c[o>>2]=r;if(!r){c[25584]=c[25584]&~(1<<j);l=h;m=i;n=h;break}}else{c[g+16+(((c[g+16>>2]|0)!=(h|0)&1)<<2)>>2]=r;if(!r){l=h;m=i;n=h;break}}c[r+24>>2]=g;j=h+16|0;o=c[j>>2]|0;if(o|0){c[r+16>>2]=o;c[o+24>>2]=r}o=c[j+4>>2]|0;if(o){c[r+20>>2]=o;c[o+24>>2]=r;l=h;m=i;n=h}else{l=h;m=i;n=h}}else{l=h;m=i;n=h}}else{l=b;m=a;n=b}while(0);if(n>>>0>=f>>>0)return;b=f+4|0;a=c[b>>2]|0;if(!(a&1))return;if(!(a&2)){if((c[25589]|0)==(f|0)){r=(c[25586]|0)+m|0;c[25586]=r;c[25589]=l;c[l+4>>2]=r|1;if((l|0)!=(c[25588]|0))return;c[25588]=0;c[25585]=0;return}if((c[25588]|0)==(f|0)){r=(c[25585]|0)+m|0;c[25585]=r;c[25588]=n;c[l+4>>2]=r|1;c[n+r>>2]=r;return}r=(a&-8)+m|0;s=a>>>3;do if(a>>>0<256){t=c[f+8>>2]|0;d=c[f+12>>2]|0;if((d|0)==(t|0)){c[25583]=c[25583]&~(1<<s);break}else{c[t+12>>2]=d;c[d+8>>2]=t;break}}else{t=c[f+24>>2]|0;d=c[f+12>>2]|0;do if((d|0)==(f|0)){e=f+16|0;o=e+4|0;j=c[o>>2]|0;if(!j){p=c[e>>2]|0;if(!p){u=0;break}else{v=p;w=e}}else{v=j;w=o}while(1){o=v+20|0;j=c[o>>2]|0;if(j|0){v=j;w=o;continue}o=v+16|0;j=c[o>>2]|0;if(!j)break;else{v=j;w=o}}c[w>>2]=0;u=v}else{o=c[f+8>>2]|0;c[o+12>>2]=d;c[d+8>>2]=o;u=d}while(0);if(t|0){d=c[f+28>>2]|0;h=102636+(d<<2)|0;if((c[h>>2]|0)==(f|0)){c[h>>2]=u;if(!u){c[25584]=c[25584]&~(1<<d);break}}else{c[t+16+(((c[t+16>>2]|0)!=(f|0)&1)<<2)>>2]=u;if(!u)break}c[u+24>>2]=t;d=f+16|0;h=c[d>>2]|0;if(h|0){c[u+16>>2]=h;c[h+24>>2]=u}h=c[d+4>>2]|0;if(h|0){c[u+20>>2]=h;c[h+24>>2]=u}}}while(0);c[l+4>>2]=r|1;c[n+r>>2]=r;if((l|0)==(c[25588]|0)){c[25585]=r;return}else x=r}else{c[b>>2]=a&-2;c[l+4>>2]=m|1;c[n+m>>2]=m;x=m}m=x>>>3;if(x>>>0<256){n=102372+(m<<1<<2)|0;a=c[25583]|0;b=1<<m;if(!(a&b)){c[25583]=a|b;y=n;z=n+8|0}else{b=n+8|0;y=c[b>>2]|0;z=b}c[z>>2]=l;c[y+12>>2]=l;c[l+8>>2]=y;c[l+12>>2]=n;return}n=x>>>8;if(n)if(x>>>0>16777215)A=31;else{y=(n+1048320|0)>>>16&8;z=n<<y;n=(z+520192|0)>>>16&4;b=z<<n;z=(b+245760|0)>>>16&2;a=14-(n|y|z)+(b<<z>>>15)|0;A=x>>>(a+7|0)&1|a<<1}else A=0;a=102636+(A<<2)|0;c[l+28>>2]=A;c[l+20>>2]=0;c[l+16>>2]=0;z=c[25584]|0;b=1<<A;do if(z&b){y=x<<((A|0)==31?0:25-(A>>>1)|0);n=c[a>>2]|0;while(1){if((c[n+4>>2]&-8|0)==(x|0)){B=73;break}C=n+16+(y>>>31<<2)|0;m=c[C>>2]|0;if(!m){B=72;break}else{y=y<<1;n=m}}if((B|0)==72){c[C>>2]=l;c[l+24>>2]=n;c[l+12>>2]=l;c[l+8>>2]=l;break}else if((B|0)==73){y=n+8|0;t=c[y>>2]|0;c[t+12>>2]=l;c[y>>2]=l;c[l+8>>2]=t;c[l+12>>2]=n;c[l+24>>2]=0;break}}else{c[25584]=z|b;c[a>>2]=l;c[l+24>>2]=a;c[l+12>>2]=l;c[l+8>>2]=l}while(0);l=(c[25591]|0)+-1|0;c[25591]=l;if(!l)D=102788;else return;while(1){l=c[D>>2]|0;if(!l)break;else D=l+8|0}c[25591]=-1;return}function DE(a,b){a=a|0;b=b|0;var d=0,e=0;if(a){d=O(b,a)|0;if((b|a)>>>0>65535)e=((d>>>0)/(a>>>0)|0|0)==(b|0)?d:-1;else e=d}else e=0;d=BE(e)|0;if(!d)return d|0;if(!(c[d+-4>>2]&3))return d|0;ET(d|0,0,e|0)|0;return d|0}function EE(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if(!a){d=BE(b)|0;return d|0}if(b>>>0>4294967231){c[(LE()|0)>>2]=12;d=0;return d|0}e=FE(a+-8|0,b>>>0<11?16:b+11&-8)|0;if(e|0){d=e+8|0;return d|0}e=BE(b)|0;if(!e){d=0;return d|0}f=c[a+-4>>2]|0;g=(f&-8)-((f&3|0)==0?8:4)|0;CT(e|0,a|0,(g>>>0<b>>>0?g:b)|0)|0;CE(a);d=e;return d|0}function FE(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=a+4|0;e=c[d>>2]|0;f=e&-8;g=a+f|0;if(!(e&3)){if(b>>>0<256){h=0;return h|0}if(f>>>0>=(b+4|0)>>>0?(f-b|0)>>>0<=c[25703]<<1>>>0:0){h=a;return h|0}h=0;return h|0}if(f>>>0>=b>>>0){i=f-b|0;if(i>>>0<=15){h=a;return h|0}j=a+b|0;c[d>>2]=e&1|b|2;c[j+4>>2]=i|3;k=g+4|0;c[k>>2]=c[k>>2]|1;GE(j,i);h=a;return h|0}if((c[25589]|0)==(g|0)){i=(c[25586]|0)+f|0;j=i-b|0;k=a+b|0;if(i>>>0<=b>>>0){h=0;return h|0}c[d>>2]=e&1|b|2;c[k+4>>2]=j|1;c[25589]=k;c[25586]=j;h=a;return h|0}if((c[25588]|0)==(g|0)){j=(c[25585]|0)+f|0;if(j>>>0<b>>>0){h=0;return h|0}k=j-b|0;if(k>>>0>15){i=a+b|0;l=a+j|0;c[d>>2]=e&1|b|2;c[i+4>>2]=k|1;c[l>>2]=k;m=l+4|0;c[m>>2]=c[m>>2]&-2;n=i;o=k}else{c[d>>2]=e&1|j|2;k=a+j+4|0;c[k>>2]=c[k>>2]|1;n=0;o=0}c[25585]=o;c[25588]=n;h=a;return h|0}n=c[g+4>>2]|0;if(n&2|0){h=0;return h|0}o=(n&-8)+f|0;if(o>>>0<b>>>0){h=0;return h|0}f=o-b|0;k=n>>>3;do if(n>>>0<256){j=c[g+8>>2]|0;i=c[g+12>>2]|0;if((i|0)==(j|0)){c[25583]=c[25583]&~(1<<k);break}else{c[j+12>>2]=i;c[i+8>>2]=j;break}}else{j=c[g+24>>2]|0;i=c[g+12>>2]|0;do if((i|0)==(g|0)){m=g+16|0;l=m+4|0;p=c[l>>2]|0;if(!p){q=c[m>>2]|0;if(!q){r=0;break}else{s=q;t=m}}else{s=p;t=l}while(1){l=s+20|0;p=c[l>>2]|0;if(p|0){s=p;t=l;continue}l=s+16|0;p=c[l>>2]|0;if(!p)break;else{s=p;t=l}}c[t>>2]=0;r=s}else{l=c[g+8>>2]|0;c[l+12>>2]=i;c[i+8>>2]=l;r=i}while(0);if(j|0){i=c[g+28>>2]|0;l=102636+(i<<2)|0;if((c[l>>2]|0)==(g|0)){c[l>>2]=r;if(!r){c[25584]=c[25584]&~(1<<i);break}}else{c[j+16+(((c[j+16>>2]|0)!=(g|0)&1)<<2)>>2]=r;if(!r)break}c[r+24>>2]=j;i=g+16|0;l=c[i>>2]|0;if(l|0){c[r+16>>2]=l;c[l+24>>2]=r}l=c[i+4>>2]|0;if(l|0){c[r+20>>2]=l;c[l+24>>2]=r}}}while(0);if(f>>>0<16){c[d>>2]=o|e&1|2;r=a+o+4|0;c[r>>2]=c[r>>2]|1;h=a;return h|0}else{r=a+b|0;c[d>>2]=e&1|b|2;c[r+4>>2]=f|3;b=a+o+4|0;c[b>>2]=c[b>>2]|1;GE(r,f);h=a;return h|0}return 0}function GE(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=a+b|0;e=c[a+4>>2]|0;do if(!(e&1)){f=c[a>>2]|0;if(!(e&3))return;g=a+(0-f)|0;h=f+b|0;if((c[25588]|0)==(g|0)){i=d+4|0;j=c[i>>2]|0;if((j&3|0)!=3){k=g;l=h;break}c[25585]=h;c[i>>2]=j&-2;c[g+4>>2]=h|1;c[d>>2]=h;return}j=f>>>3;if(f>>>0<256){f=c[g+8>>2]|0;i=c[g+12>>2]|0;if((i|0)==(f|0)){c[25583]=c[25583]&~(1<<j);k=g;l=h;break}else{c[f+12>>2]=i;c[i+8>>2]=f;k=g;l=h;break}}f=c[g+24>>2]|0;i=c[g+12>>2]|0;do if((i|0)==(g|0)){j=g+16|0;m=j+4|0;n=c[m>>2]|0;if(!n){o=c[j>>2]|0;if(!o){p=0;break}else{q=o;r=j}}else{q=n;r=m}while(1){m=q+20|0;n=c[m>>2]|0;if(n|0){q=n;r=m;continue}m=q+16|0;n=c[m>>2]|0;if(!n)break;else{q=n;r=m}}c[r>>2]=0;p=q}else{m=c[g+8>>2]|0;c[m+12>>2]=i;c[i+8>>2]=m;p=i}while(0);if(f){i=c[g+28>>2]|0;m=102636+(i<<2)|0;if((c[m>>2]|0)==(g|0)){c[m>>2]=p;if(!p){c[25584]=c[25584]&~(1<<i);k=g;l=h;break}}else{c[f+16+(((c[f+16>>2]|0)!=(g|0)&1)<<2)>>2]=p;if(!p){k=g;l=h;break}}c[p+24>>2]=f;i=g+16|0;m=c[i>>2]|0;if(m|0){c[p+16>>2]=m;c[m+24>>2]=p}m=c[i+4>>2]|0;if(m){c[p+20>>2]=m;c[m+24>>2]=p;k=g;l=h}else{k=g;l=h}}else{k=g;l=h}}else{k=a;l=b}while(0);b=d+4|0;a=c[b>>2]|0;if(!(a&2)){if((c[25589]|0)==(d|0)){p=(c[25586]|0)+l|0;c[25586]=p;c[25589]=k;c[k+4>>2]=p|1;if((k|0)!=(c[25588]|0))return;c[25588]=0;c[25585]=0;return}if((c[25588]|0)==(d|0)){p=(c[25585]|0)+l|0;c[25585]=p;c[25588]=k;c[k+4>>2]=p|1;c[k+p>>2]=p;return}p=(a&-8)+l|0;q=a>>>3;do if(a>>>0<256){r=c[d+8>>2]|0;e=c[d+12>>2]|0;if((e|0)==(r|0)){c[25583]=c[25583]&~(1<<q);break}else{c[r+12>>2]=e;c[e+8>>2]=r;break}}else{r=c[d+24>>2]|0;e=c[d+12>>2]|0;do if((e|0)==(d|0)){m=d+16|0;i=m+4|0;n=c[i>>2]|0;if(!n){j=c[m>>2]|0;if(!j){s=0;break}else{t=j;u=m}}else{t=n;u=i}while(1){i=t+20|0;n=c[i>>2]|0;if(n|0){t=n;u=i;continue}i=t+16|0;n=c[i>>2]|0;if(!n)break;else{t=n;u=i}}c[u>>2]=0;s=t}else{i=c[d+8>>2]|0;c[i+12>>2]=e;c[e+8>>2]=i;s=e}while(0);if(r|0){e=c[d+28>>2]|0;h=102636+(e<<2)|0;if((c[h>>2]|0)==(d|0)){c[h>>2]=s;if(!s){c[25584]=c[25584]&~(1<<e);break}}else{c[r+16+(((c[r+16>>2]|0)!=(d|0)&1)<<2)>>2]=s;if(!s)break}c[s+24>>2]=r;e=d+16|0;h=c[e>>2]|0;if(h|0){c[s+16>>2]=h;c[h+24>>2]=s}h=c[e+4>>2]|0;if(h|0){c[s+20>>2]=h;c[h+24>>2]=s}}}while(0);c[k+4>>2]=p|1;c[k+p>>2]=p;if((k|0)==(c[25588]|0)){c[25585]=p;return}else v=p}else{c[b>>2]=a&-2;c[k+4>>2]=l|1;c[k+l>>2]=l;v=l}l=v>>>3;if(v>>>0<256){a=102372+(l<<1<<2)|0;b=c[25583]|0;p=1<<l;if(!(b&p)){c[25583]=b|p;w=a;x=a+8|0}else{p=a+8|0;w=c[p>>2]|0;x=p}c[x>>2]=k;c[w+12>>2]=k;c[k+8>>2]=w;c[k+12>>2]=a;return}a=v>>>8;if(a)if(v>>>0>16777215)y=31;else{w=(a+1048320|0)>>>16&8;x=a<<w;a=(x+520192|0)>>>16&4;p=x<<a;x=(p+245760|0)>>>16&2;b=14-(a|w|x)+(p<<x>>>15)|0;y=v>>>(b+7|0)&1|b<<1}else y=0;b=102636+(y<<2)|0;c[k+28>>2]=y;c[k+20>>2]=0;c[k+16>>2]=0;x=c[25584]|0;p=1<<y;if(!(x&p)){c[25584]=x|p;c[b>>2]=k;c[k+24>>2]=b;c[k+12>>2]=k;c[k+8>>2]=k;return}p=v<<((y|0)==31?0:25-(y>>>1)|0);y=c[b>>2]|0;while(1){if((c[y+4>>2]&-8|0)==(v|0)){z=69;break}A=y+16+(p>>>31<<2)|0;b=c[A>>2]|0;if(!b){z=68;break}else{p=p<<1;y=b}}if((z|0)==68){c[A>>2]=k;c[k+24>>2]=y;c[k+12>>2]=k;c[k+8>>2]=k;return}else if((z|0)==69){z=y+8|0;A=c[z>>2]|0;c[A+12>>2]=k;c[z>>2]=k;c[k+8>>2]=A;c[k+12>>2]=y;c[k+24>>2]=0;return}}function HE(a){a=a|0;var b=0,d=0;b=l;l=l+16|0;d=b;c[d>>2]=ME(c[a+60>>2]|0)|0;a=KE(hb(6,d|0)|0)|0;l=b;return a|0}function IE(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=l;l=l+48|0;f=e+16|0;g=e;h=e+32|0;i=a+28|0;j=c[i>>2]|0;c[h>>2]=j;k=a+20|0;m=(c[k>>2]|0)-j|0;c[h+4>>2]=m;c[h+8>>2]=b;c[h+12>>2]=d;b=m+d|0;m=a+60|0;c[g>>2]=c[m>>2];c[g+4>>2]=h;c[g+8>>2]=2;j=KE(db(146,g|0)|0)|0;a:do if((b|0)!=(j|0)){g=2;n=b;o=h;p=j;while(1){if((p|0)<0)break;n=n-p|0;q=c[o+4>>2]|0;r=p>>>0>q>>>0;s=r?o+8|0:o;t=g+(r<<31>>31)|0;u=p-(r?q:0)|0;c[s>>2]=(c[s>>2]|0)+u;q=s+4|0;c[q>>2]=(c[q>>2]|0)-u;c[f>>2]=c[m>>2];c[f+4>>2]=s;c[f+8>>2]=t;p=KE(db(146,f|0)|0)|0;if((n|0)==(p|0)){v=3;break a}else{g=t;o=s}}c[a+16>>2]=0;c[i>>2]=0;c[k>>2]=0;c[a>>2]=c[a>>2]|32;if((g|0)==2)w=0;else w=d-(c[o+4>>2]|0)|0}else v=3;while(0);if((v|0)==3){v=c[a+44>>2]|0;c[a+16>>2]=v+(c[a+48>>2]|0);a=v;c[i>>2]=a;c[k>>2]=a;w=d}l=e;return w|0}function JE(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=l;l=l+32|0;f=e;g=e+20|0;c[f>>2]=c[a+60>>2];c[f+4>>2]=0;c[f+8>>2]=b;c[f+12>>2]=g;c[f+16>>2]=d;if((KE(bb(140,f|0)|0)|0)<0){c[g>>2]=-1;h=-1}else h=c[g>>2]|0;l=e;return h|0}function KE(a){a=a|0;var b=0;if(a>>>0>4294963200){c[(LE()|0)>>2]=0-a;b=-1}else b=a;return b|0}function LE(){return 102916}function ME(a){a=a|0;return a|0}function NE(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;f=l;l=l+32|0;g=f;h=f+16|0;c[h>>2]=d;i=h+4|0;j=b+48|0;k=c[j>>2]|0;c[i>>2]=e-((k|0)!=0&1);m=b+44|0;c[h+8>>2]=c[m>>2];c[h+12>>2]=k;c[g>>2]=c[b+60>>2];c[g+4>>2]=h;c[g+8>>2]=2;h=KE(cb(145,g|0)|0)|0;if((h|0)>=1){g=c[i>>2]|0;if(h>>>0>g>>>0){i=c[m>>2]|0;m=b+4|0;c[m>>2]=i;k=i;c[b+8>>2]=k+(h-g);if(!(c[j>>2]|0))n=e;else{c[m>>2]=k+1;a[d+(e+-1)>>0]=a[k>>0]|0;n=e}}else n=h}else{c[b>>2]=c[b>>2]|h&48^16;n=h}l=f;return n|0}function OE(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=l;l=l+32|0;g=f;c[b+36>>2]=34;if((c[b>>2]&64|0)==0?(c[g>>2]=c[b+60>>2],c[g+4>>2]=21523,c[g+8>>2]=f+16,gb(54,g|0)|0):0)a[b+75>>0]=-1;g=IE(b,d,e)|0;l=f;return g|0}function PE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=QE(a,b,c)|0;return d|0}function QE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=RE(a,b,c,-1,-1)|0;return d|0}function RE(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=l;l=l+128|0;h=g;c[h>>2]=0;i=h+4|0;c[i>>2]=a;c[h+44>>2]=a;j=h+8|0;c[j>>2]=(a|0)<0?-1:a+2147483647|0;c[h+76>>2]=-1;SE(h,0);k=TE(h,d,1,e,f)|0;if(b|0)c[b>>2]=a+((c[i>>2]|0)+(c[h+108>>2]|0)-(c[j>>2]|0));l=g;return k|0}function SE(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a+104>>2]=b;d=c[a+8>>2]|0;e=c[a+4>>2]|0;f=d-e|0;c[a+108>>2]=f;c[a+100>>2]=(b|0)!=0&(f|0)>(b|0)?e+b|0:d;return}function TE(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;a:do if(e>>>0>36){c[(LE()|0)>>2]=22;i=0;j=0}else{k=b+4|0;l=b+100|0;do{m=c[k>>2]|0;if(m>>>0<(c[l>>2]|0)>>>0){c[k>>2]=m+1;n=d[m>>0]|0}else n=UE(b)|0}while((VE(n)|0)!=0);b:do switch(n|0){case 43:case 45:{m=((n|0)==45)<<31>>31;o=c[k>>2]|0;if(o>>>0<(c[l>>2]|0)>>>0){c[k>>2]=o+1;p=m;q=d[o>>0]|0;break b}else{p=m;q=UE(b)|0;break b}break}default:{p=0;q=n}}while(0);m=(e|0)==0;do if((e|16|0)==16&(q|0)==48){o=c[k>>2]|0;if(o>>>0<(c[l>>2]|0)>>>0){c[k>>2]=o+1;r=d[o>>0]|0}else r=UE(b)|0;if((r|32|0)!=120)if(m){s=r;t=8;u=46;break}else{v=r;w=e;u=32;break}o=c[k>>2]|0;if(o>>>0<(c[l>>2]|0)>>>0){c[k>>2]=o+1;x=d[o>>0]|0}else x=UE(b)|0;if((d[86724+x>>0]|0)>15){o=(c[l>>2]|0)==0;if(!o)c[k>>2]=(c[k>>2]|0)+-1;if(!f){SE(b,0);i=0;j=0;break a}if(o){i=0;j=0;break a}c[k>>2]=(c[k>>2]|0)+-1;i=0;j=0;break a}else{s=x;t=16;u=46}}else{o=m?10:e;if(o>>>0>(d[86724+q>>0]|0)>>>0){v=q;w=o;u=32}else{if(c[l>>2]|0)c[k>>2]=(c[k>>2]|0)+-1;SE(b,0);c[(LE()|0)>>2]=22;i=0;j=0;break a}}while(0);c:do if((u|0)==32)if((w|0)==10){m=v+-48|0;if(m>>>0<10){o=0;y=m;do{o=(o*10|0)+y|0;m=c[k>>2]|0;if(m>>>0<(c[l>>2]|0)>>>0){c[k>>2]=m+1;A=d[m>>0]|0}else A=UE(b)|0;y=A+-48|0}while(y>>>0<10&o>>>0<429496729);B=A;C=o;D=0}else{B=v;C=0;D=0}y=B+-48|0;if(y>>>0<10){m=B;E=C;F=D;G=y;while(1){y=rT(E|0,F|0,10,0)|0;H=z;I=((G|0)<0)<<31>>31;J=~I;if(H>>>0>J>>>0|(H|0)==(J|0)&y>>>0>~G>>>0){K=10;L=m;M=E;N=F;u=72;break c}E=sT(y|0,H|0,G|0,I|0)|0;F=z;I=c[k>>2]|0;if(I>>>0<(c[l>>2]|0)>>>0){c[k>>2]=I+1;P=d[I>>0]|0}else P=UE(b)|0;G=P+-48|0;if(!(G>>>0<10&(F>>>0<429496729|(F|0)==429496729&E>>>0<2576980378)))break;else m=P}if(G>>>0>9){Q=p;R=F;S=E}else{K=10;L=P;M=E;N=F;u=72}}else{Q=p;R=D;S=C}}else{s=v;t=w;u=46}while(0);d:do if((u|0)==46){if(!(t+-1&t)){m=a[86980+((t*23|0)>>>5&7)>>0]|0;o=a[86724+s>>0]|0;I=o&255;if(t>>>0>I>>>0){H=0;y=I;do{H=y|H<<m;I=c[k>>2]|0;if(I>>>0<(c[l>>2]|0)>>>0){c[k>>2]=I+1;T=d[I>>0]|0}else T=UE(b)|0;U=a[86724+T>>0]|0;y=U&255}while(H>>>0<134217728&t>>>0>y>>>0);V=T;W=U;X=0;Y=H}else{V=s;W=o;X=0;Y=0}y=zT(-1,-1,m|0)|0;F=z;if(t>>>0<=(W&255)>>>0|(F>>>0<X>>>0|(F|0)==(X|0)&y>>>0<Y>>>0)){K=t;L=V;M=Y;N=X;u=72;break}else{Z=Y;_=X;$=W}while(1){E=AT(Z|0,_|0,m|0)|0;G=z;I=E|$&255;E=c[k>>2]|0;if(E>>>0<(c[l>>2]|0)>>>0){c[k>>2]=E+1;aa=d[E>>0]|0}else aa=UE(b)|0;$=a[86724+aa>>0]|0;if(t>>>0<=($&255)>>>0|(G>>>0>F>>>0|(G|0)==(F|0)&I>>>0>y>>>0)){K=t;L=aa;M=I;N=G;u=72;break d}else{Z=I;_=G}}}y=a[86724+s>>0]|0;F=y&255;if(t>>>0>F>>>0){m=0;o=F;do{m=o+(O(m,t)|0)|0;F=c[k>>2]|0;if(F>>>0<(c[l>>2]|0)>>>0){c[k>>2]=F+1;ba=d[F>>0]|0}else ba=UE(b)|0;ca=a[86724+ba>>0]|0;o=ca&255}while(m>>>0<119304647&t>>>0>o>>>0);da=ba;ea=ca;fa=m;ga=0}else{da=s;ea=y;fa=0;ga=0}if(t>>>0>(ea&255)>>>0){o=wT(-1,-1,t|0,0)|0;F=z;H=da;G=ga;I=fa;E=ea;while(1){if(G>>>0>F>>>0|(G|0)==(F|0)&I>>>0>o>>>0){K=t;L=H;M=I;N=G;u=72;break d}J=rT(I|0,G|0,t|0,0)|0;ha=z;ia=E&255;if(ha>>>0>4294967295|(ha|0)==-1&J>>>0>~ia>>>0){K=t;L=H;M=I;N=G;u=72;break d}ja=sT(J|0,ha|0,ia|0,0)|0;ia=z;ha=c[k>>2]|0;if(ha>>>0<(c[l>>2]|0)>>>0){c[k>>2]=ha+1;ka=d[ha>>0]|0}else ka=UE(b)|0;E=a[86724+ka>>0]|0;if(t>>>0<=(E&255)>>>0){K=t;L=ka;M=ja;N=ia;u=72;break}else{H=ka;G=ia;I=ja}}}else{K=t;L=da;M=fa;N=ga;u=72}}while(0);if((u|0)==72)if(K>>>0>(d[86724+L>>0]|0)>>>0){do{I=c[k>>2]|0;if(I>>>0<(c[l>>2]|0)>>>0){c[k>>2]=I+1;la=d[I>>0]|0}else la=UE(b)|0}while(K>>>0>(d[86724+la>>0]|0)>>>0);c[(LE()|0)>>2]=34;Q=(g&1|0)==0&0==0?p:0;R=h;S=g}else{Q=p;R=N;S=M}if(c[l>>2]|0)c[k>>2]=(c[k>>2]|0)+-1;if(!(R>>>0<h>>>0|(R|0)==(h|0)&S>>>0<g>>>0)){if(!((g&1|0)!=0|0!=0|(Q|0)!=0)){c[(LE()|0)>>2]=34;I=sT(g|0,h|0,-1,-1)|0;i=z;j=I;break}if(R>>>0>h>>>0|(R|0)==(h|0)&S>>>0>g>>>0){c[(LE()|0)>>2]=34;i=h;j=g;break}}I=((Q|0)<0)<<31>>31;G=tT(S^Q|0,R^I|0,Q|0,I|0)|0;i=z;j=G}while(0);z=i;return j|0}function UE(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=b+104|0;f=c[e>>2]|0;if((f|0)!=0?(c[b+108>>2]|0)>=(f|0):0)g=4;else{f=WE(b)|0;if((f|0)>=0){h=c[e>>2]|0;e=b+8|0;if(h){i=c[e>>2]|0;j=c[b+4>>2]|0;k=h-(c[b+108>>2]|0)|0;h=i;if((i-j|0)<(k|0)){l=h;m=h}else{l=j+(k+-1)|0;m=h}}else{h=c[e>>2]|0;l=h;m=h}c[b+100>>2]=l;l=b+4|0;if(!m)n=c[l>>2]|0;else{h=c[l>>2]|0;l=b+108|0;c[l>>2]=m+1-h+(c[l>>2]|0);n=h}h=n+-1|0;if((f|0)==(d[h>>0]|0|0))o=f;else{a[h>>0]=f;o=f}}else g=4}if((g|0)==4){c[b+100>>2]=0;o=-1}return o|0}\nfunction ks(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;c[a>>2]=0;e=a+4|0;c[e>>2]=0;c[a+8>>2]=0;c[a>>2]=c[b>>2];f=b+4|0;c[e>>2]=c[f>>2];e=b+8|0;c[a+8>>2]=c[e>>2];c[e>>2]=0;c[f>>2]=0;c[b>>2]=0;b=a+12|0;c[b>>2]=0;f=a+16|0;c[f>>2]=0;c[a+20>>2]=0;c[b>>2]=c[d>>2];b=d+4|0;c[f>>2]=c[b>>2];f=d+8|0;c[a+20>>2]=c[f>>2];c[f>>2]=0;c[b>>2]=0;c[d>>2]=0;return}function ls(a){a=a|0;return a|0}function ms(a){a=a|0;return a+12|0}function ns(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;c[a>>2]=0;e=a+4|0;c[e>>2]=0;c[a+8>>2]=0;c[a>>2]=c[b>>2];f=b+4|0;c[e>>2]=c[f>>2];e=b+8|0;c[a+8>>2]=c[e>>2];c[e>>2]=0;c[f>>2]=0;c[b>>2]=0;b=a+12|0;c[b>>2]=0;f=a+16|0;c[f>>2]=0;c[a+20>>2]=0;c[b>>2]=c[d>>2];b=d+4|0;c[f>>2]=c[b>>2];f=d+8|0;c[a+20>>2]=c[f>>2];c[f>>2]=0;c[b>>2]=0;c[d>>2]=0;return}function os(a){a=a|0;var b=0,d=0;o=0;la(306,a|0);b=o;o=0;if(!(b&1)?(b=a+12|0,o=0,la(306,b|0),d=o,o=0,!(d&1)):0){d=c[b>>2]|0;if(d|0){b=a+16|0;if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d)}d=c[a>>2]|0;if(!d)return;b=a+4|0;if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d);return}d=Qa(0)|0;ps(a+12|0);ps(a);Id(d)}function ps(a){a=a|0;var b=0,d=0;b=c[a>>2]|0;if(!b)return;d=a+4|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b);return}function qs(a){a=a|0;return (c[a>>2]|0)==(c[a+4>>2]|0)|0}function rs(a){a=a|0;return a|0}function ss(a){a=a|0;return a+12|0}function ts(a,b){a=a|0;b=b|0;var d=0,e=0;c[a>>2]=0;d=a+4|0;c[d>>2]=0;c[a+8>>2]=0;c[a>>2]=c[b>>2];e=b+4|0;c[d>>2]=c[e>>2];d=b+8|0;c[a+8>>2]=c[d>>2];c[d>>2]=0;c[e>>2]=0;c[b>>2]=0;return}function us(a){a=a|0;return (c[a>>2]|0)==(c[a+4>>2]|0)|0}function vs(a){a=a|0;return a|0}function ws(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;c[a>>2]=0;f=a+4|0;c[f>>2]=0;c[a+8>>2]=0;c[a>>2]=c[b>>2];g=b+4|0;c[f>>2]=c[g>>2];f=b+8|0;c[a+8>>2]=c[f>>2];c[f>>2]=0;c[g>>2]=0;c[b>>2]=0;g=a+12|0;f=b+12|0;c[g>>2]=0;h=a+16|0;c[h>>2]=0;c[a+20>>2]=0;c[g>>2]=c[f>>2];g=b+16|0;c[h>>2]=c[g>>2];h=b+20|0;c[a+20>>2]=c[h>>2];c[h>>2]=0;c[g>>2]=0;c[f>>2]=0;f=a+24|0;c[f>>2]=0;g=a+28|0;c[g>>2]=0;c[a+32>>2]=0;c[f>>2]=c[d>>2];f=d+4|0;c[g>>2]=c[f>>2];g=d+8|0;c[a+32>>2]=c[g>>2];c[g>>2]=0;c[f>>2]=0;c[d>>2]=0;f=a+36|0;g=d+12|0;c[f>>2]=0;h=a+40|0;c[h>>2]=0;c[a+44>>2]=0;c[f>>2]=c[g>>2];f=d+16|0;c[h>>2]=c[f>>2];h=d+20|0;c[a+44>>2]=c[h>>2];c[h>>2]=0;c[f>>2]=0;c[g>>2]=0;g=a+48|0;c[g>>2]=0;f=a+52|0;c[f>>2]=0;c[a+56>>2]=0;c[g>>2]=c[e>>2];g=e+4|0;c[f>>2]=c[g>>2];f=e+8|0;c[a+56>>2]=c[f>>2];c[f>>2]=0;c[g>>2]=0;c[e>>2]=0;g=a+60|0;f=e+12|0;c[g>>2]=0;h=a+64|0;c[h>>2]=0;c[a+68>>2]=0;c[g>>2]=c[f>>2];g=e+16|0;c[h>>2]=c[g>>2];h=e+20|0;c[a+68>>2]=c[h>>2];c[h>>2]=0;c[g>>2]=0;c[f>>2]=0;return}function xs(a){a=a|0;return a|0}function ys(a){a=a|0;return a+24|0}function zs(a){a=a|0;return a+48|0}function As(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;c[a>>2]=0;f=a+4|0;c[f>>2]=0;c[a+8>>2]=0;c[a>>2]=c[b>>2];g=b+4|0;c[f>>2]=c[g>>2];f=b+8|0;c[a+8>>2]=c[f>>2];c[f>>2]=0;c[g>>2]=0;c[b>>2]=0;b=a+12|0;c[b>>2]=0;g=a+16|0;c[g>>2]=0;c[a+20>>2]=0;c[b>>2]=c[d>>2];b=d+4|0;c[g>>2]=c[b>>2];g=d+8|0;c[a+20>>2]=c[g>>2];c[g>>2]=0;c[b>>2]=0;c[d>>2]=0;d=a+24|0;c[d>>2]=0;b=a+28|0;c[b>>2]=0;c[a+32>>2]=0;c[d>>2]=c[e>>2];d=e+4|0;c[b>>2]=c[d>>2];b=e+8|0;c[a+32>>2]=c[b>>2];c[b>>2]=0;c[d>>2]=0;c[e>>2]=0;return}function Bs(a){a=a|0;return a|0}function Cs(a){a=a|0;return a+12|0}function Ds(a){a=a|0;return a+24|0}function Es(a){a=a|0;var b=0;b=a;a=b+48|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function Fs(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;c[a>>2]=0;g=a+4|0;c[g>>2]=0;c[a+8>>2]=0;c[a>>2]=c[b>>2];h=b+4|0;c[g>>2]=c[h>>2];g=b+8|0;c[a+8>>2]=c[g>>2];c[g>>2]=0;c[h>>2]=0;c[b>>2]=0;b=a+12|0;c[b>>2]=0;h=a+16|0;c[h>>2]=0;c[a+20>>2]=0;c[b>>2]=c[d>>2];b=d+4|0;c[h>>2]=c[b>>2];h=d+8|0;c[a+20>>2]=c[h>>2];c[h>>2]=0;c[b>>2]=0;c[d>>2]=0;d=a+24|0;c[d>>2]=0;b=a+28|0;c[b>>2]=0;c[a+32>>2]=0;c[d>>2]=c[e>>2];d=e+4|0;c[b>>2]=c[d>>2];b=e+8|0;c[a+32>>2]=c[b>>2];c[b>>2]=0;c[d>>2]=0;c[e>>2]=0;e=a+36|0;c[e>>2]=0;d=a+40|0;c[d>>2]=0;c[a+44>>2]=0;c[e>>2]=c[f>>2];e=f+4|0;c[d>>2]=c[e>>2];d=f+8|0;c[a+44>>2]=c[d>>2];c[d>>2]=0;c[e>>2]=0;c[f>>2]=0;return}function Gs(a){a=a|0;var b=0;if((c[a>>2]|0)==(c[a+4>>2]|0)){b=1;return b|0}if((c[a+12>>2]|0)==(c[a+16>>2]|0)){b=1;return b|0}b=(c[a+24>>2]|0)==(c[a+28>>2]|0);return b|0}function Hs(a){a=a|0;return a|0}function Is(a){a=a|0;return a+12|0}function Js(a){a=a|0;return a+24|0}function Ks(a){a=a|0;return a+36|0}function Ls(){return 132102}function Ms(){return 2}function Ns(){return 4}function Os(){return 6}function Ps(b){b=b|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;a[b+11>>0]=5;a[b>>0]=a[74483]|0;a[b+1>>0]=a[74484]|0;a[b+2>>0]=a[74485]|0;a[b+3>>0]=a[74486]|0;a[b+4>>0]=a[74487]|0;a[b+5>>0]=0;return}function Qs(b){b=b|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;a[b+11>>0]=5;a[b>>0]=a[74483]|0;a[b+1>>0]=a[74484]|0;a[b+2>>0]=a[74485]|0;a[b+3>>0]=a[74486]|0;a[b+4>>0]=a[74487]|0;a[b+5>>0]=0;return}function Rs(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0;f=l;l=l+64|0;g=f;h=f+48|0;i=f+32|0;j=f+28|0;k=f+24|0;if((e|0)<0){m=Ja(24)|0;o=0;na(73,m|0,3,74489);n=o;o=0;if(!(n&1))Xa(m|0,4424,56);n=Pa()|0;p=z;Sa(m|0);q=n;r=p;$a(q|0)}p=i+11|0;a[p>>0]=10;n=i;m=74517;s=n+10|0;do{a[n>>0]=a[m>>0]|0;n=n+1|0;m=m+1|0}while((n|0)<(s|0));a[i+10>>0]=0;o=0;ma(91,g|0,i|0);t=o;o=0;do if(t&1){u=Pa()|0;v=u;w=z;x=35}else{o=0;ma(137,h|0,g|0);u=o;o=0;if(u&1){u=Pa()|0;y=z;A=c[g>>2]|0;if(!A){v=u;w=y;x=35;break}B=g+4|0;if((c[B>>2]|0)!=(A|0))c[B>>2]=A;mR(A);v=u;w=y;x=35;break}y=c[g>>2]|0;if(y|0){u=g+4|0;if((c[u>>2]|0)!=(y|0))c[u>>2]=y;mR(y)}if((a[p>>0]|0)<0)mR(c[i>>2]|0);o=0;la(287,i|0);y=o;o=0;if(y&1){y=Pa()|0;C=y;D=z}else{c[j>>2]=0;o=0;y=$(103,7,j|0,k|0)|0;u=o;o=0;a:do if(u&1){A=Pa()|0;E=z;F=A;x=40}else{if((y|0)<=-1){A=Ja(24)|0;B=xr()|0;o=0;na(71,A|0,y|0,B|0);B=o;o=0;if(B&1){B=Qa(0)|0;Sa(A|0);G=B}else{o=0;na(72,A|0,4424,56);o=0;A=Qa(0)|0;G=A}Ka(G|0)|0;A=fo()|0;o=0;na(71,g|0,16,A|0);A=o;o=0;if(A&1){A=Pa()|0;H=z;I=A}else{o=0;ma(144,g|0,0);o=0;A=Pa()|0;B=z;c[g>>2]=10036;J=g+12|0;if((a[J+11>>0]|0)<0)mR(c[J>>2]|0);H=B;I=A}o=0;ka(3);A=o;o=0;if(!(A&1)){E=H;F=I;x=40;break}A=Qa(0)|0;Id(A)}o=0;A=Z(228,7)|0;B=o;o=0;do if(!(B&1)){if(!A){J=Ja(24)|0;K=fo()|0;o=0;na(71,J|0,16,K|0);K=o;o=0;if(K&1){K=Pa()|0;L=z;Sa(J|0);M=K;N=L;break a}else{o=0;na(72,J|0,4424,56);o=0;break}}o=0;na(49,g|0,h|0,c[A+16>>2]|0);J=o;o=0;do if(J&1){L=Pa()|0;O=L;P=z}else{o=0;L=_(119,i|0,g|0)|0;K=o;o=0;if(K&1){K=Pa()|0;Q=z;R=c[g>>2]|0;if(!R){O=K;P=Q;break}S=g+4|0;if((c[S>>2]|0)!=(R|0))c[S>>2]=R;mR(R);O=K;P=Q;break}Q=c[g>>2]|0;if(Q|0){K=g+4|0;if((c[K>>2]|0)!=(Q|0))c[K>>2]=Q;mR(Q)}Q=c[j>>2]|0;K=c[k>>2]|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;do if(K>>>0>4294967279){o=0;la(276,g|0);o=0;x=84}else{if(K>>>0<11){a[g+11>>0]=K;if(!K)T=g;else{U=g;x=55}}else{R=K+16&-16;o=0;S=Z(209,R|0)|0;V=o;o=0;if(V&1){x=84;break}c[g>>2]=S;c[g+8>>2]=R|-2147483648;c[g+4>>2]=K;U=S;x=55}if((x|0)==55){CT(U|0,Q|0,K|0)|0;T=U}a[T+K>>0]=0;o=0;S=_(95,i|0,g|0)|0;R=o;o=0;if(R&1){R=Pa()|0;V=z;if((a[g+11>>0]|0)>=0){W=R;X=V;break}mR(c[g>>2]|0);W=R;X=V;break}V=S+L|0;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);o=0;S=_(110,i|0,V|0)|0;R=o;o=0;if(R&1){R=Pa()|0;M=R;N=z;break a};c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;R=g+11|0;a[R>>0]=8;Y=g;c[Y>>2]=-2042067414;c[Y+4>>2]=167906807;a[g+8>>0]=0;o=0;Y=_(95,i|0,g|0)|0;aa=o;o=0;if(aa&1){aa=Pa()|0;ba=z;if((a[R>>0]|0)<0)mR(c[g>>2]|0);M=aa;N=ba;break a}if((a[R>>0]|0)<0)mR(c[g>>2]|0);o=0;R=_(110,i|0,Y|0)|0;ba=o;o=0;if(ba&1){ba=Pa()|0;M=ba;N=z;break a}o=0;ba=_(117,i|0,e|0)|0;aa=o;o=0;do if(!(aa&1)){o=0;ca=_(119,i|0,d|0)|0;da=o;o=0;if(da&1)break;da=R+Y+ba+ca|0;o=0;ca=_(110,i|0,da|0)|0;ea=o;o=0;if(ea&1)break;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;ea=g+11|0;a[ea>>0]=9;n=g;m=84122;s=n+9|0;do{a[n>>0]=a[m>>0]|0;n=n+1|0;m=m+1|0}while((n|0)<(s|0));a[g+9>>0]=0;o=0;fa=_(95,i|0,g|0)|0;ga=o;o=0;if(ga&1){ga=Pa()|0;ha=z;if((a[ea>>0]|0)<0)mR(c[g>>2]|0);M=ga;N=ha;break a}ha=ca+da+fa|0;if((a[ea>>0]|0)<0)mR(c[g>>2]|0);o=0;fa=_(110,i|0,ha|0)|0;ga=o;o=0;if(ga&1)break;ga=S+V+ha+fa|0;o=0;fa=_(110,i|0,ga|0)|0;ha=o;o=0;if(ha&1)break;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;ha=g+11|0;a[ha>>0]=9;n=g;m=84490;s=n+9|0;do{a[n>>0]=a[m>>0]|0;n=n+1|0;m=m+1|0}while((n|0)<(s|0));a[g+9>>0]=0;o=0;ea=_(95,i|0,g|0)|0;da=o;o=0;if(da&1){da=Pa()|0;ca=z;if((a[ha>>0]|0)<0)mR(c[g>>2]|0);M=da;N=ca;break a}if((a[ha>>0]|0)<0)mR(c[g>>2]|0);o=0;_(110,i|0,fa+ga+ea|0)|0;ea=o;o=0;do if(!(ea&1)){o=0;ma(151,b|0,i|0);ca=o;o=0;if(ca&1)break;it(i);kq(h);l=f;return}while(0);ea=Pa()|0;M=ea;N=z;break a}while(0);V=Pa()|0;M=V;N=z;break a}while(0);if((x|0)==84){L=Pa()|0;W=L;X=z}M=W;N=X;break a}while(0);M=O;N=P;break a}while(0);A=Pa()|0;M=A;N=z}while(0);if((x|0)==40){M=F;N=E}it(i);C=M;D=N}kq(h);ia=C;ja=D}while(0);if((x|0)==35){if((a[p>>0]|0)<0)mR(c[i>>2]|0);ia=v;ja=w}q=ia;r=ja;$a(q|0)}function Ss(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=l;l=l+32|0;g=f+16|0;h=f;if((e|0)<0){i=Ja(24)|0;o=0;na(73,i|0,3,74489);j=o;o=0;if(!(j&1))Xa(i|0,4424,56);j=Pa()|0;k=z;Sa(i|0);m=k;n=j;$a(n|0)}gt(g);o=0;j=_(117,g|0,e|0)|0;e=o;o=0;do if((!(e&1)?(o=0,k=_(119,g|0,d|0)|0,i=o,o=0,!(i&1)):0)?(i=k+j|0,o=0,k=_(110,g|0,i|0)|0,p=o,o=0,!(p&1)):0){p=h+11|0;a[p>>0]=10;q=h;r=83899;s=q+10|0;do{a[q>>0]=a[r>>0]|0;q=q+1|0;r=r+1|0}while((q|0)<(s|0));a[h+10>>0]=0;o=0;r=_(95,g|0,h|0)|0;q=o;o=0;if(q&1){q=Pa()|0;s=z;if((a[p>>0]|0)<0)mR(c[h>>2]|0);t=s;u=q;break}if((a[p>>0]|0)<0)mR(c[h>>2]|0);o=0;_(110,g|0,k+i+r|0)|0;r=o;o=0;if(!(r&1)?(o=0,ma(151,b|0,g|0),r=o,o=0,!(r&1)):0){it(g);l=f;return}else v=14}else v=14;while(0);if((v|0)==14){v=Pa()|0;t=z;u=v}it(g);m=t;n=u;$a(n|0)}function Ts(a,b){a=a|0;b=b|0;if((c[b>>2]|0)!=(c[b+4>>2]|0))return;b=Ja(24)|0;o=0;ma(143,b|0,9);a=o;o=0;if(a&1){a=Pa()|0;Sa(b|0);$a(a|0)}else Xa(b|0,4424,56)}function Us(a,b){a=a|0;b=b|0;var d=0,e=0;d=l;l=l+16|0;e=d;gt(e);o=0;$(c[(c[b>>2]|0)+8>>2]|0,b|0,e|0,0)|0;b=o;o=0;if(!(b&1)?(o=0,ma(151,a|0,e|0),a=o,o=0,!(a&1)):0){it(e);l=d;return}d=Pa()|0;it(e);$a(d|0)}function Vs(a,b){a=a|0;b=b|0;var d=0,e=0;d=l;l=l+32|0;e=d;Ws(e,b);o=0;ma(c[(c[a>>2]|0)+12>>2]|0,a|0,e|0);a=o;o=0;if(a&1){a=Pa()|0;Xs(e);$a(a|0)}else{Xs(e);l=d;return}}function Ws(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=a+4|0;e=a+8|0;f=a+12|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;if((e|0)==(b|0)){g=0;h=0;c[a>>2]=g;i=g;j=h-i|0;k=g+j|0;c[d>>2]=k;return}o=0;na(84,e|0,c[b>>2]|0,c[b+4>>2]|0);b=o;o=0;if(!(b&1)){g=c[e>>2]|0;h=c[f>>2]|0;c[a>>2]=g;i=g;j=h-i|0;k=g+j|0;c[d>>2]=k;return}k=Pa()|0;d=c[e>>2]|0;if(!d)$a(k|0);if((c[f>>2]|0)!=(d|0))c[f>>2]=d;mR(d);$a(k|0)}function Xs(a){a=a|0;var b=0,d=0;c[a>>2]=0;c[a+4>>2]=0;b=c[a+8>>2]|0;if(!b)return;d=a+12|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b);return}function Ys(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=l;l=l+32|0;e=d+8|0;f=d;Zs(b);g=$u(b,c[b+4>>2]|0,f)|0;if((g|0)>-1){l=d;return c[f>>2]|0}f=Ja(24)|0;d=xr()|0;o=0;na(71,f|0,g|0,d|0);d=o;o=0;if(d&1){d=Qa(0)|0;Sa(f|0);h=d}else{o=0;na(72,f|0,4424,56);o=0;f=Qa(0)|0;h=f}Ka(h|0)|0;h=fo()|0;o=0;na(71,e|0,4,h|0);h=o;o=0;if(h&1){h=Pa()|0;i=z;j=h}else{o=0;ma(144,e|0,0);o=0;h=Pa()|0;f=z;c[e>>2]=10036;d=e+12|0;if((a[d+11>>0]|0)<0)mR(c[d>>2]|0);i=f;j=h}o=0;ka(3);h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}else $a(j|0);return 0}function Zs(a){a=a|0;var b=0,d=0,e=0,f=0;b=c[a>>2]|0;if(b|0?(d=c[a+4>>2]|0,d|0):0){if(b>>>0<d>>>0)return;d=Ja(24)|0;o=0;na(73,d|0,9,74584);b=o;o=0;if(!(b&1))Xa(d|0,4424,56);b=Pa()|0;a=z;Sa(d|0);e=a;f=b;$a(f|0)}b=Ja(24)|0;o=0;ma(143,b|0,14);a=o;o=0;if(!(a&1))Xa(b|0,4424,56);a=Pa()|0;d=z;Sa(b|0);e=d;f=a;$a(f|0)}function _s(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=l;l=l+32|0;e=d+8|0;Zs(b);f=_u(b,c[b+4>>2]|0,d,5)|0;if((f|0)>-1){l=d;return}d=Ja(24)|0;b=xr()|0;o=0;na(71,d|0,f|0,b|0);b=o;o=0;if(b&1){b=Qa(0)|0;Sa(d|0);g=b}else{o=0;na(72,d|0,4424,56);o=0;d=Qa(0)|0;g=d}Ka(g|0)|0;g=fo()|0;o=0;na(71,e|0,4,g|0);g=o;o=0;if(g&1){g=Pa()|0;h=z;i=g}else{o=0;ma(144,e|0,0);o=0;g=Pa()|0;d=z;c[e>>2]=10036;b=e+12|0;if((a[b+11>>0]|0)<0)mR(c[b>>2]|0);h=d;i=g}o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}else $a(i|0)}function $s(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;d=l;l=l+16|0;e=d;if((b&255)>31){f=Ja(24)|0;o=0;na(73,f|0,3,74623);g=o;o=0;if(!(g&1))Xa(f|0,4424,56);g=Pa()|0;h=z;Sa(f|0);i=g;j=h;$a(i|0)}h=c[a>>2]|0;g=a+4|0;if(h|0?(f=c[g>>2]|0,!((f|0)==0|h>>>0<f>>>0)):0){k=0;l=d;return k|0}Zs(a);switch(_u(a,c[g>>2]|0,e,(b|-96)&255)|0){case 0:{m=c[e>>2]|0;break}case -98:{m=0;break}default:{e=Ja(24)|0;o=0;ma(143,e|0,4);b=o;o=0;if(!(b&1))Xa(e|0,4424,56);b=Pa()|0;g=z;Sa(e|0);i=b;j=g;$a(i|0)}}k=m;l=d;return k|0}function at(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+32|0;f=e+8|0;g=e;Zs(d);h=_u(d,c[d+4>>2]|0,g,4)|0;if((h|0)<=-1){i=Ja(24)|0;j=xr()|0;o=0;na(71,i|0,h|0,j|0);j=o;o=0;if(j&1){j=Qa(0)|0;Sa(i|0);k=j}else{o=0;na(72,i|0,4424,56);o=0;i=Qa(0)|0;k=i}Ka(k|0)|0;k=fo()|0;o=0;na(71,f|0,4,k|0);k=o;o=0;if(k&1){k=Pa()|0;m=z;n=k}else{o=0;ma(144,f|0,0);o=0;k=Pa()|0;i=z;c[f>>2]=10036;j=f+12|0;if((a[j+11>>0]|0)<0)mR(c[j>>2]|0);m=i;n=k}o=0;ka(3);k=o;o=0;if(k&1){k=Qa(0)|0;Id(k)}else $a(n|0)}n=c[g>>2]|0;g=c[d>>2]|0;k=g+n|0;c[d>>2]=k;c[b>>2]=0;d=b+4|0;c[d>>2]=0;c[b+8>>2]=0;if(!n){l=e;return}if((n|0)>=0){o=0;i=Z(209,n|0)|0;m=o;o=0;if(!(m&1)){c[d>>2]=i;c[b>>2]=i;c[b+8>>2]=i+n;n=g;g=i;do{a[g>>0]=a[n>>0]|0;n=n+1|0;g=(c[d>>2]|0)+1|0;c[d>>2]=g}while((n|0)!=(k|0));l=e;return}}else{o=0;la(271,b|0);o=0}e=Pa()|0;k=c[b>>2]|0;if(!k)$a(e|0);if((c[d>>2]|0)!=(k|0))c[d>>2]=k;mR(k);$a(e|0)}function bt(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+32|0;f=e+8|0;g=e;Zs(d);h=_u(d,c[d+4>>2]|0,g,12)|0;if((h|0)<=-1){i=Ja(24)|0;j=xr()|0;o=0;na(71,i|0,h|0,j|0);j=o;o=0;if(j&1){j=Qa(0)|0;Sa(i|0);k=j}else{o=0;na(72,i|0,4424,56);o=0;i=Qa(0)|0;k=i}Ka(k|0)|0;k=fo()|0;o=0;na(71,f|0,4,k|0);k=o;o=0;if(k&1){k=Pa()|0;m=z;n=k}else{o=0;ma(144,f|0,0);o=0;k=Pa()|0;i=z;c[f>>2]=10036;j=f+12|0;if((a[j+11>>0]|0)<0)mR(c[j>>2]|0);m=i;n=k}o=0;ka(3);k=o;o=0;if(k&1){k=Qa(0)|0;Id(k)}else $a(n|0)}n=c[g>>2]|0;g=c[d>>2]|0;k=g+n|0;c[d>>2]=k;c[b>>2]=0;d=b+4|0;c[d>>2]=0;c[b+8>>2]=0;if(!n){l=e;return}if((n|0)>=0){o=0;i=Z(209,n|0)|0;m=o;o=0;if(!(m&1)){c[d>>2]=i;c[b>>2]=i;c[b+8>>2]=i+n;n=g;g=i;do{a[g>>0]=a[n>>0]|0;n=n+1|0;g=(c[d>>2]|0)+1|0;c[d>>2]=g}while((n|0)!=(k|0));l=e;return}}else{o=0;la(271,b|0);o=0}e=Pa()|0;k=c[b>>2]|0;if(!k)$a(e|0);if((c[d>>2]|0)!=(k|0))c[d>>2]=k;mR(k);$a(e|0)}function ct(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;e=l;l=l+32|0;f=e+8|0;g=e;Zs(d);h=c[d>>2]|0;c[d>>2]=h+1;i=Zu(d,c[d+4>>2]|0,g)|0;if((i|0)<=-1){j=Ja(24)|0;k=xr()|0;o=0;na(71,j|0,i|0,k|0);k=o;o=0;if(k&1){k=Qa(0)|0;Sa(j|0);m=k}else{o=0;na(72,j|0,4424,56);o=0;j=Qa(0)|0;m=j}Ka(m|0)|0;m=fo()|0;o=0;na(71,f|0,4,m|0);m=o;o=0;if(m&1){m=Pa()|0;n=z;p=m}else{o=0;ma(144,f|0,0);o=0;m=Pa()|0;j=z;c[f>>2]=10036;k=f+12|0;if((a[k+11>>0]|0)<0)mR(c[k>>2]|0);n=j;p=m}o=0;ka(3);m=o;o=0;if(m&1){m=Qa(0)|0;Id(m)}else $a(p|0)}p=(c[d>>2]|0)+(c[g>>2]|0)|0;c[d>>2]=p;c[b>>2]=0;d=b+4|0;c[d>>2]=0;c[b+8>>2]=0;g=p-h|0;if(!g){l=e;return}if((g|0)>=0){o=0;p=Z(209,g|0)|0;m=o;o=0;if(!(m&1)){c[d>>2]=p;c[b>>2]=p;m=p+g|0;c[b+8>>2]=m;CT(p|0,h|0,g|0)|0;c[d>>2]=m;l=e;return}}else{o=0;la(271,b|0);o=0}e=Pa()|0;m=c[b>>2]|0;if(!m)$a(e|0);if((c[d>>2]|0)!=(m|0))c[d>>2]=m;mR(m);$a(e|0)}function dt(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0;e=l;l=l+32|0;f=e+8|0;g=e;Zs(d);h=_u(d,c[d+4>>2]|0,g,6)|0;if((h|0)>-1){i=c[g>>2]|0;g=c[d>>2]|0;c[d>>2]=g+i;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;if(i>>>0>4294967279)vR(b);if(i>>>0<11){a[b+11>>0]=i;if(!i){j=b;k=j+i|0;a[k>>0]=0;l=e;return}else m=b}else{d=i+16&-16;n=kR(d)|0;c[b>>2]=n;c[b+8>>2]=d|-2147483648;c[b+4>>2]=i;m=n}CT(m|0,g|0,i|0)|0;j=m;k=j+i|0;a[k>>0]=0;l=e;return}e=Ja(24)|0;k=xr()|0;o=0;na(71,e|0,h|0,k|0);k=o;o=0;if(k&1){k=Qa(0)|0;Sa(e|0);p=k}else{o=0;na(72,e|0,4424,56);o=0;e=Qa(0)|0;p=e}Ka(p|0)|0;p=fo()|0;o=0;na(71,f|0,4,p|0);p=o;o=0;if(p&1){p=Pa()|0;q=z;r=p}else{o=0;ma(144,f|0,0);o=0;p=Pa()|0;e=z;c[f>>2]=10036;k=f+12|0;if((a[k+11>>0]|0)<0)mR(c[k>>2]|0);q=e;r=p}o=0;ka(3);p=o;o=0;if(p&1){p=Qa(0)|0;Id(p)}else $a(r|0)}function et(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=l;l=l+32|0;e=d+8|0;f=d;Zs(b);g=_u(b,c[b+4>>2]|0,f,48)|0;if((g|0)>-1){l=d;return c[f>>2]|0}f=Ja(24)|0;d=xr()|0;o=0;na(71,f|0,g|0,d|0);d=o;o=0;if(d&1){d=Qa(0)|0;Sa(f|0);h=d}else{o=0;na(72,f|0,4424,56);o=0;f=Qa(0)|0;h=f}Ka(h|0)|0;h=fo()|0;o=0;na(71,e|0,4,h|0);h=o;o=0;if(h&1){h=Pa()|0;i=z;j=h}else{o=0;ma(144,e|0,0);o=0;h=Pa()|0;f=z;c[e>>2]=10036;d=e+12|0;if((a[d+11>>0]|0)<0)mR(c[d>>2]|0);i=f;j=h}o=0;ka(3);h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}else $a(j|0);return 0}function ft(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=l;l=l+32|0;e=d+8|0;f=d;Zs(b);g=_u(b,c[b+4>>2]|0,f,49)|0;if((g|0)>-1){l=d;return c[f>>2]|0}f=Ja(24)|0;d=xr()|0;o=0;na(71,f|0,g|0,d|0);d=o;o=0;if(d&1){d=Qa(0)|0;Sa(f|0);h=d}else{o=0;na(72,f|0,4424,56);o=0;f=Qa(0)|0;h=f}Ka(h|0)|0;h=fo()|0;o=0;na(71,e|0,4,h|0);h=o;o=0;if(h&1){h=Pa()|0;i=z;j=h}else{o=0;ma(144,e|0,0);o=0;h=Pa()|0;f=z;c[e>>2]=10036;d=e+12|0;if((a[d+11>>0]|0)<0)mR(c[d>>2]|0);i=f;j=h}o=0;ka(3);h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}else $a(j|0);return 0}function gt(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;ht(a,128);return}function ht(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=a+12|0;e=c[d>>2]|0;if(e>>>0>b>>>0){f=Ja(24)|0;o=0;na(73,f|0,3,74676);g=o;o=0;if(g&1){g=Pa()|0;Sa(f|0);$a(g|0)}else Xa(f|0,4424,56)}f=lR(b)|0;g=a+8|0;h=c[g>>2]|0;if(((h|0)!=0?(i=c[a>>2]|0,(i|0)!=0):0)?(j=c[a+4>>2]|0,(j|0)!=0):0){k=e+(j-i)|0;CT(f+b+(0-k)|0,i|0,k|0)|0;nR(h);l=0-k|0}else l=0;c[g>>2]=f;c[d>>2]=b;c[a>>2]=f+b+l;c[a+4>>2]=f;return}function it(a){a=a|0;var b=0;c[a>>2]=0;c[a+4>>2]=0;c[a+12>>2]=0;b=a+8|0;a=c[b>>2]|0;if(!a)return;nR(a);c[b>>2]=0;return}function jt(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=c[d>>2]|0;if(e|0?(f=d+4|0,g=c[f>>2]|0,g|0):0){h=d+12|0;i=g-e+(c[h>>2]|0)|0;g=e+i|0;c[b>>2]=0;j=b+4|0;c[j>>2]=0;c[b+8>>2]=0;a:do if(i|0){if((i|0)>=0){o=0;k=Z(209,i|0)|0;l=o;o=0;if(!(l&1)){c[j>>2]=k;c[b>>2]=k;c[b+8>>2]=k+i;l=e;m=k;while(1){a[m>>0]=a[l>>0]|0;l=l+1|0;m=(c[j>>2]|0)+1|0;c[j>>2]=m;if((l|0)==(g|0))break a}}}else{o=0;la(271,b|0);o=0}l=Pa()|0;m=c[b>>2]|0;if(!m)$a(l|0);if((c[j>>2]|0)!=(m|0))c[j>>2]=m;mR(m);$a(l|0)}while(0);c[d>>2]=0;c[f>>2]=0;c[h>>2]=0;h=d+8|0;d=c[h>>2]|0;if(!d)return;nR(d);c[h>>2]=0;return}h=Ja(24)|0;o=0;ma(143,h|0,14);d=o;o=0;if(d&1){d=Pa()|0;Sa(h|0);$a(d|0)}else Xa(h|0,4424,56)}function kt(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if(c[a>>2]|0?(d=a+4|0,c[d>>2]|0):0){lt(a,12);e=c[a>>2]|0;f=nv(a,c[d>>2]|0,b)|0;if((f|0)>-1)return e-(c[a>>2]|0)|0;a=Ja(24)|0;e=xr()|0;o=0;na(71,a|0,f|0,e|0);e=o;o=0;if(e&1){e=Pa()|0;Sa(a|0);$a(e|0)}else Xa(a|0,4424,56)}a=Ja(24)|0;o=0;ma(143,a|0,14);e=o;o=0;if(e&1){e=Pa()|0;Sa(a|0);$a(e|0)}else Xa(a|0,4424,56);return 0}function lt(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[a>>2]|0;e=d;if(d|0?(d=c[a+4>>2]|0,d|0):0){f=e-d|0;if(f>>>0>=b>>>0)return;ht(a,1<<(~~+N(+(+M(+(+((b-f+(c[a+12>>2]|0)|0)>>>0)))/.6931471805599453))>>>0));return}a=Ja(24)|0;o=0;ma(143,a|0,14);f=o;o=0;if(f&1){f=Pa()|0;Sa(a|0);$a(f|0)}else Xa(a|0,4424,56)}function mt(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if(c[a>>2]|0?(d=a+4|0,c[d>>2]|0):0){lt(a,3);e=c[a>>2]|0;f=mv(a,c[d>>2]|0,b&1)|0;if((f|0)>-1)return e-(c[a>>2]|0)|0;a=Ja(24)|0;e=xr()|0;o=0;na(71,a|0,f|0,e|0);e=o;o=0;if(e&1){e=Pa()|0;Sa(a|0);$a(e|0)}else Xa(a|0,4424,56)}a=Ja(24)|0;o=0;ma(143,a|0,14);e=o;o=0;if(e&1){e=Pa()|0;Sa(a|0);$a(e|0)}else Xa(a|0,4424,56);return 0}function nt(a){a=a|0;var b=0,d=0,e=0;if(c[a>>2]|0?(b=a+4|0,c[b>>2]|0):0){lt(a,2);d=c[a>>2]|0;e=iv(a,c[b>>2]|0)|0;if((e|0)>-1)return d-(c[a>>2]|0)|0;a=Ja(24)|0;d=xr()|0;o=0;na(71,a|0,e|0,d|0);d=o;o=0;if(d&1){d=Pa()|0;Sa(a|0);$a(d|0)}else Xa(a|0,4424,56)}a=Ja(24)|0;o=0;ma(143,a|0,14);d=o;o=0;if(d&1){d=Pa()|0;Sa(a|0);$a(d|0)}else Xa(a|0,4424,56);return 0}function ot(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if(c[a>>2]|0?(d=a+4|0,c[d>>2]|0):0){e=b+4|0;lt(a,(c[e>>2]|0)+4-(c[b>>2]|0)|0);f=c[a>>2]|0;g=c[b>>2]|0;b=ov(a,c[d>>2]|0,g,(c[e>>2]|0)-g|0)|0;if((b|0)>-1)return f-(c[a>>2]|0)|0;a=Ja(24)|0;f=xr()|0;o=0;na(71,a|0,b|0,f|0);f=o;o=0;if(f&1){f=Pa()|0;Sa(a|0);$a(f|0)}else Xa(a|0,4424,56)}a=Ja(24)|0;o=0;ma(143,a|0,14);f=o;o=0;if(f&1){f=Pa()|0;Sa(a|0);$a(f|0)}else Xa(a|0,4424,56);return 0}function pt(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;if(c[a>>2]|0?(d=a+4|0,c[d>>2]|0):0){e=b+4|0;lt(a,(c[e>>2]|0)+4-(c[b>>2]|0)|0);f=c[a>>2]|0;g=c[b>>2]|0;h=gv(a,c[d>>2]|0,g,(c[e>>2]|0)-g|0)|0;if((h|0)<=-1){g=Ja(24)|0;i=xr()|0;o=0;na(71,g|0,h|0,i|0);i=o;o=0;if(i&1){i=Pa()|0;Sa(g|0);$a(i|0)}else Xa(g|0,4424,56)}g=ev(a,c[d>>2]|0,(c[e>>2]|0)-(c[b>>2]|0)|0)|0;if((g|0)<=-1){b=Ja(24)|0;e=xr()|0;o=0;na(71,b|0,g|0,e|0);e=o;o=0;if(e&1){e=Pa()|0;Sa(b|0);$a(e|0)}else Xa(b|0,4424,56)}b=fv(a,c[d>>2]|0,12)|0;if((b|0)>-1)return f-(c[a>>2]|0)|0;a=Ja(24)|0;f=xr()|0;o=0;na(71,a|0,b|0,f|0);f=o;o=0;if(f&1){f=Pa()|0;Sa(a|0);$a(f|0)}else Xa(a|0,4424,56)}a=Ja(24)|0;o=0;ma(143,a|0,14);f=o;o=0;if(f&1){f=Pa()|0;Sa(a|0);$a(f|0)}else Xa(a|0,4424,56);return 0}function qt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;f=l;l=l+16|0;g=f+12|0;h=f;a[g>>0]=d;if(c[b>>2]|0?(i=b+4|0,c[i>>2]|0):0){if((d&255)<=30){lt(b,4);j=c[b>>2]|0;k=ev(b,c[i>>2]|0,e)|0;if((k|0)<=-1){e=Ja(24)|0;m=xr()|0;o=0;na(71,e|0,k|0,m|0);m=o;o=0;if(m&1){m=Pa()|0;Sa(e|0);$a(m|0)}else Xa(e|0,4424,56)}e=fv(b,c[i>>2]|0,d|-96)|0;if((e|0)>-1){l=f;return j-(c[b>>2]|0)|0}b=Ja(24)|0;j=xr()|0;o=0;na(71,b|0,e|0,j|0);j=o;o=0;if(j&1){j=Pa()|0;Sa(b|0);$a(j|0)}else Xa(b|0,4424,56)}b=Ja(24)|0;o=0;oa(53,h|0,74719,g|0,10276);g=o;o=0;do if(!(g&1)){j=fo()|0;o=0;oa(37,b|0,3,j|0,h|0);j=o;o=0;if(j&1)n=1;else{o=0;na(72,b|0,4424,56);o=0;n=0}j=Pa()|0;e=z;if((a[h+11>>0]|0)<0){mR(c[h>>2]|0);if(n){p=j;q=e;break}else{r=j;s=e}$a(r|0)}else{if(n){p=j;q=e;break}else{r=j;s=e}$a(r|0)}}else{e=Pa()|0;p=e;q=z}while(0);Sa(b|0);r=p;s=q;$a(r|0)}r=Ja(24)|0;o=0;ma(143,r|0,14);q=o;o=0;if(q&1){q=Pa()|0;Sa(r|0);$a(q|0)}else Xa(r|0,4424,56);return 0}function rt(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0;g=l;l=l+176|0;h=g+136|0;i=g;j=i+56|0;k=i+4|0;c[i>>2]=20;c[j>>2]=40;o=0;ma(69,i+56|0,k|0);m=o;o=0;if(m&1){m=Pa()|0;n=z;p=m;rH(j);$a(p|0)}c[i+128>>2]=0;c[i+132>>2]=-1;c[i>>2]=7388;c[j>>2]=7408;o=0;la(216,k|0);m=o;o=0;do if(m&1){q=Pa()|0;r=z;s=q}else{c[k>>2]=7440;q=i+36|0;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;c[i+52>>2]=16;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;o=0;ma(70,k|0,h|0);t=o;o=0;if(t&1){t=Pa()|0;u=z;if((a[h+11>>0]|0)<0)mR(c[h>>2]|0);if((a[q+11>>0]|0)<0)mR(c[q>>2]|0);vH(k);r=u;s=t;break}if((a[h+11>>0]|0)<0)mR(c[h>>2]|0);t=h+8|0;c[h>>2]=t;c[h+4>>2]=2;c[t>>2]=e;c[h+12>>2]=28;c[h+16>>2]=229;c[h+20>>2]=f;c[h+24>>2]=20;c[h+28>>2]=212;o=0;oa(39,i|0,d|0,t|0,2);t=o;o=0;if(!(t&1)?(o=0,ma(71,b|0,k|0),t=o,o=0,!(t&1)):0){c[i>>2]=7388;c[j>>2]=7408;c[k>>2]=7440;if((a[q+11>>0]|0)>=0){vH(k);ZH(i,7420);rH(j);l=g;return}mR(c[q>>2]|0);vH(k);ZH(i,7420);rH(j);l=g;return}t=Pa()|0;c[i>>2]=7388;c[j>>2]=7408;c[k>>2]=7440;if((a[q+11>>0]|0)>=0){vH(k);ZH(i,7420);rH(j);$a(t|0)}mR(c[q>>2]|0);vH(k);ZH(i,7420);rH(j);$a(t|0)}while(0);ZH(i,7420);n=r;p=s;rH(j);$a(p|0)}function st(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;e=l;l=l+16|0;c=e;g=a[f>>0]|0;switch(a[d+-1>>0]|0){case 120:case 88:case 111:case 105:case 100:case 117:{wI(b,g&255)|0;l=e;return}default:{a[c>>0]=g;he(b,c,1)|0;l=e;return}}}function tt(a){a=a|0;return d[a>>0]|0|0}function ut(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if(c[a>>2]|0?(d=a+4|0,c[d>>2]|0):0){e=b+4|0;lt(a,(c[e>>2]|0)-(c[b>>2]|0)|0);f=c[a>>2]|0;g=c[b>>2]|0;b=gv(a,c[d>>2]|0,g,(c[e>>2]|0)-g|0)|0;if((b|0)>-1)return f-(c[a>>2]|0)|0;a=Ja(24)|0;f=xr()|0;o=0;na(71,a|0,b|0,f|0);f=o;o=0;if(f&1){f=Pa()|0;Sa(a|0);$a(f|0)}else Xa(a|0,4424,56)}a=Ja(24)|0;o=0;ma(143,a|0,14);f=o;o=0;if(f&1){f=Pa()|0;Sa(a|0);$a(f|0)}else Xa(a|0,4424,56);return 0}function vt(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;if(c[b>>2]|0?(e=b+4|0,c[e>>2]|0):0){f=d+11|0;g=a[f>>0]|0;h=d+4|0;lt(b,(g<<24>>24<0?c[h>>2]|0:g&255)+4|0);g=c[b>>2]|0;i=a[f>>0]|0;f=i<<24>>24<0;j=jv(b,c[e>>2]|0,f?c[d>>2]|0:d,f?c[h>>2]|0:i&255)|0;if((j|0)>-1)return g-(c[b>>2]|0)|0;b=Ja(24)|0;g=xr()|0;o=0;na(71,b|0,j|0,g|0);g=o;o=0;if(g&1){g=Pa()|0;Sa(b|0);$a(g|0)}else Xa(b|0,4424,56)}b=Ja(24)|0;o=0;ma(143,b|0,14);g=o;o=0;if(g&1){g=Pa()|0;Sa(b|0);$a(g|0)}else Xa(b|0,4424,56);return 0}function wt(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if(c[a>>2]|0?(d=a+4|0,c[d>>2]|0):0){lt(a,4);e=c[a>>2]|0;f=ev(a,c[d>>2]|0,b)|0;if((f|0)<=-1){b=Ja(24)|0;g=xr()|0;o=0;na(71,b|0,f|0,g|0);g=o;o=0;if(g&1){g=Pa()|0;Sa(b|0);$a(g|0)}else Xa(b|0,4424,56)}b=fv(a,c[d>>2]|0,48)|0;if((b|0)>-1)return e-(c[a>>2]|0)|0;a=Ja(24)|0;e=xr()|0;o=0;na(71,a|0,b|0,e|0);e=o;o=0;if(e&1){e=Pa()|0;Sa(a|0);$a(e|0)}else Xa(a|0,4424,56)}a=Ja(24)|0;o=0;ma(143,a|0,14);e=o;o=0;if(e&1){e=Pa()|0;Sa(a|0);$a(e|0)}else Xa(a|0,4424,56);return 0}function xt(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0;d=l;l=l+16|0;e=d+12|0;f=d;if(c[a>>2]|0?(g=a+4|0,c[g>>2]|0):0){h=c[b>>2]|0;i=c[b+4>>2]|0;if((h|0)==(i|0))j=0;else{k=0;m=h;while(1){h=(c[m+4>>2]|0)+k-(c[m>>2]|0)|0;m=m+12|0;if((m|0)==(i|0)){j=h;break}else k=h}}lt(a,j+4|0);yt(f,b);b=c[f>>2]|0;k=f+4|0;i=c[k>>2]|0;c[e>>2]=127;o=0;na(93,b|0,i|0,e|0);e=o;o=0;a:do if(e&1){i=Pa()|0;n=z;p=i}else{i=c[a>>2]|0;b=c[k>>2]|0;m=c[g>>2]|0;b:do if((c[f>>2]|0)!=(b|0)){h=b;q=m;while(1){r=h;h=h+-12|0;s=c[h>>2]|0;o=0;t=aa(48,a|0,q|0,s|0,(c[r+-8>>2]|0)-s|0)|0;s=o;o=0;if(s&1){u=18;break}if((t|0)<=-1)break;s=c[g>>2]|0;if((c[f>>2]|0)==(h|0)){v=s;break b}else q=s}if((u|0)==18){q=Pa()|0;n=z;p=q;break a}q=Ja(24)|0;h=xr()|0;o=0;na(71,q|0,t|0,h|0);h=o;o=0;if(h&1){h=Pa()|0;s=z;Sa(q|0);n=s;p=h;break a}else{o=0;na(72,q|0,4424,56);o=0;q=Pa()|0;n=z;p=q;break a}}else v=m;while(0);o=0;m=$(104,a|0,v|0,j|0)|0;b=o;o=0;do if(!(b&1)){if((m|0)<=-1){q=Ja(24)|0;h=xr()|0;o=0;na(71,q|0,m|0,h|0);h=o;o=0;if(h&1){h=Pa()|0;s=z;Sa(q|0);n=s;p=h;break a}else{o=0;na(72,q|0,4424,56);o=0;break}}o=0;q=$(105,a|0,c[g>>2]|0,49)|0;h=o;o=0;if(!(h&1)){if((q|0)<=-1){h=Ja(24)|0;s=xr()|0;o=0;na(71,h|0,q|0,s|0);s=o;o=0;if(s&1){s=Pa()|0;q=z;Sa(h|0);n=q;p=s;break a}else{o=0;na(72,h|0,4424,56);o=0;break}}h=i-(c[a>>2]|0)|0;s=c[f>>2]|0;if(!s){l=d;return h|0}q=c[k>>2]|0;if((q|0)==(s|0))w=s;else{r=q;while(1){q=r+-12|0;c[k>>2]=q;x=c[q>>2]|0;if(!x)y=q;else{q=r+-8|0;if((c[q>>2]|0)!=(x|0))c[q>>2]=x;mR(x);y=c[k>>2]|0}if((y|0)==(s|0))break;else r=y}w=c[f>>2]|0}mR(w);l=d;return h|0}}while(0);i=Pa()|0;n=z;p=i}while(0);n=c[f>>2]|0;if(!n)$a(p|0);d=c[k>>2]|0;if((d|0)==(n|0))A=n;else{w=d;while(1){d=w+-12|0;c[k>>2]=d;y=c[d>>2]|0;if(!y)B=d;else{d=w+-8|0;if((c[d>>2]|0)!=(y|0))c[d>>2]=y;mR(y);B=c[k>>2]|0}if((B|0)==(n|0))break;else w=B}A=c[f>>2]|0}mR(A);$a(p|0)}p=Ja(24)|0;o=0;ma(143,p|0,14);A=o;o=0;if(A&1){A=Pa()|0;Sa(p|0);$a(A|0)}else Xa(p|0,4424,56);return 0}function yt(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0;c[a>>2]=0;d=a+4|0;c[d>>2]=0;c[a+8>>2]=0;e=b+4|0;f=(c[e>>2]|0)-(c[b>>2]|0)|0;g=(f|0)/12|0;if(!f)return;if(g>>>0<=357913941){o=0;h=Z(209,f|0)|0;f=o;o=0;if(!(f&1)){c[d>>2]=h;c[a>>2]=h;c[a+8>>2]=h+(g*12|0);g=c[b>>2]|0;b=c[e>>2]|0;if((g|0)==(b|0))return;else{i=g;j=h}while(1){c[j>>2]=0;k=j+4|0;c[k>>2]=0;c[j+8>>2]=0;h=i+4|0;g=(c[h>>2]|0)-(c[i>>2]|0)|0;if(g|0){if((g|0)<0){l=8;break}o=0;e=Z(209,g|0)|0;f=o;o=0;if(f&1)break;c[k>>2]=e;c[j>>2]=e;c[j+8>>2]=e+g;g=c[i>>2]|0;f=(c[h>>2]|0)-g|0;if((f|0)>0){CT(e|0,g|0,f|0)|0;c[k>>2]=e+f}}i=i+12|0;f=(c[d>>2]|0)+12|0;c[d>>2]=f;if((i|0)==(b|0)){l=28;break}else j=f}if((l|0)==8){o=0;la(271,j|0);o=0}else if((l|0)==28)return;b=Pa()|0;i=z;f=c[j>>2]|0;if(!f){m=i;n=b}else{if((c[k>>2]|0)!=(f|0))c[k>>2]=f;mR(f);m=i;n=b}}else l=17}else{o=0;la(271,a|0);o=0;l=17}if((l|0)==17){l=Pa()|0;m=z;n=l}l=c[a>>2]|0;if(!l)$a(n|0);m=c[d>>2]|0;if((m|0)==(l|0))p=l;else{b=m;while(1){m=b+-12|0;c[d>>2]=m;i=c[m>>2]|0;if(!i)q=m;else{m=b+-8|0;if((c[m>>2]|0)!=(i|0))c[m>>2]=i;mR(i);q=c[d>>2]|0}if((q|0)==(l|0))break;else b=q}p=c[a>>2]|0}mR(p);$a(n|0)}function zt(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;e=l;l=l+16|0;f=e;g=b+4|0;h=c[g>>2]|0;i=c[b>>2]|0;j=h-i|0;k=d+4|0;m=c[k>>2]|0;n=c[d>>2]|0;o=m-n|0;p=i;i=h;h=n;n=m;if(j>>>0>o>>>0){Gt(f,d,j);m=c[g>>2]|0;g=c[f>>2]|0;q=f+4|0;r=c[q>>2]|0;s=(g|0)==(r|0);a:do if(s)t=0;else{u=c[b>>2]|0;v=g;while(1){if((u|0)==(m|0)){t=1;break a}w=a[u>>0]|0;x=a[v>>0]|0;if((w&255)<(x&255)){t=1;break a}if((x&255)<(w&255)){t=0;break a}v=v+1|0;if((v|0)==(r|0)){t=0;break}else u=u+1|0}}while(0);if(g|0){if(!s)c[q>>2]=g;mR(g)}y=t;l=e;return y|0}if(o>>>0<=j>>>0){if((h|0)==(n|0)){y=0;l=e;return y|0}else{z=p;A=h}while(1){if((z|0)==(i|0)){y=1;B=29;break}h=a[z>>0]|0;p=a[A>>0]|0;if((h&255)<(p&255)){y=1;B=29;break}if((p&255)<(h&255)){y=0;B=29;break}A=A+1|0;if((A|0)==(n|0)){y=0;B=29;break}else z=z+1|0}if((B|0)==29){l=e;return y|0}}Gt(f,b,o);o=c[f>>2]|0;b=f+4|0;f=c[b>>2]|0;B=c[d>>2]|0;d=c[k>>2]|0;b:do if((B|0)==(d|0))C=0;else{k=o;z=B;while(1){if((k|0)==(f|0)){C=1;break b}n=a[k>>0]|0;A=a[z>>0]|0;if((n&255)<(A&255)){C=1;break b}if((A&255)<(n&255)){C=0;break b}z=z+1|0;if((z|0)==(d|0)){C=0;break}else k=k+1|0}}while(0);if(o|0){if((f|0)!=(o|0))c[b>>2]=o;mR(o)}y=C;l=e;return y|0}function At(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;e=a;a=b;a:while(1){b=a;f=a+-12|0;g=a+-8|0;h=a+-4|0;i=e;while(1){j=i;b:while(1){k=j;l=b-k|0;switch((l|0)/12|0|0){case 2:{m=5;break a;break}case 3:{m=7;break a;break}case 4:{m=8;break a;break}case 5:{m=9;break a;break}case 1:case 0:{m=46;break a;break}default:{}}if((l|0)<84){m=11;break a}n=j+(((l>>>0)/24|0)*12|0)|0;if((l|0)>11988){o=(l>>>0)/48|0;p=Dt(j,j+(o*12|0)|0,n,n+(o*12|0)|0,f,d)|0}else p=Bt(j,n,f,d)|0;if(ed[c[d>>2]&255](j,n)|0){q=f;r=p;break}else s=f;while(1){t=s+-12|0;if((j|0)==(t|0))break;if(ed[c[d>>2]&255](t,n)|0){m=29;break b}else s=t}o=j+12|0;if(ed[c[d>>2]&255](j,f)|0)u=o;else{if((o|0)==(f|0)){m=46;break a}else v=o;while(1){if(ed[c[d>>2]&255](j,v)|0)break;o=v+12|0;if((o|0)==(f|0)){m=46;break a}else v=o}o=c[v>>2]|0;c[v>>2]=c[f>>2];c[f>>2]=o;o=v+4|0;l=c[o>>2]|0;c[o>>2]=c[g>>2];c[g>>2]=l;l=v+8|0;o=c[l>>2]|0;c[l>>2]=c[h>>2];c[h>>2]=o;u=v+12|0}if((u|0)==(f|0)){m=46;break a}else{w=f;x=u}while(1){o=x;while(1){y=o+12|0;if(ed[c[d>>2]&255](j,o)|0){z=w;break}else o=y}while(1){A=z+-12|0;if(ed[c[d>>2]&255](j,A)|0)z=A;else break}if(o>>>0>=A>>>0){j=o;continue b}l=c[o>>2]|0;c[o>>2]=c[A>>2];c[A>>2]=l;l=o+4|0;B=z+-8|0;C=c[l>>2]|0;c[l>>2]=c[B>>2];c[B>>2]=C;C=o+8|0;B=z+-4|0;l=c[C>>2]|0;c[C>>2]=c[B>>2];c[B>>2]=l;w=A;x=y}}if((m|0)==29){m=0;l=c[j>>2]|0;c[j>>2]=c[t>>2];c[t>>2]=l;l=j+4|0;B=s+-8|0;C=c[l>>2]|0;c[l>>2]=c[B>>2];c[B>>2]=C;C=j+8|0;B=s+-4|0;l=c[C>>2]|0;c[C>>2]=c[B>>2];c[B>>2]=l;q=t;r=p+1|0}l=j+12|0;c:do if(l>>>0<q>>>0){B=n;C=q;D=l;E=r;while(1){F=D;while(1){G=F+12|0;if(ed[c[d>>2]&255](F,B)|0)F=G;else{H=C;break}}while(1){I=H+-12|0;if(ed[c[d>>2]&255](I,B)|0)break;else H=I}if(F>>>0>I>>>0){J=B;K=E;L=F;break c}o=c[F>>2]|0;c[F>>2]=c[I>>2];c[I>>2]=o;o=F+4|0;M=H+-8|0;N=c[o>>2]|0;c[o>>2]=c[M>>2];c[M>>2]=N;N=F+8|0;M=H+-4|0;o=c[N>>2]|0;c[N>>2]=c[M>>2];c[M>>2]=o;B=(B|0)==(F|0)?I:B;C=I;D=G;E=E+1|0}}else{J=n;K=r;L=l}while(0);if((L|0)!=(J|0)?ed[c[d>>2]&255](J,L)|0:0){l=c[L>>2]|0;c[L>>2]=c[J>>2];c[J>>2]=l;l=L+4|0;E=J+4|0;D=c[l>>2]|0;c[l>>2]=c[E>>2];c[E>>2]=D;D=L+8|0;E=J+8|0;l=c[D>>2]|0;c[D>>2]=c[E>>2];c[E>>2]=l;O=K+1|0}else O=K;if(!O){P=Ft(j,L,d)|0;l=L+12|0;if(Ft(l,a,d)|0){m=45;break}if(P){i=l;continue}}l=L;if(((l-k|0)/12|0|0)>=((b-l|0)/12|0|0)){m=44;break}At(j,L,d);i=L+12|0}if((m|0)==44){m=0;At(L+12|0,a,d);e=j;a=L;continue}else if((m|0)==45){m=0;if(P){m=46;break}else{e=j;a=L;continue}}}if((m|0)==5){if(!(ed[c[d>>2]&255](f,j)|0))return;L=c[j>>2]|0;c[j>>2]=c[f>>2];c[f>>2]=L;L=j+4|0;e=c[L>>2]|0;c[L>>2]=c[g>>2];c[g>>2]=e;e=j+8|0;g=c[e>>2]|0;c[e>>2]=c[h>>2];c[h>>2]=g;return}else if((m|0)==7){Bt(j,j+12|0,f,d)|0;return}else if((m|0)==8){Ct(j,j+12|0,j+24|0,f,d)|0;return}else if((m|0)==9){Dt(j,j+12|0,j+24|0,j+36|0,f,d)|0;return}else if((m|0)==11){Et(j,a,d);return}else if((m|0)==46)return}function Bt(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=ed[c[e>>2]&255](b,a)|0;g=ed[c[e>>2]&255](d,b)|0;if(!f){if(!g){h=0;return h|0}f=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=f;f=b+4|0;i=d+4|0;j=c[f>>2]|0;c[f>>2]=c[i>>2];c[i>>2]=j;j=b+8|0;i=d+8|0;k=c[j>>2]|0;c[j>>2]=c[i>>2];c[i>>2]=k;if(!(ed[c[e>>2]&255](b,a)|0)){h=1;return h|0}k=c[a>>2]|0;c[a>>2]=c[b>>2];c[b>>2]=k;k=a+4|0;i=c[k>>2]|0;c[k>>2]=c[f>>2];c[f>>2]=i;i=a+8|0;f=c[i>>2]|0;c[i>>2]=c[j>>2];c[j>>2]=f;h=2;return h|0}f=c[a>>2]|0;if(g){c[a>>2]=c[d>>2];c[d>>2]=f;g=a+4|0;j=d+4|0;i=c[g>>2]|0;c[g>>2]=c[j>>2];c[j>>2]=i;i=a+8|0;j=d+8|0;g=c[i>>2]|0;c[i>>2]=c[j>>2];c[j>>2]=g;h=1;return h|0}c[a>>2]=c[b>>2];c[b>>2]=f;f=a+4|0;g=b+4|0;j=c[f>>2]|0;c[f>>2]=c[g>>2];c[g>>2]=j;j=a+8|0;a=b+8|0;f=c[j>>2]|0;c[j>>2]=c[a>>2];c[a>>2]=f;if(!(ed[c[e>>2]&255](d,b)|0)){h=1;return h|0}e=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=e;e=d+4|0;b=c[g>>2]|0;c[g>>2]=c[e>>2];c[e>>2]=b;b=d+8|0;d=c[a>>2]|0;c[a>>2]=c[b>>2];c[b>>2]=d;h=2;return h|0}function Ct(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=Bt(a,b,d,f)|0;if(!(ed[c[f>>2]&255](e,d)|0)){h=g;return h|0}i=c[d>>2]|0;c[d>>2]=c[e>>2];c[e>>2]=i;i=d+4|0;j=e+4|0;k=c[i>>2]|0;c[i>>2]=c[j>>2];c[j>>2]=k;k=d+8|0;j=e+8|0;e=c[k>>2]|0;c[k>>2]=c[j>>2];c[j>>2]=e;if(!(ed[c[f>>2]&255](d,b)|0)){h=g+1|0;return h|0}e=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=e;e=b+4|0;d=c[e>>2]|0;c[e>>2]=c[i>>2];c[i>>2]=d;d=b+8|0;i=c[d>>2]|0;c[d>>2]=c[k>>2];c[k>>2]=i;if(!(ed[c[f>>2]&255](b,a)|0)){h=g+2|0;return h|0}f=c[a>>2]|0;c[a>>2]=c[b>>2];c[b>>2]=f;f=a+4|0;b=c[f>>2]|0;c[f>>2]=c[e>>2];c[e>>2]=b;b=a+8|0;a=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=a;h=g+3|0;return h|0}function Dt(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Ct(a,b,d,e,g)|0;if(!(ed[c[g>>2]&255](f,e)|0)){i=h;return i|0}j=c[e>>2]|0;c[e>>2]=c[f>>2];c[f>>2]=j;j=e+4|0;k=f+4|0;l=c[j>>2]|0;c[j>>2]=c[k>>2];c[k>>2]=l;l=e+8|0;k=f+8|0;f=c[l>>2]|0;c[l>>2]=c[k>>2];c[k>>2]=f;if(!(ed[c[g>>2]&255](e,d)|0)){i=h+1|0;return i|0}f=c[d>>2]|0;c[d>>2]=c[e>>2];c[e>>2]=f;f=d+4|0;e=c[f>>2]|0;c[f>>2]=c[j>>2];c[j>>2]=e;e=d+8|0;j=c[e>>2]|0;c[e>>2]=c[l>>2];c[l>>2]=j;if(!(ed[c[g>>2]&255](d,b)|0)){i=h+2|0;return i|0}j=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=j;j=b+4|0;d=c[j>>2]|0;c[j>>2]=c[f>>2];c[f>>2]=d;d=b+8|0;f=c[d>>2]|0;c[d>>2]=c[e>>2];c[e>>2]=f;if(!(ed[c[g>>2]&255](b,a)|0)){i=h+3|0;return i|0}g=c[a>>2]|0;c[a>>2]=c[b>>2];c[b>>2]=g;g=a+4|0;b=c[g>>2]|0;c[g>>2]=c[j>>2];c[j>>2]=b;b=a+8|0;a=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=a;i=h+4|0;return i|0}function Et(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=l;l=l+16|0;f=e;g=a+24|0;Bt(a,a+12|0,g,d)|0;h=a+36|0;if((h|0)==(b|0)){l=e;return}i=f+4|0;j=f+8|0;k=f+8|0;m=h;h=g;a:while(1){if(ed[c[d>>2]&255](m,h)|0){c[j>>2]=0;c[f>>2]=c[m>>2];g=m+4|0;c[i>>2]=c[g>>2];n=m+8|0;c[k>>2]=c[n>>2];c[n>>2]=0;c[g>>2]=0;c[m>>2]=0;g=h;n=m;p=0;while(1){q=n+4|0;if(!p)r=n+8|0;else{if((c[q>>2]|0)!=(p|0))c[q>>2]=p;mR(p);s=n+8|0;c[s>>2]=0;c[q>>2]=0;c[n>>2]=0;r=s}c[n>>2]=c[g>>2];t=g+4|0;c[q>>2]=c[t>>2];u=g+8|0;c[r>>2]=c[u>>2];c[u>>2]=0;c[t>>2]=0;c[g>>2]=0;if((g|0)==(a|0))break;q=g+-12|0;o=0;s=_(c[d>>2]|0,f|0,q|0)|0;v=o;o=0;if(v&1)break a;p=c[g>>2]|0;if(!s){w=14;break}else{s=g;g=q;n=s}}if((w|0)==14?(w=0,p|0):0){if((c[t>>2]|0)!=(p|0))c[t>>2]=p;mR(p);c[u>>2]=0;c[t>>2]=0;c[g>>2]=0}c[g>>2]=c[f>>2];c[t>>2]=c[i>>2];c[u>>2]=c[k>>2]}n=m+12|0;if((n|0)==(b|0)){w=3;break}else{s=m;m=n;h=s}}if((w|0)==3){l=e;return}e=Pa()|0;w=c[f>>2]|0;if(!w)$a(e|0);if((c[i>>2]|0)!=(w|0))c[i>>2]=w;mR(w);$a(e|0)}function Ft(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;e=l;l=l+16|0;f=e;switch((b-a|0)/12|0|0){case 2:{g=b+-12|0;if(!(ed[c[d>>2]&255](g,a)|0)){h=1;l=e;return h|0}i=c[a>>2]|0;c[a>>2]=c[g>>2];c[g>>2]=i;i=a+4|0;g=b+-8|0;j=c[i>>2]|0;c[i>>2]=c[g>>2];c[g>>2]=j;j=a+8|0;g=b+-4|0;i=c[j>>2]|0;c[j>>2]=c[g>>2];c[g>>2]=i;h=1;l=e;return h|0}case 3:{Bt(a,a+12|0,b+-12|0,d)|0;h=1;l=e;return h|0}case 4:{Ct(a,a+12|0,a+24|0,b+-12|0,d)|0;h=1;l=e;return h|0}case 5:{Dt(a,a+12|0,a+24|0,a+36|0,b+-12|0,d)|0;h=1;l=e;return h|0}case 1:case 0:{h=1;l=e;return h|0}default:{i=a+24|0;Bt(a,a+12|0,i,d)|0;g=a+36|0;a:do if((g|0)==(b|0)){k=1;m=0}else{j=f+4|0;n=f+8|0;p=f+8|0;q=g;r=0;s=i;b:while(1){if(ed[c[d>>2]&255](q,s)|0){c[n>>2]=0;c[f>>2]=c[q>>2];t=q+4|0;c[j>>2]=c[t>>2];u=q+8|0;c[p>>2]=c[u>>2];c[u>>2]=0;c[t>>2]=0;c[q>>2]=0;t=s;u=q;v=0;while(1){w=u+4|0;if(!v)x=u+8|0;else{if((c[w>>2]|0)!=(v|0))c[w>>2]=v;mR(v);y=u+8|0;c[y>>2]=0;c[w>>2]=0;c[u>>2]=0;x=y}c[u>>2]=c[t>>2];z=t+4|0;c[w>>2]=c[z>>2];A=t+8|0;c[x>>2]=c[A>>2];c[A>>2]=0;c[z>>2]=0;c[t>>2]=0;if((t|0)==(a|0))break;w=t+-12|0;o=0;y=_(c[d>>2]|0,f|0,w|0)|0;B=o;o=0;if(B&1)break b;v=c[t>>2]|0;if(!y){C=19;break}else{y=t;t=w;u=y}}if((C|0)==19?(C=0,v|0):0){if((c[z>>2]|0)!=(v|0))c[z>>2]=v;mR(v);c[A>>2]=0;c[z>>2]=0;c[t>>2]=0}c[t>>2]=c[f>>2];c[z>>2]=c[j>>2];c[A>>2]=c[p>>2];u=r+1|0;if((u|0)==8){k=0;m=(q+12|0)==(b|0);break a}else D=u}else D=r;u=q+12|0;if((u|0)==(b|0)){k=1;m=0;break a}else{y=q;q=u;r=D;s=y}}s=Pa()|0;r=c[f>>2]|0;if(!r)$a(s|0);if((c[j>>2]|0)!=(r|0))c[j>>2]=r;mR(r);$a(s|0)}while(0);h=k|m;l=e;return h|0}}return 0}function Gt(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=l;l=l+16|0;h=g+4|0;i=g;j=g+8|0;c[b>>2]=0;k=b+4|0;c[k>>2]=0;c[b+8>>2]=0;m=c[e>>2]|0;n=(c[e+4>>2]|0)-m|0;e=m;do if(!n){p=0;q=0;r=0;s=0}else{if((n|0)>=0){o=0;m=Z(209,n|0)|0;t=o;o=0;if(!(t&1)){c[k>>2]=m;c[b>>2]=m;t=m+n|0;c[b+8>>2]=t;CT(m|0,e|0,n|0)|0;c[k>>2]=t;p=t;q=m;r=m;s=t;break}}else{o=0;la(271,b|0);o=0}t=Pa()|0;m=c[b>>2]|0;if(!m)$a(t|0);if((c[k>>2]|0)!=(m|0))c[k>>2]=m;mR(m);$a(t|0)}while(0);if((p-q|0)>>>0>=f>>>0){l=g;return}a[j>>0]=0;if((p|0)!=(q|0)){c[i>>2]=r;if((s|0)==(r|0))u=s;else{r=h;n=i;a:while(1){c[r>>2]=c[n>>2];v=c[i>>2]|0;e=c[h>>2]|0;do{e=e+1|0;if((e|0)==(s|0))break a}while((d[e>>0]|0)>=(d[v>>0]|0));c[h>>2]=e;r=i;n=h}u=v}v=a[u>>0]|0;a[j>>0]=v;if(v<<24>>24)a[j>>0]=v+-1<<24>>24}v=p-q|0;u=q;q=p;if(v>>>0<f>>>0){o=0;na(94,b|0,f-v|0,j|0);j=o;o=0;if(j&1){j=Pa()|0;p=c[b>>2]|0;if(!p)$a(j|0);if((c[k>>2]|0)!=(p|0))c[k>>2]=p;mR(p);$a(j|0)}}else if(v>>>0>f>>>0?(v=u+f|0,(v|0)!=(q|0)):0)c[k>>2]=v;l=g;return}function Ht(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a[d+11>>0]|0;f=e<<24>>24<0;g=f?c[d>>2]|0:d;h=f?c[d+4>>2]|0:e&255;e=g+h|0;c[b>>2]=0;d=b+4|0;c[d>>2]=0;c[b+8>>2]=0;if(!h)return;if((h|0)>=0){o=0;f=Z(209,h|0)|0;i=o;o=0;if(!(i&1)){c[d>>2]=f;c[b>>2]=f;c[b+8>>2]=f+h;if(!h)return;else{j=g;k=f}do{a[k>>0]=a[j>>0]|0;j=j+1|0;k=(c[d>>2]|0)+1|0;c[d>>2]=k}while((j|0)!=(e|0));return}}else{o=0;la(271,b|0);o=0}e=Pa()|0;j=c[b>>2]|0;if(!j)$a(e|0);if((c[d>>2]|0)!=(j|0))c[d>>2]=j;mR(j);$a(e|0)}function It(b){b=b|0;var d=0,e=0;d=c[b>>2]|0;e=(c[b+4>>2]|0)-d|0;if(!e)return;b=e;e=d;while(1){b=b+-1|0;a[e>>0]=0;if(!b)break;else e=e+1|0}return}function Jt(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=l;l=l+32|0;e=d+20|0;f=d+16|0;g=d+12|0;h=d+8|0;i=d+4|0;j=d;c[h>>2]=c[a+4>>2];c[i>>2]=c[b>>2];c[j>>2]=c[b+4>>2];c[g>>2]=c[h>>2];c[f>>2]=c[i>>2];c[e>>2]=c[j>>2];Xl(a,g,f,e)|0;l=d;return a|0}function Kt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;f=l;l=l+32|0;g=f+12|0;h=f;i=c[d>>2]|0;j=i+e|0;c[g>>2]=0;k=g+4|0;c[k>>2]=0;c[g+8>>2]=0;do if(!e){m=i;n=0}else{if((e|0)>=0){o=0;p=Z(209,e|0)|0;q=o;o=0;if(!(q&1)){c[k>>2]=p;c[g>>2]=p;c[g+8>>2]=p+e;q=i;r=p;do{a[r>>0]=a[q>>0]|0;q=q+1|0;r=(c[k>>2]|0)+1|0;c[k>>2]=r}while((q|0)!=(j|0));m=c[d>>2]|0;n=r;break}}else{o=0;la(271,g|0);o=0}q=Pa()|0;p=c[g>>2]|0;if(!p)$a(q|0);if((c[k>>2]|0)!=(p|0))c[k>>2]=p;mR(p);$a(q|0)}while(0);j=m+e|0;e=c[d+4>>2]|0;c[h>>2]=0;d=h+4|0;c[d>>2]=0;c[h+8>>2]=0;m=e-j|0;do if(!m){s=h+8|0;t=n;u=0;v=0;w=0}else{if((m|0)>=0){o=0;i=Z(209,m|0)|0;q=o;o=0;if(!(q&1)){c[d>>2]=i;c[h>>2]=i;q=i+m|0;p=h+8|0;c[p>>2]=q;x=i;if((j|0)==(e|0)){s=p;t=n;u=x;v=x;w=q;break}else{y=j;z=i}do{a[z>>0]=a[y>>0]|0;y=y+1|0;z=(c[d>>2]|0)+1|0;c[d>>2]=z}while((y|0)!=(e|0));s=p;t=c[k>>2]|0;u=c[h>>2]|0;v=z;w=c[p>>2]|0;break}}else{o=0;la(271,h|0);o=0}r=Pa()|0;i=c[h>>2]|0;if(i|0){if((c[d>>2]|0)!=(i|0))c[d>>2]=i;mR(i)}i=c[g>>2]|0;if(!i)$a(r|0);if((c[k>>2]|0)!=(i|0))c[k>>2]=i;mR(i);$a(r|0)}while(0);c[b>>2]=c[g>>2];c[b+4>>2]=t;c[b+8>>2]=c[g+8>>2];c[b+12>>2]=u;c[b+16>>2]=v;c[b+20>>2]=w;c[s>>2]=0;l=f;return}function Lt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0;f=l;l=l+16|0;g=f+4|0;h=f;c[b>>2]=0;i=b+4|0;c[i>>2]=0;c[b+8>>2]=0;j=c[d>>2]|0;k=d+4|0;d=c[k>>2]|0;if(j>>>0>=d>>>0){l=f;return}m=g+4|0;n=g+8|0;p=b+8|0;q=g+8|0;r=j;j=d;while(1){d=r;r=r+e|0;c[g>>2]=r;c[h>>2]=j;s=c[(j>>>0<r>>>0?h:g)>>2]|0;c[g>>2]=0;c[m>>2]=0;c[n>>2]=0;t=s-d|0;u=s;if(t|0){if((t|0)<0){v=6;break}o=0;s=Z(209,t|0)|0;w=o;o=0;if(w&1){v=10;break}c[m>>2]=s;c[g>>2]=s;c[q>>2]=s+t;if((d|0)!=(u|0)){t=d;d=s;do{a[d>>0]=a[t>>0]|0;t=t+1|0;d=(c[m>>2]|0)+1|0;c[m>>2]=d}while((t|0)!=(u|0))}}u=c[i>>2]|0;if(u>>>0>=(c[p>>2]|0)>>>0){o=0;ma(183,b|0,g|0);t=o;o=0;if(t&1){v=23;break}t=c[g>>2]|0;if(t|0){if((c[m>>2]|0)!=(t|0))c[m>>2]=t;mR(t)}}else{c[u>>2]=0;t=u+4|0;c[t>>2]=0;c[u+8>>2]=0;c[u>>2]=c[g>>2];c[t>>2]=c[m>>2];c[u+8>>2]=c[q>>2];c[q>>2]=0;c[m>>2]=0;c[g>>2]=0;c[i>>2]=(c[i>>2]|0)+12}j=c[k>>2]|0;if(r>>>0>=j>>>0){v=3;break}}if((v|0)==3){l=f;return}else if((v|0)==6){o=0;la(271,g|0);o=0;f=Pa()|0;j=z;r=c[g>>2]|0;if(!r){x=f;y=j;v=22}else{if((c[m>>2]|0)!=(r|0))c[m>>2]=r;mR(r);x=f;y=j;v=22}}else if((v|0)==10){j=Pa()|0;x=j;y=z;v=22}else if((v|0)==23){j=Pa()|0;f=z;r=c[g>>2]|0;if(!r){A=f;B=j}else{if((c[m>>2]|0)!=(r|0))c[m>>2]=r;mR(r);A=f;B=j}}if((v|0)==22){A=y;B=x}x=c[b>>2]|0;if(!x)$a(B|0);y=c[i>>2]|0;if((y|0)==(x|0))C=x;else{A=y;while(1){y=A+-12|0;c[i>>2]=y;v=c[y>>2]|0;if(!v)D=y;else{y=A+-8|0;if((c[y>>2]|0)!=(v|0))c[y>>2]=v;mR(v);D=c[i>>2]|0}if((D|0)==(x|0))break;else A=D}C=c[b>>2]|0}mR(C);$a(B|0)}function Mt(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e|0)/12|0;g=f+1|0;if(g>>>0>357913941)CP(a);h=a+8|0;i=((c[h>>2]|0)-e|0)/12|0;e=i<<1;j=i>>>0<178956970?(e>>>0<g>>>0?g:e):357913941;do if(j){if(j>>>0<=357913941){k=kR(j*12|0)|0;break}e=Ja(8)|0;o=0;ma(153,e|0,92198);g=o;o=0;if(g&1){g=Pa()|0;Sa(e|0);$a(g|0)}else{c[e>>2]=57580;Xa(e|0,7152,205)}}else k=0;while(0);e=k+(f*12|0)|0;g=e;i=k+(j*12|0)|0;c[k+(f*12|0)+8>>2]=0;c[e>>2]=c[b>>2];j=b+4|0;c[k+(f*12|0)+4>>2]=c[j>>2];l=b+8|0;c[k+(f*12|0)+8>>2]=c[l>>2];c[l>>2]=0;c[j>>2]=0;c[b>>2]=0;b=e+12|0;j=c[a>>2]|0;l=c[d>>2]|0;if((l|0)==(j|0)){m=g;n=j;p=j}else{f=l;l=g;g=e;do{e=g+-12|0;k=f;f=f+-12|0;c[e>>2]=0;q=g+-8|0;c[q>>2]=0;c[g+-4>>2]=0;c[e>>2]=c[f>>2];e=k+-8|0;c[q>>2]=c[e>>2];q=k+-4|0;c[g+-4>>2]=c[q>>2];c[q>>2]=0;c[e>>2]=0;c[f>>2]=0;g=l+-12|0;l=g}while((f|0)!=(j|0));m=l;n=c[a>>2]|0;p=c[d>>2]|0}c[a>>2]=m;c[d>>2]=b;c[h>>2]=i;i=n;if((p|0)!=(i|0)){h=p;do{p=h;h=h+-12|0;b=c[h>>2]|0;if(b|0){d=p+-8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}}while((h|0)!=(i|0))}if(!n)return;mR(n);return}function Nt(a){a=a|0;var b=0,d=0;c[a>>2]=10288;b=c[a+8>>2]|0;if(!b)return;d=a+12|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b);return}function Ot(a){a=a|0;var b=0,d=0;c[a>>2]=10288;b=c[a+8>>2]|0;if(!b){mR(a);return}d=a+12|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b);mR(a);return}function Pt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;f=l;l=l+16|0;g=f;h=b+8|0;sd[c[(c[b>>2]|0)+16>>2]&255](b,h);i=ut(d,h)|0;h=qt(d,0,i)|0;do switch(c[b+4>>2]|0){case 0:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=9;j=g;k=74996;m=j+9|0;do{a[j>>0]=a[k>>0]|0;j=j+1|0;k=k+1|0}while((j|0)<(m|0));n=g+9|0;break}case 1:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=9;j=g;k=74767;m=j+9|0;do{a[j>>0]=a[k>>0]|0;j=j+1|0;k=k+1|0}while((j|0)<(m|0));n=g+9|0;break}case 2:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=9;j=g;k=74777;m=j+9|0;do{a[j>>0]=a[k>>0]|0;j=j+1|0;k=k+1|0}while((j|0)<(m|0));n=g+9|0;break}case 6:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=9;j=g;k=74819;m=j+9|0;do{a[j>>0]=a[k>>0]|0;j=j+1|0;k=k+1|0}while((j|0)<(m|0));n=g+9|0;break}case 3:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=9;j=g;k=74787;m=j+9|0;do{a[j>>0]=a[k>>0]|0;j=j+1|0;k=k+1|0}while((j|0)<(m|0));n=g+9|0;break}case 4:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=9;j=g;k=74797;m=j+9|0;do{a[j>>0]=a[k>>0]|0;j=j+1|0;k=k+1|0}while((j|0)<(m|0));n=g+9|0;break}case 7:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=9;j=g;k=74829;m=j+9|0;do{a[j>>0]=a[k>>0]|0;j=j+1|0;k=k+1|0}while((j|0)<(m|0));n=g+9|0;break}case 8:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=9;j=g;k=74839;m=j+9|0;do{a[j>>0]=a[k>>0]|0;j=j+1|0;k=k+1|0}while((j|0)<(m|0));n=g+9|0;break}case 5:{p=kR(16)|0;c[g>>2]=p;c[g+8>>2]=-2147483632;c[g+4>>2]=11;j=p;k=74807;m=j+11|0;do{a[j>>0]=a[k>>0]|0;j=j+1|0;k=k+1|0}while((j|0)<(m|0));n=p+11|0;break}default:{}}while(0);a[n>>0]=0;o=0;n=_(95,d|0,g|0)|0;k=o;o=0;if(k&1){k=Pa()|0;if((a[g+11>>0]|0)>=0)$a(k|0);mR(c[g>>2]|0);$a(k|0)}else{k=h+i+n|0;if((a[g+11>>0]|0)>=0){q=wt(d,k)|0;r=k+e|0;s=r+q|0;l=f;return s|0}mR(c[g>>2]|0);q=wt(d,k)|0;r=k+e|0;s=r+q|0;l=f;return s|0}return 0}function Qt(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;e=l;l=l+16|0;f=e;et(d)|0;dt(f,d);o=0;g=Z(230,f|0)|0;h=o;o=0;if(h&1){h=Pa()|0;i=z;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);j=i;k=h;$a(k|0)}c[b+4>>2]=g;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);if(!($s(d,0)|0)){g=Ja(24)|0;o=0;ma(143,g|0,4);h=o;o=0;if(!(h&1))Xa(g|0,4424,56);h=Pa()|0;i=z;Sa(g|0);j=i;k=h;$a(k|0)}ct(f,d);d=b+8|0;k=c[d>>2]|0;h=b+12|0;if(!k){m=b+16|0;n=c[f>>2]|0;c[d>>2]=n;p=f+4|0;q=c[p>>2]|0;c[h>>2]=q;r=f+8|0;s=c[r>>2]|0;c[m>>2]=s;l=e;return}if((c[h>>2]|0)!=(k|0))c[h>>2]=k;mR(k);k=b+16|0;c[k>>2]=0;c[h>>2]=0;c[d>>2]=0;m=k;n=c[f>>2]|0;c[d>>2]=n;p=f+4|0;q=c[p>>2]|0;c[h>>2]=q;r=f+8|0;s=c[r>>2]|0;c[m>>2]=s;l=e;return}function Rt(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;d=l;l=l+16|0;e=d;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;a[e+11>>0]=9;f=e;g=74996;h=f+9|0;do{a[f>>0]=a[g>>0]|0;f=f+1|0;g=g+1|0}while((f|0)<(h|0));a[e+9>>0]=0;i=b+11|0;j=a[i>>0]|0;k=j<<24>>24<0;m=b+4|0;n=k?c[m>>2]|0:j&255;j=(n|0)==9;if(j)if(!(aF(e,k?c[b>>2]|0:b,9)|0)){p=0;l=d;return p|0};c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;a[e+11>>0]=9;f=e;g=74767;h=f+9|0;do{a[f>>0]=a[g>>0]|0;f=f+1|0;g=g+1|0}while((f|0)<(h|0));a[e+9>>0]=0;if(j)if(!(aF(e,k?c[b>>2]|0:b,9)|0)){p=1;l=d;return p|0};c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;a[e+11>>0]=9;f=e;g=74777;h=f+9|0;do{a[f>>0]=a[g>>0]|0;f=f+1|0;g=g+1|0}while((f|0)<(h|0));a[e+9>>0]=0;if(j)if(!(aF(e,k?c[b>>2]|0:b,9)|0)){p=2;l=d;return p|0};c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;a[e+11>>0]=9;f=e;g=74787;h=f+9|0;do{a[f>>0]=a[g>>0]|0;f=f+1|0;g=g+1|0}while((f|0)<(h|0));a[e+9>>0]=0;if(j)if(!(aF(e,k?c[b>>2]|0:b,9)|0)){p=3;l=d;return p|0};c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;a[e+11>>0]=9;f=e;g=74797;h=f+9|0;do{a[f>>0]=a[g>>0]|0;f=f+1|0;g=g+1|0}while((f|0)<(h|0));a[e+9>>0]=0;if(j)if(!(aF(e,k?c[b>>2]|0:b,9)|0)){p=4;l=d;return p|0}j=kR(16)|0;f=j;g=74807;h=f+11|0;do{a[f>>0]=a[g>>0]|0;f=f+1|0;g=g+1|0}while((f|0)<(h|0));a[j+11>>0]=0;if((n|0)==11){n=(aF(j,k?c[b>>2]|0:b,11)|0)==0;mR(j);if(n){p=5;l=d;return p|0}}else mR(j);c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;a[e+11>>0]=9;f=e;g=74819;h=f+9|0;do{a[f>>0]=a[g>>0]|0;f=f+1|0;g=g+1|0}while((f|0)<(h|0));a[e+9>>0]=0;j=a[i>>0]|0;i=j<<24>>24<0;n=((i?c[m>>2]|0:j&255)|0)==9;if(n)if(!(aF(e,i?c[b>>2]|0:b,9)|0)){p=6;l=d;return p|0};c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;a[e+11>>0]=9;f=e;g=74829;h=f+9|0;do{a[f>>0]=a[g>>0]|0;f=f+1|0;g=g+1|0}while((f|0)<(h|0));a[e+9>>0]=0;if(n)if(!(aF(e,i?c[b>>2]|0:b,9)|0)){p=7;l=d;return p|0};c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;a[e+11>>0]=9;f=e;g=74839;h=f+9|0;do{a[f>>0]=a[g>>0]|0;f=f+1|0;g=g+1|0}while((f|0)<(h|0));a[e+9>>0]=0;if(n)if(!(aF(e,i?c[b>>2]|0:b,9)|0)){p=8;l=d;return p|0}p=Ja(24)|0;o=0;ma(143,p|0,16);d=o;o=0;if(d&1){d=Pa()|0;Sa(p|0);$a(d|0)}else Xa(p|0,4424,56);return 0}function St(a){a=a|0;var b=0,d=0;c[a>>2]=10316;c[a+24>>2]=10056;wn(a+52|0,c[a+56>>2]|0);wn(a+40|0,c[a+44>>2]|0);yn(a+28|0,c[a+32>>2]|0);c[a+4>>2]=10288;b=c[a+12>>2]|0;if(!b)return;d=a+16|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b);return}function Tt(a){a=a|0;var b=0,d=0;c[a>>2]=10316;c[a+24>>2]=10056;wn(a+52|0,c[a+56>>2]|0);wn(a+40|0,c[a+44>>2]|0);yn(a+28|0,c[a+32>>2]|0);c[a+4>>2]=10288;b=c[a+12>>2]|0;if(!b){mR(a);return}d=a+16|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b);mR(a);return}function Ut(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=a+24|0;if(Do(d)|0)e=0;else{f=yo(d,b,0)|0;e=(qt(b,0,f)|0)+f|0}f=(Pt(a+4|0,b,0)|0)+e|0;e=f+(kt(b,0)|0)|0;return (wt(b,e)|0)+c+e|0}function Vt(a,b){a=a|0;b=b|0;var c=0,d=0;et(b)|0;if(Ys(b)|0){c=Ja(24)|0;o=0;na(73,c|0,16,74900);d=o;o=0;if(d&1){d=Pa()|0;Sa(c|0);$a(d|0)}else Xa(c|0,4424,56)}Qt(a+4|0,b);if(!($s(b,0)|0))return;zo(a+24|0,b);return}function Wt(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;d=l;l=l+16|0;e=d+8|0;f=d+4|0;g=d;h=c[b>>2]|0;i=c[b+4>>2]|0;if((h|0)==(i|0)){j=0;l=d;return j|0}c[e>>2]=h;if((a[h>>0]|0)==48){c[e>>2]=h+1;c[f>>2]=0;switch(Zu(e,i,f)|0){case 0:case -96:{c[f>>2]=(c[e>>2]|0)-h+(c[f>>2]|0);c[g>>2]=0;h=$u(e,i,g)|0;k=(c[g>>2]|h|0)==0?c[f>>2]|0:0;break}default:k=0}m=k}else m=0;j=m;l=d;return j|0}function Xt(a){a=a|0;var b=0,d=0;c[a>>2]=10344;b=c[a+16>>2]|0;if(b|0){d=a+20|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+4>>2]|0;if(!b)return;d=a+8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b);return}function Yt(a){a=a|0;var b=0,d=0;c[a>>2]=10344;b=c[a+16>>2]|0;if(b|0){d=a+20|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+4>>2]|0;if(!b){mR(a);return}d=a+8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b);mR(a);return}function Zt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;f=l;l=l+16|0;g=f;h=b+16|0;if((c[h>>2]|0)==(c[b+20>>2]|0))i=0;else{j=ot(d,h)|0;i=(qt(d,0,j)|0)+j|0}j=b+4|0;sd[c[(c[b>>2]|0)+16>>2]&255](b,j);b=ut(d,j)|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;j=g+11|0;a[j>>0]=9;h=g;k=74996;m=h+9|0;do{a[h>>0]=a[k>>0]|0;h=h+1|0;k=k+1|0}while((h|0)<(m|0));a[g+9>>0]=0;o=0;k=_(95,d|0,g|0)|0;h=o;o=0;if(h&1){h=Pa()|0;if((a[j>>0]|0)>=0)$a(h|0);mR(c[g>>2]|0);$a(h|0)}else{h=b+i+k|0;if((a[j>>0]|0)>=0){n=wt(d,h)|0;p=h+e|0;q=p+n|0;l=f;return q|0}mR(c[g>>2]|0);n=wt(d,h)|0;p=h+e|0;q=p+n|0;l=f;return q|0}return 0}function _t(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=l;l=l+32|0;f=e;g=e+12|0;et(d)|0;dt(f,d);if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);ct(g,d);f=b+4|0;h=c[f>>2]|0;i=b+8|0;if(!h)j=b+12|0;else{if((c[i>>2]|0)!=(h|0))c[i>>2]=h;mR(h);h=b+12|0;c[h>>2]=0;c[i>>2]=0;c[f>>2]=0;j=h}c[f>>2]=c[g>>2];c[i>>2]=c[g+4>>2];c[j>>2]=c[g+8>>2];if(!($s(d,0)|0)){l=e;return}at(g,d);d=b+16|0;j=c[d>>2]|0;i=b+20|0;if(!j)k=b+24|0;else{if((c[i>>2]|0)!=(j|0))c[i>>2]=j;mR(j);j=b+24|0;c[j>>2]=0;c[i>>2]=0;c[d>>2]=0;k=j}c[d>>2]=c[g>>2];c[i>>2]=c[g+4>>2];c[k>>2]=c[g+8>>2];l=e;return}function $t(a){a=a|0;xn(a);mR(a);return}function au(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;e=l;l=l+48|0;f=e+32|0;g=e+16|0;h=e;Us(f,a+28|0);o=0;i=_(128,b|0,f|0)|0;j=o;o=0;if(j&1){j=Pa()|0;k=z;m=c[f>>2]|0;if(m|0){n=f+4|0;if((c[n>>2]|0)!=(m|0))c[n>>2]=m;mR(m)}p=k;q=j;$a(q|0)}j=c[f>>2]|0;if(j|0){k=f+4|0;if((c[k>>2]|0)!=(j|0))c[k>>2]=j;mR(j)}c[f>>2]=0;j=f+4|0;c[j>>2]=0;c[f+8>>2]=0;k=a+4|0;m=a+8|0;n=a+16|0;r=a+20|0;o=0;ma(184,f|0,(((c[r>>2]|0)-(c[n>>2]|0)|0)/40|0)+(((c[m>>2]|0)-(c[k>>2]|0)|0)/40|0)|0);a=o;o=0;a:do if(a&1){s=Pa()|0;t=z;u=s}else{s=c[k>>2]|0;b:do if((s|0)!=(c[m>>2]|0)){v=f+8|0;w=g+4|0;x=g+8|0;y=s;while(1){o=0;ma(162,g|0,y|0);A=o;o=0;if(A&1){B=24;break}A=c[j>>2]|0;if(A>>>0>=(c[v>>2]|0)>>>0){o=0;ma(168,f|0,g|0);C=o;o=0;if(C&1){B=25;break}C=c[g>>2]|0;if(C|0){if((c[w>>2]|0)!=(C|0))c[w>>2]=C;mR(C)}}else{c[A>>2]=0;C=A+4|0;c[C>>2]=0;c[A+8>>2]=0;c[A>>2]=c[g>>2];c[C>>2]=c[w>>2];c[A+8>>2]=c[x>>2];c[x>>2]=0;c[w>>2]=0;c[g>>2]=0;c[j>>2]=A+12}y=y+40|0;if((y|0)==(c[m>>2]|0))break b}if((B|0)==24){y=Pa()|0;D=z;E=y}else if((B|0)==25){y=Pa()|0;x=z;v=c[g>>2]|0;if(!v){D=x;E=y}else{if((c[w>>2]|0)!=(v|0))c[w>>2]=v;mR(v);D=x;E=y}}t=D;u=E;break a}while(0);s=c[n>>2]|0;c:do if((s|0)!=(c[r>>2]|0)){y=f+8|0;x=h+4|0;v=h+8|0;A=h+4|0;C=s;while(1){o=0;la(287,g|0);F=o;o=0;if(F&1){B=49;break}o=0;ma(162,h|0,C|0);F=o;o=0;if(F&1){B=50;break}o=0;F=_(128,g|0,h|0)|0;G=o;o=0;if(G&1){B=51;break}G=c[h>>2]|0;if(G|0){if((c[A>>2]|0)!=(G|0))c[A>>2]=G;mR(G)}o=0;$(99,g|0,3,F|0)|0;F=o;o=0;if(F&1){B=56;break}o=0;ma(151,h|0,g|0);F=o;o=0;if(F&1){B=57;break}F=c[j>>2]|0;if(F>>>0>=(c[y>>2]|0)>>>0){o=0;ma(168,f|0,h|0);G=o;o=0;if(G&1){B=58;break}G=c[h>>2]|0;if(G|0){if((c[x>>2]|0)!=(G|0))c[x>>2]=G;mR(G)}}else{c[F>>2]=0;G=F+4|0;c[G>>2]=0;c[F+8>>2]=0;c[F>>2]=c[h>>2];c[G>>2]=c[x>>2];c[F+8>>2]=c[v>>2];c[v>>2]=0;c[x>>2]=0;c[h>>2]=0;c[j>>2]=F+12}it(g);C=C+40|0;if((C|0)==(c[r>>2]|0))break c}if((B|0)==49){C=Pa()|0;H=z;I=C}else if((B|0)==50){C=Pa()|0;J=z;K=C;B=55}else if((B|0)==51){C=Pa()|0;v=z;y=c[h>>2]|0;if(!y){J=v;K=C;B=55}else{if((c[A>>2]|0)!=(y|0))c[A>>2]=y;mR(y);J=v;K=C;B=55}}else if((B|0)==56){C=Pa()|0;L=z;M=C;B=63}else if((B|0)==57){C=Pa()|0;N=z;O=C;B=62}else if((B|0)==58){C=Pa()|0;v=z;y=c[h>>2]|0;if(!y){N=v;O=C;B=62}else{if((c[x>>2]|0)!=(y|0))c[x>>2]=y;mR(y);N=v;O=C;B=62}}if((B|0)==55){L=J;M=K;B=63}else if((B|0)==62){L=N;M=O;B=63}if((B|0)==63){it(g);H=L;I=M}t=H;u=I;break a}while(0);o=0;s=_(118,b|0,f|0)|0;C=o;o=0;if(!(C&1)){if((c[r>>2]|0)==(c[n>>2]|0))P=(c[m>>2]|0)==(c[k>>2]|0)?0:2;else P=3;o=0;C=_(117,b|0,P|0)|0;v=o;o=0;if(!(v&1)?(v=s+i+C|0,o=0,C=_(110,b|0,v|0)|0,s=o,o=0,!(s&1)):0){s=v+d+C|0;C=c[f>>2]|0;if(!C){l=e;return s|0}v=c[j>>2]|0;if((v|0)==(C|0))Q=C;else{y=v;while(1){v=y+-12|0;c[j>>2]=v;w=c[v>>2]|0;if(!w)R=v;else{v=y+-8|0;if((c[v>>2]|0)!=(w|0))c[v>>2]=w;mR(w);R=c[j>>2]|0}if((R|0)==(C|0))break;else y=R}Q=c[f>>2]|0}mR(Q);l=e;return s|0}}y=Pa()|0;t=z;u=y}while(0);e=c[f>>2]|0;if(e|0){Q=c[j>>2]|0;if((Q|0)==(e|0))S=e;else{R=Q;while(1){Q=R+-12|0;c[j>>2]=Q;d=c[Q>>2]|0;if(!d)T=Q;else{Q=R+-8|0;if((c[Q>>2]|0)!=(d|0))c[Q>>2]=d;mR(d);T=c[j>>2]|0}if((T|0)==(e|0))break;else R=T}S=c[f>>2]|0}mR(S)}p=t;q=u;$a(q|0);return 0}function bu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=l;l=l+112|0;e=d+76|0;f=d+88|0;g=d+56|0;h=d+16|0;i=d;j=a+4|0;k=c[j>>2]|0;m=a+8|0;n=c[m>>2]|0;if((n|0)!=(k|0)){p=n;do{n=p+-40|0;c[m>>2]=n;rd[c[c[n>>2]>>2]&511](n);p=c[m>>2]|0}while((p|0)!=(k|0))}k=a+16|0;p=c[k>>2]|0;n=a+20|0;q=c[n>>2]|0;if((q|0)!=(p|0)){r=q;do{q=r+-40|0;c[n>>2]=q;rd[c[c[q>>2]>>2]&511](q);r=c[n>>2]|0}while((r|0)!=(p|0))}et(b)|0;Ys(b)|0;if($s(b,0)|0?(ct(e,b),p=c[e>>2]|0,p|0):0){r=e+4|0;if((c[r>>2]|0)!=(p|0))c[r>>2]=p;mR(p)}p=ft(b)|0;a:do if(p|0){r=h+4|0;e=a+12|0;q=h+28|0;s=h+16|0;t=h+8|0;u=h+20|0;v=h+32|0;w=f+4|0;x=h+4|0;y=a+24|0;A=h+28|0;B=h+16|0;C=h+8|0;D=h+20|0;E=h+32|0;F=i+4|0;G=p;while(1){ct(f,b);o=0;ma(169,g|0,f|0);H=o;o=0;if(H&1){I=38;break}o=0;H=_(120,g|0,3)|0;J=o;o=0;if(J&1){I=39;break}if(!H){o=0;H=_(120,g|0,1)|0;J=o;o=0;if(J&1){I=68;break}if(H|0){I=66;break}o=0;H=_(120,g|0,2)|0;J=o;o=0;if(J&1){I=68;break}if(H|0){I=66;break}o=0;H=_(120,g|0,4)|0;J=o;o=0;if(J&1){I=68;break}if(H|0){I=66;break}c[h>>2]=10400;K=r;L=K+36|0;do{c[K>>2]=0;K=K+4|0}while((K|0)<(L|0));o=0;ma(157,h|0,f|0);H=o;o=0;if(H&1){I=88;break}H=c[m>>2]|0;if((H|0)==(c[e>>2]|0)){o=0;ma(164,j|0,h|0);J=o;o=0;if(J&1){I=88;break}}else{o=0;ma(163,H|0,h|0);H=o;o=0;if(H&1){I=88;break}c[m>>2]=(c[m>>2]|0)+40}c[h>>2]=10400;H=c[q>>2]|0;if(H|0){if((c[v>>2]|0)!=(H|0))c[v>>2]=H;mR(H)}H=c[s>>2]|0;if(H|0){if((c[u>>2]|0)!=(H|0))c[u>>2]=H;mR(H)}H=c[r>>2]|0;if(H|0){if((c[t>>2]|0)!=(H|0))c[t>>2]=H;mR(H)}}else{c[h>>2]=10428;K=x;L=K+36|0;do{c[K>>2]=0;K=K+4|0}while((K|0)<(L|0));o=0;ma(145,i|0,g|0);H=o;o=0;if(H&1){I=40;break}o=0;ma(157,h|0,i|0);H=o;o=0;if(H&1){I=41;break}H=c[i>>2]|0;if(H|0){if((c[F>>2]|0)!=(H|0))c[F>>2]=H;mR(H)}H=c[n>>2]|0;if((H|0)==(c[y>>2]|0)){o=0;ma(166,k|0,h|0);J=o;o=0;if(J&1){I=46;break}}else{o=0;ma(165,H|0,h|0);H=o;o=0;if(H&1){I=46;break}c[n>>2]=(c[n>>2]|0)+40}c[h>>2]=10428;H=c[A>>2]|0;if(H|0){if((c[E>>2]|0)!=(H|0))c[E>>2]=H;mR(H)}H=c[B>>2]|0;if(H|0){if((c[D>>2]|0)!=(H|0))c[D>>2]=H;mR(H)}H=c[x>>2]|0;if(H|0){if((c[C>>2]|0)!=(H|0))c[C>>2]=H;mR(H)}}H=(c[w>>2]|0)-(c[f>>2]|0)|0;J=G>>>0<=H>>>0;G=G-H|0;Xs(g);H=c[f>>2]|0;if(H|0){if((c[w>>2]|0)!=(H|0))c[w>>2]=H;mR(H)}if((G|0)==0|J)break a}do if((I|0)==38){G=Pa()|0;M=z;N=G}else if((I|0)==39){G=Pa()|0;O=z;P=G;I=106}else if((I|0)==40){G=Pa()|0;Q=z;R=G;I=45}else if((I|0)==41){G=Pa()|0;y=z;e=c[i>>2]|0;if(!e){Q=y;R=G;I=45}else{if((c[F>>2]|0)!=(e|0))c[F>>2]=e;mR(e);Q=y;R=G;I=45}}else if((I|0)==46){G=Pa()|0;S=z;T=G;I=47}else if((I|0)==66){G=Ja(24)|0;y=fo()|0;o=0;oa(40,G|0,16,y|0,75066);y=o;o=0;if(y&1){y=Pa()|0;e=z;Sa(G|0);O=e;P=y;I=106;break}else{o=0;na(72,G|0,4424,56);o=0;I=68;break}}else if((I|0)==88){G=Pa()|0;y=z;c[h>>2]=10400;e=c[q>>2]|0;if(e|0){if((c[v>>2]|0)!=(e|0))c[v>>2]=e;mR(e)}e=c[s>>2]|0;if(e|0){if((c[u>>2]|0)!=(e|0))c[u>>2]=e;mR(e)}e=c[r>>2]|0;if(e|0){if((c[t>>2]|0)!=(e|0))c[t>>2]=e;mR(e)}O=y;P=G;I=106}while(0);if((I|0)==45){S=Q;T=R;I=47}else if((I|0)==68){t=Pa()|0;O=z;P=t;I=106}if((I|0)==47){c[h>>2]=10428;t=c[A>>2]|0;if(t|0){if((c[E>>2]|0)!=(t|0))c[E>>2]=t;mR(t)}t=c[B>>2]|0;if(t|0){if((c[D>>2]|0)!=(t|0))c[D>>2]=t;mR(t)}t=c[x>>2]|0;if(t|0){if((c[C>>2]|0)!=(t|0))c[C>>2]=t;mR(t)}O=S;P=T;I=106}if((I|0)==106){Xs(g);M=O;N=P}t=c[f>>2]|0;if(t|0){if((c[w>>2]|0)!=(t|0))c[w>>2]=t;mR(t)}U=M;V=N;$a(V|0)}while(0);ct(f,b);o=0;ma(157,a+28|0,f|0);a=o;o=0;if(a&1){a=Pa()|0;b=z;N=c[f>>2]|0;if(N|0){M=f+4|0;if((c[M>>2]|0)!=(N|0))c[M>>2]=N;mR(N)}U=b;V=a;$a(V|0)}else{V=c[f>>2]|0;if(!V){l=d;return}a=f+4|0;if((c[a>>2]|0)!=(V|0))c[a>>2]=V;mR(V);l=d;return}}function cu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0;d=a+8|0;e=c[a>>2]|0;f=e;if((((c[d>>2]|0)-e|0)/12|0)>>>0>=b>>>0)return;g=a+4|0;if(b>>>0>357913941){h=Ja(8)|0;o=0;ma(153,h|0,92198);i=o;o=0;if(i&1){i=Pa()|0;Sa(h|0);$a(i|0)}else{c[h>>2]=57580;Xa(h|0,7152,205)}}h=c[g>>2]|0;i=kR(b*12|0)|0;j=i+(((h-e|0)/12|0)*12|0)|0;k=j;l=i+(b*12|0)|0;b=h;if((b|0)==(f|0)){m=k;n=e;p=f}else{e=b;b=k;h=j;do{j=h+-12|0;i=e;e=e+-12|0;c[j>>2]=0;q=h+-8|0;c[q>>2]=0;c[h+-4>>2]=0;c[j>>2]=c[e>>2];j=i+-8|0;c[q>>2]=c[j>>2];q=i+-4|0;c[h+-4>>2]=c[q>>2];c[q>>2]=0;c[j>>2]=0;c[e>>2]=0;h=b+-12|0;b=h}while((e|0)!=(f|0));m=b;n=c[a>>2]|0;p=c[g>>2]|0}c[a>>2]=m;c[g>>2]=k;c[d>>2]=l;l=n;if((p|0)!=(l|0)){d=p;do{p=d;d=d+-12|0;k=c[d>>2]|0;if(k|0){g=p+-8|0;if((c[g>>2]|0)!=(k|0))c[g>>2]=k;mR(k)}}while((d|0)!=(l|0))}if(!n)return;mR(n);return}function du(a){a=a|0;var b=0,d=0;c[a>>2]=10400;b=c[a+28>>2]|0;if(b|0){d=a+32|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+16>>2]|0;if(b|0){d=a+20|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+4>>2]|0;if(!b)return;d=a+8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b);return}function eu(a){a=a|0;var b=0,d=0;c[a>>2]=10400;b=c[a+28>>2]|0;if(b|0){d=a+32|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+16>>2]|0;if(b|0){d=a+20|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+4>>2]|0;if(!b){mR(a);return}d=a+8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b);mR(a);return}function fu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a+28|0;sd[c[(c[a>>2]|0)+16>>2]&255](a,e);f=ot(b,e)|0;e=a+16|0;sd[c[(c[a>>2]|0)+16>>2]&255](a,e);g=(ut(b,e)|0)+f|0;f=a+4|0;sd[c[(c[a>>2]|0)+16>>2]&255](a,f);a=ot(b,f)|0;f=g+a+(qt(b,0,a)|0)|0;a=f+(kt(b,2)|0)|0;return (wt(b,a)|0)+d+a|0}function gu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0;d=l;l=l+16|0;e=d;et(b)|0;if((Ys(b)|0)!=2){f=Ja(24)|0;o=0;na(73,f|0,4,75154);g=o;o=0;if(!(g&1))Xa(f|0,4424,56);g=Pa()|0;h=z;Sa(f|0);i=h;j=g;$a(j|0)}if(!($s(b,0)|0)){g=Ja(24)|0;o=0;na(73,g|0,4,75230);h=o;o=0;if(!(h&1))Xa(g|0,4424,56);h=Pa()|0;f=z;Sa(g|0);i=f;j=h;$a(j|0)}at(e,b);j=a+4|0;h=c[j>>2]|0;f=a+8|0;if(!h)k=a+12|0;else{if((c[f>>2]|0)!=(h|0))c[f>>2]=h;mR(h);h=a+12|0;c[h>>2]=0;c[f>>2]=0;c[j>>2]=0;k=h}c[j>>2]=c[e>>2];c[f>>2]=c[e+4>>2];c[k>>2]=c[e+8>>2];ct(e,b);k=a+16|0;f=c[k>>2]|0;j=a+20|0;if(!f)m=a+24|0;else{if((c[j>>2]|0)!=(f|0))c[j>>2]=f;mR(f);f=a+24|0;c[f>>2]=0;c[j>>2]=0;c[k>>2]=0;m=f}c[k>>2]=c[e>>2];c[j>>2]=c[e+4>>2];c[m>>2]=c[e+8>>2];at(e,b);b=a+28|0;m=c[b>>2]|0;j=a+32|0;if(!m){n=a+36|0;p=c[e>>2]|0;c[b>>2]=p;q=e+4|0;r=c[q>>2]|0;c[j>>2]=r;s=e+8|0;t=c[s>>2]|0;c[n>>2]=t;l=d;return}if((c[j>>2]|0)!=(m|0))c[j>>2]=m;mR(m);m=a+36|0;c[m>>2]=0;c[j>>2]=0;c[b>>2]=0;n=m;p=c[e>>2]|0;c[b>>2]=p;q=e+4|0;r=c[q>>2]|0;c[j>>2]=r;s=e+8|0;t=c[s>>2]|0;c[n>>2]=t;l=d;return}function hu(a){a=a|0;var b=0,d=0;c[a>>2]=10428;b=c[a+28>>2]|0;if(b|0){d=a+32|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+16>>2]|0;if(b|0){d=a+20|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+4>>2]|0;if(!b)return;d=a+8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b);return}function iu(a){a=a|0;var b=0,d=0;c[a>>2]=10428;b=c[a+28>>2]|0;if(b|0){d=a+32|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+16>>2]|0;if(b|0){d=a+20|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+4>>2]|0;if(!b){mR(a);return}d=a+8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b);mR(a);return}function ju(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=a+28|0;sd[c[(c[a>>2]|0)+16>>2]&255](a,e);f=ot(b,e)|0;e=a+16|0;sd[c[(c[a>>2]|0)+16>>2]&255](a,e);g=(ut(b,e)|0)+f|0;f=a+4|0;if((c[f>>2]|0)==(c[a+8>>2]|0))h=g;else{a=ot(b,f)|0;h=a+g+(qt(b,0,a)|0)|0}a=(kt(b,0)|0)+h|0;return (wt(b,a)|0)+d+a|0}function ku(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0;d=l;l=l+16|0;e=d;et(b)|0;if(Ys(b)|0){f=Ja(24)|0;o=0;na(73,f|0,4,75369);g=o;o=0;if(g&1){g=Pa()|0;Sa(f|0);$a(g|0)}else Xa(f|0,4424,56)}if($s(b,0)|0){ct(e,b);f=a+4|0;g=c[f>>2]|0;h=a+8|0;if(!g)i=a+12|0;else{if((c[h>>2]|0)!=(g|0))c[h>>2]=g;mR(g);g=a+12|0;c[g>>2]=0;c[h>>2]=0;c[f>>2]=0;i=g}c[f>>2]=c[e>>2];c[h>>2]=c[e+4>>2];c[i>>2]=c[e+8>>2]}ct(e,b);i=a+16|0;h=c[i>>2]|0;f=a+20|0;if(!h)j=a+24|0;else{if((c[f>>2]|0)!=(h|0))c[f>>2]=h;mR(h);h=a+24|0;c[h>>2]=0;c[f>>2]=0;c[i>>2]=0;j=h}c[i>>2]=c[e>>2];c[f>>2]=c[e+4>>2];c[j>>2]=c[e+8>>2];at(e,b);b=a+28|0;j=c[b>>2]|0;f=a+32|0;if(!j){k=a+36|0;m=c[e>>2]|0;c[b>>2]=m;n=e+4|0;p=c[n>>2]|0;c[f>>2]=p;q=e+8|0;r=c[q>>2]|0;c[k>>2]=r;l=d;return}if((c[f>>2]|0)!=(j|0))c[f>>2]=j;mR(j);j=a+36|0;c[j>>2]=0;c[f>>2]=0;c[b>>2]=0;k=j;m=c[e>>2]|0;c[b>>2]=m;n=e+4|0;p=c[n>>2]|0;c[f>>2]=p;q=e+8|0;r=c[q>>2]|0;c[k>>2]=r;l=d;return}function lu(a){a=a|0;var b=0;c[a>>2]=10456;b=a+4|0;a=c[b>>2]|0;c[b>>2]=0;if(!a)return;mR(a);return}function mu(a){a=a|0;var b=0,d=0;c[a>>2]=10456;b=a+4|0;d=c[b>>2]|0;c[b>>2]=0;if(!d){mR(a);return}mR(d);mR(a);return}function nu(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0;f=l;l=l+32|0;g=f+8|0;h=f+4|0;i=f;j=b+4|0;b=c[j>>2]|0;if(c[b>>2]|0?(k=c[b+4>>2]|0,k|0):0){c[h>>2]=0;b=Fz(Qy(k)|0,h,i)|0;if((b|0)<=-1){k=Ja(24)|0;m=xr()|0;o=0;na(71,k|0,b|0,m|0);m=o;o=0;if(m&1){m=Qa(0)|0;Sa(k|0);n=m}else{o=0;na(72,k|0,4424,56);o=0;k=Qa(0)|0;n=k}Ka(n|0)|0;n=fo()|0;o=0;na(71,g|0,16,n|0);n=o;o=0;if(n&1){n=Pa()|0;p=z;q=n}else{o=0;ma(144,g|0,0);o=0;n=Pa()|0;k=z;c[g>>2]=10036;m=g+12|0;if((a[m+11>>0]|0)<0)mR(c[m>>2]|0);p=k;q=n}o=0;ka(3);n=o;o=0;if(n&1){n=Qa(0)|0;Id(n)}else $a(q|0)}q=nt(d)|0;n=c[h>>2]|0;k=c[i>>2]|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;if(k>>>0>4294967279)vR(g);if(k>>>0<11){a[g+11>>0]=k;if(!k)r=g;else{s=g;t=23}}else{p=k+16&-16;m=kR(p)|0;c[g>>2]=m;c[g+8>>2]=p|-2147483648;c[g+4>>2]=k;s=m;t=23}if((t|0)==23){CT(s|0,n|0,k|0)|0;r=s}a[r+k>>0]=0;o=0;k=_(95,d|0,g|0)|0;r=o;o=0;if(r&1){r=Pa()|0;s=z;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);u=s;v=r;$a(v|0)}r=k+q|0;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);q=wt(d,r)|0;k=Iz(NB(c[c[j>>2]>>2]|0)|0,h,i)|0;if((k|0)<=-1){j=Ja(24)|0;s=xr()|0;o=0;na(71,j|0,k|0,s|0);s=o;o=0;if(s&1){s=Qa(0)|0;Sa(j|0);w=s}else{o=0;na(72,j|0,4424,56);o=0;j=Qa(0)|0;w=j}Ka(w|0)|0;w=fo()|0;o=0;na(71,g|0,16,w|0);w=o;o=0;if(w&1){w=Pa()|0;x=z;y=w}else{o=0;ma(144,g|0,0);o=0;w=Pa()|0;j=z;c[g>>2]=10036;s=g+12|0;if((a[s+11>>0]|0)<0)mR(c[s>>2]|0);x=j;y=w}o=0;ka(3);w=o;o=0;if(w&1){w=Qa(0)|0;Id(w)}else $a(y|0)}y=c[h>>2]|0;h=c[i>>2]|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;if(h>>>0>4294967279)vR(g);if(h>>>0<11){a[g+11>>0]=h;if(!h)A=g;else{B=g;t=44}}else{i=h+16&-16;w=kR(i)|0;c[g>>2]=w;c[g+8>>2]=i|-2147483648;c[g+4>>2]=h;B=w;t=44}if((t|0)==44){CT(B|0,y|0,h|0)|0;A=B}a[A+h>>0]=0;o=0;h=_(95,d|0,g|0)|0;A=o;o=0;if(A&1){A=Pa()|0;B=z;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);u=B;v=A;$a(v|0)}else{v=q+r+h|0;if((a[g+11>>0]|0)>=0){C=wt(d,v)|0;D=v+e|0;E=D+C|0;l=f;return E|0}mR(c[g>>2]|0);C=wt(d,v)|0;D=v+e|0;E=D+C|0;l=f;return E|0}}E=Ja(24)|0;o=0;ma(143,E|0,14);f=o;o=0;if(f&1){f=Pa()|0;Sa(E|0);$a(f|0)}else Xa(E|0,4424,56);return 0}function ou(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;e=l;l=l+80|0;f=e+56|0;g=e+32|0;h=e+16|0;i=e+4|0;j=e;et(d)|0;dt(f,d);o=0;ma(91,h|0,f|0);k=o;o=0;if(k&1){k=Pa()|0;m=z;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);n=m;p=k;$a(p|0)}if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);k=h+4|0;m=c[h>>2]|0;q=i+4|0;c[q>>2]=(c[k>>2]|0)-m;r=i+8|0;c[r>>2]=m;c[j>>2]=0;o=0;m=_(129,i|0,j|0)|0;s=o;o=0;a:do if(!(s&1)){if((m|0)<=-1){t=Ja(24)|0;u=xr()|0;o=0;na(71,t|0,m|0,u|0);u=o;o=0;if(u&1){u=Qa(0)|0;Sa(t|0);v=u}else{o=0;na(72,t|0,4424,56);o=0;t=Qa(0)|0;v=t}Ka(v|0)|0;t=fo()|0;o=0;na(71,g|0,16,t|0);t=o;o=0;if(t&1){t=Pa()|0;w=z;x=t}else{o=0;ma(144,g|0,0);o=0;t=Pa()|0;u=z;c[g>>2]=10036;y=g+12|0;if((a[y+11>>0]|0)<0)mR(c[y>>2]|0);w=u;x=t}o=0;ka(3);t=o;o=0;if(!(t&1)){A=w;B=x;C=53;break}t=Qa(0)|0;Id(t)}o=0;Z(220,d|0)|0;t=o;o=0;if(!(t&1)){o=0;ma(173,g|0,d|0);t=o;o=0;do if(t&1){u=Pa()|0;D=z;E=u}else{o=0;ma(91,f|0,g|0);u=o;o=0;if(u&1){u=Pa()|0;y=z;if((a[g+11>>0]|0)>=0){D=y;E=u;break}mR(c[g>>2]|0);D=y;E=u;break}u=c[h>>2]|0;if(!u)F=h+8|0;else{if((c[k>>2]|0)!=(u|0))c[k>>2]=u;mR(u);u=h+8|0;c[u>>2]=0;c[k>>2]=0;c[h>>2]=0;F=u}u=c[f>>2]|0;c[h>>2]=u;y=f+4|0;G=c[y>>2]|0;c[k>>2]=G;H=f+8|0;c[F>>2]=c[H>>2];c[H>>2]=0;c[y>>2]=0;c[f>>2]=0;if((a[g+11>>0]|0)<0){mR(c[g>>2]|0);I=c[k>>2]|0;J=c[h>>2]|0}else{I=G;J=u}c[q>>2]=I-J;c[r>>2]=J;c[g>>2]=0;o=0;u=_(121,i|0,g|0)|0;G=o;o=0;do if(!(G&1)){if((u|0)<=-1){y=Ja(24)|0;H=xr()|0;o=0;na(71,y|0,u|0,H|0);H=o;o=0;if(H&1){H=Qa(0)|0;Sa(y|0);K=H}else{o=0;na(72,y|0,4424,56);o=0;y=Qa(0)|0;K=y}Ka(K|0)|0;y=fo()|0;o=0;na(71,f|0,16,y|0);y=o;o=0;if(y&1){y=Pa()|0;L=z;M=y}else{o=0;ma(144,f|0,0);o=0;y=Pa()|0;H=z;c[f>>2]=10036;N=f+12|0;if((a[N+11>>0]|0)<0)mR(c[N>>2]|0);L=H;M=y}o=0;ka(3);y=o;o=0;if(!(y&1)){O=L;P=M;break}y=Qa(0)|0;Id(y)}o=0;la(292,d|0);y=o;o=0;if(!(y&1)){o=0;y=Z(209,8)|0;H=o;o=0;if(H&1){H=Pa()|0;O=z;P=H;break}o=0;na(95,y|0,c[j>>2]|0,c[g>>2]|0);H=o;o=0;if(H&1){H=Pa()|0;N=z;mR(y);O=N;P=H;break}H=b+4|0;N=c[H>>2]|0;c[H>>2]=y;if(N|0)mR(N);N=c[h>>2]|0;if(!N){l=e;return}if((c[k>>2]|0)!=(N|0))c[k>>2]=N;mR(N);l=e;return}else C=58}else C=58;while(0);if((C|0)==58){u=Pa()|0;O=z;P=u}Q=O;R=P;break a}while(0);Q=D;R=E}else C=52}else C=52;while(0);if((C|0)==52){E=Pa()|0;A=z;B=E;C=53}if((C|0)==53){Q=A;R=B}B=c[h>>2]|0;if(!B){n=Q;p=R;$a(p|0)}if((c[k>>2]|0)!=(B|0))c[k>>2]=B;mR(B);n=Q;p=R;$a(p|0)}function pu(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0;f=l;l=l+16|0;g=f;c[b>>2]=MB(d)|0;h=Cy(e)|0;c[b+4>>2]=h;if(!(c[b>>2]|0)){b=Ja(24)|0;switch(d|0){case 0:{d=g+4|0;i=d;c[i>>2]=0;c[i+4>>2]=0;a[g+11>>0]=4;c[g>>2]=1162760014;j=d;break}case 1:{d=g+4|0;i=d;c[i>>2]=0;c[i+4>>2]=0;a[g+11>>0]=4;c[g>>2]=826688587;j=d;break}case 2:{d=g+4|0;i=d;c[i>>2]=0;c[i+4>>2]=0;a[g+11>>0]=4;c[g>>2]=843465803;j=d;break}default:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=9;k=g;m=75512;n=k+9|0;do{a[k>>0]=a[m>>0]|0;k=k+1|0;m=m+1|0}while((k|0)<(n|0));j=g+9|0}}a[j>>0]=0;j=fo()|0;o=0;oa(37,b|0,16,j|0,g|0);j=o;o=0;if(j&1)p=1;else{o=0;na(72,b|0,4424,56);o=0;p=0}j=Pa()|0;d=z;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);if(!p){q=j;r=d;$a(q|0)}Sa(b|0);q=j;r=d;$a(q|0)}if(h|0){l=f;return}f=Ja(24)|0;do switch(e|0){case 0:{h=g+4|0;d=h;c[d>>2]=0;c[d+4>>2]=0;a[g+11>>0]=4;c[g>>2]=1162760014;s=h;break}case 1:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=3;a[g>>0]=a[75522]|0;a[g+1>>0]=a[75523]|0;a[g+2>>0]=a[75524]|0;s=g+3|0;break}case 2:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=3;a[g>>0]=a[75526]|0;a[g+1>>0]=a[75527]|0;a[g+2>>0]=a[75528]|0;s=g+3|0;break}case 3:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=3;a[g>>0]=a[83809]|0;a[g+1>>0]=a[83810]|0;a[g+2>>0]=a[83811]|0;s=g+3|0;break}case 4:{h=g+4|0;d=h;c[d>>2]=0;c[d+4>>2]=0;a[g+11>>0]=4;c[g>>2]=826361939;s=h;break}case 5:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=6;a[g>>0]=a[83038]|0;a[g+1>>0]=a[83039]|0;a[g+2>>0]=a[83040]|0;a[g+3>>0]=a[83041]|0;a[g+4>>0]=a[83042]|0;a[g+5>>0]=a[83043]|0;s=g+6|0;break}case 6:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=6;a[g>>0]=a[83045]|0;a[g+1>>0]=a[83046]|0;a[g+2>>0]=a[83047]|0;a[g+3>>0]=a[83048]|0;a[g+4>>0]=a[83049]|0;a[g+5>>0]=a[83050]|0;s=g+6|0;break}case 7:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=6;a[g>>0]=a[83052]|0;a[g+1>>0]=a[83053]|0;a[g+2>>0]=a[83054]|0;a[g+3>>0]=a[83055]|0;a[g+4>>0]=a[83056]|0;a[g+5>>0]=a[83057]|0;s=g+6|0;break}case 8:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=6;a[g>>0]=a[83059]|0;a[g+1>>0]=a[83060]|0;a[g+2>>0]=a[83061]|0;a[g+3>>0]=a[83062]|0;a[g+4>>0]=a[83063]|0;a[g+5>>0]=a[83064]|0;s=g+6|0;break}case 9:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=9;k=g;m=75530;n=k+9|0;do{a[k>>0]=a[m>>0]|0;k=k+1|0;m=m+1|0}while((k|0)<(n|0));s=g+9|0;break}default:{c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;a[g+11>>0]=9;k=g;m=75512;n=k+9|0;do{a[k>>0]=a[m>>0]|0;k=k+1|0;m=m+1|0}while((k|0)<(n|0));s=g+9|0}}while(0);a[s>>0]=0;s=fo()|0;o=0;oa(37,f|0,16,s|0,g|0);s=o;o=0;if(s&1)t=1;else{o=0;na(72,f|0,4424,56);o=0;t=0}s=Pa()|0;m=z;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);if(!t){q=s;r=m;$a(q|0)}Sa(f|0);q=s;r=m;$a(q|0)}function qu(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=l;l=l+16|0;f=e;c[b>>2]=10456;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;g=f+11|0;a[g>>0]=4;c[f>>2]=(d|0)==0?826688587:843465803;a[f+4>>0]=0;d=b+4|0;o=0;b=Z(209,8)|0;h=o;o=0;if(h&1){h=Pa()|0;i=z;j=h;$a(j|0)}o=0;na(96,b|0,f|0,83052);h=o;o=0;if(h&1){h=Pa()|0;k=z;mR(b);if((a[g>>0]|0)>=0){i=k;j=h;$a(j|0)}mR(c[f>>2]|0);i=k;j=h;$a(j|0)}else{c[d>>2]=b;if((a[g>>0]|0)>=0){l=e;return}mR(c[f>>2]|0);l=e;return}}function ru(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;c[a>>2]=LB(b)|0;e=By(d)|0;c[a+4>>2]=e;if(!(c[a>>2]|0)){a=Ja(24)|0;o=0;na(73,a|0,16,b|0);b=o;o=0;if(!(b&1))Xa(a|0,4424,56);b=Pa()|0;f=z;Sa(a|0);g=f;h=b;$a(h|0)}if(e|0)return;e=Ja(24)|0;o=0;na(73,e|0,16,d|0);d=o;o=0;if(!(d&1))Xa(e|0,4424,56);d=Pa()|0;b=z;Sa(e|0);g=b;h=d;$a(h|0)}function su(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;g=l;l=l+32|0;h=g;i=d+4|0;d=c[i>>2]|0;j=c[d>>2]|0;if(j|0?(k=c[d+4>>2]|0,k|0):0){c[b>>2]=0;d=b+4|0;c[d>>2]=0;c[b+8>>2]=0;do if(!f){m=0;n=0;p=j;q=k}else{if((f|0)>=0){o=0;r=Z(209,f|0)|0;s=o;o=0;if(!(s&1)){c[d>>2]=r;c[b>>2]=r;c[b+8>>2]=r+f;s=f;t=r;do{a[t>>0]=0;t=(c[d>>2]|0)+1|0;c[d>>2]=t;s=s+-1|0}while((s|0)!=0);s=c[i>>2]|0;m=c[b>>2]|0;n=t;p=c[s>>2]|0;q=c[s+4>>2]|0;break}}else{o=0;la(271,b|0);o=0}s=Pa()|0;r=c[b>>2]|0;if(!r)$a(s|0);if((c[d>>2]|0)!=(r|0))c[d>>2]=r;mR(r);$a(s|0)}while(0);i=c[e>>2]|0;o=0;f=ea(53,p|0,q|0,i|0,(c[e+4>>2]|0)-i|0,m|0,n-m|0)|0;m=o;o=0;if(!(m&1)){if((f|0)>-1){l=g;return}g=Ja(24)|0;m=xr()|0;o=0;na(71,g|0,f|0,m|0);m=o;o=0;if(m&1){m=Qa(0)|0;Sa(g|0);u=m}else{o=0;na(72,g|0,4424,56);o=0;g=Qa(0)|0;u=g}Ka(u|0)|0;u=fo()|0;o=0;na(71,h|0,3,u|0);u=o;o=0;if(u&1){u=Pa()|0;v=z;w=u}else{o=0;ma(144,h|0,0);o=0;u=Pa()|0;g=z;c[h>>2]=10036;m=h+12|0;if((a[m+11>>0]|0)<0)mR(c[m>>2]|0);v=g;w=u}o=0;ka(3);u=o;o=0;if(u&1){u=Qa(0)|0;Id(u)}else{x=v;y=w}}else{w=Pa()|0;x=z;y=w}w=c[b>>2]|0;if(!w)$a(y|0);if((c[d>>2]|0)!=(w|0))c[d>>2]=w;mR(w);$a(y|0)}y=Ja(24)|0;o=0;ma(143,y|0,14);w=o;o=0;if(w&1){w=Pa()|0;Sa(y|0);$a(w|0)}else Xa(y|0,4424,56)}function tu(a){a=a|0;var b=0,d=0;b=kR(20)|0;c[b+4>>2]=0;c[b+8>>2]=0;c[b>>2]=10484;d=b+12|0;c[d>>2]=10512;c[b+16>>2]=3;c[a>>2]=d;c[a+4>>2]=b;return}function uu(a){a=a|0;var b=0,d=0,e=0;b=l;l=l+16|0;d=b;Zq(d,c[a+4>>2]|0);o=0;a=Z(159,d|0)|0;e=o;o=0;if(e&1){e=Pa()|0;Oq(d);$a(e|0)}else{Oq(d);l=b;return a|0}return 0}function vu(a){a=a|0;var b=0,d=0,e=0;b=l;l=l+16|0;d=b;Zq(d,c[a+4>>2]|0);o=0;a=Z(158,d|0)|0;e=o;o=0;if(e&1){e=Pa()|0;Oq(d);$a(e|0)}else{Oq(d);l=b;return a|0}return 0}function wu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;h=l;l=l+32|0;i=h+16|0;j=h;Zq(i,c[b+4>>2]|0);o=0;ma(117,i|0,e|0);e=o;o=0;if(((!(e&1)?(o=0,ma(115,i|0,f|0),f=o,o=0,!(f&1)):0)?(o=0,ma(116,i|0,g|0),g=o,o=0,!(g&1)):0)?(o=0,la(257,i|0),g=o,o=0,!(g&1)):0){c[a>>2]=0;g=a+4|0;c[g>>2]=0;c[a+8>>2]=0;o=0;na(52,j|0,i|0,d|0);d=o;o=0;do if(d&1){f=Pa()|0;k=z;m=f;n=23}else{o=0;_(126,a|0,j|0)|0;f=o;o=0;if(f&1){f=Pa()|0;e=z;b=c[j>>2]|0;if(!b){k=e;m=f;n=23;break}p=j+4|0;if((c[p>>2]|0)!=(b|0))c[p>>2]=b;mR(b);k=e;m=f;n=23;break}f=c[j>>2]|0;if(f|0){e=j+4|0;if((c[e>>2]|0)!=(f|0))c[e>>2]=f;mR(f)}o=0;ma(121,j|0,i|0);f=o;o=0;do if(f&1){e=Pa()|0;q=z;r=e}else{o=0;_(126,a|0,j|0)|0;e=o;o=0;if(e&1){e=Pa()|0;b=z;p=c[j>>2]|0;if(!p){q=b;r=e;break}s=j+4|0;if((c[s>>2]|0)!=(p|0))c[s>>2]=p;mR(p);q=b;r=e;break}e=c[j>>2]|0;if(!e){Oq(i);l=h;return}b=j+4|0;if((c[b>>2]|0)!=(e|0))c[b>>2]=e;mR(e);Oq(i);l=h;return}while(0);t=q;u=r}while(0);if((n|0)==23){t=k;u=m}m=c[a>>2]|0;if(!m){v=t;w=u;Oq(i);$a(w|0)}if((c[g>>2]|0)!=(m|0))c[g>>2]=m;mR(m);v=t;w=u;Oq(i);$a(w|0)}u=Pa()|0;v=z;w=u;Oq(i);$a(w|0)}function xu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;h=l;l=l+32|0;i=h+16|0;j=h;Zq(i,c[b+4>>2]|0);o=0;ma(118,i|0,e|0);e=o;o=0;if(((!(e&1)?(o=0,ma(115,i|0,f|0),f=o,o=0,!(f&1)):0)?(o=0,ma(116,i|0,g|0),g=o,o=0,!(g&1)):0)?(o=0,la(257,i|0),g=o,o=0,!(g&1)):0){c[a>>2]=0;g=a+4|0;c[g>>2]=0;c[a+8>>2]=0;o=0;na(52,j|0,i|0,d|0);d=o;o=0;do if(d&1){f=Pa()|0;k=z;m=f;n=23}else{o=0;_(126,a|0,j|0)|0;f=o;o=0;if(f&1){f=Pa()|0;e=z;b=c[j>>2]|0;if(!b){k=e;m=f;n=23;break}p=j+4|0;if((c[p>>2]|0)!=(b|0))c[p>>2]=b;mR(b);k=e;m=f;n=23;break}f=c[j>>2]|0;if(f|0){e=j+4|0;if((c[e>>2]|0)!=(f|0))c[e>>2]=f;mR(f)}o=0;ma(121,j|0,i|0);f=o;o=0;do if(f&1){e=Pa()|0;q=z;r=e}else{o=0;_(126,a|0,j|0)|0;e=o;o=0;if(e&1){e=Pa()|0;b=z;p=c[j>>2]|0;if(!p){q=b;r=e;break}s=j+4|0;if((c[s>>2]|0)!=(p|0))c[s>>2]=p;mR(p);q=b;r=e;break}e=c[j>>2]|0;if(!e){Oq(i);l=h;return}b=j+4|0;if((c[b>>2]|0)!=(e|0))c[b>>2]=e;mR(e);Oq(i);l=h;return}while(0);t=q;u=r}while(0);if((n|0)==23){t=k;u=m}m=c[a>>2]|0;if(!m){v=t;w=u;Oq(i);$a(w|0)}if((c[g>>2]|0)!=(m|0))c[g>>2]=m;mR(m);v=t;w=u;Oq(i);$a(w|0)}u=Pa()|0;v=z;w=u;Oq(i);$a(w|0)}function yu(a){a=a|0;return}function zu(a){a=a|0;mR(a);return}function Au(a){a=a|0;bR(a);return}function Bu(a){a=a|0;bR(a);mR(a);return}function Cu(a){a=a|0;var b=0;b=a+12|0;rd[c[(c[b>>2]|0)+16>>2]&511](b);return}function Du(a){a=a|0;mR(a);return}function Eu(a){a=a|0;var b=0,d=0;b=kR(20)|0;c[b+4>>2]=0;c[b+8>>2]=0;c[b>>2]=10544;d=b+12|0;c[d>>2]=10572;c[a>>2]=d;c[a+4>>2]=b;return}function Fu(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Am(a,c,d,e);return}function Gu(a){a=a|0;return}function Hu(a){a=a|0;mR(a);return}function Iu(a){a=a|0;bR(a);return}function Ju(a){a=a|0;bR(a);mR(a);return}function Ku(a){a=a|0;var b=0;b=a+12|0;rd[c[(c[b>>2]|0)+4>>2]&511](b);return}function Lu(a){a=a|0;mR(a);return}function Mu(a){a=a|0;var b=0,d=0;b=kR(20)|0;c[b+4>>2]=0;c[b+8>>2]=0;c[b>>2]=10592;d=b+12|0;c[d>>2]=10620;c[a>>2]=d;c[a+4>>2]=b;return}function Nu(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;b=l;l=l+16|0;g=b;Qo(g,3);Ro(a,g,c,d,e,f);l=b;return}function Ou(a){a=a|0;return}function Pu(a){a=a|0;mR(a);return}function Qu(a){a=a|0;bR(a);return}function Ru(a){a=a|0;bR(a);mR(a);return}function Su(a){a=a|0;var b=0;b=a+12|0;rd[c[(c[b>>2]|0)+4>>2]&511](b);return}function Tu(a){a=a|0;mR(a);return}function Uu(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;d=l;l=l+32|0;e=d+24|0;f=d;g=d+8|0;h=kR(32)|0;c[g>>2]=h;c[g+8>>2]=-2147483616;c[g+4>>2]=22;i=h;j=76495;k=i+22|0;do{a[i>>0]=a[j>>0]|0;i=i+1|0;j=j+1|0}while((i|0)<(k|0));a[h+22>>0]=0;o=0;ma(185,f|0,g|0);h=o;o=0;do if(h&1){j=Pa()|0;m=z;n=j}else{o=0;j=Z(209,12)|0;i=o;o=0;if(i&1){i=Pa()|0;k=z;kq(f);m=k;n=i;break}sq(e,f);c[j>>2]=10640;sq(j+4|0,e);c[b>>2]=j;kq(e);kq(f);if((a[g+11>>0]|0)>=0){l=d;return}mR(c[g>>2]|0);l=d;return}while(0);if((a[g+11>>0]|0)>=0)$a(n|0);mR(c[g>>2]|0);$a(n|0)}function Vu(a,b,c){a=a|0;b=b|0;c=c|0;uq(a,b+4|0,c);return}function Wu(a){a=a|0;var b=0;b=kR(12)|0;c[b>>2]=10640;o=0;ma(186,b+4|0,a+4|0);a=o;o=0;if(a&1){a=Pa()|0;mR(b);$a(a|0)}else return b|0;return 0}function Xu(a){a=a|0;c[a>>2]=10640;kq(a+4|0);return}function Yu(a){a=a|0;c[a>>2]=10640;kq(a+4|0);mR(a);return}function Zu(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=c[b>>2]|0;h=e;e=h-g|0;if((e|0)<1){i=-96;return i|0}j=a[g>>0]|0;if(j<<24>>24>-1){k=g+1|0;c[b>>2]=k;l=d[g>>0]|0;c[f>>2]=l;m=k;n=l}else{a:do switch(j&127){case 1:{if((e|0)<2){i=-96;return i|0}else{o=d[g+1>>0]|0;p=2;break a}break}case 2:{if((e|0)<3){i=-96;return i|0}else{o=(d[g+1>>0]|0)<<8|(d[g+2>>0]|0);p=3;break a}break}case 3:{if((e|0)<4){i=-96;return i|0}else{o=(d[g+2>>0]|0)<<8|(d[g+1>>0]|0)<<16|(d[g+3>>0]|0);p=4;break a}break}case 4:{if((e|0)<5){i=-96;return i|0}else{o=(d[g+2>>0]|0)<<16|(d[g+1>>0]|0)<<24|(d[g+3>>0]|0)<<8|(d[g+4>>0]|0);p=5;break a}break}default:{i=-100;return i|0}}while(0);c[f>>2]=o;f=g+p|0;c[b>>2]=f;m=f;n=o}i=n>>>0>(h-m|0)>>>0?-96:0;return i|0}function _u(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0;g=c[a>>2]|0;if((b-g|0)<1){h=-96;return h|0}if((d[g>>0]|0|0)!=(f|0)){h=-98;return h|0}c[a>>2]=g+1;h=Zu(a,b,e)|0;return h|0}function $u(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0;g=l;l=l+16|0;h=g;i=c[b>>2]|0;if((e-i|0)>=1)if((a[i>>0]|0)==2){c[b>>2]=i+1;i=Zu(b,e,h)|0;if(!i){e=(c[h>>2]|0)+-1|0;if(e>>>0<=3?(j=c[b>>2]|0,(a[j>>0]|0)>=0):0){c[f>>2]=0;c[h>>2]=e;k=0;m=j;j=e;while(1){k=k<<8|d[m>>0];c[f>>2]=k;m=m+1|0;c[b>>2]=m;if(!j)break;else j=j+-1|0}c[h>>2]=-1;n=0}else n=-100}else n=i}else n=-98;else n=-96;l=g;return n|0}function av(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=l;l=l+16|0;g=f;h=c[b>>2]|0;if((d-h|0)>=1)if((a[h>>0]|0)==2){c[b>>2]=h+1;h=Zu(b,d,g)|0;if(!h){d=c[g>>2]|0;g=Rv(e,c[b>>2]|0,d)|0;c[b>>2]=(c[b>>2]|0)+d;i=g}else i=h}else i=-98;else i=-96;l=f;return i|0}function bv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=c[b>>2]|0;if((d-f|0)<1){g=-96;return g|0}if((a[f>>0]|0)!=3){g=-98;return g|0}c[b>>2]=f+1;f=Zu(b,d,e)|0;if(f|0){g=f;return g|0}f=c[e>>2]|0;c[e>>2]=f+-1;if(f>>>0<2){g=-104;return g|0}else{g=c[b>>2]|0;c[b>>2]=g+1;return ((a[g>>0]|0)==0?0:-104)|0}return 0}function cv(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h;j=c[b>>2]|0;k=e;if((k-j|0)<1){m=-96;l=h;return m|0}if((a[j>>0]|0)!=48){m=-98;l=h;return m|0}c[b>>2]=j+1;j=Zu(b,e,i)|0;if(j|0){m=j;l=h;return m|0}j=c[b>>2]|0;if((k-j|0)<1){m=-96;l=h;return m|0}c[f>>2]=d[j>>0];k=c[i>>2]|0;i=j+k|0;e=f+4|0;if((k|0)<1){m=-96;l=h;return m|0}if((a[j>>0]|0)!=6){m=-98;l=h;return m|0}c[b>>2]=j+1;j=Zu(b,i,e)|0;if(j|0){m=j;l=h;return m|0}c[f+8>>2]=c[b>>2];f=(c[b>>2]|0)+(c[e>>2]|0)|0;c[b>>2]=f;if((f|0)==(i|0)){a[g>>0]=0;a[g+1>>0]=0;a[g+2>>0]=0;e=g+4|0;a[g+3>>0]=0;a[e>>0]=0;a[e+1>>0]=0;a[e+2>>0]=0;j=e+4|0;a[e+3>>0]=0;a[j>>0]=0;a[j+1>>0]=0;a[j+2>>0]=0;a[j+3>>0]=0;m=0;l=h;return m|0}c[g>>2]=d[f>>0];c[b>>2]=f+1;f=g+4|0;j=Zu(b,i,f)|0;if(j|0){m=j;l=h;return m|0}c[g+8>>2]=c[b>>2];g=(c[b>>2]|0)+(c[f>>2]|0)|0;c[b>>2]=g;m=(g|0)==(i|0)?0:-102;l=h;return m|0}function dv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=l;l=l+16|0;f=e;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;g=cv(a,b,d,f)|0;a:do if(!g){switch(c[f>>2]|0){case 0:case 5:break;default:{h=-104;break a}}h=(c[f+4>>2]|0)==0?0:-104}else h=g;while(0);l=e;return h|0}function ev(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(e>>>0<128){f=c[b>>2]|0;if((f-d|0)<1){g=-108;return g|0}h=f+-1|0;c[b>>2]=h;a[h>>0]=e;g=1;return g|0}if(e>>>0<256){h=c[b>>2]|0;if((h-d|0)<2){g=-108;return g|0}f=h+-1|0;c[b>>2]=f;a[f>>0]=e;f=(c[b>>2]|0)+-1|0;c[b>>2]=f;a[f>>0]=-127;g=2;return g|0}if(e>>>0<65536){f=c[b>>2]|0;if((f-d|0)<3){g=-108;return g|0}h=f+-1|0;c[b>>2]=h;a[h>>0]=e;h=(c[b>>2]|0)+-1|0;c[b>>2]=h;a[h>>0]=e>>>8;h=(c[b>>2]|0)+-1|0;c[b>>2]=h;a[h>>0]=-126;g=3;return g|0}h=c[b>>2]|0;f=h-d|0;if(e>>>0<16777216){if((f|0)<4){g=-108;return g|0}d=h+-1|0;c[b>>2]=d;a[d>>0]=e;d=(c[b>>2]|0)+-1|0;c[b>>2]=d;a[d>>0]=e>>>8;d=(c[b>>2]|0)+-1|0;c[b>>2]=d;a[d>>0]=e>>>16;d=(c[b>>2]|0)+-1|0;c[b>>2]=d;a[d>>0]=-125;g=4;return g|0}else{if((f|0)<5){g=-108;return g|0}f=h+-1|0;c[b>>2]=f;a[f>>0]=e;f=(c[b>>2]|0)+-1|0;c[b>>2]=f;a[f>>0]=e>>>8;f=(c[b>>2]|0)+-1|0;c[b>>2]=f;a[f>>0]=e>>>16;f=(c[b>>2]|0)+-1|0;c[b>>2]=f;a[f>>0]=e>>>24;e=(c[b>>2]|0)+-1|0;c[b>>2]=e;a[e>>0]=-124;g=5;return g|0}return 0}function fv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=c[b>>2]|0;if((f-d|0)<1){g=-108;return g|0}d=f+-1|0;c[b>>2]=d;a[d>>0]=e;g=1;return g|0}function gv(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[a>>2]|0;if(f>>>0<b>>>0){g=-108;return g|0}h=f+(0-e)|0;if((f-b|0)>>>0<e>>>0){g=-108;return g|0}c[a>>2]=h;CT(h|0,d|0,e|0)|0;g=e;return g|0}function hv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=Ev(e)|0;g=c[b>>2]|0;if(g>>>0<d>>>0){h=-108;return h|0}i=d;if((g-i|0)>>>0<f>>>0){h=-108;return h|0}j=g+(0-f)|0;c[b>>2]=j;g=Sv(e,j,f)|0;if(g|0){h=g;return h|0}do if((c[e>>2]|0)==1?(g=c[b>>2]|0,(a[g>>0]|0)<0):0)if((g-i|0)<1){h=-108;return h|0}else{j=g+-1|0;c[b>>2]=j;a[j>>0]=0;k=f+1|0;break}else k=f;while(0);f=ev(b,d,k)|0;if((f|0)<0){h=f;return h|0}d=c[b>>2]|0;if((d-i|0)<1){h=-108;return h|0}i=d+-1|0;c[b>>2]=i;a[i>>0]=2;h=k+1+f|0;return h|0}function iv(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=c[b>>2]|0;f=d;if((e-f|0)<1)return -108;d=e+-1|0;c[b>>2]=d;a[d>>0]=0;d=c[b>>2]|0;if((d-f|0)<1)g=-108;else{f=d+-1|0;c[b>>2]=f;a[f>>0]=5;g=1}return (g>>>31^1)+g|0}function jv(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=c[b>>2]|0;if(g>>>0<d>>>0){h=-108;return h|0}i=d;j=g+(0-f)|0;if((g-i|0)>>>0<f>>>0){h=-108;return h|0}c[b>>2]=j;CT(j|0,e|0,f|0)|0;if((f|0)<0){h=f;return h|0}e=ev(b,d,f)|0;if((e|0)<0){h=e;return h|0}d=c[b>>2]|0;if((d-i|0)<1){h=-108;return h|0}i=d+-1|0;c[b>>2]=i;a[i>>0]=6;h=f+1+e|0;return h|0}function kv(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0;if(!g){h=c[b>>2]|0;i=d;if((h-i|0)<1){j=-108;return j|0}k=h+-1|0;c[b>>2]=k;a[k>>0]=0;k=c[b>>2]|0;if((k-i|0)<1)l=-108;else{i=k+-1|0;c[b>>2]=i;a[i>>0]=5;l=1}i=(l>>>31^1)+l|0;if((i|0)<0){j=i;return j|0}else m=i}else m=g;g=c[b>>2]|0;if(g>>>0<d>>>0){j=-108;return j|0}i=d;l=g+(0-f)|0;if((g-i|0)>>>0<f>>>0){j=-108;return j|0}c[b>>2]=l;CT(l|0,e|0,f|0)|0;if((f|0)<0){j=f;return j|0}e=ev(b,d,f)|0;if((e|0)<0){j=e;return j|0}l=c[b>>2]|0;g=l+-1|0;k=f+1+e|0;if((l-i|0)<1){j=-108;return j|0}c[b>>2]=g;a[g>>0]=6;if((k|0)<0){j=k;return j|0}g=k+m|0;m=ev(b,d,g)|0;if((m|0)<0){j=m;return j|0}d=c[b>>2]|0;if((d-i|0)<1){j=-108;return j|0}i=d+-1|0;c[b>>2]=i;a[i>>0]=48;j=g+1+m|0;return j|0}function lv(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=c[b>>2]|0;if(g>>>0<d>>>0){h=-108;return h|0}i=d;j=g+(0-f)|0;if((g-i|0)>>>0<f>>>0){h=-108;return h|0}c[b>>2]=j;CT(j|0,e|0,f|0)|0;if((f|0)<0){h=f;return h|0}e=ev(b,d,f)|0;if((e|0)<0){h=e;return h|0}j=c[b>>2]|0;g=j+-1|0;k=f+1+e|0;if((j-i|0)<1){h=-108;return h|0}c[b>>2]=g;a[g>>0]=6;if((k|0)<0){h=k;return h|0}g=ev(b,d,k)|0;if((g|0)<0){h=g;return h|0}d=c[b>>2]|0;if((d-i|0)<1){h=-108;return h|0}i=d+-1|0;c[b>>2]=i;a[i>>0]=48;h=k+1+g|0;return h|0}function mv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[b>>2]|0;g=d;if((f-g|0)<1){h=-108;return h|0}d=f+-1|0;c[b>>2]=d;a[d>>0]=((e|0)!=0)<<31>>31;e=c[b>>2]|0;if((e-g|0)<1){h=-108;return h|0}d=e+-1|0;c[b>>2]=d;a[d>>0]=1;d=c[b>>2]|0;if((d-g|0)<1){h=-108;return h|0}g=d+-1|0;c[b>>2]=g;a[g>>0]=1;h=3;return h|0}function nv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=e>>31;g=f&-33554432;h=f&-16777216;i=c[b>>2]|0;j=d;if((i-j|0)<1){k=-108;return k|0}else{l=e;m=0;n=i}while(1){i=n+-1|0;c[b>>2]=i;a[i>>0]=l;o=m+1|0;if((l>>>7|g|0)==(f|0))break;n=c[b>>2]|0;if((n-j|0)<1){k=-108;p=7;break}else{l=l>>>8|h;m=o}}if((p|0)==7)return k|0;p=ev(b,d,o)|0;if((p|0)<0){k=p;return k|0}o=c[b>>2]|0;if((o-j|0)<1){k=-108;return k|0}j=o+-1|0;c[b>>2]=j;a[j>>0]=2;k=m+2+p|0;return k|0}function ov(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=c[b>>2]|0;if(g>>>0<d>>>0){h=-108;return h|0}i=d;j=g+(0-f)|0;if((g-i|0)>>>0<f>>>0){h=-108;return h|0}c[b>>2]=j;CT(j|0,e|0,f|0)|0;if((f|0)<0){h=f;return h|0}e=ev(b,d,f)|0;if((e|0)<0){h=e;return h|0}d=c[b>>2]|0;if((d-i|0)<1){h=-108;return h|0}i=d+-1|0;c[b>>2]=i;a[i>>0]=4;h=f+1+e|0;return h|0}function pv(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if(!h){c[f>>2]=0;i=0;return i|0}j=(h>>>0)/3|0;k=j+(((h>>>0)%3|0|0)!=0&1)|0;if(k>>>0>1073741823){c[f>>2]=-1;i=-42;return i|0}l=k<<2|1;if((b|0)==0|l>>>0>e>>>0){c[f>>2]=l;i=-42;return i|0}l=j*3|0;if(!l){m=b;n=0;o=g}else{j=0;e=g;g=b;while(1){k=d[e>>0]|0;p=d[e+1>>0]|0;q=e+3|0;r=d[e+2>>0]|0;a[g>>0]=a[76665+(k>>>2)>>0]|0;a[g+1>>0]=a[76665+(k<<4&48|p>>>4)>>0]|0;a[g+2>>0]=a[76665+(p<<2&60|r>>>6)>>0]|0;p=g+4|0;a[g+3>>0]=a[76665+(r&63)>>0]|0;r=j+3|0;if(r>>>0<l>>>0){j=r;e=q;g=p}else{m=p;n=r;o=q;break}}}if(n>>>0<h>>>0){g=d[o>>0]|0;e=(n+1|0)>>>0<h>>>0;if(e)s=d[o+1>>0]|0;else s=0;a[m>>0]=a[76665+(g>>>2)>>0]|0;a[m+1>>0]=a[76665+(s>>>4|g<<4&48)>>0]|0;if(e)t=a[76665+(s<<2&60)>>0]|0;else t=61;a[m+2>>0]=t;a[m+3>>0]=61;u=m+4|0}else u=m;c[f>>2]=u-b;a[u>>0]=0;i=0;return i|0}function qv(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;do if(g|0){h=0;i=0;j=0;while(1){a:do if(j>>>0<g>>>0){k=0;l=j;while(1){if((a[f+l>>0]|0)!=32){m=k;n=l;break a}o=l+1|0;p=k+1|0;if(o>>>0<g>>>0){k=p;l=o}else{m=p;n=o;break}}}else{m=0;n=j}while(0);if((n|0)==(g|0)){q=h;r=i;s=g;t=17;break}l=a[f+n>>0]|0;if((g-n|0)>>>0>1&l<<24>>24==13)if((a[f+(n+1)>>0]|0)==10){u=i;v=h}else{w=13;t=9}else if(l<<24>>24==10){u=i;v=h}else{w=l;t=9}if((t|0)==9){t=0;if(m|0){x=-44;t=30;break}if(w<<24>>24==61){l=h+1|0;if(l>>>0>2){x=-44;t=30;break}else y=l}else if(w<<24>>24<0){x=-44;t=30;break}else y=h;l=a[76729+(w&255)>>0]|0;if(l<<24>>24==127){x=-44;t=30;break}if((y|0)!=0&(l&255)<64){x=-44;t=30;break}u=i+1|0;v=y}l=n+1|0;if(l>>>0<g>>>0){h=v;i=u;j=l}else{q=v;r=u;s=l;t=17;break}}if((t|0)==17){if(!r)break;j=((r>>>3)*6|0)-q+((((r&7)*6|0)+7|0)>>>3)|0;if((b|0)==0|j>>>0>d>>>0){c[e>>2]=j;x=-42;return x|0}b:do if(!s)z=b;else{j=b;i=f;h=0;l=0;k=3;o=s;while(1){p=a[i>>0]|0;switch(p<<24>>24){case 32:case 10:case 13:{A=h;B=j;C=l;D=k;break}default:{E=k-(p<<24>>24==61&1)|0;F=h<<6|a[76729+(p&255)>>0]&63;p=l+1|0;if((p|0)==4){G=j+1|0;if(E){a[j>>0]=h>>>10;H=j+2|0;if((E|0)!=1){a[G>>0]=h>>>2;if(E>>>0>2){a[H>>0]=F;A=F;B=j+3|0;C=0;D=E}else{A=F;B=H;C=0;D=2}}else{A=F;B=G;C=0;D=1}}else{A=F;B=j;C=0;D=0}}else{A=F;B=j;C=p;D=E}}}o=o+-1|0;if(!o){z=B;break b}else{j=B;i=i+1|0;h=A;l=C;k=D}}}while(0);c[e>>2]=z-b;x=0;return x|0}else if((t|0)==30)return x|0}while(0);c[e>>2]=0;x=0;return x|0}function rv(a){a=a|0;if(!a)return;c[a>>2]=1;c[a+4>>2]=0;c[a+8>>2]=0;return}function sv(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;if(!a)return;b=a+8|0;d=c[b>>2]|0;e=a+4|0;if(d|0){f=c[e>>2]|0;if(f|0){g=f;f=d;while(1){g=g+-1|0;c[f>>2]=0;if(!g)break;else f=f+4|0}}CE(d)}c[a>>2]=1;c[e>>2]=0;c[b>>2]=0;return}function tv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;if(b>>>0>1e4){d=-16;return d|0}e=a+4|0;f=c[e>>2]|0;if(f>>>0>=b>>>0){d=0;return d|0}g=DE(b,4)|0;if(!g){d=-16;return d|0}h=a+8|0;a=c[h>>2]|0;if(a|0){CT(g|0,a|0,f<<2|0)|0;if(f|0){i=f;f=a;while(1){i=i+-1|0;c[f>>2]=0;if(!i)break;else f=f+4|0}}CE(a)}c[e>>2]=b;c[h>>2]=g;d=0;return d|0}function uv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=a+4|0;e=c[d>>2]|0;if(e>>>0>b>>>0){f=a+8|0;g=e;while(1){h=g+-1|0;if(!h)break;if(!(c[(c[f>>2]|0)+(h<<2)>>2]|0))g=h;else break}h=g>>>0<b>>>0?b:g;g=DE(h,4)|0;if(!g){i=-16;return i|0}j=c[f>>2]|0;if(j|0){CT(g|0,j|0,h<<2|0)|0;if(e|0){k=e;l=j;while(1){k=k+-1|0;c[l>>2]=0;if(!k)break;else l=l+4|0}}CE(j)}c[d>>2]=h;c[f>>2]=g;i=0;return i|0}if(b>>>0>1e4){i=-16;return i|0}if(e>>>0>=b>>>0){i=0;return i|0}g=DE(b,4)|0;if(!g){i=-16;return i|0}f=a+8|0;a=c[f>>2]|0;if(a|0){CT(g|0,a|0,e<<2|0)|0;if(e|0){h=e;e=a;while(1){h=h+-1|0;c[e>>2]=0;if(!h)break;else e=e+4|0}}CE(a)}c[d>>2]=b;c[f>>2]=g;i=0;return i|0}function vv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((a|0)==(b|0)){d=0;return d|0}e=b+8|0;f=c[e>>2]|0;if(!f){if(!a){d=0;return d|0}g=a+8|0;h=c[g>>2]|0;i=a+4|0;if(h|0){j=c[i>>2]|0;if(j|0){k=j;j=h;while(1){k=k+-1|0;c[j>>2]=0;if(!k)break;else j=j+4|0}}CE(h)}c[a>>2]=1;c[i>>2]=0;c[g>>2]=0;d=0;return d|0}g=c[b+4>>2]|0;while(1){i=g+-1|0;if(!i){l=11;break}if(!(c[f+(i<<2)>>2]|0))g=i;else{l=13;break}}if((l|0)==11)c[a>>2]=c[b>>2];else if((l|0)==13?(c[a>>2]=c[b>>2],g>>>0>1e4):0){d=-16;return d|0}b=a+4|0;l=c[b>>2]|0;if(l>>>0<g>>>0){f=DE(g,4)|0;if(!f){d=-16;return d|0}i=a+8|0;h=c[i>>2]|0;if(h|0){CT(f|0,h|0,l<<2|0)|0;if(l|0){j=l;k=h;while(1){j=j+-1|0;c[k>>2]=0;if(!j)break;else k=k+4|0}}CE(h)}c[b>>2]=g;c[i>>2]=f;m=i;n=g;o=f}else{f=a+8|0;m=f;n=l;o=c[f>>2]|0}ET(o|0,0,n<<2|0)|0;CT(c[m>>2]|0,c[e>>2]|0,g<<2|0)|0;d=0;return d|0}function wv(a,b){a=a|0;b=b|0;var d=0,e=0;d=l;l=l+16|0;e=d;c[e>>2]=c[a>>2];c[e+4>>2]=c[a+4>>2];c[e+8>>2]=c[a+8>>2];c[a>>2]=c[b>>2];c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];c[b+8>>2]=c[e+8>>2];l=d;return}function xv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=b+4|0;f=c[e>>2]|0;if(f>>>0>1e4){g=-16;return g|0}h=a+4|0;i=c[h>>2]|0;if(i>>>0<f>>>0){j=DE(f,4)|0;if(!j){g=-16;return g|0}k=a+8|0;l=c[k>>2]|0;if(l|0){CT(j|0,l|0,i<<2|0)|0;if(i|0){m=i;n=l;while(1){m=m+-1|0;c[n>>2]=0;if(!m)break;else n=n+4|0}}CE(l)}c[h>>2]=f;c[k>>2]=j;o=c[e>>2]|0;p=f}else{o=f;p=i}i=((0-d<<24>>24|d)&255)>>>7&255;d=0-(i^1)|0;f=0-i|0;c[a>>2]=(c[b>>2]&f)+(c[a>>2]&d);if(!o){q=0;r=p}else{p=c[a+8>>2]|0;o=c[b+8>>2]|0;b=0;do{i=p+(b<<2)|0;c[i>>2]=(c[o+(b<<2)>>2]&f)+(c[i>>2]&d);b=b+1|0}while(b>>>0<(c[e>>2]|0)>>>0);q=b;r=c[h>>2]|0}if(q>>>0>=r>>>0){g=0;return g|0}r=c[a+8>>2]|0;a=q;do{q=r+(a<<2)|0;c[q>>2]=c[q>>2]&d;a=a+1|0}while(a>>>0<(c[h>>2]|0)>>>0);g=0;return g|0}function yv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if((a|0)==(b|0)){e=0;return e|0}f=((0-d<<24>>24|d)&255)>>>7;d=b+4|0;g=c[d>>2]|0;if(g>>>0>1e4){e=-16;return e|0}h=a+4|0;i=c[h>>2]|0;if(i>>>0<g>>>0){j=DE(g,4)|0;if(!j){e=-16;return e|0}k=a+8|0;l=c[k>>2]|0;if(l|0){CT(j|0,l|0,i<<2|0)|0;if(i|0){m=i;n=l;while(1){m=m+-1|0;c[n>>2]=0;if(!m)break;else n=n+4|0}}CE(l)}c[h>>2]=g;c[k>>2]=j;o=g}else o=i;if(o>>>0>1e4){e=-16;return e|0}i=c[d>>2]|0;if(i>>>0<o>>>0){g=DE(o,4)|0;if(!g){e=-16;return e|0}j=b+8|0;k=c[j>>2]|0;if(k|0){CT(g|0,k|0,i<<2|0)|0;if(i|0){l=i;i=k;while(1){l=l+-1|0;c[i>>2]=0;if(!l)break;else i=i+4|0}}CE(k)}c[d>>2]=o;c[j>>2]=g;p=c[h>>2]|0}else p=o;o=c[a>>2]|0;g=f&255;f=0-(g^1)|0;j=0-g|0;c[a>>2]=(c[b>>2]&j)+(o&f);c[b>>2]=(c[b>>2]&f)+(o&j);if(!p){e=0;return e|0}p=c[a+8>>2]|0;a=c[b+8>>2]|0;b=0;do{o=p+(b<<2)|0;g=c[o>>2]|0;d=a+(b<<2)|0;c[o>>2]=(c[d>>2]&j)+(g&f);c[d>>2]=(c[d>>2]&f)+(g&j);b=b+1|0}while(b>>>0<(c[h>>2]|0)>>>0);e=0;return e|0}function zv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=a+4|0;e=c[d>>2]|0;if(!e){f=DE(1,4)|0;if(!f){g=-16;return g|0}h=a+8|0;i=c[h>>2]|0;if(i|0)CE(i);c[d>>2]=1;c[h>>2]=f;j=h;k=f;l=4}else{f=a+8|0;j=f;k=c[f>>2]|0;l=e<<2}ET(k|0,0,l|0)|0;c[c[j>>2]>>2]=(b|0)<0?0-b|0:b;c[a>>2]=b>>31|1;g=0;return g|0}function Av(a,b){a=a|0;b=b|0;var d=0;if(c[a+4>>2]<<5>>>0<=b>>>0){d=0;return d|0}d=(c[(c[a+8>>2]|0)+(b>>>5<<2)>>2]|0)>>>(b&31)&1;return d|0}function Bv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=b>>>5;f=b&31;g=d&255;if((d&255)>=2){h=-4;return h|0}i=a+4|0;j=c[i>>2]|0;if(j<<5>>>0<=b>>>0){if(!(d<<24>>24)){h=0;return h|0}d=e+1|0;if(b>>>0>319999){h=-16;return h|0}if(j>>>0<=e>>>0){b=DE(d,4)|0;if(!b){h=-16;return h|0}k=a+8|0;l=c[k>>2]|0;if(l|0){CT(b|0,l|0,j<<2|0)|0;if(j|0){m=j;j=l;while(1){m=m+-1|0;c[j>>2]=0;if(!m)break;else j=j+4|0}}CE(l)}c[i>>2]=d;c[k>>2]=b}}b=(c[a+8>>2]|0)+(e<<2)|0;c[b>>2]=c[b>>2]&~(1<<f)|g<<f;h=0;return h|0}function Cv(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=c[a+4>>2]|0;a:do if(!b)d=0;else{e=c[a+8>>2]|0;f=0;g=0;while(1){h=c[e+(f<<2)>>2]|0;if(h&1|0){d=g;break a}if(h&2|0){d=g|1;break a}if(h&4|0){d=g|2;break a}if(h&8|0){d=g|3;break a}if(h&16|0){d=g|4;break a}if(h&32|0){d=g|5;break a}if(h&64|0){d=g|6;break a}if(h&128|0){d=g|7;break a}if(h&256|0){d=g|8;break a}if(h&512|0){d=g|9;break a}if(h&1024|0){d=g|10;break a}if(h&2048|0){d=g|11;break a}if(h&4096|0){d=g|12;break a}if(h&8192|0){d=g|13;break a}if(h&16384|0){d=g|14;break a}if(h&32768|0){d=g|15;break a}if(h&65536|0){d=g|16;break a}if(h&131072|0){d=g|17;break a}if(h&262144|0){d=g|18;break a}if(h&524288|0){d=g|19;break a}if(h&1048576|0){d=g|20;break a}if(h&2097152|0){d=g|21;break a}if(h&4194304|0){d=g|22;break a}if(h&8388608|0){d=g|23;break a}if(h&16777216|0){d=g|24;break a}if(h&33554432|0){d=g|25;break a}if(h&67108864|0){d=g|26;break a}if(h&134217728|0){d=g|27;break a}if(h&268435456|0){d=g|28;break a}if(h&536870912|0){d=g|29;break a}if(h&1073741824|0){d=g|30;break a}if((h|0)<=-1){d=g|31;break a}f=f+1|0;if(f>>>0>=b>>>0){d=0;break}else g=g+32|0}}while(0);return d|0}function Dv(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;b=c[a+4>>2]|0;if(!b){d=0;return d|0}e=c[a+8>>2]|0;a=b;while(1){a=a+-1|0;if(!a){f=4;break}g=c[e+(a<<2)>>2]|0;if(g|0){f=6;break}}if((f|0)==4){h=32;i=c[e>>2]|0}else if((f|0)==6){h=(a<<5)+32|0;i=g}if((i|0)>-1){g=-2147483648;a=0;while(1){g=g>>>1;f=a+1|0;if(!(f>>>0<32&(g&i|0)==0)){j=f;break}else a=f}}else j=0;d=h-j|0;return d|0}function Ev(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;b=c[a+4>>2]|0;if(!b){d=0;return d|0}e=c[a+8>>2]|0;a=b;while(1){a=a+-1|0;if(!a){f=4;break}g=c[e+(a<<2)>>2]|0;if(g|0){f=6;break}}if((f|0)==4){h=39;i=c[e>>2]|0}else if((f|0)==6){h=(a<<5)+39|0;i=g}if((i|0)>-1){g=-2147483648;a=0;while(1){g=g>>>1;f=a+1|0;if(!(f>>>0<32&(g&i|0)==0)){j=f;break}else a=f}}else j=0;d=(h-j|0)>>>3;return d|0}function Fv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;f=l;l=l+32|0;g=f+16|0;h=f+12|0;i=f;if((d+-2|0)>>>0>14){j=-4;l=f;return j|0}c[i>>2]=1;k=i+4|0;c[k>>2]=0;m=i+8|0;c[m>>2]=0;n=$F(e)|0;a:do if((d|0)==16){if(n>>>0>1073741823){j=-4;l=f;return j|0}o=(n>>>3&134217727)+((n&7|0)!=0&1)|0;if(o>>>0>1e4)p=-16;else{q=b+4|0;r=c[q>>2]|0;if(r>>>0<o>>>0){s=DE(o,4)|0;if(!s){p=-16;break}t=b+8|0;u=c[t>>2]|0;if(u|0){CT(s|0,u|0,r<<2|0)|0;if(r|0){v=r;w=u;while(1){v=v+-1|0;c[w>>2]=0;if(!v)break;else w=w+4|0}}CE(u)}c[q>>2]=o;c[t>>2]=s;x=o}else x=r;if(!x){w=DE(1,4)|0;if(!w){p=-16;break}v=b+8|0;y=c[v>>2]|0;if(y|0)CE(y);c[q>>2]=1;c[v>>2]=w;z=v;A=w;B=4}else{w=b+8|0;z=w;A=c[w>>2]|0;B=x<<2}ET(A|0,0,B|0)|0;w=c[z>>2]|0;c[w>>2]=0;c[b>>2]=1;v=0;y=n;b:while(1){switch(y|0){case 0:{p=0;break a;break}case 1:{if((a[e>>0]|0)==45)break b;break}default:{}}C=y+-1|0;D=a[e+C>>0]|0;E=(D+-65&255)<6;F=(D+-97&255)<6;if((D+-48&255)>=10)switch(D<<24>>24){case 65:case 66:case 67:case 68:case 69:case 70:case 97:case 98:case 99:case 100:case 101:case 102:break;default:{p=-6;break a}}G=(F?-87:E?-55:-48)+(D<<24>>24)|0;if(G>>>0>=16){p=-6;break a}D=w+(v>>>3<<2)|0;c[D>>2]=c[D>>2]|G<<(v<<2&28);v=v+1|0;y=C}c[b>>2]=-1;p=0}}else{y=b+4|0;v=c[y>>2]|0;if(!v){w=DE(1,4)|0;if(!w){p=-16;break}q=b+8|0;r=c[q>>2]|0;if(r|0)CE(r);c[y>>2]=1;c[q>>2]=w;H=q;I=w;J=4}else{w=b+8|0;H=w;I=c[w>>2]|0;J=v<<2}ET(I|0,0,J|0)|0;c[c[H>>2]>>2]=0;c[b>>2]=1;if(n){v=g+4|0;w=g+8|0;q=g+4|0;y=g+8|0;r=g+4|0;o=g+8|0;s=0;c:while(1){if((s|0)==0?(a[e>>0]|0)==45:0)c[b>>2]=-1;else K=37;do if((K|0)==37){K=0;t=a[e+s>>0]|0;u=(t+-65&255)<6;C=(t+-97&255)<6;if((t+-48&255)<10)K=39;else switch(t<<24>>24){case 65:case 66:case 67:case 68:case 69:case 70:case 97:case 98:case 99:case 100:case 101:case 102:{K=39;break}default:L=255}if((K|0)==39){K=0;L=(C?-87:u?-55:-48)+(t<<24>>24)|0}if(L>>>0>=d>>>0){M=-6;break c}c[g>>2]=1;c[v>>2]=1;c[w>>2]=h;c[h>>2]=d;t=Gv(i,b,g)|0;if(t|0){M=t;break c}if((c[b>>2]|0)==1){c[h>>2]=(L|0)<0?0-L|0:L;c[g>>2]=L>>31|1;c[q>>2]=1;c[y>>2]=h;t=Hv(b,i,g)|0;if(!t)break;else{M=t;break c}}else{c[h>>2]=(L|0)<0?0-L|0:L;c[g>>2]=L>>31|1;c[r>>2]=1;c[o>>2]=h;t=Iv(b,i,g)|0;if(!t)break;else{M=t;break c}}}while(0);s=s+1|0;if(s>>>0>=n>>>0){M=0;break}}s=c[m>>2]|0;if(!s)p=M;else{o=c[k>>2]|0;if(o|0){r=o;o=s;while(1){r=r+-1|0;c[o>>2]=0;if(!r)break;else o=o+4|0}}CE(s);p=M}}else p=0}while(0);c[i>>2]=1;c[k>>2]=0;c[m>>2]=0;j=p;l=f;return j|0}function Gv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;e=l;l=l+32|0;f=e+12|0;g=e;c[f>>2]=1;h=f+4|0;c[h>>2]=0;i=f+8|0;c[i>>2]=0;c[g>>2]=1;j=g+4|0;c[j>>2]=0;k=g+8|0;c[k>>2]=0;if((a|0)==(b|0)){m=vv(f,a)|0;if(!m){n=f;o=3}else p=m}else{n=b;o=3}do if((o|0)==3){if((a|0)==(d|0)){b=vv(g,a)|0;if(!b)q=g;else{p=b;break}}else q=d;b=n+8|0;m=c[n+4>>2]|0;while(1){if(!m){r=0;break}f=m+-1|0;if(!(c[(c[b>>2]|0)+(f<<2)>>2]|0))m=f;else{r=m;break}}m=q+8|0;f=c[q+4>>2]|0;while(1){if(!f){s=0;break}t=f+-1|0;if(!(c[(c[m>>2]|0)+(t<<2)>>2]|0))f=t;else{s=f;break}}f=s+r|0;if(f>>>0>1e4)p=-16;else{t=a+4|0;u=c[t>>2]|0;if(u>>>0<f>>>0){v=DE(f,4)|0;if(!v){p=-16;break}w=a+8|0;x=c[w>>2]|0;if(x|0){CT(v|0,x|0,u<<2|0)|0;if(u|0){y=u;z=x;while(1){y=y+-1|0;c[z>>2]=0;if(!y)break;else z=z+4|0}}CE(x)}c[t>>2]=f;c[w>>2]=v;A=f}else A=u;if(!A){z=DE(1,4)|0;if(!z){p=-16;break}y=a+8|0;B=c[y>>2]|0;if(B|0)CE(B);c[t>>2]=1;c[y>>2]=z;C=y;D=z;E=4}else{z=a+8|0;C=z;D=c[z>>2]|0;E=A<<2}ET(D|0,0,E|0)|0;z=c[C>>2]|0;c[z>>2]=0;c[a>>2]=1;if(s|0?(y=a+8|0,B=s+-1|0,Lv(r,c[b>>2]|0,z+(s<<2)+-4|0,c[(c[m>>2]|0)+(B<<2)>>2]|0),B|0):0){z=B;do{B=z;z=z+-1|0;Lv(r,c[b>>2]|0,(c[y>>2]|0)+(B<<2)+-4|0,c[(c[m>>2]|0)+(z<<2)>>2]|0)}while((z|0)!=0)}c[a>>2]=O(c[q>>2]|0,c[n>>2]|0)|0;p=0}}while(0);n=c[k>>2]|0;if(n|0){q=c[j>>2]|0;if(q|0){a=q;q=n;while(1){a=a+-1|0;c[q>>2]=0;if(!a)break;else q=q+4|0}}CE(n)}c[g>>2]=1;c[j>>2]=0;c[k>>2]=0;k=c[i>>2]|0;if(!k){l=e;return p|0}i=c[h>>2]|0;if(i|0){h=i;i=k;while(1){h=h+-1|0;c[i>>2]=0;if(!h)break;else i=i+4|0}}CE(k);l=e;return p|0}function Hv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=c[b>>2]|0;a:do if((O(c[d>>2]|0,e)|0)<0){f=b+8|0;g=c[b+4>>2]|0;while(1){if(!g){h=0;break}i=g+-1|0;if(!(c[(c[f>>2]|0)+(i<<2)>>2]|0))g=i;else{h=g;break}}g=d+8|0;i=c[d+4>>2]|0;while(1){if(!i){j=0;break}k=i+-1|0;if(!(c[(c[g>>2]|0)+(k<<2)>>2]|0))i=k;else{j=i;break}}b:do if(!(h>>>0>j>>>0|(j|h|0)==0)){if(j>>>0<=h>>>0){i=h;do{if(!i)break b;i=i+-1|0;k=c[(c[f>>2]|0)+(i<<2)>>2]|0;l=c[(c[g>>2]|0)+(i<<2)>>2]|0;if(k>>>0>l>>>0)break b}while(k>>>0>=l>>>0)}i=Jv(a,d,b)|0;if(!i){m=0-e|0;break a}else{n=i;return n|0}}while(0);g=Jv(a,b,d)|0;if(!g)m=e;else{n=g;return n|0}}else{g=Kv(a,b,d)|0;if(!g)m=e;else{n=g;return n|0}}while(0);c[a>>2]=m;n=0;return n|0}function Iv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=c[b>>2]|0;a:do if((O(c[d>>2]|0,e)|0)>0){f=b+8|0;g=c[b+4>>2]|0;while(1){if(!g){h=0;break}i=g+-1|0;if(!(c[(c[f>>2]|0)+(i<<2)>>2]|0))g=i;else{h=g;break}}g=d+8|0;i=c[d+4>>2]|0;while(1){if(!i){j=0;break}k=i+-1|0;if(!(c[(c[g>>2]|0)+(k<<2)>>2]|0))i=k;else{j=i;break}}b:do if(!(h>>>0>j>>>0|(j|h|0)==0)){if(j>>>0<=h>>>0){i=h;do{if(!i)break b;i=i+-1|0;k=c[(c[f>>2]|0)+(i<<2)>>2]|0;l=c[(c[g>>2]|0)+(i<<2)>>2]|0;if(k>>>0>l>>>0)break b}while(k>>>0>=l>>>0)}i=Jv(a,d,b)|0;if(!i){m=0-e|0;break a}else{n=i;return n|0}}while(0);g=Jv(a,b,d)|0;if(!g)m=e;else{n=g;return n|0}}else{g=Kv(a,b,d)|0;if(!g)m=e;else{n=g;return n|0}}while(0);c[a>>2]=m;n=0;return n|0}function Jv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=l;l=l+16|0;f=e;g=b+8|0;h=c[b+4>>2]|0;while(1){if(!h){i=0;break}j=h+-1|0;if(!(c[(c[g>>2]|0)+(j<<2)>>2]|0))h=j;else{i=h;break}}h=d+8|0;j=c[d+4>>2]|0;while(1){if(!j){k=0;break}m=j+-1|0;if(!(c[(c[h>>2]|0)+(m<<2)>>2]|0))j=m;else{k=j;break}}a:do if(!(i>>>0>k>>>0|(k|i|0)==0)){if(k>>>0>i>>>0){n=-10;l=e;return n|0}else o=i;while(1){if(!o)break a;o=o+-1|0;j=c[(c[g>>2]|0)+(o<<2)>>2]|0;m=c[(c[h>>2]|0)+(o<<2)>>2]|0;if(j>>>0>m>>>0)break a;if(j>>>0<m>>>0){n=-10;break}}l=e;return n|0}while(0);c[f>>2]=1;o=f+4|0;c[o>>2]=0;h=f+8|0;c[h>>2]=0;if((a|0)==(d|0)){g=vv(f,d)|0;if(!g){p=f;q=14}else r=g}else{p=d;q=14}b:do if((q|0)==14){if((a|0)!=(b|0)?(d=vv(a,b)|0,d|0):0){r=d;break}c[a>>2]=1;d=p+8|0;g=c[p+4>>2]|0;while(1){if(!g){r=0;break b}s=c[d>>2]|0;i=g+-1|0;if(!(c[s+(i<<2)>>2]|0))g=i;else break}d=c[a+8>>2]|0;i=0;k=d;m=s;j=0;while(1){t=c[k>>2]|0;u=t-j|0;c[k>>2]=u;v=c[m>>2]|0;j=(u>>>0<v>>>0&1)+(t>>>0<j>>>0&1)|0;c[k>>2]=u-v;i=i+1|0;if((i|0)==(g|0))break;else{k=k+4|0;m=m+4|0}}if(!j)r=0;else{m=d+(g<<2)|0;k=j;while(1){i=c[m>>2]|0;v=i>>>0<k>>>0;c[m>>2]=i-k;if(v){m=m+4|0;k=v&1}else{r=0;break}}}}while(0);s=c[h>>2]|0;if(s|0){a=c[o>>2]|0;if(a|0){p=a;a=s;while(1){p=p+-1|0;c[a>>2]=0;if(!p)break;else a=a+4|0}}CE(s)}c[f>>2]=1;c[o>>2]=0;c[h>>2]=0;n=r;l=e;return n|0}function Kv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=(a|0)==(d|0);f=e?b:d;d=e?a:b;if((d|0)!=(a|0)?(b=vv(a,d)|0,b|0):0){g=b;return g|0}c[a>>2]=1;b=f+8|0;d=c[f+4>>2]|0;while(1){if(!d){h=0;break}f=d+-1|0;if(!(c[(c[b>>2]|0)+(f<<2)>>2]|0))d=f;else{i=6;break}}if((i|0)==6)if(d>>>0>1e4){g=-16;return g|0}else h=d;d=a+4|0;f=c[d>>2]|0;if(f>>>0<h>>>0){e=DE(h,4)|0;if(!e){g=-16;return g|0}j=a+8|0;k=c[j>>2]|0;if(k|0){CT(e|0,k|0,f<<2|0)|0;if(f|0){l=f;f=k;while(1){l=l+-1|0;c[f>>2]=0;if(!l)break;else f=f+4|0}}CE(k)}c[d>>2]=h;c[j>>2]=e;m=j;n=e;o=e}else{e=a+8|0;a=c[e>>2]|0;m=e;n=a;o=a}if(!h){g=0;return g|0}a=0;e=n;j=c[b>>2]|0;b=0;while(1){k=c[j>>2]|0;f=(c[e>>2]|0)+a|0;l=f+k|0;c[e>>2]=l;a=(l>>>0<k>>>0&1)+(f>>>0<a>>>0&1)|0;b=b+1|0;if((b|0)==(h|0))break;else{e=e+4|0;j=j+4|0}}if(!a){g=0;return g|0}j=n+(h<<2)|0;e=h;h=a;a=n;b=o;f=o;o=n;while(1){n=c[d>>2]|0;k=e;e=e+1|0;if(k>>>0<n>>>0){p=j;q=f;r=o;s=b;t=a}else{if(e>>>0>1e4){g=-16;i=31;break}if(n>>>0<e>>>0){l=DE(e,4)|0;if(!l){g=-16;i=31;break}if(a|0){CT(l|0,b|0,n<<2|0)|0;if(n|0){u=n;n=a;while(1){u=u+-1|0;c[n>>2]=0;if(!u)break;else n=n+4|0}}CE(b)}c[d>>2]=e;c[m>>2]=l;v=l;w=l}else{v=o;w=f}p=v+(k<<2)|0;q=w;r=v;s=w;t=v}n=(c[p>>2]|0)+h|0;c[p>>2]=n;u=n>>>0<h>>>0;if(!u){g=0;i=31;break}else{j=p+4|0;h=u&1;a=t;b=s;f=q;o=r}}if((i|0)==31)return g|0;return 0}function Lv(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0;if(a>>>0>15){f=a+-16|0;g=f&-16;h=g+16|0;i=d+(h<<2)|0;j=b;k=d;l=0;m=a;while(1){n=rT(c[j>>2]|0,0,e|0,0)|0;o=l+n|0;n=c[k>>2]|0;p=o+n|0;q=(o>>>0<l>>>0&1)+z+(p>>>0<n>>>0&1)|0;n=k+4|0;c[k>>2]=p;p=rT(c[j+4>>2]|0,0,e|0,0)|0;o=q+p|0;p=c[n>>2]|0;r=o+p|0;s=(o>>>0<q>>>0&1)+z+(r>>>0<p>>>0&1)|0;p=k+8|0;c[n>>2]=r;r=rT(c[j+8>>2]|0,0,e|0,0)|0;n=s+r|0;r=c[p>>2]|0;q=n+r|0;o=(n>>>0<s>>>0&1)+z+(q>>>0<r>>>0&1)|0;r=k+12|0;c[p>>2]=q;q=rT(c[j+12>>2]|0,0,e|0,0)|0;p=o+q|0;q=c[r>>2]|0;s=p+q|0;n=(p>>>0<o>>>0&1)+z+(s>>>0<q>>>0&1)|0;q=k+16|0;c[r>>2]=s;s=rT(c[j+16>>2]|0,0,e|0,0)|0;r=n+s|0;s=c[q>>2]|0;o=r+s|0;p=(r>>>0<n>>>0&1)+z+(o>>>0<s>>>0&1)|0;s=k+20|0;c[q>>2]=o;o=rT(c[j+20>>2]|0,0,e|0,0)|0;q=p+o|0;o=c[s>>2]|0;n=q+o|0;r=(q>>>0<p>>>0&1)+z+(n>>>0<o>>>0&1)|0;o=k+24|0;c[s>>2]=n;n=rT(c[j+24>>2]|0,0,e|0,0)|0;s=r+n|0;n=c[o>>2]|0;p=s+n|0;q=(s>>>0<r>>>0&1)+z+(p>>>0<n>>>0&1)|0;n=k+28|0;c[o>>2]=p;p=rT(c[j+28>>2]|0,0,e|0,0)|0;o=q+p|0;p=c[n>>2]|0;r=o+p|0;s=(o>>>0<q>>>0&1)+z+(r>>>0<p>>>0&1)|0;p=k+32|0;c[n>>2]=r;r=rT(c[j+32>>2]|0,0,e|0,0)|0;n=s+r|0;r=c[p>>2]|0;q=n+r|0;o=(n>>>0<s>>>0&1)+z+(q>>>0<r>>>0&1)|0;r=k+36|0;c[p>>2]=q;q=rT(c[j+36>>2]|0,0,e|0,0)|0;p=o+q|0;q=c[r>>2]|0;s=p+q|0;n=(p>>>0<o>>>0&1)+z+(s>>>0<q>>>0&1)|0;q=k+40|0;c[r>>2]=s;s=rT(c[j+40>>2]|0,0,e|0,0)|0;r=n+s|0;s=c[q>>2]|0;o=r+s|0;p=(r>>>0<n>>>0&1)+z+(o>>>0<s>>>0&1)|0;s=k+44|0;c[q>>2]=o;o=rT(c[j+44>>2]|0,0,e|0,0)|0;q=p+o|0;o=c[s>>2]|0;n=q+o|0;r=(q>>>0<p>>>0&1)+z+(n>>>0<o>>>0&1)|0;o=k+48|0;c[s>>2]=n;n=rT(c[j+48>>2]|0,0,e|0,0)|0;s=r+n|0;n=c[o>>2]|0;p=s+n|0;q=(s>>>0<r>>>0&1)+z+(p>>>0<n>>>0&1)|0;n=k+52|0;c[o>>2]=p;p=rT(c[j+52>>2]|0,0,e|0,0)|0;o=q+p|0;p=c[n>>2]|0;r=o+p|0;s=(o>>>0<q>>>0&1)+z+(r>>>0<p>>>0&1)|0;p=k+56|0;c[n>>2]=r;r=rT(c[j+56>>2]|0,0,e|0,0)|0;n=s+r|0;r=c[p>>2]|0;q=n+r|0;o=(n>>>0<s>>>0&1)+z+(q>>>0<r>>>0&1)|0;r=k+60|0;c[p>>2]=q;q=rT(c[j+60>>2]|0,0,e|0,0)|0;p=o+q|0;q=c[r>>2]|0;s=p+q|0;l=(p>>>0<o>>>0&1)+z+(s>>>0<q>>>0&1)|0;c[r>>2]=s;m=m+-16|0;if(m>>>0<=15)break;else{j=j+64|0;k=k+64|0}}t=f-g|0;u=b+(h<<2)|0;v=i;w=l}else{t=a;u=b;v=d;w=0}if(t>>>0>7){d=t+-8|0;b=d&-8;a=b+8|0;l=v+(a<<2)|0;i=u;h=v;g=w;f=t;while(1){k=rT(c[i>>2]|0,0,e|0,0)|0;j=g+k|0;k=c[h>>2]|0;m=j+k|0;s=(j>>>0<g>>>0&1)+z+(m>>>0<k>>>0&1)|0;k=h+4|0;c[h>>2]=m;m=rT(c[i+4>>2]|0,0,e|0,0)|0;j=s+m|0;m=c[k>>2]|0;r=j+m|0;q=(j>>>0<s>>>0&1)+z+(r>>>0<m>>>0&1)|0;m=h+8|0;c[k>>2]=r;r=rT(c[i+8>>2]|0,0,e|0,0)|0;k=q+r|0;r=c[m>>2]|0;s=k+r|0;j=(k>>>0<q>>>0&1)+z+(s>>>0<r>>>0&1)|0;r=h+12|0;c[m>>2]=s;s=rT(c[i+12>>2]|0,0,e|0,0)|0;m=j+s|0;s=c[r>>2]|0;q=m+s|0;k=(m>>>0<j>>>0&1)+z+(q>>>0<s>>>0&1)|0;s=h+16|0;c[r>>2]=q;q=rT(c[i+16>>2]|0,0,e|0,0)|0;r=k+q|0;q=c[s>>2]|0;j=r+q|0;m=(r>>>0<k>>>0&1)+z+(j>>>0<q>>>0&1)|0;q=h+20|0;c[s>>2]=j;j=rT(c[i+20>>2]|0,0,e|0,0)|0;s=m+j|0;j=c[q>>2]|0;k=s+j|0;r=(s>>>0<m>>>0&1)+z+(k>>>0<j>>>0&1)|0;j=h+24|0;c[q>>2]=k;k=rT(c[i+24>>2]|0,0,e|0,0)|0;q=r+k|0;k=c[j>>2]|0;m=q+k|0;s=(q>>>0<r>>>0&1)+z+(m>>>0<k>>>0&1)|0;k=h+28|0;c[j>>2]=m;m=rT(c[i+28>>2]|0,0,e|0,0)|0;j=s+m|0;m=c[k>>2]|0;r=j+m|0;g=(j>>>0<s>>>0&1)+z+(r>>>0<m>>>0&1)|0;c[k>>2]=r;f=f+-8|0;if(f>>>0<=7)break;else{i=i+32|0;h=h+32|0}}x=d-b|0;y=u+(a<<2)|0;A=l;B=g}else{x=t;y=u;A=v;B=w}if(!x){C=A;D=B}else{w=y;y=A;v=B;B=x;while(1){u=rT(c[w>>2]|0,0,e|0,0)|0;t=v+u|0;u=c[y>>2]|0;g=t+u|0;v=(t>>>0<v>>>0&1)+z+(g>>>0<u>>>0&1)|0;c[y>>2]=g;B=B+-1|0;if(!B)break;else{w=w+4|0;y=y+4|0}}C=A+(x<<2)|0;D=v}while(1){v=(c[C>>2]|0)+D|0;c[C>>2]=v;x=v>>>0<D>>>0;if(x){C=C+4|0;D=x&1}else break}return}function Mv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=l;l=l+16|0;f=e+4|0;g=e;c[f>>2]=1;c[f+4>>2]=1;c[f+8>>2]=g;c[g>>2]=d;d=Gv(a,b,f)|0;l=e;return d|0}function Nv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=l;l=l+16|0;f=e+4|0;g=e;c[g>>2]=(d|0)<0?0-d|0:d;c[f>>2]=d>>31|1;c[f+4>>2]=1;c[f+8>>2]=g;g=Iv(a,b,f)|0;l=e;return g|0}function Ov(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0;f=l;l=l+64|0;g=f+52|0;h=f+48|0;i=f+36|0;j=f+24|0;k=f+12|0;m=f;n=c[e+4>>2]|0;o=e+8|0;p=n;do{if(!p){q=-12;r=159;break}s=c[o>>2]|0;p=p+-1|0}while(!(c[s+(p<<2)>>2]|0));if((r|0)==159){l=f;return q|0}if(!(c[e>>2]|0)){q=-12;l=f;return q|0}c[i>>2]=1;p=i+4|0;c[p>>2]=0;o=i+8|0;c[o>>2]=0;c[j>>2]=1;t=j+4|0;c[t>>2]=0;u=j+8|0;c[u>>2]=0;c[k>>2]=1;v=k+4|0;c[v>>2]=0;w=k+8|0;c[w>>2]=0;c[m>>2]=1;x=m+4|0;c[x>>2]=0;y=m+8|0;c[y>>2]=0;A=d+4|0;B=d+8|0;C=c[A>>2]|0;while(1){if(!C){D=0;break}E=C+-1|0;if(!(c[(c[B>>2]|0)+(E<<2)>>2]|0))C=E;else{D=C;break}}C=n;while(1){if(!C){F=0;break}n=C+-1|0;if(!(c[s+(n<<2)>>2]|0))C=n;else{F=C;break}}a:do if(!(D>>>0>F>>>0|(F|D|0)==0)){if(F>>>0<=D>>>0){C=D;do{if(!C){r=26;break a}C=C+-1|0;n=c[(c[B>>2]|0)+(C<<2)>>2]|0;E=c[s+(C<<2)>>2]|0;if(n>>>0>E>>>0){r=26;break a}}while(n>>>0>=E>>>0)}if(a|0){C=a+4|0;E=c[C>>2]|0;if(!E){n=DE(1,4)|0;if(!n){G=-16;H=0;I=0;J=0;break}K=a+8|0;L=c[K>>2]|0;if(L|0)CE(L);c[C>>2]=1;c[K>>2]=n;M=K;N=n;P=4}else{n=a+8|0;M=n;N=c[n>>2]|0;P=E<<2}ET(N|0,0,P|0)|0;c[c[M>>2]>>2]=0;c[a>>2]=1}if(!b){q=0;l=f;return q|0}E=vv(b,d)|0;if(!E){q=0;l=f;return q|0}else{G=E;H=0;I=0;J=0}}else r=26;while(0);b:do if((r|0)==26){M=vv(i,d)|0;if(!M){P=vv(j,e)|0;if(!P){c[j>>2]=1;c[i>>2]=1;N=(c[A>>2]|0)+2|0;if(N>>>0<=1e4){s=c[v>>2]|0;if(s>>>0<N>>>0){B=DE(N,4)|0;if(!B){G=-16;H=0;I=0;J=0;break}D=c[w>>2]|0;if(D|0){CT(B|0,D|0,s<<2|0)|0;if(s|0){F=s;E=D;while(1){F=F+-1|0;c[E>>2]=0;if(!F)break;else E=E+4|0}}CE(D)}c[v>>2]=N;c[w>>2]=B;Q=N}else Q=s;if(!Q){E=DE(1,4)|0;if(!E){G=-16;H=0;I=0;J=0;break}F=c[w>>2]|0;if(F|0)CE(F);c[v>>2]=1;c[w>>2]=E;R=E;S=4}else{R=c[w>>2]|0;S=Q<<2}ET(R|0,0,S|0)|0;c[c[w>>2]>>2]=0;c[k>>2]=1;E=c[x>>2]|0;if(E>>>0<2){F=DE(2,4)|0;if(!F){G=-16;H=0;I=0;J=0;break}n=c[y>>2]|0;if(n|0){CT(F|0,n|0,E<<2|0)|0;if(E|0)c[n>>2]=0;CE(n)}c[x>>2]=2;c[y>>2]=F}F=DE(3,4)|0;if(F){n=c[t>>2]|0;if(n){E=c[u>>2]|0;K=n;while(1){K=K+-1|0;if(!K){r=53;break}C=c[E+(K<<2)>>2]|0;if(C|0){T=C;break}}if((r|0)==53)T=c[E>>2]|0;if((T|0)>-1){K=-2147483648;s=0;while(1){K=K>>>1;N=s+1|0;if(!(N>>>0<32&(K&T|0)==0)){U=N;break}else s=N}}else U=0;s=0-U&31;if((s|0)==31){V=0;W=n}else{X=s;r=58}}else{X=0;r=58}if((r|0)==58){s=X^31;K=Pv(i,s)|0;if(K|0){G=K;H=F;I=3;J=F;break}K=Pv(j,s)|0;if(K|0){G=K;H=F;I=3;J=F;break}V=s;W=c[t>>2]|0}s=(c[p>>2]|0)+-1|0;K=W+-1|0;E=s-K|0;N=E<<5;B=Pv(j,N)|0;if(!B){c:while(1){D=c[o>>2]|0;C=c[p>>2]|0;while(1){if(!C){Y=0;break}L=C+-1|0;if(!(c[D+(L<<2)>>2]|0))C=L;else{Y=C;break}}C=c[u>>2]|0;L=c[t>>2]|0;while(1){if(!L){Z=0;break}_=L+-1|0;if(!(c[C+(_<<2)>>2]|0))L=_;else{Z=L;break}}d:do if(Z|Y|0){e:do if(Y>>>0>Z>>>0)$=c[i>>2]|0;else{if(Z>>>0>Y>>>0){$=0-(c[j>>2]|0)|0;break}L=c[i>>2]|0;_=c[j>>2]|0;if((L|0)>0&(_|0)<0)break d;if((L|0)<0&(_|0)>0)break c;else aa=Y;do{if(!aa)break d;aa=aa+-1|0;_=c[D+(aa<<2)>>2]|0;ba=c[C+(aa<<2)>>2]|0;if(_>>>0>ba>>>0){$=L;break e}}while(_>>>0>=ba>>>0);$=0-L|0}while(0);if(($|0)<=-1)break c}while(0);C=(c[w>>2]|0)+(E<<2)|0;c[C>>2]=(c[C>>2]|0)+1;C=Iv(i,i,j)|0;if(C|0){G=C;H=F;I=3;J=F;break b}}E=Qv(j,N)|0;if(!E){if(s>>>0>K>>>0){n=(K|0)==0;C=g+4|0;D=g+8|0;ba=W+-2|0;_=g+4|0;ca=g+8|0;da=F+4|0;ea=F+4|0;fa=F+8|0;ga=s;do{ha=c[o>>2]|0;ia=c[ha+(ga<<2)>>2]|0;ja=c[(c[u>>2]|0)+(K<<2)>>2]|0;ka=ga;ga=ga+-1|0;if(ia>>>0<ja>>>0){la=wT(c[ha+(ga<<2)>>2]|0,ia|0,ja|0,0)|0;ja=z;ia=ja>>>0<0|(ja|0)==0&la>>>0<4294967295;ja=ia?la:-1;ma=ja}else ma=-1;ja=c[w>>2]|0;la=ka-K+-1|0;ia=ma+1|0;c[ja+(la<<2)>>2]=ia;ha=ka>>>0<2;na=ka+-2|0;oa=ja;ja=ia;f:while(1){c[oa+(la<<2)>>2]=ja+-1;ia=c[x>>2]|0;if(!ia){pa=DE(1,4)|0;if(!pa){G=-16;H=F;I=3;J=F;break b}qa=c[y>>2]|0;if(qa|0)CE(qa);c[x>>2]=1;c[y>>2]=pa;ra=pa;sa=4}else{ra=c[y>>2]|0;sa=ia<<2}ET(ra|0,0,sa|0)|0;ia=c[y>>2]|0;c[ia>>2]=0;c[m>>2]=1;pa=c[u>>2]|0;if(n)ta=0;else ta=c[pa+(ba<<2)>>2]|0;c[ia>>2]=ta;c[ia+4>>2]=c[pa+(K<<2)>>2];pa=c[(c[w>>2]|0)+(la<<2)>>2]|0;c[g>>2]=1;c[C>>2]=1;c[D>>2]=h;c[h>>2]=pa;pa=Gv(m,m,g)|0;if(pa|0){G=pa;H=F;I=3;J=F;break b}pa=da;c[pa>>2]=0;c[pa+4>>2]=0;c[F>>2]=0;if(ha)ua=0;else ua=c[(c[o>>2]|0)+(na<<2)>>2]|0;c[F>>2]=ua;pa=c[o>>2]|0;c[ea>>2]=c[pa+(ga<<2)>>2];c[fa>>2]=c[pa+(ka<<2)>>2];pa=c[y>>2]|0;ia=c[x>>2]|0;while(1){if(!ia){va=0;break}qa=ia+-1|0;if(!(c[pa+(qa<<2)>>2]|0))ia=qa;else{va=ia;break}}ia=3;while(1){if(!ia){wa=0;break}qa=ia+-1|0;if(!(c[F+(qa<<2)>>2]|0))ia=qa;else{wa=ia;break}}if(!(wa|va))break;g:do if(va>>>0>wa>>>0)xa=c[m>>2]|0;else{if(wa>>>0>va>>>0)break f;ia=c[m>>2]|0;if((ia|0)<0)break f;else ya=va;do{if(!ya)break f;ya=ya+-1|0;qa=c[pa+(ya<<2)>>2]|0;za=c[F+(ya<<2)>>2]|0;if(qa>>>0>za>>>0){xa=ia;break g}}while(qa>>>0>=za>>>0);xa=0-ia|0}while(0);if((xa|0)<=0)break;pa=c[w>>2]|0;oa=pa;ja=c[pa+(la<<2)>>2]|0}ja=c[(c[w>>2]|0)+(la<<2)>>2]|0;c[g>>2]=1;c[_>>2]=1;c[ca>>2]=h;c[h>>2]=ja;ja=Gv(m,j,g)|0;if(ja|0){G=ja;H=F;I=3;J=F;break b}ja=la<<5;oa=Pv(m,ja)|0;if(oa|0){G=oa;H=F;I=3;J=F;break b}oa=Iv(i,i,m)|0;if(oa|0){G=oa;H=F;I=3;J=F;break b}oa=c[o>>2]|0;ka=c[p>>2]|0;while(1){if(!ka)break;ka=ka+-1|0;if(c[oa+(ka<<2)>>2]|0){r=121;break}}do if((r|0)==121){r=0;if((c[i>>2]|0)>=0)break;ka=vv(m,j)|0;if(ka|0){G=ka;H=F;I=3;J=F;break b}ka=Pv(m,ja)|0;if(ka|0){G=ka;H=F;I=3;J=F;break b}ka=Hv(i,i,m)|0;if(ka|0){G=ka;H=F;I=3;J=F;break b}ka=(c[w>>2]|0)+(la<<2)|0;c[ka>>2]=(c[ka>>2]|0)+-1}while(0)}while(ga>>>0>K>>>0)}if(a|0){K=vv(a,k)|0;if(K|0){G=K;H=F;I=3;J=F;break}c[a>>2]=O(c[e>>2]|0,c[d>>2]|0)|0}if(b){K=Qv(i,V)|0;if(!K){c[i>>2]=c[d>>2];ga=vv(b,i)|0;if(!ga){ca=b+8|0;_=c[b+4>>2]|0;while(1){if(!_){r=137;break}_=_+-1|0;if(c[(c[ca>>2]|0)+(_<<2)>>2]|0){r=136;break}}if((r|0)==136)if(!(c[b>>2]|0))Aa=b;else{G=0;H=F;I=3;J=F;break}else if((r|0)==137)Aa=b;c[Aa>>2]=1;G=0;H=F;I=3;J=F}else{G=ga;H=F;I=3;J=F}}else{G=K;H=F;I=3;J=F}}else{G=0;H=F;I=3;J=F}}else{G=E;H=F;I=3;J=F}}else{G=B;H=F;I=3;J=F}}else{G=-16;H=0;I=0;J=0}}else{G=-16;H=0;I=0;J=0}}else{G=P;H=0;I=0;J=0}}else{G=M;H=0;I=0;J=0}}while(0);Aa=c[o>>2]|0;if(Aa|0){b=c[p>>2]|0;if(b|0){r=b;b=Aa;while(1){r=r+-1|0;c[b>>2]=0;if(!r)break;else b=b+4|0}}CE(Aa)}c[i>>2]=1;c[p>>2]=0;c[o>>2]=0;o=c[u>>2]|0;if(o|0){p=c[t>>2]|0;if(p|0){i=p;p=o;while(1){i=i+-1|0;c[p>>2]=0;if(!i)break;else p=p+4|0}}CE(o)}c[j>>2]=1;c[t>>2]=0;c[u>>2]=0;u=c[w>>2]|0;if(u|0){t=c[v>>2]|0;if(t|0){j=t;t=u;while(1){j=j+-1|0;c[t>>2]=0;if(!j)break;else t=t+4|0}}CE(u)}c[k>>2]=1;c[v>>2]=0;c[w>>2]=0;w=c[y>>2]|0;if(w|0){v=c[x>>2]|0;if(v|0){k=v;v=w;while(1){k=k+-1|0;c[v>>2]=0;if(!k)break;else v=v+4|0}}CE(w)}c[m>>2]=1;c[x>>2]=0;c[y>>2]=0;if(!H){q=G;l=f;return q|0}if(I|0){y=I;I=H;while(1){y=y+-1|0;c[I>>2]=0;if(!y)break;else I=I+4|0}}CE(J);q=G;l=f;return q|0}function Pv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=b>>>5;e=b&31;f=a+4|0;g=c[f>>2]|0;if(!g){h=0;i=0}else{j=c[a+8>>2]|0;k=g;while(1){k=k+-1|0;if(!k){l=4;break}m=c[j+(k<<2)>>2]|0;if(m|0){l=6;break}}if((l|0)==4){n=32;o=c[j>>2]|0}else if((l|0)==6){n=(k<<5)+32|0;o=m}if((o|0)>-1){m=-2147483648;k=0;while(1){m=m>>>1;l=k+1|0;if(!(l>>>0<32&(m&o|0)==0)){p=l;break}else k=l}}else p=0;h=n-p|0;i=g}p=h+b|0;if(i<<5>>>0<p>>>0){b=(p>>>5)+((p&31|0)!=0&1)|0;if(b>>>0>1e4){q=-16;return q|0}if(i>>>0<b>>>0){p=DE(b,4)|0;if(!p){q=-16;return q|0}h=a+8|0;n=c[h>>2]|0;if(n|0){CT(p|0,n|0,i<<2|0)|0;if(i|0){k=i;i=n;while(1){k=k+-1|0;c[i>>2]=0;if(!k)break;else i=i+4|0}}CE(n)}c[f>>2]=b;c[h>>2]=p;r=b}else r=g}else r=g;if(d|0){if(r>>>0>d>>>0){g=c[a+8>>2]|0;b=~d;p=r;do{h=p;p=p+-1|0;c[g+(p<<2)>>2]=c[g+(h+b<<2)>>2]}while(p>>>0>d>>>0);s=d}else s=r;if(s|0)ET(c[a+8>>2]|0,0,s<<2|0)|0}if(!e){q=0;return q|0}if(d>>>0>=(c[f>>2]|0)>>>0){q=0;return q|0}s=c[a+8>>2]|0;a=32-e|0;r=0;p=d;while(1){d=s+(p<<2)|0;b=c[d>>2]|0;c[d>>2]=b<<e|r;p=p+1|0;if(p>>>0>=(c[f>>2]|0)>>>0){q=0;break}else r=b>>>a}return q|0}function Qv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=b>>>5;e=b&31;b=a+4|0;f=c[b>>2]|0;if(d>>>0<=f>>>0?(g=(d|0)==(f|0),h=(e|0)!=0,!(h&g)):0){if(d){if(g){i=0;j=d}else{g=c[a+8>>2]|0;k=0;while(1){c[g+(k<<2)>>2]=c[g+(k+d<<2)>>2];l=k+1|0;m=c[b>>2]|0;if(l>>>0<(m-d|0)>>>0)k=l;else{i=l;j=m;break}}}if(i>>>0<j>>>0){k=c[a+8>>2]|0;d=i;do{c[k+(d<<2)>>2]=0;d=d+1|0;i=c[b>>2]|0}while(d>>>0<i>>>0);n=i}else n=j}else n=f;if((n|0)==0|h^1){o=0;return o|0}h=c[a+8>>2]|0;j=32-e|0;d=0;k=n;while(1){k=k+-1|0;n=h+(k<<2)|0;i=c[n>>2]|0;c[n>>2]=i>>>e|d;if(!k){o=0;break}else d=i<<j}return o|0}if(!f){j=DE(1,4)|0;if(!j){o=-16;return o|0}d=a+8|0;k=c[d>>2]|0;if(k|0)CE(k);c[b>>2]=1;c[d>>2]=j;p=d;q=j;r=4}else{j=a+8|0;p=j;q=c[j>>2]|0;r=f<<2}ET(q|0,0,r|0)|0;c[c[p>>2]>>2]=0;c[a>>2]=1;o=0;return o|0}function Rv(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;a:do if(!f)g=0;else{h=0;while(1){if(a[e+h>>0]|0){g=h;break a}i=h+1|0;if(i>>>0<f>>>0)h=i;else{g=i;break}}}while(0);h=f-g|0;i=(h>>>2)+((h&3|0)!=0&1)|0;if(i>>>0>1e4){j=-16;return j|0}k=b+4|0;l=c[k>>2]|0;if(l>>>0<i>>>0){m=DE(i,4)|0;if(!m){j=-16;return j|0}n=b+8|0;o=c[n>>2]|0;if(o|0){CT(m|0,o|0,l<<2|0)|0;if(l|0){p=l;q=o;while(1){p=p+-1|0;c[q>>2]=0;if(!p)break;else q=q+4|0}}CE(o)}c[k>>2]=i;c[n>>2]=m;r=i}else r=l;if(!r){l=DE(1,4)|0;if(!l){j=-16;return j|0}i=b+8|0;m=c[i>>2]|0;if(m|0)CE(m);c[k>>2]=1;c[i>>2]=l;s=i;t=l;u=4}else{l=b+8|0;s=l;t=c[l>>2]|0;u=r<<2}ET(t|0,0,u|0)|0;u=c[s>>2]|0;c[u>>2]=0;c[b>>2]=1;if(g>>>0<f>>>0){v=0;w=f}else{j=0;return j|0}do{w=w+-1|0;f=u+(v>>>2<<2)|0;c[f>>2]=c[f>>2]|d[e+w>>0]<<(v<<3&24);v=v+1|0}while((v|0)!=(h|0));j=0;return j|0}function Sv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=c[b+4>>2]|0;if(!f){ET(d|0,0,e|0)|0;g=0;return g|0}h=c[b+8>>2]|0;i=f;while(1){i=i+-1|0;if(!i){j=5;break}k=c[h+(i<<2)>>2]|0;if(k|0){j=7;break}}if((j|0)==5){l=39;m=c[h>>2]|0}else if((j|0)==7){l=(i<<5)+39|0;m=k}if((m|0)>-1){k=-2147483648;i=0;while(1){k=k>>>1;j=i+1|0;if(!(j>>>0<32&(k&m|0)==0)){n=j;break}else i=j}}else n=0;i=(l-n|0)>>>3;if(i>>>0>e>>>0){g=-8;return g|0}ET(d|0,0,e|0)|0;if(!i){g=0;return g|0}n=b+8|0;b=0;l=e;e=i;while(1){l=l+-1|0;a[d+l>>0]=(c[(c[n>>2]|0)+(b>>>2<<2)>>2]|0)>>>(b<<3&24);e=e+-1|0;if(!e){g=0;break}else b=b+1|0}return g|0}function Tv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=a+8|0;e=c[a+4>>2]|0;while(1){if(!e){f=0;break}g=e+-1|0;if(!(c[(c[d>>2]|0)+(g<<2)>>2]|0))e=g;else{f=e;break}}e=b+8|0;g=c[b+4>>2]|0;while(1){if(!g){h=0;break}i=g+-1|0;if(!(c[(c[e>>2]|0)+(i<<2)>>2]|0))g=i;else{h=g;break}}if(!(h|f)){j=0;return j|0}if(f>>>0>h>>>0){j=c[a>>2]|0;return j|0}if(h>>>0>f>>>0){j=0-(c[b>>2]|0)|0;return j|0}h=c[a>>2]|0;a=c[b>>2]|0;if((h|0)>0&(a|0)<0){j=1;return j|0}if((a|0)>0&(h|0)<0){j=-1;return j|0}else k=f;while(1){if(!k){j=0;l=18;break}k=k+-1|0;f=c[(c[d>>2]|0)+(k<<2)>>2]|0;a=c[(c[e>>2]|0)+(k<<2)>>2]|0;if(f>>>0>a>>>0){j=h;l=18;break}if(f>>>0<a>>>0){l=17;break}}if((l|0)==17){j=0-h|0;return j|0}else if((l|0)==18)return j|0;return 0}function Uv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=(b|0)<0?0-b|0:b;e=b>>31|1;f=a+8|0;g=c[a+4>>2]|0;while(1){if(!g){h=0;break}i=g+-1|0;if(!(c[(c[f>>2]|0)+(i<<2)>>2]|0))g=i;else{h=g;break}}g=(b|0)!=0&1;if(!(h|g)){j=0;return j|0}if(h>>>0>g>>>0){j=c[a>>2]|0;return j|0}if(h>>>0<g>>>0){j=0-e|0;return j|0}g=c[a>>2]|0;if((e|0)<0&(g|0)>0){j=1;return j|0}if((e|0)>0&(g|0)<0){j=-1;return j|0}else k=h;while(1){if(!k){j=0;l=15;break}k=k+-1|0;h=c[(c[f>>2]|0)+(k<<2)>>2]|0;if(h>>>0>d>>>0){j=g;l=15;break}if(h>>>0<d>>>0){l=14;break}}if((l|0)==14){j=0-g|0;return j|0}else if((l|0)==15)return j|0;return 0}function Vv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=d+4|0;f=d+8|0;g=c[e>>2]|0;while(1){if(!g)break;g=g+-1|0;if(c[(c[f>>2]|0)+(g<<2)>>2]|0){h=4;break}}if((h|0)==4?(c[d>>2]|0)<0:0){i=-10;return i|0}g=Ov(0,a,b,d)|0;if(g|0){i=g;return i|0}g=a+4|0;b=a+8|0;a:while(1){j=c[g>>2]|0;k=j;do{if(!k)break a;k=k+-1|0}while(!(c[(c[b>>2]|0)+(k<<2)>>2]|0));if((c[a>>2]|0)>=0)break;k=Hv(a,a,d)|0;if(k|0){i=k;h=33;break}}if((h|0)==33)return i|0;k=j;b:while(1){j=k;while(1){if(!j){l=0;break}m=j+-1|0;if(!(c[(c[b>>2]|0)+(m<<2)>>2]|0))j=m;else{l=j;break}}j=c[e>>2]|0;while(1){if(!j){n=0;break}m=j+-1|0;if(!(c[(c[f>>2]|0)+(m<<2)>>2]|0))j=m;else{n=j;break}}c:do if(n|l|0){d:do if(l>>>0>n>>>0)o=c[a>>2]|0;else{if(n>>>0>l>>>0){o=0-(c[d>>2]|0)|0;break}j=c[a>>2]|0;m=c[d>>2]|0;if((j|0)>0&(m|0)<0)break c;if((j|0)<0&(m|0)>0){i=0;h=33;break b}else p=l;do{if(!p)break c;p=p+-1|0;m=c[(c[b>>2]|0)+(p<<2)>>2]|0;q=c[(c[f>>2]|0)+(p<<2)>>2]|0;if(m>>>0>q>>>0){o=j;break d}}while(m>>>0>=q>>>0);o=0-j|0}while(0);if((o|0)<=-1){i=0;h=33;break b}}while(0);q=Iv(a,a,d)|0;if(q|0){i=q;h=33;break}k=c[g>>2]|0}if((h|0)==33)return i|0;return 0}function Wv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0;g=l;l=l+1600|0;h=g+1588|0;i=g+1576|0;j=g+1564|0;k=g+1552|0;m=g+16|0;n=g;o=e+4|0;p=c[o>>2]|0;q=e+8|0;r=c[q>>2]|0;s=p;while(1){if(!s)break;s=s+-1|0;if(c[r+(s<<2)>>2]|0){t=4;break}}if((t|0)==4?(c[e>>2]|0)<0:0){u=-4;l=g;return u|0}s=c[r>>2]|0;if(!(s&1)){u=-4;l=g;return u|0}r=d+4|0;v=c[r>>2]|0;w=d+8|0;x=v;while(1){if(!x)break;x=x+-1|0;if(c[(c[w>>2]|0)+(x<<2)>>2]|0){t=9;break}}if((t|0)==9?(c[d>>2]|0)<0:0){u=-4;l=g;return u|0}d=((s<<1)+4&8)+s|0;x=O(2-(O(d,s)|0)|0,d)|0;d=O(2-(O(x,s)|0)|0,x)|0;x=O(2-(O(d,s)|0)|0,0-d|0)|0;c[j>>2]=1;d=j+4|0;c[d>>2]=0;s=j+8|0;c[s>>2]=0;c[k>>2]=1;y=k+4|0;c[y>>2]=0;z=k+8|0;c[z>>2]=0;c[n>>2]=1;A=n+4|0;c[A>>2]=0;B=n+8|0;c[B>>2]=0;ET(m|0,0,1536)|0;if(v){C=c[w>>2]|0;D=v;while(1){v=D+-1|0;if(!v){t=13;break}E=c[C+(v<<2)>>2]|0;if(!E)D=v;else{F=v;G=E;break}}if((t|0)==13){F=0;G=c[C>>2]|0}if((G|0)>-1){C=-2147483648;D=0;while(1){C=C>>>1;E=D+1|0;if(!(E>>>0<32&(C&G|0)==0)){H=E;break}else D=E}}else H=0;D=(F<<5)+32-H|0;if(D>>>0<=671)if(D>>>0<=239)if(D>>>0>79)I=4;else{J=D>>>0>23?3:1;t=20}else I=5;else I=6}else{J=1;t=20}if((t|0)==20)I=J;J=p+1|0;a:do if(J>>>0<=1e4){p=a+4|0;D=c[p>>2]|0;do if(D>>>0<J>>>0){H=DE(J,4)|0;if(!H){K=-16;L=0;M=0;N=0;break a}F=a+8|0;G=c[F>>2]|0;if(!G){c[p>>2]=J;c[F>>2]=H;P=m+12|0;Q=0;break}CT(H|0,G|0,D<<2|0)|0;if(D|0){C=D;E=G;while(1){C=C+-1|0;c[E>>2]=0;if(!C)break;else E=E+4|0}}CE(G);c[p>>2]=J;c[F>>2]=H;P=m+12|0;Q=c[m+16>>2]|0}else{P=m+12|0;Q=0}while(0);p=m+16|0;if(Q>>>0<J>>>0){D=DE(J,4)|0;if(!D){K=-16;L=0;M=0;N=0;break}c[p>>2]=J;c[m+20>>2]=D}D=J<<1;if(D>>>0<=1e4){if(!D){R=0;S=0;T=0}else{p=DE(D,4)|0;if(!p){K=-16;L=0;M=0;N=0;break}c[y>>2]=D;c[z>>2]=p;R=D;S=p;T=p}p=(c[b>>2]|0)==-1;if(p){D=vv(n,b)|0;if(D|0){K=D;L=T;M=R;N=S;break}c[n>>2]=1;U=n}else U=b;D=(f|0)==0;if(!D?(c[f+8>>2]|0)!=0:0){c[j>>2]=c[f>>2];c[j+4>>2]=c[f+4>>2];c[j+8>>2]=c[f+8>>2]}else{E=c[d>>2]|0;if(!E){C=DE(1,4)|0;if(!C){K=-16;L=T;M=R;N=S;break}v=c[s>>2]|0;if(v|0)CE(v);c[d>>2]=1;c[s>>2]=C;V=C;W=4}else{V=c[s>>2]|0;W=E<<2}ET(V|0,0,W|0)|0;c[c[s>>2]>>2]=1;c[j>>2]=1;E=Pv(j,c[o>>2]<<6)|0;if(E|0){K=E;L=T;M=R;N=S;break}E=Vv(j,j,e)|0;if(E|0){K=E;L=T;M=R;N=S;break}if(!D){c[f>>2]=c[j>>2];c[f+4>>2]=c[j+4>>2];c[f+8>>2]=c[j+8>>2]}}D=U+8|0;E=c[U+4>>2]|0;while(1){if(!E){X=0;break}C=E+-1|0;if(!(c[(c[D>>2]|0)+(C<<2)>>2]|0))E=C;else{X=E;break}}E=c[o>>2]|0;while(1){if(!E){Y=0;break}C=E+-1|0;if(!(c[(c[q>>2]|0)+(C<<2)>>2]|0))E=C;else{Y=E;break}}b:do if(Y|X){c:do if(X>>>0<=Y>>>0){if(Y>>>0>X>>>0){Z=0-(c[e>>2]|0)|0;t=70;break}E=c[U>>2]|0;C=c[e>>2]|0;if((E|0)>0&(C|0)<0){t=71;break b}if(!((E|0)<0&(C|0)>0)){C=X;do{if(!C){t=71;break b}C=C+-1|0;v=c[(c[D>>2]|0)+(C<<2)>>2]|0;_=c[(c[q>>2]|0)+(C<<2)>>2]|0;if(v>>>0>_>>>0){Z=E;t=70;break c}}while(v>>>0>=_>>>0);Z=0-E|0;t=70}}else{Z=c[U>>2]|0;t=70}while(0);if((t|0)==70?(Z|0)>-1:0){t=71;break}H=vv(P,U)|0;if(H|0){K=H;L=T;M=R;N=S;break a}}else t=71;while(0);if((t|0)==71?(D=Vv(P,U,e)|0,D|0):0){K=D;L=T;M=R;N=S;break}D=Xv(P,j,e,x,k)|0;if(!D){H=vv(a,j)|0;if(!H){c[h>>2]=1;c[i>>2]=1;c[i+4>>2]=1;c[i+8>>2]=h;F=Xv(a,i,e,x,k)|0;if(!F){d:do if(I>>>0>1){G=I+-1|0;C=1<<G;_=m+(C*12|0)|0;v=(c[o>>2]|0)+1|0;if(v>>>0>1e4){K=-16;L=T;M=R;N=S;break a}$=m+(C*12|0)+4|0;aa=c[$>>2]|0;if(aa>>>0<v>>>0){ba=DE(v,4)|0;if(!ba){K=-16;L=T;M=R;N=S;break a}ca=m+(C*12|0)+8|0;da=c[ca>>2]|0;if(da|0){CT(ba|0,da|0,aa<<2|0)|0;if(aa|0){ea=aa;aa=da;while(1){ea=ea+-1|0;c[aa>>2]=0;if(!ea)break;else aa=aa+4|0}}CE(da)}c[$>>2]=v;c[ca>>2]=ba}aa=vv(_,P)|0;if(aa|0){K=aa;L=T;M=R;N=S;break a}if(G|0){aa=0;do{ea=Xv(_,_,e,x,k)|0;aa=aa+1|0;if(ea|0){K=ea;L=T;M=R;N=S;break a}}while(aa>>>0<G>>>0)}G=1<<I;aa=C;while(1){_=aa;aa=aa+1|0;if(aa>>>0>=G>>>0)break d;ba=m+(aa*12|0)|0;ca=(c[o>>2]|0)+1|0;if(ca>>>0>1e4){K=-16;L=T;M=R;N=S;break a}v=m+(aa*12|0)+4|0;$=c[v>>2]|0;if($>>>0<ca>>>0){da=DE(ca,4)|0;if(!da){K=-16;L=T;M=R;N=S;break a}ea=m+(aa*12|0)+8|0;fa=c[ea>>2]|0;if(fa|0){CT(da|0,fa|0,$<<2|0)|0;if($|0){ga=$;$=fa;while(1){ga=ga+-1|0;c[$>>2]=0;if(!ga)break;else $=$+4|0}}CE(fa)}c[v>>2]=ca;c[ea>>2]=da}$=vv(ba,m+(_*12|0)|0)|0;if($|0){K=$;L=T;M=R;N=S;break a}$=Xv(ba,P,e,x,k)|0;if($|0){K=$;L=T;M=R;N=S;break a}}}while(0);aa=0;G=0;C=0;$=c[r>>2]|0;ga=0;e:while(1){E=aa;ha=C;ia=$;while(1){ja=ha;ka=ia;while(1){if(!ja){if(!ka)break e;la=32;ma=ka+-1|0}else{la=ja;ma=ka}ja=la+-1|0;na=(c[(c[w>>2]|0)+(ma<<2)>>2]|0)>>>ja&1;if(na|E|0)break;else ka=ma}if(!((E|0)==1&(na|0)==0))break;ka=Xv(a,a,e,x,k)|0;if(!ka){E=1;ha=ja;ia=ma}else{K=ka;L=T;M=R;N=S;break a}}ia=G+1|0;ha=na<<I-ia|ga;if((I|0)==(ia|0))oa=0;else{aa=2;G=ia;C=ja;$=ma;ga=ha;continue}do{ia=Xv(a,a,e,x,k)|0;oa=oa+1|0;if(ia|0){K=ia;L=T;M=R;N=S;break a}}while(oa>>>0<I>>>0);ia=Xv(a,m+(ha*12|0)|0,e,x,k)|0;if(!ia){aa=1;G=0;C=ja;$=ma;ga=0}else{K=ia;L=T;M=R;N=S;break a}}if(G|0){$=1<<I;C=ga;aa=0;do{ia=Xv(a,a,e,x,k)|0;if(ia|0){K=ia;L=T;M=R;N=S;break a}C=C<<1;if(C&$|0?(ia=Xv(a,P,e,x,k)|0,ia|0):0){K=ia;L=T;M=R;N=S;break a}aa=aa+1|0}while(aa>>>0<G>>>0)}c[h>>2]=1;c[i>>2]=1;c[i+4>>2]=1;c[i+8>>2]=h;G=Xv(a,i,e,x,k)|0;if(p&(G|0)==0){c[a>>2]=-1;K=Hv(a,e,a)|0;L=T;M=R;N=S}else{K=G;L=T;M=R;N=S}}else{K=F;L=T;M=R;N=S}}else{K=H;L=T;M=R;N=S}}else{K=D;L=T;M=R;N=S}}else{K=-16;L=0;M=0;N=0}}else{K=-16;L=0;M=0;N=0}while(0);S=1<<I+-1;R=1<<I;if(S>>>0<R>>>0){I=S;do{S=m+(I*12|0)+8|0;T=c[S>>2]|0;a=m+(I*12|0)+4|0;if(T|0){e=c[a>>2]|0;if(e|0){x=e;e=T;while(1){x=x+-1|0;c[e>>2]=0;if(!x)break;else e=e+4|0}}CE(T)}c[m+(I*12|0)>>2]=1;c[a>>2]=0;c[S>>2]=0;I=I+1|0}while((I|0)!=(R|0))}R=m+20|0;I=c[R>>2]|0;e=m+16|0;if(I|0){x=c[e>>2]|0;if(x|0){D=x;x=I;while(1){D=D+-1|0;c[x>>2]=0;if(!D)break;else x=x+4|0}}CE(I)}c[m+12>>2]=1;c[e>>2]=0;c[R>>2]=0;if(L|0){if(M|0){R=M;M=L;while(1){R=R+-1|0;c[M>>2]=0;if(!R)break;else M=M+4|0}}CE(N)}c[k>>2]=1;c[y>>2]=0;c[z>>2]=0;z=c[B>>2]|0;if(z|0){y=c[A>>2]|0;if(y|0){k=y;y=z;while(1){k=k+-1|0;c[y>>2]=0;if(!k)break;else y=y+4|0}}CE(z)}c[n>>2]=1;c[A>>2]=0;c[B>>2]=0;if(f|0?c[f+8>>2]|0:0){u=K;l=g;return u|0}f=c[s>>2]|0;if(f|0){B=c[d>>2]|0;if(B|0){A=B;B=f;while(1){A=A+-1|0;c[B>>2]=0;if(!A)break;else B=B+4|0}}CE(f)}c[j>>2]=1;c[d>>2]=0;c[s>>2]=0;u=K;l=g;return u|0}function Xv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;g=c[f+4>>2]|0;h=d+4|0;if(g>>>0<((c[h>>2]|0)+1|0)>>>0){i=-4;return i|0}j=f+8|0;f=c[j>>2]|0;if(!f){i=-4;return i|0}ET(f|0,0,g<<2|0)|0;g=c[j>>2]|0;f=c[h>>2]|0;k=c[b+4>>2]|0;l=k>>>0<f>>>0?k:f;k=(f|0)==0;m=a+8|0;n=c[m>>2]|0;if(k){o=g;p=n}else{q=b+8|0;b=d+8|0;r=f+1|0;s=0;t=g;u=n;do{n=c[u+(s<<2)>>2]|0;v=c[q>>2]|0;w=O((O(c[v>>2]|0,n)|0)+(c[t>>2]|0)|0,e)|0;Lv(l,v,t,n);Lv(f,c[b>>2]|0,t,w);c[t>>2]=n;t=t+4|0;c[t+(r<<2)>>2]=0;s=s+1|0;u=c[m>>2]|0}while((s|0)!=(f|0));o=g+(f<<2)|0;p=u}CT(p|0,o|0,(f<<2)+4|0)|0;o=c[a+4>>2]|0;while(1){if(!o){x=0;break}a=o+-1|0;if(!(c[(c[m>>2]|0)+(a<<2)>>2]|0))o=a;else{x=o;break}}o=d+8|0;d=c[h>>2]|0;while(1){if(!d){y=0;break}h=d+-1|0;if(!(c[(c[o>>2]|0)+(h<<2)>>2]|0))d=h;else{y=d;break}}a:do if(!(x>>>0>y>>>0|(y|x|0)==0)){if(y>>>0>x>>>0)z=c[m>>2]|0;else{d=x;while(1){if(!d)break a;h=c[m>>2]|0;d=d+-1|0;a=c[h+(d<<2)>>2]|0;p=c[(c[o>>2]|0)+(d<<2)>>2]|0;if(a>>>0>p>>>0)break a;if(a>>>0<p>>>0){z=h;break}}}d=c[j>>2]|0;if(k){i=0;return i|0}else{A=0;B=d;C=z;D=0}while(1){h=c[B>>2]|0;p=h-D|0;c[B>>2]=p;a=c[C>>2]|0;D=(p>>>0<a>>>0&1)+(h>>>0<D>>>0&1)|0;c[B>>2]=p-a;A=A+1|0;if((A|0)==(f|0))break;else{B=B+4|0;C=C+4|0}}if(!D){i=0;return i|0}a=d+(f<<2)|0;p=D;while(1){h=c[a>>2]|0;u=h>>>0<p>>>0;c[a>>2]=h-p;if(u){a=a+4|0;p=u&1}else{i=0;break}}return i|0}while(0);D=c[m>>2]|0;if(k){i=0;return i|0}k=0;m=D;C=c[o>>2]|0;o=0;while(1){B=c[m>>2]|0;A=B-o|0;c[m>>2]=A;z=c[C>>2]|0;o=(A>>>0<z>>>0&1)+(B>>>0<o>>>0&1)|0;c[m>>2]=A-z;k=k+1|0;if((k|0)==(f|0))break;else{m=m+4|0;C=C+4|0}}if(!o){i=0;return i|0}C=D+(f<<2)|0;f=o;while(1){o=c[C>>2]|0;D=o>>>0<f>>>0;c[C>>2]=o-f;if(D){C=C+4|0;f=D&1}else{i=0;break}}return i|0}\nfunction Mj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;if(!(a&1)?(o=0,a=Z(209,12)|0,f=o,o=0,!(f&1)):0){c[a>>2]=0;f=a+4|0;c[f>>2]=0;e=a+8|0;c[e>>2]=0;b=d+4|0;g=(c[b>>2]|0)-(c[d>>2]|0)|0;if(!g)return a|0;if((g|0)>=0){o=0;h=Z(209,g|0)|0;i=o;o=0;if(!(i&1)){c[f>>2]=h;c[a>>2]=h;c[e>>2]=h+g;g=c[d>>2]|0;d=(c[b>>2]|0)-g|0;if((d|0)<=0)return a|0;CT(h|0,g|0,d|0)|0;c[f>>2]=h+d;return a|0}}else{o=0;la(271,a|0);o=0}d=Qa(7040)|0;h=z;g=c[a>>2]|0;if(g|0){if((c[f>>2]|0)!=(g|0))c[f>>2]=g;mR(g)}mR(a);j=h;k=d}else{d=Qa(7040)|0;j=z;k=d}if((j|0)!=(Xb(7040)|0)){l=k;m=j;$a(l|0)}j=Ka(k|0)|0;o=0;la(273,j|0);o=0;j=Pa()|0;k=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}l=j;m=k;$a(l|0);return 0}function Nj(a){a=a|0;return 1600}function Oj(a){a=a|0;if(!a)return;os(a+48|0);os(a+24|0);os(a);mR(a);return}function Pj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;d=l;l=l+96|0;e=d+72|0;f=d+48|0;g=d+24|0;h=d+12|0;i=d;j=kR(72)|0;c[e>>2]=c[a>>2];k=a+4|0;c[e+4>>2]=c[k>>2];m=a+8|0;c[e+8>>2]=c[m>>2];c[m>>2]=0;c[k>>2]=0;c[a>>2]=0;k=a+12|0;c[e+12>>2]=c[k>>2];m=a+16|0;c[e+16>>2]=c[m>>2];n=a+20|0;c[e+20>>2]=c[n>>2];c[n>>2]=0;c[m>>2]=0;c[k>>2]=0;c[f>>2]=c[b>>2];k=b+4|0;c[f+4>>2]=c[k>>2];m=b+8|0;c[f+8>>2]=c[m>>2];c[m>>2]=0;c[k>>2]=0;c[b>>2]=0;k=b+12|0;c[f+12>>2]=c[k>>2];m=b+16|0;c[f+16>>2]=c[m>>2];n=b+20|0;c[f+20>>2]=c[n>>2];c[n>>2]=0;c[m>>2]=0;c[k>>2]=0;c[h>>2]=0;k=h+4|0;c[k>>2]=0;c[h+8>>2]=0;c[i>>2]=0;m=i+4|0;c[m>>2]=0;c[i+8>>2]=0;o=0;na(68,g|0,h|0,i|0);n=o;o=0;do if(n&1){b=Pa()|0;p=z;q=b}else{o=0;oa(36,j|0,e|0,f|0,g|0);b=o;o=0;if(b&1){b=Pa()|0;a=z;os(g);p=a;q=b;break}os(g);b=c[i>>2]|0;if(b|0){if((c[m>>2]|0)!=(b|0))c[m>>2]=b;mR(b)}b=c[h>>2]|0;if(!b){os(f);os(e);l=d;return j|0}if((c[k>>2]|0)!=(b|0))c[k>>2]=b;mR(b);os(f);os(e);l=d;return j|0}while(0);d=c[i>>2]|0;if(d|0){if((c[m>>2]|0)!=(d|0))c[m>>2]=d;mR(d)}d=c[h>>2]|0;if(!d){os(f);os(e);mR(j);$a(q|0)}if((c[k>>2]|0)!=(d|0))c[k>>2]=d;mR(d);os(f);os(e);mR(j);$a(q|0);return 0}function Qj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;d=l;l=l+48|0;e=d+24|0;f=d;o=0;ma(141,e|0,b|0);b=o;o=0;if(b&1){b=Qa(7040)|0;g=b;h=z}else{o=0;ma(141,f|0,c|0);c=o;o=0;do if(!(c&1)){o=0;b=_(a|0,e|0,f|0)|0;i=o;o=0;if(i&1){i=Qa(7040)|0;j=z;os(f);k=i;m=j;break}else{os(f);os(e);l=d;return b|0}}else{b=Qa(7040)|0;k=b;m=z}while(0);os(e);g=k;h=m}if((h|0)!=(Xb(7040)|0)){n=g;p=h;$a(n|0)}h=Ka(g|0)|0;o=0;la(273,h|0);o=0;h=Pa()|0;g=z;o=0;ka(3);m=o;o=0;if(m&1){m=Qa(0)|0;Id(m)}n=h;p=g;$a(n|0);return 0}function Rj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;e=l;l=l+80|0;f=e+48|0;g=e+24|0;h=e;i=kR(72)|0;c[f>>2]=c[a>>2];j=a+4|0;c[f+4>>2]=c[j>>2];k=a+8|0;c[f+8>>2]=c[k>>2];c[k>>2]=0;c[j>>2]=0;c[a>>2]=0;j=a+12|0;c[f+12>>2]=c[j>>2];k=a+16|0;c[f+16>>2]=c[k>>2];m=a+20|0;c[f+20>>2]=c[m>>2];c[m>>2]=0;c[k>>2]=0;c[j>>2]=0;c[g>>2]=c[b>>2];j=b+4|0;c[g+4>>2]=c[j>>2];k=b+8|0;c[g+8>>2]=c[k>>2];c[k>>2]=0;c[j>>2]=0;c[b>>2]=0;j=b+12|0;c[g+12>>2]=c[j>>2];k=b+16|0;c[g+16>>2]=c[k>>2];m=b+20|0;c[g+20>>2]=c[m>>2];c[m>>2]=0;c[k>>2]=0;c[j>>2]=0;c[h>>2]=c[d>>2];j=d+4|0;c[h+4>>2]=c[j>>2];k=d+8|0;c[h+8>>2]=c[k>>2];c[k>>2]=0;c[j>>2]=0;c[d>>2]=0;j=d+12|0;c[h+12>>2]=c[j>>2];k=d+16|0;c[h+16>>2]=c[k>>2];m=d+20|0;c[h+20>>2]=c[m>>2];c[m>>2]=0;c[k>>2]=0;c[j>>2]=0;o=0;oa(36,i|0,f|0,g|0,h|0);j=o;o=0;if(j&1){j=Pa()|0;os(h);os(g);os(f);mR(i);$a(j|0)}else{os(h);os(g);os(f);l=e;return i|0}return 0}function Sj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;e=l;l=l+80|0;f=e+48|0;g=e+24|0;h=e;o=0;ma(141,f|0,b|0);b=o;o=0;if(b&1){b=Qa(7040)|0;i=b;j=z}else{o=0;ma(141,g|0,c|0);c=o;o=0;if(c&1){c=Qa(7040)|0;k=c;m=z}else{o=0;ma(141,h|0,d|0);d=o;o=0;do if(!(d&1)){o=0;c=$(a|0,f|0,g|0,h|0)|0;b=o;o=0;if(b&1){b=Qa(7040)|0;n=z;os(h);p=b;q=n;break}else{os(h);os(g);os(f);l=e;return c|0}}else{c=Qa(7040)|0;p=c;q=z}while(0);os(g);k=p;m=q}os(f);i=k;j=m}if((j|0)!=(Xb(7040)|0)){r=i;s=j;$a(r|0)}j=Ka(i|0)|0;o=0;la(273,j|0);o=0;j=Pa()|0;i=z;o=0;ka(3);m=o;o=0;if(m&1){m=Qa(0)|0;Id(m)}r=j;s=i;$a(r|0);return 0}function Tj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[a>>2]|0)+d>>2]|0;o=0;d=Z(f|0,a|0)|0;a=o;o=0;do if(!(a&1)?(o=0,f=Z(209,24)|0,e=o,o=0,!(e&1)):0){o=0;ma(141,f|0,d|0);e=o;o=0;if(e&1){e=Qa(7040)|0;b=z;mR(f);g=b;h=e;break}else return f|0}else i=3;while(0);if((i|0)==3){i=Qa(7040)|0;g=z;h=i}if((g|0)!=(Xb(7040)|0)){j=h;k=g;$a(j|0)}g=Ka(h|0)|0;o=0;la(273,g|0);o=0;g=Pa()|0;h=z;o=0;ka(3);i=o;o=0;if(i&1){i=Qa(0)|0;Id(i)}j=g;k=h;$a(j|0);return 0}function Uj(a){a=a|0;return 1640}function Vj(a){a=a|0;if(!a)return;Wj(a);mR(a);return}function Wj(a){a=a|0;var b=0,d=0;b=c[a+64>>2]|0;if(b|0){d=a+68|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+52>>2]|0;if(b|0){d=a+56|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+40>>2]|0;if(b|0){d=a+44|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+28>>2]|0;if(b|0){d=a+32|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+24>>2]|0;if(b|0)hR(b);b=c[a+16>>2]|0;if(b|0)hR(b);b=c[a+8>>2]|0;if(b|0)hR(b);b=c[a>>2]|0;c[a>>2]=0;if(!b)return;rd[c[(c[b>>2]|0)+12>>2]&511](b);return}function Xj(){var a=0,b=0;a=kR(76)|0;o=0;la(278,a|0);b=o;o=0;if(b&1){b=Pa()|0;mR(a);$a(b|0)}else return a|0;return 0}function Yj(a){a=a|0;var b=0,c=0,d=0,e=0;o=0;b=Y(a|0)|0;a=o;o=0;if(!(a&1))return b|0;b=Qa(7040)|0;a=z;if((a|0)!=(Xb(7040)|0)){c=b;d=a;$a(c|0)}a=Ka(b|0)|0;o=0;la(273,a|0);o=0;a=Pa()|0;b=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}c=a;d=b;$a(c|0);return 0}function Zj(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;g=l;l=l+48|0;h=g;i=c[a>>2]|0;j=c[a+4>>2]|0;a=b+(j>>1)|0;if(!(j&1))k=i;else k=c[(c[a>>2]|0)+i>>2]|0;o=0;pa(k|0,h|0,a|0,d|0,e|0,f|0);f=o;o=0;if(!(f&1)){o=0;f=Z(209,48)|0;e=o;o=0;if(!(e&1)){c[f>>2]=c[h>>2];e=h+4|0;c[f+4>>2]=c[e>>2];d=h+8|0;c[f+8>>2]=c[d>>2];c[d>>2]=0;c[e>>2]=0;c[h>>2]=0;e=h+12|0;c[f+12>>2]=c[e>>2];d=h+16|0;c[f+16>>2]=c[d>>2];a=h+20|0;c[f+20>>2]=c[a>>2];c[a>>2]=0;c[d>>2]=0;c[e>>2]=0;e=h+24|0;c[f+24>>2]=c[e>>2];d=h+28|0;c[f+28>>2]=c[d>>2];a=h+32|0;c[f+32>>2]=c[a>>2];c[a>>2]=0;c[d>>2]=0;c[e>>2]=0;c[f+36>>2]=c[h+36>>2];c[f+40>>2]=c[h+40>>2];c[f+44>>2]=c[h+44>>2];l=g;return f|0}f=Qa(7040)|0;g=z;e=c[h+36>>2]|0;if(e|0){d=h+40|0;if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e)}e=c[h+24>>2]|0;if(e|0){d=h+28|0;if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e)}e=c[h+12>>2]|0;if(e|0){d=h+16|0;if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e)}e=c[h>>2]|0;if(!e){m=f;n=g}else{d=h+4|0;if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e);m=f;n=g}}else{g=Qa(7040)|0;m=g;n=z}if((n|0)!=(Xb(7040)|0)){p=m;q=n;$a(p|0)}n=Ka(m|0)|0;o=0;la(273,n|0);o=0;n=Pa()|0;m=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}p=n;q=m;$a(p|0);return 0}function _j(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;g=l;l=l+48|0;h=g;i=c[a>>2]|0;j=c[a+4>>2]|0;a=b+(j>>1)|0;if(!(j&1))k=i;else k=c[(c[a>>2]|0)+i>>2]|0;o=0;pa(k|0,h|0,a|0,d|0,e|0,f|0);f=o;o=0;if(!(f&1)){o=0;f=Z(209,48)|0;e=o;o=0;if(!(e&1)){c[f>>2]=c[h>>2];e=h+4|0;c[f+4>>2]=c[e>>2];d=h+8|0;c[f+8>>2]=c[d>>2];c[d>>2]=0;c[e>>2]=0;c[h>>2]=0;e=h+12|0;c[f+12>>2]=c[e>>2];d=h+16|0;c[f+16>>2]=c[d>>2];a=h+20|0;c[f+20>>2]=c[a>>2];c[a>>2]=0;c[d>>2]=0;c[e>>2]=0;e=h+24|0;c[f+24>>2]=c[e>>2];d=h+28|0;c[f+28>>2]=c[d>>2];a=h+32|0;c[f+32>>2]=c[a>>2];c[a>>2]=0;c[d>>2]=0;c[e>>2]=0;c[f+36>>2]=c[h+36>>2];c[f+40>>2]=c[h+40>>2];c[f+44>>2]=c[h+44>>2];l=g;return f|0}f=Qa(7040)|0;g=z;e=c[h+36>>2]|0;if(e|0){d=h+40|0;if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e)}e=c[h+24>>2]|0;if(e|0){d=h+28|0;if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e)}e=c[h+12>>2]|0;if(e|0){d=h+16|0;if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e)}e=c[h>>2]|0;if(!e){m=f;n=g}else{d=h+4|0;if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e);m=f;n=g}}else{g=Qa(7040)|0;m=g;n=z}if((n|0)!=(Xb(7040)|0)){p=m;q=n;$a(p|0)}n=Ka(m|0)|0;o=0;la(273,n|0);o=0;n=Pa()|0;m=z;o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}p=n;q=m;$a(p|0);return 0}function $j(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+48|0;f=e;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[a>>2]|0)+g>>2]|0;o=0;na(i|0,f|0,a|0,d|0);d=o;o=0;if(!(d&1)){o=0;d=Z(209,36)|0;a=o;o=0;if(!(a&1)){c[d>>2]=c[f>>2];a=f+4|0;c[d+4>>2]=c[a>>2];i=f+8|0;c[d+8>>2]=c[i>>2];c[i>>2]=0;c[a>>2]=0;c[f>>2]=0;a=f+12|0;c[d+12>>2]=c[a>>2];i=f+16|0;c[d+16>>2]=c[i>>2];g=f+20|0;c[d+20>>2]=c[g>>2];c[g>>2]=0;c[i>>2]=0;c[a>>2]=0;c[d+24>>2]=c[f+24>>2];c[d+28>>2]=c[f+28>>2];c[d+32>>2]=c[f+32>>2];l=e;return d|0}d=Qa(7040)|0;e=z;a=c[f+24>>2]|0;if(a|0){i=f+28|0;if((c[i>>2]|0)!=(a|0))c[i>>2]=a;mR(a)}a=c[f+12>>2]|0;if(a|0){i=f+16|0;if((c[i>>2]|0)!=(a|0))c[i>>2]=a;mR(a)}a=c[f>>2]|0;if(!a){j=d;k=e}else{i=f+4|0;if((c[i>>2]|0)!=(a|0))c[i>>2]=a;mR(a);j=d;k=e}}else{e=Qa(7040)|0;j=e;k=z}if((k|0)!=(Xb(7040)|0)){m=j;n=k;$a(m|0)}k=Ka(j|0)|0;o=0;la(273,k|0);o=0;k=Pa()|0;j=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}m=k;n=j;$a(m|0);return 0}function ak(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+16|0;f=e;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[a>>2]|0)+g>>2]|0;o=0;na(i|0,f|0,a|0,d|0);d=o;o=0;if(!(d&1)){o=0;d=Z(209,12)|0;a=o;o=0;if(!(a&1)){c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];l=e;return d|0}d=Qa(7040)|0;e=z;a=c[f>>2]|0;if(!a){j=d;k=e}else{i=f+4|0;if((c[i>>2]|0)!=(a|0))c[i>>2]=a;mR(a);j=d;k=e}}else{e=Qa(7040)|0;j=e;k=z}if((k|0)!=(Xb(7040)|0)){m=j;n=k;$a(m|0)}k=Ka(j|0)|0;o=0;la(273,k|0);o=0;k=Pa()|0;j=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}m=k;n=j;$a(m|0);return 0}function bk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;d=l;l=l+48|0;e=d;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;o=0;ma(h|0,e|0,a|0);a=o;o=0;if(!(a&1)){o=0;a=Z(209,48)|0;h=o;o=0;if(!(h&1)){c[a>>2]=c[e>>2];h=e+4|0;c[a+4>>2]=c[h>>2];f=e+8|0;c[a+8>>2]=c[f>>2];c[f>>2]=0;c[h>>2]=0;c[e>>2]=0;h=e+12|0;c[a+12>>2]=c[h>>2];f=e+16|0;c[a+16>>2]=c[f>>2];g=e+20|0;c[a+20>>2]=c[g>>2];c[g>>2]=0;c[f>>2]=0;c[h>>2]=0;h=e+24|0;c[a+24>>2]=c[h>>2];f=e+28|0;c[a+28>>2]=c[f>>2];g=e+32|0;c[a+32>>2]=c[g>>2];c[g>>2]=0;c[f>>2]=0;c[h>>2]=0;c[a+36>>2]=c[e+36>>2];c[a+40>>2]=c[e+40>>2];c[a+44>>2]=c[e+44>>2];l=d;return a|0}a=Qa(7040)|0;d=z;h=c[e+36>>2]|0;if(h|0){f=e+40|0;if((c[f>>2]|0)!=(h|0))c[f>>2]=h;mR(h)}h=c[e+24>>2]|0;if(h|0){f=e+28|0;if((c[f>>2]|0)!=(h|0))c[f>>2]=h;mR(h)}h=c[e+12>>2]|0;if(h|0){f=e+16|0;if((c[f>>2]|0)!=(h|0))c[f>>2]=h;mR(h)}h=c[e>>2]|0;if(!h){i=a;j=d}else{f=e+4|0;if((c[f>>2]|0)!=(h|0))c[f>>2]=h;mR(h);i=a;j=d}}else{d=Qa(7040)|0;i=d;j=z}if((j|0)!=(Xb(7040)|0)){k=i;m=j;$a(k|0)}j=Ka(i|0)|0;o=0;la(273,j|0);o=0;j=Pa()|0;i=z;o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}k=j;m=i;$a(k|0);return 0}function ck(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;e=l;l=l+48|0;f=e;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))i=g;else i=c[(c[a>>2]|0)+g>>2]|0;o=0;ma(142,f|0,d|0);d=o;o=0;do if(d&1){g=Qa(7040)|0;j=g;k=z}else{o=0;ma(i|0,a|0,f|0);g=o;o=0;if(g&1){g=Qa(7040)|0;h=z;b=c[f+36>>2]|0;if(b|0){m=f+40|0;if((c[m>>2]|0)!=(b|0))c[m>>2]=b;mR(b)}b=c[f+24>>2]|0;if(b|0){m=f+28|0;if((c[m>>2]|0)!=(b|0))c[m>>2]=b;mR(b)}b=c[f+12>>2]|0;if(b|0){m=f+16|0;if((c[m>>2]|0)!=(b|0))c[m>>2]=b;mR(b)}b=c[f>>2]|0;if(!b){j=g;k=h;break}m=f+4|0;if((c[m>>2]|0)!=(b|0))c[m>>2]=b;mR(b);j=g;k=h;break}h=c[f+36>>2]|0;if(h|0){g=f+40|0;if((c[g>>2]|0)!=(h|0))c[g>>2]=h;mR(h)}h=c[f+24>>2]|0;if(h|0){g=f+28|0;if((c[g>>2]|0)!=(h|0))c[g>>2]=h;mR(h)}h=c[f+12>>2]|0;if(h|0){g=f+16|0;if((c[g>>2]|0)!=(h|0))c[g>>2]=h;mR(h)}h=c[f>>2]|0;if(!h){l=e;return}g=f+4|0;if((c[g>>2]|0)!=(h|0))c[g>>2]=h;mR(h);l=e;return}while(0);if((k|0)!=(Xb(7040)|0)){n=j;p=k;$a(n|0)}k=Ka(j|0)|0;o=0;la(273,k|0);o=0;k=Pa()|0;j=z;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}n=k;p=j;$a(n|0)}function dk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0;c[a>>2]=0;d=a+4|0;c[d>>2]=0;c[a+8>>2]=0;e=b+4|0;f=(c[e>>2]|0)-(c[b>>2]|0)|0;do if(f|0){if((f|0)>=0){o=0;g=Z(209,f|0)|0;h=o;o=0;if(!(h&1)){c[d>>2]=g;c[a>>2]=g;c[a+8>>2]=g+f;h=c[b>>2]|0;i=(c[e>>2]|0)-h|0;if((i|0)<=0)break;CT(g|0,h|0,i|0)|0;c[d>>2]=g+i;break}}else{o=0;la(271,a|0);o=0}i=Pa()|0;g=c[a>>2]|0;if(!g)$a(i|0);if((c[d>>2]|0)!=(g|0))c[d>>2]=g;mR(g);$a(i|0)}while(0);e=a+12|0;f=b+12|0;c[e>>2]=0;i=a+16|0;c[i>>2]=0;c[a+20>>2]=0;g=b+16|0;h=(c[g>>2]|0)-(c[f>>2]|0)|0;do if(!h)j=22;else{if((h|0)>=0){o=0;k=Z(209,h|0)|0;l=o;o=0;if(!(l&1)){c[i>>2]=k;c[e>>2]=k;c[a+20>>2]=k+h;l=c[f>>2]|0;m=(c[g>>2]|0)-l|0;if((m|0)<=0){j=22;break}CT(k|0,l|0,m|0)|0;c[i>>2]=k+m;j=22;break}}else{o=0;la(271,e|0);o=0}m=Pa()|0;k=z;l=c[e>>2]|0;if(l|0){if((c[i>>2]|0)!=(l|0))c[i>>2]=l;mR(l)}n=k;p=m}while(0);if((j|0)==22){g=a+24|0;f=b+24|0;c[g>>2]=0;h=a+28|0;c[h>>2]=0;c[a+32>>2]=0;m=b+28|0;k=(c[m>>2]|0)-(c[f>>2]|0)|0;do if(!k)j=32;else{if((k|0)>=0){o=0;l=Z(209,k|0)|0;q=o;o=0;if(!(q&1)){c[h>>2]=l;c[g>>2]=l;c[a+32>>2]=l+k;q=c[f>>2]|0;r=(c[m>>2]|0)-q|0;if((r|0)<=0){j=32;break}CT(l|0,q|0,r|0)|0;c[h>>2]=l+r;j=32;break}}else{o=0;la(271,g|0);o=0}r=Pa()|0;l=z;q=c[g>>2]|0;if(q|0){if((c[h>>2]|0)!=(q|0))c[h>>2]=q;mR(q)}s=l;t=r}while(0);if((j|0)==32){j=a+36|0;m=b+36|0;c[j>>2]=0;f=a+40|0;c[f>>2]=0;c[a+44>>2]=0;k=b+40|0;b=(c[k>>2]|0)-(c[m>>2]|0)|0;if(!b)return;if((b|0)>=0){o=0;r=Z(209,b|0)|0;l=o;o=0;if(!(l&1)){c[f>>2]=r;c[j>>2]=r;c[a+44>>2]=r+b;b=c[m>>2]|0;m=(c[k>>2]|0)-b|0;if((m|0)<=0)return;CT(r|0,b|0,m|0)|0;c[f>>2]=r+m;return}}else{o=0;la(271,j|0);o=0}m=Pa()|0;r=z;b=c[j>>2]|0;if(b|0){if((c[f>>2]|0)!=(b|0))c[f>>2]=b;mR(b)}b=c[g>>2]|0;if(!b){s=r;t=m}else{if((c[h>>2]|0)!=(b|0))c[h>>2]=b;mR(b);s=r;t=m}}m=c[e>>2]|0;if(!m){n=s;p=t}else{if((c[i>>2]|0)!=(m|0))c[i>>2]=m;mR(m);n=s;p=t}}t=c[a>>2]|0;if(!t)$a(p|0);if((c[d>>2]|0)!=(t|0))c[d>>2]=t;mR(t);$a(p|0)}function ek(){Ld(0);Td(0);Ud(0);return}function fk(a){a=a|0;var b=0;c[a>>2]=9628;b=a+4|0;a=c[b>>2]|0;c[b>>2]=0;if(!a)return;sk(a);mR(a);return}function gk(a){a=a|0;var b=0,d=0;c[a>>2]=9628;b=a+4|0;d=c[b>>2]|0;c[b>>2]=0;if(!d){mR(a);return}sk(d);mR(d);mR(a);return}function hk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;f=l;l=l+32|0;g=f+8|0;h=f+4|0;i=f;j=b+4|0;if(!(Uz(c[c[j>>2]>>2]|0)|0)){b=Ja(24)|0;o=0;ma(143,b|0,14);k=o;o=0;if(k&1){k=Pa()|0;Sa(b|0);$a(k|0)}else Xa(b|0,4424,56)}c[h>>2]=0;do if((Uz(c[c[j>>2]>>2]|0)|0)==2?(b=c[c[(c[c[j>>2]>>2]|0)+4>>2]>>2]|0,(b|0)!=0):0){k=Bz(b,h,i)|0;if((k|0)<=-1){b=Ja(24)|0;m=xr()|0;o=0;na(71,b|0,k|0,m|0);m=o;o=0;if(m&1){m=Qa(0)|0;Sa(b|0);n=m}else{o=0;na(72,b|0,4424,56);o=0;b=Qa(0)|0;n=b}Ka(n|0)|0;b=fo()|0;o=0;na(71,g|0,16,b|0);b=o;o=0;if(b&1){b=Pa()|0;p=z;q=b}else{o=0;ma(144,g|0,0);o=0;b=Pa()|0;m=z;c[g>>2]=10036;k=g+12|0;if((a[k+11>>0]|0)<0)mR(c[k>>2]|0);p=m;q=b}o=0;ka(3);b=o;o=0;if(b&1){b=Qa(0)|0;Id(b)}else $a(q|0)}b=c[h>>2]|0;m=c[i>>2]|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;if(m>>>0>4294967279)vR(g);if(m>>>0<11){a[g+11>>0]=m;if(!m)r=g;else{s=g;t=24}}else{k=m+16&-16;u=kR(k)|0;c[g>>2]=u;c[g+8>>2]=k|-2147483648;c[g+4>>2]=m;s=u;t=24}if((t|0)==24){CT(s|0,b|0,m|0)|0;r=s}a[r+m>>0]=0;o=0;m=_(95,d|0,g|0)|0;b=o;o=0;if(!(b&1)){if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);v=m;break}m=Pa()|0;b=z;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);w=b;x=m;$a(x|0)}else t=32;while(0);if((t|0)==32)v=nt(d)|0;r=zz(Uz(c[c[j>>2]>>2]|0)|0,h,i)|0;if((r|0)<=-1){s=Ja(24)|0;q=xr()|0;o=0;na(71,s|0,r|0,q|0);q=o;o=0;if(q&1){q=Qa(0)|0;Sa(s|0);y=q}else{o=0;na(72,s|0,4424,56);o=0;s=Qa(0)|0;y=s}Ka(y|0)|0;y=fo()|0;o=0;na(71,g|0,16,y|0);y=o;o=0;if(y&1){y=Pa()|0;A=z;B=y}else{o=0;ma(144,g|0,0);o=0;y=Pa()|0;s=z;c[g>>2]=10036;q=g+12|0;if((a[q+11>>0]|0)<0)mR(c[q>>2]|0);A=s;B=y}o=0;ka(3);y=o;o=0;if(y&1){y=Qa(0)|0;Id(y)}else $a(B|0)}B=zz(Uz(c[c[j>>2]>>2]|0)|0,h,i)|0;if((B|0)<=-1){j=Ja(24)|0;y=xr()|0;o=0;na(71,j|0,B|0,y|0);y=o;o=0;if(y&1){y=Qa(0)|0;Sa(j|0);C=y}else{o=0;na(72,j|0,4424,56);o=0;j=Qa(0)|0;C=j}Ka(C|0)|0;C=fo()|0;o=0;na(71,g|0,16,C|0);C=o;o=0;if(C&1){C=Pa()|0;D=z;E=C}else{o=0;ma(144,g|0,0);o=0;C=Pa()|0;j=z;c[g>>2]=10036;y=g+12|0;if((a[y+11>>0]|0)<0)mR(c[y>>2]|0);D=j;E=C}o=0;ka(3);C=o;o=0;if(C&1){C=Qa(0)|0;Id(C)}else $a(E|0)}E=c[h>>2]|0;h=c[i>>2]|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;if(h>>>0>4294967279)vR(g);if(h>>>0<11){a[g+11>>0]=h;if(!h)F=g;else{G=g;t=62}}else{i=h+16&-16;C=kR(i)|0;c[g>>2]=C;c[g+8>>2]=i|-2147483648;c[g+4>>2]=h;G=C;t=62}if((t|0)==62){CT(G|0,E|0,h|0)|0;F=G}a[F+h>>0]=0;o=0;h=_(95,d|0,g|0)|0;F=o;o=0;if(F&1){F=Pa()|0;G=z;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);w=G;x=F;$a(x|0)}else{x=h+v|0;if((a[g+11>>0]|0)>=0){H=wt(d,x)|0;I=x+e|0;J=I+H|0;l=f;return J|0}mR(c[g>>2]|0);H=wt(d,x)|0;I=x+e|0;J=I+H|0;l=f;return J|0}return 0}function ik(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=l;l=l+64|0;f=e+40|0;g=e+28|0;h=e+4|0;i=e+16|0;j=e;et(d)|0;dt(g,d);o=0;ma(145,h|0,d|0);d=o;o=0;if(d&1){d=Pa()|0;k=z;m=d;n=g+11|0}else{d=c[h>>2]|0;if(d|0){p=h+4|0;if((c[p>>2]|0)!=(d|0))c[p>>2]=d;mR(d)}d=g+11|0;p=a[d>>0]|0;h=p<<24>>24<0;q=h?c[g>>2]|0:g;c[i+4>>2]=h?c[g+4>>2]|0:p&255;c[i+8>>2]=q;c[j>>2]=0;o=0;q=_(96,i|0,j|0)|0;i=o;o=0;do if(!(i&1))if((q|0)>-1){p=c[b+4>>2]|0;o=0;la(279,c[p>>2]|0);h=o;o=0;if(h&1){r=28;break}o=0;h=Z(209,8)|0;s=o;o=0;if(s&1){r=28;break}s=h;c[s>>2]=0;c[s+4>>2]=0;s=c[p>>2]|0;c[p>>2]=h;if(!s)t=h;else{mR(s);t=c[p>>2]|0}o=0;la(280,t|0);s=o;o=0;if(s&1){r=28;break}o=0;ma(146,c[p>>2]|0,c[j>>2]|0);p=o;o=0;if(p&1){r=28;break}if((a[d>>0]|0)>=0){l=e;return}mR(c[g>>2]|0);l=e;return}else{p=Ja(24)|0;s=xr()|0;o=0;na(71,p|0,q|0,s|0);s=o;o=0;if(s&1){s=Qa(0)|0;Sa(p|0);u=s}else{o=0;na(72,p|0,4424,56);o=0;p=Qa(0)|0;u=p}Ka(u|0)|0;p=fo()|0;o=0;na(71,f|0,16,p|0);p=o;o=0;if(p&1){p=Pa()|0;v=z;w=p}else{o=0;ma(144,f|0,0);o=0;p=Pa()|0;s=z;c[f>>2]=10036;h=f+12|0;if((a[h+11>>0]|0)<0)mR(c[h>>2]|0);v=s;w=p}o=0;ka(3);p=o;o=0;if(!(p&1)){x=v;y=w;break}p=Qa(0)|0;Id(p)}else r=28;while(0);if((r|0)==28){r=Pa()|0;x=z;y=r}k=x;m=y;n=d}if((a[n>>0]|0)>=0)$a(m|0);mR(c[g>>2]|0);$a(m|0)}function jk(b){b=b|0;var d=0;c[b>>2]=10036;d=b+12|0;if((a[d+11>>0]|0)>=0)return;mR(c[d>>2]|0);return}function kk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;b=Ja(32)|0;c[b>>2]=10036;d=a+4|0;e=c[d+4>>2]|0;f=b+4|0;c[f>>2]=c[d>>2];c[f+4>>2]=e;o=0;ma(147,b+12|0,a+12|0);a=o;o=0;if(a&1){a=Pa()|0;Sa(b|0);$a(a|0)}else{a=b+24|0;nH(a);c[b>>2]=9656;c[a>>2]=9676;Xa(b|0,1696,23)}}function lk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+16|0;f=e;g=Lz(d)|0;if(g|0){h=Mz(b,g)|0;a[f>>0]=a[e+12>>0]|0;mk(h,f)|0;l=e;return}e=Ja(24)|0;do switch(d|0){case 0:{h=f+4|0;g=h;c[g>>2]=0;c[g+4>>2]=0;a[f+11>>0]=4;c[f>>2]=1162760014;i=h;break}case 1:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=3;a[f>>0]=a[84083]|0;a[f+1>>0]=a[84084]|0;a[f+2>>0]=a[84085]|0;i=f+3|0;break}case 2:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=5;a[f>>0]=a[66594]|0;a[f+1>>0]=a[66595]|0;a[f+2>>0]=a[66596]|0;a[f+3>>0]=a[66597]|0;a[f+4>>0]=a[66598]|0;i=f+5|0;break}case 3:{h=f+8|0;c[h>>2]=0;a[f+11>>0]=8;g=f;c[g>>2]=1162560325;c[g+4>>2]=1212440409;i=h;break}case 4:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=5;a[f>>0]=a[84116]|0;a[f+1>>0]=a[84117]|0;a[f+2>>0]=a[84118]|0;a[f+3>>0]=a[84119]|0;a[f+4>>0]=a[84120]|0;i=f+5|0;break}case 5:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=7;a[f>>0]=a[66600]|0;a[f+1>>0]=a[66601]|0;a[f+2>>0]=a[66602]|0;a[f+3>>0]=a[66603]|0;a[f+4>>0]=a[66604]|0;a[f+5>>0]=a[66605]|0;a[f+6>>0]=a[66606]|0;i=f+7|0;break}case 6:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=10;j=f;k=66608;m=j+10|0;do{a[j>>0]=a[k>>0]|0;j=j+1|0;k=k+1|0}while((j|0)<(m|0));i=f+10|0;break}case 7:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=6;a[f>>0]=a[85102]|0;a[f+1>>0]=a[85103]|0;a[f+2>>0]=a[85104]|0;a[f+3>>0]=a[85105]|0;a[f+4>>0]=a[85106]|0;a[f+5>>0]=a[85107]|0;i=f+6|0;break}case 8:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=7;a[f>>0]=a[85109]|0;a[f+1>>0]=a[85110]|0;a[f+2>>0]=a[85111]|0;a[f+3>>0]=a[85112]|0;a[f+4>>0]=a[85113]|0;a[f+5>>0]=a[85114]|0;a[f+6>>0]=a[85115]|0;i=f+7|0;break}default:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=9;j=f;k=75512;m=j+9|0;do{a[j>>0]=a[k>>0]|0;j=j+1|0;k=k+1|0}while((j|0)<(m|0));i=f+9|0}}while(0);a[i>>0]=0;i=fo()|0;o=0;oa(37,e|0,16,i|0,f|0);i=o;o=0;if(i&1)n=1;else{o=0;na(72,e|0,4424,56);o=0;n=0}i=Pa()|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);if(!n)$a(i|0);Sa(e|0);$a(i|0)}function mk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;d=l;l=l+32|0;e=d;if((b|0)>-1){l=d;return b|0}d=Ja(24)|0;f=xr()|0;o=0;na(71,d|0,b|0,f|0);f=o;o=0;if(f&1){f=Qa(0)|0;Sa(d|0);g=f}else{o=0;na(72,d|0,4424,56);o=0;d=Qa(0)|0;g=d}Ka(g|0)|0;g=fo()|0;o=0;na(71,e|0,3,g|0);g=o;o=0;if(g&1){g=Pa()|0;h=z;i=g}else{o=0;ma(144,e|0,0);o=0;g=Pa()|0;d=z;c[e>>2]=10036;f=e+12|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);h=d;i=g}o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}else $a(i|0);return 0}function nk(b){b=b|0;var d=0;jH(b+24|0);c[b>>2]=10036;d=b+12|0;if((a[d+11>>0]|0)>=0)return;mR(c[d>>2]|0);return}function ok(b){b=b|0;var d=0;jH(b+24|0);c[b>>2]=10036;d=b+12|0;if((a[d+11>>0]|0)>=0){mR(b);return}mR(c[d>>2]|0);mR(b);return}function pk(b){b=b|0;var d=0;d=b+-24|0;jH(d+24|0);c[d>>2]=10036;b=d+12|0;if((a[b+11>>0]|0)>=0)return;mR(c[b>>2]|0);return}function qk(b){b=b|0;var d=0;d=b+-24|0;jH(d+24|0);c[d>>2]=10036;b=d+12|0;if((a[b+11>>0]|0)>=0){mR(d);return}mR(c[b>>2]|0);mR(d);return}function rk(a,b){a=a|0;b=b|0;io(a,b,fo()|0);return}function sk(a){a=a|0;var b=0,d=0,e=0;b=a+8|0;o=0;la(281,c[b>>2]|0);d=o;o=0;if(d&1){d=Qa(0)|0;e=c[b>>2]|0;c[b>>2]=0;if(!e)Id(d);mR(e);Id(d)}d=c[b>>2]|0;c[b>>2]=0;if(d|0)mR(d);d=a+4|0;o=0;la(282,c[d>>2]|0);b=o;o=0;if(b&1){b=Qa(0)|0;e=c[d>>2]|0;c[d>>2]=0;if(!e)Id(b);mR(e);Id(b)}b=c[d>>2]|0;c[d>>2]=0;if(b|0)mR(b);o=0;la(279,c[a>>2]|0);b=o;o=0;if(b&1){b=Qa(0)|0;d=c[a>>2]|0;c[a>>2]=0;if(!d)Id(b);mR(d);Id(b)}else{b=c[a>>2]|0;c[a>>2]=0;if(!b)return;mR(b);return}}function tk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=a+48|0;if((c[e>>2]|0)>>>0<d>>>0){f=-1;return f|0}CT(b|0,a|0,d|0)|0;c[e>>2]=(c[e>>2]|0)-d;f=0;return f|0}function uk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0;i=l;l=l+32|0;j=i;if(e|0){Kz(c[b>>2]|0);k=kR(8)|0;m=k;c[m>>2]=0;c[m+4>>2]=0;m=c[b>>2]|0;c[b>>2]=k;if(!m)n=k;else{mR(m);n=c[b>>2]|0}Jz(n);lk(c[b>>2]|0,1);n=ZA(c[(c[b>>2]|0)+4>>2]|0,88,c[d>>2]|0,e,f)|0;if((n|0)>-1){l=i;return}f=Ja(24)|0;e=xr()|0;o=0;na(71,f|0,n|0,e|0);e=o;o=0;if(e&1){e=Qa(0)|0;Sa(f|0);p=e}else{o=0;na(72,f|0,4424,56);o=0;f=Qa(0)|0;p=f}Ka(p|0)|0;p=fo()|0;o=0;na(71,j|0,16,p|0);p=o;o=0;if(p&1){p=Pa()|0;q=z;r=p}else{o=0;ma(144,j|0,0);o=0;p=Pa()|0;f=z;c[j>>2]=10036;e=j+12|0;if((a[e+11>>0]|0)<0)mR(c[e>>2]|0);q=f;r=p}o=0;ka(3);p=o;o=0;if(p&1){p=Qa(0)|0;Id(p)}else $a(r|0)}if(g|0){Kz(c[b>>2]|0);r=kR(8)|0;p=r;c[p>>2]=0;c[p+4>>2]=0;p=c[b>>2]|0;c[b>>2]=r;if(!p)s=r;else{mR(p);s=c[b>>2]|0}Jz(s);lk(c[b>>2]|0,2);s=Xx(g,c[(c[b>>2]|0)+4>>2]|0,88,c[d>>2]|0)|0;if((s|0)>-1){l=i;return}g=Ja(24)|0;p=xr()|0;o=0;na(71,g|0,s|0,p|0);p=o;o=0;if(p&1){p=Qa(0)|0;Sa(g|0);t=p}else{o=0;na(72,g|0,4424,56);o=0;g=Qa(0)|0;t=g}Ka(t|0)|0;t=fo()|0;o=0;na(71,j|0,16,t|0);t=o;o=0;if(t&1){t=Pa()|0;u=z;v=t}else{o=0;ma(144,j|0,0);o=0;t=Pa()|0;g=z;c[j>>2]=10036;p=j+12|0;if((a[p+11>>0]|0)<0)mR(c[p>>2]|0);u=g;v=t}o=0;ka(3);t=o;o=0;if(t&1){t=Qa(0)|0;Id(t)}else $a(v|0)}if(!h){l=i;return}Kz(c[b>>2]|0);v=kR(8)|0;t=v;c[t>>2]=0;c[t+4>>2]=0;t=c[b>>2]|0;c[b>>2]=v;if(!t)w=v;else{mR(t);w=c[b>>2]|0}Jz(w);lk(c[b>>2]|0,(h|0)==1?7:(h|0)==2?8:0);h=c[b>>2]|0;w=c[h+4>>2]|0;t=Uz(h)|0;h=rC(w,pC((t|0)==7?1:(t|0)==8?2:0)|0)|0;if((h|0)<=-1){t=Ja(24)|0;w=xr()|0;o=0;na(71,t|0,h|0,w|0);w=o;o=0;if(w&1){w=Qa(0)|0;Sa(t|0);x=w}else{o=0;na(72,t|0,4424,56);o=0;t=Qa(0)|0;x=t}Ka(x|0)|0;x=fo()|0;o=0;na(71,j|0,16,x|0);x=o;o=0;if(x&1){x=Pa()|0;y=z;A=x}else{o=0;ma(144,j|0,0);o=0;x=Pa()|0;t=z;c[j>>2]=10036;w=j+12|0;if((a[w+11>>0]|0)<0)mR(c[w>>2]|0);y=t;A=x}o=0;ka(3);x=o;o=0;if(x&1){x=Qa(0)|0;Id(x)}else $a(A|0)}A=uC(c[(c[b>>2]|0)+4>>2]|0,88,c[d>>2]|0)|0;if((A|0)>-1){l=i;return}i=Ja(24)|0;d=xr()|0;o=0;na(71,i|0,A|0,d|0);d=o;o=0;if(d&1){d=Qa(0)|0;Sa(i|0);B=d}else{o=0;na(72,i|0,4424,56);o=0;i=Qa(0)|0;B=i}Ka(B|0)|0;B=fo()|0;o=0;na(71,j|0,16,B|0);B=o;o=0;if(B&1){B=Pa()|0;C=z;D=B}else{o=0;ma(144,j|0,0);o=0;B=Pa()|0;i=z;c[j>>2]=10036;d=j+12|0;if((a[d+11>>0]|0)<0)mR(c[d>>2]|0);C=i;D=B}o=0;ka(3);B=o;o=0;if(B&1){B=Qa(0)|0;Id(B)}else $a(D|0)}function vk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;d=l;l=l+64|0;e=d;o=0;f=Z(209,320)|0;g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}ET(f|0,0,320)|0;c[a>>2]=f;o=0;la(283,f|0);g=o;o=0;if(g&1){g=Qa(0)|0;c[a>>2]=0;mR(f);Id(g)}o=0;g=Z(211,8)|0;h=o;o=0;do if(!(h&1)?(i=c[b>>2]|0,o=0,j=ca(2,g|0,i|0,(c[b+4>>2]|0)-i|0,e|0,48)|0,i=o,o=0,!(i&1)):0){if((j|0)<=-1){i=Ja(24)|0;k=xr()|0;o=0;na(71,i|0,j|0,k|0);k=o;o=0;if(k&1){k=Pa()|0;j=z;Sa(i|0);m=j;n=k;break}else{o=0;na(72,i|0,4424,56);o=0;p=17;break}}c[e+48>>2]=48;o=0;i=ca(34,f|0,89,e|0,0,0)|0;k=o;o=0;if(!(k&1)){if((i|0)>-1){l=d;return}k=Ja(24)|0;j=xr()|0;o=0;na(71,k|0,i|0,j|0);j=o;o=0;if(j&1){j=Pa()|0;i=z;Sa(k|0);m=i;n=j;break}else{o=0;na(72,k|0,4424,56);o=0;p=17;break}}else p=17}else p=17;while(0);if((p|0)==17){p=Pa()|0;m=z;n=p}o=0;la(281,f|0);p=o;o=0;if(p&1){p=Qa(0)|0;c[a>>2]=0;mR(f);Id(p)}else{c[a>>2]=0;mR(f);$a(n|0)}}function wk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;c[a>>2]=9628;b=a+4|0;o=0;a=Z(209,12)|0;d=o;o=0;if(d&1){d=Pa()|0;e=z;f=d;$a(f|0)};c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;xk(a);c[b>>2]=a;o=0;oa(38,a+8|0,90,c[a+4>>2]|0,60944);a=o;o=0;if(!(a&1))return;a=Pa()|0;d=z;g=c[b>>2]|0;c[b>>2]=0;if(!g){e=d;f=a;$a(f|0)}sk(g);mR(g);e=d;f=a;$a(f|0)}function xk(a){a=a|0;var b=0,d=0,e=0;o=0;b=Z(209,8)|0;d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}d=b;c[d>>2]=0;c[d+4>>2]=0;c[a>>2]=b;o=0;la(280,b|0);b=o;o=0;if(b&1){b=Qa(0)|0;d=c[a>>2]|0;c[a>>2]=0;if(!d)Id(b);mR(d);Id(b)}b=a+4|0;o=0;d=Z(209,37504)|0;e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}ET(d|0,0,37504)|0;c[b>>2]=d;o=0;la(284,d|0);d=o;o=0;if(d&1){d=Qa(0)|0;e=c[b>>2]|0;c[b>>2]=0;if(!e)Id(d);mR(e);Id(d)}d=a+8|0;o=0;a=Z(209,320)|0;e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}ET(a|0,0,320)|0;c[d>>2]=a;o=0;la(283,a|0);a=o;o=0;if(!(a&1))return;a=Qa(0)|0;e=c[d>>2]|0;c[d>>2]=0;if(!e)Id(a);mR(e);Id(a)}function yk(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0;g=l;l=l+16|0;h=g+13|0;i=g+12|0;j=g;k=c[b>>2]|0;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;b=$F(f)|0;if(b>>>0>4294967279)vR(j);if(b>>>0<11){m=j+11|0;a[m>>0]=b;if(!b){n=j;p=m}else{q=j;r=m;s=6}}else{m=b+16&-16;t=kR(m)|0;c[j>>2]=t;c[j+8>>2]=m|-2147483648;c[j+4>>2]=b;q=t;r=j+11|0;s=6}if((s|0)==6){CT(q|0,f|0,b|0)|0;n=q;p=r}a[n+b>>0]=0;b=a[p>>0]|0;n=b<<24>>24<0;o=0;r=ca(34,k|0,d|0,e|0,(n?c[j>>2]|0:j)|0,(n?c[j+4>>2]|0:b&255)|0)|0;b=o;o=0;if(!(b&1)?(o=0,a[h>>0]=a[i>>0]|0,_(97,r|0,h|0)|0,h=o,o=0,!(h&1)):0){if((a[p>>0]|0)>=0){l=g;return}mR(c[j>>2]|0);l=g;return}g=Pa()|0;if((a[p>>0]|0)>=0)$a(g|0);mR(c[j>>2]|0);$a(g|0)}function zk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;d=l;l=l+32|0;e=d;if((b|0)>-1){l=d;return b|0}d=Ja(24)|0;f=xr()|0;o=0;na(71,d|0,b|0,f|0);f=o;o=0;if(f&1){f=Qa(0)|0;Sa(d|0);g=f}else{o=0;na(72,d|0,4424,56);o=0;d=Qa(0)|0;g=d}Ka(g|0)|0;g=fo()|0;o=0;na(71,e|0,16,g|0);g=o;o=0;if(g&1){g=Pa()|0;h=z;i=g}else{o=0;ma(144,e|0,0);o=0;g=Pa()|0;d=z;c[e>>2]=10036;f=e+12|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);h=d;i=g}o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}else $a(i|0);return 0}function Ak(a){a=a|0;var b=0;b=a+4|0;if(Uz(c[c[b>>2]>>2]|0)|0)return Tz(c[c[b>>2]>>2]|0)|0;b=Ja(24)|0;o=0;ma(143,b|0,14);a=o;o=0;if(a&1){a=Pa()|0;Sa(b|0);$a(a|0)}else Xa(b|0,4424,56);return 0}function Bk(a){a=a|0;var b=0;b=a+4|0;if(Uz(c[c[b>>2]>>2]|0)|0)return ((Tz(c[c[b>>2]>>2]|0)|0)+7|0)>>>3|0;b=Ja(24)|0;o=0;ma(143,b|0,14);a=o;o=0;if(a&1){a=Pa()|0;Sa(b|0);$a(a|0)}else Xa(b|0,4424,56);return 0}function Ck(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;e=l;l=l+16|0;f=e+8|0;g=e;c[f>>2]=9628;h=f+4|0;o=0;i=Z(209,12)|0;j=o;o=0;if(j&1){j=Pa()|0;k=z;m=j;$a(m|0)};c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;xk(i);c[h>>2]=i;o=0;oa(38,i+8|0,90,c[i+4>>2]|0,60944);j=o;o=0;if(j&1){j=Pa()|0;n=z;c[h>>2]=0;sk(i);mR(i);k=n;m=j;$a(m|0)}o=0;ma(123,f|0,a|0);a=o;o=0;if(a&1){a=Pa()|0;p=z;q=a;sk(i);mR(i);$a(q|0)}c[g>>2]=9628;a=g+4|0;o=0;f=Z(209,12)|0;m=o;o=0;do if(m&1){j=Pa()|0;r=z;s=j}else{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;xk(f);c[a>>2]=f;o=0;oa(38,f+8|0,90,c[f+4>>2]|0,60944);j=o;o=0;if(j&1){j=Pa()|0;n=z;c[a>>2]=0;sk(f);mR(f);r=n;s=j;break}o=0;na(53,g|0,b|0,d|0);j=o;o=0;if(!(j&1)?(o=0,j=_(98,c[i>>2]|0,c[f>>2]|0)|0,n=o,o=0,!(n&1)):0){sk(f);mR(f);sk(i);mR(i);l=e;return (j|0)==0|0}j=Pa()|0;n=z;c[g>>2]=9628;c[g+4>>2]=0;sk(f);mR(f);r=n;s=j}while(0);p=r;q=s;sk(i);mR(i);$a(q|0);return 0}function Dk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;e=l;l=l+48|0;f=e+16|0;g=e;Fk(g,d);d=b+4|0;b=c[d>>2]|0;o=0;la(279,c[b>>2]|0);h=o;o=0;if(!(h&1)?(o=0,h=Z(209,8)|0,i=o,o=0,!(i&1)):0){i=h;c[i>>2]=0;c[i+4>>2]=0;i=c[b>>2]|0;c[b>>2]=h;if(!i)j=h;else{mR(i);j=c[b>>2]|0}o=0;la(280,j|0);j=o;o=0;if(!(j&1)?(j=c[g>>2]|0,b=g+4|0,o=0,i=$(91,c[c[d>>2]>>2]|0,j|0,(c[b>>2]|0)-j|0)|0,j=o,o=0,!(j&1)):0){if((i|0)>-1){j=c[g>>2]|0;if(!j){l=e;return}if((c[b>>2]|0)!=(j|0))c[b>>2]=j;mR(j);l=e;return}e=Ja(24)|0;j=xr()|0;o=0;na(71,e|0,i|0,j|0);j=o;o=0;if(j&1){j=Qa(0)|0;Sa(e|0);k=j}else{o=0;na(72,e|0,4424,56);o=0;e=Qa(0)|0;k=e}Ka(k|0)|0;k=fo()|0;o=0;na(71,f|0,7,k|0);k=o;o=0;if(k&1){k=Pa()|0;m=z;n=k}else{o=0;ma(144,f|0,0);o=0;k=Pa()|0;e=z;c[f>>2]=10036;j=f+12|0;if((a[j+11>>0]|0)<0)mR(c[j>>2]|0);m=e;n=k}o=0;ka(3);k=o;o=0;if(k&1){k=Qa(0)|0;Id(k)}else{p=g;q=m;r=n}}else s=23}else s=23;if((s|0)==23){s=Pa()|0;p=g;q=z;r=s}s=c[p>>2]|0;if(!s)$a(r|0);p=g+4|0;if((c[p>>2]|0)!=(s|0))c[p>>2]=s;mR(s);$a(r|0)}function Ek(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0;f=l;l=l+64|0;g=f+40|0;h=f+16|0;i=f;Fk(i,d);d=b+4|0;b=c[d>>2]|0;o=0;la(279,c[b>>2]|0);j=o;o=0;if(!(j&1)?(o=0,j=Z(209,8)|0,k=o,o=0,!(k&1)):0){k=j;c[k>>2]=0;c[k+4>>2]=0;k=c[b>>2]|0;c[b>>2]=j;if(!k)m=j;else{mR(k);m=c[b>>2]|0}o=0;la(280,m|0);m=o;o=0;if(!(m&1)?(m=c[i>>2]|0,b=i+4|0,k=c[e>>2]|0,o=0,j=ca(35,c[c[d>>2]>>2]|0,m|0,(c[b>>2]|0)-m|0,k|0,(c[e+4>>2]|0)-k|0)|0,k=o,o=0,!(k&1)):0){if((j|0)>-1){k=c[i>>2]|0;if(!k){l=f;return}if((c[b>>2]|0)!=(k|0))c[b>>2]=k;mR(k);l=f;return}f=Ja(24)|0;k=xr()|0;o=0;na(71,f|0,j|0,k|0);k=o;o=0;if(k&1){k=Qa(0)|0;Sa(f|0);n=k}else{o=0;na(72,f|0,4424,56);o=0;f=Qa(0)|0;n=f}Ka(n|0)|0;switch(j|0){case -15232:case -15360:{j=fo()|0;o=0;na(71,g|0,6,j|0);j=o;o=0;if(j&1)p=20;else{o=0;ma(144,g|0,0);o=0;j=Pa()|0;n=z;c[g>>2]=10036;f=g+12|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);q=n;r=j}break}default:{j=fo()|0;o=0;na(71,h|0,5,j|0);j=o;o=0;if(j&1)p=20;else{o=0;ma(144,h|0,0);o=0;j=Pa()|0;n=z;c[h>>2]=10036;f=h+12|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);q=n;r=j}}}if((p|0)==20){j=Pa()|0;q=z;r=j}o=0;ka(3);j=o;o=0;if(j&1){j=Qa(0)|0;Id(j)}else{s=i;t=q;u=r}}else p=28}else p=28;if((p|0)==28){p=Pa()|0;s=i;t=z;u=p}p=c[s>>2]|0;if(!p)$a(u|0);s=i+4|0;if((c[s>>2]|0)!=(p|0))c[s>>2]=p;mR(p);$a(u|0)}function Fk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;e=l;l=l+32|0;f=e+12|0;g=e;h=kR(16)|0;c[g>>2]=h;c[g+8>>2]=-2147483632;c[g+4>>2]=11;i=h;j=66725;k=i+11|0;do{a[i>>0]=a[j>>0]|0;i=i+1|0;j=j+1|0}while((i|0)<(k|0));a[h+11>>0]=0;o=0;ma(91,f|0,g|0);h=o;o=0;if(h&1){h=Pa()|0;j=z;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);m=j;n=h;$a(n|0)}if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);g=c[d>>2]|0;h=c[d+4>>2]|0;d=c[f>>2]|0;j=f+4|0;i=c[j>>2]|0;k=d;p=h;q=g;r=i-k|0;a:do if(r)if((p-q|0)>=(r|0)?(s=h+(1-r)|0,(s|0)!=(g|0)):0){t=a[d>>0]|0;u=g;v=q;b:while(1){w=v;x=u;while(1){if((a[x>>0]|0)==t<<24>>24){y=k;A=w;break}B=x+1|0;if((B|0)==(s|0)){C=p;break a}else{w=B;x=B}}do{y=y+1|0;if((y|0)==(i|0))break b;A=A+1|0}while((a[A>>0]|0)==(a[y>>0]|0));w=x+1|0;if((w|0)==(s|0)){C=p;break a}else{u=w;v=w}}C=x}else C=p;else C=q;while(0);c[b>>2]=0;x=b+4|0;c[x>>2]=0;c[b+8>>2]=0;y=p-q|0;q=(y|0)==0;c:do if((h|0)==(C|0))if(!q){if((y|0)>=0){o=0;p=Z(209,y|0)|0;A=o;o=0;if(!(A&1)){c[x>>2]=p;c[b>>2]=p;A=p+y|0;c[b+8>>2]=A;CT(p|0,g|0,y|0)|0;c[x>>2]=A;D=55;break}}else{o=0;la(271,b|0);o=0}A=Pa()|0;p=z;i=c[b>>2]|0;if(!i){E=p;F=A;D=41}else{if((c[x>>2]|0)!=(i|0))c[x>>2]=i;mR(i);E=p;F=A;D=41}}else D=55;else{do if(q){G=b+8|0;H=0;I=0}else{if((y|0)>=0){o=0;A=Z(209,y|0)|0;p=o;o=0;if(!(p&1)){c[x>>2]=A;c[b>>2]=A;p=A+y|0;i=b+8|0;c[i>>2]=p;if((g|0)==(h|0)){J=A;K=p}else{p=g;k=A;do{a[k>>0]=a[p>>0]|0;p=p+1|0;k=(c[x>>2]|0)+1|0;c[x>>2]=k}while((p|0)!=(h|0));J=k;K=c[i>>2]|0}if(J>>>0>=K>>>0){G=i;H=J;I=K;break}a[J>>0]=0;c[x>>2]=(c[x>>2]|0)+1;D=55;break c}}else{o=0;la(271,b|0);o=0}p=Pa()|0;A=z;d=c[b>>2]|0;if(!d){E=A;F=p;D=41;break c}if((c[x>>2]|0)!=(d|0))c[x>>2]=d;mR(d);E=A;F=p;D=41;break c}while(0);p=c[b>>2]|0;A=H-p|0;d=A+1|0;r=p;do if((d|0)<0){o=0;la(271,b|0);o=0}else{v=I-p|0;u=v<<1;s=v>>>0<1073741823?(u>>>0<d>>>0?d:u):2147483647;if(s){o=0;u=Z(209,s|0)|0;v=o;o=0;if(v&1)break;else L=u}else L=0;u=L+A|0;a[u>>0]=0;if((A|0)>0)CT(L|0,r|0,A|0)|0;c[b>>2]=L;c[x>>2]=u+1;c[G>>2]=L+s;if(!p){D=55;break c}mR(r);D=55;break c}while(0);r=Pa()|0;p=z;A=c[b>>2]|0;if(!A){M=p;N=r}else{if((c[x>>2]|0)!=(A|0))c[x>>2]=A;mR(A);M=p;N=r}}while(0);if((D|0)==41){M=E;N=F}else if((D|0)==55){D=c[f>>2]|0;if(!D){l=e;return}if((c[j>>2]|0)!=(D|0))c[j>>2]=D;mR(D);l=e;return}e=c[f>>2]|0;if(!e){m=M;n=N;$a(n|0)}if((c[j>>2]|0)!=(e|0))c[j>>2]=e;mR(e);m=M;n=N;$a(n|0)}function Gk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;b=l;l=l+16|0;d=b;o=0;e=Z(209,8)|0;f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}f=e;c[f>>2]=0;c[f+4>>2]=0;o=0;la(280,e|0);f=o;o=0;if(f&1){f=Qa(0)|0;mR(e);Id(f)}o=0;ma(148,d|0,a|0);a=o;o=0;do if(!(a&1)){f=c[d>>2]|0;g=d+4|0;o=0;h=$(91,e|0,f|0,(c[g>>2]|0)-f|0)|0;f=o;o=0;if(f&1){f=Pa()|0;i=z;j=c[d>>2]|0;if(!j){k=i;m=f;break}if((c[g>>2]|0)!=(j|0))c[g>>2]=j;mR(j);k=i;m=f;break}f=(h|0)==0;h=c[d>>2]|0;if(h|0){if((c[g>>2]|0)!=(h|0))c[g>>2]=h;mR(h)}o=0;la(279,e|0);h=o;o=0;if(h&1){h=Qa(0)|0;mR(e);Id(h)}else{mR(e);l=b;return f|0}}else{f=Pa()|0;k=z;m=f}while(0);o=0;la(279,e|0);k=o;o=0;if(k&1){k=Qa(0)|0;mR(e);Id(k)}else{mR(e);$a(m|0)}return 0}function Hk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0;d=l;l=l+48|0;e=d+16|0;f=d;o=0;g=Z(209,8)|0;h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}h=g;c[h>>2]=0;c[h+4>>2]=0;o=0;la(280,g|0);h=o;o=0;if(h&1){h=Qa(0)|0;mR(g);Id(h)}o=0;ma(148,f|0,b|0);b=o;o=0;if(!(b&1)){b=c[f>>2]|0;h=f+4|0;o=0;i=$(91,g|0,b|0,(c[h>>2]|0)-b|0)|0;b=o;o=0;if(!(b&1)){if((i|0)>-1){b=c[f>>2]|0;if(b|0){if((c[h>>2]|0)!=(b|0))c[h>>2]=b;mR(b)}o=0;la(279,g|0);b=o;o=0;if(b&1){b=Qa(0)|0;mR(g);Id(b)}else{mR(g);l=d;return}}d=Ja(24)|0;b=xr()|0;o=0;na(71,d|0,i|0,b|0);b=o;o=0;if(b&1){b=Qa(0)|0;Sa(d|0);j=b}else{o=0;na(72,d|0,4424,56);o=0;d=Qa(0)|0;j=d}Ka(j|0)|0;j=fo()|0;o=0;na(71,e|0,7,j|0);j=o;o=0;if(j&1){j=Pa()|0;k=z;m=j}else{o=0;ma(144,e|0,0);o=0;j=Pa()|0;d=z;c[e>>2]=10036;b=e+12|0;if((a[b+11>>0]|0)<0)mR(c[b>>2]|0);k=d;m=j}o=0;ka(3);j=o;o=0;if(j&1){j=Qa(0)|0;Id(j)}else{n=k;p=m}}else{m=Pa()|0;n=z;p=m}m=c[f>>2]|0;if(!m){q=n;r=p}else{if((c[h>>2]|0)!=(m|0))c[h>>2]=m;mR(m);q=n;r=p}}else{p=Pa()|0;q=z;r=p}o=0;la(279,g|0);p=o;o=0;if(p&1){p=Qa(0)|0;mR(g);Id(p)}else{mR(g);$a(r|0)}}function Ik(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=l;l=l+48|0;f=e+16|0;g=e;o=0;h=Z(209,8)|0;i=o;o=0;if(i&1){i=Qa(0)|0;Id(i)}i=h;c[i>>2]=0;c[i+4>>2]=0;o=0;la(280,h|0);i=o;o=0;if(i&1){i=Qa(0)|0;mR(h);Id(i)}o=0;ma(148,g|0,b|0);b=o;o=0;if(!(b&1)){b=c[g>>2]|0;i=g+4|0;j=c[d>>2]|0;o=0;k=ca(35,h|0,b|0,(c[i>>2]|0)-b|0,j|0,(c[d+4>>2]|0)-j|0)|0;j=o;o=0;do if(!(j&1)){if(k)if((k|128|0)==-15232)m=0;else{d=Ja(24)|0;if((k|0)>-1){b=fo()|0;o=0;na(71,d|0,9,b|0);b=o;o=0;if(b&1){b=Pa()|0;n=z;Sa(d|0);p=n;q=b;break}else{o=0;na(72,d|0,4424,56);o=0;r=9;break}}b=xr()|0;o=0;na(71,d|0,k|0,b|0);b=o;o=0;if(b&1){b=Qa(0)|0;Sa(d|0);s=b}else{o=0;na(72,d|0,4424,56);o=0;d=Qa(0)|0;s=d}Ka(s|0)|0;d=fo()|0;o=0;na(71,f|0,5,d|0);d=o;o=0;if(d&1){d=Pa()|0;t=z;u=d}else{o=0;ma(144,f|0,0);o=0;d=Pa()|0;b=z;c[f>>2]=10036;n=f+12|0;if((a[n+11>>0]|0)<0)mR(c[n>>2]|0);t=b;u=d}o=0;ka(3);d=o;o=0;if(!(d&1)){v=t;w=u;r=10;break}d=Qa(0)|0;Id(d)}else m=1;d=c[g>>2]|0;if(d|0){if((c[i>>2]|0)!=(d|0))c[i>>2]=d;mR(d)}o=0;la(279,h|0);d=o;o=0;if(d&1){d=Qa(0)|0;mR(h);Id(d)}else{mR(h);l=e;return m|0}}else r=9;while(0);if((r|0)==9){m=Pa()|0;v=z;w=m;r=10}if((r|0)==10){p=v;q=w}w=c[g>>2]|0;if(!w){x=p;y=q}else{if((c[i>>2]|0)!=(w|0))c[i>>2]=w;mR(w);x=p;y=q}}else{q=Pa()|0;x=z;y=q}o=0;la(279,h|0);q=o;o=0;if(q&1){q=Qa(0)|0;mR(h);Id(q)}else{mR(h);$a(y|0)}return 0}function Jk(a){a=a|0;var b=0,d=0,e=0;b=l;l=l+16|0;d=b;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;o=0;e=_(70,a|0,d|0)|0;d=o;o=0;if(d&1){d=Pa()|0;$a(d|0)}else{l=b;return e^1|0}return 0}function Kk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=a+4|0;a=c[d>>2]|0;Kz(c[a>>2]|0);e=kR(8)|0;f=e;c[f>>2]=0;c[f+4>>2]=0;f=c[a>>2]|0;c[a>>2]=e;if(!f)g=e;else{mR(f);g=c[a>>2]|0}Jz(g);do switch(b|0){case 0:{h=0;i=0;j=256;break}case 1:{h=0;i=0;j=512;break}case 2:{h=0;i=0;j=1024;break}case 3:{h=0;i=0;j=2048;break}case 4:{h=0;i=0;j=3072;break}case 5:{h=0;i=0;j=4096;break}case 6:{h=0;i=0;j=8192;break}case 7:{h=0;i=1;j=0;break}case 8:{h=0;i=2;j=0;break}case 9:{h=0;i=3;j=0;break}case 10:{h=0;i=4;j=0;break}case 11:{h=0;i=5;j=0;break}case 12:{h=0;i=6;j=0;break}case 13:{h=0;i=7;j=0;break}case 14:{h=0;i=8;j=0;break}case 15:{h=0;i=10;j=0;break}case 16:{h=0;i=11;j=0;break}case 17:{h=0;i=12;j=0;break}case 18:{h=0;i=9;j=0;break}case 19:{h=1;i=0;j=0;break}case 20:{h=2;i=0;j=0;break}default:{g=Ja(24)|0;o=0;na(73,g|0,3,66737);a=o;o=0;if(a&1){a=Pa()|0;Sa(g|0);$a(a|0)}else Xa(g|0,4424,56)}}while(0);b=c[d>>2]|0;uk(b,b+8|0,j,65537,i,h);return}function Lk(a,b,c){a=a|0;b=b|0;c=c|0;vo(a,b,fo()|0,c);return}function Mk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=l;l=l+16|0;g=f+12|0;h=f;c[g>>2]=32;if(((c[e+4>>2]|0)-(c[e>>2]|0)|0)>>>0<32){i=Ja(24)|0;o=0;na(74,h|0,66770,g|0);g=o;o=0;do if(!(g&1)){j=fo()|0;o=0;oa(37,i|0,15,j|0,h|0);j=o;o=0;if(j&1)k=1;else{o=0;na(72,i|0,4424,56);o=0;k=0}j=Pa()|0;m=z;if((a[h+11>>0]|0)<0){mR(c[h>>2]|0);if(k){n=m;p=j;break}else{q=m;r=j}$a(r|0)}else{if(k){n=m;p=j;break}else{q=m;r=j}$a(r|0)}}else{j=Pa()|0;n=z;p=j}while(0);Sa(i|0);q=n;r=p;$a(r|0)}p=b+4|0;b=c[p>>2]|0;Kz(c[b>>2]|0);n=kR(8)|0;i=n;c[i>>2]=0;c[i+4>>2]=0;i=c[b>>2]|0;c[b>>2]=n;if(!i)s=n;else{mR(i);s=c[b>>2]|0}Jz(s);do switch(d|0){case 0:{t=0;u=0;v=256;break}case 1:{t=0;u=0;v=512;break}case 2:{t=0;u=0;v=1024;break}case 3:{t=0;u=0;v=2048;break}case 4:{t=0;u=0;v=3072;break}case 5:{t=0;u=0;v=4096;break}case 6:{t=0;u=0;v=8192;break}case 7:{t=0;u=1;v=0;break}case 8:{t=0;u=2;v=0;break}case 9:{t=0;u=3;v=0;break}case 10:{t=0;u=4;v=0;break}case 11:{t=0;u=5;v=0;break}case 12:{t=0;u=6;v=0;break}case 13:{t=0;u=7;v=0;break}case 14:{t=0;u=8;v=0;break}case 15:{t=0;u=10;v=0;break}case 16:{t=0;u=11;v=0;break}case 17:{t=0;u=12;v=0;break}case 18:{t=0;u=9;v=0;break}case 19:{t=1;u=0;v=0;break}case 20:{t=2;u=0;v=0;break}default:{s=Ja(24)|0;o=0;na(73,s|0,3,66737);b=o;o=0;if(b&1){b=Pa()|0;Sa(s|0);$a(b|0)}else Xa(s|0,4424,56)}}while(0);vk(h,e);o=0;qa(18,c[p>>2]|0,h|0,v|0,65537,u|0,t|0);t=o;o=0;if(t&1){t=Pa()|0;u=z;v=c[h>>2]|0;o=0;la(281,v|0);p=o;o=0;if(p&1){p=Qa(0)|0;c[h>>2]=0;if(!v)Id(p);mR(v);Id(p)}else{c[h>>2]=0;if(v|0)mR(v);q=u;r=t;$a(r|0)}}else{r=c[h>>2]|0;o=0;la(281,r|0);t=o;o=0;if(t&1){t=Qa(0)|0;c[h>>2]=0;if(!r)Id(t);mR(r);Id(t)}else{c[h>>2]=0;if(!r){l=f;return}mR(r);l=f;return}}}function Nk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0;f=l;l=l+160|0;g=f+136|0;h=f;i=h+56|0;j=h+4|0;c[h>>2]=20;c[i>>2]=40;o=0;ma(69,h+56|0,j|0);k=o;o=0;if(k&1){k=Pa()|0;m=z;n=k;rH(i);$a(n|0)}c[h+128>>2]=0;c[h+132>>2]=-1;c[h>>2]=7388;c[i>>2]=7408;o=0;la(216,j|0);k=o;o=0;do if(k&1){p=Pa()|0;q=z;r=p}else{c[j>>2]=7440;p=h+36|0;c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[p+12>>2]=0;c[h+52>>2]=16;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;o=0;ma(70,j|0,g|0);s=o;o=0;if(s&1){s=Pa()|0;t=z;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);if((a[p+11>>0]|0)<0)mR(c[p>>2]|0);vH(j);q=t;r=s;break}if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);s=g+8|0;c[g>>2]=s;c[g+4>>2]=1;c[s>>2]=e;c[g+12>>2]=20;c[g+16>>2]=212;o=0;oa(39,h|0,d|0,s|0,1);s=o;o=0;if(!(s&1)?(o=0,ma(71,b|0,j|0),s=o,o=0,!(s&1)):0){c[h>>2]=7388;c[i>>2]=7408;c[j>>2]=7440;if((a[p+11>>0]|0)>=0){vH(j);ZH(h,7420);rH(i);l=f;return}mR(c[p>>2]|0);vH(j);ZH(h,7420);rH(i);l=f;return}s=Pa()|0;c[h>>2]=7388;c[i>>2]=7408;c[j>>2]=7440;if((a[p+11>>0]|0)>=0){vH(j);ZH(h,7420);rH(i);$a(s|0)}mR(c[p>>2]|0);vH(j);ZH(h,7420);rH(i);$a(s|0)}while(0);ZH(h,7420);m=q;n=r;rH(i);$a(n|0)}function Ok(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;d=l;l=l+16|0;h=d;if((a[e+-1>>0]|0)==99){a[h>>0]=c[g>>2];he(b,h,1)|0;l=d;return}if((f|0)>-1){Sk(b,g,f);l=d;return}else{xI(b,c[g>>2]|0)|0;l=d;return}}function Pk(a){a=a|0;return c[a>>2]|0}function Qk(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0;g=l;l=l+160|0;h=g+144|0;i=g+140|0;j=g+156|0;k=g+136|0;m=g;n=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;p=c[n+12>>2]|0;q=c[n+8>>2]|0;r=c[n+4>>2]|0;s=n+76|0;t=c[s>>2]|0;do if((t|0)==-1){mI(h,n);o=0;u=_(93,h|0,102968)|0;v=o;o=0;if(v&1){w=Pa()|0;x=z;$I(h);$a(w|0)}o=0;v=_(c[(c[u>>2]|0)+28>>2]|0,u|0,32)|0;u=o;o=0;if(u&1){w=Pa()|0;x=z;$I(h);$a(w|0)}else{$I(h);u=v<<24>>24;c[s>>2]=u;y=u;break}}else y=t;while(0);c[i>>2]=0;a:do if((f|0)>0){t=m+56|0;s=m+4|0;w=m+56|0;x=m+128|0;n=m+132|0;u=m+36|0;v=m+52|0;A=h+11|0;B=h+11|0;C=h+4|0;D=u+11|0;E=d;while(1){F=E;G=E;b:while(1){switch(a[F>>0]|0){case 0:{H=16;break b;break}case 37:{zI(b,G,F-G|0)|0;I=F+1|0;if((a[I>>0]|0)==37){J=I;K=I}else break b;break}default:{J=F;K=G}}F=J+1|0;G=K}if((H|0)==16){H=0;zI(b,G,F-G|0)|0}a[j>>0]=0;c[k>>2]=-1;I=Rk(b,j,k,F,e,i,f)|0;L=c[i>>2]|0;if((L|0)>=(f|0)){H=20;break}M=e+(L*12|0)|0;if(!(a[j>>0]|0))vd[c[e+(L*12|0)+4>>2]&31](b,F,I,c[k>>2]|0,c[M>>2]|0);else{c[m>>2]=20;c[t>>2]=40;o=0;ma(69,w|0,s|0);N=o;o=0;if(N&1){H=33;break}c[x>>2]=0;c[n>>2]=-1;c[m>>2]=7388;c[t>>2]=7408;o=0;la(216,s|0);N=o;o=0;if(N&1){H=34;break}c[s>>2]=7440;c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[u+12>>2]=0;c[v>>2]=16;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;o=0;ma(70,s|0,h|0);N=o;o=0;if(N&1){H=28;break}if((a[A>>0]|0)<0)mR(c[h>>2]|0);o=0;_(99,m+(c[(c[m>>2]|0)+-12>>2]|0)|0,b+(c[(c[b>>2]|0)+-12>>2]|0)|0)|0;N=o;o=0;if(N&1){H=43;break}N=m+(c[(c[m>>2]|0)+-12>>2]|0)+4|0;c[N>>2]=c[N>>2]|2048;o=0;pa(c[e+(L*12|0)+4>>2]|0,m|0,F|0,I|0,c[k>>2]|0,c[M>>2]|0);M=o;o=0;if(M&1){H=43;break}o=0;ma(71,h|0,s|0);M=o;o=0;if(M&1){H=44;break}M=a[B>>0]|0;L=M<<24>>24<0;N=c[C>>2]|0;O=L?N:M&255;P=c[h>>2]|0;if(!O){Q=P;R=L;S=M;T=N}else{N=0;U=L;L=P;P=M;while(1){if((a[(U?L:h)+N>>0]|0)==43){a[(P<<24>>24<0?L:h)+N>>0]=32;V=a[B>>0]|0;W=c[h>>2]|0}else{V=P;W=L}N=N+1|0;U=V<<24>>24<0;if((N|0)==(O|0))break;else{L=W;P=V}}Q=W;R=U;S=V;T=c[C>>2]|0}o=0;$(53,b|0,(R?Q:h)|0,(R?T:S&255)|0)|0;P=o;o=0;if(P&1){H=53;break}if((a[B>>0]|0)<0)mR(c[h>>2]|0);c[m>>2]=7388;c[t>>2]=7408;c[s>>2]=7440;if((a[D>>0]|0)<0)mR(c[u>>2]|0);vH(s);ZH(m,7420);rH(t)}P=(c[i>>2]|0)+1|0;c[i>>2]=P;if((P|0)<(f|0))E=I;else{X=I;break a}}if((H|0)==20)Ha(66821,71901,773,66868);else if((H|0)==28){E=Pa()|0;C=z;if((a[A>>0]|0)<0)mR(c[h>>2]|0);if((a[D>>0]|0)<0)mR(c[u>>2]|0);vH(s);Y=C;Z=E;H=35}else if((H|0)==33){E=Pa()|0;aa=z;ba=E;rH(t);$a(ba|0)}else if((H|0)==34){E=Pa()|0;Y=z;Z=E;H=35}else if((H|0)==43){E=Pa()|0;ca=z;da=E}else if((H|0)==44){E=Pa()|0;ea=z;fa=E;H=55}else if((H|0)==53){E=Pa()|0;C=z;if((a[B>>0]|0)<0){mR(c[h>>2]|0);ea=C;fa=E;H=55}else{ea=C;fa=E;H=55}}if((H|0)==35){ZH(m,7420);aa=Y;ba=Z;rH(t);$a(ba|0)}else if((H|0)==55){ca=ea;da=fa}c[m>>2]=7388;c[t>>2]=7408;c[s>>2]=7440;if((a[D>>0]|0)>=0){vH(s);ZH(m,7420);rH(t);$a(da|0)}mR(c[u>>2]|0);vH(s);ZH(m,7420);rH(t);$a(da|0)}else X=d;while(0);d=X;da=X;c:while(1){switch(a[d>>0]|0){case 0:{H=11;break c;break}case 37:{zI(b,da,d-da|0)|0;X=d+1|0;if((a[X>>0]|0)==37){ga=X;ha=X}else break c;break}default:{ga=d;ha=da}}d=ga+1|0;da=ha}if((H|0)==11)zI(b,da,d-da|0)|0;if(!(a[d>>0]|0)){c[b+(c[(c[b>>2]|0)+-12>>2]|0)+12>>2]=p;c[b+(c[(c[b>>2]|0)+-12>>2]|0)+8>>2]=q;c[b+(c[(c[b>>2]|0)+-12>>2]|0)+4>>2]=r;c[b+(c[(c[b>>2]|0)+-12>>2]|0)+76>>2]=y<<24>>24;l=g;return}else Ha(66879,71901,801,66868)}function Rk(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;if((a[f>>0]|0)!=37)Ha(66946,71901,576,67015);c[b+(c[(c[b>>2]|0)+-12>>2]|0)+12>>2]=0;c[b+(c[(c[b>>2]|0)+-12>>2]|0)+8>>2]=6;c[b+(c[(c[b>>2]|0)+-12>>2]|0)+76>>2]=32;j=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[j>>2]=c[j>>2]&-20480;j=0;k=f;a:while(1){f=k;b:while(1){l=f+1|0;m=a[l>>0]|0;switch(m<<24>>24|0){case 43:{break b;break}case 35:{n=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[n>>2]=c[n>>2]|1536;f=l;continue b;break}case 48:{n=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;if(c[n+4>>2]&32|0){f=l;continue b}c[n+76>>2]=48;n=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[n>>2]=c[n>>2]&-177|16;f=l;continue b;break}case 45:{c[b+(c[(c[b>>2]|0)+-12>>2]|0)+76>>2]=32;n=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[n>>2]=c[n>>2]&-177|32;f=l;continue b;break}case 32:{if(c[b+(c[(c[b>>2]|0)+-12>>2]|0)+4>>2]&2048|0){f=l;continue b}a[d>>0]=1;f=l;continue b;break}default:break a}}f=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[f>>2]=c[f>>2]|2048;a[d>>0]=0;j=1;k=l}if((m+-48&255)<10){k=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;d=0;f=m;n=l;do{d=(f<<24>>24)+-48+(d*10|0)|0;n=n+1|0;f=a[n>>0]|0}while((f+-48&255)<10);c[k+12>>2]=d;o=1;p=n;q=a[n>>0]|0}else{o=0;p=l;q=m}if(q<<24>>24==42){m=c[h>>2]|0;if((m|0)>=(i|0))Ha(67037,71901,639,67015);c[h>>2]=m+1;l=dd[c[g+(m*12|0)+8>>2]&255](c[g+(m*12|0)>>2]|0)|0;if((l|0)<0){c[b+(c[(c[b>>2]|0)+-12>>2]|0)+76>>2]=32;m=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[m>>2]=c[m>>2]&-177|32;r=0-l|0}else r=l;c[b+(c[(c[b>>2]|0)+-12>>2]|0)+12>>2]=r;r=p+1|0;s=1;t=r;u=a[r>>0]|0}else{s=o;t=p;u=q}if(u<<24>>24==46){u=t+1|0;q=a[u>>0]|0;c:do if(q<<24>>24==42){p=c[h>>2]|0;if((p|0)<(i|0)){c[h>>2]=p+1;v=dd[c[g+(p*12|0)+8>>2]&255](c[g+(p*12|0)>>2]|0)|0;w=t+2|0;break}else Ha(67100,71901,661,67015)}else{if((q+-48&255)<10){p=0;o=q;r=u;while(1){l=(o<<24>>24)+-48+(p*10|0)|0;m=r+1|0;o=a[m>>0]|0;if((o+-48&255)>=10){v=l;w=m;break c}else{p=l;r=m}}}if(q<<24>>24==45){r=t+2|0;if(((a[r>>0]|0)+-48&255)<10){p=r;while(1){o=p+1|0;if(((a[o>>0]|0)+-48&255)<10)p=o;else{v=0;w=o;break}}}else{v=0;w=r}}else{v=0;w=u}}while(0);c[b+(c[(c[b>>2]|0)+-12>>2]|0)+8>>2]=v;x=1;y=w}else{x=0;y=t}t=y;d:while(1){z=a[t>>0]|0;switch(z<<24>>24){case 116:case 122:case 106:case 76:case 104:case 108:break;default:break d}t=t+1|0}do switch(z<<24>>24|0){case 105:case 100:case 117:{A=2;break}case 111:{A=64;break}case 88:{y=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[y>>2]=c[y>>2]|16384;B=40;break}case 112:case 120:{B=40;break}case 69:{y=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[y>>2]=c[y>>2]|16384;B=42;break}case 101:{B=42;break}case 70:{y=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[y>>2]=c[y>>2]|16384;B=44;break}case 102:{B=44;break}case 71:{y=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[y>>2]=c[y>>2]|16384;B=46;break}case 103:{B=46;break}case 65:case 97:{Ha(67167,71901,717,67015);break}case 0:{Ha(67290,71901,734,67015);break}case 115:{y=c[b>>2]|0;if(x)c[e>>2]=c[b+(c[y+-12>>2]|0)+8>>2];w=b+(c[y+-12>>2]|0)+4|0;c[w>>2]=c[w>>2]|1;C=t+1|0;return C|0}case 110:{Ha(67238,71901,730,67015);break}default:{C=t+1|0;return C|0}}while(0);if((B|0)==40)A=8;else if((B|0)==42){e=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[e>>2]=c[e>>2]&-261|256;e=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[e>>2]=c[e>>2]&-75|2;C=t+1|0;return C|0}else if((B|0)==44){e=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[e>>2]=c[e>>2]&-261|4;C=t+1|0;return C|0}else if((B|0)==46){B=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[B>>2]=c[B>>2]&-75|2;B=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[B>>2]=c[B>>2]&-261;C=t+1|0;return C|0}B=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[B>>2]=c[B>>2]&-75|A;if(s|x^1){C=t+1|0;return C|0}x=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;c[x+12>>2]=(c[x+8>>2]|0)+j;j=b+(c[(c[b>>2]|0)+-12>>2]|0)+4|0;c[j>>2]=c[j>>2]&-177|16;c[b+(c[(c[b>>2]|0)+-12>>2]|0)+76>>2]=48;C=t+1|0;return C|0}function Sk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0;f=l;l=l+160|0;g=f+136|0;h=f;i=h+56|0;j=h+4|0;c[h>>2]=20;c[i>>2]=40;o=0;ma(69,h+56|0,j|0);k=o;o=0;if(k&1){k=Pa()|0;m=z;n=k;rH(i);$a(n|0)}c[h+128>>2]=0;c[h+132>>2]=-1;c[h>>2]=7388;c[i>>2]=7408;o=0;la(216,j|0);k=o;o=0;do if(k&1){p=Pa()|0;q=z;r=p}else{c[j>>2]=7440;p=h+36|0;c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[p+12>>2]=0;c[h+52>>2]=16;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;o=0;ma(70,j|0,g|0);s=o;o=0;if(s&1){s=Pa()|0;t=z;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);if((a[p+11>>0]|0)<0)mR(c[p>>2]|0);vH(j);q=t;r=s;break}if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);o=0;_(100,h|0,c[d>>2]|0)|0;s=o;o=0;if(s&1){s=Pa()|0;u=z;v=s}else{o=0;ma(71,g|0,j|0);s=o;o=0;do if(s&1){t=Pa()|0;w=z;x=t}else{t=g+11|0;y=a[t>>0]|0;A=y<<24>>24<0;B=A?c[g+4>>2]|0:y&255;o=0;$(92,b|0,(A?c[g>>2]|0:g)|0,((B|0)<(e|0)?B:e)|0)|0;B=o;o=0;if(B&1){B=Pa()|0;A=z;if((a[t>>0]|0)>=0){w=A;x=B;break}mR(c[g>>2]|0);w=A;x=B;break}if((a[t>>0]|0)<0)mR(c[g>>2]|0);c[h>>2]=7388;c[i>>2]=7408;c[j>>2]=7440;if((a[p+11>>0]|0)>=0){vH(j);ZH(h,7420);rH(i);l=f;return}mR(c[p>>2]|0);vH(j);ZH(h,7420);rH(i);l=f;return}while(0);u=w;v=x}c[h>>2]=7388;c[i>>2]=7408;c[j>>2]=7440;if((a[p+11>>0]|0)>=0){vH(j);ZH(h,7420);rH(i);$a(v|0)}mR(c[p>>2]|0);vH(j);ZH(h,7420);rH(i);$a(v|0)}while(0);ZH(h,7420);m=q;n=r;rH(i);$a(n|0)}function Tk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=b+4|0;if(!(Uz(c[c[d>>2]>>2]|0)|0)){b=Ja(24)|0;o=0;ma(143,b|0,14);e=o;o=0;if(e&1){e=Pa()|0;Sa(b|0);$a(e|0)}else Xa(b|0,4424,56)}b=a+4|0;a=c[b>>2]|0;Kz(c[a>>2]|0);e=kR(8)|0;f=e;c[f>>2]=0;c[f+4>>2]=0;f=c[a>>2]|0;c[a>>2]=e;if(!f)g=e;else{mR(f);g=c[a>>2]|0}Jz(g);if(Nz(c[c[d>>2]>>2]|0,1)|0){g=c[b>>2]|0;uk(g,g+8|0,Tz(c[c[d>>2]>>2]|0)|0,65537,0,0);return}if(Nz(c[c[d>>2]>>2]|0,2)|0){g=c[b>>2]|0;uk(g,g+8|0,0,0,c[c[(c[c[d>>2]>>2]|0)+4>>2]>>2]|0,0);return}if((Nz(c[c[d>>2]>>2]|0,7)|0)==0?(Nz(c[c[d>>2]>>2]|0,8)|0)==0:0){g=Ja(24)|0;o=0;na(73,g|0,9,67368);a=o;o=0;if(a&1){a=Pa()|0;Sa(g|0);$a(a|0)}else Xa(g|0,4424,56)}g=c[b>>2]|0;uk(g,g+8|0,0,0,0,AC(c[c[(c[c[d>>2]>>2]|0)+4>>2]>>2]|0)|0);return}function Uk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;f=l;l=l+16|0;g=f;h=d+4|0;if(!(Uz(c[c[h>>2]>>2]|0)|0)){d=Ja(24)|0;o=0;ma(143,d|0,14);i=o;o=0;if(i&1){i=Pa()|0;Sa(d|0);$a(i|0)}else Xa(d|0,4424,56)}d=e+4|0;if(!(Uz(c[c[d>>2]>>2]|0)|0)){e=Ja(24)|0;o=0;ma(143,e|0,14);i=o;o=0;if(i&1){i=Pa()|0;Sa(e|0);$a(i|0)}else Xa(e|0,4424,56)}c[b>>2]=0;e=b+4|0;c[e>>2]=0;c[b+8>>2]=0;i=kR(521)|0;c[e>>2]=i;c[b>>2]=i;c[b+8>>2]=i+521;j=521;k=i;do{a[k>>0]=0;k=(c[e>>2]|0)+1|0;c[e>>2]=k;j=j+-1|0}while((j|0)!=0);c[g>>2]=0;o=0;j=_(101,c[c[h>>2]>>2]|0,3)|0;k=o;o=0;a:do if(k&1)m=19;else{b:do if(j){o=0;i=_(101,c[c[d>>2]>>2]|0,3)|0;n=o;o=0;if(n&1){m=19;break a}if(i){i=c[(c[c[h>>2]>>2]|0)+4>>2]|0;n=c[(c[c[d>>2]>>2]|0)+4>>2]|0;p=i+136|0;o=0;q=Z(213,p|0)|0;r=o;o=0;do if(!(r&1)){if(q|0){s=Ja(24)|0;t=fo()|0;o=0;oa(40,s|0,3,t|0,67408);t=o;o=0;if(t&1){t=Pa()|0;u=z;Sa(s|0);v=t;w=u;break a}else{o=0;na(72,s|0,4424,56);o=0;break}}s=n+124|0;o=0;u=_(102,s|0,0)|0;t=o;o=0;if(!(t&1)){if(!u){u=Ja(24)|0;t=fo()|0;o=0;oa(40,u|0,3,t|0,67451);t=o;o=0;if(t&1){t=Pa()|0;x=z;Sa(u|0);v=t;w=x;break a}else{o=0;na(72,u|0,4424,56);o=0;break}}if((c[i>>2]|0)!=(c[n>>2]|0)){u=Ja(24)|0;x=fo()|0;o=0;oa(40,u|0,3,x|0,67496);x=o;o=0;if(x&1){x=Pa()|0;t=z;Sa(u|0);v=x;w=t;break a}else{o=0;na(72,u|0,4424,56);o=0;break}}o=0;u=Z(209,308)|0;t=o;o=0;if(t&1){t=Qa(0)|0;Id(t)}ET(u|0,0,308)|0;o=0;la(285,u|0);t=o;o=0;if(t&1){t=Qa(0)|0;mR(u);Id(t)}o=0;t=_(103,u|0,i|0)|0;x=o;o=0;do if(!(x&1)){if((t|0)<=-1){y=Ja(24)|0;A=xr()|0;o=0;na(71,y|0,t|0,A|0);A=o;o=0;if(A&1){A=Pa()|0;B=z;Sa(y|0);C=B;D=A;break}else{o=0;na(72,y|0,4424,56);o=0;m=63;break}}o=0;y=_(104,u+172|0,p|0)|0;A=o;o=0;if(!(A&1)){if((y|0)<=-1){A=Ja(24)|0;B=xr()|0;o=0;na(71,A|0,y|0,B|0);B=o;o=0;if(B&1){B=Pa()|0;y=z;Sa(A|0);C=y;D=B;break}else{o=0;na(72,A|0,4424,56);o=0;m=63;break}}o=0;A=_(104,u+136|0,n+136|0)|0;B=o;o=0;if(B&1){m=63;break}if((A|0)<=-1){B=Ja(24)|0;y=xr()|0;o=0;na(71,B|0,A|0,y|0);y=o;o=0;if(y&1){y=Pa()|0;A=z;Sa(B|0);C=A;D=y;break}else{o=0;na(72,B|0,4424,56);o=0;m=63;break}}o=0;B=_(105,u+124|0,s|0)|0;y=o;o=0;if(y&1){m=63;break}if((B|0)<=-1){y=Ja(24)|0;A=xr()|0;o=0;na(71,y|0,B|0,A|0);A=o;o=0;if(A&1){A=Pa()|0;B=z;Sa(y|0);C=B;D=A;break}else{o=0;na(72,y|0,4424,56);o=0;m=63;break}}y=c[b>>2]|0;o=0;A=ea(51,u|0,g|0,y|0,(c[e>>2]|0)-y|0,88,c[(c[h>>2]|0)+8>>2]|0)|0;y=o;o=0;if(y&1){m=63;break}if((A|0)>-1){o=0;la(286,u|0);y=o;o=0;if(y&1){y=Qa(0)|0;mR(u);Id(y)}else{mR(u);E=e;break b}}else{y=Ja(24)|0;B=xr()|0;o=0;na(71,y|0,A|0,B|0);B=o;o=0;if(B&1){B=Pa()|0;A=z;Sa(y|0);C=A;D=B;break}else{o=0;na(72,y|0,4424,56);o=0;m=63;break}}}else m=63}else m=63;while(0);if((m|0)==63){s=Pa()|0;C=z;D=s}o=0;la(286,u|0);s=o;o=0;if(s&1){s=Qa(0)|0;mR(u);Id(s)}else{mR(u);v=D;w=C;break a}}}while(0);n=Pa()|0;v=n;w=z;break a}else m=67}else m=67;while(0);c:do if((m|0)==67){o=0;n=_(101,c[c[h>>2]>>2]|0,7)|0;p=o;o=0;if(p&1){m=19;break a}if(n|0){o=0;n=_(101,c[c[d>>2]>>2]|0,7)|0;p=o;o=0;if(p&1){m=19;break a}if(n|0){n=c[(c[c[h>>2]>>2]|0)+4>>2]|0;p=c[(c[c[d>>2]>>2]|0)+4>>2]|0;o=0;i=Z(214,c[n>>2]|0)|0;q=o;o=0;do if(!(q&1)?(c[g>>2]=i,o=0,r=aa(41,n|0,p|0,c[b>>2]|0,i|0)|0,s=o,o=0,!(s&1)):0){if((r|0)>-1){E=e;break c}s=Ja(24)|0;t=xr()|0;o=0;na(71,s|0,r|0,t|0);t=o;o=0;if(t&1){t=Pa()|0;r=z;Sa(s|0);F=r;G=t;break}else{o=0;na(72,s|0,4424,56);o=0;m=78;break}}else m=78;while(0);if((m|0)==78){i=Pa()|0;F=z;G=i}v=G;w=F;break a}}i=Ja(24)|0;p=fo()|0;o=0;oa(40,i|0,16,p|0,67563);p=o;o=0;if(p&1){p=Pa()|0;n=z;Sa(i|0);v=p;w=n;break a}else{o=0;na(72,i|0,4424,56);o=0;m=19;break a}}while(0);i=c[g>>2]|0;n=c[E>>2]|0;p=c[b>>2]|0;q=n-p|0;s=p;p=n;if(i>>>0>q>>>0){o=0;ma(149,b|0,i-q|0);n=o;o=0;if(n&1){m=19;break}l=f;return}if(i>>>0>=q>>>0){l=f;return}q=s+i|0;if((q|0)==(p|0)){l=f;return}c[e>>2]=q;l=f;return}while(0);if((m|0)==19){m=Pa()|0;v=m;w=z}w=c[b>>2]|0;if(!w)$a(v|0);if((c[e>>2]|0)!=(w|0))c[e>>2]=w;mR(w);$a(v|0)}function Vk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=b+8|0;f=c[e>>2]|0;g=b+4|0;h=c[g>>2]|0;if((f-h|0)>>>0>=d>>>0){i=d;j=h;do{a[j>>0]=0;j=(c[g>>2]|0)+1|0;c[g>>2]=j;i=i+-1|0}while((i|0)!=0);return}i=c[b>>2]|0;j=h-i|0;h=j+d|0;if((h|0)<0)CP(b);k=f-i|0;i=k<<1;f=k>>>0<1073741823?(i>>>0<h>>>0?h:i):2147483647;if(!f)l=0;else l=kR(f)|0;i=l+j|0;j=l+f|0;f=d;d=i;l=i;do{a[l>>0]=0;l=d+1|0;d=l;f=f+-1|0}while((f|0)!=0);f=c[b>>2]|0;l=(c[g>>2]|0)-f|0;h=i+(0-l)|0;if((l|0)>0)CT(h|0,f|0,l|0)|0;c[b>>2]=h;c[g>>2]=d;c[e>>2]=j;if(!f)return;mR(f);return}function Wk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0;e=l;l=l+16|0;f=e;g=d+4|0;if(!(Uz(c[c[g>>2]>>2]|0)|0)){h=Ja(24)|0;o=0;ma(143,h|0,14);i=o;o=0;if(i&1){i=Pa()|0;Sa(h|0);$a(i|0)}else Xa(h|0,4424,56)}h=Xk(d,0)|0;c[f>>2]=0;d=f+4|0;c[d>>2]=0;c[f+8>>2]=0;do if(!h){j=0;k=0}else{if((h|0)>=0){o=0;i=Z(209,h|0)|0;m=o;o=0;if(!(m&1)){c[d>>2]=i;c[f>>2]=i;c[f+8>>2]=i+h;m=h;n=i;do{a[n>>0]=0;n=(c[d>>2]|0)+1|0;c[d>>2]=n;m=m+-1|0}while((m|0)!=0);j=c[f>>2]|0;k=n;break}}else{o=0;la(271,f|0);o=0}m=Pa()|0;i=c[f>>2]|0;if(!i)$a(m|0);if((c[d>>2]|0)!=(i|0))c[d>>2]=i;mR(i);$a(m|0)}while(0);o=0;h=$(93,c[c[g>>2]>>2]|0,j|0,k-j|0)|0;j=o;o=0;do if(j&1)p=32;else{if((h|0)<=-1){k=Ja(24)|0;g=xr()|0;o=0;na(71,k|0,h|0,g|0);g=o;o=0;if(g&1){g=Pa()|0;m=z;Sa(k|0);q=m;r=g;break}else{o=0;na(72,k|0,4424,56);o=0;p=32;break}}k=c[d>>2]|0;c[b>>2]=0;g=b+4|0;c[g>>2]=0;c[b+8>>2]=0;if(h|0){o=0;m=Z(209,h|0)|0;i=o;o=0;if(i&1){p=32;break}c[g>>2]=m;c[b>>2]=m;i=m+h|0;c[b+8>>2]=i;s=k+(0-h)|0;t=m;while(1){a[t>>0]=a[s>>0]|0;s=s+1|0;if((s|0)==(k|0))break;else t=t+1|0}c[g>>2]=i}t=c[f>>2]|0;if(!t){l=e;return}if((c[d>>2]|0)!=(t|0))c[d>>2]=t;mR(t);l=e;return}while(0);if((p|0)==32){p=Pa()|0;q=z;r=p}p=c[f>>2]|0;if(!p)$a(r|0);if((c[d>>2]|0)!=(p|0))c[d>>2]=p;mR(p);$a(r|0)}function Xk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0;e=l;l=l+16|0;f=e;g=b+4|0;b=c[c[g>>2]>>2]|0;h=(((Tz(b)|0)+7|0)>>>3)+1|0;switch(Uz(b)|0){case 7:case 2:case 3:case 4:case 8:{i=(h*3|0)+46|0;j=i+d|0;l=e;return j|0}default:{}}switch(Uz(b)|0){case 1:case 5:case 6:{i=(h<<1)+45+((h>>>1)*5|0)|0;j=i+d|0;l=e;return j|0}default:{}}j=Ja(24)|0;o=0;e=Z(215,c[c[g>>2]>>2]|0)|0;g=o;o=0;do if(!(g&1)){do switch(e|0){case 0:{d=f+4|0;i=d;c[i>>2]=0;c[i+4>>2]=0;a[f+11>>0]=4;c[f>>2]=1162760014;k=d;break}case 1:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=3;a[f>>0]=a[84083]|0;a[f+1>>0]=a[84084]|0;a[f+2>>0]=a[84085]|0;k=f+3|0;break}case 2:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=5;a[f>>0]=a[66594]|0;a[f+1>>0]=a[66595]|0;a[f+2>>0]=a[66596]|0;a[f+3>>0]=a[66597]|0;a[f+4>>0]=a[66598]|0;k=f+5|0;break}case 3:{d=f+8|0;c[d>>2]=0;a[f+11>>0]=8;i=f;c[i>>2]=1162560325;c[i+4>>2]=1212440409;k=d;break}case 4:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=5;a[f>>0]=a[84116]|0;a[f+1>>0]=a[84117]|0;a[f+2>>0]=a[84118]|0;a[f+3>>0]=a[84119]|0;a[f+4>>0]=a[84120]|0;k=f+5|0;break}case 5:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=7;a[f>>0]=a[66600]|0;a[f+1>>0]=a[66601]|0;a[f+2>>0]=a[66602]|0;a[f+3>>0]=a[66603]|0;a[f+4>>0]=a[66604]|0;a[f+5>>0]=a[66605]|0;a[f+6>>0]=a[66606]|0;k=f+7|0;break}case 6:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=10;m=f;n=66608;p=m+10|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));k=f+10|0;break}case 7:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=6;a[f>>0]=a[85102]|0;a[f+1>>0]=a[85103]|0;a[f+2>>0]=a[85104]|0;a[f+3>>0]=a[85105]|0;a[f+4>>0]=a[85106]|0;a[f+5>>0]=a[85107]|0;k=f+6|0;break}case 8:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=7;a[f>>0]=a[85109]|0;a[f+1>>0]=a[85110]|0;a[f+2>>0]=a[85111]|0;a[f+3>>0]=a[85112]|0;a[f+4>>0]=a[85113]|0;a[f+5>>0]=a[85114]|0;a[f+6>>0]=a[85115]|0;k=f+7|0;break}default:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=9;m=f;n=75512;p=m+9|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));k=f+9|0}}while(0);a[k>>0]=0;d=fo()|0;o=0;oa(37,j|0,16,d|0,f|0);d=o;o=0;if(d&1)q=1;else{o=0;na(72,j|0,4424,56);o=0;q=0}d=Pa()|0;i=z;if((a[f+11>>0]|0)<0){mR(c[f>>2]|0);if(q){r=i;s=d;break}else{t=i;u=d}$a(u|0)}else{if(q){r=i;s=d;break}else{t=i;u=d}$a(u|0)}}else{d=Pa()|0;r=z;s=d}while(0);Sa(j|0);t=r;u=s;$a(u|0);return 0}function Yk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0;e=l;l=l+16|0;f=e;g=d+4|0;if(!(Uz(c[c[g>>2]>>2]|0)|0)){h=Ja(24)|0;o=0;ma(143,h|0,14);i=o;o=0;if(i&1){i=Pa()|0;Sa(h|0);$a(i|0)}else Xa(h|0,4424,56)}h=((Xk(d,0)|0)<<1)+80|0;c[f>>2]=0;d=f+4|0;c[d>>2]=0;c[f+8>>2]=0;do if(!h){j=0;k=0}else{if((h|0)>=0){o=0;i=Z(209,h|0)|0;m=o;o=0;if(!(m&1)){c[d>>2]=i;c[f>>2]=i;c[f+8>>2]=i+h;m=h;n=i;do{a[n>>0]=0;n=(c[d>>2]|0)+1|0;c[d>>2]=n;m=m+-1|0}while((m|0)!=0);j=c[f>>2]|0;k=n;break}}else{o=0;la(271,f|0);o=0}m=Pa()|0;i=c[f>>2]|0;if(!i)$a(m|0);if((c[d>>2]|0)!=(i|0))c[d>>2]=i;mR(i);$a(m|0)}while(0);o=0;h=$(94,c[c[g>>2]>>2]|0,j|0,k-j|0)|0;j=o;o=0;do if(!(j&1)){if((h|0)<=-1){k=Ja(24)|0;g=xr()|0;o=0;na(71,k|0,h|0,g|0);g=o;o=0;if(g&1){g=Pa()|0;m=z;Sa(k|0);p=m;q=g;break}else{o=0;na(72,k|0,4424,56);o=0;r=28;break}}o=0;na(75,b|0,f|0,h|0);k=o;o=0;if(!(k&1)){k=c[f>>2]|0;if(!k){l=e;return}if((c[d>>2]|0)!=(k|0))c[d>>2]=k;mR(k);l=e;return}else r=28}else r=28;while(0);if((r|0)==28){r=Pa()|0;p=z;q=r}r=c[f>>2]|0;if(!r)$a(q|0);if((c[d>>2]|0)!=(r|0))c[d>>2]=r;mR(r);$a(q|0)}function Zk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;if(e|0){e=Ja(24)|0;o=0;na(73,e|0,3,67645);f=o;o=0;if(f&1){f=Pa()|0;Sa(e|0);$a(f|0)}else Xa(e|0,4424,56)}e=c[d>>2]|0;f=c[d+4>>2]|0;a:do if((e|0)==(f|0))g=e;else{d=e;while(1){if(!(a[d>>0]|0)){g=d;break a}d=d+1|0;if((d|0)==(f|0)){g=f;break}}}while(0);c[b>>2]=0;f=b+4|0;c[f>>2]=0;c[b+8>>2]=0;d=g-e|0;if(!d)return;if((d|0)>=0){o=0;h=Z(209,d|0)|0;i=o;o=0;if(!(i&1)){c[f>>2]=h;c[b>>2]=h;c[b+8>>2]=h+d;if((e|0)==(g|0))return;else{j=e;k=h}do{a[k>>0]=a[j>>0]|0;j=j+1|0;k=(c[f>>2]|0)+1|0;c[f>>2]=k}while((j|0)!=(g|0));return}}else{o=0;la(271,b|0);o=0}g=Pa()|0;j=c[b>>2]|0;if(!j)$a(g|0);if((c[f>>2]|0)!=(j|0))c[f>>2]=j;mR(j);$a(g|0)}function _k(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=l;l=l+32|0;g=f+12|0;h=f;i=d+4|0;if(!(Uz(c[c[i>>2]>>2]|0)|0)){j=Ja(24)|0;o=0;ma(143,j|0,14);k=o;o=0;if(k&1){k=Pa()|0;Sa(j|0);$a(k|0)}else Xa(j|0,4424,56)}c[g>>2]=0;j=g+4|0;c[j>>2]=0;c[g+8>>2]=0;k=e+4|0;a:do if((c[e>>2]|0)==(c[k>>2]|0)){o=0;m=_(106,d|0,0)|0;n=o;o=0;if(!(n&1)){n=c[j>>2]|0;p=c[g>>2]|0;q=n-p|0;r=p;p=n;if(m>>>0<=q>>>0)if(m>>>0<q>>>0?(s=r+m|0,(s|0)!=(p|0)):0){c[j>>2]=s;t=r;u=s}else{t=r;u=n}else{o=0;ma(149,g|0,m-q|0);q=o;o=0;if(q&1){v=18;break}t=c[g>>2]|0;u=c[j>>2]|0}o=0;q=$(95,c[c[i>>2]>>2]|0,t|0,u-t|0)|0;m=o;o=0;if(!(m&1))if((q|0)<=-1){m=Ja(24)|0;n=xr()|0;o=0;na(71,m|0,q|0,n|0);n=o;o=0;if(n&1){n=Pa()|0;r=z;Sa(m|0);w=r;x=n;v=19;break}else{o=0;na(72,m|0,4424,56);o=0;v=18;break}}else{y=q;v=45}else v=18}else v=18}else{o=0;ma(150,h|0,d|0);q=o;o=0;if(!(q&1)){q=h+4|0;o=0;m=_(106,d|0,(c[q>>2]|0)+64-(c[h>>2]|0)|0)|0;n=o;o=0;do if(!(n&1)){r=c[j>>2]|0;s=c[g>>2]|0;p=r-s|0;A=s;s=r;if(m>>>0<=p>>>0)if(m>>>0<p>>>0?(B=A+m|0,(B|0)!=(s|0)):0){c[j>>2]=B;C=A;D=B}else{C=A;D=r}else{o=0;ma(149,g|0,m-p|0);p=o;o=0;if(p&1){v=39;break}C=c[g>>2]|0;D=c[j>>2]|0}p=c[e>>2]|0;r=c[h>>2]|0;o=0;A=fa(7,c[c[i>>2]>>2]|0,C|0,D-C|0,p|0,(c[k>>2]|0)-p|0,r|0,(c[q>>2]|0)-r|0)|0;r=o;o=0;if(!(r&1)){if((A|0)<=-1){r=Ja(24)|0;p=xr()|0;o=0;na(71,r|0,A|0,p|0);p=o;o=0;if(p&1){p=Pa()|0;B=z;Sa(r|0);E=h;F=B;G=p;break}else{o=0;na(72,r|0,4424,56);o=0;v=39;break}}r=c[h>>2]|0;if(r|0){if((c[q>>2]|0)!=(r|0))c[q>>2]=r;mR(r)}y=A;v=45;break a}else v=39}else v=39;while(0);if((v|0)==39){m=Pa()|0;E=h;F=z;G=m}m=c[E>>2]|0;if(!m){H=F;I=G}else{if((c[q>>2]|0)!=(m|0))c[q>>2]=m;mR(m);H=F;I=G}}else{m=Pa()|0;H=z;I=m}J=H;K=I}while(0);do if((v|0)==45){I=c[j>>2]|0;c[b>>2]=0;H=b+4|0;c[H>>2]=0;c[b+8>>2]=0;if(y|0){o=0;G=Z(209,y|0)|0;F=o;o=0;if(F&1){v=18;break}c[H>>2]=G;c[b>>2]=G;F=G+y|0;c[b+8>>2]=F;E=I+(0-y)|0;h=G;while(1){a[h>>0]=a[E>>0]|0;E=E+1|0;if((E|0)==(I|0))break;else h=h+1|0}c[H>>2]=F}h=c[g>>2]|0;if(!h){l=f;return}if((c[j>>2]|0)!=(h|0))c[j>>2]=h;mR(h);l=f;return}while(0);if((v|0)==18){f=Pa()|0;w=z;x=f;v=19}if((v|0)==19){J=w;K=x}x=c[g>>2]|0;if(!x)$a(K|0);if((c[j>>2]|0)!=(x|0))c[j>>2]=x;mR(x);$a(K|0)}function $k(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=l;l=l+32|0;e=d+12|0;f=d;g=b+4|0;al(f,(c[g>>2]|0)+8|0,16);o=0;na(76,e|0,(c[g>>2]|0)+8|0,4);g=o;o=0;if(!(g&1)){g=c[e>>2]|0;b=c[g>>2]|0;if(g|0){h=e+4|0;if((c[h>>2]|0)!=(g|0))c[h>>2]=g;mR(g)}o=0;na(77,a|0,f|0,((b>>>0)%5120|0)+3072|0);b=o;o=0;if(!(b&1)){b=c[f>>2]|0;if(!b){l=d;return}a=f+4|0;if((c[a>>2]|0)!=(b|0))c[a>>2]=b;mR(b);l=d;return}}d=Pa()|0;b=c[f>>2]|0;if(!b)$a(d|0);a=f+4|0;if((c[a>>2]|0)!=(b|0))c[a>>2]=b;mR(b);$a(d|0)}function al(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0;e=l;l=l+1040|0;f=e+4|0;g=e+8|0;h=e;c[a>>2]=0;i=a+4|0;c[i>>2]=0;c[a+8>>2]=0;j=a+8|0;do if(d){o=0;k=Z(209,d|0)|0;m=o;o=0;if(m&1){m=Pa()|0;n=z;p=m;break}else{m=k;c[a>>2]=m;c[i>>2]=m;c[j>>2]=k+d;q=4;break}}else q=4;while(0);do if((q|0)==4){j=d>>>0<1024?d:1024;k=g+j|0;if(!d){l=e;return}while(1){o=0;r=$(88,c[b>>2]|0,g|0,j|0)|0;m=o;o=0;if(m&1){q=13;break}if((r|0)<=-1){q=7;break}c[h>>2]=c[i>>2];o=0;c[f>>2]=c[h>>2];aa(42,a|0,f|0,g|0,k|0)|0;m=o;o=0;if(m&1){q=14;break}if(((c[i>>2]|0)-(c[a>>2]|0)|0)>>>0>=d>>>0){q=15;break}}if((q|0)==7){k=Ja(24)|0;j=xr()|0;o=0;na(71,k|0,r|0,j|0);j=o;o=0;if(j&1){j=Pa()|0;m=z;Sa(k|0);n=m;p=j;break}else{o=0;na(72,k|0,4424,56);o=0;k=Pa()|0;n=z;p=k;break}}else if((q|0)==13){k=Pa()|0;n=z;p=k;break}else if((q|0)==14){k=Pa()|0;n=z;p=k;break}else if((q|0)==15){l=e;return}}while(0);e=c[a>>2]|0;if(!e)$a(p|0);if((c[i>>2]|0)!=(e|0))c[i>>2]=e;mR(e);$a(p|0)}function bl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;g=c[b>>2]|0;h=g;i=(c[d>>2]|0)-h|0;d=g+i|0;j=f;k=e;l=j-k|0;if((l|0)<=0){m=d;return m|0}n=b+8|0;o=c[n>>2]|0;p=b+4|0;q=c[p>>2]|0;r=q;if((l|0)<=(o-r|0)){s=r-d|0;if((l|0)>(s|0)){t=e+s|0;u=j-t|0;if((u|0)>0){CT(q|0,t|0,u|0)|0;j=(c[p>>2]|0)+u|0;c[p>>2]=j;v=j}else v=q;if((s|0)>0){w=t;x=v}else{m=d;return m|0}}else{w=f;x=q}v=x-(d+l)|0;t=d+v|0;if(t>>>0<q>>>0){s=t;t=x;do{a[t>>0]=a[s>>0]|0;s=s+1|0;t=(c[p>>2]|0)+1|0;c[p>>2]=t}while((s|0)!=(q|0))}if(v|0)DT(x+(0-v)|0,d|0,v|0)|0;v=w-k|0;if(!v){m=d;return m|0}DT(d|0,e|0,v|0)|0;m=d;return m|0}v=r-h+l|0;if((v|0)<0)CP(b);l=o-h|0;h=l<<1;o=l>>>0<1073741823?(h>>>0<v>>>0?v:h):2147483647;h=d;if(!o)y=0;else y=kR(o)|0;v=y+i|0;i=v;l=y+o|0;if((e|0)==(f|0)){z=i;A=g}else{g=e;e=i;i=v;do{a[i>>0]=a[g>>0]|0;i=e+1|0;e=i;g=g+1|0}while((g|0)!=(f|0));z=e;A=c[b>>2]|0}e=h-A|0;f=v+(0-e)|0;if((e|0)>0)CT(f|0,A|0,e|0)|0;e=(c[p>>2]|0)-h|0;if((e|0)>0){h=z;CT(h|0,d|0,e|0)|0;B=h+e|0;C=c[b>>2]|0}else{B=z;C=A}c[b>>2]=f;c[p>>2]=B;c[n>>2]=l;if(!C){m=v;return m|0}mR(C);m=v;return m|0}function cl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;e=l;l=l+32|0;f=e+12|0;g=e;h=b+4|0;if(!(Uz(c[c[h>>2]>>2]|0)|0)){i=Ja(24)|0;o=0;ma(143,i|0,14);j=o;o=0;if(j&1){j=Pa()|0;Sa(i|0);$a(j|0)}else Xa(i|0,4424,56)}c[f>>2]=0;i=f+4|0;c[i>>2]=0;c[f+8>>2]=0;j=d+4|0;a:do if((c[d>>2]|0)==(c[j>>2]|0)){o=0;k=_(106,b|0,0)|0;m=o;o=0;if(!(m&1)){m=(k<<1)+80|0;k=c[i>>2]|0;n=c[f>>2]|0;p=k-n|0;q=n;n=k;if(m>>>0<=p>>>0)if(m>>>0<p>>>0?(r=q+m|0,(r|0)!=(n|0)):0){c[i>>2]=r;s=q;t=r}else{s=q;t=k}else{o=0;ma(149,f|0,m-p|0);p=o;o=0;if(p&1){u=18;break}s=c[f>>2]|0;t=c[i>>2]|0}o=0;p=$(96,c[c[h>>2]>>2]|0,s|0,t-s|0)|0;m=o;o=0;if(!(m&1))if((p|0)<=-1){m=Ja(24)|0;k=xr()|0;o=0;na(71,m|0,p|0,k|0);k=o;o=0;if(k&1){k=Pa()|0;q=z;Sa(m|0);v=q;w=k;u=19;break}else{o=0;na(72,m|0,4424,56);o=0;u=18;break}}else{x=p;u=45}else u=18}else u=18}else{o=0;ma(150,g|0,b|0);p=o;o=0;if(!(p&1)){p=g+4|0;o=0;m=_(106,b|0,(c[p>>2]|0)+64-(c[g>>2]|0)|0)|0;k=o;o=0;do if(!(k&1)){q=(m<<1)+80|0;r=c[i>>2]|0;n=c[f>>2]|0;y=r-n|0;A=n;n=r;if(q>>>0<=y>>>0)if(q>>>0<y>>>0?(B=A+q|0,(B|0)!=(n|0)):0){c[i>>2]=B;C=A;D=B}else{C=A;D=r}else{o=0;ma(149,f|0,q-y|0);y=o;o=0;if(y&1){u=39;break}C=c[f>>2]|0;D=c[i>>2]|0}y=c[d>>2]|0;q=c[g>>2]|0;o=0;r=fa(8,c[c[h>>2]>>2]|0,C|0,D-C|0,y|0,(c[j>>2]|0)-y|0,q|0,(c[p>>2]|0)-q|0)|0;q=o;o=0;if(!(q&1)){if((r|0)<=-1){q=Ja(24)|0;y=xr()|0;o=0;na(71,q|0,r|0,y|0);y=o;o=0;if(y&1){y=Pa()|0;A=z;Sa(q|0);E=g;F=A;G=y;break}else{o=0;na(72,q|0,4424,56);o=0;u=39;break}}q=c[g>>2]|0;if(q|0){if((c[p>>2]|0)!=(q|0))c[p>>2]=q;mR(q)}x=r;u=45;break a}else u=39}else u=39;while(0);if((u|0)==39){m=Pa()|0;E=g;F=z;G=m}m=c[E>>2]|0;if(!m){H=F;I=G}else{if((c[p>>2]|0)!=(m|0))c[p>>2]=m;mR(m);H=F;I=G}}else{m=Pa()|0;H=z;I=m}J=H;K=I}while(0);if((u|0)==45){o=0;na(75,a|0,f|0,x|0);x=o;o=0;if(x&1)u=18;else{x=c[f>>2]|0;if(!x){l=e;return}if((c[i>>2]|0)!=(x|0))c[i>>2]=x;mR(x);l=e;return}}if((u|0)==18){e=Pa()|0;v=z;w=e;u=19}if((u|0)==19){J=v;K=w}w=c[f>>2]|0;if(!w)$a(K|0);if((c[i>>2]|0)!=(w|0))c[i>>2]=w;mR(w);$a(K|0)}function dl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;f=l;l=l+16|0;g=f+5|0;h=f+4|0;i=f;j=d+4|0;if(!(Uz(c[c[j>>2]>>2]|0)|0)){d=Ja(24)|0;o=0;ma(143,d|0,14);k=o;o=0;if(k&1){k=Pa()|0;Sa(d|0);$a(k|0)}else Xa(d|0,4424,56)}d=c[j>>2]|0;j=c[d>>2]|0;k=c[d+8>>2]|0;c[b>>2]=0;d=b+4|0;c[d>>2]=0;c[b+8>>2]=0;m=kR(1024)|0;c[b>>2]=m;n=m+1024|0;c[b+8>>2]=n;ET(m|0,0,1024)|0;c[d>>2]=n;c[i>>2]=0;p=c[e>>2]|0;o=0;q=ga(21,j|0,p|0,(c[e+4>>2]|0)-p|0,m|0,i|0,1024,88,k|0)|0;k=o;o=0;do if(!(k&1)?(o=0,a[g>>0]=a[h>>0]|0,_(107,q|0,g|0)|0,p=o,o=0,!(p&1)):0){p=c[i>>2]|0;if(p>>>0>1024){o=0;ma(149,b|0,p+-1024|0);e=o;o=0;if(e&1)break;l=f;return}if((p|0)==1024){l=f;return}e=m+p|0;if((e|0)==(n|0)){l=f;return}c[d>>2]=e;l=f;return}while(0);f=Pa()|0;n=c[b>>2]|0;if(!n)$a(f|0);if((c[d>>2]|0)!=(n|0))c[d>>2]=n;mR(n);$a(f|0)}function el(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;d=l;l=l+32|0;e=d;if((b|0)>-1){l=d;return b|0}d=Ja(24)|0;f=xr()|0;o=0;na(71,d|0,b|0,f|0);f=o;o=0;if(f&1){f=Qa(0)|0;Sa(d|0);g=f}else{o=0;na(72,d|0,4424,56);o=0;d=Qa(0)|0;g=d}Ka(g|0)|0;g=fo()|0;o=0;na(71,e|0,16,g|0);g=o;o=0;if(g&1){g=Pa()|0;h=z;i=g}else{o=0;ma(144,e|0,0);o=0;g=Pa()|0;d=z;c[e>>2]=10036;f=e+12|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);h=d;i=g}o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}else $a(i|0);return 0}function fl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;f=l;l=l+16|0;g=f+5|0;h=f+4|0;i=f;j=d+4|0;if(!(Uz(c[c[j>>2]>>2]|0)|0)){d=Ja(24)|0;o=0;ma(143,d|0,14);k=o;o=0;if(k&1){k=Pa()|0;Sa(d|0);$a(k|0)}else Xa(d|0,4424,56)}d=c[j>>2]|0;j=c[d>>2]|0;k=c[d+8>>2]|0;c[b>>2]=0;d=b+4|0;c[d>>2]=0;c[b+8>>2]=0;m=kR(1024)|0;c[b>>2]=m;n=m+1024|0;c[b+8>>2]=n;ET(m|0,0,1024)|0;c[d>>2]=n;c[i>>2]=0;p=c[e>>2]|0;o=0;q=ga(22,j|0,p|0,(c[e+4>>2]|0)-p|0,m|0,i|0,1024,88,k|0)|0;k=o;o=0;do if(!(k&1)?(o=0,a[g>>0]=a[h>>0]|0,_(107,q|0,g|0)|0,p=o,o=0,!(p&1)):0){p=c[i>>2]|0;if(p>>>0>1024){o=0;ma(149,b|0,p+-1024|0);e=o;o=0;if(e&1)break;l=f;return}if((p|0)==1024){l=f;return}e=m+p|0;if((e|0)==(n|0)){l=f;return}c[d>>2]=e;l=f;return}while(0);f=Pa()|0;n=c[b>>2]|0;if(!n)$a(f|0);if((c[d>>2]|0)!=(n|0))c[d>>2]=n;mR(n);$a(f|0)}function gl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0;g=l;l=l+1056|0;h=g+8|0;i=g+32|0;j=g;k=d+4|0;if(!(Uz(c[c[k>>2]>>2]|0)|0)){d=Ja(24)|0;o=0;ma(143,d|0,14);m=o;o=0;if(m&1){m=Pa()|0;Sa(d|0);$a(m|0)}else Xa(d|0,4424,56)}c[j>>2]=0;if(((Uz(c[c[k>>2]>>2]|0)|0)!=1?(Uz(c[c[k>>2]>>2]|0)|0)!=5:0)?(Uz(c[c[k>>2]>>2]|0)|0)!=6:0){n=0;p=0;q=c[k>>2]|0}else{d=c[k>>2]|0;n=88;p=c[d+8>>2]|0;q=d}d=c[e>>2]|0;k=Pz(c[q>>2]|0,f,d,(c[e+4>>2]|0)-d|0,i,j,n,p)|0;if((k|0)<=-1){p=Ja(24)|0;n=xr()|0;o=0;na(71,p|0,k|0,n|0);n=o;o=0;if(n&1){n=Qa(0)|0;Sa(p|0);r=n}else{o=0;na(72,p|0,4424,56);o=0;p=Qa(0)|0;r=p}Ka(r|0)|0;r=fo()|0;o=0;na(71,h|0,16,r|0);r=o;o=0;if(r&1){r=Pa()|0;s=z;t=r}else{o=0;ma(144,h|0,0);o=0;r=Pa()|0;p=z;c[h>>2]=10036;n=h+12|0;if((a[n+11>>0]|0)<0)mR(c[n>>2]|0);s=p;t=r}o=0;ka(3);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)}else $a(t|0)}t=c[j>>2]|0;c[b>>2]=0;j=b+4|0;c[j>>2]=0;c[b+8>>2]=0;if(!t){l=g;return}if((t|0)>=0){o=0;r=Z(209,t|0)|0;p=o;o=0;if(!(p&1)){c[b>>2]=r;p=r+t|0;c[b+8>>2]=p;CT(r|0,i|0,t|0)|0;c[j>>2]=p;l=g;return}}else{o=0;la(271,b|0);o=0}g=Pa()|0;p=c[b>>2]|0;if(!p)$a(g|0);if((c[j>>2]|0)!=(p|0))c[j>>2]=p;mR(p);$a(g|0)}function hl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=a+4|0;if(Uz(c[c[f>>2]>>2]|0)|0){a=c[b>>2]|0;g=c[d>>2]|0;return (Oz(c[c[f>>2]>>2]|0,e,a,(c[b+4>>2]|0)-a|0,g,(c[d+4>>2]|0)-g|0)|0)==0|0}g=Ja(24)|0;o=0;ma(143,g|0,14);d=o;o=0;if(d&1){d=Pa()|0;Sa(g|0);$a(d|0)}else Xa(g|0,4424,56);return 0}function il(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;if(!(Uz(c[c[b>>2]>>2]|0)|0)){a=Ja(24)|0;o=0;ma(143,a|0,14);d=o;o=0;if(d&1){d=Pa()|0;Sa(a|0);$a(d|0)}else Xa(a|0,4424,56)}a=(Nz(c[c[b>>2]>>2]|0,1)|0)==0;d=c[c[b>>2]>>2]|0;if(!a){e=jl(Tz(d)|0,0,0)|0;return e|0}a=(Nz(d,2)|0)==0;d=c[c[b>>2]>>2]|0;if(!a){e=jl(0,c[c[d+4>>2]>>2]|0,0)|0;return e|0}if((Nz(d,7)|0)==0?(Nz(c[c[b>>2]>>2]|0,8)|0)==0:0){d=Ja(24)|0;o=0;ma(143,d|0,9);a=o;o=0;if(a&1){a=Pa()|0;Sa(d|0);$a(a|0)}else Xa(d|0,4424,56)}e=jl(0,0,AC(c[c[(c[c[b>>2]>>2]|0)+4>>2]>>2]|0)|0)|0;return e|0}function jl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;a:do switch(a|0){case 0:{do switch(b|0){case 1:{d=7;break a;break}case 0:{switch(c|0){case 1:{d=19;break a;break}case 0:{e=Ja(24)|0;o=0;na(73,e|0,3,67802);f=o;o=0;if(!(f&1))Xa(e|0,4424,56);f=Pa()|0;g=z;Sa(e|0);h=g;i=f;$a(i|0);break}case 2:{d=20;break a;break}default:{f=Ja(24)|0;o=0;na(73,f|0,3,67766);g=o;o=0;if(!(g&1))Xa(f|0,4424,56);g=Pa()|0;e=z;Sa(f|0);h=e;i=g;$a(i|0)}}break}case 2:{d=8;break a;break}case 3:{d=9;break a;break}case 4:{d=10;break a;break}case 5:{d=11;break a;break}case 6:{d=12;break a;break}case 7:{d=13;break a;break}case 8:{d=14;break a;break}case 10:{d=15;break a;break}case 11:{d=16;break a;break}case 12:{d=17;break a;break}case 9:{d=18;break a;break}default:{g=Ja(24)|0;o=0;na(73,g|0,3,67735);e=o;o=0;if(!(e&1))Xa(g|0,4424,56);e=Pa()|0;f=z;Sa(g|0);h=f;i=e;$a(i|0)}}while(0);break}case 256:{d=0;break}case 512:{d=1;break}case 1024:{d=2;break}case 2048:{d=3;break}case 3072:{d=4;break}case 4096:{d=5;break}case 8192:{d=6;break}default:{e=Ja(24)|0;o=0;na(73,e|0,3,67699);f=o;o=0;if(!(f&1))Xa(e|0,4424,56);f=Pa()|0;g=z;Sa(e|0);h=g;i=f;$a(i|0)}}while(0);return d|0}function kl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;e=l;l=l+32|0;f=e;switch(d|0){case 6:case 5:case 4:case 3:case 2:case 1:case 0:{d=Ja(24)|0;g=f+4|0;c[g>>2]=0;c[g+4>>2]=0;g=f+11|0;a[g>>0]=3;a[f>>0]=a[84083]|0;a[f+1>>0]=a[84084]|0;a[f+2>>0]=a[84085]|0;a[f+3>>0]=0;h=fo()|0;o=0;oa(37,d|0,16,h|0,f|0);h=o;o=0;if(h&1)i=1;else{o=0;na(72,d|0,4424,56);o=0;i=0}h=Pa()|0;j=z;if((a[g>>0]|0)<0)mR(c[f>>2]|0);if(!i){k=j;m=h;$a(m|0)}Sa(d|0);k=j;m=h;$a(m|0);break}case 18:case 17:case 16:case 15:case 14:case 13:case 12:case 11:case 10:case 9:case 8:case 7:{h=Ja(24)|0;o=0;ma(143,h|0,16);j=o;o=0;if(!(j&1))Xa(h|0,4424,56);j=Pa()|0;d=z;Sa(h|0);k=d;m=j;$a(m|0);break}case 19:{n=1;break}case 20:{n=2;break}default:{m=Ja(24)|0;o=0;na(73,m|0,3,66737);j=o;o=0;if(j&1){j=Pa()|0;Sa(m|0);$a(j|0)}else Xa(m|0,4424,56)}}m=b+4|0;b=c[m>>2]|0;Kz(c[b>>2]|0);j=kR(8)|0;d=j;c[d>>2]=0;c[d+4>>2]=0;d=c[b>>2]|0;c[b>>2]=j;if(!d)p=j;else{mR(d);p=c[b>>2]|0}Jz(p);lk(c[b>>2]|0,(n|0)==1?7:(n|0)==2?8:0);n=c[c[m>>2]>>2]|0;m=c[n+4>>2]|0;b=Uz(n)|0;n=rC(m,pC((b|0)==7?1:(b|0)==8?2:0)|0)|0;if((n|0)>-1){l=e;return}e=Ja(24)|0;b=xr()|0;o=0;na(71,e|0,n|0,b|0);b=o;o=0;if(b&1){b=Qa(0)|0;Sa(e|0);q=b}else{o=0;na(72,e|0,4424,56);o=0;e=Qa(0)|0;q=e}Ka(q|0)|0;q=fo()|0;o=0;na(71,f|0,16,q|0);q=o;o=0;if(q&1){q=Pa()|0;r=z;s=q}else{o=0;ma(144,f|0,0);o=0;q=Pa()|0;e=z;c[f>>2]=10036;b=f+12|0;if((a[b+11>>0]|0)<0)mR(c[b>>2]|0);r=e;s=q}o=0;ka(3);q=o;o=0;if(q&1){q=Qa(0)|0;Id(q)}else $a(s|0)}function ll(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=l;l=l+16|0;f=e;g=d+4|0;if(!(Uz(c[c[g>>2]>>2]|0)|0)){d=Ja(24)|0;o=0;ma(143,d|0,14);h=o;o=0;if(h&1){h=Pa()|0;Sa(d|0);$a(h|0)}else Xa(d|0,4424,56)}if((Nz(c[c[g>>2]>>2]|0,7)|0)==0?(Nz(c[c[g>>2]>>2]|0,8)|0)==0:0){d=Ja(24)|0;o=0;h=Z(215,c[c[g>>2]>>2]|0)|0;i=o;o=0;do if(!(i&1)){do switch(h|0){case 0:{j=f+4|0;k=j;c[k>>2]=0;c[k+4>>2]=0;a[f+11>>0]=4;c[f>>2]=1162760014;m=j;break}case 1:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=3;a[f>>0]=a[84083]|0;a[f+1>>0]=a[84084]|0;a[f+2>>0]=a[84085]|0;m=f+3|0;break}case 2:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=5;a[f>>0]=a[66594]|0;a[f+1>>0]=a[66595]|0;a[f+2>>0]=a[66596]|0;a[f+3>>0]=a[66597]|0;a[f+4>>0]=a[66598]|0;m=f+5|0;break}case 3:{j=f+8|0;c[j>>2]=0;a[f+11>>0]=8;k=f;c[k>>2]=1162560325;c[k+4>>2]=1212440409;m=j;break}case 4:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=5;a[f>>0]=a[84116]|0;a[f+1>>0]=a[84117]|0;a[f+2>>0]=a[84118]|0;a[f+3>>0]=a[84119]|0;a[f+4>>0]=a[84120]|0;m=f+5|0;break}case 5:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=7;a[f>>0]=a[66600]|0;a[f+1>>0]=a[66601]|0;a[f+2>>0]=a[66602]|0;a[f+3>>0]=a[66603]|0;a[f+4>>0]=a[66604]|0;a[f+5>>0]=a[66605]|0;a[f+6>>0]=a[66606]|0;m=f+7|0;break}case 6:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=10;n=f;p=66608;q=n+10|0;do{a[n>>0]=a[p>>0]|0;n=n+1|0;p=p+1|0}while((n|0)<(q|0));m=f+10|0;break}case 7:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=6;a[f>>0]=a[85102]|0;a[f+1>>0]=a[85103]|0;a[f+2>>0]=a[85104]|0;a[f+3>>0]=a[85105]|0;a[f+4>>0]=a[85106]|0;a[f+5>>0]=a[85107]|0;m=f+6|0;break}case 8:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=7;a[f>>0]=a[85109]|0;a[f+1>>0]=a[85110]|0;a[f+2>>0]=a[85111]|0;a[f+3>>0]=a[85112]|0;a[f+4>>0]=a[85113]|0;a[f+5>>0]=a[85114]|0;a[f+6>>0]=a[85115]|0;m=f+7|0;break}default:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=9;n=f;p=75512;q=n+9|0;do{a[n>>0]=a[p>>0]|0;n=n+1|0;p=p+1|0}while((n|0)<(q|0));m=f+9|0}}while(0);a[m>>0]=0;j=fo()|0;o=0;oa(37,d|0,16,j|0,f|0);j=o;o=0;if(j&1)r=1;else{o=0;na(72,d|0,4424,56);o=0;r=0}j=Pa()|0;k=z;if((a[f+11>>0]|0)<0){mR(c[f>>2]|0);if(r){s=k;t=j;break}else{u=k;v=j}$a(v|0)}else{if(r){s=k;t=j;break}else{u=k;v=j}$a(v|0)}}else{j=Pa()|0;s=z;t=j}while(0);Sa(d|0);u=s;v=t;$a(v|0)}v=c[(c[c[g>>2]>>2]|0)+4>>2]|0;g=c[v+4>>2]|0;t=CC(c[v>>2]|0)|0;c[b>>2]=0;v=b+4|0;c[v>>2]=0;c[b+8>>2]=0;if(!t){l=e;return}if((t|0)>=0){o=0;s=Z(209,t|0)|0;u=o;o=0;if(!(u&1)){c[v>>2]=s;c[b>>2]=s;u=s+t|0;c[b+8>>2]=u;CT(s|0,g|0,t|0)|0;c[v>>2]=u;l=e;return}}else{o=0;la(271,b|0);o=0}e=Pa()|0;u=c[b>>2]|0;if(!u)$a(e|0);if((c[v>>2]|0)!=(u|0))c[v>>2]=u;mR(u);$a(e|0)}function ml(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=l;l=l+16|0;f=e;g=b+4|0;if(!(Uz(c[c[g>>2]>>2]|0)|0)){b=Ja(24)|0;o=0;ma(143,b|0,14);h=o;o=0;if(h&1){h=Pa()|0;Sa(b|0);$a(h|0)}else Xa(b|0,4424,56)}if((Nz(c[c[g>>2]>>2]|0,7)|0)==0?(Nz(c[c[g>>2]>>2]|0,8)|0)==0:0){b=Ja(24)|0;o=0;h=Z(215,c[c[g>>2]>>2]|0)|0;i=o;o=0;do if(!(i&1)){do switch(h|0){case 0:{j=f+4|0;k=j;c[k>>2]=0;c[k+4>>2]=0;a[f+11>>0]=4;c[f>>2]=1162760014;m=j;break}case 1:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=3;a[f>>0]=a[84083]|0;a[f+1>>0]=a[84084]|0;a[f+2>>0]=a[84085]|0;m=f+3|0;break}case 2:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=5;a[f>>0]=a[66594]|0;a[f+1>>0]=a[66595]|0;a[f+2>>0]=a[66596]|0;a[f+3>>0]=a[66597]|0;a[f+4>>0]=a[66598]|0;m=f+5|0;break}case 3:{j=f+8|0;c[j>>2]=0;a[f+11>>0]=8;k=f;c[k>>2]=1162560325;c[k+4>>2]=1212440409;m=j;break}case 4:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=5;a[f>>0]=a[84116]|0;a[f+1>>0]=a[84117]|0;a[f+2>>0]=a[84118]|0;a[f+3>>0]=a[84119]|0;a[f+4>>0]=a[84120]|0;m=f+5|0;break}case 5:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=7;a[f>>0]=a[66600]|0;a[f+1>>0]=a[66601]|0;a[f+2>>0]=a[66602]|0;a[f+3>>0]=a[66603]|0;a[f+4>>0]=a[66604]|0;a[f+5>>0]=a[66605]|0;a[f+6>>0]=a[66606]|0;m=f+7|0;break}case 6:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=10;n=f;p=66608;q=n+10|0;do{a[n>>0]=a[p>>0]|0;n=n+1|0;p=p+1|0}while((n|0)<(q|0));m=f+10|0;break}case 7:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=6;a[f>>0]=a[85102]|0;a[f+1>>0]=a[85103]|0;a[f+2>>0]=a[85104]|0;a[f+3>>0]=a[85105]|0;a[f+4>>0]=a[85106]|0;a[f+5>>0]=a[85107]|0;m=f+6|0;break}case 8:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=7;a[f>>0]=a[85109]|0;a[f+1>>0]=a[85110]|0;a[f+2>>0]=a[85111]|0;a[f+3>>0]=a[85112]|0;a[f+4>>0]=a[85113]|0;a[f+5>>0]=a[85114]|0;a[f+6>>0]=a[85115]|0;m=f+7|0;break}default:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=9;n=f;p=75512;q=n+9|0;do{a[n>>0]=a[p>>0]|0;n=n+1|0;p=p+1|0}while((n|0)<(q|0));m=f+9|0}}while(0);a[m>>0]=0;j=fo()|0;o=0;oa(37,b|0,16,j|0,f|0);j=o;o=0;if(j&1)r=1;else{o=0;na(72,b|0,4424,56);o=0;r=0}j=Pa()|0;k=z;if((a[f+11>>0]|0)<0){mR(c[f>>2]|0);if(r){s=k;t=j;break}else{u=k;v=j}$a(v|0)}else{if(r){s=k;t=j;break}else{u=k;v=j}$a(v|0)}}else{j=Pa()|0;s=z;t=j}while(0);Sa(b|0);u=s;v=t;$a(v|0)}t=c[(c[c[g>>2]>>2]|0)+4>>2]|0;g=d+4|0;s=(c[g>>2]|0)-(c[d>>2]|0)|0;if((s|0)!=(CC(c[t>>2]|0)|0)){s=Ja(24)|0;o=0;na(73,s|0,3,67844);b=o;o=0;if(!(b&1))Xa(s|0,4424,56);b=Pa()|0;r=z;Sa(s|0);u=r;v=b;$a(v|0)}v=c[d>>2]|0;d=c[g>>2]|0;if((v|0)==(d|0)){l=e;return}g=c[t+4>>2]|0;t=v;while(1){a[g>>0]=a[t>>0]|0;t=t+1|0;if((t|0)==(d|0))break;else g=g+1|0}l=e;return}function nl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=l;l=l+48|0;f=e+16|0;g=e+12|0;h=e;i=c[d>>2]|0;j=d+4|0;k=c[j>>2]|0;if((i|0)==(k|0)){c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;l=e;return}c[g>>2]=0;m=pv(0,0,g,i,k-i|0)|0;if(!((m|0)==-42|(m|0)>-1)){i=Ja(24)|0;k=xr()|0;o=0;na(71,i|0,m|0,k|0);k=o;o=0;if(k&1){k=Qa(0)|0;Sa(i|0);n=k}else{o=0;na(72,i|0,4424,56);o=0;i=Qa(0)|0;n=i}Ka(n|0)|0;n=fo()|0;o=0;na(71,f|0,3,n|0);n=o;o=0;if(n&1){n=Pa()|0;p=z;q=n}else{o=0;ma(144,f|0,0);o=0;n=Pa()|0;i=z;c[f>>2]=10036;k=f+12|0;if((a[k+11>>0]|0)<0)mR(c[k>>2]|0);p=i;q=n}o=0;ka(3);n=o;o=0;if(n&1){n=Qa(0)|0;Id(n)}else $a(q|0)}q=c[g>>2]|0;c[h>>2]=0;n=h+4|0;c[n>>2]=0;c[h+8>>2]=0;do if(!q){r=0;s=0}else{if((q|0)>=0){o=0;i=Z(209,q|0)|0;p=o;o=0;if(!(p&1)){c[n>>2]=i;c[h>>2]=i;c[h+8>>2]=i+q;p=q;k=i;do{a[k>>0]=0;k=(c[n>>2]|0)+1|0;c[n>>2]=k;p=p+-1|0}while((p|0)!=0);r=c[h>>2]|0;s=k;break}}else{o=0;la(271,h|0);o=0}p=Pa()|0;i=c[h>>2]|0;if(!i)$a(p|0);if((c[n>>2]|0)!=(i|0))c[n>>2]=i;mR(i);$a(p|0)}while(0);q=c[d>>2]|0;o=0;d=ca(36,r|0,s-r|0,g|0,q|0,(c[j>>2]|0)-q|0)|0;q=o;o=0;do if(!(q&1)){if((d|0)<=-1){j=Ja(24)|0;r=xr()|0;o=0;na(71,j|0,d|0,r|0);r=o;o=0;if(r&1){r=Qa(0)|0;Sa(j|0);t=r}else{o=0;na(72,j|0,4424,56);o=0;j=Qa(0)|0;t=j}Ka(t|0)|0;j=fo()|0;o=0;na(71,f|0,3,j|0);j=o;o=0;if(j&1){j=Pa()|0;u=z;v=j}else{o=0;ma(144,f|0,0);o=0;j=Pa()|0;r=z;c[f>>2]=10036;s=f+12|0;if((a[s+11>>0]|0)<0)mR(c[s>>2]|0);u=r;v=j}o=0;ka(3);j=o;o=0;if(!(j&1)){w=u;x=v;break}j=Qa(0)|0;Id(j)}j=c[g>>2]|0;r=c[n>>2]|0;s=c[h>>2]|0;p=r-s|0;i=s;s=r;if(j>>>0>p>>>0){o=0;ma(149,h|0,j-p|0);r=o;o=0;if(r&1){y=50;break}}else if(j>>>0<p>>>0?(p=i+j|0,(p|0)!=(s|0)):0)c[n>>2]=p;o=0;ma(90,b|0,h|0);p=o;o=0;if(!(p&1)){p=c[h>>2]|0;if(p|0){if((c[n>>2]|0)!=(p|0))c[n>>2]=p;mR(p)}l=e;return}else y=50}else y=50;while(0);if((y|0)==50){y=Pa()|0;w=z;x=y}y=c[h>>2]|0;if(!y)$a(x|0);if((c[n>>2]|0)!=(y|0))c[n>>2]=y;mR(y);$a(x|0)}function ol(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;e=l;l=l+64|0;f=e+40|0;g=e+16|0;h=e+4|0;i=e;j=a[d+11>>0]|0;if(!((j<<24>>24<0?c[d+4>>2]|0:j&255)|0)){c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;l=e;return}Nl(h,d);c[i>>2]=0;d=c[h>>2]|0;j=h+4|0;o=0;k=ca(37,0,0,i|0,d|0,(c[j>>2]|0)-d|0)|0;d=o;o=0;do if(d&1){m=Pa()|0;n=z;p=m;q=16}else{if(!((k|0)==-42|(k|0)>-1)){m=Ja(24)|0;r=xr()|0;o=0;na(71,m|0,k|0,r|0);r=o;o=0;if(r&1){r=Qa(0)|0;Sa(m|0);s=r}else{o=0;na(72,m|0,4424,56);o=0;m=Qa(0)|0;s=m}Ka(s|0)|0;m=fo()|0;o=0;na(71,g|0,3,m|0);m=o;o=0;if(m&1){m=Pa()|0;t=z;u=m}else{o=0;ma(144,g|0,0);o=0;m=Pa()|0;r=z;c[g>>2]=10036;v=g+12|0;if((a[v+11>>0]|0)<0)mR(c[v>>2]|0);t=r;u=m}o=0;ka(3);m=o;o=0;if(!(m&1)){n=t;p=u;q=16;break}m=Qa(0)|0;Id(m)}m=c[i>>2]|0;c[g>>2]=0;r=g+4|0;c[r>>2]=0;c[g+8>>2]=0;do if(!m){w=0;x=0;q=28}else{if((m|0)>=0){o=0;v=Z(209,m|0)|0;y=o;o=0;if(!(y&1)){c[r>>2]=v;c[g>>2]=v;c[g+8>>2]=v+m;y=m;A=v;do{a[A>>0]=0;A=(c[r>>2]|0)+1|0;c[r>>2]=A;y=y+-1|0}while((y|0)!=0);w=c[g>>2]|0;x=c[i>>2]|0;q=28;break}}else{o=0;la(271,g|0);o=0}y=Pa()|0;A=z;v=c[g>>2]|0;if(v|0){if((c[r>>2]|0)!=(v|0))c[r>>2]=v;mR(v)}B=A;C=y}while(0);if((q|0)==28){m=c[h>>2]|0;o=0;y=ca(37,w|0,x|0,i|0,m|0,(c[j>>2]|0)-m|0)|0;m=o;o=0;do if(m&1)q=52;else{if((y|0)<=-1){A=Ja(24)|0;v=xr()|0;o=0;na(71,A|0,y|0,v|0);v=o;o=0;if(v&1){v=Qa(0)|0;Sa(A|0);D=v}else{o=0;na(72,A|0,4424,56);o=0;A=Qa(0)|0;D=A}Ka(D|0)|0;A=fo()|0;o=0;na(71,f|0,3,A|0);A=o;o=0;if(A&1){A=Pa()|0;E=z;F=A}else{o=0;ma(144,f|0,0);o=0;A=Pa()|0;v=z;c[f>>2]=10036;G=f+12|0;if((a[G+11>>0]|0)<0)mR(c[G>>2]|0);E=v;F=A}o=0;ka(3);A=o;o=0;if(!(A&1)){H=E;I=F;break}A=Qa(0)|0;Id(A)}A=c[i>>2]|0;v=c[r>>2]|0;G=c[g>>2]|0;J=v-G|0;K=G;L=v;if(A>>>0<=J>>>0)if(A>>>0<J>>>0?(M=K+A|0,(M|0)!=(L|0)):0){c[r>>2]=M;N=G;O=M}else{N=G;O=v}else{o=0;ma(149,g|0,A-J|0);J=o;o=0;if(J&1){q=52;break}N=c[g>>2]|0;O=c[r>>2]|0}c[b>>2]=N;c[b+4>>2]=O;c[b+8>>2]=c[g+8>>2];J=c[h>>2]|0;if(J|0){if((c[j>>2]|0)!=(J|0))c[j>>2]=J;mR(J)}l=e;return}while(0);if((q|0)==52){y=Pa()|0;H=z;I=y}y=c[g>>2]|0;if(!y){B=H;C=I}else{if((c[r>>2]|0)!=(y|0))c[r>>2]=y;mR(y);B=H;C=I}}P=B;Q=C}while(0);if((q|0)==16){P=n;Q=p}p=c[h>>2]|0;if(!p)$a(Q|0);if((c[j>>2]|0)!=(p|0))c[j>>2]=p;mR(p);$a(Q|0)}function pl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=l;l=l+96|0;f=e+80|0;g=e;h=e+64|0;i=g+28|0;j=g+36|0;k=g+52|0;m=g;n=m+52|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(n|0));c[k>>2]=1024;c[g+56>>2]=0;c[g+60>>2]=0;k=kR(20)|0;c[k>>2]=0;c[k+4>>2]=65536;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[g+24>>2]=k;c[i>>2]=k;k=(a[d+11>>0]|0)<0?c[d>>2]|0:d;c[f>>2]=k;c[f+4>>2]=k;o=0;_(108,g|0,f|0)|0;k=o;o=0;if(k&1){k=Qa(7040)|0;d=z;if((d|0)==(Xb(7040)|0)){m=Ka(k|0)|0;n=Ja(24)|0;p=dd[c[(c[m>>2]|0)+8>>2]&255](m)|0;m=fo()|0;o=0;oa(40,n|0,4,m|0,p|0);p=o;o=0;if(p&1){p=Pa()|0;m=z;Sa(n|0);q=p;r=m}else{o=0;na(72,n|0,4424,56);o=0;n=Pa()|0;q=n;r=z}o=0;ka(3);n=o;o=0;if(n&1){n=Qa(0)|0;Id(n)}else{s=q;t=r}}else{s=k;t=d}}else{o=0;la(287,f|0);d=o;o=0;if(d&1){d=Pa()|0;u=d;v=z}else{d=h+11|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;o=0;$(97,f|0,g|0,h|0)|0;k=o;o=0;do if(k&1){r=Pa()|0;q=z;if((a[d>>0]|0)<0)mR(c[h>>2]|0);w=r;x=q}else{if((a[d>>0]|0)<0)mR(c[h>>2]|0);o=0;ma(151,b|0,f|0);q=o;o=0;if(q&1){q=Pa()|0;w=q;x=z;break}it(f);q=c[i>>2]|0;if(q|0){r=c[q>>2]|0;a:do if(r|0){n=q+8|0;m=r;while(1){if((c[n>>2]|0)==(m|0))break;p=c[m+8>>2]|0;CE(m);c[q>>2]=p;if(!p)break a;else m=p}if(m|0)c[m+4>>2]=0}while(0);r=c[q+16>>2]|0;if(r|0)mR(r);mR(q)}CE(c[g+40>>2]|0);r=c[j>>2]|0;if(!r){l=e;return}mR(r);l=e;return}while(0);it(f);u=w;v=x}s=u;t=v}v=c[i>>2]|0;if(v|0){i=c[v>>2]|0;b:do if(i|0){t=v+8|0;u=i;while(1){if((c[t>>2]|0)==(u|0))break;x=c[u+8>>2]|0;CE(u);c[v>>2]=x;if(!x)break b;else u=x}if(u|0)c[u+4>>2]=0}while(0);i=c[v+16>>2]|0;if(i|0)mR(i);mR(v)}CE(c[g+40>>2]|0);g=c[j>>2]|0;if(!g)$a(s|0);mR(g);$a(s|0)}function ql(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;f=l;l=l+32|0;g=f;c[g>>2]=c[d+32>>2];h=g+4|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[g+20>>2]=256;i=g+24|0;j=g+28|0;k=g+24|0;m=k;c[m>>2]=0;c[m+4>>2]=0;m=c[e>>2]|0;a:while(1){n=m;switch(a[n>>0]|0){case 9:case 13:case 10:case 32:break;default:break a}m=n+1|0}c[e>>2]=m;do if(a[n>>0]|0){o=0;na(78,g|0,e|0,d|0);p=o;o=0;if(p&1){p=Pa()|0;q=g+8|0;c[g+12>>2]=c[q>>2];r=d+40|0;s=d+44|0;t=r;u=s;v=s;w=q;x=r;y=p;A=z;break}if(!(c[i>>2]|0)){p=c[e>>2]|0;b:while(1){B=p;switch(a[B>>0]|0){case 9:case 13:case 10:case 32:break;default:break b}p=B+1|0}c[e>>2]=p;if(a[B>>0]|0){r=p-(c[e+4>>2]|0)|0;c[i>>2]=2;c[j>>2]=r;C=13}else C=13}else C=13}else{r=m-(c[e+4>>2]|0)|0;c[i>>2]=1;c[j>>2]=r;C=13}while(0);c:do if((C|0)==13){j=k;i=c[j>>2]|0;e=c[j+4>>2]|0;j=g+8|0;c[g+12>>2]=c[j>>2];m=d+56|0;c[m>>2]=i;c[m+4>>2]=e;do if(!i){e=d+44|0;m=c[e>>2]|0;B=d+40|0;if((m-(c[B>>2]|0)|0)!=24){o=0;oa(41,68229,67895,2161,68267);o=0;n=Pa()|0;t=B;u=e;v=e;w=j;x=B;y=n;A=z;break c}n=m;m=n+-24|0;c[e>>2]=m;if((d|0)==(m|0)){o=0;oa(41,68279,67895,756,68292);o=0;r=Qa(0)|0;Id(r)}else{c[d>>2]=c[m>>2];c[d+4>>2]=c[m+4>>2];c[d+8>>2]=c[m+8>>2];c[d+12>>2]=c[m+12>>2];c[d+16>>2]=c[m+16>>2];c[d+20>>2]=c[m+20>>2];b[n+-6>>1]=0;D=B;E=B;F=e;G=e;break}}else{e=d+40|0;B=d+44|0;D=e;E=e;F=B;G=B}while(0);i=c[E>>2]|0;c[G>>2]=i;CE(i);c[D>>2]=0;c[F>>2]=0;c[d+48>>2]=0;CE(c[j>>2]|0);i=c[h>>2]|0;if(!i){l=f;return d|0}mR(i);l=f;return d|0}while(0);f=c[t>>2]|0;c[v>>2]=f;CE(f);c[x>>2]=0;c[u>>2]=0;c[d+48>>2]=0;CE(c[w>>2]|0);w=c[h>>2]|0;if(!w)$a(y|0);mR(w);$a(y|0);return 0}function rl(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;g=l;l=l+48|0;h=g;i=g+36|0;j=g+24|0;k=e+18|0;m=b[k>>1]|0;switch(m<<16>>16){case 3:{c[j>>2]=0;n=j+4|0;c[n>>2]=0;c[j+8>>2]=0;p=e+8|0;q=j+8|0;a:do if(!(c[e>>2]|0))r=5;else{s=c[p>>2]|0;while(1){t=b[s+18>>1]|0;if(!(t&1024)){r=9;break}if(!(t&4096))u=c[s+8>>2]|0;else u=s;c[h>>2]=u;t=c[n>>2]|0;if(t>>>0>=(c[q>>2]|0)>>>0){o=0;ma(152,j|0,h|0);v=o;o=0;if(v&1)break}else{c[t>>2]=u;c[n>>2]=(c[n>>2]|0)+4}if((b[k>>1]|0)!=3){r=4;break}s=s+48|0;if((s|0)==((c[p>>2]|0)+((c[e>>2]|0)*48|0)|0)){r=5;break a}}if((r|0)==4){o=0;oa(41,67884,67895,1078,68021);o=0;s=Pa()|0;w=z;x=s;break}else if((r|0)==9){o=0;oa(41,68031,67895,1681,68042);o=0}s=Pa()|0;w=z;x=s}while(0);b:do if((r|0)==5){p=c[j>>2]|0;k=c[n>>2]|0;c[i>>2]=109;o=0;na(79,p|0,k|0,i|0);k=o;o=0;c:do if(!(k&1)){p=c[n>>2]|0;d:do if((c[j>>2]|0)==(p|0))y=0;else{u=h+18|0;q=h+8|0;s=h+11|0;t=h+8|0;v=h+4|0;A=0;B=p;while(1){B=B+-4|0;C=c[B>>2]|0;D=C;while(1)if(!(a[D>>0]|0))break;else D=D+1|0;E=C;if(!C){r=24;break}c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[h+16>>2]=0;c[h+20>>2]=0;b[u>>1]=1029;c[q>>2]=E;c[h>>2]=D-E;o=0;E=_(111,e|0,h|0)|0;F=o;o=0;if(F&1){r=26;break}F=c[B>>2]|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;G=$F(F)|0;if(G>>>0>4294967279){r=28;break}if(G>>>0<11){a[s>>0]=G;if(!G)H=h;else{I=h;r=33}}else{J=G+16&-16;o=0;K=Z(209,J|0)|0;L=o;o=0;if(L&1){r=39;break}c[h>>2]=K;c[t>>2]=J|-2147483648;c[v>>2]=G;I=K;r=33}if((r|0)==33){r=0;CT(I|0,F|0,G|0)|0;H=I}a[H+G>>0]=0;o=0;G=$(97,d|0,E|0,h|0)|0;E=o;o=0;if(E&1){r=40;break}E=G+A|0;if((a[s>>0]|0)<0)mR(c[h>>2]|0);if((c[j>>2]|0)==(B|0)){y=E;break d}else A=E}if((r|0)==24){o=0;oa(41,68052,67895,315,68059);o=0;A=Pa()|0;M=z;N=A;r=38}else if((r|0)==26){A=Pa()|0;M=z;N=A;r=38}else if((r|0)==28){o=0;la(276,h|0);o=0;r=39}else if((r|0)==40){A=Pa()|0;B=z;if((a[s>>0]|0)<0){mR(c[h>>2]|0);O=B;P=A}else{O=B;P=A}}if((r|0)==38){w=M;x=N;break b}else if((r|0)==39){A=Pa()|0;O=z;P=A}w=O;x=P;break b}while(0);o=0;p=_(110,d|0,y|0)|0;A=o;o=0;if(!(A&1)){A=p+y|0;p=a[f+11>>0]|0;B=p<<24>>24<0;v=B?c[f+4>>2]|0:p&255;e:do if(!v)Q=A;else{p=B?c[f>>2]|0:f;t=p+v|0;c[h>>2]=0;q=h+4|0;c[q>>2]=0;c[h+8>>2]=0;do if((v|0)>=0){o=0;u=Z(209,v|0)|0;E=o;o=0;if(E&1)r=49;else{c[q>>2]=u;c[h>>2]=u;c[h+8>>2]=u+v;E=p;G=u;do{a[G>>0]=a[E>>0]|0;E=E+1|0;G=(c[q>>2]|0)+1|0;c[q>>2]=G}while((E|0)!=(t|0));o=0;E=_(112,d|0,h|0)|0;G=o;o=0;if(G&1){G=Pa()|0;D=z;C=c[h>>2]|0;if(!C){R=D;S=G;break}if((c[q>>2]|0)!=(C|0))c[q>>2]=C;mR(C);R=D;S=G;break}G=E+A|0;E=c[h>>2]|0;if(E|0){if((c[q>>2]|0)!=(E|0))c[q>>2]=E;mR(E)}o=0;E=_(110,d|0,G|0)|0;D=o;o=0;if(D&1)break c;Q=E+G|0;break e}}else{o=0;la(271,h|0);o=0;r=49}while(0);if((r|0)==49){t=Pa()|0;p=z;s=c[h>>2]|0;if(s|0){if((c[q>>2]|0)!=(s|0))c[q>>2]=s;mR(s)}R=p;S=t}w=R;x=S;break b}while(0);A=c[j>>2]|0;if(A|0){v=c[n>>2]|0;if((v|0)!=(A|0))c[n>>2]=v+(~((v+-4-A|0)>>>2)<<2);mR(A)}T=Q;l=g;return T|0}}while(0);k=Pa()|0;w=z;x=k}while(0);w=c[j>>2]|0;if(!w)$a(x|0);j=c[n>>2]|0;if((j|0)!=(w|0))c[n>>2]=j+(~((j+-4-w|0)>>>2)<<2);mR(w);$a(x|0);break}case 4:{x=c[e+8>>2]|0;w=c[e>>2]|0;f:do if(!w)U=0;else{j=h+11|0;n=0;Q=x+(w*24|0)|0;while(1){Q=Q+-24|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;o=0;S=$(97,d|0,Q|0,h|0)|0;R=o;o=0;if(R&1)break;R=S+n|0;if((a[j>>0]|0)<0)mR(c[h>>2]|0);if((Q|0)==(x|0)){U=R;break f}else n=R}n=Pa()|0;Q=z;if((a[j>>0]|0)<0)mR(c[h>>2]|0);V=Q;W=n;$a(W|0)}while(0);x=(wt(d,U)|0)+U|0;U=a[f+11>>0]|0;w=U<<24>>24<0;n=w?c[f+4>>2]|0:U&255;if(!n){T=x;l=g;return T|0}U=w?c[f>>2]|0:f;w=U+n|0;c[h>>2]=0;Q=h+4|0;c[Q>>2]=0;c[h+8>>2]=0;if((n|0)>=0){o=0;R=Z(209,n|0)|0;S=o;o=0;if(!(S&1)){c[Q>>2]=R;c[h>>2]=R;c[h+8>>2]=R+n;n=U;U=R;do{a[U>>0]=a[n>>0]|0;n=n+1|0;U=(c[Q>>2]|0)+1|0;c[Q>>2]=U}while((n|0)!=(w|0));o=0;w=_(112,d|0,h|0)|0;n=o;o=0;if(n&1){n=Pa()|0;U=z;R=c[h>>2]|0;if(R|0){if((c[Q>>2]|0)!=(R|0))c[Q>>2]=R;mR(R)}V=U;W=n;$a(W|0)}else{W=w+x|0;x=c[h>>2]|0;if(x|0){if((c[Q>>2]|0)!=(x|0))c[Q>>2]=x;mR(x)}T=(wt(d,W)|0)+W|0;l=g;return T|0}}}else{o=0;la(271,h|0);o=0}W=Pa()|0;x=c[h>>2]|0;if(!x)$a(W|0);if((c[Q>>2]|0)!=(x|0))c[Q>>2]=x;mR(x);$a(W|0);break}default:{if((m+-3&65535)<2){W=Ja(24)|0;o=0;na(73,W|0,3,68076);x=o;o=0;if(!(x&1))Xa(W|0,4424,56);x=Pa()|0;Q=z;Sa(W|0);X=Q;Y=x;$a(Y|0)}g:do if(!(m&32)){if(m&512){x=Ja(24)|0;o=0;na(73,x|0,3,68107);Q=o;o=0;if(!(Q&1))Xa(x|0,4424,56);Q=Pa()|0;W=z;Sa(x|0);X=W;Y=Q;$a(Y|0)}if(m&8){aa=mt(d,m<<16>>16==10)|0;break}if(!(m&1024)){if(!(m<<16>>16)){aa=nt(d)|0;break}Q=Ja(24)|0;o=0;na(73,Q|0,3,68144);W=o;o=0;if(!(W&1))Xa(Q|0,4424,56);W=Pa()|0;x=z;Sa(Q|0);X=x;Y=W;$a(Y|0)}W=(m&4096)==0?c[e+8>>2]|0:e;c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;x=$F(W)|0;if(x>>>0>4294967279)vR(i);if(x>>>0<11){Q=i+11|0;a[Q>>0]=x;if(!x){ba=i;ca=Q}else{da=i;ea=Q;r=126}}else{Q=x+16&-16;w=kR(Q)|0;c[i>>2]=w;c[i+8>>2]=Q|-2147483648;c[i+4>>2]=x;da=w;ea=i+11|0;r=126}if((r|0)==126){CT(da|0,W|0,x|0)|0;ba=da;ca=ea}a[ba+x>>0]=0;x=a[ca>>0]|0;W=x<<24>>24<0;w=W?c[i>>2]|0:i;Q=W?c[i+4>>2]|0:x&255;x=w+Q|0;c[h>>2]=0;W=h+4|0;c[W>>2]=0;c[h+8>>2]=0;h:do if(!Q)r=137;else{if((Q|0)>=0){o=0;n=Z(209,Q|0)|0;U=o;o=0;if(!(U&1)){c[W>>2]=n;c[h>>2]=n;c[h+8>>2]=n+Q;U=w;V=n;while(1){a[V>>0]=a[U>>0]|0;U=U+1|0;V=(c[W>>2]|0)+1|0;c[W>>2]=V;if((U|0)==(x|0)){r=137;break h}}}}else{o=0;la(271,h|0);o=0}U=Pa()|0;V=z;n=c[h>>2]|0;if(n|0){if((c[W>>2]|0)!=(n|0))c[W>>2]=n;mR(n)}fa=V;ga=U}while(0);do if((r|0)==137){o=0;x=_(112,d|0,h|0)|0;w=o;o=0;if(w&1){w=Pa()|0;Q=z;j=c[h>>2]|0;if(!j){fa=Q;ga=w;break}if((c[W>>2]|0)!=(j|0))c[W>>2]=j;mR(j);fa=Q;ga=w;break}w=c[h>>2]|0;if(w|0){if((c[W>>2]|0)!=(w|0))c[W>>2]=w;mR(w)}if((a[ca>>0]|0)<0)mR(c[i>>2]|0);aa=x;break g}while(0);if((a[ca>>0]|0)<0)mR(c[i>>2]|0);X=fa;Y=ga;$a(Y|0)}else aa=kt(d,c[e>>2]|0)|0;while(0);e=a[f+11>>0]|0;ga=e<<24>>24<0;fa=ga?c[f+4>>2]|0:e&255;if(!fa){T=aa;l=g;return T|0}e=ga?c[f>>2]|0:f;f=e+fa|0;c[h>>2]=0;ga=h+4|0;c[ga>>2]=0;c[h+8>>2]=0;if((fa|0)>=0){o=0;i=Z(209,fa|0)|0;ca=o;o=0;if(!(ca&1)){c[ga>>2]=i;c[h>>2]=i;c[h+8>>2]=i+fa;fa=e;e=i;do{a[e>>0]=a[fa>>0]|0;fa=fa+1|0;e=(c[ga>>2]|0)+1|0;c[ga>>2]=e}while((fa|0)!=(f|0));o=0;f=_(112,d|0,h|0)|0;fa=o;o=0;if(fa&1){fa=Pa()|0;e=z;i=c[h>>2]|0;if(i|0){if((c[ga>>2]|0)!=(i|0))c[ga>>2]=i;mR(i)}X=e;Y=fa;$a(Y|0)}else{Y=f+aa|0;aa=c[h>>2]|0;if(aa|0){if((c[ga>>2]|0)!=(aa|0))c[ga>>2]=aa;mR(aa)}T=(wt(d,Y)|0)+Y|0;l=g;return T|0}}}else{o=0;la(271,h|0);o=0}T=Pa()|0;g=c[h>>2]|0;if(!g)$a(T|0);if((c[ga>>2]|0)!=(g|0))c[ga>>2]=g;mR(g);$a(T|0)}}return 0}function sl(a,b){a=a|0;b=b|0;return ($E(a,b)|0)<0|0}function tl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;e=a;a=b;a:while(1){b=a;f=a+-4|0;g=e;while(1){h=g;b:while(1){i=h;j=b-i|0;k=j>>2;switch(k|0){case 2:{l=5;break a;break}case 3:{l=7;break a;break}case 4:{l=15;break a;break}case 5:{l=16;break a;break}case 1:case 0:{l=68;break a;break}default:{}}if((j|0)<124){l=22;break a}m=h+(((k|0)/2|0)<<2)|0;do if((j|0)>3996){n=(k|0)/4|0;o=h+(n<<2)|0;p=m+(n<<2)|0;n=xl(h,o,m,p,d)|0;if(ed[c[d>>2]&255](c[f>>2]|0,c[p>>2]|0)|0){q=c[p>>2]|0;c[p>>2]=c[f>>2];c[f>>2]=q;q=n+1|0;if(ed[c[d>>2]&255](c[p>>2]|0,c[m>>2]|0)|0){r=c[m>>2]|0;c[m>>2]=c[p>>2];c[p>>2]=r;r=n+2|0;if(ed[c[d>>2]&255](c[m>>2]|0,c[o>>2]|0)|0){p=c[o>>2]|0;c[o>>2]=c[m>>2];c[m>>2]=p;if(ed[c[d>>2]&255](c[o>>2]|0,c[h>>2]|0)|0){p=c[h>>2]|0;c[h>>2]=c[o>>2];c[o>>2]=p;s=n+4|0}else s=n+3|0}else s=r}else s=q}else s=n}else{n=ed[c[d>>2]&255](c[m>>2]|0,c[h>>2]|0)|0;q=ed[c[d>>2]&255](c[f>>2]|0,c[m>>2]|0)|0;if(!n){if(!q){s=0;break}n=c[m>>2]|0;c[m>>2]=c[f>>2];c[f>>2]=n;if(!(ed[c[d>>2]&255](c[m>>2]|0,c[h>>2]|0)|0)){s=1;break}n=c[h>>2]|0;c[h>>2]=c[m>>2];c[m>>2]=n;s=2;break}n=c[h>>2]|0;if(q){c[h>>2]=c[f>>2];c[f>>2]=n;s=1;break}c[h>>2]=c[m>>2];c[m>>2]=n;if(ed[c[d>>2]&255](c[f>>2]|0,n)|0){n=c[m>>2]|0;c[m>>2]=c[f>>2];c[f>>2]=n;s=2}else s=1}while(0);if(ed[c[d>>2]&255](c[h>>2]|0,c[m>>2]|0)|0){t=f;u=s;break}else v=f;while(1){v=v+-4|0;if((h|0)==(v|0))break;if(ed[c[d>>2]&255](c[v>>2]|0,c[m>>2]|0)|0){l=51;break b}}k=h+4|0;if(ed[c[d>>2]&255](c[h>>2]|0,c[f>>2]|0)|0)w=k;else{if((k|0)==(f|0)){l=68;break a}else x=k;while(1){if(ed[c[d>>2]&255](c[h>>2]|0,c[x>>2]|0)|0)break;k=x+4|0;if((k|0)==(f|0)){l=68;break a}else x=k}k=c[x>>2]|0;c[x>>2]=c[f>>2];c[f>>2]=k;w=x+4|0}if((w|0)==(f|0)){l=68;break a}else{y=f;z=w}while(1){k=z;while(1){A=k+4|0;if(ed[c[d>>2]&255](c[h>>2]|0,c[k>>2]|0)|0){B=y;break}else k=A}do B=B+-4|0;while(ed[c[d>>2]&255](c[h>>2]|0,c[B>>2]|0)|0);if(k>>>0>=B>>>0){h=k;continue b}j=c[k>>2]|0;c[k>>2]=c[B>>2];c[B>>2]=j;y=B;z=A}}if((l|0)==51){l=0;j=c[h>>2]|0;c[h>>2]=c[v>>2];c[v>>2]=j;t=v;u=s+1|0}j=h+4|0;c:do if(j>>>0<t>>>0){n=m;q=t;r=j;p=u;while(1){o=r;while(1){C=o+4|0;if(ed[c[d>>2]&255](c[o>>2]|0,c[n>>2]|0)|0)o=C;else{D=q;break}}do D=D+-4|0;while(!(ed[c[d>>2]&255](c[D>>2]|0,c[n>>2]|0)|0));if(o>>>0>D>>>0){E=n;F=p;G=o;break c}k=c[o>>2]|0;c[o>>2]=c[D>>2];c[D>>2]=k;n=(n|0)==(o|0)?D:n;q=D;r=C;p=p+1|0}}else{E=m;F=u;G=j}while(0);if((G|0)!=(E|0)?ed[c[d>>2]&255](c[E>>2]|0,c[G>>2]|0)|0:0){j=c[G>>2]|0;c[G>>2]=c[E>>2];c[E>>2]=j;H=F+1|0}else H=F;if(!H){I=zl(h,G,d)|0;j=G+4|0;if(zl(j,a,d)|0){l=67;break}if(I){g=j;continue}}j=G;if((j-i|0)>=(b-j|0)){l=66;break}tl(h,G,d);g=G+4|0}if((l|0)==66){l=0;tl(G+4|0,a,d);e=h;a=G;continue}else if((l|0)==67){l=0;if(I){l=68;break}else{e=h;a=G;continue}}}if((l|0)==5){if(!(ed[c[d>>2]&255](c[f>>2]|0,c[h>>2]|0)|0))return;G=c[h>>2]|0;c[h>>2]=c[f>>2];c[f>>2]=G;return}else if((l|0)==7){G=h+4|0;e=ed[c[d>>2]&255](c[G>>2]|0,c[h>>2]|0)|0;I=ed[c[d>>2]&255](c[f>>2]|0,c[G>>2]|0)|0;if(!e){if(!I)return;e=c[G>>2]|0;c[G>>2]=c[f>>2];c[f>>2]=e;if(!(ed[c[d>>2]&255](c[G>>2]|0,c[h>>2]|0)|0))return;e=c[h>>2]|0;c[h>>2]=c[G>>2];c[G>>2]=e;return}e=c[h>>2]|0;if(I){c[h>>2]=c[f>>2];c[f>>2]=e;return}c[h>>2]=c[G>>2];c[G>>2]=e;if(!(ed[c[d>>2]&255](c[f>>2]|0,e)|0))return;e=c[G>>2]|0;c[G>>2]=c[f>>2];c[f>>2]=e;return}else if((l|0)==15){xl(h,h+4|0,h+8|0,f,d)|0;return}else if((l|0)==16){e=h+4|0;G=h+8|0;I=h+12|0;xl(h,e,G,I,d)|0;if(!(ed[c[d>>2]&255](c[f>>2]|0,c[I>>2]|0)|0))return;i=c[I>>2]|0;c[I>>2]=c[f>>2];c[f>>2]=i;if(!(ed[c[d>>2]&255](c[I>>2]|0,c[G>>2]|0)|0))return;i=c[G>>2]|0;f=c[I>>2]|0;c[G>>2]=f;c[I>>2]=i;if(!(ed[c[d>>2]&255](f,c[e>>2]|0)|0))return;f=c[e>>2]|0;i=c[G>>2]|0;c[e>>2]=i;c[G>>2]=f;if(!(ed[c[d>>2]&255](i,c[h>>2]|0)|0))return;i=c[h>>2]|0;c[h>>2]=c[e>>2];c[e>>2]=i;return}else if((l|0)==22){yl(h,a,d);return}else if((l|0)==68)return}function ul(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;d=a+4|0;e=c[a>>2]|0;f=(c[d>>2]|0)-e|0;g=f>>2;h=g+1|0;if(h>>>0>1073741823)CP(a);i=a+8|0;j=(c[i>>2]|0)-e|0;k=j>>1;l=j>>2>>>0<536870911?(k>>>0<h>>>0?h:k):1073741823;do if(l){if(l>>>0<=1073741823){k=kR(l<<2)|0;m=k;n=k;break}k=Ja(8)|0;o=0;ma(153,k|0,92198);h=o;o=0;if(h&1){h=Pa()|0;Sa(k|0);$a(h|0)}else{c[k>>2]=57580;Xa(k|0,7152,205)}}else{m=0;n=0}while(0);k=m+(g<<2)|0;c[k>>2]=c[b>>2];if((f|0)>0)CT(n|0,e|0,f|0)|0;c[a>>2]=m;c[d>>2]=k+4;c[i>>2]=m+(l<<2);if(!e)return;mR(e);return}function vl(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a+18|0;if((b[e>>1]|0)!=3)Ha(67884,67895,1154,68164);if(!(b[d+18>>1]&1024))Ha(68175,67895,1155,68164);f=a+8|0;g=c[f>>2]|0;a:do if(c[a>>2]|0){h=g;i=g;while(1){if(wl(d,i)|0)break;i=i+48|0;if((b[e>>1]|0)!=3){j=7;break}k=i;if((i|0)==((c[f>>2]|0)+((c[a>>2]|0)*48|0)|0)){l=k;break a}else h=k}if((j|0)==7)Ha(67884,67895,1084,68021);if((b[e>>1]|0)==3)l=h;else Ha(67884,67895,1084,68021)}else l=g;while(0);g=l;if(((c[f>>2]|0)+((c[a>>2]|0)*48|0)|0)==(g|0))Ha(92070,67895,1053,68191);else return g+24|0;return 0}function wl(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;f=b[d+18>>1]|0;if(!(f&1024))Ha(68031,67895,1992,68202);g=b[e+18>>1]|0;if(!(g&1024))Ha(68214,67895,1993,68202);h=(f&4096)==0;if(h)i=c[d>>2]|0;else i=17-(a[d+17>>0]|0)|0;f=(g&4096)==0;if(f)j=c[e>>2]|0;else j=17-(a[e+17>>0]|0)|0;if((i|0)!=(j|0)){k=0;return k|0}if(h)l=c[d+8>>2]|0;else l=d;d=f?c[e+8>>2]|0:e;if((l|0)==(d|0)){k=1;return k|0}k=(aF(l,d,i)|0)==0;return k|0}function xl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=ed[c[f>>2]&255](c[b>>2]|0,c[a>>2]|0)|0;h=ed[c[f>>2]&255](c[d>>2]|0,c[b>>2]|0)|0;do if(g){i=c[a>>2]|0;if(h){c[a>>2]=c[d>>2];c[d>>2]=i;j=1;break}c[a>>2]=c[b>>2];c[b>>2]=i;if(ed[c[f>>2]&255](c[d>>2]|0,i)|0){i=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=i;j=2}else j=1}else if(h){i=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=i;if(ed[c[f>>2]&255](c[b>>2]|0,c[a>>2]|0)|0){i=c[a>>2]|0;c[a>>2]=c[b>>2];c[b>>2]=i;j=2}else j=1}else j=0;while(0);if(!(ed[c[f>>2]&255](c[e>>2]|0,c[d>>2]|0)|0)){k=j;return k|0}h=c[d>>2]|0;c[d>>2]=c[e>>2];c[e>>2]=h;if(!(ed[c[f>>2]&255](c[d>>2]|0,c[b>>2]|0)|0)){k=j+1|0;return k|0}h=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=h;if(!(ed[c[f>>2]&255](c[b>>2]|0,c[a>>2]|0)|0)){k=j+2|0;return k|0}f=c[a>>2]|0;c[a>>2]=c[b>>2];c[b>>2]=f;k=j+3|0;return k|0}function yl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a+8|0;f=a+4|0;g=ed[c[d>>2]&255](c[f>>2]|0,c[a>>2]|0)|0;h=ed[c[d>>2]&255](c[e>>2]|0,c[f>>2]|0)|0;do if(g){i=c[a>>2]|0;if(h){c[a>>2]=c[e>>2];c[e>>2]=i;break}c[a>>2]=c[f>>2];c[f>>2]=i;if(ed[c[d>>2]&255](c[e>>2]|0,i)|0){i=c[f>>2]|0;c[f>>2]=c[e>>2];c[e>>2]=i}}else if(h?(i=c[f>>2]|0,j=c[e>>2]|0,c[f>>2]=j,c[e>>2]=i,ed[c[d>>2]&255](j,c[a>>2]|0)|0):0){j=c[a>>2]|0;c[a>>2]=c[f>>2];c[f>>2]=j}while(0);f=a+12|0;if((f|0)==(b|0))return;else{k=f;l=e}while(1){if(ed[c[d>>2]&255](c[k>>2]|0,c[l>>2]|0)|0){e=c[k>>2]|0;f=e;h=l;g=k;while(1){c[g>>2]=c[h>>2];if((h|0)==(a|0))break;j=h+-4|0;if(ed[c[d>>2]&255](f,c[j>>2]|0)|0){i=h;h=j;g=i}else break}c[h>>2]=e}g=k+4|0;if((g|0)==(b|0))break;else{f=k;k=g;l=f}}return}function zl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;switch(b-a>>2|0){case 2:{e=b+-4|0;if(!(ed[c[d>>2]&255](c[e>>2]|0,c[a>>2]|0)|0)){f=1;return f|0}g=c[a>>2]|0;c[a>>2]=c[e>>2];c[e>>2]=g;f=1;return f|0}case 3:{g=a+4|0;e=b+-4|0;h=ed[c[d>>2]&255](c[g>>2]|0,c[a>>2]|0)|0;i=ed[c[d>>2]&255](c[e>>2]|0,c[g>>2]|0)|0;if(!h){if(!i){f=1;return f|0}h=c[g>>2]|0;c[g>>2]=c[e>>2];c[e>>2]=h;if(!(ed[c[d>>2]&255](c[g>>2]|0,c[a>>2]|0)|0)){f=1;return f|0}h=c[a>>2]|0;c[a>>2]=c[g>>2];c[g>>2]=h;f=1;return f|0}h=c[a>>2]|0;if(i){c[a>>2]=c[e>>2];c[e>>2]=h;f=1;return f|0}c[a>>2]=c[g>>2];c[g>>2]=h;if(!(ed[c[d>>2]&255](c[e>>2]|0,h)|0)){f=1;return f|0}h=c[g>>2]|0;c[g>>2]=c[e>>2];c[e>>2]=h;f=1;return f|0}case 4:{xl(a,a+4|0,a+8|0,b+-4|0,d)|0;f=1;return f|0}case 5:{h=a+4|0;e=a+8|0;g=a+12|0;i=b+-4|0;xl(a,h,e,g,d)|0;if(!(ed[c[d>>2]&255](c[i>>2]|0,c[g>>2]|0)|0)){f=1;return f|0}j=c[g>>2]|0;c[g>>2]=c[i>>2];c[i>>2]=j;if(!(ed[c[d>>2]&255](c[g>>2]|0,c[e>>2]|0)|0)){f=1;return f|0}j=c[e>>2]|0;i=c[g>>2]|0;c[e>>2]=i;c[g>>2]=j;if(!(ed[c[d>>2]&255](i,c[h>>2]|0)|0)){f=1;return f|0}i=c[h>>2]|0;j=c[e>>2]|0;c[h>>2]=j;c[e>>2]=i;if(!(ed[c[d>>2]&255](j,c[a>>2]|0)|0)){f=1;return f|0}j=c[a>>2]|0;c[a>>2]=c[h>>2];c[h>>2]=j;f=1;return f|0}case 1:case 0:{f=1;return f|0}default:{j=a+8|0;h=a+4|0;i=ed[c[d>>2]&255](c[h>>2]|0,c[a>>2]|0)|0;e=ed[c[d>>2]&255](c[j>>2]|0,c[h>>2]|0)|0;do if(i){g=c[a>>2]|0;if(e){c[a>>2]=c[j>>2];c[j>>2]=g;break}c[a>>2]=c[h>>2];c[h>>2]=g;if(ed[c[d>>2]&255](c[j>>2]|0,g)|0){g=c[h>>2]|0;c[h>>2]=c[j>>2];c[j>>2]=g}}else if(e?(g=c[h>>2]|0,k=c[j>>2]|0,c[h>>2]=k,c[j>>2]=g,ed[c[d>>2]&255](k,c[a>>2]|0)|0):0){k=c[a>>2]|0;c[a>>2]=c[h>>2];c[h>>2]=k}while(0);h=a+12|0;a:do if((h|0)==(b|0)){l=1;m=0}else{e=h;i=0;k=j;while(1){if(ed[c[d>>2]&255](c[e>>2]|0,c[k>>2]|0)|0){g=c[e>>2]|0;n=g;o=k;p=e;while(1){c[p>>2]=c[o>>2];if((o|0)==(a|0))break;q=o+-4|0;if(ed[c[d>>2]&255](n,c[q>>2]|0)|0){r=o;o=q;p=r}else break}c[o>>2]=g;p=i+1|0;if((p|0)==8){l=0;m=(e+4|0)==(b|0);break a}else s=p}else s=i;p=e+4|0;if((p|0)==(b|0)){l=1;m=0;break}else{n=e;e=p;i=s;k=n}}}while(0);f=m|l;return f|0}}return 0}function Al(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;g=c[e>>2]|0;h=a[g>>0]|0;switch(h<<24>>24|0){case 110:{if(h<<24>>24!=110)Ha(68302,68319,706,68443);i=g+1|0;c[e>>2]=i;if((a[i>>0]|0)==117){j=g+2|0;c[e>>2]=j;if((a[j>>0]|0)==108){k=g+3|0;c[e>>2]=k;if((a[k>>0]|0)==108){c[e>>2]=g+4;l=Bl(f+32|0,1)|0;c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;c[l+12>>2]=0;c[l+16>>2]=0;c[l+20>>2]=0;return}else m=k}else m=j}else m=i;i=d+24|0;if(c[i>>2]|0)Ha(68453,68319,714,68443);j=m-(c[e+4>>2]|0)|0;c[i>>2]=3;c[d+28>>2]=j;return}case 116:{if(h<<24>>24!=116)Ha(68470,68319,719,68487);j=g+1|0;c[e>>2]=j;if((a[j>>0]|0)==114){i=g+2|0;c[e>>2]=i;if((a[i>>0]|0)==117){m=g+3|0;c[e>>2]=m;if((a[m>>0]|0)==101){c[e>>2]=g+4;k=Bl(f+32|0,1)|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[k+20>>2]=0;b[k+18>>1]=10;return}else n=m}else n=i}else n=j;j=d+24|0;if(c[j>>2]|0)Ha(68453,68319,727,68487);i=n-(c[e+4>>2]|0)|0;c[j>>2]=3;c[d+28>>2]=i;return}case 102:{if(h<<24>>24!=102)Ha(68497,68319,732,68514);h=g+1|0;c[e>>2]=h;if((a[h>>0]|0)==97){i=g+2|0;c[e>>2]=i;if((a[i>>0]|0)==108){j=g+3|0;c[e>>2]=j;if((a[j>>0]|0)==115){n=g+4|0;c[e>>2]=n;if((a[n>>0]|0)==101){c[e>>2]=g+5;g=Bl(f+32|0,1)|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;b[g+18>>1]=9;return}else o=n}else o=j}else o=i}else o=h;h=d+24|0;if(c[h>>2]|0)Ha(68453,68319,740,68514);i=o-(c[e+4>>2]|0)|0;c[h>>2]=3;c[d+28>>2]=i;return}case 34:{Cl(d,e,f,0);return}case 123:{Dl(d,e,f);return}case 91:{El(d,e,f);return}default:{Fl(d,e,f);return}}}function Bl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+12|0;e=c[d>>2]|0;f=b*24|0;b=a+16|0;g=c[b>>2]|0;h=g;i=e;if((e+f|0)>>>0>g>>>0){j=a+8|0;k=c[j>>2]|0;l=k;if(!k){if(!(c[a>>2]|0)){m=kR(1)|0;c[a>>2]=m;c[a+4>>2]=m}n=c[a+20>>2]|0}else{a=h-l|0;n=((a+1|0)>>>1)+a|0}a=i-l|0;l=a+f|0;i=n>>>0<l>>>0?l:n;if(!i){CE(k);o=0}else o=EE(k,i)|0;c[j>>2]=o;j=o+a|0;c[d>>2]=j;a=o+i|0;c[b>>2]=a;p=j;q=a}else{p=e;q=g}g=p+f|0;if(g>>>0>q>>>0)Ha(69440,68745,129,69483);else{c[d>>2]=g;return p|0}return 0}function Cl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=l;l=l+32|0;h=g;i=g+16|0;j=d;k=c[j>>2]|0;m=c[j+4>>2]|0;j=h;c[j>>2]=k;c[j+4>>2]=m;m=h+8|0;c[m>>2]=d;d=k;a:do if((a[d>>0]|0)==34){c[h>>2]=d+1;c[i>>2]=b;k=i+4|0;c[k>>2]=0;o=0;na(80,b|0,h|0,i|0);j=o;o=0;b:do if(!(j&1)){n=b+24|0;do if(!(c[n>>2]|0)){p=c[k>>2]|0;q=p+-1|0;r=c[i>>2]|0;s=r+12|0;t=c[s>>2]|0;if((t-(c[r+8>>2]|0)|0)>>>0<p>>>0){o=0;oa(41,68905,68745,137,68936);o=0;break b}r=t+(0-p)|0;c[s>>2]=r;if(f){o=0;s=aa(43,e|0,r|0,q|0,1)|0;p=o;o=0;if(p&1)break b;else u=s}else{o=0;s=aa(43,e|0,r|0,q|0,1)|0;q=o;o=0;if(q&1)break b;else u=s}if(!u)if(!(c[n>>2]|0)){s=(c[h>>2]|0)-(c[h+4>>2]|0)|0;c[n>>2]=16;c[b+28>>2]=s;break}else{o=0;oa(41,68453,68319,834,68986);o=0;s=Pa()|0;v=s;w=z;break a}}while(0);n=h;s=c[n+4>>2]|0;q=c[m>>2]|0;c[q>>2]=c[n>>2];c[q+4>>2]=s;l=g;return}while(0);k=Pa()|0;v=k;w=z}else{o=0;oa(41,68969,68319,812,68986);o=0;k=Pa()|0;v=k;w=z}while(0);w=h;h=c[w+4>>2]|0;g=c[m>>2]|0;c[g>>2]=c[w>>2];c[g+4>>2]=h;$a(v|0)}function Dl(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=c[e>>2]|0;if((a[g>>0]|0)!=123)Ha(68940,68319,590,68957);c[e>>2]=g+1;g=Bl(f+32|0,1)|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;b[g+18>>1]=3;g=c[e>>2]|0;a:while(1){h=g;switch(a[h>>0]|0){case 9:case 13:case 10:case 32:break;default:break a}g=h+1|0}c[e>>2]=g;i=d+24|0;if(c[i>>2]|0)return;switch(a[h>>0]|0){case 125:{c[e>>2]=h+1;h=f+44|0;j=c[h>>2]|0;k=c[f+40>>2]|0;l=j;c[h>>2]=l;if((j-k|0)>>>0<=23)Ha(68722,68745,144,68877);if(!(c[f+24>>2]|0))Ha(68881,67895,2309,68892);b[l+-6>>1]=3;c[l+-16>>2]=0;c[l+-20>>2]=0;c[l+-24>>2]=0;return}case 34:{m=0;n=14;break}default:o=g}b:do if((n|0)==14){c:while(1){n=0;Cl(d,e,f,1);if(c[i>>2]|0){n=41;break}p=c[e>>2]|0;d:while(1){q=p;switch(a[q>>0]|0){case 9:case 13:case 10:case 32:break;default:break d}p=q+1|0}c[e>>2]=p;if(c[i>>2]|0){n=41;break}if((a[q>>0]|0)!=58){n=21;break}g=q+1|0;c[e>>2]=g;l=g;e:while(1){switch(a[l>>0]|0){case 9:case 13:case 10:case 32:break;default:break e}l=l+1|0}c[e>>2]=l;if(c[i>>2]|0){n=41;break}Al(d,e,f);if(c[i>>2]|0){n=41;break}r=c[e>>2]|0;f:while(1){s=r;switch(a[s>>0]|0){case 9:case 13:case 10:case 32:break;default:break f}r=s+1|0}c[e>>2]=r;if(c[i>>2]|0){n=41;break}m=m+1|0;switch(a[s>>0]|0){case 125:{n=36;break c;break}case 44:break;default:{n=40;break c}}l=s+1|0;c[e>>2]=l;g=l;g:while(1){switch(a[g>>0]|0){case 9:case 13:case 10:case 32:break;default:break g}g=g+1|0}l=g;c[e>>2]=l;if(c[i>>2]|0){n=41;break}if((a[g>>0]|0)!=34){o=l;break b}else n=14}if((n|0)==21){l=p-(c[e+4>>2]|0)|0;c[i>>2]=5;c[d+28>>2]=l;return}else if((n|0)==36){c[e>>2]=s+1;if(Hl(f,m)|0)return;if(!(c[i>>2]|0)){l=(c[e>>2]|0)-(c[e+4>>2]|0)|0;c[i>>2]=16;c[d+28>>2]=l;return}else Ha(68453,68319,638,68957)}else if((n|0)==40){l=r-(c[e+4>>2]|0)|0;c[i>>2]=6;c[d+28>>2]=l;return}else if((n|0)==41)return}while(0);n=o-(c[e+4>>2]|0)|0;c[i>>2]=4;c[d+28>>2]=n;return}function El(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;g=c[e>>2]|0;if((a[g>>0]|0)!=91)Ha(68694,68319,658,68711);c[e>>2]=g+1;g=Bl(f+32|0,1)|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;b[g+18>>1]=4;g=c[e>>2]|0;a:while(1){h=g;switch(a[h>>0]|0){case 9:case 13:case 10:case 32:break;default:break a}g=h+1|0}c[e>>2]=g;g=d+24|0;if(c[g>>2]|0)return;if((a[h>>0]|0)==93){c[e>>2]=h+1;h=f+44|0;i=c[h>>2]|0;j=c[f+40>>2]|0;k=i;c[h>>2]=k;if((i-j|0)>>>0<=23)Ha(68722,68745,144,68877);if(!(c[f+24>>2]|0))Ha(68881,67895,2309,68892);b[k+-6>>1]=4;c[k+-16>>2]=0;c[k+-20>>2]=0;c[k+-24>>2]=0;return}else l=0;b:while(1){Al(d,e,f);if(c[g>>2]|0){m=28;break}n=c[e>>2]|0;c:while(1){o=n;switch(a[o>>0]|0){case 9:case 13:case 10:case 32:break;default:break c}n=o+1|0}l=l+1|0;c[e>>2]=n;if(c[g>>2]|0){m=28;break}switch(a[o>>0]|0){case 93:{m=23;break b;break}case 44:break;default:{m=27;break b}}k=o+1|0;c[e>>2]=k;j=k;d:while(1){switch(a[j>>0]|0){case 9:case 13:case 10:case 32:break;default:break d}j=j+1|0}c[e>>2]=j;if(c[g>>2]|0){m=28;break}}if((m|0)==23){c[e>>2]=o+1;if(Gl(f,l)|0)return;if(!(c[g>>2]|0)){l=(c[e>>2]|0)-(c[e+4>>2]|0)|0;c[g>>2]=16;c[d+28>>2]=l;return}else Ha(68453,68319,687,68711)}else if((m|0)==27){l=n-(c[e+4>>2]|0)|0;c[g>>2]=7;c[d+28>>2]=l;return}else if((m|0)==28)return}function Fl(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0.0,na=0.0,pa=0.0,qa=0,ra=0.0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0.0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0.0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Qa=0.0,Ra=0,Sa=0,Ta=0.0;g=c[e>>2]|0;i=e+4|0;j=c[i>>2]|0;k=g-j|0;l=g;m=(a[l>>0]|0)==45;n=m?l+1|0:g;g=n;l=a[g>>0]|0;a:do if(l<<24>>24!=48){if((l+-49&255)>=9){p=d+24|0;if(!(c[p>>2]|0)){c[p>>2]=3;c[d+28>>2]=n-j;q=n;c[e>>2]=q;c[i>>2]=j;return}else{o=0;oa(41,68453,68319,1202,68525);o=0;r=n;s=Pa()|0;t=z;c[e>>2]=r;c[i>>2]=j;$a(s|0)}}p=g+1|0;u=p;v=(l<<24>>24)+-48|0;w=a[p>>0]|0;x=(w+-48&255)<10;b:do if(m){if(x){y=v;A=0;B=u;C=w;D=p}else{E=0;F=0;G=0.0;H=v;I=0;J=u;K=0;L=0;break a}while(1){if(y>>>0>214748363){if((y|0)!=214748364){M=y;N=A;O=B;break b}if(C<<24>>24>56){M=214748364;N=A;O=B;break b}}D=D+1|0;P=D;Q=(y*10|0)+-48+(C<<24>>24)|0;R=A+1|0;C=a[D>>0]|0;if((C+-48&255)>=10){E=0;F=0;G=0.0;H=Q;I=R;J=P;K=0;L=0;break a}else{y=Q;A=R;B=P}}}else{if(x){S=v;T=0;U=u;V=w;W=p}else{E=0;F=0;G=0.0;H=v;I=0;J=u;K=0;L=0;break a}while(1){if(S>>>0>429496728){if((S|0)!=429496729){M=S;N=T;O=U;break b}if(V<<24>>24>53){M=429496729;N=T;O=U;break b}}W=W+1|0;P=W;R=(S*10|0)+-48+(V<<24>>24)|0;Q=T+1|0;V=a[W>>0]|0;if((V+-48&255)>=10){E=0;F=0;G=0.0;H=R;I=Q;J=P;K=0;L=0;break a}else{S=R;T=Q;U=P}}}while(0);u=O;v=a[u>>0]|0;p=(v+-48&255)<10;c:do if(m){if(p){X=N;Y=O;Z=0;$=M;aa=v;ba=u}else{E=0;F=1;G=0.0;H=M;I=N;J=O;K=M;L=0;break a}while(1){if(Z>>>0>214748364|(Z|0)==214748364&$>>>0>3435973835?($|0)!=-858993460|(Z|0)!=214748364|aa<<24>>24>56:0){ca=X;da=Y;ea=$;fa=Z;break c}w=rT($|0,Z|0,10,0)|0;ba=ba+1|0;x=ba;P=sT(w|0,z|0,(aa<<24>>24)+-48|0,0)|0;w=z;Q=X+1|0;aa=a[ba>>0]|0;if((aa+-48&255)>=10){E=0;F=1;G=0.0;H=M;I=Q;J=x;K=P;L=w;break a}else{X=Q;Y=x;Z=w;$=P}}}else{if(p){ga=N;ha=O;ia=0;ja=M;ka=v;la=u}else{E=0;F=1;G=0.0;H=M;I=N;J=O;K=M;L=0;break a}while(1){if(ia>>>0>429496729|(ia|0)==429496729&ja>>>0>2576980376?(ja|0)!=-1717986919|(ia|0)!=429496729|ka<<24>>24>53:0){ca=ga;da=ha;ea=ja;fa=ia;break c}P=rT(ja|0,ia|0,10,0)|0;la=la+1|0;w=la;x=sT(P|0,z|0,(ka<<24>>24)+-48|0,0)|0;P=z;Q=ga+1|0;ka=a[la>>0]|0;if((ka+-48&255)>=10){E=0;F=1;G=0.0;H=M;I=Q;J=w;K=x;L=P;break a}else{ga=Q;ha=w;ia=P;ja=x}}}while(0);ma=+(ea>>>0)+4294967296.0*+(fa>>>0);u=da;v=a[u>>0]|0;if((v+-48&255)<10){na=ma;p=da;x=u;u=v;while(1){if(na>=1797693134862315758041281.0e283)break;x=x+1|0;v=x;pa=na*10.0+ +((u<<24>>24)+-48|0);u=a[x>>0]|0;if((u+-48&255)>=10){E=1;F=1;G=pa;H=M;I=ca;J=v;K=ea;L=fa;break a}else{na=pa;p=v}}u=d+24|0;if(!(c[u>>2]|0)){c[u>>2]=13;c[d+28>>2]=k;q=p;c[e>>2]=q;c[i>>2]=j;return}else{o=0;oa(41,68453,68319,1235,68525);o=0;r=p;s=Pa()|0;t=z;c[e>>2]=r;c[i>>2]=j;$a(s|0)}}else{E=1;F=1;G=ma;H=M;I=ca;J=da;K=ea;L=fa}}else{E=0;F=0;G=0.0;H=0;I=0;J=g+1|0;K=0;L=0}while(0);g=J;fa=a[g>>0]|0;d:do if(fa<<24>>24==46){ea=g+1|0;da=ea;ca=a[ea>>0]|0;if((ca+-48&255)>=10){M=d+24|0;if(!(c[M>>2]|0)){c[M>>2]=14;c[d+28>>2]=da-j;q=da;c[e>>2]=q;c[i>>2]=j;return}else{o=0;oa(41,68453,68319,1247,68525);o=0;r=da;s=Pa()|0;t=z;c[e>>2]=r;c[i>>2]=j;$a(s|0)}}if(E){qa=0;ra=G;sa=I;ta=da;ua=K;va=L}else{M=0;ja=I;ia=da;da=ca;ca=F?L:0;ha=F?K:H;ga=ea;while(1){if(ca>>>0>2097151|(ca|0)==2097151&ha>>>0>4294967295|da<<24>>24>57){wa=M;xa=ja;ya=ia;za=ha;Aa=ca;break}ea=rT(ha|0,ca|0,10,0)|0;ga=ga+1|0;ka=ga;la=sT(ea|0,z|0,(da<<24>>24)+-48|0,0)|0;ea=z;O=M+-1|0;N=ja+(((la|0)!=0|(ea|0)!=0)&1)|0;da=a[ga>>0]|0;if(da<<24>>24<=47){wa=O;xa=N;ya=ka;za=la;Aa=ea;break}else{M=O;ja=N;ia=ka;ca=ea;ha=la}}qa=wa;ra=+(za>>>0)+4294967296.0*+(Aa>>>0);sa=xa;ta=ya;ua=za;va=Aa}if((sa|0)<17){ha=qa;ma=ra;ca=sa;ia=ta;while(1){ja=ha;na=ma;M=ia;do{da=M;ga=a[da>>0]|0;if((ga+-48&255)>=10){Ba=ja;Ca=1;Da=na;Ea=M;Fa=ga;Ga=ua;Ha=va;break d}M=da+1|0;na=na*10.0+ +((ga<<24>>24)+-48|0);ja=ja+-1|0}while(!(na>0.0));if((ca|0)<16){ha=ja;ma=na;ca=ca+1|0;ia=M}else{Ia=ja;Ja=na;Ka=M;break}}}else{Ia=qa;Ja=ra;Ka=ta}ia=Ka;ca=a[ia>>0]|0;if((ca+-48&255)<10){ha=ia;do{ha=ha+1|0;La=a[ha>>0]|0}while((La+-48&255)<10);Ba=Ia;Ca=1;Da=Ja;Ea=ha;Fa=La;Ga=ua;Ha=va}else{Ba=Ia;Ca=1;Da=Ja;Ea=Ka;Fa=ca;Ga=ua;Ha=va}}else{Ba=0;Ca=E;Da=G;Ea=J;Fa=fa;Ga=K;Ha=L}while(0);L=Ea;switch(Fa<<24>>24){case 69:case 101:{Fa=L+1|0;G=Ca?Da:+((F?Ga:H)>>>0)+4294967296.0*+((F?Ha:0)>>>0);K=a[Fa>>0]|0;fa=K<<24>>24==45;J=K<<24>>24==43?L+2|0:fa?L+2|0:Fa;Fa=J;L=a[J>>0]|0;if((L+-48&255)>=10){K=d+24|0;if(!(c[K>>2]|0)){c[K>>2]=15;c[d+28>>2]=Fa-j;q=Fa;c[e>>2]=q;c[i>>2]=j;return}else{o=0;oa(41,68453,68319,1323,68525);o=0;r=Fa;s=Pa()|0;t=z;c[e>>2]=r;c[i>>2]=j;$a(s|0)}}Fa=J+1|0;J=Fa;K=(L<<24>>24)+-48|0;e:do if(fa){L=a[Fa>>0]|0;if((L+-48&255)<10){E=K;va=Fa;ua=L;while(1){L=va+1|0;Ka=L;Ia=(E*10|0)+-48+(ua<<24>>24)|0;if((Ia|0)>214748363?((a[L>>0]|0)+-48&255)<10:0){La=L;do La=La+1|0;while(((a[La>>0]|0)+-48&255)<10);Ma=La}else Ma=Ka;va=Ma;ua=a[va>>0]|0;if((ua+-48&255)>=10){Na=Ia;Oa=Ma;break}else E=Ia}}else{Na=K;Oa=J}}else{E=308-Ba|0;ua=K;va=J;do{ca=va;ha=a[ca>>0]|0;if((ha+-48&255)>=10){Na=ua;Oa=va;break e}va=ca+1|0;ua=(ua*10|0)+-48+(ha<<24>>24)|0}while((ua|0)<=(E|0));E=d+24|0;if(!(c[E>>2]|0)){c[E>>2]=13;c[d+28>>2]=k;q=va;c[e>>2]=q;c[i>>2]=j;return}else{o=0;oa(41,68453,68319,1318,68525);o=0;r=va;s=Pa()|0;t=z;c[e>>2]=r;c[i>>2]=j;$a(s|0)}}while(0);Qa=G;Ra=fa?0-Na|0:Na;Sa=Oa;break}default:if(!Ca){if(!F)if(m){F=0-H|0;o=0;Ca=_(113,f+32|0,1)|0;Oa=o;o=0;if(Oa&1){r=Ea;s=Pa()|0;t=z;c[e>>2]=r;c[i>>2]=j;$a(s|0)}Oa=Ca+8|0;c[Oa>>2]=0;c[Oa+4>>2]=0;c[Oa+8>>2]=0;c[Oa+12>>2]=0;Oa=Ca;c[Oa>>2]=F;c[Oa+4>>2]=((F|0)<0)<<31>>31;b[Ca+18>>1]=(F>>31&65216)+502;q=Ea;c[e>>2]=q;c[i>>2]=j;return}else{o=0;F=_(113,f+32|0,1)|0;Ca=o;o=0;if(Ca&1){r=Ea;s=Pa()|0;t=z;c[e>>2]=r;c[i>>2]=j;$a(s|0)}Ca=F+8|0;c[Ca>>2]=0;c[Ca+4>>2]=0;c[Ca+8>>2]=0;c[Ca+12>>2]=0;Ca=F;c[Ca>>2]=H;c[Ca+4>>2]=0;b[F+18>>1]=(H>>31&65504)+502;q=Ea;c[e>>2]=q;c[i>>2]=j;return}if(!m){o=0;H=_(113,f+32|0,1)|0;F=o;o=0;if(F&1){r=Ea;s=Pa()|0;t=z;c[e>>2]=r;c[i>>2]=j;$a(s|0)}F=H+8|0;c[F>>2]=0;c[F+4>>2]=0;c[F+8>>2]=0;c[F+12>>2]=0;F=H;c[F>>2]=Ga;c[F+4>>2]=Ha;F=H+18|0;H=(Ha|0)<0?278:406;b[F>>1]=H;if(Ha>>>0>0|(Ha|0)==0&Ga>>>0>4294967295){q=Ea;c[e>>2]=q;c[i>>2]=j;return}b[F>>1]=H|64;if(Ha>>>0>0|(Ha|0)==0&Ga>>>0>2147483647){q=Ea;c[e>>2]=q;c[i>>2]=j;return}b[F>>1]=H|96;q=Ea;c[e>>2]=q;c[i>>2]=j;return}H=tT(0,0,Ga|0,Ha|0)|0;Ha=z;o=0;Ga=_(113,f+32|0,1)|0;F=o;o=0;if(F&1){r=Ea;s=Pa()|0;t=z;c[e>>2]=r;c[i>>2]=j;$a(s|0)}F=Ga+8|0;c[F>>2]=0;c[F+4>>2]=0;c[F+8>>2]=0;c[F+12>>2]=0;F=Ga;c[F>>2]=H;c[F+4>>2]=Ha;F=Ga+18|0;b[F>>1]=150;if((Ha|0)>-1|(Ha|0)==-1&H>>>0>4294967295){Ga=Ha>>>0>0|(Ha|0)==0&H>>>0>4294967295?406:470;b[F>>1]=Ga;if(Ha>>>0>0|(Ha|0)==0&H>>>0>2147483647){q=Ea;c[e>>2]=q;c[i>>2]=j;return}b[F>>1]=Ga|32;q=Ea;c[e>>2]=q;c[i>>2]=j;return}else{if(!((Ha|0)>-1|(Ha|0)==-1&H>>>0>2147483647)){q=Ea;c[e>>2]=q;c[i>>2]=j;return}b[F>>1]=182;q=Ea;c[e>>2]=q;c[i>>2]=j;return}}else{Qa=Da;Ra=0;Sa=Ea}}Ea=Ra+Ba|0;do if((Ea|0)<-308){Da=Qa/1.e+308;if((Ea|0)<-616)Ta=0.0;else{Ba=-308-Ea|0;if(Ba>>>0<309){Ta=Da/+h[1728+(Ba<<3)>>3];break}o=0;oa(41,68537,68556,48,68688);o=0;r=Sa;s=Pa()|0;t=z;c[e>>2]=r;c[i>>2]=j;$a(s|0)}}else if((Ea|0)>-1){if(Ea>>>0<309){Ta=Qa*+h[1728+(Ea<<3)>>3];break}o=0;oa(41,68537,68556,48,68688);o=0;r=Sa;s=Pa()|0;t=z;c[e>>2]=r;c[i>>2]=j;$a(s|0)}else{Ba=0-Ea|0;if(Ba>>>0<309){Ta=Qa/+h[1728+(Ba<<3)>>3];break}o=0;oa(41,68537,68556,48,68688);o=0;r=Sa;s=Pa()|0;t=z;c[e>>2]=r;c[i>>2]=j;$a(s|0)}while(0);o=0;Ea=_(113,f+32|0,1)|0;f=o;o=0;if(f&1){r=Sa;s=Pa()|0;t=z;c[e>>2]=r;c[i>>2]=j;$a(s|0)}s=Ea+8|0;c[s>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;c[s+12>>2]=0;h[Ea>>3]=m?-Ta:Ta;b[Ea+18>>1]=534;q=Sa;c[e>>2]=q;c[i>>2]=j;return}function Gl(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=a+44|0;f=c[e>>2]|0;g=c[a+40>>2]|0;h=d*24|0;if((f-g|0)>>>0<h>>>0)Ha(68905,68745,137,68936);i=f+(0-h)|0;c[e>>2]=i;if((i-g|0)>>>0<=23)Ha(68722,68745,144,68877);g=i+-24|0;e=c[a+24>>2]|0;if(!e)Ha(68881,67895,2309,68892);b[g+18>>1]=4;if(!d){c[g+8>>2]=0;j=g+4|0;c[j>>2]=d;c[g>>2]=d;return 1}do if(!h)k=0;else{a=c[e>>2]|0;f=a;if((a|0)!=0?(l=c[a+4>>2]|0,(l+h|0)>>>0<=(c[a>>2]|0)>>>0):0){m=a;n=l}else{l=c[e+4>>2]|0;a=l>>>0>h>>>0?l:h;l=e+12|0;if(!(c[l>>2]|0)){o=kR(1)|0;c[l>>2]=o;c[e+16>>2]=o}o=a+16|0;if(!o){k=0;break}l=BE(o)|0;if(!l){k=0;break}c[l>>2]=a;c[l+4>>2]=0;c[l+8>>2]=f;c[e>>2]=l;m=l;n=0}c[m+4>>2]=n+h;k=m+16+n|0}while(0);c[g+8>>2]=k;CT(k|0,i|0,h|0)|0;j=g+4|0;c[j>>2]=d;c[g>>2]=d;return 1}function Hl(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=a+44|0;f=c[e>>2]|0;g=c[a+40>>2]|0;h=d*48|0;if((f-g|0)>>>0<h>>>0)Ha(68905,68745,137,68936);i=f+(0-h)|0;c[e>>2]=i;if((i-g|0)>>>0<=23)Ha(68722,68745,144,68877);g=i+-24|0;e=c[a+24>>2]|0;if(!e)Ha(68881,67895,2309,68892);b[g+18>>1]=3;if(!d){c[g+8>>2]=0;j=g+4|0;c[j>>2]=d;c[g>>2]=d;return 1}do if(!h)k=0;else{a=c[e>>2]|0;f=a;if((a|0)!=0?(l=c[a+4>>2]|0,(l+h|0)>>>0<=(c[a>>2]|0)>>>0):0){m=a;n=l}else{l=c[e+4>>2]|0;a=l>>>0>h>>>0?l:h;l=e+12|0;if(!(c[l>>2]|0)){o=kR(1)|0;c[l>>2]=o;c[e+16>>2]=o}o=a+16|0;if(!o){k=0;break}l=BE(o)|0;if(!l){k=0;break}c[l>>2]=a;c[l+4>>2]=0;c[l+8>>2]=f;c[e>>2]=l;m=l;n=0}c[m+4>>2]=n+h;k=m+16+n|0}while(0);c[g+8>>2]=k;CT(k|0,i|0,h|0)|0;j=g+4|0;c[j>>2]=d;c[g>>2]=d;return 1}function Il(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=e+4|0;g=d+4|0;h=b+24|0;a:while(1){i=c[d>>2]|0;j=a[i>>0]|0;k=i;switch(j<<24>>24){case 34:{l=19;break a;break}case 92:break;default:{if((j&255)<32){l=21;break a}c[d>>2]=i+1;m=a[i>>0]|0;a[(Kl(c[e>>2]|0,1)|0)>>0]=m;c[f>>2]=(c[f>>2]|0)+1;continue a}}n=k-(c[g>>2]|0)|0;m=i+1|0;c[d>>2]=m;o=a[m>>0]|0;m=a[68998+(o&255)>>0]|0;if(m<<24>>24){c[d>>2]=i+2;a[(Kl(c[e>>2]|0,1)|0)>>0]=m;c[f>>2]=(c[f>>2]|0)+1;continue}if(o<<24>>24!=117){l=16;break}c[d>>2]=i+2;o=Ll(b,d,n)|0;if(c[h>>2]|0){l=29;break}if((o&-1024|0)==55296){m=c[d>>2]|0;if((a[m>>0]|0)!=92){l=11;break}p=m+1|0;c[d>>2]=p;if((a[p>>0]|0)!=117){l=11;break}c[d>>2]=m+2;m=Ll(b,d,n)|0;if(c[h>>2]|0){l=29;break}if((m&-1024|0)!=56320){l=13;break}q=(m+-56320|(o<<10)+-56623104)+65536|0}else q=o;Ml(e,q)}if((l|0)==11){c[h>>2]=9;c[b+28>>2]=n;return}else if((l|0)==13){c[h>>2]=9;c[b+28>>2]=n;return}else if((l|0)==16){if(c[h>>2]|0)Ha(68453,68319,884,69254);c[h>>2]=10;c[b+28>>2]=n;return}else if((l|0)==19){c[d>>2]=i+1;a[(Kl(c[e>>2]|0,1)|0)>>0]=0;c[f>>2]=(c[f>>2]|0)+1;return}else if((l|0)==21){f=(c[h>>2]|0)!=0;if(!(j<<24>>24)){if(f)Ha(68453,68319,893,69254);j=k-(c[g>>2]|0)|0;c[h>>2]=11;c[b+28>>2]=j;return}else{if(f)Ha(68453,68319,895,69254);f=k-(c[g>>2]|0)|0;c[h>>2]=10;c[b+28>>2]=f;return}}else if((l|0)==29)return}function Jl(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0;h=Bl(d+32|0,1)|0;if(!g){c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[h+16>>2]=0;c[h+20>>2]=0;if(!e){o=0;oa(41,68052,67895,315,68059);o=0;g=Qa(0)|0;Id(g)}b[h+18>>1]=1029;c[h+8>>2]=e;c[h>>2]=f;return 1}g=c[d+24>>2]|0;if(!g)Ha(68881,67895,2309,68892);c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[h+16>>2]=0;c[h+20>>2]=0;if(!e)Ha(68052,67895,315,68059);d=h+18|0;if(f>>>0<18){b[d>>1]=7173;a[h+17>>0]=17-f;i=h}else{b[d>>1]=3077;c[h>>2]=f;do if((f|0)==-1)j=0;else{d=f+8&-8;k=c[g>>2]|0;l=k;if((k|0)!=0?(m=c[k+4>>2]|0,(m+d|0)>>>0<=(c[k>>2]|0)>>>0):0){n=k;p=m}else{m=c[g+4>>2]|0;k=m>>>0>d>>>0?m:d;m=g+12|0;if(!(c[m>>2]|0)){q=kR(1)|0;c[m>>2]=q;c[g+16>>2]=q}q=k+16|0;if(!q){j=0;break}m=BE(q)|0;if(!m){j=0;break}c[m>>2]=k;c[m+4>>2]=0;c[m+8>>2]=l;c[g>>2]=m;n=m;p=0}c[n+4>>2]=p+d;j=n+16+p|0}while(0);c[h+8>>2]=j;i=j}CT(i|0,e|0,f|0)|0;a[i+f>>0]=0;return 1}function Kl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+12|0;e=c[d>>2]|0;f=a+16|0;g=c[f>>2]|0;h=g;i=e;if((e+b|0)>>>0>g>>>0){j=a+8|0;k=c[j>>2]|0;l=k;if(!k){if(!(c[a>>2]|0)){m=kR(1)|0;c[a>>2]=m;c[a+4>>2]=m}n=c[a+20>>2]|0}else{a=h-l|0;n=((a+1|0)>>>1)+a|0}a=i-l|0;l=a+b|0;i=n>>>0<l>>>0?l:n;if(!i){CE(k);o=0}else o=EE(k,i)|0;c[j>>2]=o;j=o+a|0;c[d>>2]=j;a=o+i|0;c[f>>2]=a;p=j;q=a}else{p=e;q=g}g=p+b|0;if(g>>>0>q>>>0)Ha(69440,68745,129,69483);else{c[d>>2]=g;return p|0}return 0}function Ll(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=c[d>>2]|0;g=a[f>>0]|0;h=g<<24>>24;if((g+-48&255)>=10)if((g+-65&255)>=6){if((g+-97&255)<6){i=-87;j=7}}else{i=-55;j=7}else{i=-48;j=7}do if((j|0)==7){g=f+1|0;c[d>>2]=g;k=a[g>>0]|0;g=(i+h<<4)+(k<<24>>24)|0;if((k+-48&255)>=10)if((k+-65&255)>=6)if((k+-97&255)<6)l=-87;else break;else l=-55;else l=-48;k=f+2|0;c[d>>2]=k;m=a[k>>0]|0;k=(g+l<<4)+(m<<24>>24)|0;if((m+-48&255)>=10)if((m+-65&255)>=6)if((m+-97&255)<6)n=-87;else break;else n=-55;else n=-48;m=f+3|0;c[d>>2]=m;g=a[m>>0]|0;m=(k+n<<4)+(g<<24>>24)|0;if((g+-48&255)>=10)if((g+-65&255)>=6)if((g+-97&255)<6)o=-87;else break;else o=-55;else o=-48;c[d>>2]=f+4;p=m+o|0;return p|0}while(0);o=b+24|0;if(c[o>>2]|0)Ha(68453,68319,768,69430);c[o>>2]=8;c[b+28>>2]=e;p=0;return p|0}function Ml(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if(d>>>0<128){a[(Kl(c[b>>2]|0,1)|0)>>0]=d;e=b+4|0;f=c[e>>2]|0;g=f+1|0;c[e>>2]=g;return}if(d>>>0<2048){a[(Kl(c[b>>2]|0,1)|0)>>0]=d>>>6|192;h=b+4|0;c[h>>2]=(c[h>>2]|0)+1;a[(Kl(c[b>>2]|0,1)|0)>>0]=d&63|128;e=h;f=c[e>>2]|0;g=f+1|0;c[e>>2]=g;return}if(d>>>0<65536){a[(Kl(c[b>>2]|0,1)|0)>>0]=d>>>12|224;h=b+4|0;c[h>>2]=(c[h>>2]|0)+1;a[(Kl(c[b>>2]|0,1)|0)>>0]=d>>>6&63|128;c[h>>2]=(c[h>>2]|0)+1;a[(Kl(c[b>>2]|0,1)|0)>>0]=d&63|128;e=h;f=c[e>>2]|0;g=f+1|0;c[e>>2]=g;return}if(d>>>0>=1114112)Ha(69274,69296,115,69423);a[(Kl(c[b>>2]|0,1)|0)>>0]=d>>>18|240;h=b+4|0;c[h>>2]=(c[h>>2]|0)+1;a[(Kl(c[b>>2]|0,1)|0)>>0]=d>>>12&63|128;c[h>>2]=(c[h>>2]|0)+1;a[(Kl(c[b>>2]|0,1)|0)>>0]=d>>>6&63|128;c[h>>2]=(c[h>>2]|0)+1;a[(Kl(c[b>>2]|0,1)|0)>>0]=d&63|128;e=h;f=c[e>>2]|0;g=f+1|0;c[e>>2]=g;return}function Nl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a[d+11>>0]|0;f=e<<24>>24<0;g=f?c[d>>2]|0:d;h=f?c[d+4>>2]|0:e&255;e=g+h|0;c[b>>2]=0;d=b+4|0;c[d>>2]=0;c[b+8>>2]=0;if(!h)return;if((h|0)>=0){o=0;f=Z(209,h|0)|0;i=o;o=0;if(!(i&1)){c[d>>2]=f;c[b>>2]=f;c[b+8>>2]=f+h;if(!h)return;else{j=g;k=f}do{a[k>>0]=a[j>>0]|0;j=j+1|0;k=(c[d>>2]|0)+1|0;c[d>>2]=k}while((j|0)!=(e|0));return}}else{o=0;la(271,b|0);o=0}e=Pa()|0;j=c[b>>2]|0;if(!j)$a(e|0);if((c[d>>2]|0)!=(j|0))c[d>>2]=j;mR(j);$a(e|0)}function Ol(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=c[d>>2]|0;f=(c[d+4>>2]|0)-e|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;if(f>>>0>4294967279)vR(b);if(f>>>0<11){a[b+11>>0]=f;if(!f){g=b;h=g+f|0;a[h>>0]=0;return}else i=b}else{d=f+16&-16;j=kR(d)|0;c[b>>2]=j;c[b+8>>2]=d|-2147483648;c[b+4>>2]=f;i=j}CT(i|0,e|0,f|0)|0;g=i;h=g+f|0;a[h>>0]=0;return}\nfunction VE(a){a=a|0;return ((a|0)==32|(a+-9|0)>>>0<5)&1|0}function WE(a){a=a|0;var b=0,e=0,f=0;b=l;l=l+16|0;e=b;if((XE(a)|0)==0?(fd[c[a+32>>2]&127](a,e,1)|0)==1:0)f=d[e>>0]|0;else f=-1;l=b;return f|0}function XE(b){b=b|0;var d=0,e=0,f=0;d=b+74|0;e=a[d>>0]|0;a[d>>0]=e+255|e;e=b+20|0;d=b+28|0;if((c[e>>2]|0)>>>0>(c[d>>2]|0)>>>0)fd[c[b+36>>2]&127](b,0,0)|0;c[b+16>>2]=0;c[d>>2]=0;c[e>>2]=0;e=c[b>>2]|0;if(!(e&4)){d=(c[b+44>>2]|0)+(c[b+48>>2]|0)|0;c[b+8>>2]=d;c[b+4>>2]=d;f=e<<27>>31}else{c[b>>2]=e|32;f=-1}return f|0}function YE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=ZE(a,b,c)|0;return d|0}function ZE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=RE(a,b,c,0,-2147483648)|0;return d|0}function _E(a,b){a=+a;b=+b;var d=0,e=0,f=0;h[j>>3]=a;d=c[j>>2]|0;e=c[j+4>>2]|0;h[j>>3]=b;f=c[j+4>>2]&-2147483648|e&2147483647;c[j>>2]=d;c[j+4>>2]=f;return +(+h[j>>3])}function $E(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=a[b>>0]|0;e=a[c>>0]|0;if(d<<24>>24==0?1:d<<24>>24!=e<<24>>24){f=e;g=d}else{d=c;c=b;do{c=c+1|0;d=d+1|0;b=a[c>>0]|0;e=a[d>>0]|0}while(!(b<<24>>24==0?1:b<<24>>24!=e<<24>>24));f=e;g=b}return (g&255)-(f&255)|0}function aF(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;a:do if(!d)e=0;else{f=b;g=d;h=c;while(1){i=a[f>>0]|0;j=a[h>>0]|0;if(i<<24>>24!=j<<24>>24)break;g=g+-1|0;if(!g){e=0;break a}else{f=f+1|0;h=h+1|0}}e=(i&255)-(j&255)|0}while(0);return e|0}function bF(a){a=a|0;return (a+-48|0)>>>0<10|0}function cF(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0;g=l;l=l+128|0;h=g+124|0;i=g;j=i;k=50828;m=j+124|0;do{c[j>>2]=c[k>>2];j=j+4|0;k=k+4|0}while((j|0)<(m|0));if((d+-1|0)>>>0>2147483646)if(!d){n=h;o=1;p=4}else{c[(LE()|0)>>2]=75;q=-1}else{n=b;o=d;p=4}if((p|0)==4){p=-2-n|0;d=o>>>0>p>>>0?p:o;c[i+48>>2]=d;o=i+20|0;c[o>>2]=n;c[i+44>>2]=n;p=n+d|0;n=i+16|0;c[n>>2]=p;c[i+28>>2]=p;p=dF(i,e,f)|0;if(!d)q=p;else{d=c[o>>2]|0;a[d+(((d|0)==(c[n>>2]|0))<<31>>31)>>0]=0;q=p}}l=g;return q|0}function dF(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=l;l=l+224|0;g=f+120|0;h=f+80|0;i=f;j=f+136|0;k=h;m=k+40|0;do{c[k>>2]=0;k=k+4|0}while((k|0)<(m|0));c[g>>2]=c[e>>2];if((eF(0,d,g,i,h)|0)<0)n=-1;else{if((c[b+76>>2]|0)>-1)o=fF(b)|0;else o=0;e=c[b>>2]|0;k=e&32;if((a[b+74>>0]|0)<1)c[b>>2]=e&-33;e=b+48|0;if(!(c[e>>2]|0)){m=b+44|0;p=c[m>>2]|0;c[m>>2]=j;q=b+28|0;c[q>>2]=j;r=b+20|0;c[r>>2]=j;c[e>>2]=80;s=b+16|0;c[s>>2]=j+80;j=eF(b,d,g,i,h)|0;if(!p)t=j;else{fd[c[b+36>>2]&127](b,0,0)|0;u=(c[r>>2]|0)==0?-1:j;c[m>>2]=p;c[e>>2]=0;c[s>>2]=0;c[q>>2]=0;c[r>>2]=0;t=u}}else t=eF(b,d,g,i,h)|0;h=c[b>>2]|0;c[b>>2]=h|k;if(o|0)gF(b);n=(h&32|0)==0?t:-1}l=f;return n|0}function eF(d,e,f,g,i){d=d|0;e=e|0;f=f|0;g=g|0;i=i|0;var j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0;j=l;l=l+64|0;k=j+16|0;m=j;n=j+24|0;o=j+8|0;p=j+20|0;c[k>>2]=e;e=(d|0)!=0;q=n+40|0;r=q;s=n+39|0;n=o+4|0;t=0;u=0;v=0;a:while(1){do if((u|0)>-1)if((t|0)>(2147483647-u|0)){c[(LE()|0)>>2]=75;w=-1;break}else{w=t+u|0;break}else w=u;while(0);x=c[k>>2]|0;y=a[x>>0]|0;if(!(y<<24>>24)){A=88;break}else{B=y;C=x}b:while(1){switch(B<<24>>24){case 37:{D=C;E=C;A=9;break b;break}case 0:{F=C;break b;break}default:{}}y=C+1|0;c[k>>2]=y;B=a[y>>0]|0;C=y}c:do if((A|0)==9)while(1){A=0;if((a[E+1>>0]|0)!=37){F=D;break c}y=D+1|0;E=E+2|0;c[k>>2]=E;if((a[E>>0]|0)!=37){F=y;break}else{D=y;A=9}}while(0);y=F-x|0;if(e)hF(d,x,y);if(y|0){t=y;u=w;continue}y=(bF(a[(c[k>>2]|0)+1>>0]|0)|0)==0;G=c[k>>2]|0;if(!y?(a[G+2>>0]|0)==36:0){H=(a[G+1>>0]|0)+-48|0;I=1;J=3}else{H=-1;I=v;J=1}y=G+J|0;c[k>>2]=y;G=a[y>>0]|0;K=(G<<24>>24)+-32|0;if(K>>>0>31|(1<<K&75913|0)==0){L=0;M=G;N=y}else{K=0;O=G;G=y;while(1){y=1<<(O<<24>>24)+-32|K;P=G+1|0;c[k>>2]=P;Q=a[P>>0]|0;R=(Q<<24>>24)+-32|0;if(R>>>0>31|(1<<R&75913|0)==0){L=y;M=Q;N=P;break}else{K=y;O=Q;G=P}}}if(M<<24>>24==42){if((bF(a[N+1>>0]|0)|0)!=0?(G=c[k>>2]|0,(a[G+2>>0]|0)==36):0){O=G+1|0;c[i+((a[O>>0]|0)+-48<<2)>>2]=10;S=c[g+((a[O>>0]|0)+-48<<3)>>2]|0;T=1;U=G+3|0}else{if(I|0){V=-1;break}if(e){G=(c[f>>2]|0)+(4-1)&~(4-1);O=c[G>>2]|0;c[f>>2]=G+4;W=O}else W=0;S=W;T=0;U=(c[k>>2]|0)+1|0}c[k>>2]=U;O=(S|0)<0;X=O?0-S|0:S;Y=O?L|8192:L;Z=T;_=U}else{O=iF(k)|0;if((O|0)<0){V=-1;break}X=O;Y=L;Z=I;_=c[k>>2]|0}do if((a[_>>0]|0)==46){if((a[_+1>>0]|0)!=42){c[k>>2]=_+1;O=iF(k)|0;$=O;aa=c[k>>2]|0;break}if(bF(a[_+2>>0]|0)|0?(O=c[k>>2]|0,(a[O+3>>0]|0)==36):0){G=O+2|0;c[i+((a[G>>0]|0)+-48<<2)>>2]=10;K=c[g+((a[G>>0]|0)+-48<<3)>>2]|0;G=O+4|0;c[k>>2]=G;$=K;aa=G;break}if(Z|0){V=-1;break a}if(e){G=(c[f>>2]|0)+(4-1)&~(4-1);K=c[G>>2]|0;c[f>>2]=G+4;ba=K}else ba=0;K=(c[k>>2]|0)+2|0;c[k>>2]=K;$=ba;aa=K}else{$=-1;aa=_}while(0);K=0;G=aa;while(1){if(((a[G>>0]|0)+-65|0)>>>0>57){V=-1;break a}O=G;G=G+1|0;c[k>>2]=G;ca=a[(a[O>>0]|0)+-65+(86989+(K*58|0))>>0]|0;da=ca&255;if((da+-1|0)>>>0>=8)break;else K=da}if(!(ca<<24>>24)){V=-1;break}O=(H|0)>-1;do if(ca<<24>>24==19)if(O){V=-1;break a}else A=50;else{if(O){c[i+(H<<2)>>2]=da;P=g+(H<<3)|0;Q=c[P+4>>2]|0;y=m;c[y>>2]=c[P>>2];c[y+4>>2]=Q;A=50;break}if(!e){V=0;break a}jF(m,da,f);ea=c[k>>2]|0}while(0);if((A|0)==50){A=0;if(e)ea=G;else{t=0;u=w;v=Z;continue}}O=a[ea+-1>>0]|0;Q=(K|0)!=0&(O&15|0)==3?O&-33:O;O=Y&-65537;y=(Y&8192|0)==0?Y:O;d:do switch(Q|0){case 110:{switch((K&255)<<24>>24){case 0:{c[c[m>>2]>>2]=w;t=0;u=w;v=Z;continue a;break}case 1:{c[c[m>>2]>>2]=w;t=0;u=w;v=Z;continue a;break}case 2:{P=c[m>>2]|0;c[P>>2]=w;c[P+4>>2]=((w|0)<0)<<31>>31;t=0;u=w;v=Z;continue a;break}case 3:{b[c[m>>2]>>1]=w;t=0;u=w;v=Z;continue a;break}case 4:{a[c[m>>2]>>0]=w;t=0;u=w;v=Z;continue a;break}case 6:{c[c[m>>2]>>2]=w;t=0;u=w;v=Z;continue a;break}case 7:{P=c[m>>2]|0;c[P>>2]=w;c[P+4>>2]=((w|0)<0)<<31>>31;t=0;u=w;v=Z;continue a;break}default:{t=0;u=w;v=Z;continue a}}break}case 112:{fa=120;ga=$>>>0>8?$:8;ha=y|8;A=62;break}case 88:case 120:{fa=Q;ga=$;ha=y;A=62;break}case 111:{P=m;R=c[P>>2]|0;ia=c[P+4>>2]|0;P=lF(R,ia,q)|0;ja=r-P|0;ka=P;la=0;ma=87453;na=(y&8|0)==0|($|0)>(ja|0)?$:ja+1|0;oa=y;pa=R;qa=ia;A=68;break}case 105:case 100:{ia=m;R=c[ia>>2]|0;ja=c[ia+4>>2]|0;if((ja|0)<0){ia=tT(0,0,R|0,ja|0)|0;P=z;ra=m;c[ra>>2]=ia;c[ra+4>>2]=P;sa=1;ta=87453;ua=ia;va=P;A=67;break d}else{sa=(y&2049|0)!=0&1;ta=(y&2048|0)==0?((y&1|0)==0?87453:87455):87454;ua=R;va=ja;A=67;break d}break}case 117:{ja=m;sa=0;ta=87453;ua=c[ja>>2]|0;va=c[ja+4>>2]|0;A=67;break}case 99:{a[s>>0]=c[m>>2];wa=s;xa=0;ya=87453;za=q;Aa=1;Ba=O;break}case 109:{Ca=nF(c[(LE()|0)>>2]|0)|0;A=72;break}case 115:{ja=c[m>>2]|0;Ca=ja|0?ja:87463;A=72;break}case 67:{c[o>>2]=c[m>>2];c[n>>2]=0;c[m>>2]=o;Da=-1;Ea=o;A=76;break}case 83:{ja=c[m>>2]|0;if(!$){pF(d,32,X,0,y);Fa=0;A=85}else{Da=$;Ea=ja;A=76}break}case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:{t=rF(d,+h[m>>3],X,$,y,Q)|0;u=w;v=Z;continue a;break}default:{wa=x;xa=0;ya=87453;za=q;Aa=$;Ba=y}}while(0);e:do if((A|0)==62){A=0;x=m;Q=c[x>>2]|0;K=c[x+4>>2]|0;x=kF(Q,K,q,fa&32)|0;G=(ha&8|0)==0|(Q|0)==0&(K|0)==0;ka=x;la=G?0:2;ma=G?87453:87453+(fa>>4)|0;na=ga;oa=ha;pa=Q;qa=K;A=68}else if((A|0)==67){A=0;ka=mF(ua,va,q)|0;la=sa;ma=ta;na=$;oa=y;pa=ua;qa=va;A=68}else if((A|0)==72){A=0;K=oF(Ca,0,$)|0;Q=(K|0)==0;wa=Ca;xa=0;ya=87453;za=Q?Ca+$|0:K;Aa=Q?$:K-Ca|0;Ba=O}else if((A|0)==76){A=0;K=Ea;Q=0;G=0;while(1){x=c[K>>2]|0;if(!x){Ga=Q;Ha=G;break}ja=qF(p,x)|0;if((ja|0)<0|ja>>>0>(Da-Q|0)>>>0){Ga=Q;Ha=ja;break}x=ja+Q|0;if(Da>>>0>x>>>0){K=K+4|0;Q=x;G=ja}else{Ga=x;Ha=ja;break}}if((Ha|0)<0){V=-1;break a}pF(d,32,X,Ga,y);if(!Ga){Fa=0;A=85}else{G=Ea;Q=0;while(1){K=c[G>>2]|0;if(!K){Fa=Ga;A=85;break e}ja=qF(p,K)|0;Q=ja+Q|0;if((Q|0)>(Ga|0)){Fa=Ga;A=85;break e}hF(d,p,ja);if(Q>>>0>=Ga>>>0){Fa=Ga;A=85;break}else G=G+4|0}}}while(0);if((A|0)==68){A=0;O=(pa|0)!=0|(qa|0)!=0;G=(na|0)!=0|O;Q=r-ka+((O^1)&1)|0;wa=G?ka:q;xa=la;ya=ma;za=q;Aa=G?((na|0)>(Q|0)?na:Q):na;Ba=(na|0)>-1?oa&-65537:oa}else if((A|0)==85){A=0;pF(d,32,X,Fa,y^8192);t=(X|0)>(Fa|0)?X:Fa;u=w;v=Z;continue}Q=za-wa|0;G=(Aa|0)<(Q|0)?Q:Aa;O=G+xa|0;ja=(X|0)<(O|0)?O:X;pF(d,32,ja,O,Ba);hF(d,ya,xa);pF(d,48,ja,O,Ba^65536);pF(d,48,G,Q,0);hF(d,wa,Q);pF(d,32,ja,O,Ba^8192);t=ja;u=w;v=Z}f:do if((A|0)==88)if(!d)if(v){Z=1;while(1){u=c[i+(Z<<2)>>2]|0;if(!u){Ia=Z;break}jF(g+(Z<<3)|0,u,f);u=Z+1|0;if((Z|0)<9)Z=u;else{Ia=u;break}}if((Ia|0)<10){Z=Ia;while(1){if(c[i+(Z<<2)>>2]|0){V=-1;break f}if((Z|0)<9)Z=Z+1|0;else{V=1;break}}}else V=1}else V=0;else V=w;while(0);l=j;return V|0}function fF(a){a=a|0;return 0}function gF(a){a=a|0;return}function hF(a,b,d){a=a|0;b=b|0;d=d|0;if(!(c[a>>2]&32))EF(b,d,a)|0;return}function iF(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;if(!(bF(a[c[b>>2]>>0]|0)|0))d=0;else{e=0;while(1){f=c[b>>2]|0;g=(e*10|0)+-48+(a[f>>0]|0)|0;h=f+1|0;c[b>>2]=h;if(!(bF(a[h>>0]|0)|0)){d=g;break}else e=g}}return d|0}function jF(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,i=0,j=0.0;a:do if(b>>>0<=20)do switch(b|0){case 9:{e=(c[d>>2]|0)+(4-1)&~(4-1);f=c[e>>2]|0;c[d>>2]=e+4;c[a>>2]=f;break a;break}case 10:{f=(c[d>>2]|0)+(4-1)&~(4-1);e=c[f>>2]|0;c[d>>2]=f+4;f=a;c[f>>2]=e;c[f+4>>2]=((e|0)<0)<<31>>31;break a;break}case 11:{e=(c[d>>2]|0)+(4-1)&~(4-1);f=c[e>>2]|0;c[d>>2]=e+4;e=a;c[e>>2]=f;c[e+4>>2]=0;break a;break}case 12:{e=(c[d>>2]|0)+(8-1)&~(8-1);f=e;g=c[f>>2]|0;i=c[f+4>>2]|0;c[d>>2]=e+8;e=a;c[e>>2]=g;c[e+4>>2]=i;break a;break}case 13:{i=(c[d>>2]|0)+(4-1)&~(4-1);e=c[i>>2]|0;c[d>>2]=i+4;i=(e&65535)<<16>>16;e=a;c[e>>2]=i;c[e+4>>2]=((i|0)<0)<<31>>31;break a;break}case 14:{i=(c[d>>2]|0)+(4-1)&~(4-1);e=c[i>>2]|0;c[d>>2]=i+4;i=a;c[i>>2]=e&65535;c[i+4>>2]=0;break a;break}case 15:{i=(c[d>>2]|0)+(4-1)&~(4-1);e=c[i>>2]|0;c[d>>2]=i+4;i=(e&255)<<24>>24;e=a;c[e>>2]=i;c[e+4>>2]=((i|0)<0)<<31>>31;break a;break}case 16:{i=(c[d>>2]|0)+(4-1)&~(4-1);e=c[i>>2]|0;c[d>>2]=i+4;i=a;c[i>>2]=e&255;c[i+4>>2]=0;break a;break}case 17:{i=(c[d>>2]|0)+(8-1)&~(8-1);j=+h[i>>3];c[d>>2]=i+8;h[a>>3]=j;break a;break}case 18:{i=(c[d>>2]|0)+(8-1)&~(8-1);j=+h[i>>3];c[d>>2]=i+8;h[a>>3]=j;break a;break}default:break a}while(0);while(0);return}function kF(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0;if((b|0)==0&(c|0)==0)g=e;else{h=e;e=c;c=b;while(1){b=h+-1|0;a[b>>0]=d[87501+(c&15)>>0]|0|f;c=zT(c|0,e|0,4)|0;e=z;if((c|0)==0&(e|0)==0){g=b;break}else h=b}}return g|0}function lF(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0;if((b|0)==0&(c|0)==0)e=d;else{f=d;d=c;c=b;while(1){b=f+-1|0;a[b>>0]=c&7|48;c=zT(c|0,d|0,3)|0;d=z;if((c|0)==0&(d|0)==0){e=b;break}else f=b}}return e|0}function mF(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;if(c>>>0>0|(c|0)==0&b>>>0>4294967295){e=d;f=b;g=c;while(1){c=xT(f|0,g|0,10,0)|0;e=e+-1|0;a[e>>0]=c&255|48;c=f;f=wT(f|0,g|0,10,0)|0;if(!(g>>>0>9|(g|0)==9&c>>>0>4294967295))break;else g=z}h=f;i=e}else{h=b;i=d}if(!h)j=i;else{d=h;h=i;while(1){i=h+-1|0;a[i>>0]=(d>>>0)%10|0|48;if(d>>>0<10){j=i;break}else{d=(d>>>0)/10|0;h=i}}}return j|0}function nF(a){a=a|0;return zF(a,c[(yF()|0)+188>>2]|0)|0}function oF(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=d&255;g=(e|0)!=0;a:do if(g&(b&3|0)!=0){h=d&255;i=b;j=e;while(1){if((a[i>>0]|0)==h<<24>>24){k=i;l=j;m=6;break a}n=i+1|0;o=j+-1|0;p=(o|0)!=0;if(p&(n&3|0)!=0){i=n;j=o}else{q=n;r=o;s=p;m=5;break}}}else{q=b;r=e;s=g;m=5}while(0);if((m|0)==5)if(s){k=q;l=r;m=6}else{t=q;u=0}b:do if((m|0)==6){q=d&255;if((a[k>>0]|0)==q<<24>>24){t=k;u=l}else{r=O(f,16843009)|0;c:do if(l>>>0>3){s=k;g=l;while(1){e=c[s>>2]^r;if((e&-2139062144^-2139062144)&e+-16843009|0)break;e=s+4|0;b=g+-4|0;if(b>>>0>3){s=e;g=b}else{v=e;w=b;m=11;break c}}x=s;y=g}else{v=k;w=l;m=11}while(0);if((m|0)==11)if(!w){t=v;u=0;break}else{x=v;y=w}while(1){if((a[x>>0]|0)==q<<24>>24){t=x;u=y;break b}r=x+1|0;y=y+-1|0;if(!y){t=r;u=0;break}else x=r}}}while(0);return (u|0?t:0)|0}function pF(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=l;l=l+256|0;g=f;if((c|0)>(d|0)&(e&73728|0)==0){e=c-d|0;ET(g|0,b<<24>>24|0,(e>>>0<256?e:256)|0)|0;if(e>>>0>255){b=c-d|0;d=e;do{hF(a,g,256);d=d+-256|0}while(d>>>0>255);h=b&255}else h=e;hF(a,g,h)}l=f;return}function qF(a,b){a=a|0;b=b|0;var c=0;if(!a)c=0;else c=vF(a,b,0)|0;return c|0}function rF(b,e,f,g,h,i){b=b|0;e=+e;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0.0,D=0,E=0.0,F=0,G=0,H=0,I=0.0,J=0,K=0,L=0,M=0,N=0,P=0.0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0.0,ga=0.0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0;j=l;l=l+560|0;k=j+8|0;m=j;n=j+524|0;o=n;p=j+512|0;c[m>>2]=0;q=p+12|0;sF(e)|0;if((z|0)<0){r=-e;s=1;t=87470}else{r=e;s=(h&2049|0)!=0&1;t=(h&2048|0)==0?((h&1|0)==0?87471:87476):87473}sF(r)|0;do if(0==0&(z&2146435072|0)==2146435072){u=(i&32|0)!=0;v=s+3|0;pF(b,32,f,v,h&-65537);hF(b,t,s);hF(b,r!=r|0.0!=0.0?(u?89420:87497):u?87489:87493,3);pF(b,32,f,v,h^8192);w=v}else{e=+tF(r,m)*2.0;v=e!=0.0;if(v)c[m>>2]=(c[m>>2]|0)+-1;u=i|32;if((u|0)==97){x=i&32;y=(x|0)==0?t:t+9|0;A=s|2;B=12-g|0;do if(!(g>>>0>11|(B|0)==0)){C=8.0;D=B;do{D=D+-1|0;C=C*16.0}while((D|0)!=0);if((a[y>>0]|0)==45){E=-(C+(-e-C));break}else{E=e+C-C;break}}else E=e;while(0);B=c[m>>2]|0;D=(B|0)<0?0-B|0:B;F=mF(D,((D|0)<0)<<31>>31,q)|0;if((F|0)==(q|0)){D=p+11|0;a[D>>0]=48;G=D}else G=F;a[G+-1>>0]=(B>>31&2)+43;B=G+-2|0;a[B>>0]=i+15;F=(g|0)<1;D=(h&8|0)==0;H=n;I=E;while(1){J=~~I;K=H+1|0;a[H>>0]=x|d[87501+J>>0];I=(I-+(J|0))*16.0;if((K-o|0)==1?!(D&(F&I==0.0)):0){a[K>>0]=46;L=H+2|0}else L=K;if(!(I!=0.0))break;else H=L}H=L;if((g|0)!=0?(-2-o+H|0)<(g|0):0){M=H-o|0;N=g+2|0}else{F=H-o|0;M=F;N=F}F=q-B|0;H=F+A+N|0;pF(b,32,f,H,h);hF(b,y,A);pF(b,48,f,H,h^65536);hF(b,n,M);pF(b,48,N-M|0,0,0);hF(b,B,F);pF(b,32,f,H,h^8192);w=H;break}H=(g|0)<0?6:g;if(v){F=(c[m>>2]|0)+-28|0;c[m>>2]=F;P=e*268435456.0;Q=F}else{P=e;Q=c[m>>2]|0}F=(Q|0)<0?k:k+288|0;D=F;I=P;do{x=~~I>>>0;c[D>>2]=x;D=D+4|0;I=(I-+(x>>>0))*1.0e9}while(I!=0.0);if((Q|0)>0){v=F;B=D;A=Q;while(1){y=(A|0)<29?A:29;x=B+-4|0;if(x>>>0>=v>>>0){K=x;x=0;do{J=AT(c[K>>2]|0,0,y|0)|0;R=sT(J|0,z|0,x|0,0)|0;J=z;S=xT(R|0,J|0,1e9,0)|0;c[K>>2]=S;x=wT(R|0,J|0,1e9,0)|0;K=K+-4|0}while(K>>>0>=v>>>0);if(x){K=v+-4|0;c[K>>2]=x;T=K}else T=v}else T=v;K=B;while(1){if(K>>>0<=T>>>0)break;J=K+-4|0;if(!(c[J>>2]|0))K=J;else break}x=(c[m>>2]|0)-y|0;c[m>>2]=x;if((x|0)>0){v=T;B=K;A=x}else{U=T;V=K;W=x;break}}}else{U=F;V=D;W=Q}if((W|0)<0){A=((H+25|0)/9|0)+1|0;B=(u|0)==102;v=U;x=V;J=W;while(1){R=0-J|0;S=(R|0)<9?R:9;if(v>>>0<x>>>0){R=(1<<S)+-1|0;X=1e9>>>S;Y=0;Z=v;do{_=c[Z>>2]|0;c[Z>>2]=(_>>>S)+Y;Y=O(_&R,X)|0;Z=Z+4|0}while(Z>>>0<x>>>0);Z=(c[v>>2]|0)==0?v+4|0:v;if(!Y){$=Z;aa=x}else{c[x>>2]=Y;$=Z;aa=x+4|0}}else{$=(c[v>>2]|0)==0?v+4|0:v;aa=x}Z=B?F:$;X=(aa-Z>>2|0)>(A|0)?Z+(A<<2)|0:aa;J=(c[m>>2]|0)+S|0;c[m>>2]=J;if((J|0)>=0){ba=$;ca=X;break}else{v=$;x=X}}}else{ba=U;ca=V}x=F;if(ba>>>0<ca>>>0){v=(x-ba>>2)*9|0;J=c[ba>>2]|0;if(J>>>0<10)da=v;else{A=v;v=10;while(1){v=v*10|0;B=A+1|0;if(J>>>0<v>>>0){da=B;break}else A=B}}}else da=0;A=(u|0)==103;v=(H|0)!=0;J=H-((u|0)!=102?da:0)+((v&A)<<31>>31)|0;if((J|0)<(((ca-x>>2)*9|0)+-9|0)){B=J+9216|0;J=F+4+(((B|0)/9|0)+-1024<<2)|0;D=(B|0)%9|0;if((D|0)<8){B=D;D=10;while(1){X=D*10|0;if((B|0)<7){B=B+1|0;D=X}else{ea=X;break}}}else ea=10;D=c[J>>2]|0;B=(D>>>0)%(ea>>>0)|0;u=(J+4|0)==(ca|0);if(!(u&(B|0)==0)){C=(((D>>>0)/(ea>>>0)|0)&1|0)==0?9007199254740992.0:9007199254740994.0;X=(ea|0)/2|0;I=B>>>0<X>>>0?.5:u&(B|0)==(X|0)?1.0:1.5;if(!s){fa=I;ga=C}else{X=(a[t>>0]|0)==45;fa=X?-I:I;ga=X?-C:C}X=D-B|0;c[J>>2]=X;if(ga+fa!=ga){B=X+ea|0;c[J>>2]=B;if(B>>>0>999999999){B=ba;X=J;while(1){D=X+-4|0;c[X>>2]=0;if(D>>>0<B>>>0){u=B+-4|0;c[u>>2]=0;ha=u}else ha=B;u=(c[D>>2]|0)+1|0;c[D>>2]=u;if(u>>>0>999999999){B=ha;X=D}else{ia=ha;ja=D;break}}}else{ia=ba;ja=J}X=(x-ia>>2)*9|0;B=c[ia>>2]|0;if(B>>>0<10){ka=ja;la=X;ma=ia}else{D=X;X=10;while(1){X=X*10|0;u=D+1|0;if(B>>>0<X>>>0){ka=ja;la=u;ma=ia;break}else D=u}}}else{ka=J;la=da;ma=ba}}else{ka=J;la=da;ma=ba}D=ka+4|0;na=la;oa=ca>>>0>D>>>0?D:ca;pa=ma}else{na=da;oa=ca;pa=ba}D=oa;while(1){if(D>>>0<=pa>>>0){qa=0;break}X=D+-4|0;if(!(c[X>>2]|0))D=X;else{qa=1;break}}J=0-na|0;do if(A){X=H+((v^1)&1)|0;if((X|0)>(na|0)&(na|0)>-5){ra=i+-1|0;sa=X+-1-na|0}else{ra=i+-2|0;sa=X+-1|0}X=h&8;if(!X){if(qa?(B=c[D+-4>>2]|0,(B|0)!=0):0)if(!((B>>>0)%10|0)){u=0;Z=10;while(1){Z=Z*10|0;R=u+1|0;if((B>>>0)%(Z>>>0)|0|0){ta=R;break}else u=R}}else ta=0;else ta=9;u=((D-x>>2)*9|0)+-9|0;if((ra|32|0)==102){Z=u-ta|0;B=(Z|0)>0?Z:0;ua=ra;va=(sa|0)<(B|0)?sa:B;wa=0;break}else{B=u+na-ta|0;u=(B|0)>0?B:0;ua=ra;va=(sa|0)<(u|0)?sa:u;wa=0;break}}else{ua=ra;va=sa;wa=X}}else{ua=i;va=H;wa=h&8}while(0);H=va|wa;x=(H|0)!=0&1;v=(ua|32|0)==102;if(v){xa=0;ya=(na|0)>0?na:0}else{A=(na|0)<0?J:na;u=mF(A,((A|0)<0)<<31>>31,q)|0;A=q;if((A-u|0)<2){B=u;while(1){Z=B+-1|0;a[Z>>0]=48;if((A-Z|0)<2)B=Z;else{za=Z;break}}}else za=u;a[za+-1>>0]=(na>>31&2)+43;B=za+-2|0;a[B>>0]=ua;xa=B;ya=A-B|0}B=s+1+va+x+ya|0;pF(b,32,f,B,h);hF(b,t,s);pF(b,48,f,B,h^65536);if(v){J=pa>>>0>F>>>0?F:pa;Z=n+9|0;S=Z;Y=n+8|0;R=J;do{K=mF(c[R>>2]|0,0,Z)|0;if((R|0)==(J|0))if((K|0)==(Z|0)){a[Y>>0]=48;Aa=Y}else Aa=K;else if(K>>>0>n>>>0){ET(n|0,48,K-o|0)|0;y=K;while(1){_=y+-1|0;if(_>>>0>n>>>0)y=_;else{Aa=_;break}}}else Aa=K;hF(b,Aa,S-Aa|0);R=R+4|0}while(R>>>0<=F>>>0);if(H|0)hF(b,87517,1);if(R>>>0<D>>>0&(va|0)>0){F=va;S=R;while(1){Y=mF(c[S>>2]|0,0,Z)|0;if(Y>>>0>n>>>0){ET(n|0,48,Y-o|0)|0;J=Y;while(1){v=J+-1|0;if(v>>>0>n>>>0)J=v;else{Ba=v;break}}}else Ba=Y;hF(b,Ba,(F|0)<9?F:9);S=S+4|0;J=F+-9|0;if(!(S>>>0<D>>>0&(F|0)>9)){Ca=J;break}else F=J}}else Ca=va;pF(b,48,Ca+9|0,9,0)}else{F=qa?D:pa+4|0;if((va|0)>-1){S=n+9|0;Z=(wa|0)==0;R=S;H=0-o|0;J=n+8|0;K=va;v=pa;while(1){x=mF(c[v>>2]|0,0,S)|0;if((x|0)==(S|0)){a[J>>0]=48;Da=J}else Da=x;do if((v|0)==(pa|0)){x=Da+1|0;hF(b,Da,1);if(Z&(K|0)<1){Ea=x;break}hF(b,87517,1);Ea=x}else{if(Da>>>0<=n>>>0){Ea=Da;break}ET(n|0,48,Da+H|0)|0;x=Da;while(1){A=x+-1|0;if(A>>>0>n>>>0)x=A;else{Ea=A;break}}}while(0);Y=R-Ea|0;hF(b,Ea,(K|0)>(Y|0)?Y:K);x=K-Y|0;v=v+4|0;if(!(v>>>0<F>>>0&(x|0)>-1)){Fa=x;break}else K=x}}else Fa=va;pF(b,48,Fa+18|0,18,0);hF(b,xa,q-xa|0)}pF(b,32,f,B,h^8192);w=B}while(0);l=j;return ((w|0)<(f|0)?f:w)|0}function sF(a){a=+a;var b=0;h[j>>3]=a;b=c[j>>2]|0;z=c[j+4>>2]|0;return b|0}function tF(a,b){a=+a;b=b|0;return +(+uF(a,b))}function uF(a,b){a=+a;b=b|0;var d=0,e=0,f=0,g=0.0,i=0.0,k=0,l=0.0;h[j>>3]=a;d=c[j>>2]|0;e=c[j+4>>2]|0;f=zT(d|0,e|0,52)|0;switch(f&2047){case 0:{if(a!=0.0){g=+uF(a*18446744073709551616.0,b);i=g;k=(c[b>>2]|0)+-64|0}else{i=a;k=0}c[b>>2]=k;l=i;break}case 2047:{l=a;break}default:{c[b>>2]=(f&2047)+-1022;c[j>>2]=d;c[j+4>>2]=e&-2146435073|1071644672;l=+h[j>>3]}}return +l}function vF(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;do if(b){if(d>>>0<128){a[b>>0]=d;f=1;break}if(!(c[c[(wF()|0)+188>>2]>>2]|0))if((d&-128|0)==57216){a[b>>0]=d;f=1;break}else{c[(LE()|0)>>2]=84;f=-1;break}if(d>>>0<2048){a[b>>0]=d>>>6|192;a[b+1>>0]=d&63|128;f=2;break}if(d>>>0<55296|(d&-8192|0)==57344){a[b>>0]=d>>>12|224;a[b+1>>0]=d>>>6&63|128;a[b+2>>0]=d&63|128;f=3;break}if((d+-65536|0)>>>0<1048576){a[b>>0]=d>>>18|240;a[b+1>>0]=d>>>12&63|128;a[b+2>>0]=d>>>6&63|128;a[b+3>>0]=d&63|128;f=4;break}else{c[(LE()|0)>>2]=84;f=-1;break}}else f=1;while(0);return f|0}function wF(){return xF()|0}function xF(){return 50952}function yF(){return xF()|0}function zF(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=0;while(1){if((d[87519+f>>0]|0)==(b|0)){g=2;break}h=f+1|0;if((h|0)==87){i=87607;j=87;g=5;break}else f=h}if((g|0)==2)if(!f)k=87607;else{i=87607;j=f;g=5}if((g|0)==5)while(1){g=0;f=i;do{b=f;f=f+1|0}while((a[b>>0]|0)!=0);j=j+-1|0;if(!j){k=f;break}else{i=f;g=5}}return AF(k,c[e+20>>2]|0)|0}function AF(a,b){a=a|0;b=b|0;return BF(a,b)|0}function BF(a,b){a=a|0;b=b|0;var d=0;if(!b)d=0;else d=CF(c[b>>2]|0,c[b+4>>2]|0,a)|0;return (d|0?d:a)|0}function CF(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=(c[b>>2]|0)+1794895138|0;g=DF(c[b+8>>2]|0,f)|0;h=DF(c[b+12>>2]|0,f)|0;i=DF(c[b+16>>2]|0,f)|0;a:do if((g>>>0<d>>>2>>>0?(j=d-(g<<2)|0,h>>>0<j>>>0&i>>>0<j>>>0):0)?((i|h)&3|0)==0:0){j=h>>>2;k=i>>>2;l=0;m=g;while(1){n=m>>>1;o=l+n|0;p=o<<1;q=p+j|0;r=DF(c[b+(q<<2)>>2]|0,f)|0;s=DF(c[b+(q+1<<2)>>2]|0,f)|0;if(!(s>>>0<d>>>0&r>>>0<(d-s|0)>>>0)){t=0;break a}if(a[b+(s+r)>>0]|0){t=0;break a}r=$E(e,b+s|0)|0;if(!r)break;s=(r|0)<0;if((m|0)==1){t=0;break a}else{l=s?l:o;m=s?n:m-n|0}}m=p+k|0;l=DF(c[b+(m<<2)>>2]|0,f)|0;j=DF(c[b+(m+1<<2)>>2]|0,f)|0;if(j>>>0<d>>>0&l>>>0<(d-j|0)>>>0)t=(a[b+(j+l)>>0]|0)==0?b+j|0:0;else t=0}else t=0;while(0);return t|0}function DF(a,b){a=a|0;b=b|0;var c=0;c=BT(a|0)|0;return ((b|0)==0?a:c)|0}function EF(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=e+16|0;g=c[f>>2]|0;if(!g)if(!(FF(e)|0)){h=c[f>>2]|0;i=5}else j=0;else{h=g;i=5}a:do if((i|0)==5){g=e+20|0;f=c[g>>2]|0;k=f;if((h-f|0)>>>0<d>>>0){j=fd[c[e+36>>2]&127](e,b,d)|0;break}b:do if((a[e+75>>0]|0)>-1){f=d;while(1){if(!f){l=0;m=b;n=d;o=k;break b}p=f+-1|0;if((a[b+p>>0]|0)==10)break;else f=p}p=fd[c[e+36>>2]&127](e,b,f)|0;if(p>>>0<f>>>0){j=p;break a}l=f;m=b+f|0;n=d-f|0;o=c[g>>2]|0}else{l=0;m=b;n=d;o=k}while(0);CT(o|0,m|0,n|0)|0;c[g>>2]=(c[g>>2]|0)+n;j=l+n|0}while(0);return j|0}function FF(b){b=b|0;var d=0,e=0,f=0;d=b+74|0;e=a[d>>0]|0;a[d>>0]=e+255|e;e=c[b>>2]|0;if(!(e&8)){c[b+8>>2]=0;c[b+4>>2]=0;d=c[b+44>>2]|0;c[b+28>>2]=d;c[b+20>>2]=d;c[b+16>>2]=d+(c[b+48>>2]|0);f=0}else{c[b>>2]=e|32;f=-1}return f|0}function GF(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a+20|0;f=c[e>>2]|0;g=(c[a+16>>2]|0)-f|0;a=g>>>0>d>>>0?d:g;CT(f|0,b|0,a|0)|0;c[e>>2]=(c[e>>2]|0)+a;return d|0}function HF(){return 51196}function IF(){var a=0;a=(c[c[(JF()|0)+188>>2]>>2]|0)!=0;return (a?4:1)|0}function JF(){return xF()|0}function KF(){return 51200}function LF(){return 52740}function MF(a){a=a|0;var b=0;b=a;while(1)if(!(c[b>>2]|0))break;else b=b+4|0;return b-a>>2|0}function NF(a){a=a|0;return (((a|32)+-97|0)>>>0<6|(bF(a)|0)!=0)&1|0}function OF(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0.0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;switch(e|0){case 0:{g=-149;h=24;i=4;break}case 1:{g=-1074;h=53;i=4;break}case 2:{g=-1074;h=53;i=4;break}default:j=0.0}a:do if((i|0)==4){e=b+4|0;k=b+100|0;do{l=c[e>>2]|0;if(l>>>0<(c[k>>2]|0)>>>0){c[e>>2]=l+1;m=d[l>>0]|0}else m=UE(b)|0}while((VE(m)|0)!=0);b:do switch(m|0){case 43:case 45:{l=1-(((m|0)==45&1)<<1)|0;n=c[e>>2]|0;if(n>>>0<(c[k>>2]|0)>>>0){c[e>>2]=n+1;o=d[n>>0]|0;p=l;break b}else{o=UE(b)|0;p=l;break b}break}default:{o=m;p=1}}while(0);l=0;n=o;while(1){if((n|32|0)!=(a[89411+l>>0]|0)){q=l;r=n;break}do if(l>>>0<7){u=c[e>>2]|0;if(u>>>0<(c[k>>2]|0)>>>0){c[e>>2]=u+1;v=d[u>>0]|0;break}else{v=UE(b)|0;break}}else v=n;while(0);u=l+1|0;if(u>>>0<8){l=u;n=v}else{q=u;r=v;break}}c:do switch(q|0){case 8:break;case 3:{i=23;break}default:{n=(f|0)!=0;if(n&q>>>0>3)if((q|0)==8)break c;else{i=23;break c}d:do if(!q){l=0;u=r;while(1){if((u|32|0)!=(a[89420+l>>0]|0)){w=l;x=u;break d}do if(l>>>0<2){y=c[e>>2]|0;if(y>>>0<(c[k>>2]|0)>>>0){c[e>>2]=y+1;z=d[y>>0]|0;break}else{z=UE(b)|0;break}}else z=u;while(0);y=l+1|0;if(y>>>0<3){l=y;u=z}else{w=y;x=z;break}}}else{w=q;x=r}while(0);switch(w|0){case 3:{u=c[e>>2]|0;if(u>>>0<(c[k>>2]|0)>>>0){c[e>>2]=u+1;A=d[u>>0]|0}else A=UE(b)|0;if((A|0)==40)B=1;else{if(!(c[k>>2]|0)){j=s;break a}c[e>>2]=(c[e>>2]|0)+-1;j=s;break a}while(1){u=c[e>>2]|0;if(u>>>0<(c[k>>2]|0)>>>0){c[e>>2]=u+1;C=d[u>>0]|0}else C=UE(b)|0;if(!((C+-48|0)>>>0<10|(C+-65|0)>>>0<26)?!((C|0)==95|(C+-97|0)>>>0<26):0)break;B=B+1|0}if((C|0)==41){j=s;break a}u=(c[k>>2]|0)==0;if(!u)c[e>>2]=(c[e>>2]|0)+-1;if(!n){c[(LE()|0)>>2]=22;SE(b,0);j=0.0;break a}if(!B){j=s;break a}else D=B;while(1){D=D+-1|0;if(!u)c[e>>2]=(c[e>>2]|0)+-1;if(!D){j=s;break a}}break}case 0:{if((x|0)==48){u=c[e>>2]|0;if(u>>>0<(c[k>>2]|0)>>>0){c[e>>2]=u+1;E=d[u>>0]|0}else E=UE(b)|0;if((E|32|0)==120){j=+PF(b,h,g,p,f);break a}if(!(c[k>>2]|0))F=48;else{c[e>>2]=(c[e>>2]|0)+-1;F=48}}else F=x;j=+QF(b,F,h,g,p,f);break a;break}default:{if(c[k>>2]|0)c[e>>2]=(c[e>>2]|0)+-1;c[(LE()|0)>>2]=22;SE(b,0);j=0.0;break a}}}}while(0);if((i|0)==23){u=(c[k>>2]|0)==0;if(!u)c[e>>2]=(c[e>>2]|0)+-1;if((f|0)!=0&q>>>0>3){n=q;do{if(!u)c[e>>2]=(c[e>>2]|0)+-1;n=n+-1|0}while(n>>>0>3)}}j=+(p|0)*t}while(0);return +j}function PF(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0,H=0.0,I=0,J=0,K=0,L=0,M=0,N=0,O=0.0,P=0,Q=0.0,R=0.0,S=0,T=0.0,U=0,V=0,W=0,X=0.0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0.0,da=0,ea=0.0;h=a+4|0;i=c[h>>2]|0;j=a+100|0;if(i>>>0<(c[j>>2]|0)>>>0){c[h>>2]=i+1;k=d[i>>0]|0;l=0}else{k=UE(a)|0;l=0}a:while(1){switch(k|0){case 46:{m=8;break a;break}case 48:break;default:{n=0;o=0;p=1.0;q=0.0;r=0;s=k;t=l;u=0;v=0;w=0;x=0;break a}}i=c[h>>2]|0;if(i>>>0<(c[j>>2]|0)>>>0){c[h>>2]=i+1;k=d[i>>0]|0;l=1;continue}else{k=UE(a)|0;l=1;continue}}if((m|0)==8){k=c[h>>2]|0;if(k>>>0<(c[j>>2]|0)>>>0){c[h>>2]=k+1;y=d[k>>0]|0}else y=UE(a)|0;if((y|0)==48){k=0;i=0;while(1){A=c[h>>2]|0;if(A>>>0<(c[j>>2]|0)>>>0){c[h>>2]=A+1;B=d[A>>0]|0}else B=UE(a)|0;A=sT(k|0,i|0,-1,-1)|0;C=z;if((B|0)==48){k=A;i=C}else{n=1;o=0;p=1.0;q=0.0;r=0;s=B;t=1;u=0;v=0;w=A;x=C;break}}}else{n=1;o=0;p=1.0;q=0.0;r=0;s=y;t=l;u=0;v=0;w=0;x=0}}while(1){l=s+-48|0;y=s|32;if(l>>>0>=10){B=(s|0)==46;if(!(B|(y+-97|0)>>>0<6)){D=s;break}if(B)if(!n){E=1;F=o;G=p;H=q;I=r;J=t;K=v;L=u;M=v;N=u}else{D=46;break}else m=20}else m=20;if((m|0)==20){m=0;B=(s|0)>57?y+-87|0:l;do if(!((u|0)<0|(u|0)==0&v>>>0<8))if((u|0)<0|(u|0)==0&v>>>0<14){O=p*.0625;P=o;Q=O;R=q+O*+(B|0);S=r;break}else{l=(o|0)!=0|(B|0)==0;P=l?o:1;Q=p;R=l?q:q+p*.5;S=r;break}else{P=o;Q=p;R=q;S=B+(r<<4)|0}while(0);B=sT(v|0,u|0,1,0)|0;E=n;F=P;G=Q;H=R;I=S;J=1;K=w;L=x;M=B;N=z}B=c[h>>2]|0;if(B>>>0<(c[j>>2]|0)>>>0){c[h>>2]=B+1;n=E;o=F;p=G;q=H;r=I;s=d[B>>0]|0;t=J;u=N;v=M;w=K;x=L;continue}else{n=E;o=F;p=G;q=H;r=I;s=UE(a)|0;t=J;u=N;v=M;w=K;x=L;continue}}do if(!t){L=(c[j>>2]|0)==0;if(!L)c[h>>2]=(c[h>>2]|0)+-1;if(g){if(!L)c[h>>2]=(c[h>>2]|0)+-1;if(!((n|0)==0|L))c[h>>2]=(c[h>>2]|0)+-1}else SE(a,0);T=+(f|0)*0.0}else{L=(n|0)==0;K=L?v:w;M=L?u:x;if((u|0)<0|(u|0)==0&v>>>0<8){L=r;N=v;J=u;while(1){s=L<<4;I=N;N=sT(N|0,J|0,1,0)|0;if(!((J|0)<0|(J|0)==0&I>>>0<7)){U=s;break}else{L=s;J=z}}}else U=r;if((D|32|0)==112){J=RF(a,g)|0;L=z;if((J|0)==0&(L|0)==-2147483648){if(!g){SE(a,0);T=0.0;break}if(!(c[j>>2]|0)){V=0;W=0}else{c[h>>2]=(c[h>>2]|0)+-1;V=0;W=0}}else{V=J;W=L}}else if(!(c[j>>2]|0)){V=0;W=0}else{c[h>>2]=(c[h>>2]|0)+-1;V=0;W=0}L=AT(K|0,M|0,2)|0;J=sT(L|0,z|0,-32,-1)|0;L=sT(J|0,z|0,V|0,W|0)|0;J=z;if(!U){T=+(f|0)*0.0;break}N=0-e|0;s=((N|0)<0)<<31>>31;if((J|0)>(s|0)|(J|0)==(s|0)&L>>>0>N>>>0){c[(LE()|0)>>2]=34;T=+(f|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;break}N=e+-106|0;s=((N|0)<0)<<31>>31;if((J|0)<(s|0)|(J|0)==(s|0)&L>>>0<N>>>0){c[(LE()|0)>>2]=34;T=+(f|0)*2.2250738585072014e-308*2.2250738585072014e-308;break}if((U|0)>-1){H=q;N=U;s=L;I=J;while(1){F=!(H>=.5);o=N<<1|(F^1)&1;G=H+(F?H:H+-1.0);F=sT(s|0,I|0,-1,-1)|0;E=z;if((o|0)>-1){H=G;N=o;s=F;I=E}else{X=G;Y=o;Z=F;_=E;break}}}else{X=q;Y=U;Z=L;_=J}I=((b|0)<0)<<31>>31;s=tT(32,0,e|0,((e|0)<0)<<31>>31|0)|0;N=sT(s|0,z|0,Z|0,_|0)|0;s=z;if((s|0)<(I|0)|(s|0)==(I|0)&N>>>0<b>>>0)if((N|0)>0){$=N;m=59}else{aa=0;ba=84;m=61}else{$=b;m=59}if((m|0)==59)if(($|0)<53){aa=$;ba=84-$|0;m=61}else{ca=0.0;da=$;ea=+(f|0)}if((m|0)==61){H=+(f|0);ca=+TF(+SF(1.0,ba),H);da=aa;ea=H}N=(Y&1|0)==0&(X!=0.0&(da|0)<32);H=(N?0.0:X)*ea+(ca+ea*+((Y+(N&1)|0)>>>0))-ca;if(!(H!=0.0))c[(LE()|0)>>2]=34;T=+VF(H,Z)}while(0);return +T}function QF(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0.0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0.0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0.0,kb=0.0,lb=0.0,mb=0.0,nb=0.0,ob=0.0,pb=0.0,qb=0.0,rb=0.0,sb=0.0,tb=0;i=l;l=l+512|0;j=i;k=f+e|0;m=0-k|0;n=a+4|0;o=a+100|0;p=b;b=0;a:while(1){switch(p|0){case 46:{q=6;break a;break}case 48:break;default:{r=0;s=p;t=b;u=0;v=0;break a}}w=c[n>>2]|0;if(w>>>0<(c[o>>2]|0)>>>0){c[n>>2]=w+1;p=d[w>>0]|0;b=1;continue}else{p=UE(a)|0;b=1;continue}}if((q|0)==6){p=c[n>>2]|0;if(p>>>0<(c[o>>2]|0)>>>0){c[n>>2]=p+1;x=d[p>>0]|0}else x=UE(a)|0;if((x|0)==48){p=0;w=0;while(1){y=sT(p|0,w|0,-1,-1)|0;A=z;C=c[n>>2]|0;if(C>>>0<(c[o>>2]|0)>>>0){c[n>>2]=C+1;D=d[C>>0]|0}else D=UE(a)|0;if((D|0)==48){p=y;w=A}else{r=1;s=D;t=1;u=y;v=A;break}}}else{r=1;s=x;t=b;u=0;v=0}}c[j>>2]=0;b=s+-48|0;x=(s|0)==46;b:do if(x|b>>>0<10){D=j+496|0;w=0;p=0;A=0;y=r;C=t;E=s;F=x;G=b;H=u;I=v;J=0;K=0;c:while(1){do if(F)if(!y){L=w;M=p;N=1;P=A;Q=C;R=J;S=K;T=J;U=K}else break c;else{V=sT(J|0,K|0,1,0)|0;W=z;X=(E|0)!=48;if((p|0)>=125){if(!X){L=w;M=p;N=y;P=A;Q=C;R=H;S=I;T=V;U=W;break}c[D>>2]=c[D>>2]|1;L=w;M=p;N=y;P=A;Q=C;R=H;S=I;T=V;U=W;break}Y=j+(p<<2)|0;if(!w)Z=G;else Z=E+-48+((c[Y>>2]|0)*10|0)|0;c[Y>>2]=Z;Y=w+1|0;_=(Y|0)==9;L=_?0:Y;M=p+(_&1)|0;N=y;P=X?V:A;Q=1;R=H;S=I;T=V;U=W}while(0);W=c[n>>2]|0;if(W>>>0<(c[o>>2]|0)>>>0){c[n>>2]=W+1;$=d[W>>0]|0}else $=UE(a)|0;G=$+-48|0;F=($|0)==46;if(!(F|G>>>0<10)){aa=L;ba=M;ca=P;da=N;ea=$;fa=Q;ga=T;ha=R;ia=U;ja=S;q=29;break b}else{w=L;p=M;A=P;y=N;C=Q;E=$;H=R;I=S;J=T;K=U}}ka=w;la=p;ma=A;na=J;oa=K;pa=H;qa=I;ra=(C|0)!=0;q=37}else{aa=0;ba=0;ca=0;da=r;ea=s;fa=t;ga=0;ha=u;ia=0;ja=v;q=29}while(0);do if((q|0)==29){v=(da|0)==0;u=v?ga:ha;t=v?ia:ja;v=(fa|0)!=0;if(!(v&(ea|32|0)==101))if((ea|0)>-1){ka=aa;la=ba;ma=ca;na=ga;oa=ia;pa=u;qa=t;ra=v;q=37;break}else{sa=aa;ta=ba;ua=ca;va=ga;wa=ia;xa=v;ya=u;za=t;q=39;break}v=RF(a,h)|0;s=z;if((v|0)==0&(s|0)==-2147483648){if(!h){SE(a,0);Aa=0.0;break}if(!(c[o>>2]|0)){Ba=0;Ca=0}else{c[n>>2]=(c[n>>2]|0)+-1;Ba=0;Ca=0}}else{Ba=v;Ca=s}s=sT(Ba|0,Ca|0,u|0,t|0)|0;Da=aa;Ea=ba;Fa=ca;Ga=s;Ha=ga;Ia=z;Ja=ia;q=41}while(0);if((q|0)==37)if(c[o>>2]|0){c[n>>2]=(c[n>>2]|0)+-1;if(ra){Da=ka;Ea=la;Fa=ma;Ga=pa;Ha=na;Ia=qa;Ja=oa;q=41}else q=40}else{sa=ka;ta=la;ua=ma;va=na;wa=oa;xa=ra;ya=pa;za=qa;q=39}if((q|0)==39)if(xa){Da=sa;Ea=ta;Fa=ua;Ga=ya;Ha=va;Ia=za;Ja=wa;q=41}else q=40;do if((q|0)==40){c[(LE()|0)>>2]=22;SE(a,0);Aa=0.0}else if((q|0)==41){wa=c[j>>2]|0;if(!wa){Aa=+(g|0)*0.0;break}if(((Ja|0)<0|(Ja|0)==0&Ha>>>0<10)&((Ga|0)==(Ha|0)&(Ia|0)==(Ja|0))?(e|0)>30|(wa>>>e|0)==0:0){Aa=+(g|0)*+(wa>>>0);break}wa=(f|0)/-2|0;za=((wa|0)<0)<<31>>31;if((Ia|0)>(za|0)|(Ia|0)==(za|0)&Ga>>>0>wa>>>0){c[(LE()|0)>>2]=34;Aa=+(g|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;break}wa=f+-106|0;za=((wa|0)<0)<<31>>31;if((Ia|0)<(za|0)|(Ia|0)==(za|0)&Ga>>>0<wa>>>0){c[(LE()|0)>>2]=34;Aa=+(g|0)*2.2250738585072014e-308*2.2250738585072014e-308;break}if(!Da)Ka=Ea;else{if((Da|0)<9){wa=j+(Ea<<2)|0;za=Da;va=c[wa>>2]|0;while(1){va=va*10|0;if((za|0)>=8)break;else za=za+1|0}c[wa>>2]=va}Ka=Ea+1|0}if((Fa|0)<9?(Fa|0)<=(Ga|0)&(Ga|0)<18:0){if((Ga|0)==9){Aa=+(g|0)*+((c[j>>2]|0)>>>0);break}if((Ga|0)<9){Aa=+(g|0)*+((c[j>>2]|0)>>>0)/+(c[54280+(8-Ga<<2)>>2]|0);break}za=e+27+(O(Ga,-3)|0)|0;C=c[j>>2]|0;if((za|0)>30|(C>>>za|0)==0){Aa=+(g|0)*+(C>>>0)*+(c[54280+(Ga+-10<<2)>>2]|0);break}}C=(Ga|0)%9|0;if(!C){La=0;Ma=Ka;Na=0;Oa=Ga}else{za=(Ga|0)>-1?C:C+9|0;C=c[54280+(8-za<<2)>>2]|0;if(Ka){I=1e9/(C|0)|0;H=0;K=0;J=Ga;A=0;do{p=j+(A<<2)|0;w=c[p>>2]|0;ya=((w>>>0)/(C>>>0)|0)+H|0;c[p>>2]=ya;H=O(I,(w>>>0)%(C>>>0)|0)|0;w=(A|0)==(K|0)&(ya|0)==0;J=w?J+-9|0:J;K=w?K+1&127:K;A=A+1|0}while((A|0)!=(Ka|0));if(!H){Pa=K;Qa=Ka;Ra=J}else{c[j+(Ka<<2)>>2]=H;Pa=K;Qa=Ka+1|0;Ra=J}}else{Pa=0;Qa=0;Ra=Ga}La=0;Ma=Qa;Na=Pa;Oa=9-za+Ra|0}d:while(1){A=(Oa|0)<18;C=(Oa|0)==18;I=j+(Na<<2)|0;va=La;wa=Ma;while(1){if(!A){if(!C){Sa=va;Ta=Na;Ua=Oa;Va=wa;break d}if((c[I>>2]|0)>>>0>=9007199){Sa=va;Ta=Na;Ua=18;Va=wa;break d}}w=0;Wa=wa;ya=wa+127|0;while(1){p=ya&127;ua=j+(p<<2)|0;ta=AT(c[ua>>2]|0,0,29)|0;sa=sT(ta|0,z|0,w|0,0)|0;ta=z;if(ta>>>0>0|(ta|0)==0&sa>>>0>1e9){xa=wT(sa|0,ta|0,1e9,0)|0;qa=xT(sa|0,ta|0,1e9,0)|0;Xa=xa;Ya=qa}else{Xa=0;Ya=sa}c[ua>>2]=Ya;ua=(p|0)==(Na|0);Wa=(Ya|0)==0&(((p|0)!=(Wa+127&127|0)|ua)^1)?p:Wa;if(ua)break;else{w=Xa;ya=p+-1|0}}va=va+-29|0;if(Xa|0)break;else wa=Wa}wa=Na+127&127;I=Wa+127&127;C=j+((Wa+126&127)<<2)|0;if((wa|0)==(Wa|0)){c[C>>2]=c[C>>2]|c[j+(I<<2)>>2];Za=I}else Za=Wa;c[j+(wa<<2)>>2]=Xa;La=va;Ma=Za;Na=wa;Oa=Oa+9|0}e:while(1){za=Va+1&127;J=j+((Va+127&127)<<2)|0;K=Sa;H=Ta;wa=Ua;while(1){I=(wa|0)==18;C=(wa|0)>27?9:1;_a=K;$a=H;while(1){A=0;while(1){ya=A+$a&127;if((ya|0)==(Va|0)){ab=2;q=88;break}w=c[j+(ya<<2)>>2]|0;ya=c[54312+(A<<2)>>2]|0;if(w>>>0<ya>>>0){ab=2;q=88;break}if(w>>>0>ya>>>0)break;ya=A+1|0;if((A|0)<1)A=ya;else{ab=ya;q=88;break}}if((q|0)==88?(q=0,I&(ab|0)==2):0){bb=0.0;cb=0;db=Va;break e}eb=C+_a|0;if(($a|0)==(Va|0)){_a=eb;$a=Va}else break}I=(1<<C)+-1|0;A=1e9>>>C;fb=0;gb=$a;hb=wa;ya=$a;do{w=j+(ya<<2)|0;p=c[w>>2]|0;ua=(p>>>C)+fb|0;c[w>>2]=ua;fb=O(p&I,A)|0;p=(ya|0)==(gb|0)&(ua|0)==0;hb=p?hb+-9|0:hb;gb=p?gb+1&127:gb;ya=ya+1&127}while((ya|0)!=(Va|0));if(!fb){K=eb;H=gb;wa=hb;continue}if((za|0)!=(gb|0))break;c[J>>2]=c[J>>2]|1;K=eb;H=gb;wa=hb}c[j+(Va<<2)>>2]=fb;Sa=eb;Ta=gb;Ua=hb;Va=za}while(1){wa=cb+$a&127;H=db+1&127;if((wa|0)==(db|0)){c[j+(H+-1<<2)>>2]=0;ib=H}else ib=db;bb=bb*1.0e9+ +((c[j+(wa<<2)>>2]|0)>>>0);cb=cb+1|0;if((cb|0)==2)break;else db=ib}jb=+(g|0);kb=bb*jb;wa=_a+53|0;H=wa-f|0;K=(H|0)<(e|0);J=K?((H|0)>0?H:0):e;if((J|0)<53){lb=+TF(+SF(1.0,105-J|0),kb);mb=+UF(kb,+SF(1.0,53-J|0));nb=lb;ob=mb;pb=lb+(kb-mb)}else{nb=0.0;ob=0.0;pb=kb}va=$a+2&127;if((va|0)!=(ib|0)){ya=c[j+(va<<2)>>2]|0;do if(ya>>>0>=5e8){if((ya|0)!=5e8){qb=jb*.75+ob;break}if(($a+3&127|0)==(ib|0)){qb=jb*.5+ob;break}else{qb=jb*.75+ob;break}}else{if((ya|0)==0?($a+3&127|0)==(ib|0):0){qb=ob;break}qb=jb*.25+ob}while(0);if((53-J|0)>1?!(+UF(qb,1.0)!=0.0):0)rb=qb+1.0;else rb=qb}else rb=ob;jb=pb+rb-nb;do if((wa&2147483647|0)>(-2-k|0)){ya=!(+B(+jb)>=9007199254740992.0);va=_a+((ya^1)&1)|0;kb=ya?jb:jb*.5;if((va+50|0)<=(m|0)?!(rb!=0.0&(K&((J|0)!=(H|0)|ya))):0){sb=kb;tb=va;break}c[(LE()|0)>>2]=34;sb=kb;tb=va}else{sb=jb;tb=_a}while(0);Aa=+VF(sb,tb)}while(0);l=i;return +Aa}function RF(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=a+4|0;f=c[e>>2]|0;g=a+100|0;if(f>>>0<(c[g>>2]|0)>>>0){c[e>>2]=f+1;h=d[f>>0]|0}else h=UE(a)|0;switch(h|0){case 43:case 45:{f=(h|0)==45&1;i=c[e>>2]|0;if(i>>>0<(c[g>>2]|0)>>>0){c[e>>2]=i+1;j=d[i>>0]|0}else j=UE(a)|0;if((b|0)!=0&(j+-48|0)>>>0>9?(c[g>>2]|0)!=0:0){c[e>>2]=(c[e>>2]|0)+-1;k=f;l=j}else{k=f;l=j}break}default:{k=0;l=h}}if((l+-48|0)>>>0>9)if(!(c[g>>2]|0)){m=-2147483648;n=0}else{c[e>>2]=(c[e>>2]|0)+-1;m=-2147483648;n=0}else{h=0;j=l;while(1){h=j+-48+(h*10|0)|0;l=c[e>>2]|0;if(l>>>0<(c[g>>2]|0)>>>0){c[e>>2]=l+1;o=d[l>>0]|0}else o=UE(a)|0;if(!((o+-48|0)>>>0<10&(h|0)<214748364))break;else j=o}j=((h|0)<0)<<31>>31;if((o+-48|0)>>>0<10){l=o;f=h;b=j;while(1){i=rT(f|0,b|0,10,0)|0;p=z;q=sT(l|0,((l|0)<0)<<31>>31|0,-48,-1)|0;r=sT(q|0,z|0,i|0,p|0)|0;p=z;i=c[e>>2]|0;if(i>>>0<(c[g>>2]|0)>>>0){c[e>>2]=i+1;s=d[i>>0]|0}else s=UE(a)|0;if((s+-48|0)>>>0<10&((p|0)<21474836|(p|0)==21474836&r>>>0<2061584302)){l=s;f=r;b=p}else{t=s;u=r;v=p;break}}}else{t=o;u=h;v=j}if((t+-48|0)>>>0<10)do{t=c[e>>2]|0;if(t>>>0<(c[g>>2]|0)>>>0){c[e>>2]=t+1;w=d[t>>0]|0}else w=UE(a)|0}while((w+-48|0)>>>0<10);if(c[g>>2]|0)c[e>>2]=(c[e>>2]|0)+-1;e=(k|0)!=0;k=tT(0,0,u|0,v|0)|0;m=e?z:v;n=e?k:u}z=m;return n|0}function SF(a,b){a=+a;b=b|0;var d=0.0,e=0,f=0,g=0.0,i=0;if((b|0)<=1023)if((b|0)<-1022){d=a*2.2250738585072014e-308;e=(b|0)<-2044;f=b+2044|0;g=e?d*2.2250738585072014e-308:d;i=e?((f|0)>-1022?f:-1022):b+1022|0}else{g=a;i=b}else{d=a*8988465674311579538646525.0e283;f=(b|0)>2046;e=b+-2046|0;g=f?d*8988465674311579538646525.0e283:d;i=f?((e|0)<1023?e:1023):b+-1023|0}b=AT(i+1023|0,0,52)|0;i=z;c[j>>2]=b;c[j+4>>2]=i;return +(g*+h[j>>3])}function TF(a,b){a=+a;b=+b;return +(+_E(a,b))}function UF(a,b){a=+a;b=+b;return +(+WF(a,b))}function VF(a,b){a=+a;b=b|0;return +(+SF(a,b))}function WF(a,b){a=+a;b=+b;var d=0,e=0,f=0,g=0,i=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0.0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0.0;h[j>>3]=a;d=c[j>>2]|0;e=c[j+4>>2]|0;h[j>>3]=b;f=c[j>>2]|0;g=c[j+4>>2]|0;i=zT(d|0,e|0,52)|0;k=i&2047;i=zT(f|0,g|0,52)|0;l=i&2047;i=e&-2147483648;m=AT(f|0,g|0,1)|0;n=z;a:do if(!((m|0)==0&(n|0)==0)?(o=XF(b)|0,p=z&2147483647,!((k|0)==2047|(p>>>0>2146435072|(p|0)==2146435072&o>>>0>0))):0){o=AT(d|0,e|0,1)|0;p=z;if(!(p>>>0>n>>>0|(p|0)==(n|0)&o>>>0>m>>>0))return +((o|0)==(m|0)&(p|0)==(n|0)?a*0.0:a);if(!k){p=AT(d|0,e|0,12)|0;o=z;if((o|0)>-1|(o|0)==-1&p>>>0>4294967295){q=0;r=p;p=o;while(1){o=q+-1|0;r=AT(r|0,p|0,1)|0;p=z;if(!((p|0)>-1|(p|0)==-1&r>>>0>4294967295)){s=o;break}else q=o}}else s=0;q=AT(d|0,e|0,1-s|0)|0;t=s;u=q;v=z}else{t=k;u=d;v=e&1048575|1048576}if(!l){q=AT(f|0,g|0,12)|0;r=z;if((r|0)>-1|(r|0)==-1&q>>>0>4294967295){p=0;o=q;q=r;while(1){r=p+-1|0;o=AT(o|0,q|0,1)|0;q=z;if(!((q|0)>-1|(q|0)==-1&o>>>0>4294967295)){w=r;break}else p=r}}else w=0;p=AT(f|0,g|0,1-w|0)|0;x=w;y=p;A=z}else{x=l;y=f;A=g&1048575|1048576}p=tT(u|0,v|0,y|0,A|0)|0;o=z;q=(o|0)>-1|(o|0)==-1&p>>>0>4294967295;b:do if((t|0)>(x|0)){r=t;B=o;C=q;D=u;E=v;F=p;while(1){if(C)if((F|0)==0&(B|0)==0)break;else{G=F;H=B}else{G=D;H=E}I=AT(G|0,H|0,1)|0;J=z;K=r+-1|0;L=tT(I|0,J|0,y|0,A|0)|0;M=z;N=(M|0)>-1|(M|0)==-1&L>>>0>4294967295;if((K|0)>(x|0)){r=K;B=M;C=N;D=I;E=J;F=L}else{O=K;P=N;Q=L;R=M;S=I;T=J;break b}}U=a*0.0;break a}else{O=t;P=q;Q=p;R=o;S=u;T=v}while(0);if(P)if((Q|0)==0&(R|0)==0){U=a*0.0;break}else{V=R;W=Q}else{V=T;W=S}if(V>>>0<1048576|(V|0)==1048576&W>>>0<0){o=O;p=W;q=V;while(1){F=AT(p|0,q|0,1)|0;E=z;D=o+-1|0;if(E>>>0<1048576|(E|0)==1048576&F>>>0<0){o=D;p=F;q=E}else{X=D;Y=F;Z=E;break}}}else{X=O;Y=W;Z=V}if((X|0)>0){q=sT(Y|0,Z|0,0,-1048576)|0;p=z;o=AT(X|0,0,52)|0;_=p|z;$=q|o}else{o=zT(Y|0,Z|0,1-X|0)|0;_=z;$=o}c[j>>2]=$;c[j+4>>2]=_|i;U=+h[j>>3]}else aa=3;while(0);if((aa|0)==3){ba=a*b;U=ba/ba}return +U}function XF(a){a=+a;var b=0;h[j>>3]=a;b=c[j>>2]|0;z=c[j+4>>2]|0;return b|0}function YF(a){a=a|0;return 0}function ZF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return d|0}function _F(a,b){a=a|0;b=b|0;return -1|0}function $F(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=b;a:do if(!(d&3)){e=b;f=4}else{g=b;h=d;while(1){if(!(a[g>>0]|0)){i=h;break a}j=g+1|0;h=j;if(!(h&3)){e=j;f=4;break}else g=j}}while(0);if((f|0)==4){f=e;while(1){k=c[f>>2]|0;if(!((k&-2139062144^-2139062144)&k+-16843009))f=f+4|0;else break}if(!((k&255)<<24>>24))l=f;else{k=f;while(1){f=k+1|0;if(!(a[f>>0]|0)){l=f;break}else k=f}}i=l}return i-d|0}function aG(a,b){a=a|0;b=b|0;var d=0,e=0;d=l;l=l+16|0;e=d;c[e>>2]=a;c[e+4>>2]=b;b=KE(ib(91,e|0)|0)|0;l=d;return b|0}function bG(b,c){b=b|0;c=c|0;var d=0;d=cG(b,c)|0;return ((a[d>>0]|0)==(c&255)<<24>>24?d:0)|0}function cG(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=d&255;a:do if(!e)f=b+($F(b)|0)|0;else{if(!(b&3))g=b;else{h=d&255;i=b;while(1){j=a[i>>0]|0;if(j<<24>>24==0?1:j<<24>>24==h<<24>>24){f=i;break a}j=i+1|0;if(!(j&3)){g=j;break}else i=j}}i=O(e,16843009)|0;h=c[g>>2]|0;b:do if(!((h&-2139062144^-2139062144)&h+-16843009)){j=g;k=h;while(1){l=k^i;if((l&-2139062144^-2139062144)&l+-16843009|0){m=j;break b}l=j+4|0;k=c[l>>2]|0;if((k&-2139062144^-2139062144)&k+-16843009|0){m=l;break}else j=l}}else m=g;while(0);i=d&255;h=m;while(1){j=a[h>>0]|0;if(j<<24>>24==0?1:j<<24>>24==i<<24>>24){f=h;break}else h=h+1|0}}while(0);return f|0}function dG(){return}function eG(a){a=a|0;if(fG(a)|0)CE(a);return}function fG(a){a=a|0;return (a|0)!=50344&((a|0)!=0&(a|0)!=102892)&1|0}function gG(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=l;l=l+16|0;h=g;i=(f|0)==0?102920:f;f=c[i>>2]|0;a:do if(!d)if(!f)j=0;else k=17;else{m=(b|0)==0?h:b;if(!e)j=-2;else{if(!f){n=a[d>>0]|0;if(n<<24>>24>-1){c[m>>2]=n&255;j=n<<24>>24!=0&1;break}n=(c[c[(hG()|0)+188>>2]>>2]|0)==0;o=a[d>>0]|0;if(n){c[m>>2]=o<<24>>24&57343;j=1;break}n=(o&255)+-194|0;if(n>>>0>50){k=17;break}o=c[50368+(n<<2)>>2]|0;n=e+-1|0;if(!n)p=o;else{q=d+1|0;r=o;s=n;k=11}}else{q=d;r=f;s=e;k=11}b:do if((k|0)==11){n=a[q>>0]|0;o=(n&255)>>>3;if((o+-16|o+(r>>26))>>>0>7){k=17;break a}else{t=q;u=r;v=s;w=n}while(1){t=t+1|0;u=(w&255)+-128|u<<6;v=v+-1|0;if((u|0)>=0)break;if(!v){p=u;break b}w=a[t>>0]|0;if((w&-64)<<24>>24!=-128){k=17;break a}}c[i>>2]=0;c[m>>2]=u;j=e-v|0;break a}while(0);c[i>>2]=p;j=-2}}while(0);if((k|0)==17){c[i>>2]=0;c[(LE()|0)>>2]=84;j=-1}l=g;return j|0}function hG(){return xF()|0}function iG(a,b){a=a|0;b=b|0;return bF(a)|0}function jG(a,b){a=a|0;b=b|0;return NF(a)|0}function kG(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=l;l=l+272|0;f=e+8|0;g=e;do if(!(a[d>>0]|0)){h=Ub(89424)|0;if(h|0?a[h>>0]|0:0){i=h;break}h=Ub(89431+(b*12|0)|0)|0;if(h|0?a[h>>0]|0:0){i=h;break}h=Ub(89503)|0;if(h|0?a[h>>0]|0:0){i=h;break}i=89508}else i=d;while(0);d=0;a:while(1){switch(a[i+d>>0]|0){case 47:case 0:{j=d;break a;break}default:{}}h=d+1|0;if(h>>>0<15)d=h;else{j=h;break}}d=a[i>>0]|0;if(d<<24>>24!=46?(a[i+j>>0]|0)==0:0)if(d<<24>>24==67){k=i;m=15}else{n=i;m=16}else{k=89508;m=15}if((m|0)==15)if(!(a[k+1>>0]|0)){o=k;m=18}else{n=k;m=16}b:do if((m|0)==16)if(($E(n,89508)|0)!=0?($E(n,89516)|0)!=0:0){k=c[25731]|0;if(k|0){i=k;do{if(!($E(n,i+8|0)|0)){p=i;break b}i=c[i+24>>2]|0}while((i|0)!=0)}Za(102928);i=c[25731]|0;c:do if(i|0){k=i;while(1){if(!($E(n,k+8|0)|0))break;d=c[k+24>>2]|0;if(!d)break c;else k=d}jb(102928);p=k;break b}while(0);d:do if(((c[25709]|0)==0?(i=Ub(89522)|0,(i|0)!=0):0)?(a[i>>0]|0)!=0:0){d=254-j|0;h=j+1|0;q=i;while(1){i=cG(q,58)|0;r=a[i>>0]|0;s=i-q+((r<<24>>24!=0)<<31>>31)|0;if(s>>>0<d>>>0){CT(f|0,q|0,s|0)|0;t=f+s|0;a[t>>0]=47;CT(t+1|0,n|0,j|0)|0;a[f+(h+s)>>0]=0;u=_a(f|0,g|0)|0;if(u|0)break;v=a[i>>0]|0}else v=r;q=i+(v<<24>>24!=0&1)|0;if(!(a[q>>0]|0)){m=41;break d}}q=BE(28)|0;if(!q){aG(u,c[g>>2]|0)|0;m=41;break}else{c[q>>2]=u;c[q+4>>2]=c[g>>2];h=q+8|0;CT(h|0,n|0,j|0)|0;a[h+j>>0]=0;c[q+24>>2]=c[25731];c[25731]=q;w=q;break}}else m=41;while(0);if((m|0)==41){q=BE(28)|0;if(!q)w=q;else{c[q>>2]=c[12574];c[q+4>>2]=c[12575];h=q+8|0;CT(h|0,n|0,j|0)|0;a[h+j>>0]=0;c[q+24>>2]=c[25731];c[25731]=q;w=q}}jb(102928);p=(b|0)==0&(w|0)==0?50296:w}else{o=n;m=18}while(0);do if((m|0)==18){if((b|0)==0?(a[o+1>>0]|0)==46:0){p=50296;break}p=0}while(0);l=e;return p|0}function lG(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;e=l;l=l+32|0;f=e;a:do if(!(fG(d)|0)){g=(d|0)!=0;h=0;i=0;do{j=1<<i&a;if(g&(j|0)==0)k=c[d+(i<<2)>>2]|0;else k=kG(i,j|0?b:106450)|0;h=h+((k|0)!=0&1)|0;c[f+(i<<2)>>2]=k;i=i+1|0}while((i|0)!=6);switch(h|0){case 0:{m=102892;break a;break}case 1:{if((c[f>>2]|0)==50296){m=50344;break a}break}default:{}}m=d}else{i=0;do{if(1<<i&a|0)c[d+(i<<2)>>2]=kG(i,b)|0;i=i+1|0}while((i|0)!=6);m=d}while(0);l=e;return m|0}function mG(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=l;l=l+16|0;g=f;c[g>>2]=e;e=cF(a,b,d,g)|0;l=f;return e|0}function nG(a){a=a|0;var b=0,d=0;b=(oG()|0)+188|0;d=c[b>>2]|0;if(a|0)c[b>>2]=(a|0)==(-1|0)?102868:a;return ((d|0)==102868?-1:d)|0}function oG(){return xF()|0}function pG(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if(d|0){e=d;d=b;b=a;while(1){e=e+-1|0;c[b>>2]=c[d>>2];if(!e)break;else{d=d+4|0;b=b+4|0}}}return a|0}function qG(a){a=a|0;var b=0,c=0,d=0;b=($F(a)|0)+1|0;c=BE(b)|0;if(!c)d=0;else d=CT(c|0,a|0,b|0)|0;return d|0}function rG(a){a=a|0;var b=0,d=0,e=0;if(c[a+68>>2]|0){b=c[a+116>>2]|0;d=a+112|0;if(b|0)c[b+112>>2]=c[d>>2];a=c[d>>2]|0;if(!a)e=(sG()|0)+232|0;else e=a+116|0;c[e>>2]=b}return}function sG(){return xF()|0}function tG(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0;f=l;l=l+16|0;g=f;h=e&255;a[g>>0]=h;i=b+16|0;j=c[i>>2]|0;if(!j)if(!(FF(b)|0)){k=c[i>>2]|0;m=4}else n=-1;else{k=j;m=4}do if((m|0)==4){j=b+20|0;i=c[j>>2]|0;if(i>>>0<k>>>0?(o=e&255,(o|0)!=(a[b+75>>0]|0)):0){c[j>>2]=i+1;a[i>>0]=h;n=o;break}if((fd[c[b+36>>2]&127](b,g,1)|0)==1)n=d[g>>0]|0;else n=-1}while(0);l=f;return n|0}function uG(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0;g=l;l=l+16|0;h=g;a:do if(!e)i=0;else{do if(f|0){j=(b|0)==0?h:b;k=a[e>>0]|0;if(k<<24>>24>-1){c[j>>2]=k&255;i=k<<24>>24!=0&1;break a}k=(c[c[(vG()|0)+188>>2]>>2]|0)==0;m=a[e>>0]|0;if(k){c[j>>2]=m<<24>>24&57343;i=1;break a}k=(m&255)+-194|0;if(k>>>0<=50){m=e+1|0;n=c[50368+(k<<2)>>2]|0;if(f>>>0<4?n&-2147483648>>>((f*6|0)+-6|0)|0:0)break;k=d[m>>0]|0;m=k>>>3;if((m+-16|m+(n>>26))>>>0<=7){m=k+-128|n<<6;if((m|0)>=0){c[j>>2]=m;i=2;break a}n=(d[e+2>>0]|0)+-128|0;if(n>>>0<=63){k=n|m<<6;if((k|0)>=0){c[j>>2]=k;i=3;break a}m=(d[e+3>>0]|0)+-128|0;if(m>>>0<=63){c[j>>2]=m|k<<6;i=4;break a}}}}}while(0);c[(LE()|0)>>2]=84;i=-1}while(0);l=g;return i|0}function vG(){return xF()|0}function wG(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=l;l=l+48|0;f=e+32|0;g=e+16|0;h=e;if(bG(89535,a[d>>0]|0)|0){i=xG(d)|0;c[h>>2]=b;c[h+4>>2]=i|32768;c[h+8>>2]=438;b=KE(fb(5,h|0)|0)|0;if((b|0)>=0){if(i&524288|0){c[g>>2]=b;c[g+4>>2]=2;c[g+8>>2]=1;eb(221,g|0)|0}g=yG(b,d)|0;if(!g){c[f>>2]=b;hb(6,f|0)|0;j=0}else j=g}else j=0}else{c[(LE()|0)>>2]=22;j=0}l=e;return j|0}function xG(b){b=b|0;var c=0,d=0,e=0,f=0;c=(bG(b,43)|0)==0;d=a[b>>0]|0;e=c?d<<24>>24!=114&1:2;c=(bG(b,120)|0)==0;f=c?e:e|128;e=(bG(b,101)|0)==0;b=e?f:f|524288;f=d<<24>>24==114?b:b|64;b=d<<24>>24==119?f|512:f;return (d<<24>>24==97?b|1024:b)|0}function yG(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+64|0;f=e+40|0;g=e+24|0;h=e+16|0;i=e;j=e+56|0;if(bG(89535,a[d>>0]|0)|0){k=BE(1156)|0;if(!k)m=0;else{ET(k|0,0,124)|0;if(!(bG(d,43)|0))c[k>>2]=(a[d>>0]|0)==114?8:4;if(bG(d,101)|0){c[i>>2]=b;c[i+4>>2]=2;c[i+8>>2]=1;eb(221,i|0)|0}if((a[d>>0]|0)==97){c[h>>2]=b;c[h+4>>2]=3;d=eb(221,h|0)|0;if(!(d&1024)){c[g>>2]=b;c[g+4>>2]=4;c[g+8>>2]=d|1024;eb(221,g|0)|0}g=c[k>>2]|128;c[k>>2]=g;n=g}else n=c[k>>2]|0;c[k+60>>2]=b;c[k+44>>2]=k+132;c[k+48>>2]=1024;g=k+75|0;a[g>>0]=-1;if((n&8|0)==0?(c[f>>2]=b,c[f+4>>2]=21523,c[f+8>>2]=j,(gb(54,f|0)|0)==0):0)a[g>>0]=10;c[k+32>>2]=112;c[k+36>>2]=34;c[k+40>>2]=35;c[k+12>>2]=33;if(!(c[25708]|0))c[k+76>>2]=-1;zG(k)|0;m=k}}else{c[(LE()|0)>>2]=22;m=0}l=e;return m|0}function zG(a){a=a|0;var b=0,d=0;b=AG()|0;c[a+56>>2]=c[b>>2];d=c[b>>2]|0;if(d|0)c[d+52>>2]=a;c[b>>2]=a;BG();return a|0}function AG(){Za(102936);return 102944}function BG(){jb(102936);return}function CG(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;if((c[a+76>>2]|0)>-1)b=fF(a)|0;else b=0;rG(a);d=(c[a>>2]&1|0)!=0;if(!d){e=AG()|0;f=c[a+52>>2]|0;g=a+56|0;if(f|0)c[f+56>>2]=c[g>>2];h=c[g>>2]|0;if(h|0)c[h+52>>2]=f;if((c[e>>2]|0)==(a|0))c[e>>2]=h;BG()}h=DG(a)|0;e=dd[c[a+12>>2]&255](a)|0|h;h=c[a+92>>2]|0;if(h|0)CE(h);if(d){if(b|0)gF(a)}else CE(a);return e|0}function DG(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;do if(a){if((c[a+76>>2]|0)<=-1){b=EG(a)|0;break}d=(fF(a)|0)==0;e=EG(a)|0;if(d)b=e;else{gF(a);b=e}}else{if(!(c[12706]|0))f=0;else f=DG(c[12706]|0)|0;e=c[(AG()|0)>>2]|0;if(!e)g=f;else{d=e;e=f;while(1){if((c[d+76>>2]|0)>-1)h=fF(d)|0;else h=0;if((c[d+20>>2]|0)>>>0>(c[d+28>>2]|0)>>>0)i=EG(d)|0|e;else i=e;if(h|0)gF(d);d=c[d+56>>2]|0;if(!d){g=i;break}else e=i}}BG();b=g}while(0);return b|0}function EG(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=a+20|0;d=a+28|0;if((c[b>>2]|0)>>>0>(c[d>>2]|0)>>>0?(fd[c[a+36>>2]&127](a,0,0)|0,(c[b>>2]|0)==0):0)e=-1;else{f=a+4|0;g=c[f>>2]|0;h=a+8|0;i=c[h>>2]|0;if(g>>>0<i>>>0)fd[c[a+40>>2]&127](a,g-i|0,1)|0;c[a+16>>2]=0;c[d>>2]=0;c[b>>2]=0;c[h>>2]=0;c[f>>2]=0;e=0}return e|0}function FG(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=l;l=l+16|0;f=e;c[f>>2]=d;d=GG(a,b,f)|0;l=e;return d|0}function GG(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=l;l=l+128|0;f=e;g=f;h=g+124|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));c[f+32>>2]=113;c[f+44>>2]=a;c[f+76>>2]=-1;c[f+84>>2]=a;a=IG(f,b,d)|0;l=e;return a|0}function HG(a,b,c){a=a|0;b=b|0;c=c|0;return MG(a,b,c)|0}function IG(b,e,f){b=b|0;e=e|0;f=f|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0.0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0;i=l;l=l+288|0;j=i+8|0;k=i+17|0;m=i;n=i+16|0;if((c[b+76>>2]|0)>-1)o=fF(b)|0;else o=0;p=a[e>>0]|0;a:do if(p<<24>>24){q=b+4|0;r=b+100|0;s=b+108|0;t=b+8|0;u=k+10|0;v=k+33|0;w=j+4|0;x=e;y=0;A=0;B=0;C=p;D=0;b:while(1){c:do if(!(VE(C&255)|0)){E=(a[x>>0]|0)==37;d:do if(E){F=x+1|0;G=a[F>>0]|0;e:do switch(G<<24>>24){case 37:{break d;break}case 42:{H=0;I=x+2|0;break}default:{if(bF(G&255)|0?(a[x+2>>0]|0)==36:0){H=JG(f,(d[F>>0]|0)+-48|0)|0;I=x+3|0;break e}J=(c[f>>2]|0)+(4-1)&~(4-1);K=c[J>>2]|0;c[f>>2]=J+4;H=K;I=F}}while(0);if(!(bF(d[I>>0]|0)|0)){L=0;M=I}else{F=0;G=I;while(1){K=(F*10|0)+-48+(d[G>>0]|0)|0;J=G+1|0;if(!(bF(d[J>>0]|0)|0)){L=K;M=J;break}else{F=K;G=J}}}G=a[M>>0]|0;F=M+1|0;if(G<<24>>24==109){N=(H|0)!=0&1;O=0;P=F;Q=a[F>>0]|0;R=0}else{N=0;O=B;P=M;Q=G;R=D}G=P+1|0;switch(Q<<24>>24){case 104:{F=(a[G>>0]|0)==104;S=F?-2:-1;T=F?P+2|0:G;break}case 108:{F=(a[G>>0]|0)==108;S=F?3:1;T=F?P+2|0:G;break}case 106:{S=3;T=G;break}case 116:case 122:{S=1;T=G;break}case 76:{S=2;T=G;break}case 110:case 112:case 67:case 83:case 91:case 99:case 115:case 88:case 71:case 70:case 69:case 65:case 103:case 102:case 101:case 97:case 120:case 117:case 111:case 105:case 100:{S=0;T=P;break}default:{U=O;V=R;W=136;break b}}G=d[T>>0]|0;F=(G&47|0)==3;J=F?G|32:G;G=F?1:S;F=J&255;switch(F<<24>>24){case 99:{X=(L|0)>1?L:1;Y=y;break}case 91:{X=L;Y=y;break}case 110:{KG(H,G,y,((y|0)<0)<<31>>31);Z=T;_=A;$=y;aa=O;ba=R;break c;break}default:{SE(b,0);do{K=c[q>>2]|0;if(K>>>0<(c[r>>2]|0)>>>0){c[q>>2]=K+1;ca=d[K>>0]|0}else ca=UE(b)|0}while((VE(ca)|0)!=0);if(!(c[r>>2]|0))da=c[q>>2]|0;else{K=(c[q>>2]|0)+-1|0;c[q>>2]=K;da=K}X=L;Y=(c[s>>2]|0)+y+da-(c[t>>2]|0)|0}}SE(b,X);K=c[q>>2]|0;ea=c[r>>2]|0;if(K>>>0<ea>>>0){c[q>>2]=K+1;fa=ea}else{if((UE(b)|0)<0){U=O;V=R;W=136;break b}fa=c[r>>2]|0}if(fa|0)c[q>>2]=(c[q>>2]|0)+-1;f:do switch(F<<24>>24){case 91:case 99:case 115:{ea=(J|0)==99;g:do if((J|16|0)==115){ET(k|0,-1,257)|0;a[k>>0]=0;if((J|0)==115){a[v>>0]=0;a[u>>0]=0;a[u+1>>0]=0;a[u+2>>0]=0;a[u+3>>0]=0;a[u+4>>0]=0;ga=T}else ga=T}else{K=T+1|0;ha=(a[K>>0]|0)==94;ia=ha&1;ja=ha?T+2|0:K;ET(k|0,ia|0,257)|0;a[k>>0]=0;K=a[ja>>0]|0;switch(K<<24>>24){case 45:{ka=ja;la=46;W=65;break}case 93:{ka=ja;la=94;W=65;break}default:{ma=ja;na=K}}while(1){if((W|0)==65){W=0;a[k+la>>0]=ia^1;K=ka+1|0;ma=K;na=a[K>>0]|0}h:do switch(na<<24>>24){case 0:{U=O;V=R;W=136;break b;break}case 93:{ga=ma;break g;break}case 45:{K=ma+1|0;ja=a[K>>0]|0;switch(ja<<24>>24){case 93:case 0:{oa=ma;pa=45;break h;break}default:{}}ha=a[ma+-1>>0]|0;if((ha&255)<(ja&255)){qa=(ia^1)&255;ra=ha&255;do{ra=ra+1|0;a[k+ra>>0]=qa;ha=a[K>>0]|0}while((ra|0)<(ha&255|0));oa=K;pa=ha}else{oa=K;pa=ja}break}default:{oa=ma;pa=na}}while(0);ka=oa;la=(pa&255)+1|0;W=65}}while(0);ia=ea?X+1|0:31;ra=(G|0)==1;qa=(N|0)!=0;i:do if(ra){if(qa){ha=BE(ia<<2)|0;if(!ha){U=0;V=0;W=136;break b}else sa=ha}else sa=H;c[j>>2]=0;c[w>>2]=0;ha=ia;ta=0;ua=sa;j:while(1){va=(ua|0)==0;wa=ta;while(1){k:while(1){xa=c[q>>2]|0;if(xa>>>0<(c[r>>2]|0)>>>0){c[q>>2]=xa+1;ya=d[xa>>0]|0}else ya=UE(b)|0;if(!(a[k+(ya+1)>>0]|0))break j;a[n>>0]=ya;switch(gG(m,n,1,j)|0){case -1:{U=0;V=ua;W=136;break b;break}case -2:break;default:break k}}if(va)za=wa;else{c[ua+(wa<<2)>>2]=c[m>>2];za=wa+1|0}if(qa&(za|0)==(ha|0))break;else wa=za}va=ha<<1|1;ja=EE(ua,va<<2)|0;if(!ja){U=0;V=ua;W=136;break b}else{K=ha;ha=va;ua=ja;ta=K}}if(!(LG(j)|0)){U=0;V=ua;W=136;break b}else{Aa=wa;Ba=0;Ca=ua;Da=ua}}else{if(qa){ta=BE(ia)|0;if(!ta){U=0;V=0;W=136;break b}else{Ea=ia;Fa=0;Ga=ta}while(1){ta=Fa;do{ha=c[q>>2]|0;if(ha>>>0<(c[r>>2]|0)>>>0){c[q>>2]=ha+1;Ha=d[ha>>0]|0}else Ha=UE(b)|0;if(!(a[k+(Ha+1)>>0]|0)){Aa=ta;Ba=Ga;Ca=0;Da=0;break i}a[Ga+ta>>0]=Ha;ta=ta+1|0}while((ta|0)!=(Ea|0));ta=Ea<<1|1;ha=EE(Ga,ta)|0;if(!ha){U=Ga;V=0;W=136;break b}else{K=Ea;Ea=ta;Ga=ha;Fa=K}}}if(!H)while(1){ua=c[q>>2]|0;if(ua>>>0<(c[r>>2]|0)>>>0){c[q>>2]=ua+1;Ia=d[ua>>0]|0}else Ia=UE(b)|0;if(!(a[k+(Ia+1)>>0]|0)){Aa=0;Ba=0;Ca=0;Da=0;break i}}else Ja=0;while(1){ua=c[q>>2]|0;if(ua>>>0<(c[r>>2]|0)>>>0){c[q>>2]=ua+1;Ka=d[ua>>0]|0}else Ka=UE(b)|0;if(!(a[k+(Ka+1)>>0]|0)){Aa=Ja;Ba=H;Ca=0;Da=0;break i}a[H+Ja>>0]=Ka;Ja=Ja+1|0}}while(0);if(!(c[r>>2]|0))La=c[q>>2]|0;else{ia=(c[q>>2]|0)+-1|0;c[q>>2]=ia;La=ia}ia=La-(c[t>>2]|0)+(c[s>>2]|0)|0;if(!ia){Ma=N;Na=A;Oa=Ba;Pa=Da;break b}if(!((ia|0)==(X|0)|ea^1)){Ma=N;Na=A;Oa=Ba;Pa=Da;break b}do if(qa)if(ra){c[H>>2]=Ca;break}else{c[H>>2]=Ba;break}while(0);if(ea){Qa=ga;Ra=Ba;Sa=Da}else{if(Ca|0)c[Ca+(Aa<<2)>>2]=0;if(!Ba){Qa=ga;Ra=0;Sa=Da;break f}a[Ba+Aa>>0]=0;Qa=ga;Ra=Ba;Sa=Da}break}case 120:case 88:case 112:{Ta=16;W=124;break}case 111:{Ta=8;W=124;break}case 117:case 100:{Ta=10;W=124;break}case 105:{Ta=0;W=124;break}case 71:case 103:case 70:case 102:case 69:case 101:case 65:case 97:{Ua=+OF(b,G,0);if((c[s>>2]|0)==((c[t>>2]|0)-(c[q>>2]|0)|0)){Ma=N;Na=A;Oa=O;Pa=R;break b}if(!H){Qa=T;Ra=O;Sa=R}else switch(G|0){case 0:{g[H>>2]=Ua;Qa=T;Ra=O;Sa=R;break f;break}case 1:{h[H>>3]=Ua;Qa=T;Ra=O;Sa=R;break f;break}case 2:{h[H>>3]=Ua;Qa=T;Ra=O;Sa=R;break f;break}default:{Qa=T;Ra=O;Sa=R;break f}}break}default:{Qa=T;Ra=O;Sa=R}}while(0);do if((W|0)==124){W=0;F=TE(b,Ta,0,-1,-1)|0;if((c[s>>2]|0)==((c[t>>2]|0)-(c[q>>2]|0)|0)){Ma=N;Na=A;Oa=O;Pa=R;break b}if((H|0)!=0&(J|0)==112){c[H>>2]=F;Qa=T;Ra=O;Sa=R;break}else{KG(H,G,F,z);Qa=T;Ra=O;Sa=R;break}}while(0);Z=Qa;_=A+((H|0)!=0&1)|0;$=(c[s>>2]|0)+Y+(c[q>>2]|0)-(c[t>>2]|0)|0;aa=Ra;ba=Sa;break c}while(0);G=x+(E&1)|0;SE(b,0);J=c[q>>2]|0;if(J>>>0<(c[r>>2]|0)>>>0){c[q>>2]=J+1;Va=d[J>>0]|0}else Va=UE(b)|0;if((Va|0)!=(d[G>>0]|0)){W=22;break b}Z=G;_=A;$=y+1|0;aa=B;ba=D}else{G=x;while(1){J=G+1|0;if(!(VE(d[J>>0]|0)|0))break;else G=J}SE(b,0);do{E=c[q>>2]|0;if(E>>>0<(c[r>>2]|0)>>>0){c[q>>2]=E+1;Wa=d[E>>0]|0}else Wa=UE(b)|0}while((VE(Wa)|0)!=0);if(!(c[r>>2]|0))Xa=c[q>>2]|0;else{E=(c[q>>2]|0)+-1|0;c[q>>2]=E;Xa=E}Z=G;_=A;$=(c[s>>2]|0)+y+Xa-(c[t>>2]|0)|0;aa=B;ba=D}while(0);x=Z+1|0;C=a[x>>0]|0;if(!(C<<24>>24)){Ya=_;break a}else{y=$;A=_;B=aa;D=ba}}if((W|0)==22){if(c[r>>2]|0)c[q>>2]=(c[q>>2]|0)+-1;if((A|0)!=0|(Va|0)>-1){Ya=A;break}else{Za=0;_a=B;$a=D;W=137}}else if((W|0)==136)if(!A){Za=N;_a=U;$a=V;W=137}else{Ma=N;Na=A;Oa=U;Pa=V}if((W|0)==137){Ma=Za;Na=-1;Oa=_a;Pa=$a}if(!Ma)Ya=Na;else{CE(Oa);CE(Pa);Ya=Na}}else Ya=0;while(0);if(o|0)gF(b);l=i;return Ya|0}function JG(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=l;l=l+16|0;e=d;c[e>>2]=c[a>>2];a=b;while(1){b=(c[e>>2]|0)+(4-1)&~(4-1);f=c[b>>2]|0;c[e>>2]=b+4;if(a>>>0>1)a=a+-1|0;else break}l=d;return f|0}function KG(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0;a:do if(d|0)switch(e|0){case -2:{a[d>>0]=f;break a;break}case -1:{b[d>>1]=f;break a;break}case 0:{c[d>>2]=f;break a;break}case 1:{c[d>>2]=f;break a;break}case 3:{h=d;c[h>>2]=f;c[h+4>>2]=g;break a;break}default:break a}while(0);return}function LG(a){a=a|0;var b=0;if(!a)b=1;else b=(c[a>>2]|0)==0&1;return b|0}function MG(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=a+84|0;f=c[e>>2]|0;g=d+256|0;h=oF(f,0,g)|0;i=(h|0)==0?g:h-f|0;h=i>>>0<d>>>0?i:d;CT(b|0,f|0,h|0)|0;c[a+4>>2]=f+h;b=f+i|0;c[a+8>>2]=b;c[e>>2]=b;return h|0}function NG(b,c){b=b|0;c=c|0;var d=0,e=0,f=0;d=a[c>>0]|0;do if(d<<24>>24){e=bG(b,d<<24>>24)|0;if(e)if(a[c+1>>0]|0)if(a[e+1>>0]|0){if(!(a[c+2>>0]|0)){f=OG(e,c)|0;break}if(a[e+2>>0]|0){if(!(a[c+3>>0]|0)){f=PG(e,c)|0;break}if(a[e+3>>0]|0)if(!(a[c+4>>0]|0)){f=QG(e,c)|0;break}else{f=RG(e,c)|0;break}else f=0}else f=0}else f=0;else f=e;else f=0}else f=b;while(0);return f|0}function OG(b,c){b=b|0;c=c|0;var e=0,f=0,g=0;e=(d[c>>0]|0)<<8|(d[c+1>>0]|0);c=d[b>>0]|0;f=b;while(1){b=f+1|0;g=a[b>>0]|0;if(!(g<<24>>24))break;c=c<<8&65280|g&255;if((c|0)==(e|0))break;else f=b}return (g<<24>>24?f:0)|0}function PG(b,c){b=b|0;c=c|0;var e=0,f=0,g=0,h=0,i=0;e=(d[c+1>>0]|0)<<16|(d[c>>0]|0)<<24|(d[c+2>>0]|0)<<8;c=b+2|0;f=a[c>>0]|0;g=(d[b+1>>0]|0)<<16|(d[b>>0]|0)<<24|(f&255)<<8;if((g|0)==(e|0)|f<<24>>24==0){h=c;i=f}else{f=c;c=g;while(1){g=f+1|0;b=a[g>>0]|0;c=(c|b&255)<<8;if((c|0)==(e|0)|b<<24>>24==0){h=g;i=b;break}else f=g}}return (i<<24>>24?h+-2|0:0)|0}function QG(b,c){b=b|0;c=c|0;var e=0,f=0,g=0,h=0,i=0;e=(d[c+1>>0]|0)<<16|(d[c>>0]|0)<<24|(d[c+2>>0]|0)<<8|(d[c+3>>0]|0);c=b+3|0;f=a[c>>0]|0;g=(d[b+1>>0]|0)<<16|(d[b>>0]|0)<<24|(d[b+2>>0]|0)<<8|f&255;if(f<<24>>24==0|(g|0)==(e|0)){h=f;i=c}else{f=c;c=g;while(1){g=f+1|0;b=a[g>>0]|0;c=c<<8|b&255;if(b<<24>>24==0|(c|0)==(e|0)){h=b;i=g;break}else f=g}}return (h<<24>>24?i+-3|0:0)|0}function RG(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;e=l;l=l+1056|0;f=e+1024|0;g=e;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;h=a[d>>0]|0;a:do if(h<<24>>24){i=0;j=h;do{if(!(a[b+i>>0]|0)){k=0;break a}m=f+(((j&255)>>>5&255)<<2)|0;c[m>>2]=c[m>>2]|1<<(j&31);i=i+1|0;c[g+((j&255)<<2)>>2]=i;j=a[d+i>>0]|0}while(j<<24>>24!=0);j=i>>>0>1;if(j){m=0;n=-1;o=1;b:while(1){p=1;q=m;r=o;while(1){s=q;t=r;c:while(1){u=1;v=t;while(1){w=a[d+(u+n)>>0]|0;x=a[d+v>>0]|0;if(w<<24>>24!=x<<24>>24)break c;if((u|0)==(p|0))break;u=u+1|0;y=u+s|0;if(y>>>0>=i>>>0){z=p;A=n;break b}else v=y}u=p+s|0;t=u+1|0;if(t>>>0>=i>>>0){z=p;A=n;break b}else s=u}t=v-n|0;if((w&255)<=(x&255))break;r=v+1|0;if(r>>>0>=i>>>0){z=t;A=n;break b}else{p=t;q=v}}o=s+2|0;if(o>>>0>=i>>>0){z=1;A=s;break}else{m=s+1|0;n=s}}if(j){n=0;m=-1;o=1;while(1){q=1;p=n;r=o;while(1){B=p;t=r;d:while(1){u=1;C=t;while(1){D=a[d+(u+m)>>0]|0;E=a[d+C>>0]|0;if(D<<24>>24!=E<<24>>24)break d;if((u|0)==(q|0))break;u=u+1|0;y=u+B|0;if(y>>>0>=i>>>0){F=z;G=A;H=i;I=q;J=m;K=26;break a}else C=y}u=q+B|0;t=u+1|0;if(t>>>0>=i>>>0){F=z;G=A;H=i;I=q;J=m;K=26;break a}else B=u}t=C-m|0;if((D&255)>=(E&255))break;r=C+1|0;if(r>>>0>=i>>>0){F=z;G=A;H=i;I=t;J=m;K=26;break a}else{q=t;p=C}}o=B+2|0;if(o>>>0>=i>>>0){F=z;G=A;H=i;I=1;J=B;K=26;break}else{n=B+1|0;m=B}}}else{F=z;G=A;H=i;I=1;J=-1;K=26}}else{F=1;G=-1;H=i;I=1;J=-1;K=26}}else{F=1;G=-1;H=0;I=1;J=-1;K=26}while(0);e:do if((K|0)==26){A=(J+1|0)>>>0>(G+1|0)>>>0;z=A?I:F;B=A?J:G;A=B+1|0;if(!(aF(d,d+z|0,A)|0)){L=H-z|0;M=z}else{z=H-B+-1|0;L=0;M=(B>>>0>z>>>0?B:z)+1|0}z=H|63;C=H+-1|0;E=(L|0)!=0;D=H-M|0;s=b;v=0;x=b;while(1){w=s;do if((x-w|0)>>>0<H>>>0){h=oF(x,0,z)|0;if(h)if((h-w|0)>>>0<H>>>0){k=0;break e}else{N=h;break}else{N=x+z|0;break}}else N=x;while(0);w=a[s+C>>0]|0;f:do if(!(1<<(w&31)&c[f+(((w&255)>>>5&255)<<2)>>2])){O=0;P=H}else{h=H-(c[g+((w&255)<<2)>>2]|0)|0;if(h|0){O=0;P=E&(v|0)!=0&h>>>0<M>>>0?D:h;break}h=A>>>0>v>>>0?A:v;m=a[d+h>>0]|0;g:do if(!(m<<24>>24))Q=A;else{n=h;o=m;while(1){if(o<<24>>24!=(a[s+n>>0]|0))break;j=n+1|0;o=a[d+j>>0]|0;if(!(o<<24>>24)){Q=A;break g}else n=j}O=0;P=n-B|0;break f}while(0);while(1){if(Q>>>0<=v>>>0){k=s;break e}Q=Q+-1|0;if((a[d+Q>>0]|0)!=(a[s+Q>>0]|0)){O=L;P=M;break}}}while(0);s=s+P|0;v=O;x=N}}while(0);l=e;return k|0}function SG(a,b,c){a=a|0;b=b|0;c=c|0;return gG(0,a,b,c|0?c:102948)|0}function TG(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;g=l;l=l+1040|0;h=g+8|0;i=g;j=c[b>>2]|0;c[i>>2]=j;k=(a|0)!=0;m=k?e:256;e=k?a:h;a=j;a:do if((m|0)!=0&(j|0)!=0){n=0;o=d;p=m;q=e;r=a;while(1){s=o>>>2;t=s>>>0>=p>>>0;if(!(o>>>0>131|t)){u=q;v=n;w=o;x=p;y=r;break a}z=t?p:s;A=o-z|0;s=UG(q,i,z,f)|0;if((s|0)==-1)break;z=(q|0)==(h|0);t=p-(z?0:s)|0;B=z?q:q+(s<<2)|0;z=s+n|0;s=c[i>>2]|0;if((t|0)!=0&(s|0)!=0){n=z;o=A;p=t;q=B;r=s}else{u=B;v=z;w=A;x=t;y=s;break a}}u=q;v=-1;w=A;x=0;y=c[i>>2]|0}else{u=e;v=0;w=d;x=m;y=a}while(0);b:do if((y|0)!=0?(x|0)!=0&(w|0)!=0:0){a=v;m=w;d=u;e=x;A=y;while(1){C=gG(d,A,m,f)|0;if((C+2|0)>>>0<3)break;A=(c[i>>2]|0)+C|0;c[i>>2]=A;m=m-C|0;e=e+-1|0;h=a+1|0;if(!((e|0)!=0&(m|0)!=0)){D=h;break b}else{a=h;d=d+4|0}}switch(C|0){case -1:{D=-1;break b;break}case 0:{c[i>>2]=0;D=a;break b;break}default:{c[f>>2]=0;D=a;break b}}}else D=v;while(0);if(k)c[b>>2]=c[i>>2];l=g;return D|0}function UG(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0;h=c[e>>2]|0;if((g|0)!=0?(i=c[g>>2]|0,(i|0)!=0):0)if(!b){j=i;k=h;l=f;m=25}else{c[g>>2]=0;n=i;o=b;p=f;q=h;m=43}else m=5;a:do if((m|0)==5){i=(b|0)!=0;if(c[c[(VG()|0)+188>>2]>>2]|0)if(i){r=b;s=f;t=h;m=15;break}else{u=h;v=f;m=14;break}if(!i){w=$F(h)|0;m=59;break}b:do if(!f)x=h;else{i=h;g=b;y=f;while(1){z=a[i>>0]|0;if(!(z<<24>>24))break;A=i+1|0;c[g>>2]=z<<24>>24&57343;z=y+-1|0;if(!z){x=A;break b}else{i=A;g=g+4|0;y=z}}c[g>>2]=0;c[e>>2]=0;w=f-y|0;m=59;break a}while(0);c[e>>2]=x;w=f;m=59}while(0);c:while(1){d:do if((m|0)==14){m=0;x=u;h=v;while(1){i=a[x>>0]|0;if(((i&255)+-1|0)>>>0<127?(x&3|0)==0:0){z=c[x>>2]|0;A=z&255;if(!((z+-16843009|z)&-2139062144)){z=x;B=h;do{z=z+4|0;B=B+-4|0;C=c[z>>2]|0}while(!((C+-16843009|C)&-2139062144|0));D=z;E=B;F=C&255}else{D=x;E=h;F=A}}else{D=x;E=h;F=i}G=F&255;if((G+-1|0)>>>0>=127)break;x=D+1|0;h=E+-1|0}h=G+-194|0;if(h>>>0>50){H=D;I=b;J=E;m=53}else{j=c[50368+(h<<2)>>2]|0;k=D+1|0;l=E;m=25;continue c}}else if((m|0)==15){m=0;e:do if(!s)K=t;else{h=r;x=s;y=t;while(1){g=a[y>>0]|0;do if(((g&255)+-1|0)>>>0<127?x>>>0>4&(y&3|0)==0:0){L=h;M=x;N=y;while(1){O=c[N>>2]|0;if((O+-16843009|O)&-2139062144|0){m=38;break}c[L>>2]=O&255;c[L+4>>2]=d[N+1>>0];c[L+8>>2]=d[N+2>>0];P=N+4|0;Q=L+16|0;c[L+12>>2]=d[N+3>>0];R=M+-4|0;if(R>>>0>4){L=Q;M=R;N=P}else{m=37;break}}if((m|0)==37){m=0;S=Q;T=R;U=P;V=a[P>>0]|0;break}else if((m|0)==38){m=0;S=L;T=M;U=N;V=O&255;break}}else{S=h;T=x;U=y;V=g}while(0);W=V&255;if((W+-1|0)>>>0>=127)break;g=U+1|0;c[S>>2]=W;x=T+-1|0;if(!x){K=g;break e}else{h=S+4|0;y=g}}y=W+-194|0;if(y>>>0>50){H=U;I=S;J=T;m=53;break d}n=c[50368+(y<<2)>>2]|0;o=S;p=T;q=U+1|0;m=43;continue c}while(0);c[e>>2]=K;w=f;m=59;continue c}else if((m|0)==25){m=0;y=(d[k>>0]|0)>>>3;if((y+-16|y+(j>>26))>>>0>7){X=b;Y=j;Z=k;_=l;m=52}else{y=k+1|0;if(j&33554432){if((a[y>>0]&-64)<<24>>24!=-128){X=b;Y=j;Z=k;_=l;m=52;break}h=k+2|0;if(!(j&524288))$=h;else{if((a[h>>0]&-64)<<24>>24!=-128){X=b;Y=j;Z=k;_=l;m=52;break}$=k+3|0}}else $=y;u=$;v=l+-1|0;m=14;continue c}}else if((m|0)==43){m=0;y=d[q>>0]|0;h=y>>>3;if((h+-16|h+(n>>26))>>>0>7){X=o;Y=n;Z=q;_=p;m=52}else{h=q+1|0;x=y+-128|n<<6;do if((x|0)<0){y=(d[h>>0]|0)+-128|0;if(y>>>0>63){aa=q+-1|0;ba=o;break d}i=q+2|0;A=y|x<<6;if((A|0)<0){y=(d[i>>0]|0)+-128|0;if(y>>>0>63){aa=q+-1|0;ba=o;break d}else{ca=q+3|0;da=y|A<<6;break}}else{ca=i;da=A}}else{ca=h;da=x}while(0);c[o>>2]=da;r=o+4|0;s=p+-1|0;t=ca;m=15;continue c}}else if((m|0)==59){m=0;return w|0}while(0);if((m|0)==52){m=0;x=Z+-1|0;if(!Y){H=x;I=X;J=_;m=53}else{aa=x;ba=X}}if((m|0)==53){m=0;if(!(a[H>>0]|0)){if(I|0){c[I>>2]=0;c[e>>2]=0}w=f-J|0;m=59;continue}else{aa=H;ba=I}}c[(LE()|0)>>2]=84;if(!ba){w=-1;m=59;continue}c[e>>2]=aa;w=-1;m=59}return 0}function VG(){return xF()|0}function WG(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;f=l;l=l+272|0;g=f+8|0;h=f;i=c[b>>2]|0;c[h>>2]=i;j=(a|0)!=0;k=j?e:256;e=j?a:g;a=i;a:do if((k|0)!=0&(i|0)!=0){m=0;n=d;o=k;p=e;q=a;while(1){r=n>>>0>=o>>>0;if(!(r|n>>>0>32)){s=p;t=m;u=n;v=o;w=q;break a}x=r?o:n;y=n-x|0;r=XG(p,h,x,0)|0;if((r|0)==-1)break;x=(p|0)==(g|0);z=o-(x?0:r)|0;A=x?p:p+r|0;x=r+m|0;r=c[h>>2]|0;if((z|0)!=0&(r|0)!=0){m=x;n=y;o=z;p=A;q=r}else{s=A;t=x;u=y;v=z;w=r;break a}}s=p;t=-1;u=y;v=0;w=c[h>>2]|0}else{s=e;t=0;u=d;v=k;w=a}while(0);b:do if((w|0)!=0?(v|0)!=0&(u|0)!=0:0){a=t;k=u;d=s;e=v;y=w;while(1){B=vF(d,c[y>>2]|0,0)|0;if((B+1|0)>>>0<2)break;y=(c[h>>2]|0)+4|0;c[h>>2]=y;k=k+-1|0;e=e-B|0;g=B+a|0;if(!((e|0)!=0&(k|0)!=0)){C=g;break b}else{a=g;d=d+B|0}}if(!B){c[h>>2]=0;C=a}else C=-1}else C=t;while(0);if(j)c[b>>2]=c[h>>2];l=f;return C|0}function XG(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;f=l;l=l+16|0;g=f;a:do if(!b){h=c[d>>2]|0;i=c[h>>2]|0;if(!i)j=0;else{k=h;h=0;m=i;while(1){if(m>>>0>127){i=vF(g,m,0)|0;if((i|0)==-1){j=-1;break a}else n=i}else n=1;i=n+h|0;k=k+4|0;m=c[k>>2]|0;if(!m){j=i;break}else h=i}}}else{b:do if(e>>>0>3){h=b;m=e;k=c[d>>2]|0;while(1){i=c[k>>2]|0;if((i+-1|0)>>>0>126){if(!i)break;o=vF(h,i,0)|0;if((o|0)==-1){j=-1;break a}p=h+o|0;q=m-o|0;r=k}else{a[h>>0]=i;p=h+1|0;q=m+-1|0;r=c[d>>2]|0}k=r+4|0;c[d>>2]=k;if(q>>>0<=3){s=p;t=q;break b}else{h=p;m=q}}a[h>>0]=0;c[d>>2]=0;j=e-m|0;break a}else{s=b;t=e}while(0);if(t){k=s;i=t;o=c[d>>2]|0;while(1){u=c[o>>2]|0;if((u+-1|0)>>>0>126){if(!u){v=19;break}w=vF(g,u,0)|0;if((w|0)==-1){j=-1;break a}if(i>>>0<w>>>0){v=22;break}vF(k,c[o>>2]|0,0)|0;x=k+w|0;y=i-w|0;z=o}else{a[k>>0]=u;x=k+1|0;y=i+-1|0;z=c[d>>2]|0}o=z+4|0;c[d>>2]=o;if(!y){j=e;break a}else{k=x;i=y}}if((v|0)==19){a[k>>0]=0;c[d>>2]=0;j=e-i|0;break}else if((v|0)==22){j=e-i|0;break}}else j=e}while(0);l=f;return j|0}function YG(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=l;l=l+16|0;f=e;c[f>>2]=c[d>>2];g=cF(0,0,b,f)|0;if((g|0)>=0?(f=g+1|0,g=BE(f)|0,c[a>>2]=g,(g|0)!=0):0)h=cF(g,f,b,d)|0;else h=-1;l=e;return h|0}function ZG(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;if((c[d+76>>2]|0)>=0?(fF(d)|0)!=0:0){e=b&255;f=b&255;if((f|0)!=(a[d+75>>0]|0)?(g=d+20|0,h=c[g>>2]|0,h>>>0<(c[d+16>>2]|0)>>>0):0){c[g>>2]=h+1;a[h>>0]=e;i=f}else i=tG(d,b)|0;gF(d);j=i}else k=3;do if((k|0)==3){i=b&255;f=b&255;if((f|0)!=(a[d+75>>0]|0)?(e=d+20|0,h=c[e>>2]|0,h>>>0<(c[d+16>>2]|0)>>>0):0){c[e>>2]=h+1;a[h>>0]=i;j=f;break}j=tG(d,b)|0}while(0);return j|0}function _G(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=O(e,d)|0;h=(d|0)==0?0:e;if((c[f+76>>2]|0)>-1)i=fF(f)|0;else i=0;e=f+74|0;j=a[e>>0]|0;a[e>>0]=j+255|j;j=f+4|0;e=c[j>>2]|0;k=(c[f+8>>2]|0)-e|0;if((k|0)>0){l=k>>>0<g>>>0?k:g;CT(b|0,e|0,l|0)|0;c[j>>2]=(c[j>>2]|0)+l;m=g-l|0;n=b+l|0}else{m=g;n=b}a:do if(!m)o=13;else{b=f+32|0;l=m;j=n;while(1){if(XE(f)|0)break;e=fd[c[b>>2]&127](f,j,l)|0;if((e+1|0)>>>0<2)break;k=l-e|0;if(!k){o=13;break a}else{l=k;j=j+e|0}}if(i|0)gF(f);p=((g-l|0)>>>0)/(d>>>0)|0}while(0);if((o|0)==13)if(!i)p=h;else{gF(f);p=h}return p|0}function $G(a,b){a=a|0;b=b|0;return +(+aH(a,b,1))}function aH(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0.0;e=l;l=l+128|0;f=e;g=f;h=g+124|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));g=f+4|0;c[g>>2]=a;h=f+8|0;c[h>>2]=-1;c[f+44>>2]=a;c[f+76>>2]=-1;SE(f,0);i=+OF(f,d,1);d=(c[g>>2]|0)-(c[h>>2]|0)+(c[f+108>>2]|0)|0;if(b|0)c[b>>2]=d|0?a+d|0:a;l=e;return +i}function bH(a,b){a=a|0;b=b|0;return +(+aH(a,b,0))}function cH(a,b){a=a|0;b=b|0;return +(+aH(a,b,2))}function dH(a,b,c){a=a|0;b=b|0;c=c|0;return +(+bH(a,b))}function eH(a,b,c){a=a|0;b=b|0;c=c|0;return +(+$G(a,b))}function fH(a,b,c){a=a|0;b=b|0;c=c|0;return +(+cH(a,b))}function gH(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;e=nF(b)|0;b=$F(e)|0;if(b>>>0>=d>>>0){f=d+-1|0;if(!d)g=34;else{CT(c|0,e|0,f|0)|0;a[c+f>>0]=0;g=34}}else{CT(c|0,e|0,b+1|0)|0;g=0}return g|0}function hH(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if(d|0){e=d;d=a;while(1){e=e+-1|0;c[d>>2]=b;if(!e)break;else d=d+4|0}}return a|0}function iH(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if(a-b>>2>>>0>=d>>>0){if(d|0){e=b;f=a;g=d;while(1){g=g+-1|0;c[f>>2]=c[e>>2];if(!g)break;else{e=e+4|0;f=f+4|0}}}}else{f=d;do{f=f+-1|0;c[a+(f<<2)>>2]=c[b+(f<<2)>>2]}while((f|0)!=0)}return a|0}function jH(a){a=a|0;c[a>>2]=54328;lH(a+4|0);return}function kH(a){a=a|0;jH(a);mR(a);return}function lH(a){a=a|0;Ma(c[a>>2]|0);return}function mH(a,b){a=a|0;b=b|0;var d=0;d=c[b>>2]|0;c[a>>2]=d;Ta(d|0);return}function nH(a){a=a|0;c[a>>2]=54328;oH(a+4|0);return}function oH(a){a=a|0;c[a>>2]=La()|0;return}function pH(a){a=a|0;var b=0,d=0,e=0;b=l;l=l+16|0;d=b+4|0;e=b;b=a+4|0;c[d>>2]=0;a=(c[b>>2]|0)==0;lH(d);if(a)AS();else{mH(e,b);o=0;la(307,e|0);o=0;b=Pa()|0;lH(e);$a(b|0)}}function qH(a){a=a|0;Wa(c[a>>2]|0);AS()}function rH(a){a=a|0;sH(a);return}function sH(a){a=a|0;var b=0;c[a>>2]=54344;o=0;ma(187,a|0,0);b=o;o=0;if(b&1){b=Qa(0)|0;Id(b)}else{$I(a+28|0);CE(c[a+32>>2]|0);CE(c[a+36>>2]|0);CE(c[a+48>>2]|0);CE(c[a+60>>2]|0);return}}function tH(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a+32|0;e=a+36|0;f=c[a+40>>2]|0;while(1){if(!f)break;g=f+-1|0;td[c[(c[d>>2]|0)+(g<<2)>>2]&127](b,a,c[(c[e>>2]|0)+(g<<2)>>2]|0);f=g}return}function uH(a){a=a|0;sH(a);mR(a);return}function vH(a){a=a|0;c[a>>2]=54360;$I(a+4|0);return}function wH(a){a=a|0;vH(a);mR(a);return}function xH(a,b){a=a|0;b=b|0;return}function yH(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function zH(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function AH(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=a;c[e>>2]=0;c[e+4>>2]=0;e=a+8|0;c[e>>2]=-1;c[e+4>>2]=-1;return}function BH(a){a=a|0;return 0}function CH(a){a=a|0;return 0}function DH(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;JH()|0;f=b+12|0;g=b+16|0;h=d;d=0;while(1){if((d|0)>=(e|0))break;i=c[f>>2]|0;j=c[g>>2]|0;if(i>>>0<j>>>0){k=j-i|0;j=e-d|0;l=(j|0)<(k|0)?j:k;LH(h,i,l)|0;c[f>>2]=(c[f>>2]|0)+l;h=h+l|0;d=l+d|0;continue}l=dd[c[(c[b>>2]|0)+40>>2]&255](b)|0;if((l|0)==-1)break;a[h>>0]=MH(l)|0;h=h+1|0;d=d+1|0}return d|0}function EH(a){a=a|0;return JH()|0}function FH(b){b=b|0;var d=0,e=0;d=dd[c[(c[b>>2]|0)+36>>2]&255](b)|0;if((d|0)==(JH()|0))e=JH()|0;else{d=b+12|0;b=c[d>>2]|0;c[d>>2]=b+1;e=KH(a[b>>0]|0)|0}return e|0}function GH(a,b){a=a|0;b=b|0;return JH()|0}function HH(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=JH()|0;g=b+24|0;h=b+28|0;i=d;d=0;while(1){if((d|0)>=(e|0))break;j=c[g>>2]|0;k=c[h>>2]|0;if(j>>>0<k>>>0){l=k-j|0;k=e-d|0;m=(k|0)<(l|0)?k:l;LH(j,i,m)|0;c[g>>2]=(c[g>>2]|0)+m;i=i+m|0;d=m+d|0;continue}m=c[(c[b>>2]|0)+52>>2]|0;j=KH(a[i>>0]|0)|0;if((ed[m&255](b,j)|0)==(f|0))break;i=i+1|0;d=d+1|0}return d|0}function IH(a,b){a=a|0;b=b|0;return JH()|0}function JH(){return -1}function KH(a){a=a|0;return a&255|0}function LH(a,b,c){a=a|0;b=b|0;c=c|0;if(c|0)CT(a|0,b|0,c|0)|0;return a|0}function MH(a){a=a|0;return a&255|0}function NH(){return -1}function OH(a){a=a|0;return a|0}function PH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if((c|0)!=0?(o=0,$(114,a|0,b|0,c|0)|0,c=o,o=0,c&1):0){c=Qa(0)|0;Id(c)}else d=a;return d|0}function QH(a){a=a|0;UH(a,54456);rH(a+8|0);return}function RH(a){a=a|0;QH(a);mR(a);return}function SH(a){a=a|0;QH(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function TH(a){a=a|0;RH(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function UH(a,b){a=a|0;b=b|0;return}function VH(a){a=a|0;ZH(a,54504);rH(a+4|0);return}function WH(a){a=a|0;VH(a);mR(a);return}function XH(a){a=a|0;VH(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function YH(a){a=a|0;WH(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function ZH(a,b){a=a|0;b=b|0;return}function _H(a){a=a|0;mR(a);return}function $H(a){a=a|0;return 89799}function aI(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=l;l=l+16|0;g=f;if((e|0)!=1&(e|0)<257)XR(b,d,e);else{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;e=bI(89763)|0;if(e>>>0>4294967279)vR(b);if(e>>>0<11){a[b+11>>0]=e;h=b}else{d=e+16&-16;i=kR(d)|0;c[b>>2]=i;c[b+8>>2]=d|-2147483648;c[b+4>>2]=e;h=i}LH(h,89763,e)|0;a[g>>0]=0;cI(h+e|0,g)}l=f;return}function bI(a){a=a|0;return $F(a)|0}function cI(b,c){b=b|0;c=c|0;a[b>>0]=a[c>>0]|0;return}function dI(a){a=a|0;ZR(a);return}function eI(a){a=a|0;dI(a);mR(a);return}function fI(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=l;l=l+16|0;e=d;f=(c[a+24>>2]|0)==0|b;c[a+16>>2]=f;if(!(f&c[a+20>>2])){l=d;return}d=Ja(16)|0;gI()|0;c[e>>2]=1;c[e+4>>2]=54568;o=0;na(101,d|0,89864,e|0);e=o;o=0;if(e&1){e=Pa()|0;a=z;Sa(d|0);g=e;h=a}else{o=0;na(72,d|0,5832,135);o=0;d=Pa()|0;g=d;h=z}$a(g|0)}function gI(){(a[93392]|0)==0?iT(93392)|0:0;return 54568}function hI(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=l;l=l+16|0;f=e+8|0;g=e;h=d;d=c[h+4>>2]|0;i=g;c[i>>2]=c[h>>2];c[i+4>>2]=d;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];cS(a,f,b);c[a>>2]=54556;l=e;return}function iI(a,b){a=a|0;b=b|0;var d=0;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0&1;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;b=a+28|0;d=a+32|0;a=d+40|0;do{c[d>>2]=0;d=d+4|0}while((d|0)<(a|0));$Q(b);return}function jI(a,b){a=a|0;b=b|0;if((a|0)!=(b|0)){tH(a,0);kI(a,b);c[a+72>>2]=c[b+72>>2];c[a+76>>2]=c[b+76>>2];tH(a,2);c[a+20>>2]=c[b+20>>2];fI(a,c[a+16>>2]|0)}return a|0}function kI(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;d=a+44|0;e=b+40|0;f=c[e>>2]|0;do if((c[d>>2]|0)>>>0<f>>>0){g=f<<2;h=BE(g)|0;i=h;if(!h){h=Ja(4)|0;lT(h);o=0;na(72,h|0,7104,203);o=0;h=Pa()|0;j=h;k=z;l=i;break}h=BE(g)|0;g=h;if(!h){h=Ja(4)|0;lT(h);o=0;na(72,h|0,7104,203);o=0;h=Pa()|0;m=h;n=z;p=i;q=g;r=39}else{s=i;t=g;r=6}}else{s=0;t=0;r=6}while(0);if((r|0)==6){f=a+56|0;g=b+52|0;i=c[g>>2]|0;if((c[f>>2]|0)>>>0<i>>>0){h=BE(i<<2)|0;i=h;if(!h){h=Ja(4)|0;lT(h);o=0;na(72,h|0,7104,203);o=0;u=i}else{v=i;r=9}}else{v=0;r=9}do if((r|0)==9){i=a+68|0;h=b+64|0;w=c[h>>2]|0;if((c[i>>2]|0)>>>0<w>>>0){x=BE(w<<2)|0;if(!x){w=Ja(4)|0;lT(w);o=0;na(72,w|0,7104,203);o=0;u=v;break}else y=x}else y=0;c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];c[a+12>>2]=c[b+12>>2];aR(a+28|0,b+28|0)|0;x=a+32|0;if((c[d>>2]|0)>>>0<(c[e>>2]|0)>>>0){CE(c[x>>2]|0);c[x>>2]=s;w=a+36|0;CE(c[w>>2]|0);c[w>>2]=t;c[d>>2]=c[e>>2];A=w;B=0;C=0}else{A=a+36|0;B=s;C=t}w=a+40|0;D=b+32|0;E=b+36|0;F=0;while(1){c[w>>2]=F;if(F>>>0>=(c[e>>2]|0)>>>0)break;c[(c[x>>2]|0)+(F<<2)>>2]=c[(c[D>>2]|0)+(F<<2)>>2];c[(c[A>>2]|0)+(F<<2)>>2]=c[(c[E>>2]|0)+(F<<2)>>2];F=(c[w>>2]|0)+1|0}w=a+48|0;if((c[f>>2]|0)>>>0<(c[g>>2]|0)>>>0){CE(c[w>>2]|0);c[w>>2]=v;c[f>>2]=c[g>>2];G=0}else G=v;F=a+52|0;E=c[b+48>>2]|0;D=0;while(1){c[F>>2]=D;if(D>>>0>=(c[g>>2]|0)>>>0)break;c[(c[w>>2]|0)+(D<<2)>>2]=c[E+(D<<2)>>2];D=D+1|0}D=a+60|0;if((c[i>>2]|0)>>>0<(c[h>>2]|0)>>>0){CE(c[D>>2]|0);c[D>>2]=y;c[i>>2]=c[h>>2];H=0}else H=y;E=a+64|0;w=b+60|0;F=0;while(1){c[E>>2]=F;if(F>>>0>=(c[h>>2]|0)>>>0)break;c[(c[D>>2]|0)+(F<<2)>>2]=c[(c[w>>2]|0)+(F<<2)>>2];F=F+1|0}if(H|0)CE(H);if(G|0)CE(G);if(C|0)CE(C);if(B|0)CE(B);return}while(0);B=Pa()|0;C=z;if(!u){m=B;n=C;p=s;q=t;r=39}else{CE(u);m=B;n=C;p=s;q=t;r=39}}if((r|0)==39)if(!q){j=m;k=n;l=p}else{CE(q);j=m;k=n;l=p}if(l|0)CE(l);$a(j|0)}function lI(a,b){a=a|0;b=b|0;return (a|0)==(b|0)|0}function mI(a,b){a=a|0;b=b|0;ZQ(a,b+28|0);return}function nI(a,b){a=a|0;b=b|0;return (a|0)==(b|0)|0}function oI(a){a=a|0;var b=0;c[a>>2]=54360;$Q(a+4|0);b=a+8|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;return}function pI(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;g=l;l=l+16|0;h=g;a[d>>0]=0;i=e+(c[(c[e>>2]|0)+-12>>2]|0)|0;j=c[i+16>>2]|0;if(!j){k=c[i+72>>2]|0;if(k|0)qI(k)|0;do if(!f?(k=e+(c[(c[e>>2]|0)+-12>>2]|0)|0,c[k+4>>2]&4096|0):0){mI(h,k);o=0;k=_(93,h|0,102968)|0;m=o;o=0;if(m&1){m=Pa()|0;$I(h);$a(m|0)}$I(h);m=c[e+(c[(c[e>>2]|0)+-12>>2]|0)+24>>2]|0;n=k+8|0;k=m;p=(m|0)==0;q=k+12|0;r=k+16|0;s=m;while(1){if(p){t=0;u=0;break}v=c[q>>2]|0;if((v|0)==(c[r>>2]|0))w=dd[c[(c[s>>2]|0)+36>>2]&255](k)|0;else w=KH(a[v>>0]|0)|0;v=lI(w,JH()|0)|0;x=v?0:m;if(v){t=0;u=0;break}v=x;y=v+12|0;z=c[y>>2]|0;A=v+16|0;if((z|0)==(c[A>>2]|0))B=dd[c[(c[x>>2]|0)+36>>2]&255](v)|0;else B=KH(a[z>>0]|0)|0;if((B&255)<<24>>24<=-1){t=v;u=m;break}if(!(b[(c[n>>2]|0)+(B<<24>>24<<1)>>1]&8192)){t=v;u=m;break}z=c[y>>2]|0;if((z|0)==(c[A>>2]|0)){dd[c[(c[x>>2]|0)+40>>2]&255](v)|0;continue}else{c[y>>2]=z+1;KH(a[z>>0]|0)|0;continue}}if(u|0){m=c[t+12>>2]|0;if((m|0)==(c[t+16>>2]|0))C=dd[c[(c[u>>2]|0)+36>>2]&255](t)|0;else C=KH(a[m>>0]|0)|0;if(!(lI(C,JH()|0)|0))break}m=e+(c[(c[e>>2]|0)+-12>>2]|0)|0;fI(m,c[m+16>>2]|6)}while(0);a[d>>0]=(c[e+(c[(c[e>>2]|0)+-12>>2]|0)+16>>2]|0)==0&1}else fI(i,j|4);l=g;return}function qI(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=l;l=l+16|0;e=d;a:do if(c[b+(c[(c[b>>2]|0)+-12>>2]|0)+24>>2]|0){o=0;ma(131,e|0,b|0);f=o;o=0;b:do if(f&1){g=Qa(0)|0;h=g}else{do if(a[e>>0]|0){g=c[b+(c[(c[b>>2]|0)+-12>>2]|0)+24>>2]|0;o=0;i=Z(c[(c[g>>2]|0)+24>>2]|0,g|0)|0;g=o;o=0;if(!(g&1)){if((i|0)!=-1)break;i=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;o=0;ma(133,i|0,c[i+16>>2]|1|0);i=o;o=0;if(!(i&1))break}i=Qa(0)|0;sI(e);h=i;break b}while(0);sI(e);break a}while(0);Ka(h|0)|0;o=0;la(272,b+(c[(c[b>>2]|0)+-12>>2]|0)|0);f=o;o=0;if(!(f&1)){Na();break}f=Pa()|0;o=0;ka(3);i=o;o=0;if(i&1){i=Qa(0)|0;Id(i)}else $a(f|0)}while(0);l=d;return b|0}function rI(b,d){b=b|0;d=d|0;var e=0;a[b>>0]=0;c[b+4>>2]=d;e=d+(c[(c[d>>2]|0)+-12>>2]|0)|0;if(!(c[e+16>>2]|0)){d=c[e+72>>2]|0;if(d|0)qI(d)|0;a[b>>0]=1}return}function sI(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=a+(c[(c[a>>2]|0)+-12>>2]|0)|0;do if(((c[d+24>>2]|0?(c[d+16>>2]|0)==0:0)?c[d+4>>2]&8192|0:0)?!(Ga()|0):0){a=c[b>>2]|0;e=c[a+(c[(c[a>>2]|0)+-12>>2]|0)+24>>2]|0;o=0;a=Z(c[(c[e>>2]|0)+24>>2]|0,e|0)|0;e=o;o=0;if(!(e&1)){if((a|0)!=-1)break;a=c[b>>2]|0;e=a+(c[(c[a>>2]|0)+-12>>2]|0)|0;o=0;ma(133,e|0,c[e+16>>2]|1|0);e=o;o=0;if(!(e&1))break}e=Qa(0)|0;Ka(e|0)|0;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}}while(0);return}function tI(a){a=a|0;var b=0;b=a+16|0;c[b>>2]=c[b>>2]|1;if(!(c[a+20>>2]&1))return;else Va()}function uI(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=l;l=l+32|0;f=e+24|0;g=e+20|0;h=e+16|0;i=e+12|0;j=e+28|0;k=e+8|0;m=e+4|0;n=e;o=0;na(102,j|0,b|0,0);p=o;o=0;a:do if(p&1){q=Qa(0)|0;r=q;s=b;t=b;u=12}else b:do if(a[j>>0]|0){c[k>>2]=0;mI(n,b+(c[(c[b>>2]|0)+-12>>2]|0)|0);o=0;q=_(93,n|0,102992)|0;v=o;o=0;do if(!(v&1)?(w=b+(c[(c[b>>2]|0)+-12>>2]|0)|0,x=c[(c[q>>2]|0)+16>>2]|0,c[h>>2]=c[w+24>>2],c[i>>2]=0,o=0,c[g>>2]=c[h>>2],c[f>>2]=c[i>>2],ea(x|0,q|0,g|0,f|0,w|0,k|0,m|0)|0,w=o,o=0,!(w&1)):0){$I(n);c[d>>2]=c[m>>2];w=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;o=0;ma(133,w|0,c[w+16>>2]|c[k>>2]|0);w=o;o=0;if(w&1){w=Qa(0)|0;y=w;break}else break b}else u=6;while(0);if((u|0)==6){q=Qa(0)|0;$I(n);y=q}r=y;s=b;t=b;u=12;break a}while(0);while(0);do if((u|0)==12){Ka(r|0)|0;o=0;la(272,s+(c[(c[t>>2]|0)+-12>>2]|0)|0);y=o;o=0;if(!(y&1)){Na();break}y=Pa()|0;o=0;ka(3);n=o;o=0;if(n&1){n=Qa(0)|0;Id(n)}else $a(y|0)}while(0);l=e;return b|0}function vI(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0;f=l;l=l+16|0;g=f;h=b+4|0;c[h>>2]=0;o=0;na(102,g|0,b|0,1);i=o;o=0;do if(!(i&1)){j=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;if(!(a[g>>0]|0)){o=0;ma(133,j|0,c[j+16>>2]|4|0);k=o;o=0;if(k&1){m=6;break}}else{k=c[j+24>>2]|0;o=0;j=$(c[(c[k>>2]|0)+32>>2]|0,k|0,d|0,e|0)|0;k=o;o=0;if(k&1){m=6;break}c[h>>2]=j;if((j|0)!=(e|0)?(j=b+(c[(c[b>>2]|0)+-12>>2]|0)|0,o=0,ma(133,j|0,c[j+16>>2]|6|0),j=o,o=0,j&1):0){m=6;break}}}else m=6;while(0);do if((m|0)==6){e=Qa(0)|0;Ka(e|0)|0;o=0;la(272,b+(c[(c[b>>2]|0)+-12>>2]|0)|0);e=o;o=0;if(!(e&1)){Na();break}e=Pa()|0;o=0;ka(3);h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)}else $a(e|0)}while(0);l=f;return b|0}function wI(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;e=l;l=l+16|0;f=e+12|0;g=e+8|0;h=e;o=0;ma(131,h|0,b|0);i=o;o=0;a:do if(i&1){j=Qa(0)|0;k=j;m=b;n=b;p=20}else{b:do if(a[h>>0]|0){mI(f,b+(c[(c[b>>2]|0)+-12>>2]|0)|0);o=0;j=_(93,f|0,103024)|0;q=o;o=0;c:do if(q&1){r=Qa(0)|0;$I(f);s=r}else{$I(f);r=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;t=c[r+24>>2]|0;u=JH()|0;v=r+76|0;do if(lI(u,c[v>>2]|0)|0){mI(f,r);o=0;w=_(93,f|0,102968)|0;x=o;o=0;if(!(x&1)?(o=0,x=_(c[(c[w>>2]|0)+28>>2]|0,w|0,32)|0,w=o,o=0,!(w&1)):0){$I(f);w=x<<24>>24;c[v>>2]=w;y=r;z=w;p=10;break}w=Qa(0)|0;$I(f);A=w}else{y=r;z=c[v>>2]|0;p=10}while(0);do if((p|0)==10){v=c[(c[j>>2]|0)+16>>2]|0;c[g>>2]=t;o=0;c[f>>2]=c[g>>2];r=ca(v|0,j|0,f|0,y|0,z&255|0,d|0)|0;v=o;o=0;if(v&1){v=Qa(0)|0;A=v;break}if(r|0)break b;r=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;o=0;ma(133,r|0,c[r+16>>2]|5|0);r=o;o=0;if(!(r&1))break b;r=Qa(0)|0;s=r;break c}while(0);s=A}while(0);sI(h);k=s;m=b;n=b;p=20;break a}while(0);sI(h)}while(0);do if((p|0)==20){Ka(k|0)|0;o=0;la(272,n+(c[(c[m>>2]|0)+-12>>2]|0)|0);h=o;o=0;if(!(h&1)){Na();break}h=Pa()|0;o=0;ka(3);s=o;o=0;if(s&1){s=Qa(0)|0;Id(s)}else $a(h|0)}while(0);l=e;return b|0}function xI(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;e=l;l=l+16|0;f=e+12|0;g=e+8|0;h=e;o=0;ma(131,h|0,b|0);i=o;o=0;a:do if(i&1){j=Qa(0)|0;k=j;m=b;n=b;p=20}else{b:do if(a[h>>0]|0){mI(f,b+(c[(c[b>>2]|0)+-12>>2]|0)|0);o=0;j=_(93,f|0,103024)|0;q=o;o=0;c:do if(q&1){r=Qa(0)|0;$I(f);s=r}else{$I(f);r=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;t=c[r+24>>2]|0;u=JH()|0;v=r+76|0;do if(lI(u,c[v>>2]|0)|0){mI(f,r);o=0;w=_(93,f|0,102968)|0;x=o;o=0;if(!(x&1)?(o=0,x=_(c[(c[w>>2]|0)+28>>2]|0,w|0,32)|0,w=o,o=0,!(w&1)):0){$I(f);w=x<<24>>24;c[v>>2]=w;y=r;z=w;p=10;break}w=Qa(0)|0;$I(f);A=w}else{y=r;z=c[v>>2]|0;p=10}while(0);do if((p|0)==10){v=c[(c[j>>2]|0)+24>>2]|0;c[g>>2]=t;o=0;c[f>>2]=c[g>>2];r=ca(v|0,j|0,f|0,y|0,z&255|0,d|0)|0;v=o;o=0;if(v&1){v=Qa(0)|0;A=v;break}if(r|0)break b;r=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;o=0;ma(133,r|0,c[r+16>>2]|5|0);r=o;o=0;if(!(r&1))break b;r=Qa(0)|0;s=r;break c}while(0);s=A}while(0);sI(h);k=s;m=b;n=b;p=20;break a}while(0);sI(h)}while(0);do if((p|0)==20){Ka(k|0)|0;o=0;la(272,n+(c[(c[m>>2]|0)+-12>>2]|0)|0);h=o;o=0;if(!(h&1)){Na();break}h=Pa()|0;o=0;ka(3);s=o;o=0;if(s&1){s=Qa(0)|0;Id(s)}else $a(h|0)}while(0);l=e;return b|0}function yI(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;e=l;l=l+16|0;f=e+12|0;g=e+8|0;h=e;o=0;ma(131,h|0,b|0);i=o;o=0;a:do if(i&1){j=Qa(0)|0;k=j;m=b;n=b;p=20}else{b:do if(a[h>>0]|0){mI(f,b+(c[(c[b>>2]|0)+-12>>2]|0)|0);o=0;j=_(93,f|0,103024)|0;q=o;o=0;c:do if(q&1){r=Qa(0)|0;$I(f);s=r}else{$I(f);r=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;t=c[r+24>>2]|0;u=JH()|0;v=r+76|0;do if(lI(u,c[v>>2]|0)|0){mI(f,r);o=0;w=_(93,f|0,102968)|0;x=o;o=0;if(!(x&1)?(o=0,x=_(c[(c[w>>2]|0)+28>>2]|0,w|0,32)|0,w=o,o=0,!(w&1)):0){$I(f);w=x<<24>>24;c[v>>2]=w;y=r;z=w;p=10;break}w=Qa(0)|0;$I(f);A=w}else{y=r;z=c[v>>2]|0;p=10}while(0);do if((p|0)==10){v=c[(c[j>>2]|0)+40>>2]|0;c[g>>2]=t;o=0;c[f>>2]=c[g>>2];r=ca(v|0,j|0,f|0,y|0,z&255|0,d|0)|0;v=o;o=0;if(v&1){v=Qa(0)|0;A=v;break}if(r|0)break b;r=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;o=0;ma(133,r|0,c[r+16>>2]|5|0);r=o;o=0;if(!(r&1))break b;r=Qa(0)|0;s=r;break c}while(0);s=A}while(0);sI(h);k=s;m=b;n=b;p=20;break a}while(0);sI(h)}while(0);do if((p|0)==20){Ka(k|0)|0;o=0;la(272,n+(c[(c[m>>2]|0)+-12>>2]|0)|0);h=o;o=0;if(!(h&1)){Na();break}h=Pa()|0;o=0;ka(3);s=o;o=0;if(s&1){s=Qa(0)|0;Id(s)}else $a(h|0)}while(0);l=e;return b|0}function zI(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;f=l;l=l+16|0;g=f;o=0;ma(131,g|0,b|0);h=o;o=0;a:do if(h&1){i=Qa(0)|0;j=i;k=b;m=b;n=9}else{do if((e|0)!=0&(a[g>>0]|0)!=0){i=c[b+(c[(c[b>>2]|0)+-12>>2]|0)+24>>2]|0;o=0;p=$(c[(c[i>>2]|0)+48>>2]|0,i|0,d|0,e|0)|0;i=o;o=0;if(!(i&1)){if((p|0)==(e|0))break;p=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;o=0;ma(133,p|0,c[p+16>>2]|1|0);p=o;o=0;if(!(p&1))break}p=Qa(0)|0;sI(g);j=p;k=b;m=b;n=9;break a}while(0);sI(g)}while(0);do if((n|0)==9){Ka(j|0)|0;o=0;la(272,k+(c[(c[m>>2]|0)+-12>>2]|0)|0);g=o;o=0;if(!(g&1)){Na();break}g=Pa()|0;o=0;ka(3);e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}else $a(g|0)}while(0);l=f;return b|0}function AI(a){a=a|0;GI(a);return}function BI(a){a=a|0;AI(a);mR(a);return}function CI(a){a=a|0;if(a|0)rd[c[(c[a>>2]|0)+4>>2]&511](a);return}function DI(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;b=e;e=c;while(1){if((b|0)==(f|0)){g=7;break}if((e|0)==(d|0)){h=-1;break}c=a[e>>0]|0;i=a[b>>0]|0;if(c<<24>>24<i<<24>>24){h=-1;break}if(i<<24>>24<c<<24>>24){h=1;break}b=b+1|0;e=e+1|0}if((g|0)==7)h=(e|0)!=(d|0)&1;return h|0}function EI(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;d=l;l=l+16|0;g=d;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;h=f-e|0;if(h>>>0>4294967279)vR(b);if(h>>>0<11){a[b+11>>0]=h;i=b}else{j=h+16&-16;k=kR(j)|0;c[b>>2]=k;c[b+8>>2]=j|-2147483648;c[b+4>>2]=h;i=k}k=e;e=i;while(1){if((k|0)==(f|0))break;cI(e,k);k=k+1|0;e=e+1|0}a[g>>0]=0;cI(i+h|0,g);l=d;return}function FI(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0;b=0;e=c;while(1){if((e|0)==(d|0))break;c=(b<<4)+(a[e>>0]|0)|0;f=c&-268435456;b=(f>>>24|f)^c;e=e+1|0}return b|0}function GI(a){a=a|0;return}function HI(a){a=a|0;GI(a);return}function II(a){a=a|0;HI(a);mR(a);return}function JI(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;a=e;e=b;while(1){if((a|0)==(f|0)){g=7;break}if((e|0)==(d|0)){h=-1;break}b=c[e>>2]|0;i=c[a>>2]|0;if((b|0)<(i|0)){h=-1;break}if((i|0)<(b|0)){h=1;break}a=a+4|0;e=e+4|0}if((g|0)==7)h=(e|0)!=(d|0)&1;return h|0}function KI(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0;d=l;l=l+16|0;g=d;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;h=f-e>>2;if(h>>>0>1073741807)vR(b);do if(h>>>0>=2){i=h+4&-4;if(i>>>0<=1073741823){j=kR(i<<2)|0;c[b>>2]=j;c[b+8>>2]=i|-2147483648;c[b+4>>2]=h;k=e;m=j;break}j=Ja(8)|0;o=0;ma(153,j|0,92198);i=o;o=0;if(i&1){i=Pa()|0;Sa(j|0);$a(i|0)}else{c[j>>2]=57580;Xa(j|0,7152,205)}}else{a[b+8+3>>0]=h;k=e;m=b}while(0);while(1){if((k|0)==(f|0))break;MI(m,k);k=k+4|0;m=m+4|0}c[g>>2]=0;MI(m,g);l=d;return}function LI(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;a=0;e=b;while(1){if((e|0)==(d|0))break;b=(c[e>>2]|0)+(a<<4)|0;f=b&-268435456;a=(f>>>24|f)^b;e=e+4|0}return a|0}function MI(a,b){a=a|0;b=b|0;c[a>>2]=c[b>>2];return}function NI(a){a=a|0;GI(a);return}function OI(a){a=a|0;GI(a);mR(a);return}function PI(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0;i=l;l=l+48|0;j=i+40|0;k=i+16|0;m=i+8|0;n=i+12|0;p=i+4|0;q=i;a:do if(!(c[f+4>>2]&1)){c[m>>2]=-1;r=c[(c[b>>2]|0)+16>>2]|0;c[n>>2]=c[d>>2];c[p>>2]=c[e>>2];c[k>>2]=c[n>>2];c[j>>2]=c[p>>2];c[d>>2]=kd[r&63](b,k,j,f,g,m)|0;switch(c[m>>2]|0){case 0:{a[h>>0]=0;break}case 1:{a[h>>0]=1;break}default:{a[h>>0]=1;c[g>>2]=4}}s=c[d>>2]|0}else{mI(j,f);o=0;r=_(93,j|0,102968)|0;t=o;o=0;do if(t&1){u=Pa()|0;v=z;$I(j);w=u;x=v}else{$I(j);mI(j,f);o=0;v=_(93,j|0,102984)|0;u=o;o=0;if(u&1){u=Pa()|0;y=z;$I(j);w=u;x=y;break}$I(j);o=0;ma(c[(c[v>>2]|0)+24>>2]|0,k|0,v|0);y=o;o=0;b:do if(y&1){u=Pa()|0;A=u;B=z}else{o=0;ma(c[(c[v>>2]|0)+28>>2]|0,k+12|0,v|0);u=o;o=0;if(u&1){u=Pa()|0;C=z;xR(k);A=u;B=C;break}c[q>>2]=c[e>>2];C=k+24|0;o=0;c[j>>2]=c[q>>2];u=fa(9,d|0,j|0,k|0,C|0,r|0,g|0,1)|0;D=o;o=0;if(D&1){D=Pa()|0;E=z;F=C;while(1){F=F+-12|0;xR(F);if((F|0)==(k|0)){A=D;B=E;break b}}}a[h>>0]=(u|0)==(k|0)&1;E=c[d>>2]|0;D=C;do{D=D+-12|0;xR(D)}while((D|0)!=(k|0));s=E;break a}while(0);w=A;x=B}while(0);$a(w|0)}while(0);l=i;return s|0}function QI(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=FJ(a,j,i,e,f,g)|0;l=h;return m|0}function RI(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=DJ(a,j,i,e,f,g)|0;l=h;return m|0}function SI(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=BJ(a,j,i,e,f,g)|0;l=h;return m|0}function TI(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=zJ(a,j,i,e,f,g)|0;l=h;return m|0}function UI(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=xJ(a,j,i,e,f,g)|0;l=h;return m|0}function VI(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=tJ(a,j,i,e,f,g)|0;l=h;return m|0}function WI(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=rJ(a,j,i,e,f,g)|0;l=h;return m|0}function XI(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=pJ(a,j,i,e,f,g)|0;l=h;return m|0}function YI(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=kJ(a,j,i,e,f,g)|0;l=h;return m|0}function ZI(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,$=0,ba=0;b=l;l=l+240|0;i=b;j=b+204|0;k=b+192|0;m=b+180|0;n=b+176|0;p=b+16|0;q=b+8|0;r=b+4|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;s=0;while(1){if((s|0)==3)break;c[k+(s<<2)>>2]=0;s=s+1|0}o=0;ma(132,m|0,f|0);f=o;o=0;do if(f&1){s=Pa()|0;t=s;u=z;v=36}else{o=0;s=_(93,m|0,102968)|0;w=o;o=0;if(!(w&1)?(o=0,aa(c[(c[s>>2]|0)+32>>2]|0,s|0,89942,89968,j|0)|0,s=o,o=0,!(s&1)):0){$I(m);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;s=0;while(1){if((s|0)==3)break;c[m+(s<<2)>>2]=0;s=s+1|0}s=m+11|0;if((a[s>>0]|0)<0)x=(c[m+8>>2]&2147483647)+-1|0;else x=10;o=0;na(65,m|0,x|0,0);w=o;o=0;if(w&1){w=Pa()|0;y=w;A=z}else{w=(a[s>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=w;c[q>>2]=p;c[r>>2]=0;B=m+4|0;C=m+8|0;D=c[d>>2]|0;E=w;w=D;F=D;a:while(1){if(w){D=c[w+12>>2]|0;if((D|0)==(c[w+16>>2]|0)){o=0;G=Z(c[(c[w>>2]|0)+36>>2]|0,w|0)|0;H=o;o=0;if(H&1)break;else I=G}else I=KH(a[D>>0]|0)|0;if(lI(I,JH()|0)|0){c[d>>2]=0;J=0;K=0;L=1}else{J=w;K=F;L=0}}else{J=0;K=0;L=1}D=c[e>>2]|0;do if(D){G=c[D+12>>2]|0;if((G|0)==(c[D+16>>2]|0)){o=0;H=Z(c[(c[D>>2]|0)+36>>2]|0,D|0)|0;M=o;o=0;if(M&1)break a;else N=H}else N=KH(a[G>>0]|0)|0;if(!(lI(N,JH()|0)|0))if(L){O=D;break}else{P=E;Q=D;v=46;break a}else{c[e>>2]=0;v=26;break}}else v=26;while(0);if((v|0)==26){v=0;if(L){P=E;Q=0;v=46;break}else O=0}D=a[s>>0]|0;G=D<<24>>24<0?c[B>>2]|0:D&255;if((c[n>>2]|0)==(E+G|0)){o=0;na(65,m|0,G<<1|0,0);D=o;o=0;if(D&1)break;if((a[s>>0]|0)<0)R=(c[C>>2]&2147483647)+-1|0;else R=10;o=0;na(65,m|0,R|0,0);D=o;o=0;if(D&1)break;D=(a[s>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=D+G;S=D}else S=E;D=J+12|0;G=c[D>>2]|0;H=J+16|0;if((G|0)==(c[H>>2]|0)){o=0;M=Z(c[(c[J>>2]|0)+36>>2]|0,J|0)|0;T=o;o=0;if(T&1)break;else U=M}else U=KH(a[G>>0]|0)|0;o=0;G=ha(2,U&255|0,16,S|0,n|0,r|0,0,k|0,p|0,q|0,j|0)|0;M=o;o=0;if(M&1)break;if(G|0){P=S;Q=O;v=46;break}G=c[D>>2]|0;if((G|0)==(c[H>>2]|0)){o=0;Z(c[(c[J>>2]|0)+40>>2]|0,J|0)|0;H=o;o=0;if(H&1)break;else{E=S;w=J;F=K;continue}}else{c[D>>2]=G+1;KH(a[G>>0]|0)|0;E=S;w=J;F=K;continue}}b:do if((((v|0)==46?(o=0,na(65,m|0,(c[n>>2]|0)-P|0,0),F=o,o=0,!(F&1)):0)?(F=a[s>>0]|0,w=c[m>>2]|0,o=0,E=Y(36)|0,C=o,o=0,!(C&1)):0)?(o=0,c[i>>2]=h,C=aa(52,(F<<24>>24<0?w:m)|0,E|0,89975,i|0)|0,E=o,o=0,!(E&1)):0){if((C|0)!=1)c[g>>2]=4;if(J){C=c[J+12>>2]|0;if((C|0)==(c[J+16>>2]|0)){o=0;E=Z(c[(c[K>>2]|0)+36>>2]|0,J|0)|0;w=o;o=0;if(w&1)break;else V=E}else V=KH(a[C>>0]|0)|0;if(lI(V,JH()|0)|0){c[d>>2]=0;W=1}else W=0}else W=1;do if(Q){C=c[Q+12>>2]|0;if((C|0)==(c[Q+16>>2]|0)){o=0;E=Z(c[(c[Q>>2]|0)+36>>2]|0,Q|0)|0;w=o;o=0;if(w&1)break b;else X=E}else X=KH(a[C>>0]|0)|0;if(!(lI(X,JH()|0)|0))if(W)break;else{v=65;break}else{c[e>>2]=0;v=63;break}}else v=63;while(0);if((v|0)==63?W:0)v=65;if((v|0)==65)c[g>>2]=c[g>>2]|2;C=c[d>>2]|0;xR(m);xR(k);l=b;return C|0}while(0);s=Pa()|0;y=s;A=z}xR(m);$=y;ba=A;break}s=Pa()|0;C=z;$I(m);t=s;u=C;v=36}while(0);if((v|0)==36){$=t;ba=u}xR(k);$a($|0);return 0}function _I(a,b){a=a|0;b=b|0;var d=0;d=c[a>>2]|0;return eJ(d,dJ(b)|0)|0}function $I(a){a=a|0;fR(c[a>>2]|0)|0;return}function aJ(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;m=c[f>>2]|0;n=(m|0)==(e|0);do if(n){o=(a[l+24>>0]|0)==b<<24>>24;if(!o?(a[l+25>>0]|0)!=b<<24>>24:0){p=5;break}c[f>>2]=e+1;a[e>>0]=o?43:45;c[g>>2]=0;q=0}else p=5;while(0);a:do if((p|0)==5){o=a[i+11>>0]|0;if(b<<24>>24==h<<24>>24?((o<<24>>24<0?c[i+4>>2]|0:o&255)|0)!=0:0){o=c[k>>2]|0;if((o-j|0)>=160){q=0;break}r=c[g>>2]|0;c[k>>2]=o+4;c[o>>2]=r;c[g>>2]=0;q=0;break}r=l+26|0;o=0;while(1){s=l+o|0;if((o|0)==26){t=r;break}if((a[s>>0]|0)==b<<24>>24){t=s;break}else o=o+1|0}o=t-l|0;if((o|0)>23)q=-1;else{switch(d|0){case 10:case 8:{if((o|0)>=(d|0)){q=-1;break a}break}case 16:{if((o|0)>=22){if(n){q=-1;break a}if((m-e|0)>=3){q=-1;break a}if((a[m+-1>>0]|0)!=48){q=-1;break a}c[g>>2]=0;r=a[89942+o>>0]|0;c[f>>2]=m+1;a[m>>0]=r;q=0;break a}break}default:{}}r=a[89942+o>>0]|0;c[f>>2]=m+1;a[m>>0]=r;c[g>>2]=(c[g>>2]|0)+1;q=0}}while(0);return q|0}function bJ(){var b=0,d=0;do if((a[93400]|0)==0?iT(93400)|0:0){o=0;b=$(115,2147483647,89978,0)|0;d=o;o=0;if(d&1){d=Pa()|0;$a(d|0)}else{c[25744]=b;break}}while(0);return c[25744]|0}function cJ(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=l;l=l+16|0;g=f;c[g>>2]=e;e=nG(b)|0;b=GG(a,d,g)|0;if(e|0?(o=0,Z(240,e|0)|0,e=o,o=0,e&1):0){e=Qa(0)|0;Id(e)}l=f;return b|0}function dJ(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=l;l=l+48|0;d=b+32|0;e=b+24|0;f=b;g=b+16|0;c[g>>2]=308;c[g+4>>2]=0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];hJ(f,d,a);if((c[a>>2]|0)!=-1){c[d>>2]=f;c[e>>2]=d;jR(a,e,309)}l=b;return (c[a+4>>2]|0)+-1|0}function eJ(a,b){a=a|0;b=b|0;if(fJ(a,b)|0)return c[(c[a+8>>2]|0)+(b<<2)>>2]|0;else{b=Ja(4)|0;hT(b);Xa(b|0,7168,210)}return 0}function fJ(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[a+8>>2]|0;if((c[a+12>>2]|0)-d>>2>>>0>b>>>0)e=(c[d+(b<<2)>>2]|0)!=0;else e=0;return e|0}function gJ(a){a=a|0;var b=0;b=c[25745]|0;c[25745]=b+1;c[a+4>>2]=b+1;return}function hJ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=c[b>>2]|0;f=c[b+4>>2]|0;c[a>>2]=d;c[a+4>>2]=e;c[a+8>>2]=f;return}function iJ(a){a=a|0;jJ(c[c[a>>2]>>2]|0);return}function jJ(a){a=a|0;var b=0,d=0,e=0,f=0;b=c[a+4>>2]|0;d=c[a+8>>2]|0;e=(c[a>>2]|0)+(d>>1)|0;if(!(d&1))f=b;else f=c[(c[e>>2]|0)+b>>2]|0;rd[f&511](e);return}function kJ(b,d,e,f,g,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0.0,W=0,Y=0,_=0;b=l;l=l+240|0;j=b+200|0;k=b+199|0;m=b+198|0;n=b+184|0;p=b+172|0;q=b+168|0;r=b+8|0;s=b+4|0;t=b;u=b+197|0;v=b+196|0;lJ(n,f,j,k,m);c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;f=0;while(1){if((f|0)==3)break;c[p+(f<<2)>>2]=0;f=f+1|0}f=p+11|0;if((a[f>>0]|0)<0)w=(c[p+8>>2]&2147483647)+-1|0;else w=10;o=0;na(65,p|0,w|0,0);w=o;o=0;if(w&1){w=Pa()|0;x=w;y=z}else{w=(a[f>>0]|0)<0?c[p>>2]|0:p;c[q>>2]=w;c[s>>2]=r;c[t>>2]=0;a[u>>0]=1;a[v>>0]=69;A=p+4|0;B=p+8|0;C=c[d>>2]|0;D=w;w=C;E=C;a:while(1){if(w){C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){o=0;F=Z(c[(c[w>>2]|0)+36>>2]|0,w|0)|0;G=o;o=0;if(G&1)break;else H=F}else H=KH(a[C>>0]|0)|0;if(lI(H,JH()|0)|0){c[d>>2]=0;I=0;J=0;K=1}else{I=w;J=E;K=0}}else{I=0;J=0;K=1}C=c[e>>2]|0;do if(C){F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){o=0;G=Z(c[(c[C>>2]|0)+36>>2]|0,C|0)|0;L=o;o=0;if(L&1)break a;else M=G}else M=KH(a[F>>0]|0)|0;if(!(lI(M,JH()|0)|0))if(K){N=C;break}else{O=D;P=C;Q=37;break a}else{c[e>>2]=0;Q=20;break}}else Q=20;while(0);if((Q|0)==20){Q=0;if(K){O=D;P=0;Q=37;break}else N=0}C=a[f>>0]|0;F=C<<24>>24<0?c[A>>2]|0:C&255;if((c[q>>2]|0)==(D+F|0)){o=0;na(65,p|0,F<<1|0,0);C=o;o=0;if(C&1)break;if((a[f>>0]|0)<0)R=(c[B>>2]&2147483647)+-1|0;else R=10;o=0;na(65,p|0,R|0,0);C=o;o=0;if(C&1)break;C=(a[f>>0]|0)<0?c[p>>2]|0:p;c[q>>2]=C+F;S=C}else S=D;C=I+12|0;F=c[C>>2]|0;G=I+16|0;if((F|0)==(c[G>>2]|0)){o=0;L=Z(c[(c[I>>2]|0)+36>>2]|0,I|0)|0;T=o;o=0;if(T&1)break;else U=L}else U=KH(a[F>>0]|0)|0;o=0;F=ja(1,U&255|0,u|0,v|0,S|0,q|0,a[k>>0]|0,a[m>>0]|0,n|0,r|0,s|0,t|0,j|0)|0;L=o;o=0;if(L&1)break;if(F|0){O=S;P=N;Q=37;break}F=c[C>>2]|0;if((F|0)==(c[G>>2]|0)){o=0;Z(c[(c[I>>2]|0)+40>>2]|0,I|0)|0;G=o;o=0;if(G&1)break;else{D=S;w=I;E=J;continue}}else{c[C>>2]=F+1;KH(a[F>>0]|0)|0;D=S;w=I;E=J;continue}}b:do if((Q|0)==37){E=a[n+11>>0]|0;if(!((a[u>>0]|0)==0?1:((E<<24>>24<0?c[n+4>>2]|0:E&255)|0)==0)?(E=c[s>>2]|0,(E-r|0)<160):0){w=c[t>>2]|0;c[s>>2]=E+4;c[E>>2]=w}o=0;V=+X(2,O|0,c[q>>2]|0,g|0);w=o;o=0;if(!(w&1)?(h[i>>3]=V,o=0,oa(54,n|0,r|0,c[s>>2]|0,g|0),w=o,o=0,!(w&1)):0){if(I){w=c[I+12>>2]|0;if((w|0)==(c[I+16>>2]|0)){o=0;E=Z(c[(c[J>>2]|0)+36>>2]|0,I|0)|0;S=o;o=0;if(S&1)break;else W=E}else W=KH(a[w>>0]|0)|0;if(lI(W,JH()|0)|0){c[d>>2]=0;Y=1}else Y=0}else Y=1;do if(P){w=c[P+12>>2]|0;if((w|0)==(c[P+16>>2]|0)){o=0;E=Z(c[(c[P>>2]|0)+36>>2]|0,P|0)|0;S=o;o=0;if(S&1)break b;else _=E}else _=KH(a[w>>0]|0)|0;if(!(lI(_,JH()|0)|0))if(Y)break;else{Q=56;break}else{c[e>>2]=0;Q=54;break}}else Q=54;while(0);if((Q|0)==54?Y:0)Q=56;if((Q|0)==56)c[g>>2]=c[g>>2]|2;w=c[d>>2]|0;xR(p);xR(n);l=b;return w|0}}while(0);b=Pa()|0;x=b;y=z}xR(p);xR(n);$a(x|0);return 0}function lJ(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=l;l=l+16|0;i=h;mI(i,d);o=0;d=_(93,i|0,102968)|0;j=o;o=0;if(((((!(j&1)?(o=0,aa(c[(c[d>>2]|0)+32>>2]|0,d|0,89942,89974,e|0)|0,e=o,o=0,!(e&1)):0)?(o=0,e=_(93,i|0,102984)|0,d=o,o=0,!(d&1)):0)?(o=0,d=Z(c[(c[e>>2]|0)+12>>2]|0,e|0)|0,j=o,o=0,!(j&1)):0)?(a[f>>0]=d,o=0,d=Z(c[(c[e>>2]|0)+16>>2]|0,e|0)|0,f=o,o=0,!(f&1)):0)?(a[g>>0]=d,o=0,ma(c[(c[e>>2]|0)+20>>2]|0,b|0,e|0),e=o,o=0,!(e&1)):0){$I(i);l=h;return}h=Pa()|0;$I(i);$a(h|0)}function mJ(b,d,e,f,g,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0;a:do if(b<<24>>24==h<<24>>24)if(a[d>>0]|0){a[d>>0]=0;o=c[g>>2]|0;c[g>>2]=o+1;a[o>>0]=46;o=a[j+11>>0]|0;if(((o<<24>>24<0?c[j+4>>2]|0:o&255)|0)!=0?(o=c[l>>2]|0,(o-k|0)<160):0){p=c[m>>2]|0;c[l>>2]=o+4;c[o>>2]=p;q=0}else q=0}else q=-1;else{if(b<<24>>24==i<<24>>24?(p=a[j+11>>0]|0,(p<<24>>24<0?c[j+4>>2]|0:p&255)|0):0){if(!(a[d>>0]|0)){q=-1;break}p=c[l>>2]|0;if((p-k|0)>=160){q=0;break}o=c[m>>2]|0;c[l>>2]=p+4;c[p>>2]=o;c[m>>2]=0;q=0;break}o=n+32|0;p=0;while(1){r=n+p|0;if((p|0)==32){s=o;break}if((a[r>>0]|0)==b<<24>>24){s=r;break}else p=p+1|0}p=s-n|0;if((p|0)>31)q=-1;else{o=a[89942+p>>0]|0;switch(p|0){case 24:case 25:{r=c[g>>2]|0;if((r|0)!=(f|0)?(a[r+-1>>0]&95)!=(a[e>>0]&127):0){q=-1;break a}c[g>>2]=r+1;a[r>>0]=o;q=0;break a;break}case 23:case 22:{a[e>>0]=80;r=c[g>>2]|0;c[g>>2]=r+1;a[r>>0]=o;q=0;break a;break}default:{r=o&95;if((((r|0)==(a[e>>0]|0)?(a[e>>0]=r|128,a[d>>0]|0):0)?(a[d>>0]=0,r=a[j+11>>0]|0,(r<<24>>24<0?c[j+4>>2]|0:r&255)|0):0)?(r=c[l>>2]|0,(r-k|0)<160):0){t=c[m>>2]|0;c[l>>2]=r+4;c[r>>2]=t}t=c[g>>2]|0;c[g>>2]=t+1;a[t>>0]=o;if((p|0)>21){q=0;break a}c[m>>2]=(c[m>>2]|0)+1;q=0;break a}}}}while(0);return q|0}function nJ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0.0,h=0,i=0.0,j=0.0,k=0,m=0.0;e=l;l=l+16|0;f=e;if((a|0)==(b|0)){c[d>>2]=4;g=0.0}else{h=c[(LE()|0)>>2]|0;c[(LE()|0)>>2]=0;i=+fH(a,f,bJ()|0);a=c[(LE()|0)>>2]|0;if(!a)c[(LE()|0)>>2]=h;if((c[f>>2]|0)==(b|0))if((a|0)==34){j=i;k=6}else m=i;else{j=0.0;k=6}if((k|0)==6){c[d>>2]=4;m=j}g=m}l=e;return +g}function oJ(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=b+11|0;h=a[g>>0]|0;i=b+4|0;j=c[i>>2]|0;do if((h<<24>>24<0?j:h&255)|0){if((d|0)==(e|0)){k=h;l=j}else{m=e;n=d;while(1){o=m+-4|0;if(n>>>0>=o>>>0)break;p=c[n>>2]|0;c[n>>2]=c[o>>2];c[o>>2]=p;m=o;n=n+4|0}k=a[g>>0]|0;l=c[i>>2]|0}n=k<<24>>24<0;m=n?c[b>>2]|0:b;o=e+-4|0;p=m+(n?l:k&255)|0;n=d;q=m;while(1){r=a[q>>0]|0;s=r<<24>>24>0&r<<24>>24!=127;if(n>>>0>=o>>>0)break;if(s?(c[n>>2]|0)!=(r<<24>>24|0):0){t=10;break}n=n+4|0;q=(p-q|0)>1?q+1|0:q}if((t|0)==10){c[f>>2]=4;break}if(s?((c[o>>2]|0)+-1|0)>>>0>=r<<24>>24>>>0:0)c[f>>2]=4}while(0);return}function pJ(b,d,e,f,g,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0.0,W=0,Y=0,_=0;b=l;l=l+240|0;j=b+200|0;k=b+199|0;m=b+198|0;n=b+184|0;p=b+172|0;q=b+168|0;r=b+8|0;s=b+4|0;t=b;u=b+197|0;v=b+196|0;lJ(n,f,j,k,m);c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;f=0;while(1){if((f|0)==3)break;c[p+(f<<2)>>2]=0;f=f+1|0}f=p+11|0;if((a[f>>0]|0)<0)w=(c[p+8>>2]&2147483647)+-1|0;else w=10;o=0;na(65,p|0,w|0,0);w=o;o=0;if(w&1){w=Pa()|0;x=w;y=z}else{w=(a[f>>0]|0)<0?c[p>>2]|0:p;c[q>>2]=w;c[s>>2]=r;c[t>>2]=0;a[u>>0]=1;a[v>>0]=69;A=p+4|0;B=p+8|0;C=c[d>>2]|0;D=w;w=C;E=C;a:while(1){if(w){C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){o=0;F=Z(c[(c[w>>2]|0)+36>>2]|0,w|0)|0;G=o;o=0;if(G&1)break;else H=F}else H=KH(a[C>>0]|0)|0;if(lI(H,JH()|0)|0){c[d>>2]=0;I=0;J=0;K=1}else{I=w;J=E;K=0}}else{I=0;J=0;K=1}C=c[e>>2]|0;do if(C){F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){o=0;G=Z(c[(c[C>>2]|0)+36>>2]|0,C|0)|0;L=o;o=0;if(L&1)break a;else M=G}else M=KH(a[F>>0]|0)|0;if(!(lI(M,JH()|0)|0))if(K){N=C;break}else{O=D;P=C;Q=37;break a}else{c[e>>2]=0;Q=20;break}}else Q=20;while(0);if((Q|0)==20){Q=0;if(K){O=D;P=0;Q=37;break}else N=0}C=a[f>>0]|0;F=C<<24>>24<0?c[A>>2]|0:C&255;if((c[q>>2]|0)==(D+F|0)){o=0;na(65,p|0,F<<1|0,0);C=o;o=0;if(C&1)break;if((a[f>>0]|0)<0)R=(c[B>>2]&2147483647)+-1|0;else R=10;o=0;na(65,p|0,R|0,0);C=o;o=0;if(C&1)break;C=(a[f>>0]|0)<0?c[p>>2]|0:p;c[q>>2]=C+F;S=C}else S=D;C=I+12|0;F=c[C>>2]|0;G=I+16|0;if((F|0)==(c[G>>2]|0)){o=0;L=Z(c[(c[I>>2]|0)+36>>2]|0,I|0)|0;T=o;o=0;if(T&1)break;else U=L}else U=KH(a[F>>0]|0)|0;o=0;F=ja(1,U&255|0,u|0,v|0,S|0,q|0,a[k>>0]|0,a[m>>0]|0,n|0,r|0,s|0,t|0,j|0)|0;L=o;o=0;if(L&1)break;if(F|0){O=S;P=N;Q=37;break}F=c[C>>2]|0;if((F|0)==(c[G>>2]|0)){o=0;Z(c[(c[I>>2]|0)+40>>2]|0,I|0)|0;G=o;o=0;if(G&1)break;else{D=S;w=I;E=J;continue}}else{c[C>>2]=F+1;KH(a[F>>0]|0)|0;D=S;w=I;E=J;continue}}b:do if((Q|0)==37){E=a[n+11>>0]|0;if(!((a[u>>0]|0)==0?1:((E<<24>>24<0?c[n+4>>2]|0:E&255)|0)==0)?(E=c[s>>2]|0,(E-r|0)<160):0){w=c[t>>2]|0;c[s>>2]=E+4;c[E>>2]=w}o=0;V=+X(3,O|0,c[q>>2]|0,g|0);w=o;o=0;if(!(w&1)?(h[i>>3]=V,o=0,oa(54,n|0,r|0,c[s>>2]|0,g|0),w=o,o=0,!(w&1)):0){if(I){w=c[I+12>>2]|0;if((w|0)==(c[I+16>>2]|0)){o=0;E=Z(c[(c[J>>2]|0)+36>>2]|0,I|0)|0;S=o;o=0;if(S&1)break;else W=E}else W=KH(a[w>>0]|0)|0;if(lI(W,JH()|0)|0){c[d>>2]=0;Y=1}else Y=0}else Y=1;do if(P){w=c[P+12>>2]|0;if((w|0)==(c[P+16>>2]|0)){o=0;E=Z(c[(c[P>>2]|0)+36>>2]|0,P|0)|0;S=o;o=0;if(S&1)break b;else _=E}else _=KH(a[w>>0]|0)|0;if(!(lI(_,JH()|0)|0))if(Y)break;else{Q=56;break}else{c[e>>2]=0;Q=54;break}}else Q=54;while(0);if((Q|0)==54?Y:0)Q=56;if((Q|0)==56)c[g>>2]=c[g>>2]|2;w=c[d>>2]|0;xR(p);xR(n);l=b;return w|0}}while(0);b=Pa()|0;x=b;y=z}xR(p);xR(n);$a(x|0);return 0}function qJ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0.0,h=0,i=0.0,j=0.0,k=0,m=0.0;e=l;l=l+16|0;f=e;if((a|0)==(b|0)){c[d>>2]=4;g=0.0}else{h=c[(LE()|0)>>2]|0;c[(LE()|0)>>2]=0;i=+eH(a,f,bJ()|0);a=c[(LE()|0)>>2]|0;if(!a)c[(LE()|0)>>2]=h;if((c[f>>2]|0)==(b|0))if((a|0)==34){j=i;k=6}else m=i;else{j=0.0;k=6}if((k|0)==6){c[d>>2]=4;m=j}g=m}l=e;return +g}function rJ(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0.0,W=0,Y=0,_=0;b=l;l=l+240|0;j=b+200|0;k=b+199|0;m=b+198|0;n=b+184|0;p=b+172|0;q=b+168|0;r=b+8|0;s=b+4|0;t=b;u=b+197|0;v=b+196|0;lJ(n,f,j,k,m);c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;f=0;while(1){if((f|0)==3)break;c[p+(f<<2)>>2]=0;f=f+1|0}f=p+11|0;if((a[f>>0]|0)<0)w=(c[p+8>>2]&2147483647)+-1|0;else w=10;o=0;na(65,p|0,w|0,0);w=o;o=0;if(w&1){w=Pa()|0;x=w;y=z}else{w=(a[f>>0]|0)<0?c[p>>2]|0:p;c[q>>2]=w;c[s>>2]=r;c[t>>2]=0;a[u>>0]=1;a[v>>0]=69;A=p+4|0;B=p+8|0;C=c[d>>2]|0;D=w;w=C;E=C;a:while(1){if(w){C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){o=0;F=Z(c[(c[w>>2]|0)+36>>2]|0,w|0)|0;G=o;o=0;if(G&1)break;else H=F}else H=KH(a[C>>0]|0)|0;if(lI(H,JH()|0)|0){c[d>>2]=0;I=0;J=0;K=1}else{I=w;J=E;K=0}}else{I=0;J=0;K=1}C=c[e>>2]|0;do if(C){F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){o=0;G=Z(c[(c[C>>2]|0)+36>>2]|0,C|0)|0;L=o;o=0;if(L&1)break a;else M=G}else M=KH(a[F>>0]|0)|0;if(!(lI(M,JH()|0)|0))if(K){N=C;break}else{O=D;P=C;Q=37;break a}else{c[e>>2]=0;Q=20;break}}else Q=20;while(0);if((Q|0)==20){Q=0;if(K){O=D;P=0;Q=37;break}else N=0}C=a[f>>0]|0;F=C<<24>>24<0?c[A>>2]|0:C&255;if((c[q>>2]|0)==(D+F|0)){o=0;na(65,p|0,F<<1|0,0);C=o;o=0;if(C&1)break;if((a[f>>0]|0)<0)R=(c[B>>2]&2147483647)+-1|0;else R=10;o=0;na(65,p|0,R|0,0);C=o;o=0;if(C&1)break;C=(a[f>>0]|0)<0?c[p>>2]|0:p;c[q>>2]=C+F;S=C}else S=D;C=I+12|0;F=c[C>>2]|0;G=I+16|0;if((F|0)==(c[G>>2]|0)){o=0;L=Z(c[(c[I>>2]|0)+36>>2]|0,I|0)|0;T=o;o=0;if(T&1)break;else U=L}else U=KH(a[F>>0]|0)|0;o=0;F=ja(1,U&255|0,u|0,v|0,S|0,q|0,a[k>>0]|0,a[m>>0]|0,n|0,r|0,s|0,t|0,j|0)|0;L=o;o=0;if(L&1)break;if(F|0){O=S;P=N;Q=37;break}F=c[C>>2]|0;if((F|0)==(c[G>>2]|0)){o=0;Z(c[(c[I>>2]|0)+40>>2]|0,I|0)|0;G=o;o=0;if(G&1)break;else{D=S;w=I;E=J;continue}}else{c[C>>2]=F+1;KH(a[F>>0]|0)|0;D=S;w=I;E=J;continue}}b:do if((Q|0)==37){E=a[n+11>>0]|0;if(!((a[u>>0]|0)==0?1:((E<<24>>24<0?c[n+4>>2]|0:E&255)|0)==0)?(E=c[s>>2]|0,(E-r|0)<160):0){w=c[t>>2]|0;c[s>>2]=E+4;c[E>>2]=w}o=0;V=+X(4,O|0,c[q>>2]|0,h|0);w=o;o=0;if(!(w&1)?(g[i>>2]=V,o=0,oa(54,n|0,r|0,c[s>>2]|0,h|0),w=o,o=0,!(w&1)):0){if(I){w=c[I+12>>2]|0;if((w|0)==(c[I+16>>2]|0)){o=0;E=Z(c[(c[J>>2]|0)+36>>2]|0,I|0)|0;S=o;o=0;if(S&1)break;else W=E}else W=KH(a[w>>0]|0)|0;if(lI(W,JH()|0)|0){c[d>>2]=0;Y=1}else Y=0}else Y=1;do if(P){w=c[P+12>>2]|0;if((w|0)==(c[P+16>>2]|0)){o=0;E=Z(c[(c[P>>2]|0)+36>>2]|0,P|0)|0;S=o;o=0;if(S&1)break b;else _=E}else _=KH(a[w>>0]|0)|0;if(!(lI(_,JH()|0)|0))if(Y)break;else{Q=56;break}else{c[e>>2]=0;Q=54;break}}else Q=54;while(0);if((Q|0)==54?Y:0)Q=56;if((Q|0)==56)c[h>>2]=c[h>>2]|2;w=c[d>>2]|0;xR(p);xR(n);l=b;return w|0}}while(0);b=Pa()|0;x=b;y=z}xR(p);xR(n);$a(x|0);return 0}function sJ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0.0,h=0,i=0.0,j=0.0,k=0,m=0.0;e=l;l=l+16|0;f=e;if((a|0)==(b|0)){c[d>>2]=4;g=0.0}else{h=c[(LE()|0)>>2]|0;c[(LE()|0)>>2]=0;i=+dH(a,f,bJ()|0);a=c[(LE()|0)>>2]|0;if(!a)c[(LE()|0)>>2]=h;if((c[f>>2]|0)==(b|0))if((a|0)==34){j=i;k=6}else m=i;else{j=0.0;k=6}if((k|0)==6){c[d>>2]=4;m=j}g=m}l=e;return +g}function tJ(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;b=l;l=l+224|0;i=b+198|0;j=b+196|0;k=b+184|0;m=b+172|0;n=b+168|0;p=b+8|0;q=b+4|0;r=b;s=uJ(f)|0;vJ(k,f,i,j);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;f=0;while(1){if((f|0)==3)break;c[m+(f<<2)>>2]=0;f=f+1|0}f=m+11|0;if((a[f>>0]|0)<0)t=(c[m+8>>2]&2147483647)+-1|0;else t=10;o=0;na(65,m|0,t|0,0);t=o;o=0;if(t&1){t=Pa()|0;u=t;v=z}else{t=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=t;c[q>>2]=p;c[r>>2]=0;w=m+4|0;x=m+8|0;y=c[d>>2]|0;A=t;t=y;B=y;a:while(1){if(t){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0)){o=0;C=Z(c[(c[t>>2]|0)+36>>2]|0,t|0)|0;D=o;o=0;if(D&1)break;else E=C}else E=KH(a[y>>0]|0)|0;if(lI(E,JH()|0)|0){c[d>>2]=0;F=0;G=0;H=1}else{F=t;G=B;H=0}}else{F=0;G=0;H=1}y=c[e>>2]|0;do if(y){C=c[y+12>>2]|0;if((C|0)==(c[y+16>>2]|0)){o=0;D=Z(c[(c[y>>2]|0)+36>>2]|0,y|0)|0;I=o;o=0;if(I&1)break a;else J=D}else J=KH(a[C>>0]|0)|0;if(!(lI(J,JH()|0)|0))if(H){K=y;break}else{L=A;M=y;N=37;break a}else{c[e>>2]=0;N=20;break}}else N=20;while(0);if((N|0)==20){N=0;if(H){L=A;M=0;N=37;break}else K=0}y=a[f>>0]|0;C=y<<24>>24<0?c[w>>2]|0:y&255;if((c[n>>2]|0)==(A+C|0)){o=0;na(65,m|0,C<<1|0,0);y=o;o=0;if(y&1)break;if((a[f>>0]|0)<0)O=(c[x>>2]&2147483647)+-1|0;else O=10;o=0;na(65,m|0,O|0,0);y=o;o=0;if(y&1)break;y=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=y+C;P=y}else P=A;y=F+12|0;C=c[y>>2]|0;D=F+16|0;if((C|0)==(c[D>>2]|0)){o=0;I=Z(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;Q=o;o=0;if(Q&1)break;else R=I}else R=KH(a[C>>0]|0)|0;o=0;C=ha(2,R&255|0,s|0,P|0,n|0,r|0,a[j>>0]|0,k|0,p|0,q|0,i|0)|0;I=o;o=0;if(I&1)break;if(C|0){L=P;M=K;N=37;break}C=c[y>>2]|0;if((C|0)==(c[D>>2]|0)){o=0;Z(c[(c[F>>2]|0)+40>>2]|0,F|0)|0;D=o;o=0;if(D&1)break;else{A=P;t=F;B=G;continue}}else{c[y>>2]=C+1;KH(a[C>>0]|0)|0;A=P;t=F;B=G;continue}}b:do if((N|0)==37){B=a[k+11>>0]|0;if((B<<24>>24<0?c[k+4>>2]|0:B&255)|0?(B=c[q>>2]|0,(B-p|0)<160):0){t=c[r>>2]|0;c[q>>2]=B+4;c[B>>2]=t}o=0;t=aa(53,L|0,c[n>>2]|0,g|0,s|0)|0;B=z;P=o;o=0;if(!(P&1)?(P=h,c[P>>2]=t,c[P+4>>2]=B,o=0,oa(54,k|0,p|0,c[q>>2]|0,g|0),B=o,o=0,!(B&1)):0){if(F){B=c[F+12>>2]|0;if((B|0)==(c[F+16>>2]|0)){o=0;P=Z(c[(c[G>>2]|0)+36>>2]|0,F|0)|0;t=o;o=0;if(t&1)break;else S=P}else S=KH(a[B>>0]|0)|0;if(lI(S,JH()|0)|0){c[d>>2]=0;T=1}else T=0}else T=1;do if(M){B=c[M+12>>2]|0;if((B|0)==(c[M+16>>2]|0)){o=0;P=Z(c[(c[M>>2]|0)+36>>2]|0,M|0)|0;t=o;o=0;if(t&1)break b;else U=P}else U=KH(a[B>>0]|0)|0;if(!(lI(U,JH()|0)|0))if(T)break;else{N=56;break}else{c[e>>2]=0;N=54;break}}else N=54;while(0);if((N|0)==54?T:0)N=56;if((N|0)==56)c[g>>2]=c[g>>2]|2;B=c[d>>2]|0;xR(m);xR(k);l=b;return B|0}}while(0);b=Pa()|0;u=b;v=z}xR(m);xR(k);$a(u|0);return 0}function uJ(a){a=a|0;var b=0;switch(c[a+4>>2]&74){case 64:{b=8;break}case 8:{b=16;break}case 0:{b=0;break}default:b=10}return b|0}function vJ(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=l;l=l+16|0;h=g;mI(h,d);o=0;d=_(93,h|0,102968)|0;i=o;o=0;if((((!(i&1)?(o=0,aa(c[(c[d>>2]|0)+32>>2]|0,d|0,89942,89968,e|0)|0,e=o,o=0,!(e&1)):0)?(o=0,e=_(93,h|0,102984)|0,d=o,o=0,!(d&1)):0)?(o=0,d=Z(c[(c[e>>2]|0)+16>>2]|0,e|0)|0,i=o,o=0,!(i&1)):0)?(a[f>>0]=d,o=0,ma(c[(c[e>>2]|0)+20>>2]|0,b|0,e|0),e=o,o=0,!(e&1)):0){$I(h);l=g;return}g=Pa()|0;$I(h);$a(g|0)}function wJ(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=l;l=l+16|0;h=g;do if((b|0)==(d|0)){c[e>>2]=4;i=0;j=0}else{if((a[b>>0]|0)==45){c[e>>2]=4;i=0;j=0;break}k=c[(LE()|0)>>2]|0;c[(LE()|0)>>2]=0;m=PE(b,h,f,bJ()|0)|0;n=z;o=c[(LE()|0)>>2]|0;if(!o)c[(LE()|0)>>2]=k;if((c[h>>2]|0)==(d|0))if((o|0)==34){p=-1;q=-1;r=8}else{s=m;t=n}else{p=0;q=0;r=8}if((r|0)==8){c[e>>2]=4;s=p;t=q}i=t;j=s}while(0);z=i;l=g;return j|0}function xJ(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;b=l;l=l+224|0;i=b+198|0;j=b+196|0;k=b+184|0;m=b+172|0;n=b+168|0;p=b+8|0;q=b+4|0;r=b;s=uJ(f)|0;vJ(k,f,i,j);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;f=0;while(1){if((f|0)==3)break;c[m+(f<<2)>>2]=0;f=f+1|0}f=m+11|0;if((a[f>>0]|0)<0)t=(c[m+8>>2]&2147483647)+-1|0;else t=10;o=0;na(65,m|0,t|0,0);t=o;o=0;if(t&1){t=Pa()|0;u=t;v=z}else{t=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=t;c[q>>2]=p;c[r>>2]=0;w=m+4|0;x=m+8|0;y=c[d>>2]|0;A=t;t=y;B=y;a:while(1){if(t){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0)){o=0;C=Z(c[(c[t>>2]|0)+36>>2]|0,t|0)|0;D=o;o=0;if(D&1)break;else E=C}else E=KH(a[y>>0]|0)|0;if(lI(E,JH()|0)|0){c[d>>2]=0;F=0;G=0;H=1}else{F=t;G=B;H=0}}else{F=0;G=0;H=1}y=c[e>>2]|0;do if(y){C=c[y+12>>2]|0;if((C|0)==(c[y+16>>2]|0)){o=0;D=Z(c[(c[y>>2]|0)+36>>2]|0,y|0)|0;I=o;o=0;if(I&1)break a;else J=D}else J=KH(a[C>>0]|0)|0;if(!(lI(J,JH()|0)|0))if(H){K=y;break}else{L=A;M=y;N=37;break a}else{c[e>>2]=0;N=20;break}}else N=20;while(0);if((N|0)==20){N=0;if(H){L=A;M=0;N=37;break}else K=0}y=a[f>>0]|0;C=y<<24>>24<0?c[w>>2]|0:y&255;if((c[n>>2]|0)==(A+C|0)){o=0;na(65,m|0,C<<1|0,0);y=o;o=0;if(y&1)break;if((a[f>>0]|0)<0)O=(c[x>>2]&2147483647)+-1|0;else O=10;o=0;na(65,m|0,O|0,0);y=o;o=0;if(y&1)break;y=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=y+C;P=y}else P=A;y=F+12|0;C=c[y>>2]|0;D=F+16|0;if((C|0)==(c[D>>2]|0)){o=0;I=Z(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;Q=o;o=0;if(Q&1)break;else R=I}else R=KH(a[C>>0]|0)|0;o=0;C=ha(2,R&255|0,s|0,P|0,n|0,r|0,a[j>>0]|0,k|0,p|0,q|0,i|0)|0;I=o;o=0;if(I&1)break;if(C|0){L=P;M=K;N=37;break}C=c[y>>2]|0;if((C|0)==(c[D>>2]|0)){o=0;Z(c[(c[F>>2]|0)+40>>2]|0,F|0)|0;D=o;o=0;if(D&1)break;else{A=P;t=F;B=G;continue}}else{c[y>>2]=C+1;KH(a[C>>0]|0)|0;A=P;t=F;B=G;continue}}b:do if((N|0)==37){B=a[k+11>>0]|0;if((B<<24>>24<0?c[k+4>>2]|0:B&255)|0?(B=c[q>>2]|0,(B-p|0)<160):0){t=c[r>>2]|0;c[q>>2]=B+4;c[B>>2]=t}o=0;t=aa(54,L|0,c[n>>2]|0,g|0,s|0)|0;B=o;o=0;if(!(B&1)?(c[h>>2]=t,o=0,oa(54,k|0,p|0,c[q>>2]|0,g|0),t=o,o=0,!(t&1)):0){if(F){t=c[F+12>>2]|0;if((t|0)==(c[F+16>>2]|0)){o=0;B=Z(c[(c[G>>2]|0)+36>>2]|0,F|0)|0;P=o;o=0;if(P&1)break;else S=B}else S=KH(a[t>>0]|0)|0;if(lI(S,JH()|0)|0){c[d>>2]=0;T=1}else T=0}else T=1;do if(M){t=c[M+12>>2]|0;if((t|0)==(c[M+16>>2]|0)){o=0;B=Z(c[(c[M>>2]|0)+36>>2]|0,M|0)|0;P=o;o=0;if(P&1)break b;else U=B}else U=KH(a[t>>0]|0)|0;if(!(lI(U,JH()|0)|0))if(T)break;else{N=56;break}else{c[e>>2]=0;N=54;break}}else N=54;while(0);if((N|0)==54?T:0)N=56;if((N|0)==56)c[g>>2]=c[g>>2]|2;t=c[d>>2]|0;xR(m);xR(k);l=b;return t|0}}while(0);b=Pa()|0;u=b;v=z}xR(m);xR(k);$a(u|0);return 0}function yJ(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0;g=l;l=l+16|0;h=g;do if((b|0)==(d|0)){c[e>>2]=4;i=0}else{if((a[b>>0]|0)==45){c[e>>2]=4;i=0;break}j=c[(LE()|0)>>2]|0;c[(LE()|0)>>2]=0;k=PE(b,h,f,bJ()|0)|0;m=z;n=c[(LE()|0)>>2]|0;if(!n)c[(LE()|0)>>2]=j;do if((c[h>>2]|0)==(d|0))if(m>>>0>0|(m|0)==0&k>>>0>4294967295|(n|0)==34){c[e>>2]=4;o=-1;break}else{o=k;break}else{c[e>>2]=4;o=0}while(0);i=o}while(0);l=g;return i|0}function zJ(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;b=l;l=l+224|0;i=b+198|0;j=b+196|0;k=b+184|0;m=b+172|0;n=b+168|0;p=b+8|0;q=b+4|0;r=b;s=uJ(f)|0;vJ(k,f,i,j);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;f=0;while(1){if((f|0)==3)break;c[m+(f<<2)>>2]=0;f=f+1|0}f=m+11|0;if((a[f>>0]|0)<0)t=(c[m+8>>2]&2147483647)+-1|0;else t=10;o=0;na(65,m|0,t|0,0);t=o;o=0;if(t&1){t=Pa()|0;u=t;v=z}else{t=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=t;c[q>>2]=p;c[r>>2]=0;w=m+4|0;x=m+8|0;y=c[d>>2]|0;A=t;t=y;B=y;a:while(1){if(t){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0)){o=0;C=Z(c[(c[t>>2]|0)+36>>2]|0,t|0)|0;D=o;o=0;if(D&1)break;else E=C}else E=KH(a[y>>0]|0)|0;if(lI(E,JH()|0)|0){c[d>>2]=0;F=0;G=0;H=1}else{F=t;G=B;H=0}}else{F=0;G=0;H=1}y=c[e>>2]|0;do if(y){C=c[y+12>>2]|0;if((C|0)==(c[y+16>>2]|0)){o=0;D=Z(c[(c[y>>2]|0)+36>>2]|0,y|0)|0;I=o;o=0;if(I&1)break a;else J=D}else J=KH(a[C>>0]|0)|0;if(!(lI(J,JH()|0)|0))if(H){K=y;break}else{L=A;M=y;N=37;break a}else{c[e>>2]=0;N=20;break}}else N=20;while(0);if((N|0)==20){N=0;if(H){L=A;M=0;N=37;break}else K=0}y=a[f>>0]|0;C=y<<24>>24<0?c[w>>2]|0:y&255;if((c[n>>2]|0)==(A+C|0)){o=0;na(65,m|0,C<<1|0,0);y=o;o=0;if(y&1)break;if((a[f>>0]|0)<0)O=(c[x>>2]&2147483647)+-1|0;else O=10;o=0;na(65,m|0,O|0,0);y=o;o=0;if(y&1)break;y=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=y+C;P=y}else P=A;y=F+12|0;C=c[y>>2]|0;D=F+16|0;if((C|0)==(c[D>>2]|0)){o=0;I=Z(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;Q=o;o=0;if(Q&1)break;else R=I}else R=KH(a[C>>0]|0)|0;o=0;C=ha(2,R&255|0,s|0,P|0,n|0,r|0,a[j>>0]|0,k|0,p|0,q|0,i|0)|0;I=o;o=0;if(I&1)break;if(C|0){L=P;M=K;N=37;break}C=c[y>>2]|0;if((C|0)==(c[D>>2]|0)){o=0;Z(c[(c[F>>2]|0)+40>>2]|0,F|0)|0;D=o;o=0;if(D&1)break;else{A=P;t=F;B=G;continue}}else{c[y>>2]=C+1;KH(a[C>>0]|0)|0;A=P;t=F;B=G;continue}}b:do if((N|0)==37){B=a[k+11>>0]|0;if((B<<24>>24<0?c[k+4>>2]|0:B&255)|0?(B=c[q>>2]|0,(B-p|0)<160):0){t=c[r>>2]|0;c[q>>2]=B+4;c[B>>2]=t}o=0;t=aa(55,L|0,c[n>>2]|0,g|0,s|0)|0;B=o;o=0;if(!(B&1)?(c[h>>2]=t,o=0,oa(54,k|0,p|0,c[q>>2]|0,g|0),t=o,o=0,!(t&1)):0){if(F){t=c[F+12>>2]|0;if((t|0)==(c[F+16>>2]|0)){o=0;B=Z(c[(c[G>>2]|0)+36>>2]|0,F|0)|0;P=o;o=0;if(P&1)break;else S=B}else S=KH(a[t>>0]|0)|0;if(lI(S,JH()|0)|0){c[d>>2]=0;T=1}else T=0}else T=1;do if(M){t=c[M+12>>2]|0;if((t|0)==(c[M+16>>2]|0)){o=0;B=Z(c[(c[M>>2]|0)+36>>2]|0,M|0)|0;P=o;o=0;if(P&1)break b;else U=B}else U=KH(a[t>>0]|0)|0;if(!(lI(U,JH()|0)|0))if(T)break;else{N=56;break}else{c[e>>2]=0;N=54;break}}else N=54;while(0);if((N|0)==54?T:0)N=56;if((N|0)==56)c[g>>2]=c[g>>2]|2;t=c[d>>2]|0;xR(m);xR(k);l=b;return t|0}}while(0);b=Pa()|0;u=b;v=z}xR(m);xR(k);$a(u|0);return 0}function AJ(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0;g=l;l=l+16|0;h=g;do if((b|0)==(d|0)){c[e>>2]=4;i=0}else{if((a[b>>0]|0)==45){c[e>>2]=4;i=0;break}j=c[(LE()|0)>>2]|0;c[(LE()|0)>>2]=0;k=PE(b,h,f,bJ()|0)|0;m=z;n=c[(LE()|0)>>2]|0;if(!n)c[(LE()|0)>>2]=j;do if((c[h>>2]|0)==(d|0))if(m>>>0>0|(m|0)==0&k>>>0>4294967295|(n|0)==34){c[e>>2]=4;o=-1;break}else{o=k;break}else{c[e>>2]=4;o=0}while(0);i=o}while(0);l=g;return i|0}function BJ(d,e,f,g,h,i){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=l;l=l+224|0;j=d+198|0;k=d+196|0;m=d+184|0;n=d+172|0;p=d+168|0;q=d+8|0;r=d+4|0;s=d;t=uJ(g)|0;vJ(m,g,j,k);c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;g=0;while(1){if((g|0)==3)break;c[n+(g<<2)>>2]=0;g=g+1|0}g=n+11|0;if((a[g>>0]|0)<0)u=(c[n+8>>2]&2147483647)+-1|0;else u=10;o=0;na(65,n|0,u|0,0);u=o;o=0;if(u&1){u=Pa()|0;v=u;w=z}else{u=(a[g>>0]|0)<0?c[n>>2]|0:n;c[p>>2]=u;c[r>>2]=q;c[s>>2]=0;x=n+4|0;y=n+8|0;A=c[e>>2]|0;B=u;u=A;C=A;a:while(1){if(u){A=c[u+12>>2]|0;if((A|0)==(c[u+16>>2]|0)){o=0;D=Z(c[(c[u>>2]|0)+36>>2]|0,u|0)|0;E=o;o=0;if(E&1)break;else F=D}else F=KH(a[A>>0]|0)|0;if(lI(F,JH()|0)|0){c[e>>2]=0;G=0;H=0;I=1}else{G=u;H=C;I=0}}else{G=0;H=0;I=1}A=c[f>>2]|0;do if(A){D=c[A+12>>2]|0;if((D|0)==(c[A+16>>2]|0)){o=0;E=Z(c[(c[A>>2]|0)+36>>2]|0,A|0)|0;J=o;o=0;if(J&1)break a;else K=E}else K=KH(a[D>>0]|0)|0;if(!(lI(K,JH()|0)|0))if(I){L=A;break}else{M=B;N=A;O=37;break a}else{c[f>>2]=0;O=20;break}}else O=20;while(0);if((O|0)==20){O=0;if(I){M=B;N=0;O=37;break}else L=0}A=a[g>>0]|0;D=A<<24>>24<0?c[x>>2]|0:A&255;if((c[p>>2]|0)==(B+D|0)){o=0;na(65,n|0,D<<1|0,0);A=o;o=0;if(A&1)break;if((a[g>>0]|0)<0)P=(c[y>>2]&2147483647)+-1|0;else P=10;o=0;na(65,n|0,P|0,0);A=o;o=0;if(A&1)break;A=(a[g>>0]|0)<0?c[n>>2]|0:n;c[p>>2]=A+D;Q=A}else Q=B;A=G+12|0;D=c[A>>2]|0;E=G+16|0;if((D|0)==(c[E>>2]|0)){o=0;J=Z(c[(c[G>>2]|0)+36>>2]|0,G|0)|0;R=o;o=0;if(R&1)break;else S=J}else S=KH(a[D>>0]|0)|0;o=0;D=ha(2,S&255|0,t|0,Q|0,p|0,s|0,a[k>>0]|0,m|0,q|0,r|0,j|0)|0;J=o;o=0;if(J&1)break;if(D|0){M=Q;N=L;O=37;break}D=c[A>>2]|0;if((D|0)==(c[E>>2]|0)){o=0;Z(c[(c[G>>2]|0)+40>>2]|0,G|0)|0;E=o;o=0;if(E&1)break;else{B=Q;u=G;C=H;continue}}else{c[A>>2]=D+1;KH(a[D>>0]|0)|0;B=Q;u=G;C=H;continue}}b:do if((O|0)==37){C=a[m+11>>0]|0;if((C<<24>>24<0?c[m+4>>2]|0:C&255)|0?(C=c[r>>2]|0,(C-q|0)<160):0){u=c[s>>2]|0;c[r>>2]=C+4;c[C>>2]=u}o=0;u=aa(56,M|0,c[p>>2]|0,h|0,t|0)|0;C=o;o=0;if(!(C&1)?(b[i>>1]=u,o=0,oa(54,m|0,q|0,c[r>>2]|0,h|0),u=o,o=0,!(u&1)):0){if(G){u=c[G+12>>2]|0;if((u|0)==(c[G+16>>2]|0)){o=0;C=Z(c[(c[H>>2]|0)+36>>2]|0,G|0)|0;Q=o;o=0;if(Q&1)break;else T=C}else T=KH(a[u>>0]|0)|0;if(lI(T,JH()|0)|0){c[e>>2]=0;U=1}else U=0}else U=1;do if(N){u=c[N+12>>2]|0;if((u|0)==(c[N+16>>2]|0)){o=0;C=Z(c[(c[N>>2]|0)+36>>2]|0,N|0)|0;Q=o;o=0;if(Q&1)break b;else V=C}else V=KH(a[u>>0]|0)|0;if(!(lI(V,JH()|0)|0))if(U)break;else{O=56;break}else{c[f>>2]=0;O=54;break}}else O=54;while(0);if((O|0)==54?U:0)O=56;if((O|0)==56)c[h>>2]=c[h>>2]|2;u=c[e>>2]|0;xR(n);xR(m);l=d;return u|0}}while(0);d=Pa()|0;v=d;w=z}xR(n);xR(m);$a(v|0);return 0}function CJ(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0;g=l;l=l+16|0;h=g;do if((b|0)==(d|0)){c[e>>2]=4;i=0}else{if((a[b>>0]|0)==45){c[e>>2]=4;i=0;break}j=c[(LE()|0)>>2]|0;c[(LE()|0)>>2]=0;k=PE(b,h,f,bJ()|0)|0;m=z;n=c[(LE()|0)>>2]|0;if(!n)c[(LE()|0)>>2]=j;do if((c[h>>2]|0)==(d|0))if(m>>>0>0|(m|0)==0&k>>>0>65535|(n|0)==34){c[e>>2]=4;o=-1;break}else{o=k&65535;break}else{c[e>>2]=4;o=0}while(0);i=o}while(0);l=g;return i|0}function DJ(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;b=l;l=l+224|0;i=b+198|0;j=b+196|0;k=b+184|0;m=b+172|0;n=b+168|0;p=b+8|0;q=b+4|0;r=b;s=uJ(f)|0;vJ(k,f,i,j);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;f=0;while(1){if((f|0)==3)break;c[m+(f<<2)>>2]=0;f=f+1|0}f=m+11|0;if((a[f>>0]|0)<0)t=(c[m+8>>2]&2147483647)+-1|0;else t=10;o=0;na(65,m|0,t|0,0);t=o;o=0;if(t&1){t=Pa()|0;u=t;v=z}else{t=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=t;c[q>>2]=p;c[r>>2]=0;w=m+4|0;x=m+8|0;y=c[d>>2]|0;A=t;t=y;B=y;a:while(1){if(t){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0)){o=0;C=Z(c[(c[t>>2]|0)+36>>2]|0,t|0)|0;D=o;o=0;if(D&1)break;else E=C}else E=KH(a[y>>0]|0)|0;if(lI(E,JH()|0)|0){c[d>>2]=0;F=0;G=0;H=1}else{F=t;G=B;H=0}}else{F=0;G=0;H=1}y=c[e>>2]|0;do if(y){C=c[y+12>>2]|0;if((C|0)==(c[y+16>>2]|0)){o=0;D=Z(c[(c[y>>2]|0)+36>>2]|0,y|0)|0;I=o;o=0;if(I&1)break a;else J=D}else J=KH(a[C>>0]|0)|0;if(!(lI(J,JH()|0)|0))if(H){K=y;break}else{L=A;M=y;N=37;break a}else{c[e>>2]=0;N=20;break}}else N=20;while(0);if((N|0)==20){N=0;if(H){L=A;M=0;N=37;break}else K=0}y=a[f>>0]|0;C=y<<24>>24<0?c[w>>2]|0:y&255;if((c[n>>2]|0)==(A+C|0)){o=0;na(65,m|0,C<<1|0,0);y=o;o=0;if(y&1)break;if((a[f>>0]|0)<0)O=(c[x>>2]&2147483647)+-1|0;else O=10;o=0;na(65,m|0,O|0,0);y=o;o=0;if(y&1)break;y=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=y+C;P=y}else P=A;y=F+12|0;C=c[y>>2]|0;D=F+16|0;if((C|0)==(c[D>>2]|0)){o=0;I=Z(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;Q=o;o=0;if(Q&1)break;else R=I}else R=KH(a[C>>0]|0)|0;o=0;C=ha(2,R&255|0,s|0,P|0,n|0,r|0,a[j>>0]|0,k|0,p|0,q|0,i|0)|0;I=o;o=0;if(I&1)break;if(C|0){L=P;M=K;N=37;break}C=c[y>>2]|0;if((C|0)==(c[D>>2]|0)){o=0;Z(c[(c[F>>2]|0)+40>>2]|0,F|0)|0;D=o;o=0;if(D&1)break;else{A=P;t=F;B=G;continue}}else{c[y>>2]=C+1;KH(a[C>>0]|0)|0;A=P;t=F;B=G;continue}}b:do if((N|0)==37){B=a[k+11>>0]|0;if((B<<24>>24<0?c[k+4>>2]|0:B&255)|0?(B=c[q>>2]|0,(B-p|0)<160):0){t=c[r>>2]|0;c[q>>2]=B+4;c[B>>2]=t}o=0;t=aa(57,L|0,c[n>>2]|0,g|0,s|0)|0;B=z;P=o;o=0;if(!(P&1)?(P=h,c[P>>2]=t,c[P+4>>2]=B,o=0,oa(54,k|0,p|0,c[q>>2]|0,g|0),B=o,o=0,!(B&1)):0){if(F){B=c[F+12>>2]|0;if((B|0)==(c[F+16>>2]|0)){o=0;P=Z(c[(c[G>>2]|0)+36>>2]|0,F|0)|0;t=o;o=0;if(t&1)break;else S=P}else S=KH(a[B>>0]|0)|0;if(lI(S,JH()|0)|0){c[d>>2]=0;T=1}else T=0}else T=1;do if(M){B=c[M+12>>2]|0;if((B|0)==(c[M+16>>2]|0)){o=0;P=Z(c[(c[M>>2]|0)+36>>2]|0,M|0)|0;t=o;o=0;if(t&1)break b;else U=P}else U=KH(a[B>>0]|0)|0;if(!(lI(U,JH()|0)|0))if(T)break;else{N=56;break}else{c[e>>2]=0;N=54;break}}else N=54;while(0);if((N|0)==54?T:0)N=56;if((N|0)==56)c[g>>2]=c[g>>2]|2;B=c[d>>2]|0;xR(m);xR(k);l=b;return B|0}}while(0);b=Pa()|0;u=b;v=z}xR(m);xR(k);$a(u|0);return 0}function EJ(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;f=l;l=l+16|0;g=f;if((a|0)==(b|0)){c[d>>2]=4;h=0;i=0}else{j=c[(LE()|0)>>2]|0;c[(LE()|0)>>2]=0;k=YE(a,g,e,bJ()|0)|0;e=z;a=c[(LE()|0)>>2]|0;if(!a)c[(LE()|0)>>2]=j;if((c[g>>2]|0)==(b|0))if((a|0)==34){c[d>>2]=4;a=(e|0)>0|(e|0)==0&k>>>0>0;m=a?-1:0;n=a?2147483647:-2147483648}else{m=k;n=e}else{c[d>>2]=4;m=0;n=0}h=n;i=m}z=h;l=f;return i|0}\nfunction FJ(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;b=l;l=l+224|0;i=b+198|0;j=b+196|0;k=b+184|0;m=b+172|0;n=b+168|0;p=b+8|0;q=b+4|0;r=b;s=uJ(f)|0;vJ(k,f,i,j);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;f=0;while(1){if((f|0)==3)break;c[m+(f<<2)>>2]=0;f=f+1|0}f=m+11|0;if((a[f>>0]|0)<0)t=(c[m+8>>2]&2147483647)+-1|0;else t=10;o=0;na(65,m|0,t|0,0);t=o;o=0;if(t&1){t=Pa()|0;u=t;v=z}else{t=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=t;c[q>>2]=p;c[r>>2]=0;w=m+4|0;x=m+8|0;y=c[d>>2]|0;A=t;t=y;B=y;a:while(1){if(t){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0)){o=0;C=Z(c[(c[t>>2]|0)+36>>2]|0,t|0)|0;D=o;o=0;if(D&1)break;else E=C}else E=KH(a[y>>0]|0)|0;if(lI(E,JH()|0)|0){c[d>>2]=0;F=0;G=0;H=1}else{F=t;G=B;H=0}}else{F=0;G=0;H=1}y=c[e>>2]|0;do if(y){C=c[y+12>>2]|0;if((C|0)==(c[y+16>>2]|0)){o=0;D=Z(c[(c[y>>2]|0)+36>>2]|0,y|0)|0;I=o;o=0;if(I&1)break a;else J=D}else J=KH(a[C>>0]|0)|0;if(!(lI(J,JH()|0)|0))if(H){K=y;break}else{L=A;M=y;N=37;break a}else{c[e>>2]=0;N=20;break}}else N=20;while(0);if((N|0)==20){N=0;if(H){L=A;M=0;N=37;break}else K=0}y=a[f>>0]|0;C=y<<24>>24<0?c[w>>2]|0:y&255;if((c[n>>2]|0)==(A+C|0)){o=0;na(65,m|0,C<<1|0,0);y=o;o=0;if(y&1)break;if((a[f>>0]|0)<0)O=(c[x>>2]&2147483647)+-1|0;else O=10;o=0;na(65,m|0,O|0,0);y=o;o=0;if(y&1)break;y=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=y+C;P=y}else P=A;y=F+12|0;C=c[y>>2]|0;D=F+16|0;if((C|0)==(c[D>>2]|0)){o=0;I=Z(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;Q=o;o=0;if(Q&1)break;else R=I}else R=KH(a[C>>0]|0)|0;o=0;C=ha(2,R&255|0,s|0,P|0,n|0,r|0,a[j>>0]|0,k|0,p|0,q|0,i|0)|0;I=o;o=0;if(I&1)break;if(C|0){L=P;M=K;N=37;break}C=c[y>>2]|0;if((C|0)==(c[D>>2]|0)){o=0;Z(c[(c[F>>2]|0)+40>>2]|0,F|0)|0;D=o;o=0;if(D&1)break;else{A=P;t=F;B=G;continue}}else{c[y>>2]=C+1;KH(a[C>>0]|0)|0;A=P;t=F;B=G;continue}}b:do if((N|0)==37){B=a[k+11>>0]|0;if((B<<24>>24<0?c[k+4>>2]|0:B&255)|0?(B=c[q>>2]|0,(B-p|0)<160):0){t=c[r>>2]|0;c[q>>2]=B+4;c[B>>2]=t}o=0;t=aa(58,L|0,c[n>>2]|0,g|0,s|0)|0;B=o;o=0;if(!(B&1)?(c[h>>2]=t,o=0,oa(54,k|0,p|0,c[q>>2]|0,g|0),t=o,o=0,!(t&1)):0){if(F){t=c[F+12>>2]|0;if((t|0)==(c[F+16>>2]|0)){o=0;B=Z(c[(c[G>>2]|0)+36>>2]|0,F|0)|0;P=o;o=0;if(P&1)break;else S=B}else S=KH(a[t>>0]|0)|0;if(lI(S,JH()|0)|0){c[d>>2]=0;T=1}else T=0}else T=1;do if(M){t=c[M+12>>2]|0;if((t|0)==(c[M+16>>2]|0)){o=0;B=Z(c[(c[M>>2]|0)+36>>2]|0,M|0)|0;P=o;o=0;if(P&1)break b;else U=B}else U=KH(a[t>>0]|0)|0;if(!(lI(U,JH()|0)|0))if(T)break;else{N=56;break}else{c[e>>2]=0;N=54;break}}else N=54;while(0);if((N|0)==54?T:0)N=56;if((N|0)==56)c[g>>2]=c[g>>2]|2;t=c[d>>2]|0;xR(m);xR(k);l=b;return t|0}}while(0);b=Pa()|0;u=b;v=z}xR(m);xR(k);$a(u|0);return 0}function GJ(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=l;l=l+16|0;g=f;if((a|0)==(b|0)){c[d>>2]=4;h=0}else{i=c[(LE()|0)>>2]|0;c[(LE()|0)>>2]=0;j=YE(a,g,e,bJ()|0)|0;e=z;a=c[(LE()|0)>>2]|0;if(!a)c[(LE()|0)>>2]=i;a:do if((c[g>>2]|0)==(b|0)){do if((a|0)==34){c[d>>2]=4;if((e|0)>0|(e|0)==0&j>>>0>0){k=2147483647;break a}}else{if((e|0)<-1|(e|0)==-1&j>>>0<2147483648){c[d>>2]=4;break}if((e|0)>0|(e|0)==0&j>>>0>2147483647){c[d>>2]=4;k=2147483647;break a}else{k=j;break a}}while(0);k=-2147483648}else{c[d>>2]=4;k=0}while(0);h=k}l=f;return h|0}function HJ(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,$=0,aa=0,ba=0,ca=0,da=0;j=l;l=l+112|0;k=j;m=(f-e|0)/12|0;do if(m>>>0>100){n=BE(m)|0;if(!n){o=0;ka(4);o=0;p=Pa()|0;q=p;r=z;break}else{s=n;t=n;u=5;break}}else{s=k;t=0;u=5}while(0);if((u|0)==5){k=e;n=s;p=0;v=m;while(1){if((k|0)==(f|0))break;m=a[k+11>>0]|0;if(m<<24>>24<0)w=c[k+4>>2]|0;else w=m&255;if(!w){a[n>>0]=2;x=p+1|0;y=v+-1|0}else{a[n>>0]=1;x=p;y=v}k=k+12|0;n=n+1|0;p=x;v=y}y=0;x=p;p=v;a:while(1){v=c[b>>2]|0;do if(v){n=c[v+12>>2]|0;if((n|0)==(c[v+16>>2]|0)){o=0;k=Z(c[(c[v>>2]|0)+36>>2]|0,v|0)|0;w=o;o=0;if(w&1)break a;else A=k}else A=KH(a[n>>0]|0)|0;if(lI(A,JH()|0)|0){c[b>>2]=0;B=1;break}else{B=(c[b>>2]|0)==0;break}}else B=1;while(0);v=c[d>>2]|0;if(v){n=c[v+12>>2]|0;if((n|0)==(c[v+16>>2]|0)){o=0;k=Z(c[(c[v>>2]|0)+36>>2]|0,v|0)|0;w=o;o=0;if(w&1)break;else C=k}else C=KH(a[n>>0]|0)|0;if(lI(C,JH()|0)|0){c[d>>2]=0;D=0;E=1}else{D=v;E=0}}else{D=0;E=1}F=c[b>>2]|0;if(!((p|0)!=0&(B^E))){u=29;break}v=c[F+12>>2]|0;if((v|0)==(c[F+16>>2]|0)){o=0;n=Z(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;k=o;o=0;if(k&1)break;else G=n}else G=KH(a[v>>0]|0)|0;v=G&255;if(!i){o=0;n=_(c[(c[g>>2]|0)+12>>2]|0,g|0,v|0)|0;k=o;o=0;if(k&1)break;else H=n}else H=v;v=y+1|0;n=e;k=0;w=s;m=x;I=p;while(1){if((n|0)==(f|0))break;do if((a[w>>0]|0)==1){J=n+11|0;if((a[J>>0]|0)<0)K=c[n>>2]|0;else K=n;L=a[K+y>>0]|0;if(!i){o=0;M=_(c[(c[g>>2]|0)+12>>2]|0,g|0,L|0)|0;N=o;o=0;if(N&1)break a;else O=M}else O=L;if(H<<24>>24!=O<<24>>24){a[w>>0]=0;P=k;Q=m;R=I+-1|0;break}L=a[J>>0]|0;if(L<<24>>24<0)S=c[n+4>>2]|0;else S=L&255;if((S|0)==(v|0)){a[w>>0]=2;P=1;Q=m+1|0;R=I+-1|0}else{P=1;Q=m;R=I}}else{P=k;Q=m;R=I}while(0);n=n+12|0;k=P;w=w+1|0;m=Q;I=R}if(!k){y=v;x=m;p=I;continue}w=c[b>>2]|0;n=w+12|0;L=c[n>>2]|0;if((L|0)==(c[w+16>>2]|0)){o=0;Z(c[(c[w>>2]|0)+40>>2]|0,w|0)|0;w=o;o=0;if(w&1)break}else{c[n>>2]=L+1;KH(a[L>>0]|0)|0}if((m+I|0)>>>0>1){T=e;U=s;V=m}else{y=v;x=m;p=I;continue}while(1){if((T|0)==(f|0)){y=v;x=V;p=I;continue a}if((a[U>>0]|0)==2){L=a[T+11>>0]|0;if(L<<24>>24<0)W=c[T+4>>2]|0;else W=L&255;if((W|0)!=(v|0)){a[U>>0]=0;X=V+-1|0}else X=V}else X=V;T=T+12|0;U=U+1|0;V=X}}b:do if((u|0)==29){do if(F){X=c[F+12>>2]|0;if((X|0)==(c[F+16>>2]|0)){o=0;V=Z(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;U=o;o=0;if(U&1)break b;else Y=V}else Y=KH(a[X>>0]|0)|0;if(lI(Y,JH()|0)|0){c[b>>2]=0;$=1;break}else{$=(c[b>>2]|0)==0;break}}else $=1;while(0);do if(D){X=c[D+12>>2]|0;if((X|0)==(c[D+16>>2]|0)){o=0;V=Z(c[(c[D>>2]|0)+36>>2]|0,D|0)|0;U=o;o=0;if(U&1)break b;else aa=V}else aa=KH(a[X>>0]|0)|0;if(!(lI(aa,JH()|0)|0))if($){ba=e;ca=s;break}else{u=78;break}else{c[d>>2]=0;u=76;break}}else u=76;while(0);if((u|0)==76)if($)u=78;else{ba=e;ca=s}if((u|0)==78){c[h>>2]=c[h>>2]|2;ba=e;ca=s}while(1){if((ba|0)==(f|0)){u=82;break}if((a[ca>>0]|0)==2){da=ba;break}ba=ba+12|0;ca=ca+1|0}if((u|0)==82){c[h>>2]=c[h>>2]|4;da=f}if(t|0)CE(t);l=j;return da|0}while(0);da=Pa()|0;j=z;if(!t){q=da;r=j}else{CE(t);q=da;r=j}}$a(q|0);return 0}function IJ(a){a=a|0;GI(a);return}function JJ(a){a=a|0;GI(a);mR(a);return}function KJ(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0;i=l;l=l+48|0;j=i+40|0;k=i+16|0;m=i+8|0;n=i+12|0;p=i+4|0;q=i;a:do if(!(c[f+4>>2]&1)){c[m>>2]=-1;r=c[(c[b>>2]|0)+16>>2]|0;c[n>>2]=c[d>>2];c[p>>2]=c[e>>2];c[k>>2]=c[n>>2];c[j>>2]=c[p>>2];c[d>>2]=kd[r&63](b,k,j,f,g,m)|0;switch(c[m>>2]|0){case 0:{a[h>>0]=0;break}case 1:{a[h>>0]=1;break}default:{a[h>>0]=1;c[g>>2]=4}}s=c[d>>2]|0}else{mI(j,f);o=0;r=_(93,j|0,103e3)|0;t=o;o=0;do if(t&1){u=Pa()|0;v=z;$I(j);w=u;x=v}else{$I(j);mI(j,f);o=0;v=_(93,j|0,103008)|0;u=o;o=0;if(u&1){u=Pa()|0;y=z;$I(j);w=u;x=y;break}$I(j);o=0;ma(c[(c[v>>2]|0)+24>>2]|0,k|0,v|0);y=o;o=0;b:do if(y&1){u=Pa()|0;A=u;B=z}else{o=0;ma(c[(c[v>>2]|0)+28>>2]|0,k+12|0,v|0);u=o;o=0;if(u&1){u=Pa()|0;C=z;KR(k);A=u;B=C;break}c[q>>2]=c[e>>2];C=k+24|0;o=0;c[j>>2]=c[q>>2];u=fa(10,d|0,j|0,k|0,C|0,r|0,g|0,1)|0;D=o;o=0;if(D&1){D=Pa()|0;E=z;F=C;while(1){F=F+-12|0;KR(F);if((F|0)==(k|0)){A=D;B=E;break b}}}a[h>>0]=(u|0)==(k|0)&1;E=c[d>>2]|0;D=C;do{D=D+-12|0;KR(D)}while((D|0)!=(k|0));s=E;break a}while(0);w=A;x=B}while(0);$a(w|0)}while(0);l=i;return s|0}function LJ(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=fK(a,j,i,e,f,g)|0;l=h;return m|0}function MJ(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=eK(a,j,i,e,f,g)|0;l=h;return m|0}function NJ(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=dK(a,j,i,e,f,g)|0;l=h;return m|0}function OJ(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=cK(a,j,i,e,f,g)|0;l=h;return m|0}function PJ(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=bK(a,j,i,e,f,g)|0;l=h;return m|0}function QJ(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=$J(a,j,i,e,f,g)|0;l=h;return m|0}function RJ(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=_J(a,j,i,e,f,g)|0;l=h;return m|0}function SJ(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=ZJ(a,j,i,e,f,g)|0;l=h;return m|0}function TJ(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=WJ(a,j,i,e,f,g)|0;l=h;return m|0}function UJ(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,$=0,ba=0;b=l;l=l+320|0;i=b;j=b+208|0;k=b+192|0;m=b+180|0;n=b+176|0;p=b+16|0;q=b+8|0;r=b+4|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;s=0;while(1){if((s|0)==3)break;c[k+(s<<2)>>2]=0;s=s+1|0}o=0;ma(132,m|0,f|0);f=o;o=0;do if(f&1){s=Pa()|0;t=s;u=z;v=36}else{o=0;s=_(93,m|0,103e3)|0;w=o;o=0;if(!(w&1)?(o=0,aa(c[(c[s>>2]|0)+48>>2]|0,s|0,89942,89968,j|0)|0,s=o,o=0,!(s&1)):0){$I(m);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;s=0;while(1){if((s|0)==3)break;c[m+(s<<2)>>2]=0;s=s+1|0}s=m+11|0;if((a[s>>0]|0)<0)x=(c[m+8>>2]&2147483647)+-1|0;else x=10;o=0;na(65,m|0,x|0,0);w=o;o=0;if(w&1){w=Pa()|0;y=w;A=z}else{w=(a[s>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=w;c[q>>2]=p;c[r>>2]=0;B=m+4|0;C=m+8|0;D=c[d>>2]|0;E=w;w=D;F=D;a:while(1){if(w){D=c[w+12>>2]|0;if((D|0)==(c[w+16>>2]|0)){o=0;G=Z(c[(c[w>>2]|0)+36>>2]|0,w|0)|0;H=o;o=0;if(H&1)break;else I=G}else I=OH(c[D>>2]|0)|0;if(nI(I,NH()|0)|0){c[d>>2]=0;J=0;K=0;L=1}else{J=w;K=F;L=0}}else{J=0;K=0;L=1}D=c[e>>2]|0;do if(D){G=c[D+12>>2]|0;if((G|0)==(c[D+16>>2]|0)){o=0;H=Z(c[(c[D>>2]|0)+36>>2]|0,D|0)|0;M=o;o=0;if(M&1)break a;else N=H}else N=OH(c[G>>2]|0)|0;if(!(nI(N,NH()|0)|0))if(L){O=D;break}else{P=E;Q=D;v=46;break a}else{c[e>>2]=0;v=26;break}}else v=26;while(0);if((v|0)==26){v=0;if(L){P=E;Q=0;v=46;break}else O=0}D=a[s>>0]|0;G=D<<24>>24<0?c[B>>2]|0:D&255;if((c[n>>2]|0)==(E+G|0)){o=0;na(65,m|0,G<<1|0,0);D=o;o=0;if(D&1)break;if((a[s>>0]|0)<0)R=(c[C>>2]&2147483647)+-1|0;else R=10;o=0;na(65,m|0,R|0,0);D=o;o=0;if(D&1)break;D=(a[s>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=D+G;S=D}else S=E;D=J+12|0;G=c[D>>2]|0;H=J+16|0;if((G|0)==(c[H>>2]|0)){o=0;M=Z(c[(c[J>>2]|0)+36>>2]|0,J|0)|0;T=o;o=0;if(T&1)break;else U=M}else U=OH(c[G>>2]|0)|0;o=0;G=ha(3,U|0,16,S|0,n|0,r|0,0,k|0,p|0,q|0,j|0)|0;M=o;o=0;if(M&1)break;if(G|0){P=S;Q=O;v=46;break}G=c[D>>2]|0;if((G|0)==(c[H>>2]|0)){o=0;Z(c[(c[J>>2]|0)+40>>2]|0,J|0)|0;H=o;o=0;if(H&1)break;else{E=S;w=J;F=K;continue}}else{c[D>>2]=G+4;OH(c[G>>2]|0)|0;E=S;w=J;F=K;continue}}b:do if((((v|0)==46?(o=0,na(65,m|0,(c[n>>2]|0)-P|0,0),F=o,o=0,!(F&1)):0)?(F=a[s>>0]|0,w=c[m>>2]|0,o=0,E=Y(36)|0,C=o,o=0,!(C&1)):0)?(o=0,c[i>>2]=h,C=aa(52,(F<<24>>24<0?w:m)|0,E|0,89975,i|0)|0,E=o,o=0,!(E&1)):0){if((C|0)!=1)c[g>>2]=4;if(J){C=c[J+12>>2]|0;if((C|0)==(c[J+16>>2]|0)){o=0;E=Z(c[(c[K>>2]|0)+36>>2]|0,J|0)|0;w=o;o=0;if(w&1)break;else V=E}else V=OH(c[C>>2]|0)|0;if(nI(V,NH()|0)|0){c[d>>2]=0;W=1}else W=0}else W=1;do if(Q){C=c[Q+12>>2]|0;if((C|0)==(c[Q+16>>2]|0)){o=0;E=Z(c[(c[Q>>2]|0)+36>>2]|0,Q|0)|0;w=o;o=0;if(w&1)break b;else X=E}else X=OH(c[C>>2]|0)|0;if(!(nI(X,NH()|0)|0))if(W)break;else{v=65;break}else{c[e>>2]=0;v=63;break}}else v=63;while(0);if((v|0)==63?W:0)v=65;if((v|0)==65)c[g>>2]=c[g>>2]|2;C=c[d>>2]|0;xR(m);xR(k);l=b;return C|0}while(0);s=Pa()|0;y=s;A=z}xR(m);$=y;ba=A;break}s=Pa()|0;C=z;$I(m);t=s;u=C;v=36}while(0);if((v|0)==36){$=t;ba=u}xR(k);$a($|0);return 0}function VJ(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;m=c[f>>2]|0;n=(m|0)==(e|0);do if(n){o=(c[l+96>>2]|0)==(b|0);if(!o?(c[l+100>>2]|0)!=(b|0):0){p=5;break}c[f>>2]=e+1;a[e>>0]=o?43:45;c[g>>2]=0;q=0}else p=5;while(0);a:do if((p|0)==5){o=a[i+11>>0]|0;if((b|0)==(h|0)?((o<<24>>24<0?c[i+4>>2]|0:o&255)|0)!=0:0){o=c[k>>2]|0;if((o-j|0)>=160){q=0;break}r=c[g>>2]|0;c[k>>2]=o+4;c[o>>2]=r;c[g>>2]=0;q=0;break}r=l+104|0;o=0;while(1){s=l+(o<<2)|0;if((o|0)==26){t=r;break}if((c[s>>2]|0)==(b|0)){t=s;break}else o=o+1|0}o=t-l|0;r=o>>2;if((o|0)>92)q=-1;else{switch(d|0){case 10:case 8:{if((r|0)>=(d|0)){q=-1;break a}break}case 16:{if((o|0)>=88){if(n){q=-1;break a}if((m-e|0)>=3){q=-1;break a}if((a[m+-1>>0]|0)!=48){q=-1;break a}c[g>>2]=0;o=a[89942+r>>0]|0;c[f>>2]=m+1;a[m>>0]=o;q=0;break a}break}default:{}}o=a[89942+r>>0]|0;c[f>>2]=m+1;a[m>>0]=o;c[g>>2]=(c[g>>2]|0)+1;q=0}}while(0);return q|0}function WJ(b,d,e,f,g,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0.0,W=0,Y=0,_=0;b=l;l=l+352|0;j=b+208|0;k=b+200|0;m=b+196|0;n=b+184|0;p=b+172|0;q=b+168|0;r=b+8|0;s=b+4|0;t=b;u=b+337|0;v=b+336|0;XJ(n,f,j,k,m);c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;f=0;while(1){if((f|0)==3)break;c[p+(f<<2)>>2]=0;f=f+1|0}f=p+11|0;if((a[f>>0]|0)<0)w=(c[p+8>>2]&2147483647)+-1|0;else w=10;o=0;na(65,p|0,w|0,0);w=o;o=0;if(w&1){w=Pa()|0;x=w;y=z}else{w=(a[f>>0]|0)<0?c[p>>2]|0:p;c[q>>2]=w;c[s>>2]=r;c[t>>2]=0;a[u>>0]=1;a[v>>0]=69;A=p+4|0;B=p+8|0;C=c[d>>2]|0;D=w;w=C;E=C;a:while(1){if(w){C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){o=0;F=Z(c[(c[w>>2]|0)+36>>2]|0,w|0)|0;G=o;o=0;if(G&1)break;else H=F}else H=OH(c[C>>2]|0)|0;if(nI(H,NH()|0)|0){c[d>>2]=0;I=0;J=0;K=1}else{I=w;J=E;K=0}}else{I=0;J=0;K=1}C=c[e>>2]|0;do if(C){F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){o=0;G=Z(c[(c[C>>2]|0)+36>>2]|0,C|0)|0;L=o;o=0;if(L&1)break a;else M=G}else M=OH(c[F>>2]|0)|0;if(!(nI(M,NH()|0)|0))if(K){N=C;break}else{O=D;P=C;Q=37;break a}else{c[e>>2]=0;Q=20;break}}else Q=20;while(0);if((Q|0)==20){Q=0;if(K){O=D;P=0;Q=37;break}else N=0}C=a[f>>0]|0;F=C<<24>>24<0?c[A>>2]|0:C&255;if((c[q>>2]|0)==(D+F|0)){o=0;na(65,p|0,F<<1|0,0);C=o;o=0;if(C&1)break;if((a[f>>0]|0)<0)R=(c[B>>2]&2147483647)+-1|0;else R=10;o=0;na(65,p|0,R|0,0);C=o;o=0;if(C&1)break;C=(a[f>>0]|0)<0?c[p>>2]|0:p;c[q>>2]=C+F;S=C}else S=D;C=I+12|0;F=c[C>>2]|0;G=I+16|0;if((F|0)==(c[G>>2]|0)){o=0;L=Z(c[(c[I>>2]|0)+36>>2]|0,I|0)|0;T=o;o=0;if(T&1)break;else U=L}else U=OH(c[F>>2]|0)|0;o=0;F=ja(2,U|0,u|0,v|0,S|0,q|0,c[k>>2]|0,c[m>>2]|0,n|0,r|0,s|0,t|0,j|0)|0;L=o;o=0;if(L&1)break;if(F|0){O=S;P=N;Q=37;break}F=c[C>>2]|0;if((F|0)==(c[G>>2]|0)){o=0;Z(c[(c[I>>2]|0)+40>>2]|0,I|0)|0;G=o;o=0;if(G&1)break;else{D=S;w=I;E=J;continue}}else{c[C>>2]=F+4;OH(c[F>>2]|0)|0;D=S;w=I;E=J;continue}}b:do if((Q|0)==37){E=a[n+11>>0]|0;if(!((a[u>>0]|0)==0?1:((E<<24>>24<0?c[n+4>>2]|0:E&255)|0)==0)?(E=c[s>>2]|0,(E-r|0)<160):0){w=c[t>>2]|0;c[s>>2]=E+4;c[E>>2]=w}o=0;V=+X(2,O|0,c[q>>2]|0,g|0);w=o;o=0;if(!(w&1)?(h[i>>3]=V,o=0,oa(54,n|0,r|0,c[s>>2]|0,g|0),w=o,o=0,!(w&1)):0){if(I){w=c[I+12>>2]|0;if((w|0)==(c[I+16>>2]|0)){o=0;E=Z(c[(c[J>>2]|0)+36>>2]|0,I|0)|0;S=o;o=0;if(S&1)break;else W=E}else W=OH(c[w>>2]|0)|0;if(nI(W,NH()|0)|0){c[d>>2]=0;Y=1}else Y=0}else Y=1;do if(P){w=c[P+12>>2]|0;if((w|0)==(c[P+16>>2]|0)){o=0;E=Z(c[(c[P>>2]|0)+36>>2]|0,P|0)|0;S=o;o=0;if(S&1)break b;else _=E}else _=OH(c[w>>2]|0)|0;if(!(nI(_,NH()|0)|0))if(Y)break;else{Q=56;break}else{c[e>>2]=0;Q=54;break}}else Q=54;while(0);if((Q|0)==54?Y:0)Q=56;if((Q|0)==56)c[g>>2]=c[g>>2]|2;w=c[d>>2]|0;xR(p);xR(n);l=b;return w|0}}while(0);b=Pa()|0;x=b;y=z}xR(p);xR(n);$a(x|0);return 0}function XJ(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=l;l=l+16|0;h=g;mI(h,b);o=0;b=_(93,h|0,103e3)|0;i=o;o=0;if(((((!(i&1)?(o=0,aa(c[(c[b>>2]|0)+48>>2]|0,b|0,89942,89974,d|0)|0,d=o,o=0,!(d&1)):0)?(o=0,d=_(93,h|0,103008)|0,b=o,o=0,!(b&1)):0)?(o=0,b=Z(c[(c[d>>2]|0)+12>>2]|0,d|0)|0,i=o,o=0,!(i&1)):0)?(c[e>>2]=b,o=0,b=Z(c[(c[d>>2]|0)+16>>2]|0,d|0)|0,e=o,o=0,!(e&1)):0)?(c[f>>2]=b,o=0,ma(c[(c[d>>2]|0)+20>>2]|0,a|0,d|0),d=o,o=0,!(d&1)):0){$I(h);l=g;return}g=Pa()|0;$I(h);$a(g|0)}function YJ(b,d,e,f,g,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0;a:do if((b|0)==(h|0))if(a[d>>0]|0){a[d>>0]=0;o=c[g>>2]|0;c[g>>2]=o+1;a[o>>0]=46;o=a[j+11>>0]|0;if(((o<<24>>24<0?c[j+4>>2]|0:o&255)|0)!=0?(o=c[l>>2]|0,(o-k|0)<160):0){p=c[m>>2]|0;c[l>>2]=o+4;c[o>>2]=p;q=0}else q=0}else q=-1;else{if((b|0)==(i|0)?(p=a[j+11>>0]|0,(p<<24>>24<0?c[j+4>>2]|0:p&255)|0):0){if(!(a[d>>0]|0)){q=-1;break}p=c[l>>2]|0;if((p-k|0)>=160){q=0;break}o=c[m>>2]|0;c[l>>2]=p+4;c[p>>2]=o;c[m>>2]=0;q=0;break}o=n+128|0;p=0;while(1){r=n+(p<<2)|0;if((p|0)==32){s=o;break}if((c[r>>2]|0)==(b|0)){s=r;break}else p=p+1|0}p=s-n|0;o=p>>2;if((p|0)<=124){r=a[89942+o>>0]|0;switch(o|0){case 24:case 25:{o=c[g>>2]|0;if((o|0)!=(f|0)?(a[o+-1>>0]&95)!=(a[e>>0]&127):0){q=-1;break a}c[g>>2]=o+1;a[o>>0]=r;q=0;break a;break}case 23:case 22:{a[e>>0]=80;break}default:{o=r&95;if((((o|0)==(a[e>>0]|0)?(a[e>>0]=o|128,a[d>>0]|0):0)?(a[d>>0]=0,o=a[j+11>>0]|0,(o<<24>>24<0?c[j+4>>2]|0:o&255)|0):0)?(o=c[l>>2]|0,(o-k|0)<160):0){t=c[m>>2]|0;c[l>>2]=o+4;c[o>>2]=t}}}t=c[g>>2]|0;c[g>>2]=t+1;a[t>>0]=r;if((p|0)>84)q=0;else{c[m>>2]=(c[m>>2]|0)+1;q=0}}else q=-1}while(0);return q|0}function ZJ(b,d,e,f,g,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0.0,W=0,Y=0,_=0;b=l;l=l+352|0;j=b+208|0;k=b+200|0;m=b+196|0;n=b+184|0;p=b+172|0;q=b+168|0;r=b+8|0;s=b+4|0;t=b;u=b+337|0;v=b+336|0;XJ(n,f,j,k,m);c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;f=0;while(1){if((f|0)==3)break;c[p+(f<<2)>>2]=0;f=f+1|0}f=p+11|0;if((a[f>>0]|0)<0)w=(c[p+8>>2]&2147483647)+-1|0;else w=10;o=0;na(65,p|0,w|0,0);w=o;o=0;if(w&1){w=Pa()|0;x=w;y=z}else{w=(a[f>>0]|0)<0?c[p>>2]|0:p;c[q>>2]=w;c[s>>2]=r;c[t>>2]=0;a[u>>0]=1;a[v>>0]=69;A=p+4|0;B=p+8|0;C=c[d>>2]|0;D=w;w=C;E=C;a:while(1){if(w){C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){o=0;F=Z(c[(c[w>>2]|0)+36>>2]|0,w|0)|0;G=o;o=0;if(G&1)break;else H=F}else H=OH(c[C>>2]|0)|0;if(nI(H,NH()|0)|0){c[d>>2]=0;I=0;J=0;K=1}else{I=w;J=E;K=0}}else{I=0;J=0;K=1}C=c[e>>2]|0;do if(C){F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){o=0;G=Z(c[(c[C>>2]|0)+36>>2]|0,C|0)|0;L=o;o=0;if(L&1)break a;else M=G}else M=OH(c[F>>2]|0)|0;if(!(nI(M,NH()|0)|0))if(K){N=C;break}else{O=D;P=C;Q=37;break a}else{c[e>>2]=0;Q=20;break}}else Q=20;while(0);if((Q|0)==20){Q=0;if(K){O=D;P=0;Q=37;break}else N=0}C=a[f>>0]|0;F=C<<24>>24<0?c[A>>2]|0:C&255;if((c[q>>2]|0)==(D+F|0)){o=0;na(65,p|0,F<<1|0,0);C=o;o=0;if(C&1)break;if((a[f>>0]|0)<0)R=(c[B>>2]&2147483647)+-1|0;else R=10;o=0;na(65,p|0,R|0,0);C=o;o=0;if(C&1)break;C=(a[f>>0]|0)<0?c[p>>2]|0:p;c[q>>2]=C+F;S=C}else S=D;C=I+12|0;F=c[C>>2]|0;G=I+16|0;if((F|0)==(c[G>>2]|0)){o=0;L=Z(c[(c[I>>2]|0)+36>>2]|0,I|0)|0;T=o;o=0;if(T&1)break;else U=L}else U=OH(c[F>>2]|0)|0;o=0;F=ja(2,U|0,u|0,v|0,S|0,q|0,c[k>>2]|0,c[m>>2]|0,n|0,r|0,s|0,t|0,j|0)|0;L=o;o=0;if(L&1)break;if(F|0){O=S;P=N;Q=37;break}F=c[C>>2]|0;if((F|0)==(c[G>>2]|0)){o=0;Z(c[(c[I>>2]|0)+40>>2]|0,I|0)|0;G=o;o=0;if(G&1)break;else{D=S;w=I;E=J;continue}}else{c[C>>2]=F+4;OH(c[F>>2]|0)|0;D=S;w=I;E=J;continue}}b:do if((Q|0)==37){E=a[n+11>>0]|0;if(!((a[u>>0]|0)==0?1:((E<<24>>24<0?c[n+4>>2]|0:E&255)|0)==0)?(E=c[s>>2]|0,(E-r|0)<160):0){w=c[t>>2]|0;c[s>>2]=E+4;c[E>>2]=w}o=0;V=+X(3,O|0,c[q>>2]|0,g|0);w=o;o=0;if(!(w&1)?(h[i>>3]=V,o=0,oa(54,n|0,r|0,c[s>>2]|0,g|0),w=o,o=0,!(w&1)):0){if(I){w=c[I+12>>2]|0;if((w|0)==(c[I+16>>2]|0)){o=0;E=Z(c[(c[J>>2]|0)+36>>2]|0,I|0)|0;S=o;o=0;if(S&1)break;else W=E}else W=OH(c[w>>2]|0)|0;if(nI(W,NH()|0)|0){c[d>>2]=0;Y=1}else Y=0}else Y=1;do if(P){w=c[P+12>>2]|0;if((w|0)==(c[P+16>>2]|0)){o=0;E=Z(c[(c[P>>2]|0)+36>>2]|0,P|0)|0;S=o;o=0;if(S&1)break b;else _=E}else _=OH(c[w>>2]|0)|0;if(!(nI(_,NH()|0)|0))if(Y)break;else{Q=56;break}else{c[e>>2]=0;Q=54;break}}else Q=54;while(0);if((Q|0)==54?Y:0)Q=56;if((Q|0)==56)c[g>>2]=c[g>>2]|2;w=c[d>>2]|0;xR(p);xR(n);l=b;return w|0}}while(0);b=Pa()|0;x=b;y=z}xR(p);xR(n);$a(x|0);return 0}function _J(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0.0,W=0,Y=0,_=0;b=l;l=l+352|0;j=b+208|0;k=b+200|0;m=b+196|0;n=b+184|0;p=b+172|0;q=b+168|0;r=b+8|0;s=b+4|0;t=b;u=b+337|0;v=b+336|0;XJ(n,f,j,k,m);c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;f=0;while(1){if((f|0)==3)break;c[p+(f<<2)>>2]=0;f=f+1|0}f=p+11|0;if((a[f>>0]|0)<0)w=(c[p+8>>2]&2147483647)+-1|0;else w=10;o=0;na(65,p|0,w|0,0);w=o;o=0;if(w&1){w=Pa()|0;x=w;y=z}else{w=(a[f>>0]|0)<0?c[p>>2]|0:p;c[q>>2]=w;c[s>>2]=r;c[t>>2]=0;a[u>>0]=1;a[v>>0]=69;A=p+4|0;B=p+8|0;C=c[d>>2]|0;D=w;w=C;E=C;a:while(1){if(w){C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){o=0;F=Z(c[(c[w>>2]|0)+36>>2]|0,w|0)|0;G=o;o=0;if(G&1)break;else H=F}else H=OH(c[C>>2]|0)|0;if(nI(H,NH()|0)|0){c[d>>2]=0;I=0;J=0;K=1}else{I=w;J=E;K=0}}else{I=0;J=0;K=1}C=c[e>>2]|0;do if(C){F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){o=0;G=Z(c[(c[C>>2]|0)+36>>2]|0,C|0)|0;L=o;o=0;if(L&1)break a;else M=G}else M=OH(c[F>>2]|0)|0;if(!(nI(M,NH()|0)|0))if(K){N=C;break}else{O=D;P=C;Q=37;break a}else{c[e>>2]=0;Q=20;break}}else Q=20;while(0);if((Q|0)==20){Q=0;if(K){O=D;P=0;Q=37;break}else N=0}C=a[f>>0]|0;F=C<<24>>24<0?c[A>>2]|0:C&255;if((c[q>>2]|0)==(D+F|0)){o=0;na(65,p|0,F<<1|0,0);C=o;o=0;if(C&1)break;if((a[f>>0]|0)<0)R=(c[B>>2]&2147483647)+-1|0;else R=10;o=0;na(65,p|0,R|0,0);C=o;o=0;if(C&1)break;C=(a[f>>0]|0)<0?c[p>>2]|0:p;c[q>>2]=C+F;S=C}else S=D;C=I+12|0;F=c[C>>2]|0;G=I+16|0;if((F|0)==(c[G>>2]|0)){o=0;L=Z(c[(c[I>>2]|0)+36>>2]|0,I|0)|0;T=o;o=0;if(T&1)break;else U=L}else U=OH(c[F>>2]|0)|0;o=0;F=ja(2,U|0,u|0,v|0,S|0,q|0,c[k>>2]|0,c[m>>2]|0,n|0,r|0,s|0,t|0,j|0)|0;L=o;o=0;if(L&1)break;if(F|0){O=S;P=N;Q=37;break}F=c[C>>2]|0;if((F|0)==(c[G>>2]|0)){o=0;Z(c[(c[I>>2]|0)+40>>2]|0,I|0)|0;G=o;o=0;if(G&1)break;else{D=S;w=I;E=J;continue}}else{c[C>>2]=F+4;OH(c[F>>2]|0)|0;D=S;w=I;E=J;continue}}b:do if((Q|0)==37){E=a[n+11>>0]|0;if(!((a[u>>0]|0)==0?1:((E<<24>>24<0?c[n+4>>2]|0:E&255)|0)==0)?(E=c[s>>2]|0,(E-r|0)<160):0){w=c[t>>2]|0;c[s>>2]=E+4;c[E>>2]=w}o=0;V=+X(4,O|0,c[q>>2]|0,h|0);w=o;o=0;if(!(w&1)?(g[i>>2]=V,o=0,oa(54,n|0,r|0,c[s>>2]|0,h|0),w=o,o=0,!(w&1)):0){if(I){w=c[I+12>>2]|0;if((w|0)==(c[I+16>>2]|0)){o=0;E=Z(c[(c[J>>2]|0)+36>>2]|0,I|0)|0;S=o;o=0;if(S&1)break;else W=E}else W=OH(c[w>>2]|0)|0;if(nI(W,NH()|0)|0){c[d>>2]=0;Y=1}else Y=0}else Y=1;do if(P){w=c[P+12>>2]|0;if((w|0)==(c[P+16>>2]|0)){o=0;E=Z(c[(c[P>>2]|0)+36>>2]|0,P|0)|0;S=o;o=0;if(S&1)break b;else _=E}else _=OH(c[w>>2]|0)|0;if(!(nI(_,NH()|0)|0))if(Y)break;else{Q=56;break}else{c[e>>2]=0;Q=54;break}}else Q=54;while(0);if((Q|0)==54?Y:0)Q=56;if((Q|0)==56)c[h>>2]=c[h>>2]|2;w=c[d>>2]|0;xR(p);xR(n);l=b;return w|0}}while(0);b=Pa()|0;x=b;y=z}xR(p);xR(n);$a(x|0);return 0}function $J(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;b=l;l=l+304|0;i=b+200|0;j=b+196|0;k=b+184|0;m=b+172|0;n=b+168|0;p=b+8|0;q=b+4|0;r=b;s=uJ(f)|0;aK(k,f,i,j);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;f=0;while(1){if((f|0)==3)break;c[m+(f<<2)>>2]=0;f=f+1|0}f=m+11|0;if((a[f>>0]|0)<0)t=(c[m+8>>2]&2147483647)+-1|0;else t=10;o=0;na(65,m|0,t|0,0);t=o;o=0;if(t&1){t=Pa()|0;u=t;v=z}else{t=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=t;c[q>>2]=p;c[r>>2]=0;w=m+4|0;x=m+8|0;y=c[d>>2]|0;A=t;t=y;B=y;a:while(1){if(t){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0)){o=0;C=Z(c[(c[t>>2]|0)+36>>2]|0,t|0)|0;D=o;o=0;if(D&1)break;else E=C}else E=OH(c[y>>2]|0)|0;if(nI(E,NH()|0)|0){c[d>>2]=0;F=0;G=0;H=1}else{F=t;G=B;H=0}}else{F=0;G=0;H=1}y=c[e>>2]|0;do if(y){C=c[y+12>>2]|0;if((C|0)==(c[y+16>>2]|0)){o=0;D=Z(c[(c[y>>2]|0)+36>>2]|0,y|0)|0;I=o;o=0;if(I&1)break a;else J=D}else J=OH(c[C>>2]|0)|0;if(!(nI(J,NH()|0)|0))if(H){K=y;break}else{L=A;M=y;N=37;break a}else{c[e>>2]=0;N=20;break}}else N=20;while(0);if((N|0)==20){N=0;if(H){L=A;M=0;N=37;break}else K=0}y=a[f>>0]|0;C=y<<24>>24<0?c[w>>2]|0:y&255;if((c[n>>2]|0)==(A+C|0)){o=0;na(65,m|0,C<<1|0,0);y=o;o=0;if(y&1)break;if((a[f>>0]|0)<0)O=(c[x>>2]&2147483647)+-1|0;else O=10;o=0;na(65,m|0,O|0,0);y=o;o=0;if(y&1)break;y=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=y+C;P=y}else P=A;y=F+12|0;C=c[y>>2]|0;D=F+16|0;if((C|0)==(c[D>>2]|0)){o=0;I=Z(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;Q=o;o=0;if(Q&1)break;else R=I}else R=OH(c[C>>2]|0)|0;o=0;C=ha(3,R|0,s|0,P|0,n|0,r|0,c[j>>2]|0,k|0,p|0,q|0,i|0)|0;I=o;o=0;if(I&1)break;if(C|0){L=P;M=K;N=37;break}C=c[y>>2]|0;if((C|0)==(c[D>>2]|0)){o=0;Z(c[(c[F>>2]|0)+40>>2]|0,F|0)|0;D=o;o=0;if(D&1)break;else{A=P;t=F;B=G;continue}}else{c[y>>2]=C+4;OH(c[C>>2]|0)|0;A=P;t=F;B=G;continue}}b:do if((N|0)==37){B=a[k+11>>0]|0;if((B<<24>>24<0?c[k+4>>2]|0:B&255)|0?(B=c[q>>2]|0,(B-p|0)<160):0){t=c[r>>2]|0;c[q>>2]=B+4;c[B>>2]=t}o=0;t=aa(53,L|0,c[n>>2]|0,g|0,s|0)|0;B=z;P=o;o=0;if(!(P&1)?(P=h,c[P>>2]=t,c[P+4>>2]=B,o=0,oa(54,k|0,p|0,c[q>>2]|0,g|0),B=o,o=0,!(B&1)):0){if(F){B=c[F+12>>2]|0;if((B|0)==(c[F+16>>2]|0)){o=0;P=Z(c[(c[G>>2]|0)+36>>2]|0,F|0)|0;t=o;o=0;if(t&1)break;else S=P}else S=OH(c[B>>2]|0)|0;if(nI(S,NH()|0)|0){c[d>>2]=0;T=1}else T=0}else T=1;do if(M){B=c[M+12>>2]|0;if((B|0)==(c[M+16>>2]|0)){o=0;P=Z(c[(c[M>>2]|0)+36>>2]|0,M|0)|0;t=o;o=0;if(t&1)break b;else U=P}else U=OH(c[B>>2]|0)|0;if(!(nI(U,NH()|0)|0))if(T)break;else{N=56;break}else{c[e>>2]=0;N=54;break}}else N=54;while(0);if((N|0)==54?T:0)N=56;if((N|0)==56)c[g>>2]=c[g>>2]|2;B=c[d>>2]|0;xR(m);xR(k);l=b;return B|0}}while(0);b=Pa()|0;u=b;v=z}xR(m);xR(k);$a(u|0);return 0}function aK(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=l;l=l+16|0;g=f;mI(g,b);o=0;b=_(93,g|0,103e3)|0;h=o;o=0;if((((!(h&1)?(o=0,aa(c[(c[b>>2]|0)+48>>2]|0,b|0,89942,89968,d|0)|0,d=o,o=0,!(d&1)):0)?(o=0,d=_(93,g|0,103008)|0,b=o,o=0,!(b&1)):0)?(o=0,b=Z(c[(c[d>>2]|0)+16>>2]|0,d|0)|0,h=o,o=0,!(h&1)):0)?(c[e>>2]=b,o=0,ma(c[(c[d>>2]|0)+20>>2]|0,a|0,d|0),d=o,o=0,!(d&1)):0){$I(g);l=f;return}f=Pa()|0;$I(g);$a(f|0)}function bK(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;b=l;l=l+304|0;i=b+200|0;j=b+196|0;k=b+184|0;m=b+172|0;n=b+168|0;p=b+8|0;q=b+4|0;r=b;s=uJ(f)|0;aK(k,f,i,j);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;f=0;while(1){if((f|0)==3)break;c[m+(f<<2)>>2]=0;f=f+1|0}f=m+11|0;if((a[f>>0]|0)<0)t=(c[m+8>>2]&2147483647)+-1|0;else t=10;o=0;na(65,m|0,t|0,0);t=o;o=0;if(t&1){t=Pa()|0;u=t;v=z}else{t=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=t;c[q>>2]=p;c[r>>2]=0;w=m+4|0;x=m+8|0;y=c[d>>2]|0;A=t;t=y;B=y;a:while(1){if(t){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0)){o=0;C=Z(c[(c[t>>2]|0)+36>>2]|0,t|0)|0;D=o;o=0;if(D&1)break;else E=C}else E=OH(c[y>>2]|0)|0;if(nI(E,NH()|0)|0){c[d>>2]=0;F=0;G=0;H=1}else{F=t;G=B;H=0}}else{F=0;G=0;H=1}y=c[e>>2]|0;do if(y){C=c[y+12>>2]|0;if((C|0)==(c[y+16>>2]|0)){o=0;D=Z(c[(c[y>>2]|0)+36>>2]|0,y|0)|0;I=o;o=0;if(I&1)break a;else J=D}else J=OH(c[C>>2]|0)|0;if(!(nI(J,NH()|0)|0))if(H){K=y;break}else{L=A;M=y;N=37;break a}else{c[e>>2]=0;N=20;break}}else N=20;while(0);if((N|0)==20){N=0;if(H){L=A;M=0;N=37;break}else K=0}y=a[f>>0]|0;C=y<<24>>24<0?c[w>>2]|0:y&255;if((c[n>>2]|0)==(A+C|0)){o=0;na(65,m|0,C<<1|0,0);y=o;o=0;if(y&1)break;if((a[f>>0]|0)<0)O=(c[x>>2]&2147483647)+-1|0;else O=10;o=0;na(65,m|0,O|0,0);y=o;o=0;if(y&1)break;y=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=y+C;P=y}else P=A;y=F+12|0;C=c[y>>2]|0;D=F+16|0;if((C|0)==(c[D>>2]|0)){o=0;I=Z(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;Q=o;o=0;if(Q&1)break;else R=I}else R=OH(c[C>>2]|0)|0;o=0;C=ha(3,R|0,s|0,P|0,n|0,r|0,c[j>>2]|0,k|0,p|0,q|0,i|0)|0;I=o;o=0;if(I&1)break;if(C|0){L=P;M=K;N=37;break}C=c[y>>2]|0;if((C|0)==(c[D>>2]|0)){o=0;Z(c[(c[F>>2]|0)+40>>2]|0,F|0)|0;D=o;o=0;if(D&1)break;else{A=P;t=F;B=G;continue}}else{c[y>>2]=C+4;OH(c[C>>2]|0)|0;A=P;t=F;B=G;continue}}b:do if((N|0)==37){B=a[k+11>>0]|0;if((B<<24>>24<0?c[k+4>>2]|0:B&255)|0?(B=c[q>>2]|0,(B-p|0)<160):0){t=c[r>>2]|0;c[q>>2]=B+4;c[B>>2]=t}o=0;t=aa(54,L|0,c[n>>2]|0,g|0,s|0)|0;B=o;o=0;if(!(B&1)?(c[h>>2]=t,o=0,oa(54,k|0,p|0,c[q>>2]|0,g|0),t=o,o=0,!(t&1)):0){if(F){t=c[F+12>>2]|0;if((t|0)==(c[F+16>>2]|0)){o=0;B=Z(c[(c[G>>2]|0)+36>>2]|0,F|0)|0;P=o;o=0;if(P&1)break;else S=B}else S=OH(c[t>>2]|0)|0;if(nI(S,NH()|0)|0){c[d>>2]=0;T=1}else T=0}else T=1;do if(M){t=c[M+12>>2]|0;if((t|0)==(c[M+16>>2]|0)){o=0;B=Z(c[(c[M>>2]|0)+36>>2]|0,M|0)|0;P=o;o=0;if(P&1)break b;else U=B}else U=OH(c[t>>2]|0)|0;if(!(nI(U,NH()|0)|0))if(T)break;else{N=56;break}else{c[e>>2]=0;N=54;break}}else N=54;while(0);if((N|0)==54?T:0)N=56;if((N|0)==56)c[g>>2]=c[g>>2]|2;t=c[d>>2]|0;xR(m);xR(k);l=b;return t|0}}while(0);b=Pa()|0;u=b;v=z}xR(m);xR(k);$a(u|0);return 0}function cK(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;b=l;l=l+304|0;i=b+200|0;j=b+196|0;k=b+184|0;m=b+172|0;n=b+168|0;p=b+8|0;q=b+4|0;r=b;s=uJ(f)|0;aK(k,f,i,j);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;f=0;while(1){if((f|0)==3)break;c[m+(f<<2)>>2]=0;f=f+1|0}f=m+11|0;if((a[f>>0]|0)<0)t=(c[m+8>>2]&2147483647)+-1|0;else t=10;o=0;na(65,m|0,t|0,0);t=o;o=0;if(t&1){t=Pa()|0;u=t;v=z}else{t=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=t;c[q>>2]=p;c[r>>2]=0;w=m+4|0;x=m+8|0;y=c[d>>2]|0;A=t;t=y;B=y;a:while(1){if(t){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0)){o=0;C=Z(c[(c[t>>2]|0)+36>>2]|0,t|0)|0;D=o;o=0;if(D&1)break;else E=C}else E=OH(c[y>>2]|0)|0;if(nI(E,NH()|0)|0){c[d>>2]=0;F=0;G=0;H=1}else{F=t;G=B;H=0}}else{F=0;G=0;H=1}y=c[e>>2]|0;do if(y){C=c[y+12>>2]|0;if((C|0)==(c[y+16>>2]|0)){o=0;D=Z(c[(c[y>>2]|0)+36>>2]|0,y|0)|0;I=o;o=0;if(I&1)break a;else J=D}else J=OH(c[C>>2]|0)|0;if(!(nI(J,NH()|0)|0))if(H){K=y;break}else{L=A;M=y;N=37;break a}else{c[e>>2]=0;N=20;break}}else N=20;while(0);if((N|0)==20){N=0;if(H){L=A;M=0;N=37;break}else K=0}y=a[f>>0]|0;C=y<<24>>24<0?c[w>>2]|0:y&255;if((c[n>>2]|0)==(A+C|0)){o=0;na(65,m|0,C<<1|0,0);y=o;o=0;if(y&1)break;if((a[f>>0]|0)<0)O=(c[x>>2]&2147483647)+-1|0;else O=10;o=0;na(65,m|0,O|0,0);y=o;o=0;if(y&1)break;y=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=y+C;P=y}else P=A;y=F+12|0;C=c[y>>2]|0;D=F+16|0;if((C|0)==(c[D>>2]|0)){o=0;I=Z(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;Q=o;o=0;if(Q&1)break;else R=I}else R=OH(c[C>>2]|0)|0;o=0;C=ha(3,R|0,s|0,P|0,n|0,r|0,c[j>>2]|0,k|0,p|0,q|0,i|0)|0;I=o;o=0;if(I&1)break;if(C|0){L=P;M=K;N=37;break}C=c[y>>2]|0;if((C|0)==(c[D>>2]|0)){o=0;Z(c[(c[F>>2]|0)+40>>2]|0,F|0)|0;D=o;o=0;if(D&1)break;else{A=P;t=F;B=G;continue}}else{c[y>>2]=C+4;OH(c[C>>2]|0)|0;A=P;t=F;B=G;continue}}b:do if((N|0)==37){B=a[k+11>>0]|0;if((B<<24>>24<0?c[k+4>>2]|0:B&255)|0?(B=c[q>>2]|0,(B-p|0)<160):0){t=c[r>>2]|0;c[q>>2]=B+4;c[B>>2]=t}o=0;t=aa(55,L|0,c[n>>2]|0,g|0,s|0)|0;B=o;o=0;if(!(B&1)?(c[h>>2]=t,o=0,oa(54,k|0,p|0,c[q>>2]|0,g|0),t=o,o=0,!(t&1)):0){if(F){t=c[F+12>>2]|0;if((t|0)==(c[F+16>>2]|0)){o=0;B=Z(c[(c[G>>2]|0)+36>>2]|0,F|0)|0;P=o;o=0;if(P&1)break;else S=B}else S=OH(c[t>>2]|0)|0;if(nI(S,NH()|0)|0){c[d>>2]=0;T=1}else T=0}else T=1;do if(M){t=c[M+12>>2]|0;if((t|0)==(c[M+16>>2]|0)){o=0;B=Z(c[(c[M>>2]|0)+36>>2]|0,M|0)|0;P=o;o=0;if(P&1)break b;else U=B}else U=OH(c[t>>2]|0)|0;if(!(nI(U,NH()|0)|0))if(T)break;else{N=56;break}else{c[e>>2]=0;N=54;break}}else N=54;while(0);if((N|0)==54?T:0)N=56;if((N|0)==56)c[g>>2]=c[g>>2]|2;t=c[d>>2]|0;xR(m);xR(k);l=b;return t|0}}while(0);b=Pa()|0;u=b;v=z}xR(m);xR(k);$a(u|0);return 0}function dK(d,e,f,g,h,i){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=l;l=l+304|0;j=d+200|0;k=d+196|0;m=d+184|0;n=d+172|0;p=d+168|0;q=d+8|0;r=d+4|0;s=d;t=uJ(g)|0;aK(m,g,j,k);c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;g=0;while(1){if((g|0)==3)break;c[n+(g<<2)>>2]=0;g=g+1|0}g=n+11|0;if((a[g>>0]|0)<0)u=(c[n+8>>2]&2147483647)+-1|0;else u=10;o=0;na(65,n|0,u|0,0);u=o;o=0;if(u&1){u=Pa()|0;v=u;w=z}else{u=(a[g>>0]|0)<0?c[n>>2]|0:n;c[p>>2]=u;c[r>>2]=q;c[s>>2]=0;x=n+4|0;y=n+8|0;A=c[e>>2]|0;B=u;u=A;C=A;a:while(1){if(u){A=c[u+12>>2]|0;if((A|0)==(c[u+16>>2]|0)){o=0;D=Z(c[(c[u>>2]|0)+36>>2]|0,u|0)|0;E=o;o=0;if(E&1)break;else F=D}else F=OH(c[A>>2]|0)|0;if(nI(F,NH()|0)|0){c[e>>2]=0;G=0;H=0;I=1}else{G=u;H=C;I=0}}else{G=0;H=0;I=1}A=c[f>>2]|0;do if(A){D=c[A+12>>2]|0;if((D|0)==(c[A+16>>2]|0)){o=0;E=Z(c[(c[A>>2]|0)+36>>2]|0,A|0)|0;J=o;o=0;if(J&1)break a;else K=E}else K=OH(c[D>>2]|0)|0;if(!(nI(K,NH()|0)|0))if(I){L=A;break}else{M=B;N=A;O=37;break a}else{c[f>>2]=0;O=20;break}}else O=20;while(0);if((O|0)==20){O=0;if(I){M=B;N=0;O=37;break}else L=0}A=a[g>>0]|0;D=A<<24>>24<0?c[x>>2]|0:A&255;if((c[p>>2]|0)==(B+D|0)){o=0;na(65,n|0,D<<1|0,0);A=o;o=0;if(A&1)break;if((a[g>>0]|0)<0)P=(c[y>>2]&2147483647)+-1|0;else P=10;o=0;na(65,n|0,P|0,0);A=o;o=0;if(A&1)break;A=(a[g>>0]|0)<0?c[n>>2]|0:n;c[p>>2]=A+D;Q=A}else Q=B;A=G+12|0;D=c[A>>2]|0;E=G+16|0;if((D|0)==(c[E>>2]|0)){o=0;J=Z(c[(c[G>>2]|0)+36>>2]|0,G|0)|0;R=o;o=0;if(R&1)break;else S=J}else S=OH(c[D>>2]|0)|0;o=0;D=ha(3,S|0,t|0,Q|0,p|0,s|0,c[k>>2]|0,m|0,q|0,r|0,j|0)|0;J=o;o=0;if(J&1)break;if(D|0){M=Q;N=L;O=37;break}D=c[A>>2]|0;if((D|0)==(c[E>>2]|0)){o=0;Z(c[(c[G>>2]|0)+40>>2]|0,G|0)|0;E=o;o=0;if(E&1)break;else{B=Q;u=G;C=H;continue}}else{c[A>>2]=D+4;OH(c[D>>2]|0)|0;B=Q;u=G;C=H;continue}}b:do if((O|0)==37){C=a[m+11>>0]|0;if((C<<24>>24<0?c[m+4>>2]|0:C&255)|0?(C=c[r>>2]|0,(C-q|0)<160):0){u=c[s>>2]|0;c[r>>2]=C+4;c[C>>2]=u}o=0;u=aa(56,M|0,c[p>>2]|0,h|0,t|0)|0;C=o;o=0;if(!(C&1)?(b[i>>1]=u,o=0,oa(54,m|0,q|0,c[r>>2]|0,h|0),u=o,o=0,!(u&1)):0){if(G){u=c[G+12>>2]|0;if((u|0)==(c[G+16>>2]|0)){o=0;C=Z(c[(c[H>>2]|0)+36>>2]|0,G|0)|0;Q=o;o=0;if(Q&1)break;else T=C}else T=OH(c[u>>2]|0)|0;if(nI(T,NH()|0)|0){c[e>>2]=0;U=1}else U=0}else U=1;do if(N){u=c[N+12>>2]|0;if((u|0)==(c[N+16>>2]|0)){o=0;C=Z(c[(c[N>>2]|0)+36>>2]|0,N|0)|0;Q=o;o=0;if(Q&1)break b;else V=C}else V=OH(c[u>>2]|0)|0;if(!(nI(V,NH()|0)|0))if(U)break;else{O=56;break}else{c[f>>2]=0;O=54;break}}else O=54;while(0);if((O|0)==54?U:0)O=56;if((O|0)==56)c[h>>2]=c[h>>2]|2;u=c[e>>2]|0;xR(n);xR(m);l=d;return u|0}}while(0);d=Pa()|0;v=d;w=z}xR(n);xR(m);$a(v|0);return 0}function eK(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;b=l;l=l+304|0;i=b+200|0;j=b+196|0;k=b+184|0;m=b+172|0;n=b+168|0;p=b+8|0;q=b+4|0;r=b;s=uJ(f)|0;aK(k,f,i,j);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;f=0;while(1){if((f|0)==3)break;c[m+(f<<2)>>2]=0;f=f+1|0}f=m+11|0;if((a[f>>0]|0)<0)t=(c[m+8>>2]&2147483647)+-1|0;else t=10;o=0;na(65,m|0,t|0,0);t=o;o=0;if(t&1){t=Pa()|0;u=t;v=z}else{t=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=t;c[q>>2]=p;c[r>>2]=0;w=m+4|0;x=m+8|0;y=c[d>>2]|0;A=t;t=y;B=y;a:while(1){if(t){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0)){o=0;C=Z(c[(c[t>>2]|0)+36>>2]|0,t|0)|0;D=o;o=0;if(D&1)break;else E=C}else E=OH(c[y>>2]|0)|0;if(nI(E,NH()|0)|0){c[d>>2]=0;F=0;G=0;H=1}else{F=t;G=B;H=0}}else{F=0;G=0;H=1}y=c[e>>2]|0;do if(y){C=c[y+12>>2]|0;if((C|0)==(c[y+16>>2]|0)){o=0;D=Z(c[(c[y>>2]|0)+36>>2]|0,y|0)|0;I=o;o=0;if(I&1)break a;else J=D}else J=OH(c[C>>2]|0)|0;if(!(nI(J,NH()|0)|0))if(H){K=y;break}else{L=A;M=y;N=37;break a}else{c[e>>2]=0;N=20;break}}else N=20;while(0);if((N|0)==20){N=0;if(H){L=A;M=0;N=37;break}else K=0}y=a[f>>0]|0;C=y<<24>>24<0?c[w>>2]|0:y&255;if((c[n>>2]|0)==(A+C|0)){o=0;na(65,m|0,C<<1|0,0);y=o;o=0;if(y&1)break;if((a[f>>0]|0)<0)O=(c[x>>2]&2147483647)+-1|0;else O=10;o=0;na(65,m|0,O|0,0);y=o;o=0;if(y&1)break;y=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=y+C;P=y}else P=A;y=F+12|0;C=c[y>>2]|0;D=F+16|0;if((C|0)==(c[D>>2]|0)){o=0;I=Z(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;Q=o;o=0;if(Q&1)break;else R=I}else R=OH(c[C>>2]|0)|0;o=0;C=ha(3,R|0,s|0,P|0,n|0,r|0,c[j>>2]|0,k|0,p|0,q|0,i|0)|0;I=o;o=0;if(I&1)break;if(C|0){L=P;M=K;N=37;break}C=c[y>>2]|0;if((C|0)==(c[D>>2]|0)){o=0;Z(c[(c[F>>2]|0)+40>>2]|0,F|0)|0;D=o;o=0;if(D&1)break;else{A=P;t=F;B=G;continue}}else{c[y>>2]=C+4;OH(c[C>>2]|0)|0;A=P;t=F;B=G;continue}}b:do if((N|0)==37){B=a[k+11>>0]|0;if((B<<24>>24<0?c[k+4>>2]|0:B&255)|0?(B=c[q>>2]|0,(B-p|0)<160):0){t=c[r>>2]|0;c[q>>2]=B+4;c[B>>2]=t}o=0;t=aa(57,L|0,c[n>>2]|0,g|0,s|0)|0;B=z;P=o;o=0;if(!(P&1)?(P=h,c[P>>2]=t,c[P+4>>2]=B,o=0,oa(54,k|0,p|0,c[q>>2]|0,g|0),B=o,o=0,!(B&1)):0){if(F){B=c[F+12>>2]|0;if((B|0)==(c[F+16>>2]|0)){o=0;P=Z(c[(c[G>>2]|0)+36>>2]|0,F|0)|0;t=o;o=0;if(t&1)break;else S=P}else S=OH(c[B>>2]|0)|0;if(nI(S,NH()|0)|0){c[d>>2]=0;T=1}else T=0}else T=1;do if(M){B=c[M+12>>2]|0;if((B|0)==(c[M+16>>2]|0)){o=0;P=Z(c[(c[M>>2]|0)+36>>2]|0,M|0)|0;t=o;o=0;if(t&1)break b;else U=P}else U=OH(c[B>>2]|0)|0;if(!(nI(U,NH()|0)|0))if(T)break;else{N=56;break}else{c[e>>2]=0;N=54;break}}else N=54;while(0);if((N|0)==54?T:0)N=56;if((N|0)==56)c[g>>2]=c[g>>2]|2;B=c[d>>2]|0;xR(m);xR(k);l=b;return B|0}}while(0);b=Pa()|0;u=b;v=z}xR(m);xR(k);$a(u|0);return 0}function fK(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;b=l;l=l+304|0;i=b+200|0;j=b+196|0;k=b+184|0;m=b+172|0;n=b+168|0;p=b+8|0;q=b+4|0;r=b;s=uJ(f)|0;aK(k,f,i,j);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;f=0;while(1){if((f|0)==3)break;c[m+(f<<2)>>2]=0;f=f+1|0}f=m+11|0;if((a[f>>0]|0)<0)t=(c[m+8>>2]&2147483647)+-1|0;else t=10;o=0;na(65,m|0,t|0,0);t=o;o=0;if(t&1){t=Pa()|0;u=t;v=z}else{t=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=t;c[q>>2]=p;c[r>>2]=0;w=m+4|0;x=m+8|0;y=c[d>>2]|0;A=t;t=y;B=y;a:while(1){if(t){y=c[t+12>>2]|0;if((y|0)==(c[t+16>>2]|0)){o=0;C=Z(c[(c[t>>2]|0)+36>>2]|0,t|0)|0;D=o;o=0;if(D&1)break;else E=C}else E=OH(c[y>>2]|0)|0;if(nI(E,NH()|0)|0){c[d>>2]=0;F=0;G=0;H=1}else{F=t;G=B;H=0}}else{F=0;G=0;H=1}y=c[e>>2]|0;do if(y){C=c[y+12>>2]|0;if((C|0)==(c[y+16>>2]|0)){o=0;D=Z(c[(c[y>>2]|0)+36>>2]|0,y|0)|0;I=o;o=0;if(I&1)break a;else J=D}else J=OH(c[C>>2]|0)|0;if(!(nI(J,NH()|0)|0))if(H){K=y;break}else{L=A;M=y;N=37;break a}else{c[e>>2]=0;N=20;break}}else N=20;while(0);if((N|0)==20){N=0;if(H){L=A;M=0;N=37;break}else K=0}y=a[f>>0]|0;C=y<<24>>24<0?c[w>>2]|0:y&255;if((c[n>>2]|0)==(A+C|0)){o=0;na(65,m|0,C<<1|0,0);y=o;o=0;if(y&1)break;if((a[f>>0]|0)<0)O=(c[x>>2]&2147483647)+-1|0;else O=10;o=0;na(65,m|0,O|0,0);y=o;o=0;if(y&1)break;y=(a[f>>0]|0)<0?c[m>>2]|0:m;c[n>>2]=y+C;P=y}else P=A;y=F+12|0;C=c[y>>2]|0;D=F+16|0;if((C|0)==(c[D>>2]|0)){o=0;I=Z(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;Q=o;o=0;if(Q&1)break;else R=I}else R=OH(c[C>>2]|0)|0;o=0;C=ha(3,R|0,s|0,P|0,n|0,r|0,c[j>>2]|0,k|0,p|0,q|0,i|0)|0;I=o;o=0;if(I&1)break;if(C|0){L=P;M=K;N=37;break}C=c[y>>2]|0;if((C|0)==(c[D>>2]|0)){o=0;Z(c[(c[F>>2]|0)+40>>2]|0,F|0)|0;D=o;o=0;if(D&1)break;else{A=P;t=F;B=G;continue}}else{c[y>>2]=C+4;OH(c[C>>2]|0)|0;A=P;t=F;B=G;continue}}b:do if((N|0)==37){B=a[k+11>>0]|0;if((B<<24>>24<0?c[k+4>>2]|0:B&255)|0?(B=c[q>>2]|0,(B-p|0)<160):0){t=c[r>>2]|0;c[q>>2]=B+4;c[B>>2]=t}o=0;t=aa(58,L|0,c[n>>2]|0,g|0,s|0)|0;B=o;o=0;if(!(B&1)?(c[h>>2]=t,o=0,oa(54,k|0,p|0,c[q>>2]|0,g|0),t=o,o=0,!(t&1)):0){if(F){t=c[F+12>>2]|0;if((t|0)==(c[F+16>>2]|0)){o=0;B=Z(c[(c[G>>2]|0)+36>>2]|0,F|0)|0;P=o;o=0;if(P&1)break;else S=B}else S=OH(c[t>>2]|0)|0;if(nI(S,NH()|0)|0){c[d>>2]=0;T=1}else T=0}else T=1;do if(M){t=c[M+12>>2]|0;if((t|0)==(c[M+16>>2]|0)){o=0;B=Z(c[(c[M>>2]|0)+36>>2]|0,M|0)|0;P=o;o=0;if(P&1)break b;else U=B}else U=OH(c[t>>2]|0)|0;if(!(nI(U,NH()|0)|0))if(T)break;else{N=56;break}else{c[e>>2]=0;N=54;break}}else N=54;while(0);if((N|0)==54?T:0)N=56;if((N|0)==56)c[g>>2]=c[g>>2]|2;t=c[d>>2]|0;xR(m);xR(k);l=b;return t|0}}while(0);b=Pa()|0;u=b;v=z}xR(m);xR(k);$a(u|0);return 0}function gK(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,$=0,aa=0,ba=0,ca=0,da=0;j=l;l=l+112|0;k=j;m=(f-e|0)/12|0;do if(m>>>0>100){n=BE(m)|0;if(!n){o=0;ka(4);o=0;p=Pa()|0;q=p;r=z;break}else{s=n;t=n;u=5;break}}else{s=k;t=0;u=5}while(0);if((u|0)==5){k=e;n=s;p=0;v=m;while(1){if((k|0)==(f|0))break;m=a[k+8+3>>0]|0;if(m<<24>>24<0)w=c[k+4>>2]|0;else w=m&255;if(!w){a[n>>0]=2;x=p+1|0;y=v+-1|0}else{a[n>>0]=1;x=p;y=v}k=k+12|0;n=n+1|0;p=x;v=y}y=0;x=p;p=v;a:while(1){v=c[b>>2]|0;do if(v){n=c[v+12>>2]|0;if((n|0)==(c[v+16>>2]|0)){o=0;k=Z(c[(c[v>>2]|0)+36>>2]|0,v|0)|0;w=o;o=0;if(w&1)break a;else A=k}else A=OH(c[n>>2]|0)|0;if(nI(A,NH()|0)|0){c[b>>2]=0;B=1;break}else{B=(c[b>>2]|0)==0;break}}else B=1;while(0);v=c[d>>2]|0;if(v){n=c[v+12>>2]|0;if((n|0)==(c[v+16>>2]|0)){o=0;k=Z(c[(c[v>>2]|0)+36>>2]|0,v|0)|0;w=o;o=0;if(w&1)break;else C=k}else C=OH(c[n>>2]|0)|0;if(nI(C,NH()|0)|0){c[d>>2]=0;D=0;E=1}else{D=v;E=0}}else{D=0;E=1}F=c[b>>2]|0;if(!((p|0)!=0&(B^E))){u=29;break}v=c[F+12>>2]|0;if((v|0)==(c[F+16>>2]|0)){o=0;n=Z(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;k=o;o=0;if(k&1)break;else G=n}else G=OH(c[v>>2]|0)|0;if(!i){o=0;v=_(c[(c[g>>2]|0)+28>>2]|0,g|0,G|0)|0;n=o;o=0;if(n&1)break;else H=v}else H=G;v=y+1|0;n=e;k=0;w=s;m=x;I=p;while(1){if((n|0)==(f|0))break;do if((a[w>>0]|0)==1){J=n+8+3|0;if((a[J>>0]|0)<0)K=c[n>>2]|0;else K=n;L=c[K+(y<<2)>>2]|0;if(!i){o=0;M=_(c[(c[g>>2]|0)+28>>2]|0,g|0,L|0)|0;N=o;o=0;if(N&1)break a;else O=M}else O=L;if((H|0)!=(O|0)){a[w>>0]=0;P=k;Q=m;R=I+-1|0;break}L=a[J>>0]|0;if(L<<24>>24<0)S=c[n+4>>2]|0;else S=L&255;if((S|0)==(v|0)){a[w>>0]=2;P=1;Q=m+1|0;R=I+-1|0}else{P=1;Q=m;R=I}}else{P=k;Q=m;R=I}while(0);n=n+12|0;k=P;w=w+1|0;m=Q;I=R}if(!k){y=v;x=m;p=I;continue}w=c[b>>2]|0;n=w+12|0;L=c[n>>2]|0;if((L|0)==(c[w+16>>2]|0)){o=0;Z(c[(c[w>>2]|0)+40>>2]|0,w|0)|0;w=o;o=0;if(w&1)break}else{c[n>>2]=L+4;OH(c[L>>2]|0)|0}if((m+I|0)>>>0>1){T=e;U=s;V=m}else{y=v;x=m;p=I;continue}while(1){if((T|0)==(f|0)){y=v;x=V;p=I;continue a}if((a[U>>0]|0)==2){L=a[T+8+3>>0]|0;if(L<<24>>24<0)W=c[T+4>>2]|0;else W=L&255;if((W|0)!=(v|0)){a[U>>0]=0;X=V+-1|0}else X=V}else X=V;T=T+12|0;U=U+1|0;V=X}}b:do if((u|0)==29){do if(F){X=c[F+12>>2]|0;if((X|0)==(c[F+16>>2]|0)){o=0;V=Z(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;U=o;o=0;if(U&1)break b;else Y=V}else Y=OH(c[X>>2]|0)|0;if(nI(Y,NH()|0)|0){c[b>>2]=0;$=1;break}else{$=(c[b>>2]|0)==0;break}}else $=1;while(0);do if(D){X=c[D+12>>2]|0;if((X|0)==(c[D+16>>2]|0)){o=0;V=Z(c[(c[D>>2]|0)+36>>2]|0,D|0)|0;U=o;o=0;if(U&1)break b;else aa=V}else aa=OH(c[X>>2]|0)|0;if(!(nI(aa,NH()|0)|0))if($){ba=e;ca=s;break}else{u=78;break}else{c[d>>2]=0;u=76;break}}else u=76;while(0);if((u|0)==76)if($)u=78;else{ba=e;ca=s}if((u|0)==78){c[h>>2]=c[h>>2]|2;ba=e;ca=s}while(1){if((ba|0)==(f|0)){u=82;break}if((a[ca>>0]|0)==2){da=ba;break}ba=ba+12|0;ca=ca+1|0}if((u|0)==82){c[h>>2]=c[h>>2]|4;da=f}if(t|0)CE(t);l=j;return da|0}while(0);da=Pa()|0;j=z;if(!t){q=da;r=j}else{CE(t);q=da;r=j}}$a(q|0);return 0}function hK(a){a=a|0;GI(a);return}function iK(a){a=a|0;GI(a);mR(a);return}function jK(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0;h=l;l=l+16|0;i=h+4|0;j=h;a:do if(!(c[e+4>>2]&1)){k=c[(c[b>>2]|0)+24>>2]|0;c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];m=id[k&63](b,i,e,f,g&1)|0}else{mI(i,e);o=0;k=_(93,i|0,102984)|0;n=o;o=0;do if(!(n&1)){$I(i);p=c[k>>2]|0;if(g)sd[c[p+24>>2]&255](i,k);else sd[c[p+28>>2]&255](i,k);p=i+11|0;q=a[p>>0]|0;r=c[i>>2]|0;s=i+4|0;t=q<<24>>24<0?r:i;u=q;q=r;while(1){r=u<<24>>24<0;if((t|0)==((r?q:i)+(r?c[s>>2]|0:u&255)|0)){v=9;break}r=a[t>>0]|0;w=c[d>>2]|0;if(w|0){x=w+24|0;y=c[x>>2]|0;if((y|0)==(c[w+28>>2]|0)){A=c[(c[w>>2]|0)+52>>2]|0;B=KH(r)|0;o=0;C=_(A|0,w|0,B|0)|0;B=o;o=0;if(B&1){v=18;break}else D=C}else{c[x>>2]=y+1;a[y>>0]=r;D=KH(r)|0}if(lI(D,JH()|0)|0)c[d>>2]=0}t=t+1|0;u=a[p>>0]|0;q=c[i>>2]|0}if((v|0)==9){q=c[d>>2]|0;xR(i);m=q;break a}else if((v|0)==18){q=Pa()|0;p=z;xR(i);E=p;F=q;break}}else{q=Pa()|0;p=z;$I(i);E=p;F=q}while(0);$a(F|0)}while(0);l=h;return m|0}function kK(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;b=l;l=l+64|0;h=b;i=b+52|0;j=b+39|0;k=b+16|0;m=b+12|0;n=b+4|0;p=b+8|0;a[i>>0]=a[90196]|0;a[i+1>>0]=a[90197]|0;a[i+2>>0]=a[90198]|0;a[i+3>>0]=a[90199]|0;a[i+4>>0]=a[90200]|0;a[i+5>>0]=a[90201]|0;wK(i+1|0,90202,1,c[e+4>>2]|0);q=bJ()|0;c[h>>2]=g;g=j+(rK(j,13,q,i,h)|0)|0;i=sK(j,g,e)|0;mI(h,e);o=0;ra(3,j|0,i|0,g|0,k|0,m|0,n|0,h|0);g=o;o=0;if(g&1){g=Pa()|0;$I(h);$a(g|0)}else{$I(h);c[p>>2]=c[d>>2];d=c[m>>2]|0;m=c[n>>2]|0;c[h>>2]=c[p>>2];p=ie(h,k,d,m,e,f)|0;l=b;return p|0}return 0}function lK(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0;a=l;l=l+96|0;h=a+8|0;i=a;j=a+71|0;k=a+28|0;m=a+24|0;n=a+16|0;p=a+20|0;q=i;c[q>>2]=37;c[q+4>>2]=0;wK(i+1|0,90193,1,c[d+4>>2]|0);q=bJ()|0;r=h;c[r>>2]=f;c[r+4>>2]=g;g=j+(rK(j,23,q,i,h)|0)|0;i=sK(j,g,d)|0;mI(h,d);o=0;ra(3,j|0,i|0,g|0,k|0,m|0,n|0,h|0);g=o;o=0;if(g&1){g=Pa()|0;$I(h);$a(g|0)}else{$I(h);c[p>>2]=c[b>>2];b=c[m>>2]|0;m=c[n>>2]|0;c[h>>2]=c[p>>2];p=ie(h,k,b,m,d,e)|0;l=a;return p|0}return 0}function mK(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;b=l;l=l+64|0;h=b;i=b+52|0;j=b+40|0;k=b+16|0;m=b+12|0;n=b+4|0;p=b+8|0;a[i>>0]=a[90196]|0;a[i+1>>0]=a[90197]|0;a[i+2>>0]=a[90198]|0;a[i+3>>0]=a[90199]|0;a[i+4>>0]=a[90200]|0;a[i+5>>0]=a[90201]|0;wK(i+1|0,90202,0,c[e+4>>2]|0);q=bJ()|0;c[h>>2]=g;g=j+(rK(j,12,q,i,h)|0)|0;i=sK(j,g,e)|0;mI(h,e);o=0;ra(3,j|0,i|0,g|0,k|0,m|0,n|0,h|0);g=o;o=0;if(g&1){g=Pa()|0;$I(h);$a(g|0)}else{$I(h);c[p>>2]=c[d>>2];d=c[m>>2]|0;m=c[n>>2]|0;c[h>>2]=c[p>>2];p=ie(h,k,d,m,e,f)|0;l=b;return p|0}return 0}function nK(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0;a=l;l=l+96|0;h=a+8|0;i=a;j=a+71|0;k=a+28|0;m=a+24|0;n=a+16|0;p=a+20|0;q=i;c[q>>2]=37;c[q+4>>2]=0;wK(i+1|0,90193,0,c[d+4>>2]|0);q=bJ()|0;r=h;c[r>>2]=f;c[r+4>>2]=g;g=j+(rK(j,23,q,i,h)|0)|0;i=sK(j,g,d)|0;mI(h,d);o=0;ra(3,j|0,i|0,g|0,k|0,m|0,n|0,h|0);g=o;o=0;if(g&1){g=Pa()|0;$I(h);$a(g|0)}else{$I(h);c[p>>2]=c[b>>2];b=c[m>>2]|0;m=c[n>>2]|0;c[h>>2]=c[p>>2];p=ie(h,k,b,m,d,e)|0;l=a;return p|0}return 0}function oK(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var g=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;a=l;l=l+176|0;g=a+72|0;i=a+48|0;j=a+32|0;k=a+24|0;m=a+8|0;n=a;p=a+134|0;q=a+68|0;r=a+76|0;s=a+64|0;t=a+60|0;u=a+56|0;v=n;c[v>>2]=37;c[v+4>>2]=0;v=tK(n+1|0,106450,c[d+4>>2]|0)|0;c[q>>2]=p;w=bJ()|0;if(v){c[m>>2]=c[d+8>>2];h[m+8>>3]=f;x=rK(p,30,w,n,m)|0}else{h[k>>3]=f;x=rK(p,30,w,n,k)|0}a:do if((x|0)>29){if(v){o=0;k=Y(36)|0;w=o;o=0;if(!(w&1)?(o=0,c[j>>2]=c[d+8>>2],h[j+8>>3]=f,w=aa(59,q|0,k|0,n|0,j|0)|0,k=o,o=0,!(k&1)):0){y=w;A=12}}else{o=0;w=Y(36)|0;k=o;o=0;if(!(k&1)?(o=0,h[i>>3]=f,k=aa(59,q|0,w|0,n|0,i|0)|0,w=o,o=0,!(w&1)):0){y=k;A=12}}do if((A|0)==12){k=c[q>>2]|0;if(!k){o=0;ka(4);o=0;break}else{B=y;C=k;D=k;A=15;break a}}while(0);k=Pa()|0;E=z;F=k}else{B=x;C=0;D=c[q>>2]|0;A=15}while(0);if((A|0)==15){q=D+B|0;x=sK(D,q,d)|0;do if((D|0)!=(p|0)){y=BE(B<<1)|0;if(!y){o=0;ka(4);o=0;i=Pa()|0;G=i;H=z;break}else{I=y;J=y;A=19;break}}else{I=r;J=0;A=19}while(0);if((A|0)==19){o=0;ma(132,g|0,d|0);r=o;o=0;do if(r&1){B=Pa()|0;K=B;L=z;A=29}else{o=0;ra(4,D|0,x|0,q|0,I|0,s|0,t|0,g|0);B=o;o=0;if(B&1){B=Pa()|0;p=z;$I(g);K=B;L=p;A=29;break}$I(g);c[u>>2]=c[b>>2];p=c[s>>2]|0;B=c[t>>2]|0;o=0;c[g>>2]=c[u>>2];y=ea(50,g|0,I|0,p|0,B|0,d|0,e|0)|0;B=o;o=0;if(B&1){B=Pa()|0;M=B;N=z;break}c[b>>2]=y;if(J|0)CE(J);if(C|0)CE(C);l=a;return y|0}while(0);if((A|0)==29){M=K;N=L}if(!J){G=M;H=N}else{CE(J);G=M;H=N}}if(!C){E=H;F=G}else{CE(C);E=H;F=G}}$a(F|0);return 0}function pK(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var g=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;a=l;l=l+176|0;g=a+72|0;i=a+48|0;j=a+32|0;k=a+24|0;m=a+8|0;n=a;p=a+134|0;q=a+68|0;r=a+76|0;s=a+64|0;t=a+60|0;u=a+56|0;v=n;c[v>>2]=37;c[v+4>>2]=0;v=tK(n+1|0,90191,c[d+4>>2]|0)|0;c[q>>2]=p;w=bJ()|0;if(v){c[m>>2]=c[d+8>>2];h[m+8>>3]=f;x=rK(p,30,w,n,m)|0}else{h[k>>3]=f;x=rK(p,30,w,n,k)|0}a:do if((x|0)>29){if(v){o=0;k=Y(36)|0;w=o;o=0;if(!(w&1)?(o=0,c[j>>2]=c[d+8>>2],h[j+8>>3]=f,w=aa(59,q|0,k|0,n|0,j|0)|0,k=o,o=0,!(k&1)):0){y=w;A=12}}else{o=0;w=Y(36)|0;k=o;o=0;if(!(k&1)?(o=0,h[i>>3]=f,k=aa(59,q|0,w|0,n|0,i|0)|0,w=o,o=0,!(w&1)):0){y=k;A=12}}do if((A|0)==12){k=c[q>>2]|0;if(!k){o=0;ka(4);o=0;break}else{B=y;C=k;D=k;A=15;break a}}while(0);k=Pa()|0;E=z;F=k}else{B=x;C=0;D=c[q>>2]|0;A=15}while(0);if((A|0)==15){q=D+B|0;x=sK(D,q,d)|0;do if((D|0)!=(p|0)){y=BE(B<<1)|0;if(!y){o=0;ka(4);o=0;i=Pa()|0;G=i;H=z;break}else{I=y;J=y;A=19;break}}else{I=r;J=0;A=19}while(0);if((A|0)==19){o=0;ma(132,g|0,d|0);r=o;o=0;do if(r&1){B=Pa()|0;K=B;L=z;A=29}else{o=0;ra(4,D|0,x|0,q|0,I|0,s|0,t|0,g|0);B=o;o=0;if(B&1){B=Pa()|0;p=z;$I(g);K=B;L=p;A=29;break}$I(g);c[u>>2]=c[b>>2];p=c[s>>2]|0;B=c[t>>2]|0;o=0;c[g>>2]=c[u>>2];y=ea(50,g|0,I|0,p|0,B|0,d|0,e|0)|0;B=o;o=0;if(B&1){B=Pa()|0;M=B;N=z;break}c[b>>2]=y;if(J|0)CE(J);if(C|0)CE(C);l=a;return y|0}while(0);if((A|0)==29){M=K;N=L}if(!J){G=M;H=N}else{CE(J);G=M;H=N}}if(!C){E=H;F=G}else{CE(C);E=H;F=G}}$a(F|0);return 0}function qK(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;b=l;l=l+80|0;h=b;i=b+68|0;j=b+48|0;k=b+8|0;m=b+4|0;a[i>>0]=a[90185]|0;a[i+1>>0]=a[90186]|0;a[i+2>>0]=a[90187]|0;a[i+3>>0]=a[90188]|0;a[i+4>>0]=a[90189]|0;a[i+5>>0]=a[90190]|0;n=bJ()|0;c[h>>2]=g;g=rK(j,20,n,i,h)|0;i=j+g|0;n=sK(j,i,e)|0;mI(h,e);o=0;p=_(93,h|0,102968)|0;q=o;o=0;if(q&1){q=Pa()|0;$I(h);$a(q|0)}else{$I(h);gd[c[(c[p>>2]|0)+32>>2]&63](p,j,i,k)|0;p=k+g|0;c[m>>2]=c[d>>2];c[h>>2]=c[m>>2];m=ie(h,k,(n|0)==(i|0)?p:k+(n-j)|0,p,e,f)|0;l=b;return m|0}return 0}function rK(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=l;l=l+16|0;h=g;c[h>>2]=f;f=nG(d)|0;d=cF(a,b,e,h)|0;if(f|0?(o=0,Z(240,f|0)|0,f=o,o=0,f&1):0){f=Qa(0)|0;Id(f)}l=g;return d|0}function sK(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;a:do switch((c[e+4>>2]&176)<<24>>24){case 16:{f=a[b>>0]|0;switch(f<<24>>24){case 43:case 45:{g=b+1|0;break a;break}default:{}}if((d-b|0)>1&f<<24>>24==48){switch(a[b+1>>0]|0){case 88:case 120:break;default:{h=7;break a}}g=b+2|0}else h=7;break}case 32:{g=d;break}default:h=7}while(0);if((h|0)==7)g=b;return g|0}function tK(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;if(!(d&2048))e=b;else{a[b>>0]=43;e=b+1|0}if(!(d&1024))f=e;else{a[e>>0]=35;f=e+1|0}e=d&260;b=(d&16384|0)!=0;d=(e|0)==260;if(d){g=0;h=f}else{a[f>>0]=46;a[f+1>>0]=42;g=1;h=f+2|0}f=c;c=h;while(1){h=a[f>>0]|0;if(!(h<<24>>24))break;a[c>>0]=h;f=f+1|0;c=c+1|0}a:do switch(e&511){case 4:{i=b?70:102;break}case 256:{i=b?69:101;break}default:if(d){i=b?65:97;break a}else{i=b?71:103;break a}}while(0);a[c>>0]=i;return g|0}function uK(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=l;l=l+16|0;g=f;c[g>>2]=e;e=nG(b)|0;o=0;b=$(116,a|0,d|0,g|0)|0;g=o;o=0;if(g&1){g=Pa()|0;if(e|0?(o=0,Z(240,e|0)|0,d=o,o=0,d&1):0){d=Qa(0)|0;Id(d)}$a(g|0)}else{if(e|0?(o=0,Z(240,e|0)|0,e=o,o=0,e&1):0){e=Qa(0)|0;Id(e)}l=f;return b|0}return 0}function vK(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;j=l;l=l+16|0;k=j;m=_I(i,102968)|0;n=_I(i,102984)|0;sd[c[(c[n>>2]|0)+20>>2]&255](k,n);c[h>>2]=f;i=a[b>>0]|0;switch(i<<24>>24){case 43:case 45:{o=0;p=_(c[(c[m>>2]|0)+28>>2]|0,m|0,i|0)|0;i=o;o=0;if(!(i&1)){i=c[h>>2]|0;c[h>>2]=i+1;a[i>>0]=p;q=b+1|0;r=4}break}default:{q=b;r=4}}a:do if((r|0)==4){p=e;b:do if((p-q|0)>1?(a[q>>0]|0)==48:0){i=q+1|0;switch(a[i>>0]|0){case 88:case 120:break;default:{s=q;r=15;break b}}o=0;t=_(c[(c[m>>2]|0)+28>>2]|0,m|0,48)|0;u=o;o=0;if(u&1)break a;u=c[h>>2]|0;c[h>>2]=u+1;a[u>>0]=t;t=q+2|0;o=0;u=_(c[(c[m>>2]|0)+28>>2]|0,m|0,a[i>>0]|0)|0;i=o;o=0;if(i&1)break a;i=c[h>>2]|0;c[h>>2]=i+1;a[i>>0]=u;u=t;while(1){if(u>>>0>=e>>>0){v=t;w=u;break b}i=a[u>>0]|0;o=0;x=Y(36)|0;y=o;o=0;if(y&1)break a;o=0;y=_(130,i<<24>>24|0,x|0)|0;x=o;o=0;if(x&1)break a;if(!y){v=t;w=u;break b}u=u+1|0}}else{s=q;r=15}while(0);c:do if((r|0)==15)while(1){r=0;if(s>>>0>=e>>>0){v=q;w=s;break c}u=a[s>>0]|0;o=0;t=Y(36)|0;y=o;o=0;if(y&1)break a;o=0;y=_(131,u<<24>>24|0,t|0)|0;t=o;o=0;if(t&1)break a;if(!y){v=q;w=s;break c}s=s+1|0;r=15}while(0);y=k+11|0;t=a[y>>0]|0;u=k+4|0;d:do if((t<<24>>24<0?c[u>>2]|0:t&255)|0){e:do if((v|0)!=(w|0)){x=w;i=v;while(1){z=x+-1|0;if(i>>>0>=z>>>0)break e;A=a[i>>0]|0;a[i>>0]=a[z>>0]|0;a[z>>0]=A;x=z;i=i+1|0}}while(0);o=0;i=Z(c[(c[n>>2]|0)+16>>2]|0,n|0)|0;x=o;o=0;if(x&1)break a;x=v;z=0;A=0;while(1){if(x>>>0>=w>>>0)break;B=a[((a[y>>0]|0)<0?c[k>>2]|0:k)+z>>0]|0;if(B<<24>>24>0&(A|0)==(B<<24>>24|0)){B=c[h>>2]|0;c[h>>2]=B+1;a[B>>0]=i;B=a[y>>0]|0;C=z+(z>>>0<((B<<24>>24<0?c[u>>2]|0:B&255)+-1|0)>>>0&1)|0;D=0}else{C=z;D=A}o=0;B=_(c[(c[m>>2]|0)+28>>2]|0,m|0,a[x>>0]|0)|0;E=o;o=0;if(E&1)break a;E=c[h>>2]|0;c[h>>2]=E+1;a[E>>0]=B;x=x+1|0;z=C;A=D+1|0}A=f+(v-b)|0;z=c[h>>2]|0;if((A|0)==(z|0))F=m;else{x=z;z=A;while(1){A=x+-1|0;if(z>>>0>=A>>>0){F=m;break d}i=a[z>>0]|0;a[z>>0]=a[A>>0]|0;a[A>>0]=i;x=A;z=z+1|0}}}else{o=0;aa(c[(c[m>>2]|0)+32>>2]|0,m|0,v|0,w|0,c[h>>2]|0)|0;z=o;o=0;if(z&1)break a;c[h>>2]=(c[h>>2]|0)+(w-v);F=m}while(0);u=w;while(1){if(u>>>0>=e>>>0){G=u;break}y=a[u>>0]|0;if(y<<24>>24==46){r=39;break}o=0;t=_(c[(c[F>>2]|0)+28>>2]|0,m|0,y|0)|0;y=o;o=0;if(y&1)break a;y=c[h>>2]|0;c[h>>2]=y+1;a[y>>0]=t;u=u+1|0}if((r|0)==39){o=0;t=Z(c[(c[n>>2]|0)+12>>2]|0,n|0)|0;y=o;o=0;if(y&1)break;y=c[h>>2]|0;c[h>>2]=y+1;a[y>>0]=t;G=u+1|0}o=0;aa(c[(c[m>>2]|0)+32>>2]|0,m|0,G|0,e|0,c[h>>2]|0)|0;t=o;o=0;if(!(t&1)){t=(c[h>>2]|0)+(p-G)|0;c[h>>2]=t;c[g>>2]=(d|0)==(e|0)?t:f+(d-b)|0;xR(k);l=j;return}}while(0);j=Pa()|0;xR(k);$a(j|0)}function wK(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if(!(e&2048))f=b;else{a[b>>0]=43;f=b+1|0}if(!(e&512)){g=c;h=f}else{a[f>>0]=35;g=c;h=f+1|0}while(1){f=a[g>>0]|0;if(!(f<<24>>24))break;a[h>>0]=f;g=g+1|0;h=h+1|0}switch(e&74){case 64:{i=111;break}case 8:{i=e&16384|0?88:120;break}default:i=d?100:117}a[h>>0]=i;return}function xK(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;j=l;l=l+16|0;k=j;m=_I(i,102968)|0;n=_I(i,102984)|0;sd[c[(c[n>>2]|0)+20>>2]&255](k,n);i=k+11|0;p=a[i>>0]|0;q=k+4|0;a:do if(!((p<<24>>24<0?c[q>>2]|0:p&255)|0)){o=0;aa(c[(c[m>>2]|0)+32>>2]|0,m|0,b|0,e|0,f|0)|0;r=o;o=0;if(r&1)s=28;else{r=b;t=f+(e-r)|0;c[h>>2]=t;u=r;v=t;s=27}}else{c[h>>2]=f;t=a[b>>0]|0;switch(t<<24>>24){case 43:case 45:{o=0;r=_(c[(c[m>>2]|0)+28>>2]|0,m|0,t|0)|0;t=o;o=0;if(t&1){s=28;break a}t=c[h>>2]|0;c[h>>2]=t+1;a[t>>0]=r;w=b+1|0;break}default:w=b}b:do if((e-w|0)>1?(a[w>>0]|0)==48:0){r=w+1|0;switch(a[r>>0]|0){case 88:case 120:break;default:{x=w;break b}}o=0;t=_(c[(c[m>>2]|0)+28>>2]|0,m|0,48)|0;y=o;o=0;if(y&1){s=28;break a}y=c[h>>2]|0;c[h>>2]=y+1;a[y>>0]=t;o=0;t=_(c[(c[m>>2]|0)+28>>2]|0,m|0,a[r>>0]|0)|0;r=o;o=0;if(r&1){s=28;break a}r=c[h>>2]|0;c[h>>2]=r+1;a[r>>0]=t;x=w+2|0}else x=w;while(0);c:do if((x|0)!=(e|0)){t=e;r=x;while(1){y=t+-1|0;if(r>>>0>=y>>>0)break c;z=a[r>>0]|0;a[r>>0]=a[y>>0]|0;a[y>>0]=z;t=y;r=r+1|0}}while(0);o=0;r=Z(c[(c[n>>2]|0)+16>>2]|0,n|0)|0;t=o;o=0;if(!(t&1)){t=x;y=0;z=0;while(1){if(t>>>0>=e>>>0)break;A=a[((a[i>>0]|0)<0?c[k>>2]|0:k)+y>>0]|0;if(A<<24>>24!=0&(z|0)==(A<<24>>24|0)){A=c[h>>2]|0;c[h>>2]=A+1;a[A>>0]=r;A=a[i>>0]|0;B=y+(y>>>0<((A<<24>>24<0?c[q>>2]|0:A&255)+-1|0)>>>0&1)|0;C=0}else{B=y;C=z}o=0;A=_(c[(c[m>>2]|0)+28>>2]|0,m|0,a[t>>0]|0)|0;D=o;o=0;if(D&1){s=28;break a}D=c[h>>2]|0;c[h>>2]=D+1;a[D>>0]=A;t=t+1|0;y=B;z=C+1|0}z=b;y=f+(x-z)|0;t=c[h>>2]|0;if((y|0)==(t|0)){u=z;v=y;s=27}else{r=t;t=y;while(1){y=r+-1|0;if(t>>>0>=y>>>0)break;A=a[t>>0]|0;a[t>>0]=a[y>>0]|0;a[y>>0]=A;r=y;t=t+1|0}u=z;v=c[h>>2]|0;s=27}}else s=28}while(0);if((s|0)==27){c[g>>2]=(d|0)==(e|0)?v:f+(d-u)|0;xR(k);l=j;return}else if((s|0)==28){s=Pa()|0;xR(k);$a(s|0)}}function yK(a){a=a|0;GI(a);return}function zK(a){a=a|0;GI(a);mR(a);return}function AK(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0;h=l;l=l+16|0;i=h+4|0;j=h;a:do if(!(c[e+4>>2]&1)){k=c[(c[b>>2]|0)+24>>2]|0;c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];m=id[k&63](b,i,e,f,g&1)|0}else{mI(i,e);o=0;k=_(93,i|0,103008)|0;n=o;o=0;do if(!(n&1)){$I(i);p=c[k>>2]|0;if(g)sd[c[p+24>>2]&255](i,k);else sd[c[p+28>>2]&255](i,k);p=i+8+3|0;q=a[p>>0]|0;r=c[i>>2]|0;s=i+4|0;t=q<<24>>24<0?r:i;u=q;q=r;while(1){r=u<<24>>24<0;if((t|0)==((r?q:i)+((r?c[s>>2]|0:u&255)<<2)|0)){v=9;break}r=c[t>>2]|0;w=c[d>>2]|0;if(w|0){x=w+24|0;y=c[x>>2]|0;if((y|0)==(c[w+28>>2]|0)){A=c[(c[w>>2]|0)+52>>2]|0;B=OH(r)|0;o=0;C=_(A|0,w|0,B|0)|0;B=o;o=0;if(B&1){v=18;break}else D=C}else{c[x>>2]=y+4;c[y>>2]=r;D=OH(r)|0}if(nI(D,NH()|0)|0)c[d>>2]=0}t=t+4|0;u=a[p>>0]|0;q=c[i>>2]|0}if((v|0)==9){q=c[d>>2]|0;KR(i);m=q;break a}else if((v|0)==18){q=Pa()|0;p=z;KR(i);E=p;F=q;break}}else{q=Pa()|0;p=z;$I(i);E=p;F=q}while(0);$a(F|0)}while(0);l=h;return m|0}function BK(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;b=l;l=l+128|0;h=b;i=b+122|0;j=b+108|0;k=b+16|0;m=b+12|0;n=b+4|0;p=b+8|0;a[i>>0]=a[90196]|0;a[i+1>>0]=a[90197]|0;a[i+2>>0]=a[90198]|0;a[i+3>>0]=a[90199]|0;a[i+4>>0]=a[90200]|0;a[i+5>>0]=a[90201]|0;wK(i+1|0,90202,1,c[e+4>>2]|0);q=bJ()|0;c[h>>2]=g;g=j+(rK(j,13,q,i,h)|0)|0;i=sK(j,g,e)|0;mI(h,e);o=0;ra(5,j|0,i|0,g|0,k|0,m|0,n|0,h|0);g=o;o=0;if(g&1){g=Pa()|0;$I(h);$a(g|0)}else{$I(h);c[p>>2]=c[d>>2];d=c[m>>2]|0;m=c[n>>2]|0;c[h>>2]=c[p>>2];p=IK(h,k,d,m,e,f)|0;l=b;return p|0}return 0}function CK(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0;a=l;l=l+224|0;h=a+8|0;i=a;j=a+200|0;k=a+28|0;m=a+24|0;n=a+16|0;p=a+20|0;q=i;c[q>>2]=37;c[q+4>>2]=0;wK(i+1|0,90193,1,c[d+4>>2]|0);q=bJ()|0;r=h;c[r>>2]=f;c[r+4>>2]=g;g=j+(rK(j,23,q,i,h)|0)|0;i=sK(j,g,d)|0;mI(h,d);o=0;ra(5,j|0,i|0,g|0,k|0,m|0,n|0,h|0);g=o;o=0;if(g&1){g=Pa()|0;$I(h);$a(g|0)}else{$I(h);c[p>>2]=c[b>>2];b=c[m>>2]|0;m=c[n>>2]|0;c[h>>2]=c[p>>2];p=IK(h,k,b,m,d,e)|0;l=a;return p|0}return 0}function DK(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;b=l;l=l+128|0;h=b;i=b+112|0;j=b+100|0;k=b+16|0;m=b+12|0;n=b+4|0;p=b+8|0;a[i>>0]=a[90196]|0;a[i+1>>0]=a[90197]|0;a[i+2>>0]=a[90198]|0;a[i+3>>0]=a[90199]|0;a[i+4>>0]=a[90200]|0;a[i+5>>0]=a[90201]|0;wK(i+1|0,90202,0,c[e+4>>2]|0);q=bJ()|0;c[h>>2]=g;g=j+(rK(j,12,q,i,h)|0)|0;i=sK(j,g,e)|0;mI(h,e);o=0;ra(5,j|0,i|0,g|0,k|0,m|0,n|0,h|0);g=o;o=0;if(g&1){g=Pa()|0;$I(h);$a(g|0)}else{$I(h);c[p>>2]=c[d>>2];d=c[m>>2]|0;m=c[n>>2]|0;c[h>>2]=c[p>>2];p=IK(h,k,d,m,e,f)|0;l=b;return p|0}return 0}function EK(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0;a=l;l=l+224|0;h=a+8|0;i=a;j=a+200|0;k=a+28|0;m=a+24|0;n=a+16|0;p=a+20|0;q=i;c[q>>2]=37;c[q+4>>2]=0;wK(i+1|0,90193,0,c[d+4>>2]|0);q=bJ()|0;r=h;c[r>>2]=f;c[r+4>>2]=g;g=j+(rK(j,23,q,i,h)|0)|0;i=sK(j,g,d)|0;mI(h,d);o=0;ra(5,j|0,i|0,g|0,k|0,m|0,n|0,h|0);g=o;o=0;if(g&1){g=Pa()|0;$I(h);$a(g|0)}else{$I(h);c[p>>2]=c[b>>2];b=c[m>>2]|0;m=c[n>>2]|0;c[h>>2]=c[p>>2];p=IK(h,k,b,m,d,e)|0;l=a;return p|0}return 0}function FK(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var g=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;a=l;l=l+336|0;g=a+300|0;i=a+48|0;j=a+32|0;k=a+24|0;m=a+8|0;n=a;p=a+304|0;q=a+296|0;r=a+68|0;s=a+64|0;t=a+60|0;u=a+56|0;v=n;c[v>>2]=37;c[v+4>>2]=0;v=tK(n+1|0,106450,c[d+4>>2]|0)|0;c[q>>2]=p;w=bJ()|0;if(v){c[m>>2]=c[d+8>>2];h[m+8>>3]=f;x=rK(p,30,w,n,m)|0}else{h[k>>3]=f;x=rK(p,30,w,n,k)|0}a:do if((x|0)>29){if(v){o=0;k=Y(36)|0;w=o;o=0;if(!(w&1)?(o=0,c[j>>2]=c[d+8>>2],h[j+8>>3]=f,w=aa(59,q|0,k|0,n|0,j|0)|0,k=o,o=0,!(k&1)):0){y=w;A=12}}else{o=0;w=Y(36)|0;k=o;o=0;if(!(k&1)?(o=0,h[i>>3]=f,k=aa(59,q|0,w|0,n|0,i|0)|0,w=o,o=0,!(w&1)):0){y=k;A=12}}do if((A|0)==12){k=c[q>>2]|0;if(!k){o=0;ka(4);o=0;break}else{B=y;C=k;D=k;A=15;break a}}while(0);k=Pa()|0;E=z;F=k}else{B=x;C=0;D=c[q>>2]|0;A=15}while(0);if((A|0)==15){q=D+B|0;x=sK(D,q,d)|0;do if((D|0)!=(p|0)){y=BE(B<<3)|0;if(!y){o=0;ka(4);o=0;i=Pa()|0;G=i;H=z;break}else{I=y;J=y;A=19;break}}else{I=r;J=0;A=19}while(0);if((A|0)==19){o=0;ma(132,g|0,d|0);r=o;o=0;do if(r&1){B=Pa()|0;K=B;L=z;A=29}else{o=0;ra(6,D|0,x|0,q|0,I|0,s|0,t|0,g|0);B=o;o=0;if(B&1){B=Pa()|0;p=z;$I(g);K=B;L=p;A=29;break}$I(g);c[u>>2]=c[b>>2];p=c[s>>2]|0;B=c[t>>2]|0;o=0;c[g>>2]=c[u>>2];y=ea(54,g|0,I|0,p|0,B|0,d|0,e|0)|0;B=o;o=0;if(B&1){B=Pa()|0;M=B;N=z;break}c[b>>2]=y;if(J|0)CE(J);if(C|0)CE(C);l=a;return y|0}while(0);if((A|0)==29){M=K;N=L}if(!J){G=M;H=N}else{CE(J);G=M;H=N}}if(!C){E=H;F=G}else{CE(C);E=H;F=G}}$a(F|0);return 0}function GK(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var g=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;a=l;l=l+336|0;g=a+300|0;i=a+48|0;j=a+32|0;k=a+24|0;m=a+8|0;n=a;p=a+304|0;q=a+296|0;r=a+68|0;s=a+64|0;t=a+60|0;u=a+56|0;v=n;c[v>>2]=37;c[v+4>>2]=0;v=tK(n+1|0,90191,c[d+4>>2]|0)|0;c[q>>2]=p;w=bJ()|0;if(v){c[m>>2]=c[d+8>>2];h[m+8>>3]=f;x=rK(p,30,w,n,m)|0}else{h[k>>3]=f;x=rK(p,30,w,n,k)|0}a:do if((x|0)>29){if(v){o=0;k=Y(36)|0;w=o;o=0;if(!(w&1)?(o=0,c[j>>2]=c[d+8>>2],h[j+8>>3]=f,w=aa(59,q|0,k|0,n|0,j|0)|0,k=o,o=0,!(k&1)):0){y=w;A=12}}else{o=0;w=Y(36)|0;k=o;o=0;if(!(k&1)?(o=0,h[i>>3]=f,k=aa(59,q|0,w|0,n|0,i|0)|0,w=o,o=0,!(w&1)):0){y=k;A=12}}do if((A|0)==12){k=c[q>>2]|0;if(!k){o=0;ka(4);o=0;break}else{B=y;C=k;D=k;A=15;break a}}while(0);k=Pa()|0;E=z;F=k}else{B=x;C=0;D=c[q>>2]|0;A=15}while(0);if((A|0)==15){q=D+B|0;x=sK(D,q,d)|0;do if((D|0)!=(p|0)){y=BE(B<<3)|0;if(!y){o=0;ka(4);o=0;i=Pa()|0;G=i;H=z;break}else{I=y;J=y;A=19;break}}else{I=r;J=0;A=19}while(0);if((A|0)==19){o=0;ma(132,g|0,d|0);r=o;o=0;do if(r&1){B=Pa()|0;K=B;L=z;A=29}else{o=0;ra(6,D|0,x|0,q|0,I|0,s|0,t|0,g|0);B=o;o=0;if(B&1){B=Pa()|0;p=z;$I(g);K=B;L=p;A=29;break}$I(g);c[u>>2]=c[b>>2];p=c[s>>2]|0;B=c[t>>2]|0;o=0;c[g>>2]=c[u>>2];y=ea(54,g|0,I|0,p|0,B|0,d|0,e|0)|0;B=o;o=0;if(B&1){B=Pa()|0;M=B;N=z;break}c[b>>2]=y;if(J|0)CE(J);if(C|0)CE(C);l=a;return y|0}while(0);if((A|0)==29){M=K;N=L}if(!J){G=M;H=N}else{CE(J);G=M;H=N}}if(!C){E=H;F=G}else{CE(C);E=H;F=G}}$a(F|0);return 0}function HK(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;b=l;l=l+192|0;h=b;i=b+176|0;j=b+156|0;k=b+4|0;m=b+152|0;a[i>>0]=a[90185]|0;a[i+1>>0]=a[90186]|0;a[i+2>>0]=a[90187]|0;a[i+3>>0]=a[90188]|0;a[i+4>>0]=a[90189]|0;a[i+5>>0]=a[90190]|0;n=bJ()|0;c[h>>2]=g;g=rK(j,20,n,i,h)|0;i=j+g|0;n=sK(j,i,e)|0;mI(h,e);o=0;p=_(93,h|0,103e3)|0;q=o;o=0;if(q&1){q=Pa()|0;$I(h);$a(q|0)}else{$I(h);gd[c[(c[p>>2]|0)+48>>2]&63](p,j,i,k)|0;p=k+(g<<2)|0;c[m>>2]=c[d>>2];c[h>>2]=c[m>>2];m=IK(h,k,(n|0)==(i|0)?p:k+(n-j<<2)|0,p,e,f)|0;l=b;return m|0}return 0}function IK(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;i=l;l=l+16|0;j=i+12|0;k=i;m=c[b>>2]|0;a:do if(!m)n=0;else{p=f;q=d;r=p-q>>2;s=g+12|0;t=c[s>>2]|0;u=(t|0)>(r|0)?t-r|0:0;r=e;t=r-q|0;q=t>>2;if((t|0)>0?(fd[c[(c[m>>2]|0)+48>>2]&127](m,d,q)|0)!=(q|0):0){c[b>>2]=0;n=0;break}do if((u|0)>0){c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;if(u>>>0>1073741807)vR(k);do if(u>>>0>=2){q=u+4&-4;if(q>>>0<=1073741823){t=kR(q<<2)|0;c[k>>2]=t;v=k+8|0;c[v>>2]=q|-2147483648;c[k+4>>2]=u;w=t;x=v+3|0;y=k;break}v=Ja(8)|0;o=0;ma(153,v|0,92198);t=o;o=0;if(t&1){t=Pa()|0;Sa(v|0);$a(t|0)}else{c[v>>2]=57580;Xa(v|0,7152,205)}}else{v=k+8+3|0;a[v>>0]=u;w=k;x=v;y=k}while(0);JK(w,u,h)|0;c[j>>2]=0;MI(w+(u<<2)|0,j);o=0;v=$(c[(c[m>>2]|0)+48>>2]|0,m|0,((a[x>>0]|0)<0?c[k>>2]|0:y)|0,u|0)|0;t=o;o=0;if(t&1){t=Pa()|0;KR(k);$a(t|0)}if((v|0)==(u|0)){KR(k);break}else{c[b>>2]=0;KR(k);n=0;break a}}while(0);u=p-r|0;v=u>>2;if((u|0)>0?(fd[c[(c[m>>2]|0)+48>>2]&127](m,e,v)|0)!=(v|0):0){c[b>>2]=0;n=0;break}c[s>>2]=0;n=m}while(0);l=i;return n|0}function JK(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if((b|0)!=0?(o=0,$(117,a|0,c|0,b|0)|0,b=o,o=0,b&1):0){b=Qa(0)|0;Id(b)}else d=a;return d|0}function KK(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;j=l;l=l+16|0;k=j;m=_I(i,103e3)|0;n=_I(i,103008)|0;sd[c[(c[n>>2]|0)+20>>2]&255](k,n);c[h>>2]=f;i=a[b>>0]|0;switch(i<<24>>24){case 43:case 45:{o=0;p=_(c[(c[m>>2]|0)+44>>2]|0,m|0,i|0)|0;i=o;o=0;if(!(i&1)){i=c[h>>2]|0;c[h>>2]=i+4;c[i>>2]=p;q=b+1|0;r=4}break}default:{q=b;r=4}}a:do if((r|0)==4){p=e;b:do if((p-q|0)>1?(a[q>>0]|0)==48:0){i=q+1|0;switch(a[i>>0]|0){case 88:case 120:break;default:{s=q;r=15;break b}}o=0;t=_(c[(c[m>>2]|0)+44>>2]|0,m|0,48)|0;u=o;o=0;if(u&1)break a;u=c[h>>2]|0;c[h>>2]=u+4;c[u>>2]=t;t=q+2|0;o=0;u=_(c[(c[m>>2]|0)+44>>2]|0,m|0,a[i>>0]|0)|0;i=o;o=0;if(i&1)break a;i=c[h>>2]|0;c[h>>2]=i+4;c[i>>2]=u;u=t;while(1){if(u>>>0>=e>>>0){v=t;w=u;break b}i=a[u>>0]|0;o=0;x=Y(36)|0;y=o;o=0;if(y&1)break a;o=0;y=_(130,i<<24>>24|0,x|0)|0;x=o;o=0;if(x&1)break a;if(!y){v=t;w=u;break b}u=u+1|0}}else{s=q;r=15}while(0);c:do if((r|0)==15)while(1){r=0;if(s>>>0>=e>>>0){v=q;w=s;break c}u=a[s>>0]|0;o=0;t=Y(36)|0;y=o;o=0;if(y&1)break a;o=0;y=_(131,u<<24>>24|0,t|0)|0;t=o;o=0;if(t&1)break a;if(!y){v=q;w=s;break c}s=s+1|0;r=15}while(0);y=k+11|0;t=a[y>>0]|0;u=k+4|0;d:do if((t<<24>>24<0?c[u>>2]|0:t&255)|0){e:do if((v|0)!=(w|0)){x=w;i=v;while(1){z=x+-1|0;if(i>>>0>=z>>>0)break e;A=a[i>>0]|0;a[i>>0]=a[z>>0]|0;a[z>>0]=A;x=z;i=i+1|0}}while(0);o=0;i=Z(c[(c[n>>2]|0)+16>>2]|0,n|0)|0;x=o;o=0;if(x&1)break a;x=v;z=0;A=0;while(1){if(x>>>0>=w>>>0)break;B=a[((a[y>>0]|0)<0?c[k>>2]|0:k)+z>>0]|0;if(B<<24>>24>0&(A|0)==(B<<24>>24|0)){B=c[h>>2]|0;c[h>>2]=B+4;c[B>>2]=i;B=a[y>>0]|0;C=z+(z>>>0<((B<<24>>24<0?c[u>>2]|0:B&255)+-1|0)>>>0&1)|0;D=0}else{C=z;D=A}o=0;B=_(c[(c[m>>2]|0)+44>>2]|0,m|0,a[x>>0]|0)|0;E=o;o=0;if(E&1)break a;E=c[h>>2]|0;c[h>>2]=E+4;c[E>>2]=B;x=x+1|0;z=C;A=D+1|0}A=f+(v-b<<2)|0;z=c[h>>2]|0;if((A|0)==(z|0)){F=m;G=A}else{x=z;i=A;while(1){A=x+-4|0;if(i>>>0>=A>>>0){F=m;G=z;break d}B=c[i>>2]|0;c[i>>2]=c[A>>2];c[A>>2]=B;x=A;i=i+4|0}}}else{o=0;aa(c[(c[m>>2]|0)+48>>2]|0,m|0,v|0,w|0,c[h>>2]|0)|0;i=o;o=0;if(i&1)break a;i=(c[h>>2]|0)+(w-v<<2)|0;c[h>>2]=i;F=m;G=i}while(0);u=w;y=G;while(1){if(u>>>0>=e>>>0){H=u;I=y;break}t=a[u>>0]|0;if(t<<24>>24==46){r=39;break}o=0;i=_(c[(c[F>>2]|0)+44>>2]|0,m|0,t|0)|0;t=o;o=0;if(t&1)break a;t=c[h>>2]|0;x=t+4|0;c[h>>2]=x;c[t>>2]=i;u=u+1|0;y=x}if((r|0)==39){o=0;y=Z(c[(c[n>>2]|0)+12>>2]|0,n|0)|0;x=o;o=0;if(x&1)break;x=c[h>>2]|0;i=x+4|0;c[h>>2]=i;c[x>>2]=y;H=u+1|0;I=i}o=0;aa(c[(c[m>>2]|0)+48>>2]|0,m|0,H|0,e|0,I|0)|0;i=o;o=0;if(!(i&1)){i=(c[h>>2]|0)+(p-H<<2)|0;c[h>>2]=i;c[g>>2]=(d|0)==(e|0)?i:f+(d-b<<2)|0;xR(k);l=j;return}}while(0);j=Pa()|0;xR(k);$a(j|0)}function LK(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;j=l;l=l+16|0;k=j;m=_I(i,103e3)|0;n=_I(i,103008)|0;sd[c[(c[n>>2]|0)+20>>2]&255](k,n);i=k+11|0;p=a[i>>0]|0;q=k+4|0;a:do if(!((p<<24>>24<0?c[q>>2]|0:p&255)|0)){o=0;aa(c[(c[m>>2]|0)+48>>2]|0,m|0,b|0,e|0,f|0)|0;r=o;o=0;if(r&1)s=28;else{r=b;t=f+(e-r<<2)|0;c[h>>2]=t;u=r;v=t;s=27}}else{c[h>>2]=f;t=a[b>>0]|0;switch(t<<24>>24){case 43:case 45:{o=0;r=_(c[(c[m>>2]|0)+44>>2]|0,m|0,t|0)|0;t=o;o=0;if(t&1){s=28;break a}t=c[h>>2]|0;c[h>>2]=t+4;c[t>>2]=r;w=b+1|0;break}default:w=b}b:do if((e-w|0)>1?(a[w>>0]|0)==48:0){r=w+1|0;switch(a[r>>0]|0){case 88:case 120:break;default:{x=w;break b}}o=0;t=_(c[(c[m>>2]|0)+44>>2]|0,m|0,48)|0;y=o;o=0;if(y&1){s=28;break a}y=c[h>>2]|0;c[h>>2]=y+4;c[y>>2]=t;o=0;t=_(c[(c[m>>2]|0)+44>>2]|0,m|0,a[r>>0]|0)|0;r=o;o=0;if(r&1){s=28;break a}r=c[h>>2]|0;c[h>>2]=r+4;c[r>>2]=t;x=w+2|0}else x=w;while(0);c:do if((x|0)!=(e|0)){t=e;r=x;while(1){y=t+-1|0;if(r>>>0>=y>>>0)break c;z=a[r>>0]|0;a[r>>0]=a[y>>0]|0;a[y>>0]=z;t=y;r=r+1|0}}while(0);o=0;r=Z(c[(c[n>>2]|0)+16>>2]|0,n|0)|0;t=o;o=0;if(!(t&1)){t=x;y=0;z=0;while(1){if(t>>>0>=e>>>0)break;A=a[((a[i>>0]|0)<0?c[k>>2]|0:k)+y>>0]|0;if(A<<24>>24!=0&(z|0)==(A<<24>>24|0)){A=c[h>>2]|0;c[h>>2]=A+4;c[A>>2]=r;A=a[i>>0]|0;B=y+(y>>>0<((A<<24>>24<0?c[q>>2]|0:A&255)+-1|0)>>>0&1)|0;C=0}else{B=y;C=z}o=0;A=_(c[(c[m>>2]|0)+44>>2]|0,m|0,a[t>>0]|0)|0;D=o;o=0;if(D&1){s=28;break a}D=c[h>>2]|0;c[h>>2]=D+4;c[D>>2]=A;t=t+1|0;y=B;z=C+1|0}z=b;y=f+(x-z<<2)|0;t=c[h>>2]|0;if((y|0)==(t|0)){u=z;v=y;s=27}else{r=t;t=y;while(1){y=r+-4|0;if(t>>>0>=y>>>0)break;A=c[t>>2]|0;c[t>>2]=c[y>>2];c[y>>2]=A;r=y;t=t+4|0}u=z;v=c[h>>2]|0;s=27}}else s=28}while(0);if((s|0)==27){c[g>>2]=(d|0)==(e|0)?v:f+(d-u<<2)|0;xR(k);l=j;return}else if((s|0)==28){s=Pa()|0;xR(k);$a(s|0)}}function MK(a){a=a|0;GI(a);return}function NK(a){a=a|0;GI(a);mR(a);return}function OK(a){a=a|0;return 2}function PK(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=fL(a,j,i,e,f,g,90721,90729)|0;l=h;return m|0}function QK(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0;i=l;l=l+16|0;j=i+12|0;k=i+8|0;m=i+4|0;n=i;o=b+8|0;p=dd[c[(c[o>>2]|0)+20>>2]&255](o)|0;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];e=a[p+11>>0]|0;d=e<<24>>24<0;o=d?c[p>>2]|0:p;q=o+(d?c[p+4>>2]|0:e&255)|0;c[k>>2]=c[m>>2];c[j>>2]=c[n>>2];n=fL(b,k,j,f,g,h,o,q)|0;l=i;return n|0}function RK(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;h=l;l=l+16|0;i=h+4|0;j=h;mI(i,e);o=0;e=_(93,i|0,102968)|0;k=o;o=0;if(k&1){k=Pa()|0;$I(i);$a(k|0)}else{$I(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];dL(a,g+24|0,b,i,f,e);l=h;return c[b>>2]|0}return 0}function SK(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;h=l;l=l+16|0;i=h+4|0;j=h;mI(i,e);o=0;e=_(93,i|0,102968)|0;k=o;o=0;if(k&1){k=Pa()|0;$I(i);$a(k|0)}else{$I(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];eL(a,g+16|0,b,i,f,e);l=h;return c[b>>2]|0}return 0}function TK(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;h=l;l=l+16|0;i=h+4|0;j=h;mI(i,e);o=0;e=_(93,i|0,102968)|0;k=o;o=0;if(k&1){k=Pa()|0;$I(i);$a(k|0)}else{$I(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];qL(a,g+20|0,b,i,f,e);l=h;return c[b>>2]|0}return 0}function UK(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0;j=l;l=l+144|0;k=j+128|0;m=j+112|0;n=j+124|0;p=j+120|0;q=j+116|0;r=j+108|0;s=j+104|0;t=j+100|0;u=j+96|0;v=j+92|0;w=j+88|0;x=j+84|0;y=j+80|0;z=j+76|0;A=j+72|0;B=j+68|0;C=j+64|0;D=j+60|0;E=j+56|0;F=j+52|0;G=j+48|0;H=j+44|0;I=j+40|0;J=j+36|0;K=j+32|0;L=j+28|0;M=j+24|0;N=j+20|0;O=j+16|0;P=j+12|0;Q=j+8|0;R=j+4|0;S=j;c[g>>2]=0;mI(k,f);o=0;T=_(93,k|0,102968)|0;U=o;o=0;if(U&1){U=Pa()|0;$I(k);$a(U|0)}$I(k);do switch(i<<24>>24|0){case 65:case 97:{c[n>>2]=c[e>>2];c[k>>2]=c[n>>2];dL(b,h+24|0,d,k,g,T);V=28;break}case 104:case 66:case 98:{c[p>>2]=c[e>>2];c[k>>2]=c[p>>2];eL(b,h+16|0,d,k,g,T);V=28;break}case 99:{U=b+8|0;W=dd[c[(c[U>>2]|0)+12>>2]&255](U)|0;c[q>>2]=c[d>>2];c[r>>2]=c[e>>2];U=a[W+11>>0]|0;X=U<<24>>24<0;Y=X?c[W>>2]|0:W;Z=Y+(X?c[W+4>>2]|0:U&255)|0;c[m>>2]=c[q>>2];c[k>>2]=c[r>>2];c[d>>2]=fL(b,m,k,f,g,h,Y,Z)|0;V=28;break}case 101:case 100:{c[s>>2]=c[e>>2];c[k>>2]=c[s>>2];gL(b,h+12|0,d,k,g,T);V=28;break}case 68:{c[t>>2]=c[d>>2];c[u>>2]=c[e>>2];c[m>>2]=c[t>>2];c[k>>2]=c[u>>2];c[d>>2]=fL(b,m,k,f,g,h,90681,90689)|0;V=28;break}case 70:{c[v>>2]=c[d>>2];c[w>>2]=c[e>>2];c[m>>2]=c[v>>2];c[k>>2]=c[w>>2];c[d>>2]=fL(b,m,k,f,g,h,90689,90697)|0;V=28;break}case 72:{c[x>>2]=c[e>>2];c[k>>2]=c[x>>2];hL(b,h+8|0,d,k,g,T);V=28;break}case 73:{c[y>>2]=c[e>>2];c[k>>2]=c[y>>2];iL(b,h+8|0,d,k,g,T);V=28;break}case 106:{c[z>>2]=c[e>>2];c[k>>2]=c[z>>2];jL(b,h+28|0,d,k,g,T);V=28;break}case 109:{c[A>>2]=c[e>>2];c[k>>2]=c[A>>2];kL(b,h+16|0,d,k,g,T);V=28;break}case 77:{c[B>>2]=c[e>>2];c[k>>2]=c[B>>2];lL(b,h+4|0,d,k,g,T);V=28;break}case 116:case 110:{c[C>>2]=c[e>>2];c[k>>2]=c[C>>2];mL(b,d,k,g,T);V=28;break}case 112:{c[D>>2]=c[e>>2];c[k>>2]=c[D>>2];nL(b,h+8|0,d,k,g,T);V=28;break}case 114:{c[E>>2]=c[d>>2];c[F>>2]=c[e>>2];c[m>>2]=c[E>>2];c[k>>2]=c[F>>2];c[d>>2]=fL(b,m,k,f,g,h,90697,90708)|0;V=28;break}case 82:{c[G>>2]=c[d>>2];c[H>>2]=c[e>>2];c[m>>2]=c[G>>2];c[k>>2]=c[H>>2];c[d>>2]=fL(b,m,k,f,g,h,90708,90713)|0;V=28;break}case 83:{c[I>>2]=c[e>>2];c[k>>2]=c[I>>2];oL(b,h,d,k,g,T);V=28;break}case 84:{c[J>>2]=c[d>>2];c[K>>2]=c[e>>2];c[m>>2]=c[J>>2];c[k>>2]=c[K>>2];c[d>>2]=fL(b,m,k,f,g,h,90713,90721)|0;V=28;break}case 119:{c[L>>2]=c[e>>2];c[k>>2]=c[L>>2];pL(b,h+24|0,d,k,g,T);V=28;break}case 120:{Z=c[(c[b>>2]|0)+20>>2]|0;c[M>>2]=c[d>>2];c[N>>2]=c[e>>2];c[m>>2]=c[M>>2];c[k>>2]=c[N>>2];$=kd[Z&63](b,m,k,f,g,h)|0;break}case 88:{Z=b+8|0;Y=dd[c[(c[Z>>2]|0)+24>>2]&255](Z)|0;c[O>>2]=c[d>>2];c[P>>2]=c[e>>2];Z=a[Y+11>>0]|0;U=Z<<24>>24<0;W=U?c[Y>>2]|0:Y;X=W+(U?c[Y+4>>2]|0:Z&255)|0;c[m>>2]=c[O>>2];c[k>>2]=c[P>>2];c[d>>2]=fL(b,m,k,f,g,h,W,X)|0;V=28;break}case 121:{c[Q>>2]=c[e>>2];c[k>>2]=c[Q>>2];qL(b,h+20|0,d,k,g,T);V=28;break}case 89:{c[R>>2]=c[e>>2];c[k>>2]=c[R>>2];rL(b,h+20|0,d,k,g,T);V=28;break}case 37:{c[S>>2]=c[e>>2];c[k>>2]=c[S>>2];sL(b,d,k,g,T);V=28;break}default:{c[g>>2]=c[g>>2]|4;V=28}}while(0);if((V|0)==28)$=c[d>>2]|0;l=j;return $|0}function VK(b){b=b|0;do if((a[93472]|0)==0?iT(93472)|0:0){o=0;ka(5);b=o;o=0;if(b&1){b=Pa()|0;$a(b|0)}else{c[25960]=103672;break}}while(0);return c[25960]|0}function WK(b){b=b|0;do if((a[93456]|0)==0?iT(93456)|0:0){o=0;ka(6);b=o;o=0;if(b&1){b=Pa()|0;$a(b|0)}else{c[25917]=103380;break}}while(0);return c[25917]|0}function XK(b){b=b|0;do if((a[93440]|0)==0?iT(93440)|0:0){o=0;ka(7);b=o;o=0;if(b&1){b=Pa()|0;$a(b|0)}else{c[25844]=103088;break}}while(0);return c[25844]|0}function YK(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;b=l;l=l+16|0;d=b;a:do if((a[93432]|0)==0?iT(93432)|0:0){c[25769]=0;c[25770]=0;c[25771]=0;e=bI(90439)|0;do if(e>>>0>4294967279){o=0;la(276,103076);o=0}else{if(e>>>0<11){a[103087]=e;f=103076}else{g=e+16&-16;o=0;h=Z(209,g|0)|0;i=o;o=0;if(i&1)break;c[25769]=h;c[25771]=g|-2147483648;c[25770]=e;f=h}LH(f,90439,e)|0;a[d>>0]=0;cI(f+e|0,d);break a}while(0);e=Pa()|0;$a(e|0)}while(0);l=b;return 103076}function ZK(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;b=l;l=l+16|0;d=b;a:do if((a[93424]|0)==0?iT(93424)|0:0){c[25766]=0;c[25767]=0;c[25768]=0;e=bI(90427)|0;do if(e>>>0>4294967279){o=0;la(276,103064);o=0}else{if(e>>>0<11){a[103075]=e;f=103064}else{g=e+16&-16;o=0;h=Z(209,g|0)|0;i=o;o=0;if(i&1)break;c[25766]=h;c[25768]=g|-2147483648;c[25767]=e;f=h}LH(f,90427,e)|0;a[d>>0]=0;cI(f+e|0,d);break a}while(0);e=Pa()|0;$a(e|0)}while(0);l=b;return 103064}function _K(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;b=l;l=l+16|0;d=b;a:do if((a[93416]|0)==0?iT(93416)|0:0){c[25763]=0;c[25764]=0;c[25765]=0;e=bI(90418)|0;do if(e>>>0>4294967279){o=0;la(276,103052);o=0}else{if(e>>>0<11){a[103063]=e;f=103052}else{g=e+16&-16;o=0;h=Z(209,g|0)|0;i=o;o=0;if(i&1)break;c[25763]=h;c[25765]=g|-2147483648;c[25764]=e;f=h}LH(f,90418,e)|0;a[d>>0]=0;cI(f+e|0,d);break a}while(0);e=Pa()|0;$a(e|0)}while(0);l=b;return 103052}function $K(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;b=l;l=l+16|0;d=b;a:do if((a[93408]|0)==0?iT(93408)|0:0){c[25760]=0;c[25761]=0;c[25762]=0;e=bI(90409)|0;do if(e>>>0>4294967279){o=0;la(276,103040);o=0}else{if(e>>>0<11){a[103051]=e;f=103040}else{g=e+16&-16;o=0;h=Z(209,g|0)|0;i=o;o=0;if(i&1)break;c[25760]=h;c[25762]=g|-2147483648;c[25761]=e;f=h}LH(f,90409,e)|0;a[d>>0]=0;cI(f+e|0,d);break a}while(0);e=Pa()|0;$a(e|0)}while(0);l=b;return 103040}function aL(){var b=0,d=0;if((a[93448]|0)==0?iT(93448)|0:0){b=103088;do{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;d=0;while(1){if((d|0)==3)break;c[b+(d<<2)>>2]=0;d=d+1|0}b=b+12|0}while((b|0)!=103376)}DR(103088,90460)|0;DR(103100,90463)|0;return}function bL(){var b=0,d=0;if((a[93464]|0)==0?iT(93464)|0:0){b=103380;do{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;d=0;while(1){if((d|0)==3)break;c[b+(d<<2)>>2]=0;d=d+1|0}b=b+12|0}while((b|0)!=103668)}DR(103380,90466)|0;DR(103392,90474)|0;DR(103404,90483)|0;DR(103416,90489)|0;DR(103428,90495)|0;DR(103440,90499)|0;DR(103452,90504)|0;DR(103464,90509)|0;DR(103476,90516)|0;DR(103488,90526)|0;DR(103500,90534)|0;DR(103512,90543)|0;DR(103524,90552)|0;DR(103536,90556)|0;DR(103548,90560)|0;DR(103560,90564)|0;DR(103572,90495)|0;DR(103584,90568)|0;DR(103596,90572)|0;DR(103608,90576)|0;DR(103620,90580)|0;DR(103632,90584)|0;DR(103644,90588)|0;DR(103656,90592)|0;return}function cL(){var b=0,d=0;if((a[93480]|0)==0?iT(93480)|0:0){b=103672;do{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;d=0;while(1){if((d|0)==3)break;c[b+(d<<2)>>2]=0;d=d+1|0}b=b+12|0}while((b|0)!=103840)}DR(103672,90596)|0;DR(103684,90603)|0;DR(103696,90610)|0;DR(103708,90618)|0;DR(103720,90628)|0;DR(103732,90637)|0;DR(103744,90644)|0;DR(103756,90653)|0;DR(103768,90657)|0;DR(103780,90661)|0;DR(103792,90665)|0;DR(103804,90669)|0;DR(103816,90673)|0;DR(103828,90677)|0;return}function dL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;h=l;l=l+16|0;i=h+4|0;j=h;k=a+8|0;a=dd[c[c[k>>2]>>2]&255](k)|0;c[j>>2]=c[e>>2];c[i>>2]=c[j>>2];j=(HJ(d,i,a,a+168|0,g,f,0)|0)-a|0;if((j|0)<168)c[b>>2]=((j|0)/12|0|0)%7|0;l=h;return}function eL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;h=l;l=l+16|0;i=h+4|0;j=h;k=a+8|0;a=dd[c[(c[k>>2]|0)+4>>2]&255](k)|0;c[j>>2]=c[e>>2];c[i>>2]=c[j>>2];j=(HJ(d,i,a,a+288|0,g,f,0)|0)-a|0;if((j|0)<288)c[b>>2]=((j|0)/12|0|0)%12|0;l=h;return}function fL(d,e,f,g,h,i,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0;m=l;l=l+16|0;n=m+12|0;p=m+8|0;q=m+4|0;r=m;mI(n,g);o=0;s=_(93,n|0,102968)|0;t=o;o=0;if(t&1){t=Pa()|0;$I(n);$a(t|0)}$I(n);c[h>>2]=0;t=s+8|0;u=j;j=0;a:while(1){v=(u|0)!=(k|0);w=j;while(1){x=c[e>>2]|0;if(!(v&(w|0)==0)){y=x;break a}z=x;if(x){A=c[x+12>>2]|0;if((A|0)==(c[x+16>>2]|0))B=dd[c[(c[x>>2]|0)+36>>2]&255](x)|0;else B=KH(a[A>>0]|0)|0;if(lI(B,JH()|0)|0){c[e>>2]=0;C=0;D=1;E=0}else{C=x;D=0;E=z}}else{C=0;D=1;E=z}z=c[f>>2]|0;x=z;do if(z){A=c[z+12>>2]|0;if((A|0)==(c[z+16>>2]|0))F=dd[c[(c[z>>2]|0)+36>>2]&255](z)|0;else F=KH(a[A>>0]|0)|0;if(!(lI(F,JH()|0)|0))if(D){G=z;H=x;break}else{I=64;break a}else{c[f>>2]=0;J=0;I=17;break}}else{J=x;I=17}while(0);if((I|0)==17){I=0;if(D){I=64;break a}else{G=0;H=J}}if((fd[c[(c[s>>2]|0)+36>>2]&127](s,a[u>>0]|0,0)|0)<<24>>24==37){I=21;break}x=a[u>>0]|0;if(x<<24>>24>-1?(K=c[t>>2]|0,b[K+(x<<24>>24<<1)>>1]&8192):0){L=u;I=28;break}M=C+12|0;x=c[M>>2]|0;N=C+16|0;if((x|0)==(c[N>>2]|0))O=dd[c[(c[C>>2]|0)+36>>2]&255](C)|0;else O=KH(a[x>>0]|0)|0;x=ed[c[(c[s>>2]|0)+12>>2]&255](s,O&255)|0;if(x<<24>>24==(ed[c[(c[s>>2]|0)+12>>2]&255](s,a[u>>0]|0)|0)<<24>>24){I=58;break}c[h>>2]=4;w=4}b:do if((I|0)==21){I=0;w=u+1|0;if((w|0)==(k|0)){I=64;break a}v=fd[c[(c[s>>2]|0)+36>>2]&127](s,a[w>>0]|0,0)|0;switch(v<<24>>24){case 48:case 69:{x=u+2|0;if((x|0)==(k|0)){I=64;break a}P=v;Q=fd[c[(c[s>>2]|0)+36>>2]&127](s,a[x>>0]|0,0)|0;R=w;break}default:{P=0;Q=v;R=u}}v=c[(c[d>>2]|0)+36>>2]|0;c[q>>2]=E;c[r>>2]=H;c[p>>2]=c[q>>2];c[n>>2]=c[r>>2];c[e>>2]=md[v&31](d,p,n,g,h,i,Q,P)|0;S=R+2|0}else if((I|0)==28){while(1){I=0;v=L+1|0;if((v|0)==(k|0)){T=k;break}w=a[v>>0]|0;if(w<<24>>24<=-1){T=v;break}if(!(b[K+(w<<24>>24<<1)>>1]&8192)){T=v;break}else{L=v;I=28}}v=C;w=G;x=G;while(1){if(v){z=c[v+12>>2]|0;if((z|0)==(c[v+16>>2]|0))U=dd[c[(c[v>>2]|0)+36>>2]&255](v)|0;else U=KH(a[z>>0]|0)|0;if(lI(U,JH()|0)|0){c[e>>2]=0;V=1;W=0}else{V=0;W=v}}else{V=1;W=0}do if(x){z=c[x+12>>2]|0;if((z|0)==(c[x+16>>2]|0))X=dd[c[(c[x>>2]|0)+36>>2]&255](x)|0;else X=KH(a[z>>0]|0)|0;if(!(lI(X,JH()|0)|0))if(V^(w|0)==0){Y=w;Z=w;break}else{S=T;break b}else{c[f>>2]=0;$=0;I=44;break}}else{$=w;I=44}while(0);if((I|0)==44){I=0;if(V){S=T;break b}else{Y=$;Z=0}}z=W+12|0;A=c[z>>2]|0;aa=W+16|0;if((A|0)==(c[aa>>2]|0))ba=dd[c[(c[W>>2]|0)+36>>2]&255](W)|0;else ba=KH(a[A>>0]|0)|0;if((ba&255)<<24>>24<=-1){S=T;break b}if(!(b[(c[t>>2]|0)+(ba<<24>>24<<1)>>1]&8192)){S=T;break b}A=c[z>>2]|0;if((A|0)==(c[aa>>2]|0)){dd[c[(c[W>>2]|0)+40>>2]&255](W)|0;v=W;w=Y;x=Z;continue}else{c[z>>2]=A+1;KH(a[A>>0]|0)|0;v=W;w=Y;x=Z;continue}}}else if((I|0)==58){I=0;x=c[M>>2]|0;if((x|0)==(c[N>>2]|0))dd[c[(c[C>>2]|0)+40>>2]&255](C)|0;else{c[M>>2]=x+1;KH(a[x>>0]|0)|0}S=u+1|0}while(0);u=S;j=c[h>>2]|0}if((I|0)==64){c[h>>2]=4;y=C}if(y){C=c[y+12>>2]|0;if((C|0)==(c[y+16>>2]|0))ca=dd[c[(c[y>>2]|0)+36>>2]&255](y)|0;else ca=KH(a[C>>0]|0)|0;if(lI(ca,JH()|0)|0){c[e>>2]=0;da=0;ea=1}else{da=y;ea=0}}else{da=0;ea=1}y=c[f>>2]|0;do if(y){e=c[y+12>>2]|0;if((e|0)==(c[y+16>>2]|0))fa=dd[c[(c[y>>2]|0)+36>>2]&255](y)|0;else fa=KH(a[e>>0]|0)|0;if(!(lI(fa,JH()|0)|0))if(ea)break;else{I=79;break}else{c[f>>2]=0;I=77;break}}else I=77;while(0);if((I|0)==77?ea:0)I=79;if((I|0)==79)c[h>>2]=c[h>>2]|2;l=m;return da|0}function gL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=tL(d,h,f,g,2)|0;g=c[f>>2]|0;if((i+-1|0)>>>0<31&(g&4|0)==0)c[b>>2]=i;else c[f>>2]=g|4;l=a;return}function hL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=tL(d,h,f,g,2)|0;g=c[f>>2]|0;if((i|0)<24&(g&4|0)==0)c[b>>2]=i;else c[f>>2]=g|4;l=a;return}function iL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=tL(d,h,f,g,2)|0;g=c[f>>2]|0;if((i+-1|0)>>>0<12&(g&4|0)==0)c[b>>2]=i;else c[f>>2]=g|4;l=a;return}function jL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=tL(d,h,f,g,3)|0;g=c[f>>2]|0;if((i|0)<366&(g&4|0)==0)c[b>>2]=i;else c[f>>2]=g|4;l=a;return}function kL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=tL(d,h,f,g,2)|0;g=c[f>>2]|0;if((i|0)<13&(g&4|0)==0)c[b>>2]=i+-1;else c[f>>2]=g|4;l=a;return}function lL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=tL(d,h,f,g,2)|0;g=c[f>>2]|0;if((i|0)<60&(g&4|0)==0)c[b>>2]=i;else c[f>>2]=g|4;l=a;return}function mL(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=h+8|0;a:while(1){h=c[e>>2]|0;do if(h){i=c[h+12>>2]|0;if((i|0)==(c[h+16>>2]|0))j=dd[c[(c[h>>2]|0)+36>>2]&255](h)|0;else j=KH(a[i>>0]|0)|0;if(lI(j,JH()|0)|0){c[e>>2]=0;k=1;break}else{k=(c[e>>2]|0)==0;break}}else k=1;while(0);h=c[f>>2]|0;do if(h){i=c[h+12>>2]|0;if((i|0)==(c[h+16>>2]|0))l=dd[c[(c[h>>2]|0)+36>>2]&255](h)|0;else l=KH(a[i>>0]|0)|0;if(!(lI(l,JH()|0)|0))if(k){m=h;break}else{n=h;break a}else{c[f>>2]=0;o=15;break}}else o=15;while(0);if((o|0)==15){o=0;if(k){n=0;break}else m=0}h=c[e>>2]|0;i=c[h+12>>2]|0;if((i|0)==(c[h+16>>2]|0))p=dd[c[(c[h>>2]|0)+36>>2]&255](h)|0;else p=KH(a[i>>0]|0)|0;if((p&255)<<24>>24<=-1){n=m;break}if(!(b[(c[d>>2]|0)+(p<<24>>24<<1)>>1]&8192)){n=m;break}i=c[e>>2]|0;h=i+12|0;q=c[h>>2]|0;if((q|0)==(c[i+16>>2]|0)){dd[c[(c[i>>2]|0)+40>>2]&255](i)|0;continue}else{c[h>>2]=q+1;KH(a[q>>0]|0)|0;continue}}m=c[e>>2]|0;do if(m){p=c[m+12>>2]|0;if((p|0)==(c[m+16>>2]|0))r=dd[c[(c[m>>2]|0)+36>>2]&255](m)|0;else r=KH(a[p>>0]|0)|0;if(lI(r,JH()|0)|0){c[e>>2]=0;s=1;break}else{s=(c[e>>2]|0)==0;break}}else s=1;while(0);do if(n){e=c[n+12>>2]|0;if((e|0)==(c[n+16>>2]|0))t=dd[c[(c[n>>2]|0)+36>>2]&255](n)|0;else t=KH(a[e>>0]|0)|0;if(!(lI(t,JH()|0)|0))if(s)break;else{o=40;break}else{c[f>>2]=0;o=38;break}}else o=38;while(0);if((o|0)==38?s:0)o=40;if((o|0)==40)c[g>>2]=c[g>>2]|2;return}function nL(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0;i=l;l=l+16|0;j=i+4|0;k=i;m=b+8|0;b=dd[c[(c[m>>2]|0)+8>>2]&255](m)|0;m=a[b+11>>0]|0;if(m<<24>>24<0)n=c[b+4>>2]|0;else n=m&255;m=a[b+12+11>>0]|0;if(m<<24>>24<0)o=c[b+16>>2]|0;else o=m&255;do if((n|0)!=(0-o|0)){c[k>>2]=c[f>>2];c[j>>2]=c[k>>2];m=(HJ(e,j,b,b+24|0,h,g,0)|0)-b|0;p=c[d>>2]|0;if((p|0)==12&(m|0)==0){c[d>>2]=0;break}if((p|0)<12&(m|0)==12)c[d>>2]=p+12}else c[g>>2]=c[g>>2]|4;while(0);l=i;return}function oL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=tL(d,h,f,g,2)|0;g=c[f>>2]|0;if((i|0)<61&(g&4|0)==0)c[b>>2]=i;else c[f>>2]=g|4;l=a;return}function pL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=tL(d,h,f,g,1)|0;g=c[f>>2]|0;if((i|0)<7&(g&4|0)==0)c[b>>2]=i;else c[f>>2]=g|4;l=a;return}function qL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=tL(d,h,f,g,4)|0;if(!(c[f>>2]&4)){if((i|0)<69)j=i+2e3|0;else j=(i|0)<100?i+1900|0:i;c[b>>2]=j+-1900}l=a;return}function rL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=tL(d,h,f,g,4)|0;if(!(c[f>>2]&4))c[b>>2]=i+-1900;l=a;return}function sL(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;b=c[d>>2]|0;do if(b){h=c[b+12>>2]|0;if((h|0)==(c[b+16>>2]|0))i=dd[c[(c[b>>2]|0)+36>>2]&255](b)|0;else i=KH(a[h>>0]|0)|0;if(lI(i,JH()|0)|0){c[d>>2]=0;j=1;break}else{j=(c[d>>2]|0)==0;break}}else j=1;while(0);i=c[e>>2]|0;do if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))k=dd[c[(c[i>>2]|0)+36>>2]&255](i)|0;else k=KH(a[b>>0]|0)|0;if(!(lI(k,JH()|0)|0))if(j){l=i;m=16;break}else{n=6;m=38;break}else{c[e>>2]=0;m=14;break}}else m=14;while(0);if((m|0)==14)if(j){n=6;m=38}else{l=0;m=16}a:do if((m|0)==16){j=c[d>>2]|0;i=c[j+12>>2]|0;if((i|0)==(c[j+16>>2]|0))o=dd[c[(c[j>>2]|0)+36>>2]&255](j)|0;else o=KH(a[i>>0]|0)|0;if((fd[c[(c[g>>2]|0)+36>>2]&127](g,o&255,0)|0)<<24>>24==37){i=c[d>>2]|0;j=i+12|0;k=c[j>>2]|0;if((k|0)==(c[i+16>>2]|0))dd[c[(c[i>>2]|0)+40>>2]&255](i)|0;else{c[j>>2]=k+1;KH(a[k>>0]|0)|0}k=c[d>>2]|0;do if(k){j=c[k+12>>2]|0;if((j|0)==(c[k+16>>2]|0))p=dd[c[(c[k>>2]|0)+36>>2]&255](k)|0;else p=KH(a[j>>0]|0)|0;if(lI(p,JH()|0)|0){c[d>>2]=0;q=1;break}else{q=(c[d>>2]|0)==0;break}}else q=1;while(0);do if(l|0){k=c[l+12>>2]|0;if((k|0)==(c[l+16>>2]|0))r=dd[c[(c[l>>2]|0)+36>>2]&255](l)|0;else r=KH(a[k>>0]|0)|0;if(!(lI(r,JH()|0)|0))if(q)break a;else{n=2;m=38;break a}else{c[e>>2]=0;break}}while(0);if(q){n=2;m=38}}else{n=4;m=38}}while(0);if((m|0)==38)c[f>>2]=c[f>>2]|n;return}function tL(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;i=c[d>>2]|0;do if(i){j=c[i+12>>2]|0;if((j|0)==(c[i+16>>2]|0))k=dd[c[(c[i>>2]|0)+36>>2]&255](i)|0;else k=KH(a[j>>0]|0)|0;if(lI(k,JH()|0)|0){c[d>>2]=0;l=1;break}else{l=(c[d>>2]|0)==0;break}}else l=1;while(0);k=c[e>>2]|0;do if(k){i=c[k+12>>2]|0;if((i|0)==(c[k+16>>2]|0))m=dd[c[(c[k>>2]|0)+36>>2]&255](k)|0;else m=KH(a[i>>0]|0)|0;if(!(lI(m,JH()|0)|0))if(l){n=k;o=17;break}else{o=16;break}else{c[e>>2]=0;o=14;break}}else o=14;while(0);if((o|0)==14)if(l)o=16;else{n=0;o=17}a:do if((o|0)==16){c[f>>2]=c[f>>2]|6;p=0}else if((o|0)==17){l=c[d>>2]|0;k=c[l+12>>2]|0;if((k|0)==(c[l+16>>2]|0))q=dd[c[(c[l>>2]|0)+36>>2]&255](l)|0;else q=KH(a[k>>0]|0)|0;k=q&255;if(k<<24>>24>-1?(l=g+8|0,b[(c[l>>2]|0)+(q<<24>>24<<1)>>1]&2048):0){m=(fd[c[(c[g>>2]|0)+36>>2]&127](g,k,0)|0)<<24>>24;k=c[d>>2]|0;i=k+12|0;j=c[i>>2]|0;if((j|0)==(c[k+16>>2]|0)){dd[c[(c[k>>2]|0)+40>>2]&255](k)|0;r=m;s=h;t=n;u=n}else{c[i>>2]=j+1;KH(a[j>>0]|0)|0;r=m;s=h;t=n;u=n}while(1){v=r+-48|0;m=s+-1|0;j=c[d>>2]|0;do if(j){i=c[j+12>>2]|0;if((i|0)==(c[j+16>>2]|0))w=dd[c[(c[j>>2]|0)+36>>2]&255](j)|0;else w=KH(a[i>>0]|0)|0;if(lI(w,JH()|0)|0){c[d>>2]=0;x=1;break}else{x=(c[d>>2]|0)==0;break}}else x=1;while(0);do if(u){j=c[u+12>>2]|0;if((j|0)==(c[u+16>>2]|0))y=dd[c[(c[u>>2]|0)+36>>2]&255](u)|0;else y=KH(a[j>>0]|0)|0;if(lI(y,JH()|0)|0){c[e>>2]=0;z=0;A=1;B=0;break}else{z=t;A=(t|0)==0;B=t;break}}else{z=t;A=1;B=0}while(0);C=c[d>>2]|0;if(!((s|0)>1&(x^A)))break;j=c[C+12>>2]|0;if((j|0)==(c[C+16>>2]|0))D=dd[c[(c[C>>2]|0)+36>>2]&255](C)|0;else D=KH(a[j>>0]|0)|0;j=D&255;if(j<<24>>24<=-1){p=v;break a}if(!(b[(c[l>>2]|0)+(D<<24>>24<<1)>>1]&2048)){p=v;break a}i=(v*10|0)+((fd[c[(c[g>>2]|0)+36>>2]&127](g,j,0)|0)<<24>>24)|0;j=c[d>>2]|0;k=j+12|0;E=c[k>>2]|0;if((E|0)==(c[j+16>>2]|0)){dd[c[(c[j>>2]|0)+40>>2]&255](j)|0;r=i;s=m;t=z;u=B;continue}else{c[k>>2]=E+1;KH(a[E>>0]|0)|0;r=i;s=m;t=z;u=B;continue}}do if(C){l=c[C+12>>2]|0;if((l|0)==(c[C+16>>2]|0))F=dd[c[(c[C>>2]|0)+36>>2]&255](C)|0;else F=KH(a[l>>0]|0)|0;if(lI(F,JH()|0)|0){c[d>>2]=0;G=1;break}else{G=(c[d>>2]|0)==0;break}}else G=1;while(0);do if(z){l=c[z+12>>2]|0;if((l|0)==(c[z+16>>2]|0))H=dd[c[(c[z>>2]|0)+36>>2]&255](z)|0;else H=KH(a[l>>0]|0)|0;if(!(lI(H,JH()|0)|0))if(G){p=v;break a}else break;else{c[e>>2]=0;o=62;break}}else o=62;while(0);if((o|0)==62?!G:0){p=v;break}c[f>>2]=c[f>>2]|2;p=v;break}c[f>>2]=c[f>>2]|4;p=0}while(0);return p|0}function uL(a){a=a|0;GI(a);return}function vL(a){a=a|0;GI(a);mR(a);return}function wL(a){a=a|0;return 2}function xL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h+12|0;j=h+8|0;k=h+4|0;m=h;c[k>>2]=c[b>>2];c[m>>2]=c[d>>2];c[j>>2]=c[k>>2];c[i>>2]=c[m>>2];m=QL(a,j,i,e,f,g,56284,56316)|0;l=h;return m|0}function yL(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0;i=l;l=l+16|0;j=i+12|0;k=i+8|0;m=i+4|0;n=i;o=b+8|0;p=dd[c[(c[o>>2]|0)+20>>2]&255](o)|0;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];e=a[p+8+3>>0]|0;d=e<<24>>24<0;o=d?c[p>>2]|0:p;q=o+((d?c[p+4>>2]|0:e&255)<<2)|0;c[k>>2]=c[m>>2];c[j>>2]=c[n>>2];n=QL(b,k,j,f,g,h,o,q)|0;l=i;return n|0}function zL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;h=l;l=l+16|0;i=h+4|0;j=h;mI(i,e);o=0;e=_(93,i|0,103e3)|0;k=o;o=0;if(k&1){k=Pa()|0;$I(i);$a(k|0)}else{$I(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];OL(a,g+24|0,b,i,f,e);l=h;return c[b>>2]|0}return 0}function AL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;h=l;l=l+16|0;i=h+4|0;j=h;mI(i,e);o=0;e=_(93,i|0,103e3)|0;k=o;o=0;if(k&1){k=Pa()|0;$I(i);$a(k|0)}else{$I(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];PL(a,g+16|0,b,i,f,e);l=h;return c[b>>2]|0}return 0}function BL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;h=l;l=l+16|0;i=h+4|0;j=h;mI(i,e);o=0;e=_(93,i|0,103e3)|0;k=o;o=0;if(k&1){k=Pa()|0;$I(i);$a(k|0)}else{$I(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];$L(a,g+20|0,b,i,f,e);l=h;return c[b>>2]|0}return 0}function CL(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0;j=l;l=l+144|0;k=j+128|0;m=j+112|0;n=j+124|0;p=j+120|0;q=j+116|0;r=j+108|0;s=j+104|0;t=j+100|0;u=j+96|0;v=j+92|0;w=j+88|0;x=j+84|0;y=j+80|0;z=j+76|0;A=j+72|0;B=j+68|0;C=j+64|0;D=j+60|0;E=j+56|0;F=j+52|0;G=j+48|0;H=j+44|0;I=j+40|0;J=j+36|0;K=j+32|0;L=j+28|0;M=j+24|0;N=j+20|0;O=j+16|0;P=j+12|0;Q=j+8|0;R=j+4|0;S=j;c[g>>2]=0;mI(k,f);o=0;T=_(93,k|0,103e3)|0;U=o;o=0;if(U&1){U=Pa()|0;$I(k);$a(U|0)}$I(k);do switch(i<<24>>24|0){case 65:case 97:{c[n>>2]=c[e>>2];c[k>>2]=c[n>>2];OL(b,h+24|0,d,k,g,T);V=28;break}case 104:case 66:case 98:{c[p>>2]=c[e>>2];c[k>>2]=c[p>>2];PL(b,h+16|0,d,k,g,T);V=28;break}case 99:{U=b+8|0;W=dd[c[(c[U>>2]|0)+12>>2]&255](U)|0;c[q>>2]=c[d>>2];c[r>>2]=c[e>>2];U=a[W+8+3>>0]|0;X=U<<24>>24<0;Y=X?c[W>>2]|0:W;Z=Y+((X?c[W+4>>2]|0:U&255)<<2)|0;c[m>>2]=c[q>>2];c[k>>2]=c[r>>2];c[d>>2]=QL(b,m,k,f,g,h,Y,Z)|0;V=28;break}case 101:case 100:{c[s>>2]=c[e>>2];c[k>>2]=c[s>>2];RL(b,h+12|0,d,k,g,T);V=28;break}case 68:{c[t>>2]=c[d>>2];c[u>>2]=c[e>>2];c[m>>2]=c[t>>2];c[k>>2]=c[u>>2];c[d>>2]=QL(b,m,k,f,g,h,56124,56156)|0;V=28;break}case 70:{c[v>>2]=c[d>>2];c[w>>2]=c[e>>2];c[m>>2]=c[v>>2];c[k>>2]=c[w>>2];c[d>>2]=QL(b,m,k,f,g,h,56156,56188)|0;V=28;break}case 72:{c[x>>2]=c[e>>2];c[k>>2]=c[x>>2];SL(b,h+8|0,d,k,g,T);V=28;break}case 73:{c[y>>2]=c[e>>2];c[k>>2]=c[y>>2];TL(b,h+8|0,d,k,g,T);V=28;break}case 106:{c[z>>2]=c[e>>2];c[k>>2]=c[z>>2];UL(b,h+28|0,d,k,g,T);V=28;break}case 109:{c[A>>2]=c[e>>2];c[k>>2]=c[A>>2];VL(b,h+16|0,d,k,g,T);V=28;break}case 77:{c[B>>2]=c[e>>2];c[k>>2]=c[B>>2];WL(b,h+4|0,d,k,g,T);V=28;break}case 116:case 110:{c[C>>2]=c[e>>2];c[k>>2]=c[C>>2];XL(b,d,k,g,T);V=28;break}case 112:{c[D>>2]=c[e>>2];c[k>>2]=c[D>>2];YL(b,h+8|0,d,k,g,T);V=28;break}case 114:{c[E>>2]=c[d>>2];c[F>>2]=c[e>>2];c[m>>2]=c[E>>2];c[k>>2]=c[F>>2];c[d>>2]=QL(b,m,k,f,g,h,56188,56232)|0;V=28;break}case 82:{c[G>>2]=c[d>>2];c[H>>2]=c[e>>2];c[m>>2]=c[G>>2];c[k>>2]=c[H>>2];c[d>>2]=QL(b,m,k,f,g,h,56232,56252)|0;V=28;break}case 83:{c[I>>2]=c[e>>2];c[k>>2]=c[I>>2];ZL(b,h,d,k,g,T);V=28;break}case 84:{c[J>>2]=c[d>>2];c[K>>2]=c[e>>2];c[m>>2]=c[J>>2];c[k>>2]=c[K>>2];c[d>>2]=QL(b,m,k,f,g,h,56252,56284)|0;V=28;break}case 119:{c[L>>2]=c[e>>2];c[k>>2]=c[L>>2];_L(b,h+24|0,d,k,g,T);V=28;break}case 120:{Z=c[(c[b>>2]|0)+20>>2]|0;c[M>>2]=c[d>>2];c[N>>2]=c[e>>2];c[m>>2]=c[M>>2];c[k>>2]=c[N>>2];$=kd[Z&63](b,m,k,f,g,h)|0;break}case 88:{Z=b+8|0;Y=dd[c[(c[Z>>2]|0)+24>>2]&255](Z)|0;c[O>>2]=c[d>>2];c[P>>2]=c[e>>2];Z=a[Y+8+3>>0]|0;U=Z<<24>>24<0;W=U?c[Y>>2]|0:Y;X=W+((U?c[Y+4>>2]|0:Z&255)<<2)|0;c[m>>2]=c[O>>2];c[k>>2]=c[P>>2];c[d>>2]=QL(b,m,k,f,g,h,W,X)|0;V=28;break}case 121:{c[Q>>2]=c[e>>2];c[k>>2]=c[Q>>2];$L(b,h+20|0,d,k,g,T);V=28;break}case 89:{c[R>>2]=c[e>>2];c[k>>2]=c[R>>2];aM(b,h+20|0,d,k,g,T);V=28;break}case 37:{c[S>>2]=c[e>>2];c[k>>2]=c[S>>2];bM(b,d,k,g,T);V=28;break}default:{c[g>>2]=c[g>>2]|4;V=28}}while(0);if((V|0)==28)$=c[d>>2]|0;l=j;return $|0}function DL(b){b=b|0;do if((a[93552]|0)==0?iT(93552)|0:0){o=0;ka(8);b=o;o=0;if(b&1){b=Pa()|0;$a(b|0)}else{c[26163]=104484;break}}while(0);return c[26163]|0}function EL(b){b=b|0;do if((a[93536]|0)==0?iT(93536)|0:0){o=0;ka(9);b=o;o=0;if(b&1){b=Pa()|0;$a(b|0)}else{c[26120]=104192;break}}while(0);return c[26120]|0}function FL(b){b=b|0;do if((a[93520]|0)==0?iT(93520)|0:0){o=0;ka(10);b=o;o=0;if(b&1){b=Pa()|0;$a(b|0)}else{c[26047]=103900;break}}while(0);return c[26047]|0}function GL(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;b=l;l=l+16|0;d=b;a:do if((a[93512]|0)==0?iT(93512)|0:0){c[25972]=0;c[25973]=0;c[25974]=0;e=KL(55156)|0;b:do if(e>>>0>1073741807){o=0;la(276,103888);o=0;f=15}else{do if(e>>>0>=2){g=e+4&-4;if(g>>>0<=1073741823){o=0;h=Z(209,g<<2|0)|0;i=o;o=0;if(i&1){f=15;break b}c[25972]=h;c[25974]=g|-2147483648;c[25973]=e;j=h;break}h=Ja(8)|0;o=0;ma(153,h|0,92198);g=o;o=0;if(g&1){g=Pa()|0;i=z;Sa(h|0);k=i;m=g;break b}else{c[h>>2]=57580;o=0;na(72,h|0,7152,205);o=0;f=15;break b}}else{a[103899]=e;j=103888}while(0);PH(j,55156,e)|0;c[d>>2]=0;MI(j+(e<<2)|0,d);break a}while(0);if((f|0)==15){e=Pa()|0;k=z;m=e}$a(m|0)}while(0);l=b;return 103888}function HL(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;b=l;l=l+16|0;d=b;a:do if((a[93504]|0)==0?iT(93504)|0:0){c[25969]=0;c[25970]=0;c[25971]=0;e=KL(55108)|0;b:do if(e>>>0>1073741807){o=0;la(276,103876);o=0;f=15}else{do if(e>>>0>=2){g=e+4&-4;if(g>>>0<=1073741823){o=0;h=Z(209,g<<2|0)|0;i=o;o=0;if(i&1){f=15;break b}c[25969]=h;c[25971]=g|-2147483648;c[25970]=e;j=h;break}h=Ja(8)|0;o=0;ma(153,h|0,92198);g=o;o=0;if(g&1){g=Pa()|0;i=z;Sa(h|0);k=i;m=g;break b}else{c[h>>2]=57580;o=0;na(72,h|0,7152,205);o=0;f=15;break b}}else{a[103887]=e;j=103876}while(0);PH(j,55108,e)|0;c[d>>2]=0;MI(j+(e<<2)|0,d);break a}while(0);if((f|0)==15){e=Pa()|0;k=z;m=e}$a(m|0)}while(0);l=b;return 103876}function IL(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;b=l;l=l+16|0;d=b;a:do if((a[93496]|0)==0?iT(93496)|0:0){c[25966]=0;c[25967]=0;c[25968]=0;e=KL(55072)|0;b:do if(e>>>0>1073741807){o=0;la(276,103864);o=0;f=15}else{do if(e>>>0>=2){g=e+4&-4;if(g>>>0<=1073741823){o=0;h=Z(209,g<<2|0)|0;i=o;o=0;if(i&1){f=15;break b}c[25966]=h;c[25968]=g|-2147483648;c[25967]=e;j=h;break}h=Ja(8)|0;o=0;ma(153,h|0,92198);g=o;o=0;if(g&1){g=Pa()|0;i=z;Sa(h|0);k=i;m=g;break b}else{c[h>>2]=57580;o=0;na(72,h|0,7152,205);o=0;f=15;break b}}else{a[103875]=e;j=103864}while(0);PH(j,55072,e)|0;c[d>>2]=0;MI(j+(e<<2)|0,d);break a}while(0);if((f|0)==15){e=Pa()|0;k=z;m=e}$a(m|0)}while(0);l=b;return 103864}function JL(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;b=l;l=l+16|0;d=b;a:do if((a[93488]|0)==0?iT(93488)|0:0){c[25963]=0;c[25964]=0;c[25965]=0;e=KL(55036)|0;b:do if(e>>>0>1073741807){o=0;la(276,103852);o=0;f=15}else{do if(e>>>0>=2){g=e+4&-4;if(g>>>0<=1073741823){o=0;h=Z(209,g<<2|0)|0;i=o;o=0;if(i&1){f=15;break b}c[25963]=h;c[25965]=g|-2147483648;c[25964]=e;j=h;break}h=Ja(8)|0;o=0;ma(153,h|0,92198);g=o;o=0;if(g&1){g=Pa()|0;i=z;Sa(h|0);k=i;m=g;break b}else{c[h>>2]=57580;o=0;na(72,h|0,7152,205);o=0;f=15;break b}}else{a[103863]=e;j=103852}while(0);PH(j,55036,e)|0;c[d>>2]=0;MI(j+(e<<2)|0,d);break a}while(0);if((f|0)==15){e=Pa()|0;k=z;m=e}$a(m|0)}while(0);l=b;return 103852}function KL(a){a=a|0;return MF(a)|0}function LL(){var b=0,d=0;if((a[93528]|0)==0?iT(93528)|0:0){b=103900;do{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;d=0;while(1){if((d|0)==3)break;c[b+(d<<2)>>2]=0;d=d+1|0}b=b+12|0}while((b|0)!=104188)}PR(103900,55240)|0;PR(103912,55252)|0;return}function ML(){var b=0,d=0;if((a[93544]|0)==0?iT(93544)|0:0){b=104192;do{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;d=0;while(1){if((d|0)==3)break;c[b+(d<<2)>>2]=0;d=d+1|0}b=b+12|0}while((b|0)!=104480)}PR(104192,55264)|0;PR(104204,55296)|0;PR(104216,55332)|0;PR(104228,55356)|0;PR(104240,55380)|0;PR(104252,55396)|0;PR(104264,55416)|0;PR(104276,55436)|0;PR(104288,55464)|0;PR(104300,55504)|0;PR(104312,55536)|0;PR(104324,55572)|0;PR(104336,55608)|0;PR(104348,55624)|0;PR(104360,55640)|0;PR(104372,55656)|0;PR(104384,55380)|0;PR(104396,55672)|0;PR(104408,55688)|0;PR(104420,55704)|0;PR(104432,55720)|0;PR(104444,55736)|0;PR(104456,55752)|0;PR(104468,55768)|0;return}function NL(){var b=0,d=0;if((a[93560]|0)==0?iT(93560)|0:0){b=104484;do{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;d=0;while(1){if((d|0)==3)break;c[b+(d<<2)>>2]=0;d=d+1|0}b=b+12|0}while((b|0)!=104652)}PR(104484,55784)|0;PR(104496,55812)|0;PR(104508,55840)|0;PR(104520,55872)|0;PR(104532,55912)|0;PR(104544,55948)|0;PR(104556,55976)|0;PR(104568,56012)|0;PR(104580,56028)|0;PR(104592,56044)|0;PR(104604,56060)|0;PR(104616,56076)|0;PR(104628,56092)|0;PR(104640,56108)|0;return}function OL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;h=l;l=l+16|0;i=h+4|0;j=h;k=a+8|0;a=dd[c[c[k>>2]>>2]&255](k)|0;c[j>>2]=c[e>>2];c[i>>2]=c[j>>2];j=(gK(d,i,a,a+168|0,g,f,0)|0)-a|0;if((j|0)<168)c[b>>2]=((j|0)/12|0|0)%7|0;l=h;return}function PL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;h=l;l=l+16|0;i=h+4|0;j=h;k=a+8|0;a=dd[c[(c[k>>2]|0)+4>>2]&255](k)|0;c[j>>2]=c[e>>2];c[i>>2]=c[j>>2];j=(gK(d,i,a,a+288|0,g,f,0)|0)-a|0;if((j|0)<288)c[b>>2]=((j|0)/12|0|0)%12|0;l=h;return}function QL(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,aa=0,ba=0;j=l;l=l+16|0;k=j+12|0;m=j+8|0;n=j+4|0;p=j;mI(k,e);o=0;q=_(93,k|0,103e3)|0;r=o;o=0;if(r&1){r=Pa()|0;$I(k);$a(r|0)}$I(k);c[f>>2]=0;r=h;h=0;a:while(1){s=(r|0)!=(i|0);t=h;while(1){u=c[b>>2]|0;if(!(s&(t|0)==0)){v=u;break a}w=u;if(u){x=c[u+12>>2]|0;if((x|0)==(c[u+16>>2]|0))y=dd[c[(c[u>>2]|0)+36>>2]&255](u)|0;else y=OH(c[x>>2]|0)|0;if(nI(y,NH()|0)|0){c[b>>2]=0;z=0;A=1;B=0}else{z=u;A=0;B=w}}else{z=0;A=1;B=w}w=c[d>>2]|0;u=w;do if(w){x=c[w+12>>2]|0;if((x|0)==(c[w+16>>2]|0))C=dd[c[(c[w>>2]|0)+36>>2]&255](w)|0;else C=OH(c[x>>2]|0)|0;if(!(nI(C,NH()|0)|0))if(A){D=w;E=u;break}else{F=61;break a}else{c[d>>2]=0;G=0;F=17;break}}else{G=u;F=17}while(0);if((F|0)==17){F=0;if(A){F=61;break a}else{D=0;E=G}}if((fd[c[(c[q>>2]|0)+52>>2]&127](q,c[r>>2]|0,0)|0)<<24>>24==37){F=21;break}if(fd[c[(c[q>>2]|0)+12>>2]&127](q,8192,c[r>>2]|0)|0){H=r;F=27;break}I=z+12|0;u=c[I>>2]|0;J=z+16|0;if((u|0)==(c[J>>2]|0))K=dd[c[(c[z>>2]|0)+36>>2]&255](z)|0;else K=OH(c[u>>2]|0)|0;u=ed[c[(c[q>>2]|0)+28>>2]&255](q,K)|0;if((u|0)==(ed[c[(c[q>>2]|0)+28>>2]&255](q,c[r>>2]|0)|0)){F=55;break}c[f>>2]=4;t=4}b:do if((F|0)==21){F=0;t=r+4|0;if((t|0)==(i|0)){F=61;break a}s=fd[c[(c[q>>2]|0)+52>>2]&127](q,c[t>>2]|0,0)|0;switch(s<<24>>24){case 48:case 69:{u=r+8|0;if((u|0)==(i|0)){F=61;break a}L=s;M=fd[c[(c[q>>2]|0)+52>>2]&127](q,c[u>>2]|0,0)|0;N=t;break}default:{L=0;M=s;N=r}}s=c[(c[a>>2]|0)+36>>2]|0;c[n>>2]=B;c[p>>2]=E;c[m>>2]=c[n>>2];c[k>>2]=c[p>>2];c[b>>2]=md[s&31](a,m,k,e,f,g,M,L)|0;O=N+8|0}else if((F|0)==27){while(1){F=0;s=H+4|0;if((s|0)==(i|0)){P=i;break}if(fd[c[(c[q>>2]|0)+12>>2]&127](q,8192,c[s>>2]|0)|0){H=s;F=27}else{P=s;break}}s=z;t=D;u=D;while(1){if(s){w=c[s+12>>2]|0;if((w|0)==(c[s+16>>2]|0))Q=dd[c[(c[s>>2]|0)+36>>2]&255](s)|0;else Q=OH(c[w>>2]|0)|0;if(nI(Q,NH()|0)|0){c[b>>2]=0;R=1;S=0}else{R=0;S=s}}else{R=1;S=0}do if(u){w=c[u+12>>2]|0;if((w|0)==(c[u+16>>2]|0))T=dd[c[(c[u>>2]|0)+36>>2]&255](u)|0;else T=OH(c[w>>2]|0)|0;if(!(nI(T,NH()|0)|0))if(R^(t|0)==0){U=t;V=t;break}else{O=P;break b}else{c[d>>2]=0;W=0;F=42;break}}else{W=t;F=42}while(0);if((F|0)==42){F=0;if(R){O=P;break b}else{U=W;V=0}}w=S+12|0;x=c[w>>2]|0;X=S+16|0;if((x|0)==(c[X>>2]|0))Y=dd[c[(c[S>>2]|0)+36>>2]&255](S)|0;else Y=OH(c[x>>2]|0)|0;if(!(fd[c[(c[q>>2]|0)+12>>2]&127](q,8192,Y)|0)){O=P;break b}x=c[w>>2]|0;if((x|0)==(c[X>>2]|0)){dd[c[(c[S>>2]|0)+40>>2]&255](S)|0;s=S;t=U;u=V;continue}else{c[w>>2]=x+4;OH(c[x>>2]|0)|0;s=S;t=U;u=V;continue}}}else if((F|0)==55){F=0;u=c[I>>2]|0;if((u|0)==(c[J>>2]|0))dd[c[(c[z>>2]|0)+40>>2]&255](z)|0;else{c[I>>2]=u+4;OH(c[u>>2]|0)|0}O=r+4|0}while(0);r=O;h=c[f>>2]|0}if((F|0)==61){c[f>>2]=4;v=z}if(v){z=c[v+12>>2]|0;if((z|0)==(c[v+16>>2]|0))Z=dd[c[(c[v>>2]|0)+36>>2]&255](v)|0;else Z=OH(c[z>>2]|0)|0;if(nI(Z,NH()|0)|0){c[b>>2]=0;$=0;aa=1}else{$=v;aa=0}}else{$=0;aa=1}v=c[d>>2]|0;do if(v){b=c[v+12>>2]|0;if((b|0)==(c[v+16>>2]|0))ba=dd[c[(c[v>>2]|0)+36>>2]&255](v)|0;else ba=OH(c[b>>2]|0)|0;if(!(nI(ba,NH()|0)|0))if(aa)break;else{F=76;break}else{c[d>>2]=0;F=74;break}}else F=74;while(0);if((F|0)==74?aa:0)F=76;if((F|0)==76)c[f>>2]=c[f>>2]|2;l=j;return $|0}function RL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=cM(d,h,f,g,2)|0;g=c[f>>2]|0;if((i+-1|0)>>>0<31&(g&4|0)==0)c[b>>2]=i;else c[f>>2]=g|4;l=a;return}function SL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=cM(d,h,f,g,2)|0;g=c[f>>2]|0;if((i|0)<24&(g&4|0)==0)c[b>>2]=i;else c[f>>2]=g|4;l=a;return}function TL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=cM(d,h,f,g,2)|0;g=c[f>>2]|0;if((i+-1|0)>>>0<12&(g&4|0)==0)c[b>>2]=i;else c[f>>2]=g|4;l=a;return}function UL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=cM(d,h,f,g,3)|0;g=c[f>>2]|0;if((i|0)<366&(g&4|0)==0)c[b>>2]=i;else c[f>>2]=g|4;l=a;return}function VL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=cM(d,h,f,g,2)|0;g=c[f>>2]|0;if((i|0)<13&(g&4|0)==0)c[b>>2]=i+-1;else c[f>>2]=g|4;l=a;return}function WL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=cM(d,h,f,g,2)|0;g=c[f>>2]|0;if((i|0)<60&(g&4|0)==0)c[b>>2]=i;else c[f>>2]=g|4;l=a;return}function XL(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a:while(1){a=c[b>>2]|0;do if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))h=dd[c[(c[a>>2]|0)+36>>2]&255](a)|0;else h=OH(c[g>>2]|0)|0;if(nI(h,NH()|0)|0){c[b>>2]=0;i=1;break}else{i=(c[b>>2]|0)==0;break}}else i=1;while(0);a=c[d>>2]|0;do if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))j=dd[c[(c[a>>2]|0)+36>>2]&255](a)|0;else j=OH(c[g>>2]|0)|0;if(!(nI(j,NH()|0)|0))if(i){k=a;break}else{l=a;break a}else{c[d>>2]=0;m=15;break}}else m=15;while(0);if((m|0)==15){m=0;if(i){l=0;break}else k=0}a=c[b>>2]|0;g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))n=dd[c[(c[a>>2]|0)+36>>2]&255](a)|0;else n=OH(c[g>>2]|0)|0;if(!(fd[c[(c[f>>2]|0)+12>>2]&127](f,8192,n)|0)){l=k;break}g=c[b>>2]|0;a=g+12|0;o=c[a>>2]|0;if((o|0)==(c[g+16>>2]|0)){dd[c[(c[g>>2]|0)+40>>2]&255](g)|0;continue}else{c[a>>2]=o+4;OH(c[o>>2]|0)|0;continue}}k=c[b>>2]|0;do if(k){n=c[k+12>>2]|0;if((n|0)==(c[k+16>>2]|0))p=dd[c[(c[k>>2]|0)+36>>2]&255](k)|0;else p=OH(c[n>>2]|0)|0;if(nI(p,NH()|0)|0){c[b>>2]=0;q=1;break}else{q=(c[b>>2]|0)==0;break}}else q=1;while(0);do if(l){b=c[l+12>>2]|0;if((b|0)==(c[l+16>>2]|0))r=dd[c[(c[l>>2]|0)+36>>2]&255](l)|0;else r=OH(c[b>>2]|0)|0;if(!(nI(r,NH()|0)|0))if(q)break;else{m=39;break}else{c[d>>2]=0;m=37;break}}else m=37;while(0);if((m|0)==37?q:0)m=39;if((m|0)==39)c[e>>2]=c[e>>2]|2;return}function YL(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0;i=l;l=l+16|0;j=i+4|0;k=i;m=b+8|0;b=dd[c[(c[m>>2]|0)+8>>2]&255](m)|0;m=a[b+8+3>>0]|0;if(m<<24>>24<0)n=c[b+4>>2]|0;else n=m&255;m=a[b+20+3>>0]|0;if(m<<24>>24<0)o=c[b+16>>2]|0;else o=m&255;do if((n|0)!=(0-o|0)){c[k>>2]=c[f>>2];c[j>>2]=c[k>>2];m=(gK(e,j,b,b+24|0,h,g,0)|0)-b|0;p=c[d>>2]|0;if((p|0)==12&(m|0)==0){c[d>>2]=0;break}if((p|0)<12&(m|0)==12)c[d>>2]=p+12}else c[g>>2]=c[g>>2]|4;while(0);l=i;return}function ZL(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=cM(d,h,f,g,2)|0;g=c[f>>2]|0;if((i|0)<61&(g&4|0)==0)c[b>>2]=i;else c[f>>2]=g|4;l=a;return}function _L(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=cM(d,h,f,g,1)|0;g=c[f>>2]|0;if((i|0)<7&(g&4|0)==0)c[b>>2]=i;else c[f>>2]=g|4;l=a;return}function $L(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=cM(d,h,f,g,4)|0;if(!(c[f>>2]&4)){if((i|0)<69)j=i+2e3|0;else j=(i|0)<100?i+1900|0:i;c[b>>2]=j+-1900}l=a;return}function aM(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a=l;l=l+16|0;h=a+4|0;i=a;c[i>>2]=c[e>>2];c[h>>2]=c[i>>2];i=cM(d,h,f,g,4)|0;if(!(c[f>>2]&4))c[b>>2]=i+-1900;l=a;return}function bM(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;a=c[b>>2]|0;do if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))h=dd[c[(c[a>>2]|0)+36>>2]&255](a)|0;else h=OH(c[g>>2]|0)|0;if(nI(h,NH()|0)|0){c[b>>2]=0;i=1;break}else{i=(c[b>>2]|0)==0;break}}else i=1;while(0);h=c[d>>2]|0;do if(h){a=c[h+12>>2]|0;if((a|0)==(c[h+16>>2]|0))j=dd[c[(c[h>>2]|0)+36>>2]&255](h)|0;else j=OH(c[a>>2]|0)|0;if(!(nI(j,NH()|0)|0))if(i){k=h;l=16;break}else{m=6;l=38;break}else{c[d>>2]=0;l=14;break}}else l=14;while(0);if((l|0)==14)if(i){m=6;l=38}else{k=0;l=16}a:do if((l|0)==16){i=c[b>>2]|0;h=c[i+12>>2]|0;if((h|0)==(c[i+16>>2]|0))n=dd[c[(c[i>>2]|0)+36>>2]&255](i)|0;else n=OH(c[h>>2]|0)|0;if((fd[c[(c[f>>2]|0)+52>>2]&127](f,n,0)|0)<<24>>24==37){h=c[b>>2]|0;i=h+12|0;j=c[i>>2]|0;if((j|0)==(c[h+16>>2]|0))dd[c[(c[h>>2]|0)+40>>2]&255](h)|0;else{c[i>>2]=j+4;OH(c[j>>2]|0)|0}j=c[b>>2]|0;do if(j){i=c[j+12>>2]|0;if((i|0)==(c[j+16>>2]|0))o=dd[c[(c[j>>2]|0)+36>>2]&255](j)|0;else o=OH(c[i>>2]|0)|0;if(nI(o,NH()|0)|0){c[b>>2]=0;p=1;break}else{p=(c[b>>2]|0)==0;break}}else p=1;while(0);do if(k|0){j=c[k+12>>2]|0;if((j|0)==(c[k+16>>2]|0))q=dd[c[(c[k>>2]|0)+36>>2]&255](k)|0;else q=OH(c[j>>2]|0)|0;if(!(nI(q,NH()|0)|0))if(p)break a;else{m=2;l=38;break a}else{c[d>>2]=0;break}}while(0);if(p){m=2;l=38}}else{m=4;l=38}}while(0);if((l|0)==38)c[e>>2]=c[e>>2]|m;return}function cM(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;g=c[a>>2]|0;do if(g){h=c[g+12>>2]|0;if((h|0)==(c[g+16>>2]|0))i=dd[c[(c[g>>2]|0)+36>>2]&255](g)|0;else i=OH(c[h>>2]|0)|0;if(nI(i,NH()|0)|0){c[a>>2]=0;j=1;break}else{j=(c[a>>2]|0)==0;break}}else j=1;while(0);i=c[b>>2]|0;do if(i){g=c[i+12>>2]|0;if((g|0)==(c[i+16>>2]|0))k=dd[c[(c[i>>2]|0)+36>>2]&255](i)|0;else k=OH(c[g>>2]|0)|0;if(!(nI(k,NH()|0)|0))if(j){l=i;m=17;break}else{m=16;break}else{c[b>>2]=0;m=14;break}}else m=14;while(0);if((m|0)==14)if(j)m=16;else{l=0;m=17}a:do if((m|0)==16){c[d>>2]=c[d>>2]|6;n=0}else if((m|0)==17){j=c[a>>2]|0;i=c[j+12>>2]|0;if((i|0)==(c[j+16>>2]|0))o=dd[c[(c[j>>2]|0)+36>>2]&255](j)|0;else o=OH(c[i>>2]|0)|0;if(!(fd[c[(c[e>>2]|0)+12>>2]&127](e,2048,o)|0)){c[d>>2]=c[d>>2]|4;n=0;break}i=(fd[c[(c[e>>2]|0)+52>>2]&127](e,o,0)|0)<<24>>24;j=c[a>>2]|0;k=j+12|0;g=c[k>>2]|0;if((g|0)==(c[j+16>>2]|0)){dd[c[(c[j>>2]|0)+40>>2]&255](j)|0;p=i;q=f;r=l;s=l}else{c[k>>2]=g+4;OH(c[g>>2]|0)|0;p=i;q=f;r=l;s=l}while(1){t=p+-48|0;i=q+-1|0;g=c[a>>2]|0;do if(g){k=c[g+12>>2]|0;if((k|0)==(c[g+16>>2]|0))u=dd[c[(c[g>>2]|0)+36>>2]&255](g)|0;else u=OH(c[k>>2]|0)|0;if(nI(u,NH()|0)|0){c[a>>2]=0;v=1;break}else{v=(c[a>>2]|0)==0;break}}else v=1;while(0);do if(s){g=c[s+12>>2]|0;if((g|0)==(c[s+16>>2]|0))w=dd[c[(c[s>>2]|0)+36>>2]&255](s)|0;else w=OH(c[g>>2]|0)|0;if(nI(w,NH()|0)|0){c[b>>2]=0;x=0;y=1;z=0;break}else{x=r;y=(r|0)==0;z=r;break}}else{x=r;y=1;z=0}while(0);A=c[a>>2]|0;if(!((q|0)>1&(v^y)))break;g=c[A+12>>2]|0;if((g|0)==(c[A+16>>2]|0))B=dd[c[(c[A>>2]|0)+36>>2]&255](A)|0;else B=OH(c[g>>2]|0)|0;if(!(fd[c[(c[e>>2]|0)+12>>2]&127](e,2048,B)|0)){n=t;break a}g=(t*10|0)+((fd[c[(c[e>>2]|0)+52>>2]&127](e,B,0)|0)<<24>>24)|0;k=c[a>>2]|0;j=k+12|0;h=c[j>>2]|0;if((h|0)==(c[k+16>>2]|0)){dd[c[(c[k>>2]|0)+40>>2]&255](k)|0;p=g;q=i;r=x;s=z;continue}else{c[j>>2]=h+4;OH(c[h>>2]|0)|0;p=g;q=i;r=x;s=z;continue}}do if(A){g=c[A+12>>2]|0;if((g|0)==(c[A+16>>2]|0))C=dd[c[(c[A>>2]|0)+36>>2]&255](A)|0;else C=OH(c[g>>2]|0)|0;if(nI(C,NH()|0)|0){c[a>>2]=0;D=1;break}else{D=(c[a>>2]|0)==0;break}}else D=1;while(0);do if(x){g=c[x+12>>2]|0;if((g|0)==(c[x+16>>2]|0))E=dd[c[(c[x>>2]|0)+36>>2]&255](x)|0;else E=OH(c[g>>2]|0)|0;if(!(nI(E,NH()|0)|0))if(D){n=t;break a}else break;else{c[b>>2]=0;m=60;break}}else m=60;while(0);if((m|0)==60?!D:0){n=t;break}c[d>>2]=c[d>>2]|2;n=t}while(0);return n|0}function dM(a){a=a|0;iM(a+8|0);GI(a);return}function eM(a){a=a|0;iM(a+8|0);GI(a);mR(a);return}function fM(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0;f=l;l=l+112|0;e=f+4|0;j=f;c[j>>2]=e+100;gM(b+8|0,e,j,g,h,i);i=c[j>>2]|0;j=e;e=c[d>>2]|0;while(1){if((j|0)==(i|0))break;d=a[j>>0]|0;if(!e)k=0;else{h=e+24|0;g=c[h>>2]|0;if((g|0)==(c[e+28>>2]|0)){b=c[(c[e>>2]|0)+52>>2]|0;m=KH(d)|0;n=ed[b&255](e,m)|0}else{c[h>>2]=g+1;a[g>>0]=d;n=KH(d)|0}d=lI(n,JH()|0)|0;k=d?0:e}j=j+1|0;e=k}l=f;return e|0}function gM(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0;i=l;l=l+16|0;j=i;a[j>>0]=37;k=j+1|0;a[k>>0]=g;m=j+2|0;a[m>>0]=h;a[j+3>>0]=0;if(h<<24>>24){a[k>>0]=h;a[m>>0]=g}g=hM(d,c[e>>2]|0)|0;c[e>>2]=d+(dc(d|0,g|0,j|0,f|0,c[b>>2]|0)|0);l=i;return}function hM(a,b){a=a|0;b=b|0;return b-a|0}function iM(a){a=a|0;var b=0,d=0,e=0,f=0;b=c[a>>2]|0;o=0;d=Y(36)|0;e=o;o=0;do if(!(e&1)){if((b|0)!=(d|0)?(o=0,la(310,c[a>>2]|0),f=o,o=0,f&1):0)break;return}while(0);a=Qa(0)|0;Id(a)}function jM(a){a=a|0;iM(a+8|0);GI(a);return}function kM(a){a=a|0;iM(a+8|0);GI(a);mR(a);return}function lM(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0;e=l;l=l+416|0;d=e+8|0;i=e;c[i>>2]=d+400;mM(a+8|0,d,i,f,g,h);h=c[i>>2]|0;i=d;d=c[b>>2]|0;while(1){if((i|0)==(h|0))break;b=c[i>>2]|0;if(!d)j=0;else{g=d+24|0;f=c[g>>2]|0;if((f|0)==(c[d+28>>2]|0)){a=c[(c[d>>2]|0)+52>>2]|0;k=OH(b)|0;m=ed[a&255](d,k)|0}else{c[g>>2]=f+4;c[f>>2]=b;m=OH(b)|0}b=nI(m,NH()|0)|0;j=b?0:d}i=i+4|0;d=j}l=e;return d|0}function mM(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+128|0;i=h+16|0;j=h+12|0;k=h;m=h+8|0;c[j>>2]=i+100;gM(a,i,j,e,f,g);g=k;c[g>>2]=0;c[g+4>>2]=0;c[m>>2]=i;i=nM(b,c[d>>2]|0)|0;g=nG(c[a>>2]|0)|0;o=0;a=aa(60,b|0,m|0,i|0,k|0)|0;k=o;o=0;if(k&1){k=Pa()|0;if(g|0?(o=0,Z(240,g|0)|0,i=o,o=0,i&1):0){i=Qa(0)|0;Id(i)}$a(k|0)}if(g|0?(o=0,Z(240,g|0)|0,g=o,o=0,g&1):0){g=Qa(0)|0;Id(g)}if((a|0)==-1)oM(91044);else{c[d>>2]=b+(a<<2);l=h;return}}function nM(a,b){a=a|0;b=b|0;return b-a>>2|0}function oM(a){a=a|0;var b=0;b=Ja(8)|0;o=0;ma(188,b|0,a|0);a=o;o=0;if(a&1){a=Pa()|0;Sa(b|0);$a(a|0)}else Xa(b|0,7136,207)}function pM(a){a=a|0;GI(a);return}function qM(a){a=a|0;GI(a);mR(a);return}function rM(a){a=a|0;return 127}function sM(a){a=a|0;return 127}function tM(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function uM(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function vM(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function wM(b,d){b=b|0;d=d|0;var e=0;d=l;l=l+16|0;e=d;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;a[b+11>>0]=1;AM(b,1,45)|0;a[e>>0]=0;cI(b+1|0,e);l=d;return}function xM(a){a=a|0;return 0}function yM(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function zM(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function AM(a,b,c){a=a|0;b=b|0;c=c|0;if(b|0)ET(a|0,(KH(c)|0)&255|0,b|0)|0;return a|0}function BM(a){a=a|0;GI(a);return}function CM(a){a=a|0;GI(a);mR(a);return}function DM(a){a=a|0;return 127}function EM(a){a=a|0;return 127}function FM(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function GM(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function HM(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function IM(b,d){b=b|0;d=d|0;var e=0;d=l;l=l+16|0;e=d;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;a[b+11>>0]=1;AM(b,1,45)|0;a[e>>0]=0;cI(b+1|0,e);l=d;return}function JM(a){a=a|0;return 0}function KM(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function LM(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function MM(a){a=a|0;GI(a);return}function NM(a){a=a|0;GI(a);mR(a);return}function OM(a){a=a|0;return 2147483647}function PM(a){a=a|0;return 2147483647}function QM(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function RM(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function SM(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function TM(b,d){b=b|0;d=d|0;var e=0;d=l;l=l+16|0;e=d;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;a[b+8+3>>0]=1;JK(b,1,45)|0;c[e>>2]=0;MI(b+4|0,e);l=d;return}function UM(a){a=a|0;return 0}function VM(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function WM(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function XM(a){a=a|0;GI(a);return}function YM(a){a=a|0;GI(a);mR(a);return}function ZM(a){a=a|0;return 2147483647}function _M(a){a=a|0;return 2147483647}function $M(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function aN(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function bN(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function cN(b,d){b=b|0;d=d|0;var e=0;d=l;l=l+16|0;e=d;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;a[b+8+3>>0]=1;JK(b,1,45)|0;c[e>>2]=0;MI(b+4|0,e);l=d;return}function dN(a){a=a|0;return 0}function eN(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function fN(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function gN(a){a=a|0;GI(a);return}function hN(a){a=a|0;GI(a);mR(a);return}function iN(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,$=0;b=l;l=l+240|0;j=b+24|0;k=b;m=b+140|0;n=b+16|0;p=b+12|0;q=b+8|0;r=b+136|0;s=b+4|0;t=b+36|0;c[n>>2]=m;u=n+4|0;c[u>>2]=311;v=m+100|0;o=0;ma(132,q|0,g|0);w=o;o=0;if(!(w&1)){o=0;w=_(93,q|0,102968)|0;x=o;o=0;if(x&1){x=Pa()|0;y=x;A=z}else{a[r>>0]=0;c[s>>2]=c[e>>2];x=c[g+4>>2]|0;o=0;c[j>>2]=c[s>>2];s=ia(1,d|0,j|0,f|0,q|0,x|0,h|0,r|0,w|0,n|0,p|0,v|0)|0;v=o;o=0;a:do if(v&1)B=11;else{b:do if(s){o=0;aa(c[(c[w>>2]|0)+32>>2]|0,w|0,91267,91277,j|0)|0;x=o;o=0;if(x&1){x=Pa()|0;C=x;D=z}else{x=c[p>>2]|0;f=c[n>>2]|0;g=x-f|0;E=f;f=x;if((g|0)>98){x=BE(g+2|0)|0;g=x;if(!x){o=0;ka(4);o=0;F=g}else{G=x;H=g;B=16}}else{G=t;H=0;B=16}do if((B|0)==16){if(!(a[r>>0]|0))I=G;else{a[G>>0]=45;I=G+1|0}g=j+10|0;x=j;J=E;K=I;L=f;while(1){if(J>>>0>=L>>>0)break;M=a[J>>0]|0;N=j;while(1){if((N|0)==(g|0)){O=g;break}if((a[N>>0]|0)==M<<24>>24){O=N;break}N=N+1|0}a[K>>0]=a[91267+(O-x)>>0]|0;J=J+1|0;K=K+1|0;L=c[p>>2]|0}a[K>>0]=0;c[k>>2]=i;if((FG(t,91278,k)|0)!=1){o=0;la(312,91282);o=0;F=H;break}if(H|0)CE(H);break b}while(0);f=Pa()|0;E=z;if(F|0)CE(F);C=f;D=E}P=C;Q=D;break a}while(0);E=c[d>>2]|0;do if(E){f=c[E+12>>2]|0;if((f|0)==(c[E+16>>2]|0)){o=0;L=Z(c[(c[E>>2]|0)+36>>2]|0,E|0)|0;J=o;o=0;if(J&1){B=11;break a}else R=L}else R=KH(a[f>>0]|0)|0;if(lI(R,JH()|0)|0){c[d>>2]=0;S=1;break}else{S=(c[d>>2]|0)==0;break}}else S=1;while(0);E=c[e>>2]|0;do if(E){f=c[E+12>>2]|0;if((f|0)==(c[E+16>>2]|0)){o=0;L=Z(c[(c[E>>2]|0)+36>>2]|0,E|0)|0;J=o;o=0;if(J&1){B=11;break a}else T=L}else T=KH(a[f>>0]|0)|0;if(!(lI(T,JH()|0)|0))if(S)break;else{B=46;break}else{c[e>>2]=0;B=44;break}}else B=44;while(0);if((B|0)==44?S:0)B=46;if((B|0)==46)c[h>>2]=c[h>>2]|2;E=c[d>>2]|0;$I(q);f=c[n>>2]|0;c[n>>2]=0;if(f|0?(o=0,la(c[u>>2]|0,f|0),f=o,o=0,f&1):0){f=Qa(0)|0;Id(f)}l=b;return E|0}while(0);if((B|0)==11){b=Pa()|0;P=b;Q=z}y=P;A=Q}$I(q);q=c[n>>2]|0;c[n>>2]=0;if(!q){U=A;V=y}else{W=A;X=y;Y=c[u>>2]|0;$=q;B=54}}else{q=Pa()|0;c[n>>2]=0;W=z;X=q;Y=311;$=m;B=54}if((B|0)==54){o=0;la(Y|0,$|0);$=o;o=0;if($&1){$=Qa(0)|0;Id($)}else{U=W;V=X}}$a(V|0);return 0}function jN(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;b=l;l=l+144|0;j=b+24|0;k=b+32|0;m=b+16|0;n=b+8|0;p=b;q=b+28|0;r=b+4|0;c[m>>2]=k;s=m+4|0;c[s>>2]=311;t=k+100|0;o=0;ma(132,p|0,g|0);u=o;o=0;if(!(u&1)){o=0;u=_(93,p|0,102968)|0;v=o;o=0;if(v&1){v=Pa()|0;w=v;x=z}else{a[q>>0]=0;v=c[e>>2]|0;c[r>>2]=v;y=c[g+4>>2]|0;g=v;o=0;c[j>>2]=c[r>>2];r=ia(1,d|0,j|0,f|0,p|0,y|0,h|0,q|0,u|0,m|0,n|0,t|0)|0;t=o;o=0;a:do if(!(t&1)){if(r){y=i+11|0;if((a[y>>0]|0)<0){f=c[i>>2]|0;a[j>>0]=0;cI(f,j);c[i+4>>2]=0}else{a[j>>0]=0;cI(i,j);a[y>>0]=0}if(a[q>>0]|0){o=0;y=_(c[(c[u>>2]|0)+28>>2]|0,u|0,45)|0;f=o;o=0;if(f&1)break;o=0;ma(130,i|0,y|0);y=o;o=0;if(y&1)break}o=0;y=_(c[(c[u>>2]|0)+28>>2]|0,u|0,48)|0;f=o;o=0;if(f&1)break;f=c[n>>2]|0;A=f+-1|0;B=c[m>>2]|0;while(1){if(B>>>0>=A>>>0)break;if((a[B>>0]|0)!=y<<24>>24)break;B=B+1|0}o=0;$(118,i|0,B|0,f|0)|0;y=o;o=0;if(y&1)break}y=c[d>>2]|0;do if(y){A=c[y+12>>2]|0;if((A|0)==(c[y+16>>2]|0)){o=0;C=Z(c[(c[y>>2]|0)+36>>2]|0,y|0)|0;D=o;o=0;if(D&1)break a;else E=C}else E=KH(a[A>>0]|0)|0;if(lI(E,JH()|0)|0){c[d>>2]=0;F=1;break}else{F=(c[d>>2]|0)==0;break}}else F=1;while(0);do if(v){y=c[g+12>>2]|0;if((y|0)==(c[g+16>>2]|0)){o=0;f=Z(c[(c[v>>2]|0)+36>>2]|0,g|0)|0;B=o;o=0;if(B&1)break a;else G=f}else G=KH(a[y>>0]|0)|0;if(!(lI(G,JH()|0)|0))if(F)break;else{H=34;break}else{c[e>>2]=0;H=32;break}}else H=32;while(0);if((H|0)==32?F:0)H=34;if((H|0)==34)c[h>>2]=c[h>>2]|2;y=c[d>>2]|0;$I(p);f=c[m>>2]|0;c[m>>2]=0;if(f|0?(o=0,la(c[s>>2]|0,f|0),f=o,o=0,f&1):0){f=Qa(0)|0;Id(f)}l=b;return y|0}while(0);b=Pa()|0;w=b;x=z}$I(p);p=c[m>>2]|0;c[m>>2]=0;if(!p){I=x;J=w}else{K=x;L=w;M=p;H=41}}else{p=Pa()|0;c[m>>2]=0;K=z;L=p;M=k;H=41}if((H|0)==41){o=0;la(c[s>>2]|0,M|0);M=o;o=0;if(M&1){M=Qa(0)|0;Id(M)}else{I=K;J=L}}$a(J|0);return 0}function kN(a){a=a|0;return}\nfunction lN(e,f,g,h,i,j,k,m,n,p,q){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;m=m|0;n=n|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,pa=0,qa=0,ra=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0;r=l;l=l+512|0;s=r+88|0;t=r+96|0;u=r+80|0;v=r+72|0;w=r+68|0;x=r+500|0;y=r+497|0;A=r+496|0;B=r+56|0;C=r+44|0;D=r+32|0;E=r+20|0;F=r+8|0;G=r+4|0;H=r;c[s>>2]=q;c[u>>2]=t;q=u+4|0;c[q>>2]=311;c[v>>2]=t;c[w>>2]=t+400;c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;t=0;while(1){if((t|0)==3)break;c[B+(t<<2)>>2]=0;t=t+1|0}c[C>>2]=0;c[C+4>>2]=0;c[C+8>>2]=0;t=0;while(1){if((t|0)==3)break;c[C+(t<<2)>>2]=0;t=t+1|0}c[D>>2]=0;c[D+4>>2]=0;c[D+8>>2]=0;t=0;while(1){if((t|0)==3)break;c[D+(t<<2)>>2]=0;t=t+1|0}c[E>>2]=0;c[E+4>>2]=0;c[E+8>>2]=0;t=0;while(1){if((t|0)==3)break;c[E+(t<<2)>>2]=0;t=t+1|0}c[F>>2]=0;c[F+4>>2]=0;c[F+8>>2]=0;t=0;while(1){if((t|0)==3)break;c[F+(t<<2)>>2]=0;t=t+1|0}o=0;sa(1,g|0,h|0,x|0,y|0,A|0,B|0,C|0,D|0,E|0,G|0);h=o;o=0;a:do if(h&1){g=Pa()|0;I=g;J=z}else{c[p>>2]=c[n>>2];g=m+8|0;t=D+11|0;K=D+4|0;L=E+11|0;M=E+4|0;N=(i&512|0)!=0;O=C+11|0;P=C+4|0;Q=F+11|0;R=F+4|0;S=x+3|0;T=B+11|0;U=B+4|0;V=0;W=0;b:while(1){if(W>>>0>=4){X=246;break}Y=c[e>>2]|0;do if(Y){_=c[Y+12>>2]|0;if((_|0)==(c[Y+16>>2]|0)){o=0;$=Z(c[(c[Y>>2]|0)+36>>2]|0,Y|0)|0;aa=o;o=0;if(aa&1){X=35;break b}else ba=$}else ba=KH(a[_>>0]|0)|0;if(lI(ba,JH()|0)|0){c[e>>2]=0;ca=1;break}else{ca=(c[e>>2]|0)==0;break}}else ca=1;while(0);Y=c[f>>2]|0;do if(Y){_=c[Y+12>>2]|0;if((_|0)==(c[Y+16>>2]|0)){o=0;$=Z(c[(c[Y>>2]|0)+36>>2]|0,Y|0)|0;aa=o;o=0;if(aa&1){X=35;break b}else da=$}else da=KH(a[_>>0]|0)|0;if(!(lI(da,JH()|0)|0))if(ca){ea=Y;break}else{X=246;break b}else{c[f>>2]=0;X=32;break}}else X=32;while(0);if((X|0)==32){X=0;if(ca){X=246;break}else ea=0}c:do switch(a[x+W>>0]|0){case 1:{if((W|0)!=3){Y=c[e>>2]|0;_=c[Y+12>>2]|0;if((_|0)==(c[Y+16>>2]|0)){o=0;$=Z(c[(c[Y>>2]|0)+36>>2]|0,Y|0)|0;Y=o;o=0;if(Y&1){X=35;break b}else fa=$}else fa=KH(a[_>>0]|0)|0;if((fa&255)<<24>>24<=-1){X=47;break b}if(!(b[(c[g>>2]|0)+(fa<<24>>24<<1)>>1]&8192)){X=47;break b}_=c[e>>2]|0;$=_+12|0;Y=c[$>>2]|0;if((Y|0)==(c[_+16>>2]|0)){o=0;aa=Z(c[(c[_>>2]|0)+40>>2]|0,_|0)|0;_=o;o=0;if(_&1){X=35;break b}else ga=aa}else{c[$>>2]=Y+1;ga=KH(a[Y>>0]|0)|0}o=0;ma(130,F|0,ga&255|0);Y=o;o=0;if(Y&1){X=35;break b}else{ha=ea;ia=ea;X=49}}else ja=V;break}case 0:{if((W|0)==3)ja=V;else{ha=ea;ia=ea;X=49}break}case 3:{Y=a[t>>0]|0;$=Y<<24>>24<0?c[K>>2]|0:Y&255;Y=a[L>>0]|0;aa=Y<<24>>24<0?c[M>>2]|0:Y&255;if(($|0)==(0-aa|0))ja=V;else{if(!$){$=c[e>>2]|0;Y=c[$+12>>2]|0;if((Y|0)==(c[$+16>>2]|0)){o=0;_=Z(c[(c[$>>2]|0)+36>>2]|0,$|0)|0;$=o;o=0;if($&1){X=35;break b}else ka=_}else ka=KH(a[Y>>0]|0)|0;if((a[((a[L>>0]|0)<0?c[E>>2]|0:E)>>0]|0)!=(ka&255)<<24>>24){ja=V;break c}Y=c[e>>2]|0;_=Y+12|0;$=c[_>>2]|0;if(($|0)==(c[Y+16>>2]|0)){o=0;Z(c[(c[Y>>2]|0)+40>>2]|0,Y|0)|0;Y=o;o=0;if(Y&1){X=35;break b}}else{c[_>>2]=$+1;KH(a[$>>0]|0)|0}a[k>>0]=1;$=a[L>>0]|0;ja=($<<24>>24<0?c[M>>2]|0:$&255)>>>0>1?E:V;break c}$=c[e>>2]|0;_=c[$+12>>2]|0;Y=(_|0)==(c[$+16>>2]|0);if(!aa){if(Y){o=0;aa=Z(c[(c[$>>2]|0)+36>>2]|0,$|0)|0;pa=o;o=0;if(pa&1){X=35;break b}else qa=aa}else qa=KH(a[_>>0]|0)|0;if((a[((a[t>>0]|0)<0?c[D>>2]|0:D)>>0]|0)!=(qa&255)<<24>>24){a[k>>0]=1;ja=V;break c}aa=c[e>>2]|0;pa=aa+12|0;ra=c[pa>>2]|0;if((ra|0)==(c[aa+16>>2]|0)){o=0;Z(c[(c[aa>>2]|0)+40>>2]|0,aa|0)|0;aa=o;o=0;if(aa&1){X=35;break b}}else{c[pa>>2]=ra+1;KH(a[ra>>0]|0)|0}ra=a[t>>0]|0;ja=(ra<<24>>24<0?c[K>>2]|0:ra&255)>>>0>1?D:V;break c}if(Y){o=0;Y=Z(c[(c[$>>2]|0)+36>>2]|0,$|0)|0;$=o;o=0;if($&1){X=35;break b}else ta=Y}else ta=KH(a[_>>0]|0)|0;_=c[e>>2]|0;Y=_+12|0;$=c[Y>>2]|0;ra=($|0)==(c[_+16>>2]|0);if((a[((a[t>>0]|0)<0?c[D>>2]|0:D)>>0]|0)==(ta&255)<<24>>24){if(ra){o=0;Z(c[(c[_>>2]|0)+40>>2]|0,_|0)|0;pa=o;o=0;if(pa&1){X=35;break b}}else{c[Y>>2]=$+1;KH(a[$>>0]|0)|0}Y=a[t>>0]|0;ja=(Y<<24>>24<0?c[K>>2]|0:Y&255)>>>0>1?D:V;break c}if(ra){o=0;ra=Z(c[(c[_>>2]|0)+36>>2]|0,_|0)|0;_=o;o=0;if(_&1){X=35;break b}else ua=ra}else ua=KH(a[$>>0]|0)|0;if((a[((a[L>>0]|0)<0?c[E>>2]|0:E)>>0]|0)!=(ua&255)<<24>>24){X=109;break b}$=c[e>>2]|0;ra=$+12|0;_=c[ra>>2]|0;if((_|0)==(c[$+16>>2]|0)){o=0;Z(c[(c[$>>2]|0)+40>>2]|0,$|0)|0;$=o;o=0;if($&1){X=35;break b}}else{c[ra>>2]=_+1;KH(a[_>>0]|0)|0}a[k>>0]=1;_=a[L>>0]|0;ja=(_<<24>>24<0?c[M>>2]|0:_&255)>>>0>1?E:V}break}case 2:{if(!(W>>>0<2|(V|0)!=0)?!(N|(W|0)==2&(a[S>>0]|0)!=0):0){ja=0;break c}_=a[O>>0]|0;ra=_<<24>>24<0;$=c[C>>2]|0;Y=ra?$:C;pa=Y;d:do if((W|0)!=0?(d[x+(W+-1)>>0]|0)<2:0){aa=Y+(ra?c[P>>2]|0:_&255)|0;va=pa;while(1){wa=va;if((aa|0)==(wa|0))break;xa=a[wa>>0]|0;if(xa<<24>>24<=-1)break;if(!(b[(c[g>>2]|0)+(xa<<24>>24<<1)>>1]&8192))break;va=wa+1|0}aa=va-pa|0;wa=a[Q>>0]|0;xa=wa<<24>>24<0;ya=c[R>>2]|0;za=wa&255;if(aa>>>0<=(xa?ya:za)>>>0){wa=c[F>>2]|0;Aa=(xa?wa:F)+(xa?ya:za)|0;Ba=Y;Ca=(xa?wa+ya|0:F+za|0)+(0-aa)|0;while(1){if((Ca|0)==(Aa|0)){Da=ea;Ea=va;Fa=_;Ga=$;Ha=ea;break d}if((a[Ca>>0]|0)!=(a[Ba>>0]|0)){Da=ea;Ea=pa;Fa=_;Ga=$;Ha=ea;break d}Ba=Ba+1|0;Ca=Ca+1|0}}else{Da=ea;Ea=pa;Fa=_;Ga=$;Ha=ea}}else{Da=ea;Ea=pa;Fa=_;Ga=$;Ha=ea}while(0);e:while(1){$=Fa<<24>>24<0;_=($?Ga:C)+($?c[P>>2]|0:Fa&255)|0;$=Ea;if((_|0)==($|0)){Ia=_;break}_=c[e>>2]|0;do if(_){pa=c[_+12>>2]|0;if((pa|0)==(c[_+16>>2]|0)){o=0;Y=Z(c[(c[_>>2]|0)+36>>2]|0,_|0)|0;ra=o;o=0;if(ra&1){X=148;break b}else Ja=Y}else Ja=KH(a[pa>>0]|0)|0;if(lI(Ja,JH()|0)|0){c[e>>2]=0;Ka=1;break}else{Ka=(c[e>>2]|0)==0;break}}else Ka=1;while(0);do if(Ha){_=c[Ha+12>>2]|0;if((_|0)==(c[Ha+16>>2]|0)){o=0;pa=Z(c[(c[Ha>>2]|0)+36>>2]|0,Ha|0)|0;Y=o;o=0;if(Y&1){X=148;break b}else La=pa}else La=KH(a[_>>0]|0)|0;if(!(lI(La,JH()|0)|0))if(Ka^(Da|0)==0){Ma=Da;Na=Da;break}else{Ia=$;break e}else{c[f>>2]=0;Oa=0;X=138;break}}else{Oa=Da;X=138}while(0);if((X|0)==138){X=0;if(Ka){Ia=$;break}else{Ma=Oa;Na=0}}_=c[e>>2]|0;pa=c[_+12>>2]|0;if((pa|0)==(c[_+16>>2]|0)){o=0;Y=Z(c[(c[_>>2]|0)+36>>2]|0,_|0)|0;_=o;o=0;if(_&1){X=148;break b}else Ra=Y}else Ra=KH(a[pa>>0]|0)|0;if((a[$>>0]|0)!=(Ra&255)<<24>>24){Ia=$;break}pa=c[e>>2]|0;Y=pa+12|0;_=c[Y>>2]|0;if((_|0)==(c[pa+16>>2]|0)){o=0;Z(c[(c[pa>>2]|0)+40>>2]|0,pa|0)|0;pa=o;o=0;if(pa&1){X=149;break b}}else{c[Y>>2]=_+1;KH(a[_>>0]|0)|0}Da=Ma;Ea=$+1|0;Fa=a[O>>0]|0;Ga=c[C>>2]|0;Ha=Na}if(N?(_=a[O>>0]|0,Y=_<<24>>24<0,((Y?c[C>>2]|0:C)+(Y?c[P>>2]|0:_&255)|0)!=(Ia|0)):0){X=152;break b}else ja=V;break}case 4:{_=0;Y=ea;pa=ea;f:while(1){ra=c[e>>2]|0;do if(ra){Ca=c[ra+12>>2]|0;if((Ca|0)==(c[ra+16>>2]|0)){o=0;Ba=Z(c[(c[ra>>2]|0)+36>>2]|0,ra|0)|0;va=o;o=0;if(va&1){X=244;break b}else Sa=Ba}else Sa=KH(a[Ca>>0]|0)|0;if(lI(Sa,JH()|0)|0){c[e>>2]=0;Ta=1;break}else{Ta=(c[e>>2]|0)==0;break}}else Ta=1;while(0);do if(pa){ra=c[pa+12>>2]|0;if((ra|0)==(c[pa+16>>2]|0)){o=0;$=Z(c[(c[pa>>2]|0)+36>>2]|0,pa|0)|0;Ca=o;o=0;if(Ca&1){X=244;break b}else Ua=$}else Ua=KH(a[ra>>0]|0)|0;if(!(lI(Ua,JH()|0)|0))if(Ta^(Y|0)==0){Va=Y;Wa=Y;break}else{Xa=Y;break f}else{c[f>>2]=0;Ya=0;X=166;break}}else{Ya=Y;X=166}while(0);if((X|0)==166){X=0;if(Ta){Xa=Ya;break}else{Va=Ya;Wa=0}}ra=c[e>>2]|0;$=c[ra+12>>2]|0;if(($|0)==(c[ra+16>>2]|0)){o=0;Ca=Z(c[(c[ra>>2]|0)+36>>2]|0,ra|0)|0;ra=o;o=0;if(ra&1){X=244;break b}else Za=Ca}else Za=KH(a[$>>0]|0)|0;$=Za&255;if($<<24>>24>-1?(b[(c[g>>2]|0)+(Za<<24>>24<<1)>>1]&2048)!=0:0){Ca=c[p>>2]|0;if((Ca|0)==(c[s>>2]|0)){o=0;na(103,n|0,p|0,s|0);ra=o;o=0;if(ra&1){X=244;break b}_a=c[p>>2]|0}else _a=Ca;c[p>>2]=_a+1;a[_a>>0]=$;ab=_+1|0}else{Ca=a[T>>0]|0;if(!((a[A>>0]|0)==$<<24>>24&(_|0?((Ca<<24>>24<0?c[U>>2]|0:Ca&255)|0)!=0:0))){Xa=Va;break}Ca=c[v>>2]|0;if((Ca|0)==(c[w>>2]|0)){o=0;na(104,u|0,v|0,w|0);$=o;o=0;if($&1){X=244;break b}bb=c[v>>2]|0}else bb=Ca;c[v>>2]=bb+4;c[bb>>2]=_;ab=0}Ca=c[e>>2]|0;$=Ca+12|0;ra=c[$>>2]|0;if((ra|0)==(c[Ca+16>>2]|0)){o=0;Z(c[(c[Ca>>2]|0)+40>>2]|0,Ca|0)|0;Ca=o;o=0;if(Ca&1){X=244;break b}else{_=ab;Y=Va;pa=Wa;continue}}else{c[$>>2]=ra+1;KH(a[ra>>0]|0)|0;_=ab;Y=Va;pa=Wa;continue}}pa=c[v>>2]|0;if(_|0?(c[u>>2]|0)!=(pa|0):0){if((pa|0)==(c[w>>2]|0)){o=0;na(104,u|0,v|0,w|0);Y=o;o=0;if(Y&1){X=244;break b}cb=c[v>>2]|0}else cb=pa;c[v>>2]=cb+4;c[cb>>2]=_}g:do if((c[G>>2]|0)>0){pa=c[e>>2]|0;do if(pa){Y=c[pa+12>>2]|0;if((Y|0)==(c[pa+16>>2]|0)){o=0;ra=Z(c[(c[pa>>2]|0)+36>>2]|0,pa|0)|0;$=o;o=0;if($&1){X=244;break b}else db=ra}else db=KH(a[Y>>0]|0)|0;if(lI(db,JH()|0)|0){c[e>>2]=0;eb=1;break}else{eb=(c[e>>2]|0)==0;break}}else eb=1;while(0);do if(Xa){pa=c[Xa+12>>2]|0;if((pa|0)==(c[Xa+16>>2]|0)){o=0;Y=Z(c[(c[Xa>>2]|0)+36>>2]|0,Xa|0)|0;ra=o;o=0;if(ra&1){X=244;break b}else fb=Y}else fb=KH(a[pa>>0]|0)|0;if(!(lI(fb,JH()|0)|0))if(eb){gb=Xa;break}else{X=243;break b}else{c[f>>2]=0;X=204;break}}else X=204;while(0);if((X|0)==204){X=0;if(eb){X=243;break b}else gb=0}pa=c[e>>2]|0;Y=c[pa+12>>2]|0;if((Y|0)==(c[pa+16>>2]|0)){o=0;ra=Z(c[(c[pa>>2]|0)+36>>2]|0,pa|0)|0;pa=o;o=0;if(pa&1){X=244;break b}else hb=ra}else hb=KH(a[Y>>0]|0)|0;if((a[y>>0]|0)!=(hb&255)<<24>>24){X=243;break b}Y=c[e>>2]|0;ra=Y+12|0;pa=c[ra>>2]|0;if((pa|0)==(c[Y+16>>2]|0)){o=0;Z(c[(c[Y>>2]|0)+40>>2]|0,Y|0)|0;Y=o;o=0;if(Y&1){X=244;break b}else{ib=gb;jb=gb}}else{c[ra>>2]=pa+1;KH(a[pa>>0]|0)|0;ib=gb;jb=gb}while(1){if((c[G>>2]|0)<=0)break g;pa=c[e>>2]|0;do if(pa){ra=c[pa+12>>2]|0;if((ra|0)==(c[pa+16>>2]|0)){o=0;Y=Z(c[(c[pa>>2]|0)+36>>2]|0,pa|0)|0;$=o;o=0;if($&1){X=244;break b}else kb=Y}else kb=KH(a[ra>>0]|0)|0;if(lI(kb,JH()|0)|0){c[e>>2]=0;lb=1;break}else{lb=(c[e>>2]|0)==0;break}}else lb=1;while(0);do if(jb){pa=c[jb+12>>2]|0;if((pa|0)==(c[jb+16>>2]|0)){o=0;ra=Z(c[(c[jb>>2]|0)+36>>2]|0,jb|0)|0;Y=o;o=0;if(Y&1){X=244;break b}else mb=ra}else mb=KH(a[pa>>0]|0)|0;if(!(lI(mb,JH()|0)|0))if(lb^(ib|0)==0){nb=ib;ob=ib;break}else{X=243;break b}else{c[f>>2]=0;pb=0;X=227;break}}else{pb=ib;X=227}while(0);if((X|0)==227){X=0;if(lb){X=243;break b}else{nb=pb;ob=0}}pa=c[e>>2]|0;ra=c[pa+12>>2]|0;if((ra|0)==(c[pa+16>>2]|0)){o=0;Y=Z(c[(c[pa>>2]|0)+36>>2]|0,pa|0)|0;pa=o;o=0;if(pa&1){X=244;break b}else qb=Y}else qb=KH(a[ra>>0]|0)|0;if((qb&255)<<24>>24<=-1){X=243;break b}if(!(b[(c[g>>2]|0)+(qb<<24>>24<<1)>>1]&2048)){X=243;break b}if((c[p>>2]|0)==(c[s>>2]|0)?(o=0,na(103,n|0,p|0,s|0),ra=o,o=0,ra&1):0){X=244;break b}ra=c[e>>2]|0;Y=c[ra+12>>2]|0;if((Y|0)==(c[ra+16>>2]|0)){o=0;pa=Z(c[(c[ra>>2]|0)+36>>2]|0,ra|0)|0;ra=o;o=0;if(ra&1){X=244;break b}else rb=pa}else rb=KH(a[Y>>0]|0)|0;Y=c[p>>2]|0;c[p>>2]=Y+1;a[Y>>0]=rb;c[G>>2]=(c[G>>2]|0)+-1;Y=c[e>>2]|0;pa=Y+12|0;ra=c[pa>>2]|0;if((ra|0)==(c[Y+16>>2]|0)){o=0;Z(c[(c[Y>>2]|0)+40>>2]|0,Y|0)|0;Y=o;o=0;if(Y&1){X=244;break b}else{ib=nb;jb=ob;continue}}else{c[pa>>2]=ra+1;KH(a[ra>>0]|0)|0;ib=nb;jb=ob;continue}}}while(0);if((c[p>>2]|0)==(c[n>>2]|0)){X=243;break b}else ja=V;break}default:ja=V}while(0);h:do if((X|0)==49)while(1){X=0;_=c[e>>2]|0;do if(_){ra=c[_+12>>2]|0;if((ra|0)==(c[_+16>>2]|0)){o=0;pa=Z(c[(c[_>>2]|0)+36>>2]|0,_|0)|0;Y=o;o=0;if(Y&1){X=35;break b}else sb=pa}else sb=KH(a[ra>>0]|0)|0;if(lI(sb,JH()|0)|0){c[e>>2]=0;tb=1;break}else{tb=(c[e>>2]|0)==0;break}}else tb=1;while(0);do if(ia){_=c[ia+12>>2]|0;if((_|0)==(c[ia+16>>2]|0)){o=0;ra=Z(c[(c[ia>>2]|0)+36>>2]|0,ia|0)|0;pa=o;o=0;if(pa&1){X=35;break b}else ub=ra}else ub=KH(a[_>>0]|0)|0;if(!(lI(ub,JH()|0)|0))if(tb^(ha|0)==0){vb=ha;wb=ha;break}else{ja=V;break h}else{c[f>>2]=0;xb=0;X=62;break}}else{xb=ha;X=62}while(0);if((X|0)==62){X=0;if(tb){ja=V;break h}else{vb=xb;wb=0}}_=c[e>>2]|0;ra=c[_+12>>2]|0;if((ra|0)==(c[_+16>>2]|0)){o=0;pa=Z(c[(c[_>>2]|0)+36>>2]|0,_|0)|0;_=o;o=0;if(_&1){X=35;break b}else yb=pa}else yb=KH(a[ra>>0]|0)|0;if((yb&255)<<24>>24<=-1){ja=V;break h}if(!(b[(c[g>>2]|0)+(yb<<24>>24<<1)>>1]&8192)){ja=V;break h}ra=c[e>>2]|0;pa=ra+12|0;_=c[pa>>2]|0;if((_|0)==(c[ra+16>>2]|0)){o=0;Y=Z(c[(c[ra>>2]|0)+40>>2]|0,ra|0)|0;ra=o;o=0;if(ra&1){X=35;break b}else zb=Y}else{c[pa>>2]=_+1;zb=KH(a[_>>0]|0)|0}o=0;ma(130,F|0,zb&255|0);_=o;o=0;if(_&1){X=35;break b}else{ha=vb;ia=wb;X=49}}while(0);V=ja;W=W+1|0}i:do if((X|0)==35){W=Pa()|0;I=W;J=z;break a}else if((X|0)==47){c[j>>2]=c[j>>2]|4;Ab=0}else if((X|0)==109){c[j>>2]=c[j>>2]|4;Ab=0}else if((X|0)==148){W=Pa()|0;I=W;J=z;break a}else if((X|0)==149){W=Pa()|0;I=W;J=z;break a}else if((X|0)==152){c[j>>2]=c[j>>2]|4;Ab=0}else if((X|0)==243){c[j>>2]=c[j>>2]|4;Ab=0}else if((X|0)==244){W=Pa()|0;I=W;J=z;break a}else if((X|0)==246){j:do if(V|0){W=V+11|0;g=V+4|0;U=1;k:while(1){T=a[W>>0]|0;if(T<<24>>24<0)Bb=c[g>>2]|0;else Bb=T&255;if(U>>>0>=Bb>>>0)break j;T=c[e>>2]|0;do if(T){P=c[T+12>>2]|0;if((P|0)==(c[T+16>>2]|0)){o=0;O=Z(c[(c[T>>2]|0)+36>>2]|0,T|0)|0;N=o;o=0;if(N&1){X=274;break k}else Cb=O}else Cb=KH(a[P>>0]|0)|0;if(lI(Cb,JH()|0)|0){c[e>>2]=0;Db=1;break}else{Db=(c[e>>2]|0)==0;break}}else Db=1;while(0);T=c[f>>2]|0;do if(T){P=c[T+12>>2]|0;if((P|0)==(c[T+16>>2]|0)){o=0;O=Z(c[(c[T>>2]|0)+36>>2]|0,T|0)|0;N=o;o=0;if(N&1){X=274;break k}else Eb=O}else Eb=KH(a[P>>0]|0)|0;if(!(lI(Eb,JH()|0)|0))if(Db)break;else{X=273;break k}else{c[f>>2]=0;X=265;break}}else X=265;while(0);if((X|0)==265?(X=0,Db):0){X=273;break}T=c[e>>2]|0;P=c[T+12>>2]|0;if((P|0)==(c[T+16>>2]|0)){o=0;O=Z(c[(c[T>>2]|0)+36>>2]|0,T|0)|0;T=o;o=0;if(T&1){X=274;break}else Fb=O}else Fb=KH(a[P>>0]|0)|0;if((a[W>>0]|0)<0)Gb=c[V>>2]|0;else Gb=V;if((a[Gb+U>>0]|0)!=(Fb&255)<<24>>24){X=273;break}P=U+1|0;O=c[e>>2]|0;T=O+12|0;N=c[T>>2]|0;if((N|0)==(c[O+16>>2]|0)){o=0;Z(c[(c[O>>2]|0)+40>>2]|0,O|0)|0;O=o;o=0;if(O&1){X=274;break}else{U=P;continue}}else{c[T>>2]=N+1;KH(a[N>>0]|0)|0;U=P;continue}}if((X|0)==273){c[j>>2]=c[j>>2]|4;Ab=0;break i}else if((X|0)==274){U=Pa()|0;I=U;J=z;break a}}while(0);U=c[u>>2]|0;W=c[v>>2]|0;if((U|0)!=(W|0)){c[H>>2]=0;o=0;oa(54,B|0,U|0,W|0,H|0);W=o;o=0;if(W&1){W=Pa()|0;I=W;J=z;break a}if(!(c[H>>2]|0)){Ab=1;break}else{c[j>>2]=c[j>>2]|4;Ab=0;break}}else Ab=1}while(0);xR(F);xR(E);xR(D);xR(C);xR(B);V=c[u>>2]|0;c[u>>2]=0;if(V|0?(o=0,la(c[q>>2]|0,V|0),V=o,o=0,V&1):0){V=Qa(0)|0;Id(V)}l=r;return Ab|0}while(0);xR(F);xR(E);xR(D);xR(C);xR(B);B=c[u>>2]|0;c[u>>2]=0;if(B|0?(o=0,la(c[q>>2]|0,B|0),B=o,o=0,B&1):0){B=Qa(0)|0;Id(B)}$a(I|0);return 0}function mN(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;f=l;l=l+16|0;g=d;h=f+12|0;i=f;j=b+11|0;k=a[j>>0]|0;m=k<<24>>24<0;if(m){n=(c[b+8>>2]&2147483647)+-1|0;p=c[b+4>>2]|0}else{n=10;p=k&255}q=e-g|0;do if(q|0){if(m){r=c[b>>2]|0;s=c[b+4>>2]|0}else{r=b;s=k&255}if(nN(d,r,r+s|0)|0){c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;if(q>>>0>4294967279)vR(i);if(q>>>0<11){a[i+11>>0]=q;t=i}else{u=q+16&-16;v=kR(u)|0;c[i>>2]=v;c[i+8>>2]=u|-2147483648;c[i+4>>2]=q;t=v}v=d;u=t;while(1){if((v|0)==(e|0))break;cI(u,v);v=v+1|0;u=u+1|0}a[h>>0]=0;cI(t+q|0,h);u=a[i+11>>0]|0;v=u<<24>>24<0;o=0;$(119,b|0,(v?c[i>>2]|0:i)|0,(v?c[i+4>>2]|0:u&255)|0)|0;u=o;o=0;if(u&1){u=Pa()|0;xR(i);$a(u|0)}else{xR(i);break}}else{if((n-p|0)>>>0<q>>>0)GR(b,n,p+q-n|0,p,p,0,0);if((a[j>>0]|0)<0)w=c[b>>2]|0;else w=b;u=e+(p-g)|0;v=w+p|0;x=d;while(1){if((x|0)==(e|0))break;cI(v,x);v=v+1|0;x=x+1|0}a[h>>0]=0;cI(w+u|0,h);x=p+q|0;if((a[j>>0]|0)<0){c[b+4>>2]=x;break}else{a[j>>0]=x;break}}}while(0);l=f;return b|0}function nN(a,b,c){a=a|0;b=b|0;c=c|0;return b>>>0<=a>>>0&a>>>0<c>>>0|0}function oN(b,d,e,f,g,h,i,j,k,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;m=m|0;var n=0,p=0,q=0,r=0,s=0,t=0;n=l;l=l+16|0;p=n+12|0;q=n;if(b){b=_I(d,104688)|0;sd[c[(c[b>>2]|0)+44>>2]&255](p,b);r=c[p>>2]|0;a[e>>0]=r;a[e+1>>0]=r>>8;a[e+2>>0]=r>>16;a[e+3>>0]=r>>24;sd[c[(c[b>>2]|0)+32>>2]&255](q,b);r=k+11|0;if((a[r>>0]|0)<0){s=c[k>>2]|0;a[p>>0]=0;cI(s,p);c[k+4>>2]=0}else{a[p>>0]=0;cI(k,p);a[r>>0]=0}o=0;ma(189,k|0,0);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)};c[k>>2]=c[q>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];r=0;while(1){if((r|0)==3)break;c[q+(r<<2)>>2]=0;r=r+1|0}xR(q);sd[c[(c[b>>2]|0)+28>>2]&255](q,b);r=j+11|0;if((a[r>>0]|0)<0){s=c[j>>2]|0;a[p>>0]=0;cI(s,p);c[j+4>>2]=0}else{a[p>>0]=0;cI(j,p);a[r>>0]=0}o=0;ma(189,j|0,0);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)};c[j>>2]=c[q>>2];c[j+4>>2]=c[q+4>>2];c[j+8>>2]=c[q+8>>2];r=0;while(1){if((r|0)==3)break;c[q+(r<<2)>>2]=0;r=r+1|0}xR(q);a[f>>0]=dd[c[(c[b>>2]|0)+12>>2]&255](b)|0;a[g>>0]=dd[c[(c[b>>2]|0)+16>>2]&255](b)|0;sd[c[(c[b>>2]|0)+20>>2]&255](q,b);r=h+11|0;if((a[r>>0]|0)<0){s=c[h>>2]|0;a[p>>0]=0;cI(s,p);c[h+4>>2]=0}else{a[p>>0]=0;cI(h,p);a[r>>0]=0}o=0;ma(189,h|0,0);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)};c[h>>2]=c[q>>2];c[h+4>>2]=c[q+4>>2];c[h+8>>2]=c[q+8>>2];r=0;while(1){if((r|0)==3)break;c[q+(r<<2)>>2]=0;r=r+1|0}xR(q);sd[c[(c[b>>2]|0)+24>>2]&255](q,b);r=i+11|0;if((a[r>>0]|0)<0){s=c[i>>2]|0;a[p>>0]=0;cI(s,p);c[i+4>>2]=0}else{a[p>>0]=0;cI(i,p);a[r>>0]=0}o=0;ma(189,i|0,0);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)};c[i>>2]=c[q>>2];c[i+4>>2]=c[q+4>>2];c[i+8>>2]=c[q+8>>2];r=0;while(1){if((r|0)==3)break;c[q+(r<<2)>>2]=0;r=r+1|0}xR(q);t=dd[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{b=_I(d,104680)|0;sd[c[(c[b>>2]|0)+44>>2]&255](p,b);d=c[p>>2]|0;a[e>>0]=d;a[e+1>>0]=d>>8;a[e+2>>0]=d>>16;a[e+3>>0]=d>>24;sd[c[(c[b>>2]|0)+32>>2]&255](q,b);d=k+11|0;if((a[d>>0]|0)<0){e=c[k>>2]|0;a[p>>0]=0;cI(e,p);c[k+4>>2]=0}else{a[p>>0]=0;cI(k,p);a[d>>0]=0}o=0;ma(189,k|0,0);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)};c[k>>2]=c[q>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];k=0;while(1){if((k|0)==3)break;c[q+(k<<2)>>2]=0;k=k+1|0}xR(q);sd[c[(c[b>>2]|0)+28>>2]&255](q,b);k=j+11|0;if((a[k>>0]|0)<0){d=c[j>>2]|0;a[p>>0]=0;cI(d,p);c[j+4>>2]=0}else{a[p>>0]=0;cI(j,p);a[k>>0]=0}o=0;ma(189,j|0,0);k=o;o=0;if(k&1){k=Qa(0)|0;Id(k)};c[j>>2]=c[q>>2];c[j+4>>2]=c[q+4>>2];c[j+8>>2]=c[q+8>>2];j=0;while(1){if((j|0)==3)break;c[q+(j<<2)>>2]=0;j=j+1|0}xR(q);a[f>>0]=dd[c[(c[b>>2]|0)+12>>2]&255](b)|0;a[g>>0]=dd[c[(c[b>>2]|0)+16>>2]&255](b)|0;sd[c[(c[b>>2]|0)+20>>2]&255](q,b);g=h+11|0;if((a[g>>0]|0)<0){f=c[h>>2]|0;a[p>>0]=0;cI(f,p);c[h+4>>2]=0}else{a[p>>0]=0;cI(h,p);a[g>>0]=0}o=0;ma(189,h|0,0);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)};c[h>>2]=c[q>>2];c[h+4>>2]=c[q+4>>2];c[h+8>>2]=c[q+8>>2];h=0;while(1){if((h|0)==3)break;c[q+(h<<2)>>2]=0;h=h+1|0}xR(q);sd[c[(c[b>>2]|0)+24>>2]&255](q,b);h=i+11|0;if((a[h>>0]|0)<0){g=c[i>>2]|0;a[p>>0]=0;cI(g,p);c[i+4>>2]=0}else{a[p>>0]=0;cI(i,p);a[h>>0]=0}o=0;ma(189,i|0,0);h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)};c[i>>2]=c[q>>2];c[i+4>>2]=c[q+4>>2];c[i+8>>2]=c[q+8>>2];i=0;while(1){if((i|0)==3)break;c[q+(i<<2)>>2]=0;i=i+1|0}xR(q);t=dd[c[(c[b>>2]|0)+36>>2]&255](b)|0}c[m>>2]=t;l=n;return}function pN(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a+4|0;f=(c[e>>2]|0)!=311;g=c[a>>2]|0;h=(c[d>>2]|0)-g|0;i=h>>>0<2147483647?h<<1:-1;h=(i|0)==0?1:i;i=(c[b>>2]|0)-g|0;j=EE(f?g:0,h)|0;if(!j)oR();do if(!f){g=c[a>>2]|0;c[a>>2]=j;if(g){o=0;la(c[e>>2]|0,g|0);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}else{k=c[a>>2]|0;break}}else k=j}else{c[a>>2]=j;k=j}while(0);c[e>>2]=313;c[b>>2]=k+i;c[d>>2]=(c[a>>2]|0)+h;return}function qN(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a+4|0;f=(c[e>>2]|0)!=311;g=c[a>>2]|0;h=(c[d>>2]|0)-g|0;i=h>>>0<2147483647?h<<1:-1;h=(i|0)==0?4:i;i=(c[b>>2]|0)-g>>2;j=EE(f?g:0,h)|0;if(!j)oR();do if(!f){g=c[a>>2]|0;c[a>>2]=j;if(g){o=0;la(c[e>>2]|0,g|0);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}else{k=c[a>>2]|0;break}}else k=j}else{c[a>>2]=j;k=j}while(0);c[e>>2]=313;c[b>>2]=k+(i<<2);c[d>>2]=(c[a>>2]|0)+(h>>>2<<2);return}function rN(a){a=a|0;GI(a);return}function sN(a){a=a|0;GI(a);mR(a);return}function tN(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,$=0;b=l;l=l+576|0;j=b+424|0;k=b;m=b+24|0;n=b+16|0;p=b+12|0;q=b+8|0;r=b+564|0;s=b+4|0;t=b+464|0;c[n>>2]=m;u=n+4|0;c[u>>2]=311;v=m+400|0;o=0;ma(132,q|0,g|0);w=o;o=0;if(!(w&1)){o=0;w=_(93,q|0,103e3)|0;x=o;o=0;if(x&1){x=Pa()|0;y=x;A=z}else{a[r>>0]=0;c[s>>2]=c[e>>2];x=c[g+4>>2]|0;o=0;c[j>>2]=c[s>>2];s=ia(2,d|0,j|0,f|0,q|0,x|0,h|0,r|0,w|0,n|0,p|0,v|0)|0;v=o;o=0;a:do if(v&1)B=11;else{b:do if(s){o=0;aa(c[(c[w>>2]|0)+48>>2]|0,w|0,91393,91403,j|0)|0;x=o;o=0;if(x&1){x=Pa()|0;C=x;D=z}else{x=c[p>>2]|0;f=c[n>>2]|0;g=x-f|0;E=f;f=x;if((g|0)>392){x=BE((g>>>2)+2|0)|0;g=x;if(!x){o=0;ka(4);o=0;F=g}else{G=x;H=g;B=16}}else{G=t;H=0;B=16}do if((B|0)==16){if(!(a[r>>0]|0))I=G;else{a[G>>0]=45;I=G+1|0}g=j+40|0;x=j;J=E;K=I;L=f;while(1){if(J>>>0>=L>>>0)break;M=c[J>>2]|0;N=j;while(1){if((N|0)==(g|0)){O=g;break}if((c[N>>2]|0)==(M|0)){O=N;break}N=N+4|0}a[K>>0]=a[91393+(O-x>>2)>>0]|0;J=J+4|0;K=K+1|0;L=c[p>>2]|0}a[K>>0]=0;c[k>>2]=i;if((FG(t,91278,k)|0)!=1){o=0;la(312,91282);o=0;F=H;break}if(H|0)CE(H);break b}while(0);f=Pa()|0;E=z;if(F|0)CE(F);C=f;D=E}P=C;Q=D;break a}while(0);E=c[d>>2]|0;do if(E){f=c[E+12>>2]|0;if((f|0)==(c[E+16>>2]|0)){o=0;L=Z(c[(c[E>>2]|0)+36>>2]|0,E|0)|0;J=o;o=0;if(J&1){B=11;break a}else R=L}else R=OH(c[f>>2]|0)|0;if(nI(R,NH()|0)|0){c[d>>2]=0;S=1;break}else{S=(c[d>>2]|0)==0;break}}else S=1;while(0);E=c[e>>2]|0;do if(E){f=c[E+12>>2]|0;if((f|0)==(c[E+16>>2]|0)){o=0;L=Z(c[(c[E>>2]|0)+36>>2]|0,E|0)|0;J=o;o=0;if(J&1){B=11;break a}else T=L}else T=OH(c[f>>2]|0)|0;if(!(nI(T,NH()|0)|0))if(S)break;else{B=46;break}else{c[e>>2]=0;B=44;break}}else B=44;while(0);if((B|0)==44?S:0)B=46;if((B|0)==46)c[h>>2]=c[h>>2]|2;E=c[d>>2]|0;$I(q);f=c[n>>2]|0;c[n>>2]=0;if(f|0?(o=0,la(c[u>>2]|0,f|0),f=o,o=0,f&1):0){f=Qa(0)|0;Id(f)}l=b;return E|0}while(0);if((B|0)==11){b=Pa()|0;P=b;Q=z}y=P;A=Q}$I(q);q=c[n>>2]|0;c[n>>2]=0;if(!q){U=A;V=y}else{W=A;X=y;Y=c[u>>2]|0;$=q;B=54}}else{q=Pa()|0;c[n>>2]=0;W=z;X=q;Y=311;$=m;B=54}if((B|0)==54){o=0;la(Y|0,$|0);$=o;o=0;if($&1){$=Qa(0)|0;Id($)}else{U=W;V=X}}$a(V|0);return 0}function uN(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;b=l;l=l+432|0;j=b+424|0;k=b+24|0;m=b+16|0;n=b+8|0;p=b;q=b+428|0;r=b+4|0;c[m>>2]=k;s=m+4|0;c[s>>2]=311;t=k+400|0;o=0;ma(132,p|0,g|0);u=o;o=0;if(!(u&1)){o=0;u=_(93,p|0,103e3)|0;v=o;o=0;if(v&1){v=Pa()|0;w=v;x=z}else{a[q>>0]=0;v=c[e>>2]|0;c[r>>2]=v;y=c[g+4>>2]|0;g=v;o=0;c[j>>2]=c[r>>2];r=ia(2,d|0,j|0,f|0,p|0,y|0,h|0,q|0,u|0,m|0,n|0,t|0)|0;t=o;o=0;a:do if(!(t&1)){if(r){y=i+8+3|0;if((a[y>>0]|0)<0){f=c[i>>2]|0;c[j>>2]=0;MI(f,j);c[i+4>>2]=0}else{c[j>>2]=0;MI(i,j);a[y>>0]=0}if(a[q>>0]|0){o=0;y=_(c[(c[u>>2]|0)+44>>2]|0,u|0,45)|0;f=o;o=0;if(f&1)break;o=0;ma(190,i|0,y|0);y=o;o=0;if(y&1)break}o=0;y=_(c[(c[u>>2]|0)+44>>2]|0,u|0,48)|0;f=o;o=0;if(f&1)break;f=c[n>>2]|0;A=f+-4|0;B=c[m>>2]|0;while(1){if(B>>>0>=A>>>0)break;if((c[B>>2]|0)!=(y|0))break;B=B+4|0}o=0;$(120,i|0,B|0,f|0)|0;y=o;o=0;if(y&1)break}y=c[d>>2]|0;do if(y){A=c[y+12>>2]|0;if((A|0)==(c[y+16>>2]|0)){o=0;C=Z(c[(c[y>>2]|0)+36>>2]|0,y|0)|0;D=o;o=0;if(D&1)break a;else E=C}else E=OH(c[A>>2]|0)|0;if(nI(E,NH()|0)|0){c[d>>2]=0;F=1;break}else{F=(c[d>>2]|0)==0;break}}else F=1;while(0);do if(v){y=c[g+12>>2]|0;if((y|0)==(c[g+16>>2]|0)){o=0;f=Z(c[(c[v>>2]|0)+36>>2]|0,g|0)|0;B=o;o=0;if(B&1)break a;else G=f}else G=OH(c[y>>2]|0)|0;if(!(nI(G,NH()|0)|0))if(F)break;else{H=34;break}else{c[e>>2]=0;H=32;break}}else H=32;while(0);if((H|0)==32?F:0)H=34;if((H|0)==34)c[h>>2]=c[h>>2]|2;y=c[d>>2]|0;$I(p);f=c[m>>2]|0;c[m>>2]=0;if(f|0?(o=0,la(c[s>>2]|0,f|0),f=o,o=0,f&1):0){f=Qa(0)|0;Id(f)}l=b;return y|0}while(0);b=Pa()|0;w=b;x=z}$I(p);p=c[m>>2]|0;c[m>>2]=0;if(!p){I=x;J=w}else{K=x;L=w;M=p;H=41}}else{p=Pa()|0;c[m>>2]=0;K=z;L=p;M=k;H=41}if((H|0)==41){o=0;la(c[s>>2]|0,M|0);M=o;o=0;if(M&1){M=Qa(0)|0;Id(M)}else{I=K;J=L}}$a(J|0);return 0}function vN(b,e,f,g,h,i,j,k,m,n,p){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;m=m|0;n=n|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,_=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,pa=0,qa=0,ra=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0;q=l;l=l+512|0;r=q+96|0;s=q+104|0;t=q+88|0;u=q+80|0;v=q+76|0;w=q+504|0;x=q+72|0;y=q+68|0;A=q+56|0;B=q+44|0;C=q+32|0;D=q+20|0;E=q+8|0;F=q+4|0;G=q;c[r>>2]=p;c[t>>2]=s;p=t+4|0;c[p>>2]=311;c[u>>2]=s;c[v>>2]=s+400;c[A>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;s=0;while(1){if((s|0)==3)break;c[A+(s<<2)>>2]=0;s=s+1|0}c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;s=0;while(1){if((s|0)==3)break;c[B+(s<<2)>>2]=0;s=s+1|0}c[C>>2]=0;c[C+4>>2]=0;c[C+8>>2]=0;s=0;while(1){if((s|0)==3)break;c[C+(s<<2)>>2]=0;s=s+1|0}c[D>>2]=0;c[D+4>>2]=0;c[D+8>>2]=0;s=0;while(1){if((s|0)==3)break;c[D+(s<<2)>>2]=0;s=s+1|0}c[E>>2]=0;c[E+4>>2]=0;c[E+8>>2]=0;s=0;while(1){if((s|0)==3)break;c[E+(s<<2)>>2]=0;s=s+1|0}o=0;sa(2,f|0,g|0,w|0,x|0,y|0,A|0,B|0,C|0,D|0,F|0);g=o;o=0;a:do if(g&1){f=Pa()|0;H=f;I=z}else{c[n>>2]=c[m>>2];f=C+8+3|0;s=C+4|0;J=D+8+3|0;K=D+4|0;L=(h&512|0)!=0;M=B+8+3|0;N=B+4|0;O=E+8+3|0;P=E+4|0;Q=w+3|0;R=A+11|0;S=A+4|0;T=0;U=0;b:while(1){if(U>>>0>=4){V=247;break}W=c[b>>2]|0;do if(W){X=c[W+12>>2]|0;if((X|0)==(c[W+16>>2]|0)){o=0;Y=Z(c[(c[W>>2]|0)+36>>2]|0,W|0)|0;_=o;o=0;if(_&1){V=35;break b}else aa=Y}else aa=OH(c[X>>2]|0)|0;if(nI(aa,NH()|0)|0){c[b>>2]=0;ba=1;break}else{ba=(c[b>>2]|0)==0;break}}else ba=1;while(0);W=c[e>>2]|0;do if(W){X=c[W+12>>2]|0;if((X|0)==(c[W+16>>2]|0)){o=0;Y=Z(c[(c[W>>2]|0)+36>>2]|0,W|0)|0;_=o;o=0;if(_&1){V=35;break b}else ca=Y}else ca=OH(c[X>>2]|0)|0;if(!(nI(ca,NH()|0)|0))if(ba){da=W;break}else{V=247;break b}else{c[e>>2]=0;V=32;break}}else V=32;while(0);if((V|0)==32){V=0;if(ba){V=247;break}else da=0}c:do switch(a[w+U>>0]|0){case 1:{if((U|0)!=3){W=c[b>>2]|0;X=c[W+12>>2]|0;if((X|0)==(c[W+16>>2]|0)){o=0;Y=Z(c[(c[W>>2]|0)+36>>2]|0,W|0)|0;W=o;o=0;if(W&1){V=35;break b}else ea=Y}else ea=OH(c[X>>2]|0)|0;o=0;X=$(c[(c[k>>2]|0)+12>>2]|0,k|0,8192,ea|0)|0;Y=o;o=0;if(Y&1){V=35;break b}if(!X){V=47;break b}X=c[b>>2]|0;Y=X+12|0;W=c[Y>>2]|0;if((W|0)==(c[X+16>>2]|0)){o=0;_=Z(c[(c[X>>2]|0)+40>>2]|0,X|0)|0;X=o;o=0;if(X&1){V=35;break b}else fa=_}else{c[Y>>2]=W+4;fa=OH(c[W>>2]|0)|0}o=0;ma(190,E|0,fa|0);W=o;o=0;if(W&1){V=35;break b}else{ga=da;ha=da;V=49}}else ia=T;break}case 0:{if((U|0)==3)ia=T;else{ga=da;ha=da;V=49}break}case 3:{W=a[f>>0]|0;Y=W<<24>>24<0?c[s>>2]|0:W&255;W=a[J>>0]|0;_=W<<24>>24<0?c[K>>2]|0:W&255;if((Y|0)==(0-_|0))ia=T;else{if(!Y){Y=c[b>>2]|0;W=c[Y+12>>2]|0;if((W|0)==(c[Y+16>>2]|0)){o=0;X=Z(c[(c[Y>>2]|0)+36>>2]|0,Y|0)|0;Y=o;o=0;if(Y&1){V=35;break b}else ja=X}else ja=OH(c[W>>2]|0)|0;if((ja|0)!=(c[((a[J>>0]|0)<0?c[D>>2]|0:D)>>2]|0)){ia=T;break c}W=c[b>>2]|0;X=W+12|0;Y=c[X>>2]|0;if((Y|0)==(c[W+16>>2]|0)){o=0;Z(c[(c[W>>2]|0)+40>>2]|0,W|0)|0;W=o;o=0;if(W&1){V=35;break b}}else{c[X>>2]=Y+4;OH(c[Y>>2]|0)|0}a[j>>0]=1;Y=a[J>>0]|0;ia=(Y<<24>>24<0?c[K>>2]|0:Y&255)>>>0>1?D:T;break c}Y=c[b>>2]|0;X=c[Y+12>>2]|0;W=(X|0)==(c[Y+16>>2]|0);if(!_){if(W){o=0;_=Z(c[(c[Y>>2]|0)+36>>2]|0,Y|0)|0;ka=o;o=0;if(ka&1){V=35;break b}else pa=_}else pa=OH(c[X>>2]|0)|0;if((pa|0)!=(c[((a[f>>0]|0)<0?c[C>>2]|0:C)>>2]|0)){a[j>>0]=1;ia=T;break c}_=c[b>>2]|0;ka=_+12|0;qa=c[ka>>2]|0;if((qa|0)==(c[_+16>>2]|0)){o=0;Z(c[(c[_>>2]|0)+40>>2]|0,_|0)|0;_=o;o=0;if(_&1){V=35;break b}}else{c[ka>>2]=qa+4;OH(c[qa>>2]|0)|0}qa=a[f>>0]|0;ia=(qa<<24>>24<0?c[s>>2]|0:qa&255)>>>0>1?C:T;break c}if(W){o=0;W=Z(c[(c[Y>>2]|0)+36>>2]|0,Y|0)|0;Y=o;o=0;if(Y&1){V=35;break b}else ra=W}else ra=OH(c[X>>2]|0)|0;X=c[b>>2]|0;W=X+12|0;Y=c[W>>2]|0;qa=(Y|0)==(c[X+16>>2]|0);if((ra|0)==(c[((a[f>>0]|0)<0?c[C>>2]|0:C)>>2]|0)){if(qa){o=0;Z(c[(c[X>>2]|0)+40>>2]|0,X|0)|0;ka=o;o=0;if(ka&1){V=35;break b}}else{c[W>>2]=Y+4;OH(c[Y>>2]|0)|0}W=a[f>>0]|0;ia=(W<<24>>24<0?c[s>>2]|0:W&255)>>>0>1?C:T;break c}if(qa){o=0;qa=Z(c[(c[X>>2]|0)+36>>2]|0,X|0)|0;X=o;o=0;if(X&1){V=35;break b}else ta=qa}else ta=OH(c[Y>>2]|0)|0;if((ta|0)!=(c[((a[J>>0]|0)<0?c[D>>2]|0:D)>>2]|0)){V=109;break b}Y=c[b>>2]|0;qa=Y+12|0;X=c[qa>>2]|0;if((X|0)==(c[Y+16>>2]|0)){o=0;Z(c[(c[Y>>2]|0)+40>>2]|0,Y|0)|0;Y=o;o=0;if(Y&1){V=35;break b}}else{c[qa>>2]=X+4;OH(c[X>>2]|0)|0}a[j>>0]=1;X=a[J>>0]|0;ia=(X<<24>>24<0?c[K>>2]|0:X&255)>>>0>1?D:T}break}case 2:{if(!(U>>>0<2|(T|0)!=0)?!(L|(U|0)==2&(a[Q>>0]|0)!=0):0){ia=0;break c}X=a[M>>0]|0;qa=c[B>>2]|0;Y=X<<24>>24<0?qa:B;d:do if((U|0)!=0?(d[w+(U+-1)>>0]|0)<2:0){W=Y;ka=X;_=qa;while(1){ua=ka<<24>>24<0;va=W;if(((ua?_:B)+((ua?c[N>>2]|0:ka&255)<<2)|0)==(va|0)){wa=ka;xa=_;break}o=0;ua=$(c[(c[k>>2]|0)+12>>2]|0,k|0,8192,c[va>>2]|0)|0;ya=o;o=0;if(ya&1){V=119;break b}if(!ua){V=117;break}W=va+4|0;ka=a[M>>0]|0;_=c[B>>2]|0}if((V|0)==117){V=0;wa=a[M>>0]|0;xa=c[B>>2]|0}_=wa<<24>>24<0?xa:B;ka=_;va=W-ka>>2;ua=a[O>>0]|0;ya=ua<<24>>24<0;za=c[P>>2]|0;Aa=ua&255;if(va>>>0>(ya?za:Aa)>>>0){Ba=da;Ca=ka;Da=wa;Ea=xa;Fa=da}else{ua=c[E>>2]|0;Ga=(ya?ua:E)+((ya?za:Aa)<<2)|0;Ha=_;_=(ya?ua+(za<<2)|0:E+(Aa<<2)|0)+(0-va<<2)|0;while(1){if((_|0)==(Ga|0)){Ba=da;Ca=W;Da=wa;Ea=xa;Fa=da;break d}if((c[_>>2]|0)!=(c[Ha>>2]|0)){Ba=da;Ca=ka;Da=wa;Ea=xa;Fa=da;break d}Ha=Ha+4|0;_=_+4|0}}}else{Ba=da;Ca=Y;Da=X;Ea=qa;Fa=da}while(0);e:while(1){qa=Da<<24>>24<0;X=(qa?Ea:B)+((qa?c[N>>2]|0:Da&255)<<2)|0;qa=Ca;if((X|0)==(qa|0)){Ia=X;break}X=c[b>>2]|0;do if(X){Y=c[X+12>>2]|0;if((Y|0)==(c[X+16>>2]|0)){o=0;_=Z(c[(c[X>>2]|0)+36>>2]|0,X|0)|0;Ha=o;o=0;if(Ha&1){V=149;break b}else Ja=_}else Ja=OH(c[Y>>2]|0)|0;if(nI(Ja,NH()|0)|0){c[b>>2]=0;Ka=1;break}else{Ka=(c[b>>2]|0)==0;break}}else Ka=1;while(0);do if(Fa){X=c[Fa+12>>2]|0;if((X|0)==(c[Fa+16>>2]|0)){o=0;Y=Z(c[(c[Fa>>2]|0)+36>>2]|0,Fa|0)|0;_=o;o=0;if(_&1){V=149;break b}else La=Y}else La=OH(c[X>>2]|0)|0;if(!(nI(La,NH()|0)|0))if(Ka^(Ba|0)==0){Ma=Ba;Na=Ba;break}else{Ia=qa;break e}else{c[e>>2]=0;Oa=0;V=139;break}}else{Oa=Ba;V=139}while(0);if((V|0)==139){V=0;if(Ka){Ia=qa;break}else{Ma=Oa;Na=0}}X=c[b>>2]|0;Y=c[X+12>>2]|0;if((Y|0)==(c[X+16>>2]|0)){o=0;_=Z(c[(c[X>>2]|0)+36>>2]|0,X|0)|0;X=o;o=0;if(X&1){V=149;break b}else Ra=_}else Ra=OH(c[Y>>2]|0)|0;if((Ra|0)!=(c[qa>>2]|0)){Ia=qa;break}Y=c[b>>2]|0;_=Y+12|0;X=c[_>>2]|0;if((X|0)==(c[Y+16>>2]|0)){o=0;Z(c[(c[Y>>2]|0)+40>>2]|0,Y|0)|0;Y=o;o=0;if(Y&1){V=150;break b}}else{c[_>>2]=X+4;OH(c[X>>2]|0)|0}Ba=Ma;Ca=qa+4|0;Da=a[M>>0]|0;Ea=c[B>>2]|0;Fa=Na}if(L?(X=a[M>>0]|0,_=X<<24>>24<0,((_?c[B>>2]|0:B)+((_?c[N>>2]|0:X&255)<<2)|0)!=(Ia|0)):0){V=153;break b}else ia=T;break}case 4:{X=0;_=da;Y=da;f:while(1){Ha=c[b>>2]|0;do if(Ha){ka=c[Ha+12>>2]|0;if((ka|0)==(c[Ha+16>>2]|0)){o=0;W=Z(c[(c[Ha>>2]|0)+36>>2]|0,Ha|0)|0;Ga=o;o=0;if(Ga&1){V=245;break b}else Sa=W}else Sa=OH(c[ka>>2]|0)|0;if(nI(Sa,NH()|0)|0){c[b>>2]=0;Ta=1;break}else{Ta=(c[b>>2]|0)==0;break}}else Ta=1;while(0);do if(Y){Ha=c[Y+12>>2]|0;if((Ha|0)==(c[Y+16>>2]|0)){o=0;qa=Z(c[(c[Y>>2]|0)+36>>2]|0,Y|0)|0;ka=o;o=0;if(ka&1){V=245;break b}else Ua=qa}else Ua=OH(c[Ha>>2]|0)|0;if(!(nI(Ua,NH()|0)|0))if(Ta^(_|0)==0){Va=_;Wa=_;break}else{Xa=_;break f}else{c[e>>2]=0;Ya=0;V=167;break}}else{Ya=_;V=167}while(0);if((V|0)==167){V=0;if(Ta){Xa=Ya;break}else{Va=Ya;Wa=0}}Ha=c[b>>2]|0;qa=c[Ha+12>>2]|0;if((qa|0)==(c[Ha+16>>2]|0)){o=0;ka=Z(c[(c[Ha>>2]|0)+36>>2]|0,Ha|0)|0;Ha=o;o=0;if(Ha&1){V=245;break b}else Za=ka}else Za=OH(c[qa>>2]|0)|0;o=0;qa=$(c[(c[k>>2]|0)+12>>2]|0,k|0,2048,Za|0)|0;ka=o;o=0;if(ka&1){V=245;break b}if(qa){qa=c[n>>2]|0;if((qa|0)==(c[r>>2]|0)){o=0;na(105,m|0,n|0,r|0);ka=o;o=0;if(ka&1){V=245;break b}_a=c[n>>2]|0}else _a=qa;c[n>>2]=_a+4;c[_a>>2]=Za;ab=X+1|0}else{qa=a[R>>0]|0;if(!((Za|0)==(c[y>>2]|0)&(X|0?((qa<<24>>24<0?c[S>>2]|0:qa&255)|0)!=0:0))){Xa=Va;break}qa=c[u>>2]|0;if((qa|0)==(c[v>>2]|0)){o=0;na(104,t|0,u|0,v|0);ka=o;o=0;if(ka&1){V=245;break b}bb=c[u>>2]|0}else bb=qa;c[u>>2]=bb+4;c[bb>>2]=X;ab=0}qa=c[b>>2]|0;ka=qa+12|0;Ha=c[ka>>2]|0;if((Ha|0)==(c[qa+16>>2]|0)){o=0;Z(c[(c[qa>>2]|0)+40>>2]|0,qa|0)|0;qa=o;o=0;if(qa&1){V=245;break b}else{X=ab;_=Va;Y=Wa;continue}}else{c[ka>>2]=Ha+4;OH(c[Ha>>2]|0)|0;X=ab;_=Va;Y=Wa;continue}}Y=c[u>>2]|0;if(X|0?(c[t>>2]|0)!=(Y|0):0){if((Y|0)==(c[v>>2]|0)){o=0;na(104,t|0,u|0,v|0);_=o;o=0;if(_&1){V=245;break b}cb=c[u>>2]|0}else cb=Y;c[u>>2]=cb+4;c[cb>>2]=X}g:do if((c[F>>2]|0)>0){Y=c[b>>2]|0;do if(Y){_=c[Y+12>>2]|0;if((_|0)==(c[Y+16>>2]|0)){o=0;Ha=Z(c[(c[Y>>2]|0)+36>>2]|0,Y|0)|0;ka=o;o=0;if(ka&1){V=245;break b}else db=Ha}else db=OH(c[_>>2]|0)|0;if(nI(db,NH()|0)|0){c[b>>2]=0;eb=1;break}else{eb=(c[b>>2]|0)==0;break}}else eb=1;while(0);do if(Xa){Y=c[Xa+12>>2]|0;if((Y|0)==(c[Xa+16>>2]|0)){o=0;_=Z(c[(c[Xa>>2]|0)+36>>2]|0,Xa|0)|0;Ha=o;o=0;if(Ha&1){V=245;break b}else fb=_}else fb=OH(c[Y>>2]|0)|0;if(!(nI(fb,NH()|0)|0))if(eb){gb=Xa;break}else{V=244;break b}else{c[e>>2]=0;V=205;break}}else V=205;while(0);if((V|0)==205){V=0;if(eb){V=244;break b}else gb=0}Y=c[b>>2]|0;_=c[Y+12>>2]|0;if((_|0)==(c[Y+16>>2]|0)){o=0;Ha=Z(c[(c[Y>>2]|0)+36>>2]|0,Y|0)|0;Y=o;o=0;if(Y&1){V=245;break b}else hb=Ha}else hb=OH(c[_>>2]|0)|0;if((hb|0)!=(c[x>>2]|0)){V=244;break b}_=c[b>>2]|0;Ha=_+12|0;Y=c[Ha>>2]|0;if((Y|0)==(c[_+16>>2]|0)){o=0;Z(c[(c[_>>2]|0)+40>>2]|0,_|0)|0;_=o;o=0;if(_&1){V=245;break b}else{ib=gb;jb=gb}}else{c[Ha>>2]=Y+4;OH(c[Y>>2]|0)|0;ib=gb;jb=gb}while(1){if((c[F>>2]|0)<=0)break g;Y=c[b>>2]|0;do if(Y){Ha=c[Y+12>>2]|0;if((Ha|0)==(c[Y+16>>2]|0)){o=0;_=Z(c[(c[Y>>2]|0)+36>>2]|0,Y|0)|0;ka=o;o=0;if(ka&1){V=245;break b}else kb=_}else kb=OH(c[Ha>>2]|0)|0;if(nI(kb,NH()|0)|0){c[b>>2]=0;lb=1;break}else{lb=(c[b>>2]|0)==0;break}}else lb=1;while(0);do if(jb){Y=c[jb+12>>2]|0;if((Y|0)==(c[jb+16>>2]|0)){o=0;Ha=Z(c[(c[jb>>2]|0)+36>>2]|0,jb|0)|0;_=o;o=0;if(_&1){V=245;break b}else mb=Ha}else mb=OH(c[Y>>2]|0)|0;if(!(nI(mb,NH()|0)|0))if(lb^(ib|0)==0){nb=ib;ob=ib;break}else{V=244;break b}else{c[e>>2]=0;pb=0;V=228;break}}else{pb=ib;V=228}while(0);if((V|0)==228){V=0;if(lb){V=244;break b}else{nb=pb;ob=0}}Y=c[b>>2]|0;Ha=c[Y+12>>2]|0;if((Ha|0)==(c[Y+16>>2]|0)){o=0;_=Z(c[(c[Y>>2]|0)+36>>2]|0,Y|0)|0;Y=o;o=0;if(Y&1){V=245;break b}else qb=_}else qb=OH(c[Ha>>2]|0)|0;o=0;Ha=$(c[(c[k>>2]|0)+12>>2]|0,k|0,2048,qb|0)|0;_=o;o=0;if(_&1){V=245;break b}if(!Ha){V=244;break b}if((c[n>>2]|0)==(c[r>>2]|0)?(o=0,na(105,m|0,n|0,r|0),Ha=o,o=0,Ha&1):0){V=245;break b}Ha=c[b>>2]|0;_=c[Ha+12>>2]|0;if((_|0)==(c[Ha+16>>2]|0)){o=0;Y=Z(c[(c[Ha>>2]|0)+36>>2]|0,Ha|0)|0;Ha=o;o=0;if(Ha&1){V=245;break b}else rb=Y}else rb=OH(c[_>>2]|0)|0;_=c[n>>2]|0;c[n>>2]=_+4;c[_>>2]=rb;c[F>>2]=(c[F>>2]|0)+-1;_=c[b>>2]|0;Y=_+12|0;Ha=c[Y>>2]|0;if((Ha|0)==(c[_+16>>2]|0)){o=0;Z(c[(c[_>>2]|0)+40>>2]|0,_|0)|0;_=o;o=0;if(_&1){V=245;break b}else{ib=nb;jb=ob;continue}}else{c[Y>>2]=Ha+4;OH(c[Ha>>2]|0)|0;ib=nb;jb=ob;continue}}}while(0);if((c[n>>2]|0)==(c[m>>2]|0)){V=244;break b}else ia=T;break}default:ia=T}while(0);h:do if((V|0)==49)while(1){V=0;X=c[b>>2]|0;do if(X){Ha=c[X+12>>2]|0;if((Ha|0)==(c[X+16>>2]|0)){o=0;Y=Z(c[(c[X>>2]|0)+36>>2]|0,X|0)|0;_=o;o=0;if(_&1){V=35;break b}else sb=Y}else sb=OH(c[Ha>>2]|0)|0;if(nI(sb,NH()|0)|0){c[b>>2]=0;tb=1;break}else{tb=(c[b>>2]|0)==0;break}}else tb=1;while(0);do if(ha){X=c[ha+12>>2]|0;if((X|0)==(c[ha+16>>2]|0)){o=0;Ha=Z(c[(c[ha>>2]|0)+36>>2]|0,ha|0)|0;Y=o;o=0;if(Y&1){V=35;break b}else ub=Ha}else ub=OH(c[X>>2]|0)|0;if(!(nI(ub,NH()|0)|0))if(tb^(ga|0)==0){vb=ga;wb=ga;break}else{ia=T;break h}else{c[e>>2]=0;xb=0;V=62;break}}else{xb=ga;V=62}while(0);if((V|0)==62){V=0;if(tb){ia=T;break h}else{vb=xb;wb=0}}X=c[b>>2]|0;Ha=c[X+12>>2]|0;if((Ha|0)==(c[X+16>>2]|0)){o=0;Y=Z(c[(c[X>>2]|0)+36>>2]|0,X|0)|0;X=o;o=0;if(X&1){V=35;break b}else yb=Y}else yb=OH(c[Ha>>2]|0)|0;o=0;Ha=$(c[(c[k>>2]|0)+12>>2]|0,k|0,8192,yb|0)|0;Y=o;o=0;if(Y&1){V=35;break b}if(!Ha){ia=T;break h}Ha=c[b>>2]|0;Y=Ha+12|0;X=c[Y>>2]|0;if((X|0)==(c[Ha+16>>2]|0)){o=0;_=Z(c[(c[Ha>>2]|0)+40>>2]|0,Ha|0)|0;Ha=o;o=0;if(Ha&1){V=35;break b}else zb=_}else{c[Y>>2]=X+4;zb=OH(c[X>>2]|0)|0}o=0;ma(190,E|0,zb|0);X=o;o=0;if(X&1){V=35;break b}else{ga=vb;ha=wb;V=49}}while(0);T=ia;U=U+1|0}i:switch(V|0){case 35:{H=Pa()|0;I=z;break a;break}case 47:{c[i>>2]=c[i>>2]|4;Ab=0;break}case 109:{c[i>>2]=c[i>>2]|4;Ab=0;break}case 119:{H=Pa()|0;I=z;break a;break}case 149:{H=Pa()|0;I=z;break a;break}case 150:{H=Pa()|0;I=z;break a;break}case 153:{c[i>>2]=c[i>>2]|4;Ab=0;break}case 244:{c[i>>2]=c[i>>2]|4;Ab=0;break}case 245:{H=Pa()|0;I=z;break a;break}case 247:{j:do if(T|0){U=T+8+3|0;S=T+4|0;R=1;k:while(1){N=a[U>>0]|0;if(N<<24>>24<0)Bb=c[S>>2]|0;else Bb=N&255;if(R>>>0>=Bb>>>0)break j;N=c[b>>2]|0;do if(N){M=c[N+12>>2]|0;if((M|0)==(c[N+16>>2]|0)){o=0;L=Z(c[(c[N>>2]|0)+36>>2]|0,N|0)|0;P=o;o=0;if(P&1){V=275;break k}else Cb=L}else Cb=OH(c[M>>2]|0)|0;if(nI(Cb,NH()|0)|0){c[b>>2]=0;Db=1;break}else{Db=(c[b>>2]|0)==0;break}}else Db=1;while(0);N=c[e>>2]|0;do if(N){M=c[N+12>>2]|0;if((M|0)==(c[N+16>>2]|0)){o=0;L=Z(c[(c[N>>2]|0)+36>>2]|0,N|0)|0;P=o;o=0;if(P&1){V=275;break k}else Eb=L}else Eb=OH(c[M>>2]|0)|0;if(!(nI(Eb,NH()|0)|0))if(Db)break;else{V=274;break k}else{c[e>>2]=0;V=266;break}}else V=266;while(0);if((V|0)==266?(V=0,Db):0){V=274;break}N=c[b>>2]|0;M=c[N+12>>2]|0;if((M|0)==(c[N+16>>2]|0)){o=0;L=Z(c[(c[N>>2]|0)+36>>2]|0,N|0)|0;N=o;o=0;if(N&1){V=275;break}else Fb=L}else Fb=OH(c[M>>2]|0)|0;if((a[U>>0]|0)<0)Gb=c[T>>2]|0;else Gb=T;if((Fb|0)!=(c[Gb+(R<<2)>>2]|0)){V=274;break}M=R+1|0;L=c[b>>2]|0;N=L+12|0;P=c[N>>2]|0;if((P|0)==(c[L+16>>2]|0)){o=0;Z(c[(c[L>>2]|0)+40>>2]|0,L|0)|0;L=o;o=0;if(L&1){V=275;break}else{R=M;continue}}else{c[N>>2]=P+4;OH(c[P>>2]|0)|0;R=M;continue}}if((V|0)==274){c[i>>2]=c[i>>2]|4;Ab=0;break i}else if((V|0)==275){R=Pa()|0;H=R;I=z;break a}}while(0);T=c[t>>2]|0;R=c[u>>2]|0;if((T|0)!=(R|0)){c[G>>2]=0;o=0;oa(54,A|0,T|0,R|0,G|0);R=o;o=0;if(R&1){R=Pa()|0;H=R;I=z;break a}if(!(c[G>>2]|0)){Ab=1;break}else{c[i>>2]=c[i>>2]|4;Ab=0;break}}else Ab=1;break}}KR(E);KR(D);KR(C);KR(B);xR(A);R=c[t>>2]|0;c[t>>2]=0;if(R|0?(o=0,la(c[p>>2]|0,R|0),R=o,o=0,R&1):0){R=Qa(0)|0;Id(R)}l=q;return Ab|0}while(0);KR(E);KR(D);KR(C);KR(B);xR(A);A=c[t>>2]|0;c[t>>2]=0;if(A|0?(o=0,la(c[p>>2]|0,A|0),A=o,o=0,A&1):0){A=Qa(0)|0;Id(A)}$a(H|0);return 0}function wN(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;f=l;l=l+16|0;g=f+12|0;h=f;i=b+8|0;j=i+3|0;k=a[j>>0]|0;m=k<<24>>24<0;if(m){n=(c[i>>2]&2147483647)+-1|0;p=c[b+4>>2]|0}else{n=1;p=k&255}i=e-d>>2;do if(i|0){if(m){q=c[b>>2]|0;r=c[b+4>>2]|0}else{q=b;r=k&255}if(!(xN(d,q,q+(r<<2)|0)|0)){if((n-p|0)>>>0<i>>>0)QR(b,n,p+i-n|0,p,p,0,0);if((a[j>>0]|0)<0)s=c[b>>2]|0;else s=b;t=s+(p<<2)|0;u=d;while(1){if((u|0)==(e|0))break;MI(t,u);t=t+4|0;u=u+4|0}c[g>>2]=0;MI(t,g);u=p+i|0;if((a[j>>0]|0)<0){c[b+4>>2]=u;break}else{a[j>>0]=u;break}};c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;if(i>>>0>1073741807)vR(h);do if(i>>>0>=2){u=i+4&-4;if(u>>>0<=1073741823){v=kR(u<<2)|0;c[h>>2]=v;c[h+8>>2]=u|-2147483648;c[h+4>>2]=i;w=d;x=v;break}v=Ja(8)|0;o=0;ma(153,v|0,92198);u=o;o=0;if(u&1){u=Pa()|0;Sa(v|0);$a(u|0)}else{c[v>>2]=57580;Xa(v|0,7152,205)}}else{a[h+8+3>>0]=i;w=d;x=h}while(0);while(1){if((w|0)==(e|0))break;MI(x,w);w=w+4|0;x=x+4|0}c[g>>2]=0;MI(x,g);t=a[h+8+3>>0]|0;v=t<<24>>24<0;o=0;$(121,b|0,(v?c[h>>2]|0:h)|0,(v?c[h+4>>2]|0:t&255)|0)|0;t=o;o=0;if(t&1){t=Pa()|0;KR(h);$a(t|0)}else{KR(h);break}}while(0);l=f;return b|0}function xN(a,b,c){a=a|0;b=b|0;c=c|0;return b>>>0<=a>>>0&a>>>0<c>>>0|0}function yN(b,d,e,f,g,h,i,j,k,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;m=m|0;var n=0,p=0,q=0,r=0,s=0,t=0;n=l;l=l+16|0;p=n+12|0;q=n;if(b){b=_I(d,104704)|0;sd[c[(c[b>>2]|0)+44>>2]&255](p,b);r=c[p>>2]|0;a[e>>0]=r;a[e+1>>0]=r>>8;a[e+2>>0]=r>>16;a[e+3>>0]=r>>24;sd[c[(c[b>>2]|0)+32>>2]&255](q,b);r=k+8+3|0;if((a[r>>0]|0)<0){s=c[k>>2]|0;c[p>>2]=0;MI(s,p);c[k+4>>2]=0}else{c[p>>2]=0;MI(k,p);a[r>>0]=0}o=0;ma(191,k|0,0);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)};c[k>>2]=c[q>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];r=0;while(1){if((r|0)==3)break;c[q+(r<<2)>>2]=0;r=r+1|0}KR(q);sd[c[(c[b>>2]|0)+28>>2]&255](q,b);r=j+8+3|0;if((a[r>>0]|0)<0){s=c[j>>2]|0;c[p>>2]=0;MI(s,p);c[j+4>>2]=0}else{c[p>>2]=0;MI(j,p);a[r>>0]=0}o=0;ma(191,j|0,0);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)};c[j>>2]=c[q>>2];c[j+4>>2]=c[q+4>>2];c[j+8>>2]=c[q+8>>2];r=0;while(1){if((r|0)==3)break;c[q+(r<<2)>>2]=0;r=r+1|0}KR(q);c[f>>2]=dd[c[(c[b>>2]|0)+12>>2]&255](b)|0;c[g>>2]=dd[c[(c[b>>2]|0)+16>>2]&255](b)|0;sd[c[(c[b>>2]|0)+20>>2]&255](q,b);r=h+11|0;if((a[r>>0]|0)<0){s=c[h>>2]|0;a[p>>0]=0;cI(s,p);c[h+4>>2]=0}else{a[p>>0]=0;cI(h,p);a[r>>0]=0}o=0;ma(189,h|0,0);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)};c[h>>2]=c[q>>2];c[h+4>>2]=c[q+4>>2];c[h+8>>2]=c[q+8>>2];r=0;while(1){if((r|0)==3)break;c[q+(r<<2)>>2]=0;r=r+1|0}xR(q);sd[c[(c[b>>2]|0)+24>>2]&255](q,b);r=i+8+3|0;if((a[r>>0]|0)<0){s=c[i>>2]|0;c[p>>2]=0;MI(s,p);c[i+4>>2]=0}else{c[p>>2]=0;MI(i,p);a[r>>0]=0}o=0;ma(191,i|0,0);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)};c[i>>2]=c[q>>2];c[i+4>>2]=c[q+4>>2];c[i+8>>2]=c[q+8>>2];r=0;while(1){if((r|0)==3)break;c[q+(r<<2)>>2]=0;r=r+1|0}KR(q);t=dd[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{b=_I(d,104696)|0;sd[c[(c[b>>2]|0)+44>>2]&255](p,b);d=c[p>>2]|0;a[e>>0]=d;a[e+1>>0]=d>>8;a[e+2>>0]=d>>16;a[e+3>>0]=d>>24;sd[c[(c[b>>2]|0)+32>>2]&255](q,b);d=k+8+3|0;if((a[d>>0]|0)<0){e=c[k>>2]|0;c[p>>2]=0;MI(e,p);c[k+4>>2]=0}else{c[p>>2]=0;MI(k,p);a[d>>0]=0}o=0;ma(191,k|0,0);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)};c[k>>2]=c[q>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];k=0;while(1){if((k|0)==3)break;c[q+(k<<2)>>2]=0;k=k+1|0}KR(q);sd[c[(c[b>>2]|0)+28>>2]&255](q,b);k=j+8+3|0;if((a[k>>0]|0)<0){d=c[j>>2]|0;c[p>>2]=0;MI(d,p);c[j+4>>2]=0}else{c[p>>2]=0;MI(j,p);a[k>>0]=0}o=0;ma(191,j|0,0);k=o;o=0;if(k&1){k=Qa(0)|0;Id(k)};c[j>>2]=c[q>>2];c[j+4>>2]=c[q+4>>2];c[j+8>>2]=c[q+8>>2];j=0;while(1){if((j|0)==3)break;c[q+(j<<2)>>2]=0;j=j+1|0}KR(q);c[f>>2]=dd[c[(c[b>>2]|0)+12>>2]&255](b)|0;c[g>>2]=dd[c[(c[b>>2]|0)+16>>2]&255](b)|0;sd[c[(c[b>>2]|0)+20>>2]&255](q,b);g=h+11|0;if((a[g>>0]|0)<0){f=c[h>>2]|0;a[p>>0]=0;cI(f,p);c[h+4>>2]=0}else{a[p>>0]=0;cI(h,p);a[g>>0]=0}o=0;ma(189,h|0,0);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)};c[h>>2]=c[q>>2];c[h+4>>2]=c[q+4>>2];c[h+8>>2]=c[q+8>>2];h=0;while(1){if((h|0)==3)break;c[q+(h<<2)>>2]=0;h=h+1|0}xR(q);sd[c[(c[b>>2]|0)+24>>2]&255](q,b);h=i+8+3|0;if((a[h>>0]|0)<0){g=c[i>>2]|0;c[p>>2]=0;MI(g,p);c[i+4>>2]=0}else{c[p>>2]=0;MI(i,p);a[h>>0]=0}o=0;ma(191,i|0,0);h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)};c[i>>2]=c[q>>2];c[i+4>>2]=c[q+4>>2];c[i+8>>2]=c[q+8>>2];i=0;while(1){if((i|0)==3)break;c[q+(i<<2)>>2]=0;i=i+1|0}KR(q);t=dd[c[(c[b>>2]|0)+36>>2]&255](b)|0}c[m>>2]=t;l=n;return}function zN(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a+4|0;f=(c[e>>2]|0)!=311;g=c[a>>2]|0;h=(c[d>>2]|0)-g|0;i=h>>>0<2147483647?h<<1:-1;h=(i|0)==0?4:i;i=(c[b>>2]|0)-g>>2;j=EE(f?g:0,h)|0;if(!j)oR();do if(!f){g=c[a>>2]|0;c[a>>2]=j;if(g){o=0;la(c[e>>2]|0,g|0);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}else{k=c[a>>2]|0;break}}else k=j}else{c[a>>2]=j;k=j}while(0);c[e>>2]=313;c[b>>2]=k+(i<<2);c[d>>2]=(c[a>>2]|0)+(h>>>2<<2);return}function AN(a){a=a|0;GI(a);return}function BN(a){a=a|0;GI(a);mR(a);return}function CN(b,d,e,f,g,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;i=+i;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Z=0,$=0,ba=0,ca=0,da=0,fa=0,ga=0,ha=0,ia=0,ja=0,la=0;b=l;l=l+384|0;j=b+8|0;k=b;m=b+284|0;n=b+72|0;p=b+184|0;q=b+68|0;r=b+180|0;s=b+177|0;t=b+176|0;u=b+56|0;v=b+44|0;w=b+32|0;x=b+28|0;y=b+76|0;A=b+24|0;B=b+20|0;C=b+16|0;c[n>>2]=m;h[j>>3]=i;D=mG(m,100,91499,j)|0;a:do if(D>>>0>99){o=0;m=Y(36)|0;E=o;o=0;do if(!(E&1)?(o=0,h[k>>3]=i,F=aa(59,n|0,m|0,91499,k|0)|0,G=o,o=0,!(G&1)):0){G=c[n>>2]|0;if(!G){o=0;ka(4);o=0;H=0;I=0;break}J=G;G=BE(F)|0;K=G;if(G|0){L=G;M=F;N=K;O=J;P=9;break a}o=0;ka(4);o=0;H=K;I=J}else{H=0;I=0}while(0);m=Pa()|0;Q=m;R=z;S=H;T=I}else{L=p;M=D;N=0;O=0;P=9}while(0);if((P|0)==9){o=0;ma(132,q|0,f|0);D=o;o=0;if(D&1){D=Pa()|0;U=D;V=z}else{o=0;D=_(93,q|0,102968)|0;p=o;o=0;if(!(p&1)?(p=c[n>>2]|0,o=0,aa(c[(c[D>>2]|0)+32>>2]|0,D|0,p|0,p+M|0,L|0)|0,p=o,o=0,!(p&1)):0){if(!M)W=0;else W=(a[c[n>>2]>>0]|0)==45;c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;n=0;while(1){if((n|0)==3)break;c[u+(n<<2)>>2]=0;n=n+1|0}c[v>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;n=0;while(1){if((n|0)==3)break;c[v+(n<<2)>>2]=0;n=n+1|0}c[w>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;n=0;while(1){if((n|0)==3)break;c[w+(n<<2)>>2]=0;n=n+1|0}o=0;sa(3,e|0,W|0,q|0,r|0,s|0,t|0,u|0,v|0,w|0,x|0);e=o;o=0;if(e&1){e=Pa()|0;X=e;Z=z}else{e=c[x>>2]|0;if((M|0)>(e|0)){x=a[w+11>>0]|0;n=a[v+11>>0]|0;$=1;ba=(x<<24>>24<0?c[w+4>>2]|0:x&255)+(M-e<<1)|0;ca=n<<24>>24<0?c[v+4>>2]|0:n&255}else{n=a[w+11>>0]|0;x=a[v+11>>0]|0;$=2;ba=x<<24>>24<0?c[v+4>>2]|0:x&255;ca=n<<24>>24<0?c[w+4>>2]|0:n&255}n=ca+e+ba+$|0;if(n>>>0>100){$=BE(n)|0;n=$;if(!$){o=0;ka(4);o=0;ba=Pa()|0;da=ba;fa=z;ga=n}else{ha=$;ia=n;P=33}}else{ha=y;ia=0;P=33}if((P|0)==33){o=0;ta(1,ha|0,A|0,B|0,c[f+4>>2]|0,L|0,L+M|0,D|0,W|0,r|0,a[s>>0]|0,a[t>>0]|0,u|0,v|0,w|0,e|0);e=o;o=0;if(!(e&1)?(c[C>>2]=c[d>>2],d=c[A>>2]|0,A=c[B>>2]|0,o=0,c[j>>2]=c[C>>2],C=ea(50,j|0,ha|0,d|0,A|0,f|0,g|0)|0,g=o,o=0,!(g&1)):0){if(ia|0)CE(ia);xR(w);xR(v);xR(u);$I(q);if(N|0)CE(N);if(O|0)CE(O);l=b;return C|0}C=Pa()|0;da=C;fa=z;ga=ia}if(ga|0)CE(ga);X=da;Z=fa}xR(w);xR(v);xR(u);ja=X;la=Z}else{Z=Pa()|0;ja=Z;la=z}$I(q);U=ja;V=la}Q=U;R=V;S=N;T=O}if(S|0)CE(S);if(T|0)CE(T);$a(Q|0);return 0}function DN(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;b=l;l=l+176|0;i=b+56|0;j=b+52|0;k=b+164|0;m=b+161|0;n=b+160|0;p=b+40|0;q=b+28|0;r=b+16|0;s=b+12|0;t=b+60|0;u=b+8|0;v=b+4|0;w=b;mI(j,f);o=0;x=_(93,j|0,102968)|0;y=o;o=0;a:do if(y&1){A=Pa()|0;B=A;C=z}else{A=h+11|0;D=a[A>>0]|0;E=D<<24>>24<0;F=h+4|0;do if((E?c[F>>2]|0:D&255)|0){G=a[(E?c[h>>2]|0:h)>>0]|0;o=0;H=_(c[(c[x>>2]|0)+28>>2]|0,x|0,45)|0;I=o;o=0;if(I&1){I=Pa()|0;B=I;C=z;break a}else{J=G<<24>>24==H<<24>>24;break}}else J=0;while(0);c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;E=0;while(1){if((E|0)==3)break;c[p+(E<<2)>>2]=0;E=E+1|0}c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;E=0;while(1){if((E|0)==3)break;c[q+(E<<2)>>2]=0;E=E+1|0}c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;E=0;while(1){if((E|0)==3)break;c[r+(E<<2)>>2]=0;E=E+1|0}o=0;sa(3,e|0,J|0,j|0,k|0,m|0,n|0,p|0,q|0,r|0,s|0);E=o;o=0;if(E&1){E=Pa()|0;K=E;L=z}else{E=a[A>>0]|0;D=E<<24>>24<0;H=D?c[F>>2]|0:E&255;E=c[s>>2]|0;if((H|0)>(E|0)){G=a[r+11>>0]|0;I=a[q+11>>0]|0;M=1;N=(G<<24>>24<0?c[r+4>>2]|0:G&255)+(H-E<<1)|0;O=I<<24>>24<0?c[q+4>>2]|0:I&255}else{I=a[r+11>>0]|0;G=a[q+11>>0]|0;M=2;N=G<<24>>24<0?c[q+4>>2]|0:G&255;O=I<<24>>24<0?c[r+4>>2]|0:I&255}I=O+E+N+M|0;if(I>>>0>100){G=BE(I)|0;I=G;if(!G){o=0;ka(4);o=0;P=Pa()|0;Q=P;R=z;S=I}else{T=G;U=I;V=24}}else{T=t;U=0;V=24}if((V|0)==24){I=D?c[h>>2]|0:h;o=0;ta(1,T|0,u|0,v|0,c[f+4>>2]|0,I|0,I+H|0,x|0,J|0,k|0,a[m>>0]|0,a[n>>0]|0,p|0,q|0,r|0,E|0);E=o;o=0;if(!(E&1)?(c[w>>2]=c[d>>2],E=c[u>>2]|0,H=c[v>>2]|0,o=0,c[i>>2]=c[w>>2],I=ea(50,i|0,T|0,E|0,H|0,f|0,g|0)|0,H=o,o=0,!(H&1)):0){if(U|0)CE(U);xR(r);xR(q);xR(p);$I(j);l=b;return I|0}I=Pa()|0;Q=I;R=z;S=U}if(S|0)CE(S);K=Q;L=R}xR(r);xR(q);xR(p);B=K;C=L}while(0);$I(j);$a(B|0);return 0}function EN(b,d,e,f,g,h,i,j,k,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;m=m|0;var n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;n=l;l=l+16|0;p=n+12|0;q=n;if(b){b=_I(e,104688)|0;if(d){sd[c[(c[b>>2]|0)+44>>2]&255](p,b);r=c[p>>2]|0;a[f>>0]=r;a[f+1>>0]=r>>8;a[f+2>>0]=r>>16;a[f+3>>0]=r>>24;sd[c[(c[b>>2]|0)+32>>2]&255](q,b);r=k+11|0;if((a[r>>0]|0)<0){s=c[k>>2]|0;a[p>>0]=0;cI(s,p);c[k+4>>2]=0}else{a[p>>0]=0;cI(k,p);a[r>>0]=0}o=0;ma(189,k|0,0);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)};c[k>>2]=c[q>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];r=0;while(1){if((r|0)==3)break;c[q+(r<<2)>>2]=0;r=r+1|0}xR(q);t=b}else{sd[c[(c[b>>2]|0)+40>>2]&255](p,b);r=c[p>>2]|0;a[f>>0]=r;a[f+1>>0]=r>>8;a[f+2>>0]=r>>16;a[f+3>>0]=r>>24;sd[c[(c[b>>2]|0)+28>>2]&255](q,b);r=k+11|0;if((a[r>>0]|0)<0){s=c[k>>2]|0;a[p>>0]=0;cI(s,p);c[k+4>>2]=0}else{a[p>>0]=0;cI(k,p);a[r>>0]=0}o=0;ma(189,k|0,0);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)};c[k>>2]=c[q>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];r=0;while(1){if((r|0)==3)break;c[q+(r<<2)>>2]=0;r=r+1|0}xR(q);t=b}a[g>>0]=dd[c[(c[b>>2]|0)+12>>2]&255](b)|0;a[h>>0]=dd[c[(c[b>>2]|0)+16>>2]&255](b)|0;sd[c[(c[t>>2]|0)+20>>2]&255](q,b);r=i+11|0;if((a[r>>0]|0)<0){s=c[i>>2]|0;a[p>>0]=0;cI(s,p);c[i+4>>2]=0}else{a[p>>0]=0;cI(i,p);a[r>>0]=0}o=0;ma(189,i|0,0);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)};c[i>>2]=c[q>>2];c[i+4>>2]=c[q+4>>2];c[i+8>>2]=c[q+8>>2];r=0;while(1){if((r|0)==3)break;c[q+(r<<2)>>2]=0;r=r+1|0}xR(q);sd[c[(c[t>>2]|0)+24>>2]&255](q,b);t=j+11|0;if((a[t>>0]|0)<0){r=c[j>>2]|0;a[p>>0]=0;cI(r,p);c[j+4>>2]=0}else{a[p>>0]=0;cI(j,p);a[t>>0]=0}o=0;ma(189,j|0,0);t=o;o=0;if(t&1){t=Qa(0)|0;Id(t)};c[j>>2]=c[q>>2];c[j+4>>2]=c[q+4>>2];c[j+8>>2]=c[q+8>>2];t=0;while(1){if((t|0)==3)break;c[q+(t<<2)>>2]=0;t=t+1|0}xR(q);u=dd[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{b=_I(e,104680)|0;if(d){sd[c[(c[b>>2]|0)+44>>2]&255](p,b);d=c[p>>2]|0;a[f>>0]=d;a[f+1>>0]=d>>8;a[f+2>>0]=d>>16;a[f+3>>0]=d>>24;sd[c[(c[b>>2]|0)+32>>2]&255](q,b);d=k+11|0;if((a[d>>0]|0)<0){e=c[k>>2]|0;a[p>>0]=0;cI(e,p);c[k+4>>2]=0}else{a[p>>0]=0;cI(k,p);a[d>>0]=0}o=0;ma(189,k|0,0);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)};c[k>>2]=c[q>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];d=0;while(1){if((d|0)==3)break;c[q+(d<<2)>>2]=0;d=d+1|0}xR(q);v=b}else{sd[c[(c[b>>2]|0)+40>>2]&255](p,b);d=c[p>>2]|0;a[f>>0]=d;a[f+1>>0]=d>>8;a[f+2>>0]=d>>16;a[f+3>>0]=d>>24;sd[c[(c[b>>2]|0)+28>>2]&255](q,b);d=k+11|0;if((a[d>>0]|0)<0){f=c[k>>2]|0;a[p>>0]=0;cI(f,p);c[k+4>>2]=0}else{a[p>>0]=0;cI(k,p);a[d>>0]=0}o=0;ma(189,k|0,0);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)};c[k>>2]=c[q>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];k=0;while(1){if((k|0)==3)break;c[q+(k<<2)>>2]=0;k=k+1|0}xR(q);v=b}a[g>>0]=dd[c[(c[b>>2]|0)+12>>2]&255](b)|0;a[h>>0]=dd[c[(c[b>>2]|0)+16>>2]&255](b)|0;sd[c[(c[v>>2]|0)+20>>2]&255](q,b);h=i+11|0;if((a[h>>0]|0)<0){g=c[i>>2]|0;a[p>>0]=0;cI(g,p);c[i+4>>2]=0}else{a[p>>0]=0;cI(i,p);a[h>>0]=0}o=0;ma(189,i|0,0);h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)};c[i>>2]=c[q>>2];c[i+4>>2]=c[q+4>>2];c[i+8>>2]=c[q+8>>2];i=0;while(1){if((i|0)==3)break;c[q+(i<<2)>>2]=0;i=i+1|0}xR(q);sd[c[(c[v>>2]|0)+24>>2]&255](q,b);v=j+11|0;if((a[v>>0]|0)<0){i=c[j>>2]|0;a[p>>0]=0;cI(i,p);c[j+4>>2]=0}else{a[p>>0]=0;cI(j,p);a[v>>0]=0}o=0;ma(189,j|0,0);v=o;o=0;if(v&1){v=Qa(0)|0;Id(v)};c[j>>2]=c[q>>2];c[j+4>>2]=c[q+4>>2];c[j+8>>2]=c[q+8>>2];j=0;while(1){if((j|0)==3)break;c[q+(j<<2)>>2]=0;j=j+1|0}xR(q);u=dd[c[(c[b>>2]|0)+36>>2]&255](b)|0}c[m>>2]=u;l=n;return}function FN(d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;c[f>>2]=d;s=q+11|0;t=q+4|0;u=p+11|0;v=p+4|0;w=(g&512|0)==0;x=j+8|0;y=(r|0)>0;z=o+11|0;A=o+4|0;B=0;C=h;while(1){if((B|0)==4)break;a:do switch(a[l+B>>0]|0){case 0:{c[e>>2]=c[f>>2];D=C;break}case 1:{c[e>>2]=c[f>>2];h=ed[c[(c[j>>2]|0)+28>>2]&255](j,32)|0;E=c[f>>2]|0;c[f>>2]=E+1;a[E>>0]=h;D=C;break}case 3:{h=a[s>>0]|0;E=h<<24>>24<0;if(!((E?c[t>>2]|0:h&255)|0))D=C;else{h=a[(E?c[q>>2]|0:q)>>0]|0;E=c[f>>2]|0;c[f>>2]=E+1;a[E>>0]=h;D=C}break}case 2:{h=a[u>>0]|0;E=h<<24>>24<0;F=E?c[v>>2]|0:h&255;if(w|(F|0)==0)D=C;else{h=E?c[p>>2]|0:p;E=h+F|0;F=c[f>>2]|0;G=h;while(1){if((G|0)==(E|0))break;a[F>>0]=a[G>>0]|0;F=F+1|0;G=G+1|0}c[f>>2]=F;D=C}break}case 4:{G=c[f>>2]|0;E=k?C+1|0:C;h=E;while(1){if(h>>>0>=i>>>0)break;H=a[h>>0]|0;if(H<<24>>24<=-1)break;if(!(b[(c[x>>2]|0)+(H<<24>>24<<1)>>1]&2048))break;h=h+1|0}if(y){F=r;H=h;while(1){I=(F|0)>0;if(!(H>>>0>E>>>0&I))break;J=H+-1|0;K=a[J>>0]|0;L=c[f>>2]|0;c[f>>2]=L+1;a[L>>0]=K;F=F+-1|0;H=J}if(I)M=ed[c[(c[j>>2]|0)+28>>2]&255](j,48)|0;else M=0;J=F;while(1){N=c[f>>2]|0;c[f>>2]=N+1;if((J|0)<=0)break;a[N>>0]=M;J=J+-1|0}a[N>>0]=m;O=H}else O=h;b:do if((O|0)==(E|0)){J=ed[c[(c[j>>2]|0)+28>>2]&255](j,48)|0;F=c[f>>2]|0;c[f>>2]=F+1;a[F>>0]=J}else{J=a[z>>0]|0;F=J<<24>>24<0;if(!((F?c[A>>2]|0:J&255)|0)){P=-1;Q=0;R=0;S=O}else{P=a[(F?c[o>>2]|0:o)>>0]|0;Q=0;R=0;S=O}while(1){if((S|0)==(E|0))break b;if((R|0)==(P|0)){F=c[f>>2]|0;c[f>>2]=F+1;a[F>>0]=n;F=Q+1|0;J=a[z>>0]|0;K=J<<24>>24<0;if(F>>>0<(K?c[A>>2]|0:J&255)>>>0){J=a[(K?c[o>>2]|0:o)+F>>0]|0;T=J<<24>>24==127?-1:J<<24>>24;U=F;V=0}else{T=R;U=F;V=0}}else{T=P;U=Q;V=R}F=S+-1|0;J=a[F>>0]|0;K=c[f>>2]|0;c[f>>2]=K+1;a[K>>0]=J;P=T;Q=U;R=V+1|0;S=F}}while(0);h=c[f>>2]|0;if((G|0)==(h|0))D=E;else{H=h;h=G;while(1){F=H+-1|0;if(h>>>0>=F>>>0){D=E;break a}J=a[h>>0]|0;a[h>>0]=a[F>>0]|0;a[F>>0]=J;H=F;h=h+1|0}}break}default:D=C}while(0);B=B+1|0;C=D}D=a[s>>0]|0;s=D<<24>>24<0;C=s?c[t>>2]|0:D&255;if(C>>>0>1){D=s?c[q>>2]|0:q;q=D+C|0;C=c[f>>2]|0;s=D;while(1){D=s+1|0;if((D|0)==(q|0))break;a[C>>0]=a[D>>0]|0;C=C+1|0;s=D}c[f>>2]=C}switch((g&176)<<24>>24){case 32:{c[e>>2]=c[f>>2];break}case 16:break;default:c[e>>2]=d}return}function GN(a){a=a|0;GI(a);return}function HN(a){a=a|0;GI(a);mR(a);return}function IN(b,d,e,f,g,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;i=+i;var j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Z=0,$=0,ba=0,ca=0,da=0,fa=0,ga=0,ha=0,ia=0,ja=0,la=0;b=l;l=l+1008|0;j=b+8|0;k=b;m=b+896|0;n=b+888|0;p=b+488|0;q=b+480|0;r=b+892|0;s=b+476|0;t=b+472|0;u=b+460|0;v=b+448|0;w=b+436|0;x=b+432|0;y=b+32|0;A=b+24|0;B=b+20|0;C=b+16|0;c[n>>2]=m;h[j>>3]=i;D=mG(m,100,91499,j)|0;a:do if(D>>>0>99){o=0;m=Y(36)|0;E=o;o=0;do if(!(E&1)?(o=0,h[k>>3]=i,F=aa(59,n|0,m|0,91499,k|0)|0,G=o,o=0,!(G&1)):0){G=c[n>>2]|0;if(!G){o=0;ka(4);o=0;H=0;I=0;break}J=G;G=BE(F<<2)|0;K=G;if(G|0){L=G;M=F;N=K;O=J;P=9;break a}o=0;ka(4);o=0;H=K;I=J}else{H=0;I=0}while(0);m=Pa()|0;Q=m;R=z;S=H;T=I}else{L=p;M=D;N=0;O=0;P=9}while(0);if((P|0)==9){o=0;ma(132,q|0,f|0);D=o;o=0;if(D&1){D=Pa()|0;U=D;V=z}else{o=0;D=_(93,q|0,103e3)|0;p=o;o=0;if(!(p&1)?(p=c[n>>2]|0,o=0,aa(c[(c[D>>2]|0)+48>>2]|0,D|0,p|0,p+M|0,L|0)|0,p=o,o=0,!(p&1)):0){if(!M)W=0;else W=(a[c[n>>2]>>0]|0)==45;c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;n=0;while(1){if((n|0)==3)break;c[u+(n<<2)>>2]=0;n=n+1|0}c[v>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;n=0;while(1){if((n|0)==3)break;c[v+(n<<2)>>2]=0;n=n+1|0}c[w>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;n=0;while(1){if((n|0)==3)break;c[w+(n<<2)>>2]=0;n=n+1|0}o=0;sa(4,e|0,W|0,q|0,r|0,s|0,t|0,u|0,v|0,w|0,x|0);e=o;o=0;if(e&1){e=Pa()|0;X=e;Z=z}else{e=c[x>>2]|0;if((M|0)>(e|0)){x=a[w+8+3>>0]|0;n=a[v+8+3>>0]|0;$=1;ba=(x<<24>>24<0?c[w+4>>2]|0:x&255)+(M-e<<1)|0;ca=n<<24>>24<0?c[v+4>>2]|0:n&255}else{n=a[w+8+3>>0]|0;x=a[v+8+3>>0]|0;$=2;ba=x<<24>>24<0?c[v+4>>2]|0:x&255;ca=n<<24>>24<0?c[w+4>>2]|0:n&255}n=ca+e+ba+$|0;if(n>>>0>100){$=BE(n<<2)|0;n=$;if(!$){o=0;ka(4);o=0;ba=Pa()|0;da=ba;fa=z;ga=n}else{ha=$;ia=n;P=33}}else{ha=y;ia=0;P=33}if((P|0)==33){o=0;ta(2,ha|0,A|0,B|0,c[f+4>>2]|0,L|0,L+(M<<2)|0,D|0,W|0,r|0,c[s>>2]|0,c[t>>2]|0,u|0,v|0,w|0,e|0);e=o;o=0;if(!(e&1)?(c[C>>2]=c[d>>2],d=c[A>>2]|0,A=c[B>>2]|0,o=0,c[j>>2]=c[C>>2],C=ea(54,j|0,ha|0,d|0,A|0,f|0,g|0)|0,g=o,o=0,!(g&1)):0){if(ia|0)CE(ia);KR(w);KR(v);xR(u);$I(q);if(N|0)CE(N);if(O|0)CE(O);l=b;return C|0}C=Pa()|0;da=C;fa=z;ga=ia}if(ga|0)CE(ga);X=da;Z=fa}KR(w);KR(v);xR(u);ja=X;la=Z}else{Z=Pa()|0;ja=Z;la=z}$I(q);U=ja;V=la}Q=U;R=V;S=N;T=O}if(S|0)CE(S);if(T|0)CE(T);$a(Q|0);return 0}function JN(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;b=l;l=l+480|0;i=b+468|0;j=b+464|0;k=b+472|0;m=b+460|0;n=b+456|0;p=b+444|0;q=b+432|0;r=b+420|0;s=b+416|0;t=b+16|0;u=b+8|0;v=b+4|0;w=b;mI(j,f);o=0;x=_(93,j|0,103e3)|0;y=o;o=0;a:do if(y&1){A=Pa()|0;B=A;C=z}else{A=h+8+3|0;D=a[A>>0]|0;E=D<<24>>24<0;F=h+4|0;do if((E?c[F>>2]|0:D&255)|0){G=c[(E?c[h>>2]|0:h)>>2]|0;o=0;H=_(c[(c[x>>2]|0)+44>>2]|0,x|0,45)|0;I=o;o=0;if(I&1){I=Pa()|0;B=I;C=z;break a}else{J=(G|0)==(H|0);break}}else J=0;while(0);c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;E=0;while(1){if((E|0)==3)break;c[p+(E<<2)>>2]=0;E=E+1|0}c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;E=0;while(1){if((E|0)==3)break;c[q+(E<<2)>>2]=0;E=E+1|0}c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;E=0;while(1){if((E|0)==3)break;c[r+(E<<2)>>2]=0;E=E+1|0}o=0;sa(4,e|0,J|0,j|0,k|0,m|0,n|0,p|0,q|0,r|0,s|0);E=o;o=0;if(E&1){E=Pa()|0;K=E;L=z}else{E=a[A>>0]|0;D=E<<24>>24<0;H=D?c[F>>2]|0:E&255;E=c[s>>2]|0;if((H|0)>(E|0)){G=a[r+8+3>>0]|0;I=a[q+8+3>>0]|0;M=1;N=(G<<24>>24<0?c[r+4>>2]|0:G&255)+(H-E<<1)|0;O=I<<24>>24<0?c[q+4>>2]|0:I&255}else{I=a[r+8+3>>0]|0;G=a[q+8+3>>0]|0;M=2;N=G<<24>>24<0?c[q+4>>2]|0:G&255;O=I<<24>>24<0?c[r+4>>2]|0:I&255}I=O+E+N+M|0;if(I>>>0>100){G=BE(I<<2)|0;I=G;if(!G){o=0;ka(4);o=0;P=Pa()|0;Q=P;R=z;S=I}else{T=G;U=I;V=24}}else{T=t;U=0;V=24}if((V|0)==24){I=D?c[h>>2]|0:h;o=0;ta(2,T|0,u|0,v|0,c[f+4>>2]|0,I|0,I+(H<<2)|0,x|0,J|0,k|0,c[m>>2]|0,c[n>>2]|0,p|0,q|0,r|0,E|0);E=o;o=0;if(!(E&1)?(c[w>>2]=c[d>>2],E=c[u>>2]|0,H=c[v>>2]|0,o=0,c[i>>2]=c[w>>2],I=ea(54,i|0,T|0,E|0,H|0,f|0,g|0)|0,H=o,o=0,!(H&1)):0){if(U|0)CE(U);KR(r);KR(q);xR(p);$I(j);l=b;return I|0}I=Pa()|0;Q=I;R=z;S=U}if(S|0)CE(S);K=Q;L=R}KR(r);KR(q);xR(p);B=K;C=L}while(0);$I(j);$a(B|0);return 0}function KN(b,d,e,f,g,h,i,j,k,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;m=m|0;var n=0,p=0,q=0,r=0,s=0,t=0;n=l;l=l+16|0;p=n+12|0;q=n;if(b){b=_I(e,104704)|0;if(d){sd[c[(c[b>>2]|0)+44>>2]&255](p,b);r=c[p>>2]|0;a[f>>0]=r;a[f+1>>0]=r>>8;a[f+2>>0]=r>>16;a[f+3>>0]=r>>24;sd[c[(c[b>>2]|0)+32>>2]&255](q,b);r=k+8+3|0;if((a[r>>0]|0)<0){s=c[k>>2]|0;c[p>>2]=0;MI(s,p);c[k+4>>2]=0}else{c[p>>2]=0;MI(k,p);a[r>>0]=0}o=0;ma(191,k|0,0);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)};c[k>>2]=c[q>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];r=0;while(1){if((r|0)==3)break;c[q+(r<<2)>>2]=0;r=r+1|0}KR(q)}else{sd[c[(c[b>>2]|0)+40>>2]&255](p,b);r=c[p>>2]|0;a[f>>0]=r;a[f+1>>0]=r>>8;a[f+2>>0]=r>>16;a[f+3>>0]=r>>24;sd[c[(c[b>>2]|0)+28>>2]&255](q,b);r=k+8+3|0;if((a[r>>0]|0)<0){s=c[k>>2]|0;c[p>>2]=0;MI(s,p);c[k+4>>2]=0}else{c[p>>2]=0;MI(k,p);a[r>>0]=0}o=0;ma(191,k|0,0);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)};c[k>>2]=c[q>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];r=0;while(1){if((r|0)==3)break;c[q+(r<<2)>>2]=0;r=r+1|0}KR(q)}c[g>>2]=dd[c[(c[b>>2]|0)+12>>2]&255](b)|0;c[h>>2]=dd[c[(c[b>>2]|0)+16>>2]&255](b)|0;sd[c[(c[b>>2]|0)+20>>2]&255](q,b);r=i+11|0;if((a[r>>0]|0)<0){s=c[i>>2]|0;a[p>>0]=0;cI(s,p);c[i+4>>2]=0}else{a[p>>0]=0;cI(i,p);a[r>>0]=0}o=0;ma(189,i|0,0);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)};c[i>>2]=c[q>>2];c[i+4>>2]=c[q+4>>2];c[i+8>>2]=c[q+8>>2];r=0;while(1){if((r|0)==3)break;c[q+(r<<2)>>2]=0;r=r+1|0}xR(q);sd[c[(c[b>>2]|0)+24>>2]&255](q,b);r=j+8+3|0;if((a[r>>0]|0)<0){s=c[j>>2]|0;c[p>>2]=0;MI(s,p);c[j+4>>2]=0}else{c[p>>2]=0;MI(j,p);a[r>>0]=0}o=0;ma(191,j|0,0);r=o;o=0;if(r&1){r=Qa(0)|0;Id(r)};c[j>>2]=c[q>>2];c[j+4>>2]=c[q+4>>2];c[j+8>>2]=c[q+8>>2];r=0;while(1){if((r|0)==3)break;c[q+(r<<2)>>2]=0;r=r+1|0}KR(q);t=dd[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{b=_I(e,104696)|0;if(d){sd[c[(c[b>>2]|0)+44>>2]&255](p,b);d=c[p>>2]|0;a[f>>0]=d;a[f+1>>0]=d>>8;a[f+2>>0]=d>>16;a[f+3>>0]=d>>24;sd[c[(c[b>>2]|0)+32>>2]&255](q,b);d=k+8+3|0;if((a[d>>0]|0)<0){e=c[k>>2]|0;c[p>>2]=0;MI(e,p);c[k+4>>2]=0}else{c[p>>2]=0;MI(k,p);a[d>>0]=0}o=0;ma(191,k|0,0);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)};c[k>>2]=c[q>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];d=0;while(1){if((d|0)==3)break;c[q+(d<<2)>>2]=0;d=d+1|0}KR(q)}else{sd[c[(c[b>>2]|0)+40>>2]&255](p,b);d=c[p>>2]|0;a[f>>0]=d;a[f+1>>0]=d>>8;a[f+2>>0]=d>>16;a[f+3>>0]=d>>24;sd[c[(c[b>>2]|0)+28>>2]&255](q,b);d=k+8+3|0;if((a[d>>0]|0)<0){f=c[k>>2]|0;c[p>>2]=0;MI(f,p);c[k+4>>2]=0}else{c[p>>2]=0;MI(k,p);a[d>>0]=0}o=0;ma(191,k|0,0);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)};c[k>>2]=c[q>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];k=0;while(1){if((k|0)==3)break;c[q+(k<<2)>>2]=0;k=k+1|0}KR(q)}c[g>>2]=dd[c[(c[b>>2]|0)+12>>2]&255](b)|0;c[h>>2]=dd[c[(c[b>>2]|0)+16>>2]&255](b)|0;sd[c[(c[b>>2]|0)+20>>2]&255](q,b);h=i+11|0;if((a[h>>0]|0)<0){g=c[i>>2]|0;a[p>>0]=0;cI(g,p);c[i+4>>2]=0}else{a[p>>0]=0;cI(i,p);a[h>>0]=0}o=0;ma(189,i|0,0);h=o;o=0;if(h&1){h=Qa(0)|0;Id(h)};c[i>>2]=c[q>>2];c[i+4>>2]=c[q+4>>2];c[i+8>>2]=c[q+8>>2];i=0;while(1){if((i|0)==3)break;c[q+(i<<2)>>2]=0;i=i+1|0}xR(q);sd[c[(c[b>>2]|0)+24>>2]&255](q,b);i=j+8+3|0;if((a[i>>0]|0)<0){h=c[j>>2]|0;c[p>>2]=0;MI(h,p);c[j+4>>2]=0}else{c[p>>2]=0;MI(j,p);a[i>>0]=0}o=0;ma(191,j|0,0);i=o;o=0;if(i&1){i=Qa(0)|0;Id(i)};c[j>>2]=c[q>>2];c[j+4>>2]=c[q+4>>2];c[j+8>>2]=c[q+8>>2];j=0;while(1){if((j|0)==3)break;c[q+(j<<2)>>2]=0;j=j+1|0}KR(q);t=dd[c[(c[b>>2]|0)+36>>2]&255](b)|0}c[m>>2]=t;l=n;return}function LN(b,d,e,f,g,h,i,j,k,l,m,n,o,p,q){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;c[e>>2]=b;r=p+8+3|0;s=p+4|0;t=o+8+3|0;u=o+4|0;v=(f&512|0)==0;w=(q|0)>0;x=n+11|0;y=n+4|0;z=0;A=g;while(1){if((z|0)==4)break;a:do switch(a[k+z>>0]|0){case 0:{c[d>>2]=c[e>>2];B=A;break}case 1:{c[d>>2]=c[e>>2];g=ed[c[(c[i>>2]|0)+44>>2]&255](i,32)|0;C=c[e>>2]|0;c[e>>2]=C+4;c[C>>2]=g;B=A;break}case 3:{g=a[r>>0]|0;C=g<<24>>24<0;if(!((C?c[s>>2]|0:g&255)|0))B=A;else{g=c[(C?c[p>>2]|0:p)>>2]|0;C=c[e>>2]|0;c[e>>2]=C+4;c[C>>2]=g;B=A}break}case 2:{g=a[t>>0]|0;C=g<<24>>24<0;D=C?c[u>>2]|0:g&255;if(v|(D|0)==0)B=A;else{g=C?c[o>>2]|0:o;C=g+(D<<2)|0;E=c[e>>2]|0;F=E;G=g;while(1){if((G|0)==(C|0))break;c[F>>2]=c[G>>2];F=F+4|0;G=G+4|0}c[e>>2]=E+(D<<2);B=A}break}case 4:{G=c[e>>2]|0;F=j?A+4|0:A;C=F;while(1){if(C>>>0>=h>>>0)break;if(!(fd[c[(c[i>>2]|0)+12>>2]&127](i,2048,c[C>>2]|0)|0))break;C=C+4|0}if(w){D=q;E=C;while(1){H=(D|0)>0;if(!(E>>>0>F>>>0&H))break;g=E+-4|0;I=c[g>>2]|0;J=c[e>>2]|0;c[e>>2]=J+4;c[J>>2]=I;D=D+-1|0;E=g}if(H)K=ed[c[(c[i>>2]|0)+44>>2]&255](i,48)|0;else K=0;g=D;I=c[e>>2]|0;while(1){L=I+4|0;if((g|0)<=0)break;c[I>>2]=K;g=g+-1|0;I=L}c[e>>2]=L;c[I>>2]=l;M=E}else M=C;if((M|0)==(F|0)){g=ed[c[(c[i>>2]|0)+44>>2]&255](i,48)|0;D=c[e>>2]|0;J=D+4|0;c[e>>2]=J;c[D>>2]=g;N=J}else{J=a[x>>0]|0;g=J<<24>>24<0;if(!((g?c[y>>2]|0:J&255)|0)){O=-1;P=0;Q=0;R=M}else{O=a[(g?c[n>>2]|0:n)>>0]|0;P=0;Q=0;R=M}while(1){if((R|0)==(F|0))break;g=c[e>>2]|0;if((Q|0)==(O|0)){J=g+4|0;c[e>>2]=J;c[g>>2]=m;D=P+1|0;S=a[x>>0]|0;T=S<<24>>24<0;if(D>>>0<(T?c[y>>2]|0:S&255)>>>0){S=a[(T?c[n>>2]|0:n)+D>>0]|0;U=S<<24>>24==127?-1:S<<24>>24;V=D;W=0;X=J}else{U=Q;V=D;W=0;X=J}}else{U=O;V=P;W=Q;X=g}g=R+-4|0;J=c[g>>2]|0;c[e>>2]=X+4;c[X>>2]=J;O=U;P=V;Q=W+1|0;R=g}N=c[e>>2]|0}if((G|0)==(N|0))B=F;else{C=N;E=G;while(1){I=C+-4|0;if(E>>>0>=I>>>0){B=F;break a}g=c[E>>2]|0;c[E>>2]=c[I>>2];c[I>>2]=g;C=I;E=E+4|0}}break}default:B=A}while(0);z=z+1|0;A=B}B=a[r>>0]|0;r=B<<24>>24<0;A=r?c[s>>2]|0:B&255;if(A>>>0>1){B=c[p>>2]|0;z=r?B+4|0:s;s=(r?B:p)+(A<<2)|0;A=c[e>>2]|0;p=s-z|0;B=A;r=z;while(1){if((r|0)==(s|0))break;c[B>>2]=c[r>>2];B=B+4|0;r=r+4|0}c[e>>2]=A+(p>>>2<<2)}switch((f&176)<<24>>24){case 32:{c[d>>2]=c[e>>2];break}case 16:break;default:c[d>>2]=b}return}function MN(a){a=a|0;GI(a);return}function NN(a){a=a|0;GI(a);mR(a);return}function ON(b,d,e){b=b|0;d=d|0;e=e|0;e=_F((a[d+11>>0]|0)<0?c[d>>2]|0:d,1)|0;return e>>>((e|0)!=(-1|0)&1)|0}function PN(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0;d=l;l=l+16|0;i=d;c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;j=0;while(1){if((j|0)==3)break;c[i+(j<<2)>>2]=0;j=j+1|0}j=a[h+11>>0]|0;k=j<<24>>24<0;m=k?c[h>>2]|0:h;n=m+(k?c[h+4>>2]|0:j&255)|0;j=m;while(1){if(j>>>0>=n>>>0){p=8;break}o=0;ma(130,i|0,a[j>>0]|0);m=o;o=0;if(m&1){p=9;break}j=j+1|0}do if((p|0)==8){j=(a[i+11>>0]|0)<0?c[i>>2]|0:i;o=0;n=aa(61,((e|0)==-1?-1:e<<1)|0,f|0,g|0,j|0)|0;m=o;o=0;if(m&1){m=Pa()|0;q=m;r=z;break};c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;m=0;while(1){if((m|0)==3)break;c[b+(m<<2)>>2]=0;m=m+1|0}m=j+($F(n)|0)|0;h=j;while(1){if(h>>>0>=m>>>0){p=19;break}o=0;ma(130,b|0,a[h>>0]|0);k=o;o=0;if(k&1){p=18;break}h=h+1|0}if((p|0)==18){h=Pa()|0;m=z;xR(b);q=h;r=m;break}else if((p|0)==19){xR(i);l=d;return}}else if((p|0)==9){m=Pa()|0;q=m;r=z}while(0);xR(i);$a(q|0)}function QN(a,b){a=a|0;b=b|0;return}function RN(a){a=a|0;GI(a);return}function SN(a){a=a|0;GI(a);mR(a);return}function TN(b,d,e){b=b|0;d=d|0;e=e|0;e=_F((a[d+11>>0]|0)<0?c[d>>2]|0:d,1)|0;return e>>>((e|0)!=(-1|0)&1)|0}function UN(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0;d=l;l=l+224|0;i=d+184|0;j=d+192|0;k=d+180|0;m=d+176|0;n=d+168|0;p=d+40|0;q=d+32|0;r=d+28|0;s=d+16|0;t=d+8|0;u=d;c[s>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;v=0;while(1){if((v|0)==3)break;c[s+(v<<2)>>2]=0;v=v+1|0}c[t+4>>2]=0;c[t>>2]=56772;v=a[h+8+3>>0]|0;w=v<<24>>24<0;x=w?c[h>>2]|0:h;y=x+((w?c[h+4>>2]|0:v&255)<<2)|0;v=j+32|0;h=x;x=0;a:while(1){if(!((x|0)!=2&h>>>0<y>>>0)){A=13;break}c[m>>2]=h;o=0;w=ga(c[(c[t>>2]|0)+12>>2]|0,t|0,i|0,h|0,y|0,m|0,j|0,v|0,k|0)|0;B=o;o=0;if(B&1){A=14;break}if((w|0)==2?1:(c[m>>2]|0)==(h|0)){A=8;break}else C=j;while(1){if(C>>>0>=(c[k>>2]|0)>>>0)break;o=0;ma(130,s|0,a[C>>0]|0);B=o;o=0;if(B&1){A=14;break a}C=C+1|0}h=c[m>>2]|0;x=w}do if((A|0)==8){o=0;la(312,91044);o=0;A=14}else if((A|0)==13){GI(t);x=(a[s+11>>0]|0)<0?c[s>>2]|0:s;o=0;m=aa(61,((e|0)==-1?-1:e<<1)|0,f|0,g|0,x|0)|0;h=o;o=0;if(h&1){h=Pa()|0;D=h;E=z;break};c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;h=0;while(1){if((h|0)==3)break;c[b+(h<<2)>>2]=0;h=h+1|0}c[u+4>>2]=0;c[u>>2]=56820;h=x+($F(m)|0)|0;w=h;C=p+128|0;k=x;j=0;b:while(1){if(!((j|0)!=2&k>>>0<h>>>0)){A=27;break}c[r>>2]=k;o=0;v=ga(c[(c[u>>2]|0)+16>>2]|0,u|0,n|0,k|0,((w-k|0)>32?k+32|0:h)|0,r|0,p|0,C|0,q|0)|0;y=o;o=0;if(y&1)break;if((v|0)==2?1:(c[r>>2]|0)==(k|0)){A=22;break}else F=p;while(1){if(F>>>0>=(c[q>>2]|0)>>>0)break;o=0;ma(190,b|0,c[F>>2]|0);y=o;o=0;if(y&1)break b;F=F+4|0}k=c[r>>2]|0;j=v}if((A|0)==22){o=0;la(312,91044);o=0}else if((A|0)==27){GI(u);xR(s);l=d;return}j=Pa()|0;k=z;GI(u);KR(b);D=j;E=k}while(0);if((A|0)==14){A=Pa()|0;b=z;GI(t);D=A;E=b}xR(s);$a(D|0)}function VN(a,b){a=a|0;b=b|0;return}function WN(a){a=a|0;GI(a);mR(a);return}function XN(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0;b=l;l=l+16|0;a=b+4|0;j=b;c[a>>2]=d;c[j>>2]=g;k=eO(d,e,a,g,h,j,1114111,0)|0;c[f>>2]=c[a>>2];c[i>>2]=c[j>>2];l=b;return k|0}function YN(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0;b=l;l=l+16|0;a=b+4|0;j=b;c[a>>2]=d;c[j>>2]=g;k=dO(d,e,a,g,h,j,1114111,0)|0;c[f>>2]=c[a>>2];c[i>>2]=c[j>>2];l=b;return k|0}function ZN(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function _N(a){a=a|0;return 0}function $N(a){a=a|0;return 0}function aO(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return cO(c,d,e,1114111,0)|0}function bO(a){a=a|0;return 4}function cO(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=c;if((((g&4|0)!=0?(h-b|0)>2:0)?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0){i=0;j=(a[b+2>>0]|0)==-65?b+3|0:b}else{i=0;j=b}a:while(1){if(!(i>>>0<e>>>0&j>>>0<c>>>0)){k=34;break}g=a[j>>0]|0;l=g&255;do if(g<<24>>24<=-1){if((g&255)<194){k=34;break a}if((g&255)<224){if((h-j|0)<2){k=34;break a}m=d[j+1>>0]|0;if((m&192|0)!=128){k=34;break a}if((m&63|l<<6&1984)>>>0>f>>>0){k=34;break a}n=j+2|0;break}if((g&255)<240){m=j;if((h-m|0)<3){k=34;break a}o=a[j+1>>0]|0;p=a[j+2>>0]|0;switch(g<<24>>24){case -32:{if((o&-32)<<24>>24!=-96){q=m;break a}break}case -19:{if((o&-32)<<24>>24!=-128){q=m;break a}break}default:if((o&-64)<<24>>24!=-128){q=m;break a}}m=p&255;if((m&192|0)!=128){k=34;break a}if(((o&63)<<6|l<<12&61440|m&63)>>>0>f>>>0){k=34;break a}else{n=j+3|0;break}}if((g&255)>=245){k=34;break a}m=j;if((h-m|0)<4){k=34;break a}o=a[j+1>>0]|0;p=a[j+2>>0]|0;r=a[j+3>>0]|0;switch(g<<24>>24){case -16:{if((o+112&255)>=48){q=m;break a}break}case -12:{if((o&-16)<<24>>24!=-128){q=m;break a}break}default:if((o&-64)<<24>>24!=-128){q=m;break a}}m=p&255;if((m&192|0)!=128){k=34;break a}p=r&255;if((p&192|0)!=128){k=34;break a}if(((o&63)<<12|l<<18&1835008|m<<6&4032|p&63)>>>0>f>>>0){k=34;break a}else n=j+4|0}else{if(l>>>0>f>>>0){k=34;break a}n=j+1|0}while(0);i=i+1|0;j=n}if((k|0)==34)q=j;return q-b|0}function dO(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;c[f>>2]=b;c[i>>2]=g;if(k&4){k=c[f>>2]|0;g=e;if((((g-k|0)>2?(a[k>>0]|0)==-17:0)?(a[k+1>>0]|0)==-69:0)?(a[k+2>>0]|0)==-65:0){c[f>>2]=k+3;l=g}else l=g}else l=e;a:while(1){g=c[f>>2]|0;m=g>>>0<e>>>0;if(!m){n=36;break}k=c[i>>2]|0;if(k>>>0>=h>>>0){n=36;break}b=a[g>>0]|0;o=b&255;do if(b<<24>>24>-1)if(o>>>0>j>>>0){p=2;break a}else{q=o;r=1}else{if((b&255)<194){p=2;break a}if((b&255)<224){if((l-g|0)<2){p=1;break a}s=d[g+1>>0]|0;if((s&192|0)!=128){p=2;break a}t=s&63|o<<6&1984;if(t>>>0>j>>>0){p=2;break a}else{q=t;r=2;break}}if((b&255)<240){if((l-g|0)<3){p=1;break a}t=a[g+1>>0]|0;s=a[g+2>>0]|0;switch(b<<24>>24){case -32:{if((t&-32)<<24>>24!=-96){p=2;break a}break}case -19:{if((t&-32)<<24>>24!=-128){p=2;break a}break}default:if((t&-64)<<24>>24!=-128){p=2;break a}}u=s&255;if((u&192|0)!=128){p=2;break a}s=(t&63)<<6|o<<12&61440|u&63;if(s>>>0>j>>>0){p=2;break a}else{q=s;r=3;break}}if((b&255)>=245){p=2;break a}if((l-g|0)<4){p=1;break a}s=a[g+1>>0]|0;u=a[g+2>>0]|0;t=a[g+3>>0]|0;switch(b<<24>>24){case -16:{if((s+112&255)>=48){p=2;break a}break}case -12:{if((s&-16)<<24>>24!=-128){p=2;break a}break}default:if((s&-64)<<24>>24!=-128){p=2;break a}}v=u&255;if((v&192|0)!=128){p=2;break a}u=t&255;if((u&192|0)!=128){p=2;break a}t=(s&63)<<12|o<<18&1835008|v<<6&4032|u&63;if(t>>>0>j>>>0){p=2;break a}else{q=t;r=4}}while(0);c[k>>2]=q;c[f>>2]=g+r;c[i>>2]=(c[i>>2]|0)+4}if((n|0)==36)p=m&1;return p|0}function eO(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;c[e>>2]=b;c[h>>2]=f;b=g;if(j&2)if((b-f|0)<3)k=1;else{c[h>>2]=f+1;a[f>>0]=-17;f=c[h>>2]|0;c[h>>2]=f+1;a[f>>0]=-69;f=c[h>>2]|0;c[h>>2]=f+1;a[f>>0]=-65;l=4}else l=4;a:do if((l|0)==4){f=c[e>>2]|0;while(1){if(f>>>0>=d>>>0){k=0;break a}j=c[f>>2]|0;if(j>>>0>i>>>0|(j&-2048|0)==55296){k=2;break a}do if(j>>>0>=128){if(j>>>0<2048){g=c[h>>2]|0;if((b-g|0)<2){k=1;break a}c[h>>2]=g+1;a[g>>0]=j>>>6|192;g=c[h>>2]|0;c[h>>2]=g+1;a[g>>0]=j&63|128;break}g=c[h>>2]|0;m=b-g|0;if(j>>>0<65536){if((m|0)<3){k=1;break a}c[h>>2]=g+1;a[g>>0]=j>>>12|224;n=c[h>>2]|0;c[h>>2]=n+1;a[n>>0]=j>>>6&63|128;n=c[h>>2]|0;c[h>>2]=n+1;a[n>>0]=j&63|128;break}else{if((m|0)<4){k=1;break a}c[h>>2]=g+1;a[g>>0]=j>>>18|240;g=c[h>>2]|0;c[h>>2]=g+1;a[g>>0]=j>>>12&63|128;g=c[h>>2]|0;c[h>>2]=g+1;a[g>>0]=j>>>6&63|128;g=c[h>>2]|0;c[h>>2]=g+1;a[g>>0]=j&63|128;break}}else{g=c[h>>2]|0;if((b-g|0)<1){k=1;break a}c[h>>2]=g+1;a[g>>0]=j}while(0);j=(c[e>>2]|0)+4|0;c[e>>2]=j;f=j}}while(0);return k|0}function fO(a){a=a|0;GI(a);mR(a);return}function gO(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function hO(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function iO(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function jO(a){a=a|0;return 1}function kO(a){a=a|0;return 1}function lO(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=d-c|0;return (b>>>0<e>>>0?b:e)|0}function mO(a){a=a|0;return 1}function nO(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;k=l;l=l+16|0;m=k;n=k+8|0;p=e;while(1){if((p|0)==(f|0)){q=f;break}if(!(c[p>>2]|0)){q=p;break}p=p+4|0}c[j>>2]=h;c[g>>2]=e;p=i;r=b+8|0;b=e;e=h;h=q;a:while(1){if((e|0)==(i|0)|(b|0)==(f|0)){s=b;t=53;break}q=d;u=c[q+4>>2]|0;v=m;c[v>>2]=c[q>>2];c[v+4>>2]=u;w=nG(c[r>>2]|0)|0;o=0;u=ca(39,e|0,g|0,h-b>>2|0,p-e|0,d|0)|0;v=o;o=0;if(v&1){t=11;break}if(w|0?(o=0,Z(240,w|0)|0,v=o,o=0,v&1):0){t=10;break}switch(u|0){case -1:{t=16;break a;break}case 0:{x=1;t=50;break a;break}default:{}}v=(c[j>>2]|0)+u|0;c[j>>2]=v;if((v|0)==(i|0)){t=51;break}if((h|0)==(f|0)){y=f;z=v;A=c[g>>2]|0}else{B=nG(c[r>>2]|0)|0;o=0;v=$(122,n|0,0,d|0)|0;u=o;o=0;if(u&1){t=36;break}if(B|0?(o=0,Z(240,B|0)|0,u=o,o=0,u&1):0){t=35;break}if((v|0)==-1){C=2;t=49;break}if(v>>>0>(p-(c[j>>2]|0)|0)>>>0){C=1;t=49;break}else{D=n;E=v}while(1){if(!E)break;v=a[D>>0]|0;u=c[j>>2]|0;c[j>>2]=u+1;a[u>>0]=v;D=D+1|0;E=E+-1|0}v=(c[g>>2]|0)+4|0;c[g>>2]=v;u=v;while(1){if((u|0)==(f|0)){F=f;break}if(!(c[u>>2]|0)){F=u;break}u=u+4|0}y=F;z=c[j>>2]|0;A=v}b=A;e=z;h=y}do if((t|0)==10){y=Qa(0)|0;Id(y)}else if((t|0)==11){y=Pa()|0;if(w|0?(o=0,Z(240,w|0)|0,h=o,o=0,h&1):0){h=Qa(0)|0;Id(h)}$a(y|0)}else if((t|0)==16){c[j>>2]=e;y=b;h=e;while(1){if((y|0)==(c[g>>2]|0)){t=28;break}z=c[y>>2]|0;G=nG(c[r>>2]|0)|0;o=0;A=$(122,h|0,z|0,m|0)|0;z=o;o=0;if(z&1){t=22;break}if(G|0?(o=0,Z(240,G|0)|0,z=o,o=0,z&1):0){t=21;break}if((A|0)==-1){t=28;break}z=(c[j>>2]|0)+A|0;c[j>>2]=z;y=y+4|0;h=z}if((t|0)==21){h=Qa(0)|0;Id(h)}else if((t|0)==22){h=Pa()|0;if(G|0?(o=0,Z(240,G|0)|0,v=o,o=0,v&1):0){v=Qa(0)|0;Id(v)}$a(h|0)}else if((t|0)==28){c[g>>2]=y;x=2;t=50;break}}else if((t|0)==35){h=Qa(0)|0;Id(h)}else if((t|0)==36){h=Pa()|0;if(B|0?(o=0,Z(240,B|0)|0,v=o,o=0,v&1):0){v=Qa(0)|0;Id(v)}$a(h|0)}else if((t|0)==49){x=C;t=50}else if((t|0)==51){s=c[g>>2]|0;t=53}while(0);if((t|0)==50)H=x;else if((t|0)==53)H=(s|0)!=(f|0)&1;l=k;return H|0}function oO(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;k=l;l=l+16|0;m=k;n=e;while(1){if((n|0)==(f|0)){p=f;break}if(!(a[n>>0]|0)){p=n;break}n=n+1|0}c[j>>2]=h;c[g>>2]=e;n=i;q=b+8|0;b=e;e=h;h=p;while(1){if((e|0)==(i|0)|(b|0)==(f|0)){r=b;s=50;break}p=d;t=c[p+4>>2]|0;u=m;c[u>>2]=c[p>>2];c[u+4>>2]=t;v=h;w=nG(c[q>>2]|0)|0;o=0;t=ca(40,e|0,g|0,v-b|0,n-e>>2|0,d|0)|0;u=o;o=0;if(u&1){s=11;break}if(w|0?(o=0,Z(240,w|0)|0,u=o,o=0,u&1):0){s=10;break}if((t|0)==-1){x=b;y=e;s=16;break}u=(c[j>>2]|0)+(t<<2)|0;c[j>>2]=u;if((u|0)==(i|0)){s=47;break}t=c[g>>2]|0;if((h|0)==(f|0)){z=f;A=u;B=t}else{C=nG(c[q>>2]|0)|0;o=0;p=aa(62,u|0,t|0,1,d|0)|0;t=o;o=0;if(t&1){s=37;break}if(C|0?(o=0,Z(240,C|0)|0,t=o,o=0,t&1):0){s=36;break}if(p|0){D=2;s=46;break}c[j>>2]=(c[j>>2]|0)+4;p=(c[g>>2]|0)+1|0;c[g>>2]=p;t=p;while(1){if((t|0)==(f|0)){E=f;break}if(!(a[t>>0]|0)){E=t;break}t=t+1|0}z=E;A=c[j>>2]|0;B=p}b=B;e=A;h=z}do if((s|0)==10){z=Qa(0)|0;Id(z)}else if((s|0)==11){z=Pa()|0;if(w|0?(o=0,Z(240,w|0)|0,h=o,o=0,h&1):0){h=Qa(0)|0;Id(h)}$a(z|0)}else if((s|0)==16){a:while(1){s=0;c[j>>2]=y;if((x|0)==(c[g>>2]|0)){s=30;break}F=nG(c[q>>2]|0)|0;o=0;z=aa(62,y|0,x|0,v-x|0,m|0)|0;h=o;o=0;if(h&1){s=21;break}if(F|0?(o=0,Z(240,F|0)|0,h=o,o=0,h&1):0){s=20;break}switch(z|0){case -1:{s=27;break a;break}case -2:{s=28;break a;break}case 0:{G=1;break}default:G=z}x=x+G|0;y=(c[j>>2]|0)+4|0;s=16}if((s|0)==20){p=Qa(0)|0;Id(p)}else if((s|0)==21){p=Pa()|0;if(F|0?(o=0,Z(240,F|0)|0,z=o,o=0,z&1):0){z=Qa(0)|0;Id(z)}$a(p|0)}else if((s|0)==27){c[g>>2]=x;D=2;s=46;break}else if((s|0)==28){c[g>>2]=x;D=1;s=46;break}else if((s|0)==30){c[g>>2]=x;D=(x|0)!=(f|0)&1;s=46;break}}else if((s|0)==36){p=Qa(0)|0;Id(p)}else if((s|0)==37){p=Pa()|0;if(C|0?(o=0,Z(240,C|0)|0,z=o,o=0,z&1):0){z=Qa(0)|0;Id(z)}$a(p|0)}else if((s|0)==47){r=c[g>>2]|0;s=50}while(0);if((s|0)==46)H=D;else if((s|0)==50)H=(r|0)!=(f|0)&1;l=k;return H|0}function pO(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h;c[g>>2]=e;e=nG(c[b+8>>2]|0)|0;o=0;b=$(122,i|0,0,d|0)|0;d=o;o=0;if(d&1){d=Pa()|0;if(e|0?(o=0,Z(240,e|0)|0,j=o,o=0,j&1):0){j=Qa(0)|0;Id(j)}$a(d|0)}if(e|0?(o=0,Z(240,e|0)|0,e=o,o=0,e&1):0){e=Qa(0)|0;Id(e)}a:do if((b+1|0)>>>0>=2){e=b+-1|0;if(e>>>0>(f-(c[g>>2]|0)|0)>>>0)k=1;else{d=i;j=e;while(1){if(!j){k=0;break a}e=a[d>>0]|0;m=c[g>>2]|0;c[g>>2]=m+1;a[m>>0]=e;d=d+1|0;j=j+-1|0}}}else k=2;while(0);l=h;return k|0}function qO(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;b=a+8|0;o=0;a=Z(240,c[b>>2]|0)|0;d=o;o=0;do if(d&1)e=21;else{o=0;f=$(123,0,0,4)|0;g=o;o=0;if(g&1){g=Qa(0)|0;if(!a){h=g;break}o=0;Z(240,a|0)|0;i=o;o=0;if(!(i&1)){h=g;break}g=Qa(0)|0;Id(g)}if(a|0?(o=0,Z(240,a|0)|0,g=o,o=0,g&1):0){g=Qa(0)|0;Id(g)}if(!f){f=c[b>>2]|0;if(!f)j=1;else{o=0;g=Z(240,f|0)|0;f=o;o=0;if(f&1){e=21;break}o=0;f=Y(37)|0;i=o;o=0;if(i&1){i=Qa(0)|0;if(!g){h=i;break}o=0;Z(240,g|0)|0;k=o;o=0;if(!(k&1)){h=i;break}i=Qa(0)|0;Id(i)}if(g|0?(o=0,Z(240,g|0)|0,g=o,o=0,g&1):0){g=Qa(0)|0;Id(g)}return (f|0)==1|0}}else j=-1;return j|0}while(0);if((e|0)==21){e=Qa(0)|0;h=e}Id(h);return 0}function rO(a){a=a|0;return 0}function sO(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=e;h=a+8|0;a=0;i=0;j=d;a:while(1){if((j|0)==(e|0)|a>>>0>=f>>>0){k=14;break}l=nG(c[h>>2]|0)|0;o=0;d=$(124,j|0,g-j|0,b|0)|0;m=o;o=0;if(m&1){k=7;break}if(l|0?(o=0,Z(240,l|0)|0,m=o,o=0,m&1):0){k=6;break}switch(d|0){case -2:case -1:{k=14;break a;break}case 0:{n=1;break}default:n=d}a=a+1|0;i=n+i|0;j=j+n|0}if((k|0)==6){n=Qa(0)|0;Id(n)}else if((k|0)==7){n=Pa()|0;if(l|0?(o=0,Z(240,l|0)|0,l=o,o=0,l&1):0){l=Qa(0)|0;Id(l)}$a(n|0)}else if((k|0)==14)return i|0;return 0}function tO(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=c[a+8>>2]|0;a:do if(!b)d=1;else{o=0;a=Z(240,b|0)|0;e=o;o=0;do if(!(e&1)){o=0;f=Y(37)|0;g=o;o=0;if(g&1){g=Qa(0)|0;if(!a){h=g;break}o=0;Z(240,a|0)|0;i=o;o=0;if(!(i&1)){h=g;break}g=Qa(0)|0;Id(g)}else{if(!a){d=f;break a}o=0;Z(240,a|0)|0;g=o;o=0;if(!(g&1)){d=f;break a}f=Qa(0)|0;Id(f)}}else{f=Qa(0)|0;h=f}while(0);Id(h)}while(0);return d|0}function uO(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;c[a>>2]=56868;b=a+8|0;d=c[b>>2]|0;o=0;e=Y(36)|0;f=o;o=0;do if(!(f&1)){if((d|0)!=(e|0)?(o=0,la(310,c[b>>2]|0),g=o,o=0,g&1):0)break;GI(a);return}while(0);b=Qa(0)|0;GI(a);Id(b)}function vO(a){a=a|0;uO(a);mR(a);return}function wO(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0;b=l;l=l+16|0;a=b+4|0;j=b;c[a>>2]=d;c[j>>2]=g;k=FO(d,e,a,g,h,j,1114111,0)|0;c[f>>2]=c[a>>2];c[i>>2]=c[j>>2];l=b;return k|0}function xO(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0;b=l;l=l+16|0;a=b+4|0;j=b;c[a>>2]=d;c[j>>2]=g;k=EO(d,e,a,g,h,j,1114111,0)|0;c[f>>2]=c[a>>2];c[i>>2]=c[j>>2];l=b;return k|0}function yO(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function zO(a){a=a|0;return 0}function AO(a){a=a|0;return 0}function BO(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return DO(c,d,e,1114111,0)|0}function CO(a){a=a|0;return 4}function DO(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=c;if((((g&4|0)!=0?(h-b|0)>2:0)?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0){i=0;j=(a[b+2>>0]|0)==-65?b+3|0:b}else{i=0;j=b}a:while(1){if(!(i>>>0<e>>>0&j>>>0<c>>>0)){k=33;break}g=a[j>>0]|0;l=g&255;if(l>>>0>f>>>0){k=33;break}do if(g<<24>>24<=-1){if((g&255)<194){k=33;break a}if((g&255)<224){if((h-j|0)<2){k=33;break a}m=d[j+1>>0]|0;if((m&192|0)!=128){k=33;break a}if((m&63|l<<6&1984)>>>0>f>>>0){k=33;break a}else{n=i;o=j+2|0;break}}if((g&255)<240){m=j;if((h-m|0)<3){k=33;break a}p=a[j+1>>0]|0;q=a[j+2>>0]|0;switch(g<<24>>24){case -32:{if((p&-32)<<24>>24!=-96){r=m;break a}break}case -19:{if((p&-32)<<24>>24!=-128){r=m;break a}break}default:if((p&-64)<<24>>24!=-128){r=m;break a}}m=q&255;if((m&192|0)!=128){k=33;break a}if(((p&63)<<6|l<<12&61440|m&63)>>>0>f>>>0){k=33;break a}else{n=i;o=j+3|0;break}}if((g&255)>=245){k=33;break a}m=j;if((e-i|0)>>>0<2|(h-m|0)<4){k=33;break a}p=a[j+1>>0]|0;q=a[j+2>>0]|0;s=a[j+3>>0]|0;switch(g<<24>>24){case -16:{if((p+112&255)>=48){r=m;break a}break}case -12:{if((p&-16)<<24>>24!=-128){r=m;break a}break}default:if((p&-64)<<24>>24!=-128){r=m;break a}}m=q&255;if((m&192|0)!=128){k=33;break a}q=s&255;if((q&192|0)!=128){k=33;break a}if(((p&63)<<12|l<<18&1835008|m<<6&4032|q&63)>>>0>f>>>0){k=33;break a}else{n=i+1|0;o=j+4|0}}else{n=i;o=j+1|0}while(0);i=n+1|0;j=o}if((k|0)==33)r=j;return r-b|0}function EO(e,f,g,h,i,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;c[g>>2]=e;c[j>>2]=h;if(l&4){l=c[g>>2]|0;h=f;if((((h-l|0)>2?(a[l>>0]|0)==-17:0)?(a[l+1>>0]|0)==-69:0)?(a[l+2>>0]|0)==-65:0){c[g>>2]=l+3;m=h}else m=h}else m=f;h=i;a:while(1){l=c[g>>2]|0;n=l>>>0<f>>>0;if(!n){o=41;break}e=c[j>>2]|0;if(e>>>0>=i>>>0){o=41;break}p=a[l>>0]|0;q=p&255;if(q>>>0>k>>>0){r=2;break}do if(p<<24>>24>-1){b[e>>1]=p&255;s=1;t=l}else{if((p&255)<194){r=2;break a}if((p&255)<224){if((m-l|0)<2){r=1;break a}u=d[l+1>>0]|0;if((u&192|0)!=128){r=2;break a}v=u&63|q<<6&1984;if(v>>>0>k>>>0){r=2;break a}b[e>>1]=v;s=2;t=l;break}if((p&255)<240){if((m-l|0)<3){r=1;break a}v=a[l+1>>0]|0;u=a[l+2>>0]|0;switch(p<<24>>24){case -32:{if((v&-32)<<24>>24!=-96){r=2;break a}break}case -19:{if((v&-32)<<24>>24!=-128){r=2;break a}break}default:if((v&-64)<<24>>24!=-128){r=2;break a}}w=u&255;if((w&192|0)!=128){r=2;break a}u=(v&63)<<6|q<<12|w&63;if((u&65535)>>>0>k>>>0){r=2;break a}b[e>>1]=u;s=3;t=l;break}if((p&255)>=245){r=2;break a}if((m-l|0)<4){r=1;break a}u=a[l+1>>0]|0;w=a[l+2>>0]|0;v=a[l+3>>0]|0;switch(p<<24>>24){case -16:{if((u+112&255)>=48){r=2;break a}break}case -12:{if((u&-16)<<24>>24!=-128){r=2;break a}break}default:if((u&-64)<<24>>24!=-128){r=2;break a}}x=w&255;if((x&192|0)!=128){r=2;break a}w=v&255;if((w&192|0)!=128){r=2;break a}if((h-e|0)<4){r=1;break a}v=q&7;y=u&255;u=x<<6;z=w&63;if((y<<12&258048|v<<18|u&4032|z)>>>0>k>>>0){r=2;break a}b[e>>1]=y<<2&60|x>>>4&3|((y>>>4&3|v<<2)<<6)+16320|55296;v=e+2|0;c[j>>2]=v;b[v>>1]=z|u&960|56320;s=4;t=c[g>>2]|0}while(0);c[g>>2]=t+s;c[j>>2]=(c[j>>2]|0)+2}if((o|0)==41)r=n&1;return r|0}function FO(d,f,g,h,i,j,k,l){d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;c[g>>2]=d;c[j>>2]=h;d=i;if(l&2)if((d-h|0)<3)m=1;else{c[j>>2]=h+1;a[h>>0]=-17;h=c[j>>2]|0;c[j>>2]=h+1;a[h>>0]=-69;h=c[j>>2]|0;c[j>>2]=h+1;a[h>>0]=-65;n=4}else n=4;a:do if((n|0)==4){h=f;l=c[g>>2]|0;while(1){if(l>>>0>=f>>>0){m=0;break a}i=b[l>>1]|0;o=i&65535;if(o>>>0>k>>>0){m=2;break a}do if((i&65535)<128){p=c[j>>2]|0;if((d-p|0)<1){m=1;break a}c[j>>2]=p+1;a[p>>0]=i}else{if((i&65535)<2048){p=c[j>>2]|0;if((d-p|0)<2){m=1;break a}c[j>>2]=p+1;a[p>>0]=o>>>6|192;p=c[j>>2]|0;c[j>>2]=p+1;a[p>>0]=o&63|128;break}if((i&65535)<55296){p=c[j>>2]|0;if((d-p|0)<3){m=1;break a}c[j>>2]=p+1;a[p>>0]=o>>>12|224;p=c[j>>2]|0;c[j>>2]=p+1;a[p>>0]=o>>>6&63|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p>>0]=o&63|128;break}if((i&65535)>=56320){if((i&65535)<57344){m=2;break a}p=c[j>>2]|0;if((d-p|0)<3){m=1;break a}c[j>>2]=p+1;a[p>>0]=o>>>12|224;p=c[j>>2]|0;c[j>>2]=p+1;a[p>>0]=o>>>6&63|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p>>0]=o&63|128;break}if((h-l|0)<4){m=1;break a}p=l+2|0;q=e[p>>1]|0;if((q&64512|0)!=56320){m=2;break a}if((d-(c[j>>2]|0)|0)<4){m=1;break a}r=o&960;if(((r<<10)+65536|o<<10&64512|q&1023)>>>0>k>>>0){m=2;break a}c[g>>2]=p;p=(r>>>6)+1|0;r=c[j>>2]|0;c[j>>2]=r+1;a[r>>0]=p>>>2|240;r=c[j>>2]|0;c[j>>2]=r+1;a[r>>0]=o>>>2&15|p<<4&48|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p>>0]=o<<4&48|q>>>6&15|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p>>0]=q&63|128}while(0);o=(c[g>>2]|0)+2|0;c[g>>2]=o;l=o}}while(0);return m|0}function GO(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;c[a>>2]=56916;b=a+8|0;d=a+12|0;e=0;while(1){f=c[b>>2]|0;if(e>>>0>=(c[d>>2]|0)-f>>2>>>0)break;g=c[f+(e<<2)>>2]|0;if(g|0)fR(g)|0;e=e+1|0}xR(a+144|0);IO(b);GI(a);return}function HO(a){a=a|0;GO(a);mR(a);return}function IO(b){b=b|0;var d=0,e=0,f=0,g=0;d=c[b>>2]|0;do if(d|0){e=b+4|0;f=c[e>>2]|0;while(1){if((f|0)==(d|0))break;g=f+-4|0;c[e>>2]=g;f=g}if((d|0)==(b+16|0)){a[b+128>>0]=0;break}else{mR(d);break}}while(0);return}function JO(b){b=b|0;var d=0;c[b>>2]=56936;d=c[b+8>>2]|0;if(d|0?a[b+12>>0]|0:0)nR(d);GI(b);return}function KO(a){a=a|0;JO(a);mR(a);return}function LO(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24>-1)d=c[(UO()|0)+((b&255)<<2)>>2]&255;else d=b;return d|0}function MO(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;b=d;while(1){if((b|0)==(e|0))break;d=a[b>>0]|0;if(d<<24>>24>-1){f=UO()|0;g=c[f+(a[b>>0]<<2)>>2]&255}else g=d;a[b>>0]=g;b=b+1|0}return e|0}function NO(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24>-1)d=c[(TO()|0)+(b<<24>>24<<2)>>2]&255;else d=b;return d|0}function OO(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;b=d;while(1){if((b|0)==(e|0))break;d=a[b>>0]|0;if(d<<24>>24>-1){f=TO()|0;g=c[f+(a[b>>0]<<2)>>2]&255}else g=d;a[b>>0]=g;b=b+1|0}return e|0}function PO(a,b){a=a|0;b=b|0;return b|0}function QO(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;b=e;e=c;while(1){if((e|0)==(d|0))break;a[b>>0]=a[e>>0]|0;b=b+1|0;e=e+1|0}return d|0}function RO(a,b,c){a=a|0;b=b|0;c=c|0;return (b<<24>>24>-1?b:c)|0}function SO(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;b=f;f=c;while(1){if((f|0)==(d|0))break;c=a[f>>0]|0;a[b>>0]=c<<24>>24>-1?c:e;b=b+1|0;f=f+1|0}return d|0}function TO(){var a=0,b=0;o=0;a=Y(38)|0;b=o;o=0;if(b&1){b=Qa(0)|0;Id(b)}else return c[a>>2]|0;return 0}function UO(){var a=0,b=0;o=0;a=Y(39)|0;b=o;o=0;if(b&1){b=Qa(0)|0;Id(b)}else return c[a>>2]|0;return 0}function VO(){var a=0,b=0;o=0;a=Y(40)|0;b=o;o=0;if(b&1){b=Qa(0)|0;Id(b)}else return c[a>>2]|0;return 0}function WO(a){a=a|0;c[a>>2]=56988;xR(a+12|0);GI(a);return}function XO(a){a=a|0;WO(a);mR(a);return}function YO(b){b=b|0;return a[b+8>>0]|0}function ZO(b){b=b|0;return a[b+9>>0]|0}function _O(a,b){a=a|0;b=b|0;wR(a,b+12|0);return}function $O(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;d=l;l=l+16|0;e=d;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;f=bI(92076)|0;if(f>>>0>4294967279)vR(b);if(f>>>0<11){a[b+11>>0]=f;g=b}else{h=f+16&-16;i=kR(h)|0;c[b>>2]=i;c[b+8>>2]=h|-2147483648;c[b+4>>2]=f;g=i}LH(g,92076,f)|0;a[e>>0]=0;cI(g+f|0,e);l=d;return}function aP(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;d=l;l=l+16|0;e=d;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;f=bI(92070)|0;if(f>>>0>4294967279)vR(b);if(f>>>0<11){a[b+11>>0]=f;g=b}else{h=f+16&-16;i=kR(h)|0;c[b>>2]=i;c[b+8>>2]=h|-2147483648;c[b+4>>2]=f;g=i}LH(g,92070,f)|0;a[e>>0]=0;cI(g+f|0,e);l=d;return}function bP(a){a=a|0;c[a>>2]=57028;xR(a+16|0);GI(a);return}function cP(a){a=a|0;bP(a);mR(a);return}function dP(a){a=a|0;return c[a+8>>2]|0}function eP(a){a=a|0;return c[a+12>>2]|0}function fP(a,b){a=a|0;b=b|0;wR(a,b+16|0);return}function gP(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;d=l;l=l+16|0;e=d;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;f=KL(57084)|0;if(f>>>0>1073741807)vR(b);do if(f>>>0>=2){g=f+4&-4;if(g>>>0<=1073741823){h=kR(g<<2)|0;c[b>>2]=h;c[b+8>>2]=g|-2147483648;c[b+4>>2]=f;i=h;break}h=Ja(8)|0;o=0;ma(153,h|0,92198);g=o;o=0;if(g&1){g=Pa()|0;Sa(h|0);$a(g|0)}else{c[h>>2]=57580;Xa(h|0,7152,205)}}else{a[b+8+3>>0]=f;i=b}while(0);PH(i,57084,f)|0;c[e>>2]=0;MI(i+(f<<2)|0,e);l=d;return}function hP(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;d=l;l=l+16|0;e=d;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;f=KL(57060)|0;if(f>>>0>1073741807)vR(b);do if(f>>>0>=2){g=f+4&-4;if(g>>>0<=1073741823){h=kR(g<<2)|0;c[b>>2]=h;c[b+8>>2]=g|-2147483648;c[b+4>>2]=f;i=h;break}h=Ja(8)|0;o=0;ma(153,h|0,92198);g=o;o=0;if(g&1){g=Pa()|0;Sa(h|0);$a(g|0)}else{c[h>>2]=57580;Xa(h|0,7152,205)}}else{a[b+8+3>>0]=f;i=b}while(0);PH(i,57060,f)|0;c[e>>2]=0;MI(i+(f<<2)|0,e);l=d;return}function iP(a){a=a|0;GI(a);mR(a);return}function jP(a){a=a|0;GI(a);mR(a);return}function kP(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;if(d>>>0<128)e=(b[(VO()|0)+(d<<1)>>1]&c)<<16>>16!=0;else e=0;return e|0}function lP(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0;a=g;g=d;while(1){if((g|0)==(f|0))break;if((c[g>>2]|0)>>>0<128){d=VO()|0;h=e[d+(c[g>>2]<<1)>>1]|0}else h=0;b[a>>1]=h;a=a+2|0;g=g+4|0}return f|0}function mP(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0;a=e;while(1){if((a|0)==(f|0)){g=f;break}if((c[a>>2]|0)>>>0<128?(e=VO()|0,(b[e+(c[a>>2]<<1)>>1]&d)<<16>>16):0){g=a;break}a=a+4|0}return g|0}function nP(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0;a=e;while(1){if((a|0)==(f|0)){g=f;break}if((c[a>>2]|0)>>>0>=128){g=a;break}e=VO()|0;if(!((b[e+(c[a>>2]<<1)>>1]&d)<<16>>16)){g=a;break}a=a+4|0}return g|0}function oP(a,b){a=a|0;b=b|0;var d=0;if(b>>>0<128)d=c[(UO()|0)+(b<<2)>>2]|0;else d=b;return d|0}function pP(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;a=b;while(1){if((a|0)==(d|0))break;b=c[a>>2]|0;if(b>>>0<128){e=UO()|0;f=c[e+(c[a>>2]<<2)>>2]|0}else f=b;c[a>>2]=f;a=a+4|0}return d|0}function qP(a,b){a=a|0;b=b|0;var d=0;if(b>>>0<128)d=c[(TO()|0)+(b<<2)>>2]|0;else d=b;return d|0}function rP(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;a=b;while(1){if((a|0)==(d|0))break;b=c[a>>2]|0;if(b>>>0<128){e=TO()|0;f=c[e+(c[a>>2]<<2)>>2]|0}else f=b;c[a>>2]=f;a=a+4|0}return d|0}function sP(a,b){a=a|0;b=b|0;return b<<24>>24|0}function tP(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=f;f=d;while(1){if((f|0)==(e|0))break;c[b>>2]=a[f>>0];b=b+4|0;f=f+1|0}return e|0}function uP(a,b,c){a=a|0;b=b|0;c=c|0;return (b>>>0<128?b&255:c)|0}function vP(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;b=(e-d|0)>>>2;h=g;g=d;while(1){if((g|0)==(e|0))break;i=c[g>>2]|0;a[h>>0]=i>>>0<128?i&255:f;h=h+1|0;g=g+4|0}return d+(b<<2)|0}function wP(a){a=a|0;GI(a);mR(a);return}function xP(a){a=a|0;GI(a);mR(a);return}function yP(a){a=a|0;GI(a);mR(a);return}function zP(a){a=a|0;c[a>>2]=57344;return}function AP(a){a=a|0;c[a>>2]=57380;return}function BP(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;c[b+4>>2]=f+-1;c[b>>2]=56936;f=b+8|0;c[f>>2]=d;a[b+12>>0]=e&1;if(!d)c[f>>2]=VO()|0;return}function CP(a){a=a|0;var b=0;a=Ja(8)|0;o=0;ma(153,a|0,92123);b=o;o=0;if(b&1){b=Pa()|0;Sa(a|0);$a(b|0)}else{c[a>>2]=57580;Xa(a|0,7152,205)}}function DP(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0;e=l;l=l+16|0;f=e;c[b+4>>2]=d+-1;c[b>>2]=56916;d=b+8|0;o=0;ma(192,d|0,28);g=o;o=0;if(g&1){g=Pa()|0;h=z;i=g}else{g=b+144|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;j=bI(89978)|0;do if(j>>>0>4294967279){o=0;la(276,g|0);o=0;k=66}else{if(j>>>0<11){a[g+11>>0]=j;m=g}else{n=j+16&-16;o=0;p=Z(209,n|0)|0;q=o;o=0;if(q&1){k=66;break}c[g>>2]=p;c[b+152>>2]=n|-2147483648;c[b+148>>2]=j;m=p}LH(m,89978,j)|0;a[f>>0]=0;cI(m+j|0,f);p=c[d>>2]|0;n=b+12|0;q=c[n>>2]|0;while(1){if((q|0)==(p|0))break;r=q+-4|0;c[n>>2]=r;q=r}o=0;ka(11);q=o;o=0;do if(((((((((((((!(q&1)?(o=0,ma(193,b|0,93568),n=o,o=0,!(n&1)):0)?(o=0,ka(12),n=o,o=0,!(n&1)):0)?(o=0,ma(194,b|0,93576),n=o,o=0,!(n&1)):0)?(JP(),o=0,ma(195,b|0,93584),n=o,o=0,!(n&1)):0)?(o=0,ka(13),n=o,o=0,!(n&1)):0)?(o=0,ma(196,b|0,93600),n=o,o=0,!(n&1)):0)?(o=0,ka(14),n=o,o=0,!(n&1)):0)?(o=0,ma(197,b|0,93608),n=o,o=0,!(n&1)):0)?(o=0,ka(15),n=o,o=0,!(n&1)):0)?(o=0,ma(198,b|0,93616),n=o,o=0,!(n&1)):0)?(o=0,ka(16),n=o,o=0,!(n&1)):0)?(o=0,ma(199,b|0,93632),n=o,o=0,!(n&1)):0)?(o=0,ka(17),n=o,o=0,!(n&1)):0){o=0;ma(200,b|0,93640);n=o;o=0;if(n&1)break;VP();o=0;ma(201,b|0,93648);n=o;o=0;if(n&1)break;XP();o=0;ma(202,b|0,93672);n=o;o=0;if(n&1)break;o=0;ka(18);n=o;o=0;if(n&1)break;o=0;ma(203,b|0,93704);n=o;o=0;if(n&1)break;o=0;ka(19);n=o;o=0;if(n&1)break;o=0;ma(204,b|0,93712);n=o;o=0;if(n&1)break;o=0;ka(20);n=o;o=0;if(n&1)break;o=0;ma(205,b|0,93720);n=o;o=0;if(n&1)break;o=0;ka(21);n=o;o=0;if(n&1)break;o=0;ma(206,b|0,93728);n=o;o=0;if(n&1)break;o=0;ka(22);n=o;o=0;if(n&1)break;o=0;ma(207,b|0,93736);n=o;o=0;if(n&1)break;o=0;ka(23);n=o;o=0;if(n&1)break;o=0;ma(208,b|0,93744);n=o;o=0;if(n&1)break;o=0;ka(24);n=o;o=0;if(n&1)break;o=0;ma(209,b|0,93752);n=o;o=0;if(n&1)break;o=0;ka(25);n=o;o=0;if(n&1)break;o=0;ma(210,b|0,93760);n=o;o=0;if(n&1)break;o=0;ka(26);n=o;o=0;if(n&1)break;o=0;ma(211,b|0,93768);n=o;o=0;if(n&1)break;o=0;ka(27);n=o;o=0;if(n&1)break;o=0;ma(212,b|0,93776);n=o;o=0;if(n&1)break;o=0;ka(28);n=o;o=0;if(n&1)break;o=0;ma(213,b|0,93784);n=o;o=0;if(n&1)break;o=0;ka(29);n=o;o=0;if(n&1)break;o=0;ma(214,b|0,93792);n=o;o=0;if(n&1)break;o=0;ka(30);n=o;o=0;if(n&1)break;o=0;ma(215,b|0,93800);n=o;o=0;if(n&1)break;o=0;ka(31);n=o;o=0;if(n&1)break;o=0;ma(216,b|0,93816);n=o;o=0;if(n&1)break;o=0;ka(32);n=o;o=0;if(n&1)break;o=0;ma(217,b|0,93832);n=o;o=0;if(n&1)break;o=0;ka(33);n=o;o=0;if(n&1)break;o=0;ma(218,b|0,93848);n=o;o=0;if(n&1)break;o=0;ka(34);n=o;o=0;if(n&1)break;o=0;ma(219,b|0,93864);n=o;o=0;if(n&1)break;o=0;ka(35);n=o;o=0;if(n&1)break;o=0;ma(220,b|0,93872);n=o;o=0;if(n&1)break;l=e;return}while(0);q=Pa()|0;n=z;xR(g);s=n;t=q}while(0);if((k|0)==66){k=Pa()|0;s=z;t=k}IO(d);h=s;i=t}GI(b);$a(i|0)}function EP(b,d){b=b|0;d=d|0;var e=0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;a[b+128>>0]=0;do if(d|0){o=0;ma(221,b|0,d|0);e=o;o=0;if(!(e&1)?(o=0,ma(222,b|0,d|0),e=o,o=0,!(e&1)):0)break;e=Pa()|0;IO(b);$a(e|0)}while(0);return}function FP(){c[23393]=0;c[23392]=54580;return}function GP(a,b){a=a|0;b=b|0;HQ(a,b,dJ(102952)|0);return}function HP(){c[23395]=0;c[23394]=54612;return}function IP(a,b){a=a|0;b=b|0;HQ(a,b,dJ(102960)|0);return}function JP(){BP(93584,0,0,1);return}function KP(a,b){a=a|0;b=b|0;HQ(a,b,dJ(102968)|0);return}function LP(){c[23401]=0;c[23400]=57132;return}function MP(a,b){a=a|0;b=b|0;HQ(a,b,dJ(103e3)|0);return}function NP(){c[23403]=0;c[23402]=57200;return}function OP(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104760)|0);return}function PP(){TQ(93616,1);return}function QP(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104768)|0);return}function RP(){c[23409]=0;c[23408]=57248;return}function SP(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104776)|0);return}function TP(){c[23411]=0;c[23410]=57296;return}function UP(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104784)|0);return}function VP(){SQ(93648,1);return}function WP(a,b){a=a|0;b=b|0;HQ(a,b,dJ(102984)|0);return}function XP(){RQ(93672,1);return}function YP(a,b){a=a|0;b=b|0;HQ(a,b,dJ(103008)|0);return}function ZP(){c[23427]=0;c[23426]=54644;return}function _P(a,b){a=a|0;b=b|0;HQ(a,b,dJ(102992)|0);return}function $P(){c[23429]=0;c[23428]=54708;return}function aQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(103016)|0);return}function bQ(){c[23431]=0;c[23430]=54772;return}function cQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(103024)|0);return}function dQ(){c[23433]=0;c[23432]=54824;return}function eQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(103032)|0);return}function fQ(){c[23435]=0;c[23434]=56372;return}function gQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104680)|0);return}function hQ(){c[23437]=0;c[23436]=56428;return}function iQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104688)|0);return}function jQ(){c[23439]=0;c[23438]=56484;return}function kQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104696)|0);return}function lQ(){c[23441]=0;c[23440]=56540;return}function mQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104704)|0);return}function nQ(){c[23443]=0;c[23442]=56596;return}function oQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104712)|0);return}function pQ(){c[23445]=0;c[23444]=56624;return}function qQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104720)|0);return}function rQ(){c[23447]=0;c[23446]=56652;return}function sQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104728)|0);return}function tQ(){c[23449]=0;c[23448]=56680;return}function uQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104736)|0);return}function vQ(){c[23451]=0;c[23450]=57112;zP(93808);c[23450]=54876;c[23452]=54924;return}function wQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(103844)|0);return}function xQ(){c[23455]=0;c[23454]=57112;AP(93824);c[23454]=54960;c[23456]=55008;return}function yQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104656)|0);return}function zQ(){var a=0,b=0;c[23459]=0;c[23458]=57112;o=0;a=Y(36)|0;b=o;o=0;if(b&1){b=Pa()|0;GI(93832);$a(b|0)}else{c[23460]=a;c[23458]=56324;return}}function AQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104664)|0);return}function BQ(){var a=0,b=0;c[23463]=0;c[23462]=57112;o=0;a=Y(36)|0;b=o;o=0;if(b&1){b=Pa()|0;GI(93848);$a(b|0)}else{c[23464]=a;c[23462]=56348;return}}function CQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104672)|0);return}function DQ(){c[23467]=0;c[23466]=56708;return}function EQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104744)|0);return}function FQ(){c[23469]=0;c[23468]=56740;return}function GQ(a,b){a=a|0;b=b|0;HQ(a,b,dJ(104752)|0);return}function HQ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;dR(b);e=a+8|0;f=c[e>>2]|0;do if((c[a+12>>2]|0)-f>>2>>>0>d>>>0){g=e;h=f}else{o=0;ma(223,e|0,d+1|0);i=o;o=0;if(!(i&1)){g=e;h=c[e>>2]|0;break}i=Pa()|0;if(b|0)JQ(b);$a(i|0)}while(0);e=c[h+(d<<2)>>2]|0;if(!e)j=h;else{fR(e)|0;j=c[g>>2]|0}c[j+(d<<2)>>2]=b;return}function IQ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=a+4|0;e=c[d>>2]|0;f=c[a>>2]|0;g=e-f>>2;h=f;f=e;a:do if(g>>>0>=b>>>0){if(g>>>0>b>>>0){e=h+(b<<2)|0;i=f;while(1){if((i|0)==(e|0))break a;j=i+-4|0;c[d>>2]=j;i=j}}}else KQ(a,b-g|0);while(0);return}function JQ(a){a=a|0;fR(a)|0;return}function KQ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;d=l;l=l+32|0;e=d;f=a+8|0;g=a+4|0;h=c[g>>2]|0;do if((c[f>>2]|0)-h>>2>>>0<b>>>0){i=(h-(c[a>>2]|0)>>2)+b|0;j=MQ(a)|0;if(j>>>0<i>>>0)CP(a);k=c[a>>2]|0;m=(c[f>>2]|0)-k|0;n=m>>1;NQ(e,m>>2>>>0<j>>>1>>>0?(n>>>0<i>>>0?i:n):j,(c[g>>2]|0)-k>>2,a+16|0);o=0;ma(224,e|0,b|0);k=o;o=0;if(!(k&1)?(o=0,ma(225,a|0,e|0),k=o,o=0,!(k&1)):0){QQ(e);break}k=Pa()|0;QQ(e);$a(k|0)}else LQ(a,b);while(0);l=d;return}function LQ(a,b){a=a|0;b=b|0;var d=0;d=a+4|0;a=b;b=c[d>>2]|0;do{c[b>>2]=0;b=(c[d>>2]|0)+4|0;c[d>>2]=b;a=a+-1|0}while((a|0)!=0);return}function MQ(a){a=a|0;return 1073741823}function NQ(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;c[b+12>>2]=0;c[b+16>>2]=f;do if(d){g=f+112|0;if(d>>>0<29&(a[g>>0]|0)==0){a[g>>0]=1;h=f;break}else{h=kR(d<<2)|0;break}}else h=0;while(0);c[b>>2]=h;f=h+(e<<2)|0;c[b+8>>2]=f;c[b+4>>2]=f;c[b+12>>2]=h+(d<<2);return}function OQ(a,b){a=a|0;b=b|0;var d=0;d=a+8|0;a=b;b=c[d>>2]|0;do{c[b>>2]=0;b=(c[d>>2]|0)+4|0;c[d>>2]=b;a=a+-1|0}while((a|0)!=0);return}function PQ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=c[a>>2]|0;e=a+4|0;f=b+4|0;g=(c[e>>2]|0)-d|0;h=(c[f>>2]|0)+(0-(g>>2)<<2)|0;c[f>>2]=h;if((g|0)>0){CT(h|0,d|0,g|0)|0;i=f;j=c[f>>2]|0}else{i=f;j=h}h=c[a>>2]|0;c[a>>2]=j;c[i>>2]=h;h=b+8|0;j=c[e>>2]|0;c[e>>2]=c[h>>2];c[h>>2]=j;j=a+8|0;a=b+12|0;h=c[j>>2]|0;c[j>>2]=c[a>>2];c[a>>2]=h;c[b>>2]=c[i>>2];return}function QQ(b){b=b|0;var d=0,e=0,f=0,g=0;d=c[b+4>>2]|0;e=b+8|0;f=c[e>>2]|0;while(1){if((f|0)==(d|0))break;g=f+-4|0;c[e>>2]=g;f=g}f=c[b>>2]|0;do if(f|0){e=c[b+16>>2]|0;if((f|0)==(e|0)){a[e+112>>0]=0;break}else{mR(f);break}}while(0);return}function RQ(a,b){a=a|0;b=b|0;c[a+4>>2]=b+-1;c[a>>2]=57028;c[a+8>>2]=46;c[a+12>>2]=44;b=a+16|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;a=0;while(1){if((a|0)==3)break;c[b+(a<<2)>>2]=0;a=a+1|0}return}function SQ(b,d){b=b|0;d=d|0;c[b+4>>2]=d+-1;c[b>>2]=56988;a[b+8>>0]=46;a[b+9>>0]=44;d=b+12|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[d+(b<<2)>>2]=0;b=b+1|0}return}function TQ(a,b){a=a|0;b=b|0;var d=0;c[a+4>>2]=b+-1;c[a>>2]=56868;o=0;b=Y(36)|0;d=o;o=0;if(d&1){d=Pa()|0;GI(a);$a(d|0)}else{c[a+8>>2]=b;return}}function UQ(b,d){b=b|0;d=d|0;var e=0,f=0;if((MQ(b)|0)>>>0<d>>>0)CP(b);e=b+128|0;if(d>>>0<29&(a[e>>0]|0)==0){a[e>>0]=1;f=b+16|0}else f=kR(d<<2)|0;c[b+4>>2]=f;c[b>>2]=f;c[b+8>>2]=f+(d<<2);return}function VQ(){var b=0;do if((a[93880]|0)==0?iT(93880)|0:0){o=0;Y(41)|0;b=o;o=0;if(b&1){b=Pa()|0;$a(b|0)}else{c[26199]=104792;break}}while(0);return c[26199]|0}function WQ(){XQ();c[26198]=93888;return 104792}function XQ(){DP(93888,1);return}function YQ(){ZQ(104800,VQ()|0);return 104800}function ZQ(a,b){a=a|0;b=b|0;var d=0;d=c[b>>2]|0;c[a>>2]=d;dR(d);return}function _Q(){var b=0;do if((a[94048]|0)==0?iT(94048)|0:0){o=0;Y(42)|0;b=o;o=0;if(b&1){b=Pa()|0;$a(b|0)}else{c[26201]=104800;break}}while(0);return c[26201]|0}function $Q(a){a=a|0;var b=0,d=0;o=0;b=Y(43)|0;d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}else{d=c[b>>2]|0;c[a>>2]=d;dR(d);return}}function aR(a,b){a=a|0;b=b|0;dR(c[b>>2]|0);fR(c[a>>2]|0)|0;c[a>>2]=c[b>>2];return a|0}function bR(a){a=a|0;return}function cR(a,b){a=a|0;b=b|0;return 0}function dR(a){a=a|0;eR(a+4|0);return}function eR(a){a=a|0;c[a>>2]=(c[a>>2]|0)+1;return}function fR(a){a=a|0;var b=0;if((gR(a+4|0)|0)==-1){rd[c[(c[a>>2]|0)+8>>2]&511](a);b=1}else b=0;return b|0}function gR(a){a=a|0;var b=0;b=c[a>>2]|0;c[a>>2]=b+-1;return b+-1|0}function hR(a){a=a|0;if(fR(a)|0)iR(a);return}function iR(a){a=a|0;var b=0;b=a+8|0;if(!((c[b>>2]|0)!=0?(gR(b)|0)!=-1:0))rd[c[(c[a>>2]|0)+16>>2]&511](a);return}function jR(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;GT(104808)|0;while(1){if((c[a>>2]|0)!=1)break;Zb(104836,104808)|0}do if(!(c[a>>2]|0)){c[a>>2]=1;o=0;Z(241,104808)|0;e=o;o=0;if((((!(e&1)?(o=0,la(d|0,b|0),e=o,o=0,!(e&1)):0)?(o=0,Z(242,104808)|0,e=o,o=0,!(e&1)):0)?(c[a>>2]=-1,o=0,Z(241,104808)|0,e=o,o=0,!(e&1)):0)?(o=0,Z(243,104836)|0,e=o,o=0,!(e&1)):0)break;e=Qa(0)|0;Ka(e|0)|0;o=0;Z(242,104808)|0;e=o;o=0;if((!(e&1)?(c[a>>2]=0,o=0,Z(241,104808)|0,e=o,o=0,!(e&1)):0)?(o=0,Z(243,104836)|0,e=o,o=0,!(e&1)):0){o=0;ka(36);o=0}e=Pa()|0;o=0;ka(3);f=o;o=0;if(f&1){f=Qa(0)|0;Id(f)}else $a(e|0)}else HT(104808)|0;while(0);return}function kR(a){a=a|0;var b=0,c=0,d=0;b=(a|0)==0?1:a;while(1){c=BE(b)|0;if(c|0){d=6;break}a=mT()|0;if(!a){d=5;break}qd[a&63]()}if((d|0)==5){b=Ja(4)|0;lT(b);Xa(b|0,7104,203)}else if((d|0)==6)return c|0;return 0}function lR(a){a=a|0;return kR(a)|0}function mR(a){a=a|0;CE(a);return}function nR(a){a=a|0;mR(a);return}function oR(){var a=0;a=Ja(4)|0;lT(a);Xa(a|0,7104,203)}function pR(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=$F(b)|0;e=kR(d+13|0)|0;c[e>>2]=d;c[e+4>>2]=d;c[e+8>>2]=0;f=qR(e)|0;CT(f|0,b|0,d+1|0)|0;c[a>>2]=f;return}function qR(a){a=a|0;return a+12|0}function rR(a,b){a=a|0;b=b|0;c[a>>2]=57540;o=0;ma(226,a+4|0,b|0);b=o;o=0;if(b&1){b=Pa()|0;$a(b|0)}else return}function sR(a){a=a|0;return 1}function tR(b,d){b=b|0;d=d|0;c[b>>2]=57560;o=0;ma(226,b+4|0,((a[d+11>>0]|0)<0?c[d>>2]|0:d)|0);d=o;o=0;if(d&1){d=Pa()|0;$a(d|0)}else return}function uR(a,b){a=a|0;b=b|0;c[a>>2]=57560;o=0;ma(226,a+4|0,b|0);b=o;o=0;if(b&1){b=Pa()|0;$a(b|0)}else return}function vR(a){a=a|0;var b=0;a=Ja(8)|0;o=0;ma(153,a|0,92185);b=o;o=0;if(b&1){b=Pa()|0;Sa(a|0);$a(b|0)}else{c[a>>2]=57580;Xa(a|0,7152,205)}}function wR(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=l;l=l+16|0;f=e;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;if((a[d+11>>0]|0)<0){g=c[d>>2]|0;h=c[d+4>>2]|0;if(h>>>0>4294967279)vR(b);if(h>>>0<11){a[b+11>>0]=h;i=b}else{j=h+16&-16;k=kR(j)|0;c[b>>2]=k;c[b+8>>2]=j|-2147483648;c[b+4>>2]=h;i=k}LH(i,g,h)|0;a[f>>0]=0;cI(i+h|0,f)}else{c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2]}l=e;return}function xR(b){b=b|0;if((a[b+11>>0]|0)<0)mR(c[b>>2]|0);return}function yR(b,d){b=b|0;d=d|0;var e=0,f=0;if((b|0)!=(d|0)){e=a[d+11>>0]|0;f=e<<24>>24<0;zR(b,f?c[d>>2]|0:d,f?c[d+4>>2]|0:e&255)|0}return b|0}function zR(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;f=l;l=l+16|0;g=f;h=b+11|0;i=a[h>>0]|0;j=i<<24>>24<0;if(j)k=(c[b+8>>2]&2147483647)+-1|0;else k=10;do if(k>>>0>=e>>>0){if(j)m=c[b>>2]|0;else m=b;AR(m,d,e)|0;a[g>>0]=0;cI(m+e|0,g);if((a[h>>0]|0)<0){c[b+4>>2]=e;break}else{a[h>>0]=e;break}}else{if(j)n=c[b+4>>2]|0;else n=i&255;BR(b,k,e-k|0,n,0,n,e,d)}while(0);l=f;return b|0}function AR(a,b,c){a=a|0;b=b|0;c=c|0;if(c|0)DT(a|0,b|0,c|0)|0;return a|0}function BR(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,m=0,n=0,o=0,p=0,q=0;k=l;l=l+16|0;m=k;if((-18-d|0)>>>0<e>>>0)vR(b);if((a[b+11>>0]|0)<0)n=c[b>>2]|0;else n=b;if(d>>>0<2147483623){o=e+d|0;e=d<<1;p=o>>>0<e>>>0?e:o;q=p>>>0<11?11:p+16&-16}else q=-17;p=kR(q)|0;if(g|0)LH(p,n,g)|0;if(i|0)LH(p+g|0,j,i)|0;j=f-h|0;f=j-g|0;if(f|0)LH(p+g+i|0,n+g+h|0,f)|0;if((d|0)!=10)mR(n);c[b>>2]=p;c[b+8>>2]=q|-2147483648;q=j+i|0;c[b+4>>2]=q;a[m>>0]=0;cI(p+q|0,m);l=k;return}function CR(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;if(d>>>0>4294967279)vR(b);e=b+11|0;f=a[e>>0]|0;g=f<<24>>24<0;if(g){h=c[b+4>>2]|0;i=(c[b+8>>2]&2147483647)+-1|0}else{h=f&255;i=10}j=h>>>0>d>>>0?h:d;d=j>>>0<11;k=d?10:(j+16&-16)+-1|0;a:do if((k|0)!=(i|0)){do if(d){j=c[b>>2]|0;if(g){l=j;m=0;n=b;p=17}else{LH(b,j,(f&255)+1|0)|0;mR(j);p=20}}else{j=k+1|0;if(k>>>0<=i>>>0){o=0;q=Z(209,j|0)|0;r=o;o=0;if(r&1){r=Qa(0)|0;Ka(r|0)|0;Na();break a}else s=q}else s=kR(j)|0;if(g){l=c[b>>2]|0;m=1;n=s;p=17;break}else{LH(s,b,(f&255)+1|0)|0;t=s;u=j;v=b+4|0;p=19;break}}while(0);if((p|0)==17){j=b+4|0;LH(n,l,(c[j>>2]|0)+1|0)|0;mR(l);if(m){t=n;u=k+1|0;v=j;p=19}else p=20}if((p|0)==19){c[b+8>>2]=u|-2147483648;c[v>>2]=h;c[b>>2]=t;break}else if((p|0)==20){a[e>>0]=h;break}}while(0);return}function DR(a,b){a=a|0;b=b|0;return zR(a,b,bI(b)|0)|0}function ER(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=l;l=l+16|0;g=f;h=b+11|0;i=a[h>>0]|0;j=i<<24>>24<0;if(j)k=c[b+4>>2]|0;else k=i&255;do if(k>>>0>=d>>>0)if(j){i=(c[b>>2]|0)+d|0;a[g>>0]=0;cI(i,g);c[b+4>>2]=d;break}else{a[g>>0]=0;cI(b+d|0,g);a[h>>0]=d;break}else FR(b,d-k|0,e)|0;while(0);l=f;return}function FR(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;f=l;l=l+16|0;g=f;if(d|0){h=b+11|0;i=a[h>>0]|0;if(i<<24>>24<0){j=(c[b+8>>2]&2147483647)+-1|0;k=c[b+4>>2]|0}else{j=10;k=i&255}if((j-k|0)>>>0<d>>>0){GR(b,j,d-j+k|0,k,k,0,0);m=a[h>>0]|0}else m=i;if(m<<24>>24<0)n=c[b>>2]|0;else n=b;AM(n+k|0,d,e)|0;e=k+d|0;if((a[h>>0]|0)<0)c[b+4>>2]=e;else a[h>>0]=e;a[g>>0]=0;cI(n+e|0,g)}l=f;return b|0}function GR(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0;if((-17-d|0)>>>0<e>>>0)vR(b);if((a[b+11>>0]|0)<0)j=c[b>>2]|0;else j=b;if(d>>>0<2147483623){k=e+d|0;e=d<<1;l=k>>>0<e>>>0?e:k;m=l>>>0<11?11:l+16&-16}else m=-17;l=kR(m)|0;if(g|0)LH(l,j,g)|0;k=f-h-g|0;if(k|0)LH(l+g+i|0,j+g+h|0,k)|0;if((d|0)!=10)mR(j);c[b>>2]=l;c[b+8>>2]=m|-2147483648;return}function HR(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;f=l;l=l+16|0;g=f;h=b+11|0;i=a[h>>0]|0;j=i<<24>>24<0;if(j){k=(c[b+8>>2]&2147483647)+-1|0;m=c[b+4>>2]|0}else{k=10;m=i&255}if((k-m|0)>>>0>=e>>>0){if(e|0){if(j)n=c[b>>2]|0;else n=b;LH(n+m|0,d,e)|0;j=m+e|0;if((a[h>>0]|0)<0)c[b+4>>2]=j;else a[h>>0]=j;a[g>>0]=0;cI(n+j|0,g)}}else BR(b,k,e-k+m|0,m,m,0,e,d);l=f;return b|0}function IR(a,b){a=a|0;b=b|0;return HR(a,b,bI(b)|0)|0}function JR(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+16|0;f=e;g=e+1|0;a[f>>0]=d;d=b+11|0;h=a[d>>0]|0;i=h<<24>>24<0;if(i){j=c[b+4>>2]|0;k=(c[b+8>>2]&2147483647)+-1|0}else{j=h&255;k=10}if((j|0)==(k|0)){GR(b,k,1,k,k,0,0);if((a[d>>0]|0)<0)m=8;else m=7}else if(i)m=8;else m=7;if((m|0)==7){a[d>>0]=j+1;n=b}else if((m|0)==8){m=c[b>>2]|0;c[b+4>>2]=j+1;n=m}m=n+j|0;cI(m,f);a[g>>0]=0;cI(m+1|0,g);l=e;return}function KR(b){b=b|0;if((a[b+8+3>>0]|0)<0)mR(c[b>>2]|0);return}function LR(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0;f=l;l=l+16|0;g=f;h=b+8|0;i=h+3|0;j=a[i>>0]|0;k=j<<24>>24<0;if(k)m=(c[h>>2]&2147483647)+-1|0;else m=1;do if(m>>>0>=e>>>0){if(k)n=c[b>>2]|0;else n=b;MR(n,d,e)|0;c[g>>2]=0;MI(n+(e<<2)|0,g);if((a[i>>0]|0)<0){c[b+4>>2]=e;break}else{a[i>>0]=e;break}}else{if(k)o=c[b+4>>2]|0;else o=j&255;NR(b,m,e-m|0,o,0,o,e,d)}while(0);l=f;return b|0}function MR(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if((c|0)!=0?(o=0,$(125,a|0,b|0,c|0)|0,c=o,o=0,c&1):0){c=Qa(0)|0;Id(c)}else d=a;return d|0}function NR(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,m=0,n=0,p=0,q=0,r=0,s=0;k=l;l=l+16|0;m=k;if((1073741806-d|0)>>>0<e>>>0)vR(b);n=b+8|0;if((a[n+3>>0]|0)<0)p=c[b>>2]|0;else p=b;if(d>>>0<536870887){q=e+d|0;e=d<<1;r=q>>>0<e>>>0?e:q;q=r>>>0<2?2:r+4&-4;if(q>>>0>1073741823){r=Ja(8)|0;o=0;ma(153,r|0,92198);e=o;o=0;if(e&1){e=Pa()|0;Sa(r|0);$a(e|0)}else{c[r>>2]=57580;Xa(r|0,7152,205)}}else s=q}else s=1073741807;q=kR(s<<2)|0;if(g|0)PH(q,p,g)|0;if(i|0)PH(q+(g<<2)|0,j,i)|0;j=f-h|0;f=j-g|0;if(f|0)PH(q+(g<<2)+(i<<2)|0,p+(g<<2)+(h<<2)|0,f)|0;if((d|0)!=1)mR(p);c[b>>2]=q;c[n>>2]=s|-2147483648;s=j+i|0;c[b+4>>2]=s;c[m>>2]=0;MI(q+(s<<2)|0,m);l=k;return}function OR(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;if(d>>>0>1073741807)vR(b);e=b+8|0;f=e+3|0;g=a[f>>0]|0;h=g<<24>>24<0;if(h){i=c[b+4>>2]|0;j=(c[e>>2]&2147483647)+-1|0}else{i=g&255;j=1}k=i>>>0>d>>>0?i:d;d=k>>>0<2;l=d?1:(k+4&-4)+-1|0;a:do if((l|0)!=(j|0)){do if(d){k=c[b>>2]|0;if(h){m=k;n=0;p=b;q=26}else{PH(b,k,(g&255)+1|0)|0;mR(k);q=29}}else{k=l+1|0;r=k>>>0>1073741823;b:do if(l>>>0>j>>>0){if(!r){s=kR(k<<2)|0;break}t=Ja(8)|0;o=0;ma(153,t|0,92198);u=o;o=0;if(u&1){u=Pa()|0;Sa(t|0);$a(u|0)}else{c[t>>2]=57580;Xa(t|0,7152,205)}}else{do if(r){t=Ja(8)|0;o=0;ma(153,t|0,92198);u=o;o=0;if(u&1){u=Qa(0)|0;Sa(t|0);v=u;break}else{c[t>>2]=57580;o=0;na(72,t|0,7152,205);o=0;q=19;break}}else{o=0;t=Z(209,k<<2|0)|0;u=o;o=0;if(u&1)q=19;else{s=t;break b}}while(0);if((q|0)==19){t=Qa(0)|0;v=t}Ka(v|0)|0;Na();break a}while(0);if(h){m=c[b>>2]|0;n=1;p=s;q=26;break}else{PH(s,b,(g&255)+1|0)|0;w=s;x=k;y=b+4|0;q=28;break}}while(0);if((q|0)==26){r=b+4|0;PH(p,m,(c[r>>2]|0)+1|0)|0;mR(m);if(n){w=p;x=l+1|0;y=r;q=28}else q=29}if((q|0)==28){c[e>>2]=x|-2147483648;c[y>>2]=i;c[b>>2]=w;break}else if((q|0)==29){a[f>>0]=i;break}}while(0);return}function PR(a,b){a=a|0;b=b|0;return LR(a,b,KL(b)|0)|0}function QR(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0;if((1073741807-d|0)>>>0<e>>>0)vR(b);j=b+8|0;if((a[j+3>>0]|0)<0)k=c[b>>2]|0;else k=b;if(d>>>0<536870887){l=e+d|0;e=d<<1;m=l>>>0<e>>>0?e:l;l=m>>>0<2?2:m+4&-4;if(l>>>0>1073741823){m=Ja(8)|0;o=0;ma(153,m|0,92198);e=o;o=0;if(e&1){e=Pa()|0;Sa(m|0);$a(e|0)}else{c[m>>2]=57580;Xa(m|0,7152,205)}}else n=l}else n=1073741807;l=kR(n<<2)|0;if(g|0)PH(l,k,g)|0;m=f-h-g|0;if(m|0)PH(l+(g<<2)+(i<<2)|0,k+(g<<2)+(h<<2)|0,m)|0;if((d|0)!=1)mR(k);c[b>>2]=l;c[j>>2]=n|-2147483648;return}function RR(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0;f=l;l=l+16|0;g=f;h=b+8|0;i=h+3|0;j=a[i>>0]|0;k=j<<24>>24<0;if(k){m=(c[h>>2]&2147483647)+-1|0;n=c[b+4>>2]|0}else{m=1;n=j&255}if((m-n|0)>>>0>=e>>>0){if(e|0){if(k)o=c[b>>2]|0;else o=b;PH(o+(n<<2)|0,d,e)|0;k=n+e|0;if((a[i>>0]|0)<0)c[b+4>>2]=k;else a[i>>0]=k;c[g>>2]=0;MI(o+(k<<2)|0,g)}}else NR(b,m,e-m+n|0,n,n,0,e,d);l=f;return b|0}function SR(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0;e=l;l=l+16|0;f=e;g=e+4|0;c[f>>2]=d;d=b+8|0;h=d+3|0;i=a[h>>0]|0;j=i<<24>>24<0;if(j){k=c[b+4>>2]|0;m=(c[d>>2]&2147483647)+-1|0}else{k=i&255;m=1}if((k|0)==(m|0)){QR(b,m,1,m,m,0,0);if((a[h>>0]|0)<0)n=8;else n=7}else if(j)n=8;else n=7;if((n|0)==7){a[h>>0]=k+1;o=b}else if((n|0)==8){n=c[b>>2]|0;c[b+4>>2]=k+1;o=n}n=o+(k<<2)|0;MI(n,f);c[g>>2]=0;MI(n+4|0,g);l=e;return}function TR(a){a=a|0;return}function UR(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=d;c[a+4>>2]=b;return}function VR(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=l;l=l+16|0;f=e;td[c[(c[a>>2]|0)+12>>2]&127](f,a,b);if((c[f+4>>2]|0)==(c[d+4>>2]|0))g=(c[f>>2]|0)==(c[d>>2]|0);else g=0;l=e;return g|0}function WR(a,b,d){a=a|0;b=b|0;d=d|0;return ((c[b>>2]|0)==(d|0)?(c[b+4>>2]|0)==(a|0):0)|0}function XR(a,b,c){a=a|0;b=b|0;c=c|0;YR(a,c);return}function YR(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0;e=l;l=l+1040|0;f=e;g=e+1032|0;h=e+8|0;i=c[(LE()|0)>>2]|0;j=gH(d,h,1024)|0;switch(j|0){case 0:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;k=bI(h)|0;if(k>>>0>4294967279)vR(b);if(k>>>0<11){a[b+11>>0]=k;m=b}else{n=k+16&-16;o=kR(n)|0;c[b>>2]=o;c[b+8>>2]=n|-2147483648;c[b+4>>2]=k;m=o}LH(m,h,k)|0;a[g>>0]=0;cI(m+k|0,g);break}case -1:{p=c[(LE()|0)>>2]|0;q=3;break}default:{p=j;q=3}}a:do if((q|0)==3){c[(LE()|0)>>2]=i;switch(p|0){case 22:{c[f>>2]=d;mG(h,1024,92266,f)|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;j=bI(h)|0;if(j>>>0>4294967279)vR(b);if(j>>>0<11){a[b+11>>0]=j;r=b}else{g=j+16&-16;k=kR(g)|0;c[b>>2]=k;c[b+8>>2]=g|-2147483648;c[b+4>>2]=j;r=k}LH(r,h,j)|0;a[f>>0]=0;cI(r+j|0,f);break a;break}case 34:{Rb();break}default:Ha(92283,92303,99,92411)}}while(0);l=e;return}function ZR(a){a=a|0;OS(a);return}function _R(a){a=a|0;ZR(a);mR(a);return}function $R(a,b){a=a|0;b=b|0;var d=0;d=c[b+4>>2]|0;td[c[(c[d>>2]|0)+24>>2]&127](a,d,c[b>>2]|0);return}function aS(a,b){a=a|0;b=b|0;var d=0;d=c[b+4>>2]|0;td[c[(c[d>>2]|0)+24>>2]&127](a,d,c[b>>2]|0);return}function bS(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=l;l=l+16|0;g=f;do if(c[d>>2]|0){h=a[e+11>>0]|0;if(h<<24>>24<0)i=c[e+4>>2]|0;else i=h&255;if(i|0)IR(e,92496)|0;aS(g,d);h=a[g+11>>0]|0;j=h<<24>>24<0;o=0;$(119,e|0,(j?c[g>>2]|0:g)|0,(j?c[g+4>>2]|0:h&255)|0)|0;h=o;o=0;if(h&1){h=Pa()|0;xR(g);$a(h|0)}else{xR(g);break}}while(0);c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];c[b+8>>2]=c[e+8>>2];b=0;while(1){if((b|0)==3)break;c[e+(b<<2)>>2]=0;b=b+1|0}l=f;return}function cS(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;f=l;l=l+32|0;g=f+24|0;h=f+12|0;i=f;c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;j=bI(e)|0;if(j>>>0>4294967279)vR(i);if(j>>>0<11){a[i+11>>0]=j;k=i}else{m=j+16&-16;n=kR(m)|0;c[i>>2]=n;c[i+8>>2]=m|-2147483648;c[i+4>>2]=j;k=n}LH(k,e,j)|0;a[g>>0]=0;cI(k+j|0,g);o=0;na(106,h|0,d|0,i|0);g=o;o=0;do if(!(g&1)){o=0;ma(227,b|0,h|0);j=o;o=0;if(j&1){j=Pa()|0;k=z;xR(h);p=k;q=j;break}else{xR(h);xR(i);c[b>>2]=57416;j=d;k=c[j+4>>2]|0;e=b+8|0;c[e>>2]=c[j>>2];c[e+4>>2]=k;l=f;return}}else{k=Pa()|0;p=z;q=k}while(0);xR(i);$a(q|0)}function dS(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;a=l;l=l+48|0;b=a+32|0;d=a+24|0;e=a+16|0;f=a;g=a+36|0;a=eS()|0;if(a|0?(h=c[a>>2]|0,h|0):0){a=h+48|0;i=c[a>>2]|0;j=c[a+4>>2]|0;if(!((i&-256|0)==1126902528&(j|0)==1129074247)){c[d>>2]=92635;fS(92585,d)}if((i|0)==1126902529&(j|0)==1129074247)k=c[h+44>>2]|0;else k=h+80|0;c[g>>2]=k;k=c[h>>2]|0;h=c[k+4>>2]|0;if(fd[c[(c[1760]|0)+16>>2]&127](7040,k,g)|0){k=c[g>>2]|0;g=dd[c[(c[k>>2]|0)+8>>2]&255](k)|0;c[f>>2]=92635;c[f+4>>2]=h;c[f+8>>2]=g;fS(92499,f)}else{c[e>>2]=92635;c[e+4>>2]=h;fS(92544,e)}}fS(92623,b)}function eS(){var a=0,b=0;a=l;l=l+16|0;if(!(ac(104884,37)|0)){b=_b(c[26222]|0)|0;l=a;return b|0}else fS(92774,a);return 0}function fS(a,b){a=a|0;b=b|0;var d=0,e=0;d=l;l=l+16|0;e=d;c[e>>2]=b;b=c[12643]|0;dF(b,a,e)|0;ZG(10,b)|0;Rb()}function gS(a){a=a|0;return}function hS(a){a=a|0;gS(a);mR(a);return}function iS(a){a=a|0;return}function jS(a){a=a|0;return}function kS(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=l;l=l+64|0;f=e;if(!(oS(a,b,0)|0))if((b|0)!=0?(g=sS(b,7064,7048,0)|0,(g|0)!=0):0){b=f+4|0;h=b+52|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(h|0));c[f>>2]=g;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;ud[c[(c[g>>2]|0)+28>>2]&63](g,f,c[d>>2]|0,1);if((c[f+24>>2]|0)==1){c[d>>2]=c[f+16>>2];i=1}else i=0;j=i}else j=0;else j=1;l=e;return j|0}function lS(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if(oS(a,c[b+8>>2]|0,g)|0)rS(0,b,d,e,f);return}function mS(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;do if(!(oS(b,c[d+8>>2]|0,g)|0)){if(oS(b,c[d>>2]|0,g)|0){if((c[d+16>>2]|0)!=(e|0)?(h=d+20|0,(c[h>>2]|0)!=(e|0)):0){c[d+32>>2]=f;c[h>>2]=e;h=d+40|0;c[h>>2]=(c[h>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0)a[d+54>>0]=1;c[d+44>>2]=4;break}if((f|0)==1)c[d+32>>2]=1}}else qS(0,d,e,f);while(0);return}function nS(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if(oS(a,c[b+8>>2]|0,0)|0)pS(0,b,d,e);return}function oS(a,b,c){a=a|0;b=b|0;c=c|0;return (a|0)==(b|0)|0}function pS(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;b=d+16|0;g=c[b>>2]|0;do if(g){if((g|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54>>0]=1;break}h=d+24|0;if((c[h>>2]|0)==2)c[h>>2]=f}else{c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1}while(0);return}function qS(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if((c[b+4>>2]|0)==(d|0)?(d=b+28|0,(c[d>>2]|0)!=1):0)c[d>>2]=e;return}function rS(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a[d+53>>0]=1;do if((c[d+4>>2]|0)==(f|0)){a[d+52>>0]=1;b=d+16|0;h=c[b>>2]|0;if(!h){c[b>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((g|0)==1?(c[d+48>>2]|0)==1:0))break;a[d+54>>0]=1;break}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;a[d+54>>0]=1;break}h=d+24|0;b=c[h>>2]|0;if((b|0)==2){c[h>>2]=g;i=g}else i=b;if((i|0)==1?(c[d+48>>2]|0)==1:0)a[d+54>>0]=1}while(0);return}function sS(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0;h=l;l=l+64|0;i=h;j=c[d>>2]|0;k=d+(c[j+-8>>2]|0)|0;m=c[j+-4>>2]|0;c[i>>2]=f;c[i+4>>2]=d;c[i+8>>2]=e;c[i+12>>2]=g;g=i+16|0;e=i+20|0;d=i+24|0;j=i+28|0;n=i+32|0;o=i+40|0;p=g;q=p+36|0;do{c[p>>2]=0;p=p+4|0}while((p|0)<(q|0));b[g+36>>1]=0;a[g+38>>0]=0;a:do if(oS(m,f,0)|0){c[i+48>>2]=1;wd[c[(c[m>>2]|0)+20>>2]&31](m,i,k,k,1,0);r=(c[d>>2]|0)==1?k:0}else{vd[c[(c[m>>2]|0)+24>>2]&31](m,i,k,1,0);switch(c[i+36>>2]|0){case 0:{r=(c[o>>2]|0)==1&(c[j>>2]|0)==1&(c[n>>2]|0)==1?c[e>>2]|0:0;break a;break}case 1:break;default:{r=0;break a}}if((c[d>>2]|0)!=1?!((c[o>>2]|0)==0&(c[j>>2]|0)==1&(c[n>>2]|0)==1):0){r=0;break}r=c[g>>2]|0}while(0);l=h;return r|0}function tS(a){a=a|0;gS(a);mR(a);return}function uS(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;if(oS(a,c[b+8>>2]|0,g)|0)rS(0,b,d,e,f);else{h=c[a+8>>2]|0;wd[c[(c[h>>2]|0)+20>>2]&31](h,b,d,e,f,g)}return}function vS(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;do if(!(oS(b,c[d+8>>2]|0,g)|0)){if(!(oS(b,c[d>>2]|0,g)|0)){h=c[b+8>>2]|0;vd[c[(c[h>>2]|0)+24>>2]&31](h,d,e,f,g);break}if((c[d+16>>2]|0)!=(e|0)?(h=d+20|0,(c[h>>2]|0)!=(e|0)):0){c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4)break;j=d+52|0;a[j>>0]=0;k=d+53|0;a[k>>0]=0;l=c[b+8>>2]|0;wd[c[(c[l>>2]|0)+20>>2]&31](l,d,e,e,1,g);if(a[k>>0]|0)if(!(a[j>>0]|0)){m=3;n=11}else o=3;else{m=4;n=11}if((n|0)==11){c[h>>2]=e;h=d+40|0;c[h>>2]=(c[h>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1;o=m}else o=m}c[i>>2]=o;break}if((f|0)==1)c[d+32>>2]=1}else qS(0,d,e,f);while(0);return}function wS(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;if(oS(a,c[b+8>>2]|0,0)|0)pS(0,b,d,e);else{f=c[a+8>>2]|0;ud[c[(c[f>>2]|0)+28>>2]&63](f,b,d,e)}return}function xS(a){a=a|0;return}function yS(){var a=0;a=l;l=l+16|0;if(!($b(104888,314)|0)){l=a;return}else fS(92823,a)}function zS(a){a=a|0;var b=0;b=l;l=l+16|0;CE(a);if(!(bc(c[26222]|0,0)|0)){l=b;return}else fS(92873,b)}function AS(){var a=0,b=0;o=0;a=Y(44)|0;b=o;o=0;if(b&1){b=Qa(0)|0;Id(b)}if((a|0?(b=c[a>>2]|0,b|0):0)?(a=b+48|0,(c[a>>2]&-256|0)==1126902528?(c[a+4>>2]|0)==1129074247:0):0)BS(c[b+12>>2]|0);BS(CS()|0)}function BS(a){a=a|0;var b=0;b=l;l=l+16|0;o=0;ka(a|0);a=o;o=0;if(!(a&1)){o=0;ma(228,92926,b|0);o=0}a=Qa(0)|0;Ka(a|0)|0;o=0;ma(228,92966,b+8|0);o=0;b=Qa(0)|0;o=0;ka(3);a=o;o=0;if(a&1){a=Qa(0)|0;Id(a)}else Id(b)}function CS(){var a=0;a=c[14357]|0;c[14357]=a+0;return a|0}function DS(a){a=a|0;return}function ES(a){a=a|0;DS(a);mR(a);return}function FS(a){a=a|0;return 93016}function GS(a){a=a|0;return}function HS(a){a=a|0;return 93044}function IS(a){a=a|0;c[a>>2]=57540;MS(a+4|0);return}function JS(a){a=a|0;IS(a);mR(a);return}function KS(a){a=a|0;return LS(a+4|0)|0}function LS(a){a=a|0;return c[a>>2]|0}function MS(a){a=a|0;var b=0,d=0;if(sR(a)|0?(b=NS(c[a>>2]|0)|0,a=b+8|0,d=c[a>>2]|0,c[a>>2]=d+-1,(d+-1|0)<0):0)mR(b);return}function NS(a){a=a|0;return a+-12|0}function OS(a){a=a|0;c[a>>2]=57560;MS(a+4|0);return}function PS(a){a=a|0;OS(a);mR(a);return}function QS(a){a=a|0;return LS(a+4|0)|0}function RS(a){a=a|0;IS(a);mR(a);return}function SS(a){a=a|0;return}function TS(a){a=a|0;SS(a);mR(a);return}function US(a){a=a|0;return 93110}function VS(a){a=a|0;gS(a);mR(a);return}function WS(a,b,c){a=a|0;b=b|0;c=c|0;return oS(a,b,0)|0}function XS(a){a=a|0;gS(a);mR(a);return}function YS(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=l;l=l+64|0;f=e;c[d>>2]=c[c[d>>2]>>2];if(!(ZS(a,b,0)|0))if(((b|0)!=0?(g=sS(b,7064,7200,0)|0,(g|0)!=0):0)?(c[g+8>>2]&~c[a+8>>2]|0)==0:0){b=a+12|0;a=g+12|0;if(!(oS(c[b>>2]|0,c[a>>2]|0,0)|0)?!(oS(c[b>>2]|0,7232,0)|0):0){g=c[b>>2]|0;if((((g|0)!=0?(b=sS(g,7064,7048,0)|0,(b|0)!=0):0)?(g=c[a>>2]|0,(g|0)!=0):0)?(a=sS(g,7064,7048,0)|0,(a|0)!=0):0){g=f+4|0;h=g+52|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));c[f>>2]=a;c[f+8>>2]=b;c[f+12>>2]=-1;c[f+48>>2]=1;ud[c[(c[a>>2]|0)+28>>2]&63](a,f,c[d>>2]|0,1);if((c[f+24>>2]|0)==1){c[d>>2]=c[f+16>>2];i=1}else i=0;j=i}else j=0}else j=1}else j=0;else j=1;l=e;return j|0}function ZS(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if(oS(a,b,0)|0)d=1;else d=oS(b,7240,0)|0;return d|0}function _S(a){a=a|0;gS(a);mR(a);return}function $S(a,b,c){a=a|0;b=b|0;c=c|0;return oS(a,b,0)|0}function aT(a){a=a|0;gS(a);mR(a);return}function bT(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if(oS(b,c[d+8>>2]|0,h)|0)rS(0,d,e,f,g);else{i=d+52|0;j=a[i>>0]|0;k=d+53|0;l=a[k>>0]|0;m=c[b+12>>2]|0;n=b+16+(m<<3)|0;a[i>>0]=0;a[k>>0]=0;fT(b+16|0,d,e,f,g,h);a:do if((m|0)>1){o=d+24|0;p=b+8|0;q=d+54|0;r=b+24|0;do{if(a[q>>0]|0)break a;if(!(a[i>>0]|0)){if(a[k>>0]|0?(c[p>>2]&1|0)==0:0)break a}else{if((c[o>>2]|0)==1)break a;if(!(c[p>>2]&2))break a}a[i>>0]=0;a[k>>0]=0;fT(r,d,e,f,g,h);r=r+8|0}while(r>>>0<n>>>0)}while(0);a[i>>0]=j;a[k>>0]=l}return}\nfunction Fp(a,b){a=a|0;b=b|0;var c=0,d=0;c=l;l=l+16|0;d=c;wk(d);o=0;ma(123,d|0,b|0);b=o;o=0;if(!(b&1)?(o=0,ma(126,a|0,d|0),a=o,o=0,!(a&1)):0){fk(d);l=c;return}c=Pa()|0;fk(d);$a(c|0)}function Gp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=l;l=l+16|0;e=d;wk(e);o=0;na(53,e|0,b|0,c|0);b=o;o=0;if(!(b&1)?(o=0,na(59,a|0,e|0,c|0),c=o,o=0,!(c&1)):0){fk(e);l=d;return}d=Pa()|0;fk(e);$a(d|0)}function Hp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=l;l=l+16|0;e=d;wk(e);o=0;na(53,e|0,b|0,c|0);b=o;o=0;if(!(b&1)?(o=0,na(58,a|0,e|0,c|0),c=o,o=0,!(c&1)):0){fk(e);l=d;return}d=Pa()|0;fk(e);$a(d|0)}function Ip(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;c[a>>2]=0;d=a+4|0;c[d>>2]=0;c[a+8>>2]=0;e=c[b>>2]|0;f=(c[b+4>>2]|0)-e|0;b=e;if(!f)return;if((f|0)>=0){o=0;e=Z(209,f|0)|0;g=o;o=0;if(!(g&1)){c[d>>2]=e;c[a>>2]=e;g=e+f|0;c[a+8>>2]=g;CT(e|0,b|0,f|0)|0;c[d>>2]=g;return}}else{o=0;la(271,a|0);o=0}g=Pa()|0;f=c[a>>2]|0;if(!f)$a(g|0);if((c[d>>2]|0)!=(f|0))c[d>>2]=f;mR(f);$a(g|0)}function Jp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;c[a>>2]=0;d=a+4|0;c[d>>2]=0;c[a+8>>2]=0;e=c[b+12>>2]|0;f=(c[b+16>>2]|0)-e|0;b=e;if(!f)return;if((f|0)>=0){o=0;e=Z(209,f|0)|0;g=o;o=0;if(!(g&1)){c[d>>2]=e;c[a>>2]=e;g=e+f|0;c[a+8>>2]=g;CT(e|0,b|0,f|0)|0;c[d>>2]=g;return}}else{o=0;la(271,a|0);o=0}g=Pa()|0;f=c[a>>2]|0;if(!f)$a(g|0);if((c[d>>2]|0)!=(f|0))c[d>>2]=f;mR(f);$a(g|0)}function Kp(a){a=a|0;var b=0,d=0;c[a>>2]=10112;b=a+4|0;a=c[b>>2]|0;c[b>>2]=0;if(!a)return;b=c[a+8>>2]|0;if(b|0){d=a+12|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}mR(a);return}function Lp(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=10112;b=a+4|0;d=c[b>>2]|0;c[b>>2]=0;if(!d){mR(a);return}b=c[d+8>>2]|0;if(b|0){e=d+12|0;if((c[e>>2]|0)!=(b|0))c[e>>2]=b;mR(b)}mR(d);mR(a);return}function Mp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;f=c[b+4>>2]|0;if(a[f>>0]|0)return (ut(d,f+8|0)|0)+e|0;e=Ja(24)|0;o=0;ma(143,e|0,14);f=o;o=0;if(f&1){f=Pa()|0;Sa(e|0);$a(f|0)}else Xa(e|0,4424,56);return 0}function Np(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;e=l;l=l+16|0;f=e;ct(f,d);o=0;d=Z(209,52)|0;g=o;o=0;do if(g&1){h=Pa()|0;i=z;j=h}else{a[d>>0]=0;h=d+8|0;c[h>>2]=0;k=d+12|0;c[k>>2]=0;c[d+16>>2]=0;o=0;ma(172,d|0,f|0);m=o;o=0;if(m&1){m=Pa()|0;n=z;p=c[h>>2]|0;if(p|0){if((c[k>>2]|0)!=(p|0))c[k>>2]=p;mR(p)}mR(d);i=n;j=m;break}m=b+4|0;n=c[m>>2]|0;c[m>>2]=d;if(n|0){m=c[n+8>>2]|0;if(m|0){p=n+12|0;if((c[p>>2]|0)!=(m|0))c[p>>2]=m;mR(m)}mR(n)}n=c[f>>2]|0;if(!n){l=e;return}m=f+4|0;if((c[m>>2]|0)!=(n|0))c[m>>2]=n;mR(n);l=e;return}while(0);e=c[f>>2]|0;if(!e)$a(j|0);d=f+4|0;if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e);$a(j|0)}function Op(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=l;l=l+16|0;f=e+5|0;g=e;a[b>>0]=0;h=b+8|0;if((h|0)!=(d|0))Dn(h,c[d>>2]|0,c[d+4>>2]|0);d=b+20|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;c[d+28>>2]=0;i=c[h>>2]|0;c[g>>2]=i;h=cv(g,i+((c[b+12>>2]|0)-i)|0,d,b+32|0)|0;a[f>>0]=a[e+4>>0]|0;Pp(h,f)|0;if(!(Gz(d,b+44|0,b+48|0)|0)){j=1;k=b+4|0;c[k>>2]=j;a[b>>0]=1;l=e;return}if((c[b+24>>2]|0)==9?(aF(84490,c[b+28>>2]|0,9)|0)==0:0){j=0;k=b+4|0;c[k>>2]=j;a[b>>0]=1;l=e;return}e=Ja(24)|0;o=0;ma(143,e|0,16);b=o;o=0;if(b&1){b=Pa()|0;Sa(e|0);$a(b|0)}else Xa(e|0,4424,56)}function Pp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;d=l;l=l+32|0;e=d;if((b|0)>-1){l=d;return b|0}d=Ja(24)|0;f=xr()|0;o=0;na(71,d|0,b|0,f|0);f=o;o=0;if(f&1){f=Qa(0)|0;Sa(d|0);g=f}else{o=0;na(72,d|0,4424,56);o=0;d=Qa(0)|0;g=d}Ka(g|0)|0;g=fo()|0;o=0;na(71,e|0,3,g|0);g=o;o=0;if(g&1){g=Pa()|0;h=z;i=g}else{o=0;ma(144,e|0,0);o=0;g=Pa()|0;d=z;c[e>>2]=10036;f=e+12|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);h=d;i=g}o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}else $a(i|0);return 0}function Qp(b){b=b|0;var d=0;c[b>>2]=10112;d=kR(52)|0;a[d>>0]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[b+4>>2]=d;return}function Rp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;c[a>>2]=10112;f=kR(52)|0;o=0;oa(45,f|0,b|0,d|0,e|0);e=o;o=0;if(e&1){e=Pa()|0;mR(f);$a(e|0)}else{c[a+4>>2]=f;return}}function Sp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=l;l=l+16|0;h=g;a[b>>0]=0;c[b+4>>2]=d;i=b+8|0;c[i>>2]=0;j=b+12|0;c[j>>2]=0;c[b+16>>2]=0;k=f>>>0<1024?f+1024|0:f;switch(d|0){case 0:{o=0;na(77,h|0,e|0,k|0);d=o;o=0;do if(d&1){f=Pa()|0;m=z;n=f}else{o=0;ma(172,b|0,h|0);f=o;o=0;if(f&1){f=Pa()|0;p=z;q=c[h>>2]|0;if(!q){m=p;n=f;break}r=h+4|0;if((c[r>>2]|0)!=(q|0))c[r>>2]=q;mR(q);m=p;n=f;break}f=c[h>>2]|0;if(f|0){p=h+4|0;if((c[p>>2]|0)!=(f|0))c[p>>2]=f;mR(f)}l=g;return}while(0);s=m;t=n;break}case 1:{o=0;na(88,h|0,e|0,k|0);k=o;o=0;do if(k&1){e=Pa()|0;u=z;v=e}else{o=0;ma(172,b|0,h|0);e=o;o=0;if(e&1){e=Pa()|0;n=z;m=c[h>>2]|0;if(!m){u=n;v=e;break}d=h+4|0;if((c[d>>2]|0)!=(m|0))c[d>>2]=m;mR(m);u=n;v=e;break}e=c[h>>2]|0;if(e|0){n=h+4|0;if((c[n>>2]|0)!=(e|0))c[n>>2]=e;mR(e)}l=g;return}while(0);s=u;t=v;break}default:{l=g;return}}g=c[i>>2]|0;if(!g)$a(t|0);if((c[j>>2]|0)!=(g|0))c[j>>2]=g;mR(g);$a(t|0)}function Tp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Up(a,b,c,d,1);return}function Up(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;h=l;l=l+64|0;i=h+40|0;j=h+16|0;k=h+4|0;m=h;n=d+4|0;d=c[n>>2]|0;if(!(a[d>>0]|0)){p=Ja(24)|0;o=0;ma(143,p|0,14);q=o;o=0;if(q&1){q=Pa()|0;Sa(p|0);$a(q|0)}else Xa(p|0,4424,56)}p=e+4|0;q=c[p>>2]|0;r=c[e>>2]|0;s=q-r+16|0;c[b>>2]=0;t=b+4|0;c[t>>2]=0;c[b+8>>2]=0;do if(!s){u=r;v=d;w=q}else{if((s|0)>=0){o=0;x=Z(209,s|0)|0;y=o;o=0;if(!(y&1)){c[t>>2]=x;c[b>>2]=x;c[b+8>>2]=x+s;y=s;A=x;do{a[A>>0]=0;A=(c[t>>2]|0)+1|0;c[t>>2]=A;y=y+-1|0}while((y|0)!=0);u=c[e>>2]|0;v=c[n>>2]|0;w=c[p>>2]|0;break}}else{o=0;la(271,b|0);o=0}y=Pa()|0;A=c[b>>2]|0;if(!A)$a(y|0);if((c[t>>2]|0)!=(A|0))c[t>>2]=A;mR(A);$a(y|0)}while(0);p=u;n=v+32|0;c[k>>2]=c[n>>2];c[k+4>>2]=c[n+4>>2];c[k+8>>2]=c[n+8>>2];c[m>>2]=w-u;a:do switch(c[v+4>>2]|0){case 0:{n=c[f>>2]|0;o=0;e=ga(23,k|0,g|0,n|0,(c[f+4>>2]|0)-n|0,p|0,w-u|0,c[b>>2]|0,m|0)|0;n=o;o=0;if(!(n&1))if((e|0)<=-1){n=Ja(24)|0;s=xr()|0;o=0;na(71,n|0,e|0,s|0);s=o;o=0;if(s&1){s=Qa(0)|0;Sa(n|0);B=s}else{o=0;na(72,n|0,4424,56);o=0;n=Qa(0)|0;B=n}Ka(B|0)|0;n=fo()|0;o=0;na(71,i|0,3,n|0);n=o;o=0;if(n&1){n=Pa()|0;C=z;D=n}else{o=0;ma(144,i|0,0);o=0;n=Pa()|0;s=z;c[i>>2]=10036;e=i+12|0;if((a[e+11>>0]|0)<0)mR(c[e>>2]|0);C=s;D=n}o=0;ka(3);n=o;o=0;if(n&1){n=Qa(0)|0;Id(n)}else{E=C;F=D}}else G=52;else G=30;break}case 1:{n=c[f>>2]|0;s=(c[f+4>>2]|0)-n|0;if(s>>>0>31){e=Ja(24)|0;q=fo()|0;o=0;oa(40,e|0,3,q|0,72423);q=o;o=0;if(q&1){q=Pa()|0;d=z;Sa(e|0);E=d;F=q;break a}else{o=0;na(72,e|0,4424,56);o=0;G=30;break a}}o=0;e=ha(1,k|0,g|0,c[v+48>>2]|0,c[v+44>>2]|0,n|0,s|0,p|0,w-u|0,c[b>>2]|0,m|0)|0;s=o;o=0;if(!(s&1))if((e|0)<=-1){s=Ja(24)|0;n=xr()|0;o=0;na(71,s|0,e|0,n|0);n=o;o=0;if(n&1){n=Qa(0)|0;Sa(s|0);H=n}else{o=0;na(72,s|0,4424,56);o=0;s=Qa(0)|0;H=s}Ka(H|0)|0;s=fo()|0;o=0;na(71,j|0,3,s|0);s=o;o=0;if(s&1){s=Pa()|0;I=z;J=s}else{o=0;ma(144,j|0,0);o=0;s=Pa()|0;n=z;c[j>>2]=10036;e=j+12|0;if((a[e+11>>0]|0)<0)mR(c[e>>2]|0);I=n;J=s}o=0;ka(3);s=o;o=0;if(s&1){s=Qa(0)|0;Id(s)}else{E=I;F=J}}else G=52;else G=30;break}default:G=52}while(0);do if((G|0)==52){J=c[m>>2]|0;I=c[t>>2]|0;j=c[b>>2]|0;H=I-j|0;u=j;j=I;if(J>>>0>H>>>0){o=0;ma(149,b|0,J-H|0);I=o;o=0;if(I&1){G=30;break}l=h;return}if(J>>>0>=H>>>0){l=h;return}H=u+J|0;if((H|0)==(j|0)){l=h;return}c[t>>2]=H;l=h;return}while(0);if((G|0)==30){G=Pa()|0;E=z;F=G}G=c[b>>2]|0;if(!G)$a(F|0);if((c[t>>2]|0)!=(G|0))c[t>>2]=G;mR(G);$a(F|0)}function Vp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Up(a,b,c,d,0);return}function Wp(a){a=a|0;var b=0,d=0;c[a>>2]=10140;b=a+4|0;a=c[b>>2]|0;c[b>>2]=0;if(!a)return;b=c[a>>2]|0;if(b|0){d=a+4|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}mR(a);return}function Xp(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=10140;b=a+4|0;d=c[b>>2]|0;c[b>>2]=0;if(!d){mR(a);return}b=c[d>>2]|0;if(b|0){e=d+4|0;if((c[e>>2]|0)!=(b|0))c[e>>2]=b;mR(b)}mR(d);mR(a);return}function Yp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0;f=l;l=l+32|0;g=f+8|0;h=f+4|0;i=f;j=b+4|0;b=c[j>>2]|0;if(c[b+16>>2]|0){k=Ja(24)|0;o=0;ma(143,k|0,16);m=o;o=0;if(!(m&1))Xa(k|0,4424,56);m=Pa()|0;n=z;Sa(k|0);p=n;q=m;$a(q|0)}c[h>>2]=0;switch(c[b+20>>2]|0){case 0:{r=3;break}case 1:{r=4;break}case 2:{r=5;break}case 3:{r=6;break}case 4:{r=7;break}case 5:{r=8;break}default:{}}b=Fz(r,h,i)|0;if((b|0)<=-1){r=Ja(24)|0;m=xr()|0;o=0;na(71,r|0,b|0,m|0);m=o;o=0;if(m&1){m=Qa(0)|0;Sa(r|0);s=m}else{o=0;na(72,r|0,4424,56);o=0;r=Qa(0)|0;s=r}Ka(s|0)|0;s=fo()|0;o=0;na(71,g|0,16,s|0);s=o;o=0;if(s&1){s=Pa()|0;t=z;u=s}else{o=0;ma(144,g|0,0);o=0;s=Pa()|0;r=z;c[g>>2]=10036;m=g+12|0;if((a[m+11>>0]|0)<0)mR(c[m>>2]|0);t=r;u=s}o=0;ka(3);s=o;o=0;if(s&1){s=Qa(0)|0;Id(s)}else $a(u|0)}u=c[h>>2]|0;h=c[i>>2]|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;if(h>>>0>4294967279)vR(g);if(h>>>0<11){a[g+11>>0]=h;if(!h)v=g;else{w=g;x=29}}else{i=h+16&-16;s=kR(i)|0;c[g>>2]=s;c[g+8>>2]=i|-2147483648;c[g+4>>2]=h;w=s;x=29}if((x|0)==29){CT(w|0,u|0,h|0)|0;v=w}a[v+h>>0]=0;o=0;h=_(95,d|0,g|0)|0;v=o;o=0;do if(v&1){w=Pa()|0;u=z;if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);y=u;A=w}else{if((a[g+11>>0]|0)<0)mR(c[g>>2]|0);w=(wt(d,h)|0)+h|0;u=w+(kt(d,c[(c[j>>2]|0)+12>>2]|0)|0)|0;w=u+(ot(d,c[j>>2]|0)|0)|0;u=wt(d,w)|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;x=g+11|0;a[x>>0]=9;s=g;i=84122;r=s+9|0;do{a[s>>0]=a[i>>0]|0;s=s+1|0;i=i+1|0}while((s|0)<(r|0));a[g+9>>0]=0;o=0;i=_(95,d|0,g|0)|0;s=o;o=0;if(s&1){s=Pa()|0;r=z;if((a[x>>0]|0)<0)mR(c[g>>2]|0);y=r;A=s;break}s=w+u+i|0;if((a[x>>0]|0)>=0){B=wt(d,s)|0;C=s+e|0;D=C+B|0;l=f;return D|0}mR(c[g>>2]|0);B=wt(d,s)|0;C=s+e|0;D=C+B|0;l=f;return D|0}while(0);p=y;q=A;$a(q|0);return 0}function Zp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;e=l;l=l+64|0;f=e+40|0;g=e+24|0;h=e+12|0;i=e;et(d)|0;dt(f,d);o=0;ma(91,g|0,f|0);j=o;o=0;if(j&1){j=Pa()|0;k=z;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);m=k;n=j;$a(n|0)}if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);j=c[g>>2]|0;k=h+8|0;c[k>>2]=j;p=g+4|0;q=(c[p>>2]|0)-j|0;r=h+4|0;c[r>>2]=q;a:do if((q|0)==9?(aF(84122,j,9)|0)==0:0){o=0;Z(220,d|0)|0;s=o;o=0;if(!(s&1)){o=0;ma(171,f|0,d|0);s=o;o=0;if(s&1){s=Pa()|0;t=z;u=s;break}s=b+4|0;v=c[s>>2]|0;w=c[v>>2]|0;x=v+4|0;if(!w)y=v+8|0;else{if((c[x>>2]|0)!=(w|0))c[x>>2]=w;mR(w);w=v+8|0;c[w>>2]=0;c[x>>2]=0;c[v>>2]=0;y=w}c[v>>2]=c[f>>2];c[x>>2]=c[f+4>>2];c[y>>2]=c[f+8>>2];o=0;x=Z(221,d|0)|0;v=o;o=0;if(!(v&1)?(c[(c[s>>2]|0)+12>>2]=x,o=0,Z(220,d|0)|0,x=o,o=0,!(x&1)):0){o=0;ma(173,i|0,d|0);x=o;o=0;do if(x&1){v=Pa()|0;A=z;B=v}else{o=0;ma(91,f|0,i|0);v=o;o=0;if(v&1){v=Pa()|0;w=z;if((a[i+11>>0]|0)>=0){A=w;B=v;break}mR(c[i>>2]|0);A=w;B=v;break}v=c[g>>2]|0;if(!v)C=g+8|0;else{if((c[p>>2]|0)!=(v|0))c[p>>2]=v;mR(v);v=g+8|0;c[v>>2]=0;c[p>>2]=0;c[g>>2]=0;C=v}v=c[f>>2]|0;c[g>>2]=v;w=f+4|0;D=c[w>>2]|0;c[p>>2]=D;E=f+8|0;c[C>>2]=c[E>>2];c[E>>2]=0;c[w>>2]=0;c[f>>2]=0;if((a[i+11>>0]|0)<0){mR(c[i>>2]|0);F=c[g>>2]|0;G=c[p>>2]|0}else{F=v;G=D}c[k>>2]=F;c[r>>2]=G-F;c[i>>2]=0;o=0;D=_(121,h|0,i|0)|0;v=o;o=0;b:do if(v&1)H=62;else{if((D|0)<=-1){w=Ja(24)|0;E=xr()|0;o=0;na(71,w|0,D|0,E|0);E=o;o=0;if(E&1){E=Qa(0)|0;Sa(w|0);I=E}else{o=0;na(72,w|0,4424,56);o=0;w=Qa(0)|0;I=w}Ka(I|0)|0;w=fo()|0;o=0;na(71,f|0,16,w|0);w=o;o=0;if(w&1){w=Pa()|0;J=z;K=w}else{o=0;ma(144,f|0,0);o=0;w=Pa()|0;E=z;c[f>>2]=10036;L=f+12|0;if((a[L+11>>0]|0)<0)mR(c[L>>2]|0);J=E;K=w}o=0;ka(3);w=o;o=0;if(!(w&1)){M=J;N=K;break}w=Qa(0)|0;Id(w)}w=c[s>>2]|0;c[w+16>>2]=0;switch(c[i>>2]|0){case 3:{O=0;break}case 4:{O=1;break}case 5:{O=2;break}case 6:{O=3;break}case 7:{O=4;break}case 8:{O=5;break}default:{E=Ja(24)|0;L=fo()|0;o=0;na(71,E|0,16,L|0);L=o;o=0;if(L&1){L=Pa()|0;P=z;Sa(E|0);M=P;N=L;break b}else{o=0;na(72,E|0,4424,56);o=0;H=62;break b}}}c[w+20>>2]=O;w=c[g>>2]|0;if(!w){l=e;return}if((c[p>>2]|0)!=(w|0))c[p>>2]=w;mR(w);l=e;return}while(0);if((H|0)==62){D=Pa()|0;M=z;N=D}t=M;u=N;break a}while(0);t=A;u=B}else H=11}else H=11}else H=6;while(0);do if((H|0)==6){B=Ja(24)|0;A=fo()|0;o=0;na(71,B|0,16,A|0);A=o;o=0;if(A&1){A=Pa()|0;N=z;Sa(B|0);t=N;u=A;break}else{o=0;na(72,B|0,4424,56);o=0;H=11;break}}while(0);if((H|0)==11){H=Pa()|0;t=z;u=H}H=c[g>>2]|0;if(!H){m=t;n=u;$a(n|0)}if((c[p>>2]|0)!=(H|0))c[p>>2]=H;mR(H);m=t;n=u;$a(n|0)}function _p(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;c[b>>2]=10140;f=b+4|0;b=kR(32)|0;c[b>>2]=0;g=b+4|0;c[g>>2]=0;h=b+8|0;c[h>>2]=0;i=c[d>>2]|0;j=(c[d+4>>2]|0)-i|0;d=i;do if(j|0){if((j|0)>=0){o=0;i=Z(209,j|0)|0;k=o;o=0;if(!(k&1)){c[g>>2]=i;c[b>>2]=i;k=i+j|0;c[h>>2]=k;CT(i|0,d|0,j|0)|0;c[g>>2]=k;break}}else{o=0;la(271,b|0);o=0}k=Pa()|0;i=c[b>>2]|0;if(!i){mR(b);$a(k|0)}if((c[g>>2]|0)!=(i|0))c[g>>2]=i;mR(i);mR(b);$a(k|0)}while(0);c[b+12>>2]=e;c[b+16>>2]=0;c[b+20>>2]=4;c[b+24>>2]=2048;a[b+28>>0]=1;c[f>>2]=b;return}function $p(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[b+4>>2]|0;c[a>>2]=0;b=a+4|0;c[b>>2]=0;c[a+8>>2]=0;e=d+4|0;f=(c[e>>2]|0)-(c[d>>2]|0)|0;if(!f)return;if((f|0)>=0){o=0;g=Z(209,f|0)|0;h=o;o=0;if(!(h&1)){c[b>>2]=g;c[a>>2]=g;c[a+8>>2]=g+f;f=c[d>>2]|0;d=(c[e>>2]|0)-f|0;if((d|0)<=0)return;CT(g|0,f|0,d|0)|0;c[b>>2]=g+d;return}}else{o=0;la(271,a|0);o=0}d=Pa()|0;g=c[a>>2]|0;if(!g)$a(d|0);if((c[b>>2]|0)!=(g|0))c[b>>2]=g;mR(g);$a(d|0)}function aq(a){a=a|0;return c[(c[a+4>>2]|0)+12>>2]|0}function bq(a,b){a=a|0;b=b|0;c[(c[a+4>>2]|0)+16>>2]=b;return}function cq(a){a=a|0;return c[(c[a+4>>2]|0)+16>>2]|0}function dq(a,b){a=a|0;b=b|0;c[(c[a+4>>2]|0)+20>>2]=b;return}function eq(a){a=a|0;return c[(c[a+4>>2]|0)+20>>2]|0}function fq(b){b=b|0;a[(c[b+4>>2]|0)+28>>0]=1;return}function gq(b){b=b|0;a[(c[b+4>>2]|0)+28>>0]=0;return}function hq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0;g=l;l=l+32|0;h=g;iq(d,e);o=0;i=Z(209,12)|0;j=o;o=0;if(j&1){j=Qa(0)|0;Id(j)};c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;o=0;la(294,i|0);j=o;o=0;if(j&1){j=Qa(0)|0;mR(i);Id(j)}j=d+4|0;switch(c[(c[j>>2]|0)+20>>2]|0){case 0:{k=3;break}case 1:{k=4;break}case 2:{k=5;break}case 3:{k=6;break}case 4:{k=7;break}case 5:{k=8;break}default:{}}o=0;na(85,i|0,k|0,1);k=o;o=0;a:do if(k&1){d=Pa()|0;m=d;n=z}else{do if(!f){o=0;d=Z(224,c[i>>2]|0)|0;p=o;o=0;if(p&1){p=Pa()|0;q=z;r=p;break}else{s=d&255;t=16;break}}else{s=f;t=16}while(0);b:do if((t|0)==16){c[b>>2]=0;d=b+4|0;c[d>>2]=0;c[b+8>>2]=0;c:do if(s|0){if((s|0)>=0){o=0;p=Z(209,s|0)|0;u=o;o=0;if(!(u&1)){c[d>>2]=p;c[b>>2]=p;c[b+8>>2]=p+s;u=s;v=p;while(1){a[v>>0]=0;v=(c[d>>2]|0)+1|0;c[d>>2]=v;u=u+-1|0;if(!u)break c}}}else{o=0;la(271,b|0);o=0}u=Pa()|0;v=z;p=c[b>>2]|0;if(!p){q=v;r=u;break b}if((c[d>>2]|0)!=(p|0))c[d>>2]=p;mR(p);q=v;r=u;break b}while(0);u=c[j>>2]|0;do if(!(c[u+16>>2]|0)){v=c[e>>2]|0;p=c[u>>2]|0;o=0;w=ga(24,i|0,v|0,(c[e+4>>2]|0)-v|0,p|0,(c[u+4>>2]|0)-p|0,c[u+12>>2]|0,s|0,c[b>>2]|0)|0;p=o;o=0;if(!(p&1)){if((w|0)>-1)break;p=Ja(24)|0;v=xr()|0;o=0;na(71,p|0,w|0,v|0);v=o;o=0;if(v&1){v=Qa(0)|0;Sa(p|0);x=v}else{o=0;na(72,p|0,4424,56);o=0;p=Qa(0)|0;x=p}Ka(x|0)|0;p=fo()|0;o=0;na(71,h|0,3,p|0);p=o;o=0;if(p&1){p=Pa()|0;y=z;A=p}else{o=0;ma(144,h|0,0);o=0;p=Pa()|0;v=z;c[h>>2]=10036;w=h+12|0;if((a[w+11>>0]|0)<0)mR(c[w>>2]|0);y=v;A=p}o=0;ka(3);p=o;o=0;if(p&1){p=Qa(0)|0;Id(p)}else{B=y;C=A}}else{p=Pa()|0;B=z;C=p}p=c[b>>2]|0;if(!p){m=C;n=B;break a}if((c[d>>2]|0)!=(p|0))c[d>>2]=p;mR(p);m=C;n=B;break a}while(0);o=0;la(295,i|0);d=o;o=0;if(d&1){d=Qa(0)|0;mR(i);Id(d)}else{mR(i);l=g;return}}while(0);m=r;n=q}while(0);o=0;la(295,i|0);q=o;o=0;if(q&1){q=Qa(0)|0;mR(i);Id(q)}else{mR(i);$a(m|0)}}function iq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;e=l;l=l+16|0;f=e;g=b+4|0;b=c[g>>2]|0;if(!(a[b+28>>0]|0)){l=e;return}if((c[d>>2]|0)==(c[d+4>>2]|0)){d=Ja(24)|0;o=0;na(73,d|0,15,72506);h=o;o=0;if(!(h&1))Xa(d|0,4424,56);h=Pa()|0;i=z;Sa(d|0);j=i;k=h;$a(k|0)}if((c[b>>2]|0)==(c[b+4>>2]|0)){h=Ja(24)|0;o=0;na(73,h|0,15,72536);i=o;o=0;if(!(i&1))Xa(h|0,4424,56);i=Pa()|0;d=z;Sa(h|0);j=d;k=i;$a(k|0)}if((c[b+12>>2]|0)>>>0>=(c[b+24>>2]|0)>>>0){l=e;return}e=Ja(24)|0;b=c[g>>2]|0;o=0;oa(46,f|0,72562,b+12|0,b+24|0);b=o;o=0;do if(!(b&1)){g=fo()|0;o=0;oa(37,e|0,15,g|0,f|0);g=o;o=0;if(g&1)m=1;else{o=0;na(72,e|0,4424,56);o=0;m=0}g=Pa()|0;i=z;if((a[f+11>>0]|0)<0){mR(c[f>>2]|0);if(m){n=i;p=g;break}else{j=i;k=g}$a(k|0)}else{if(m){n=i;p=g;break}else{j=i;k=g}$a(k|0)}}else{g=Pa()|0;n=z;p=g}while(0);Sa(e|0);j=n;k=p;$a(k|0)}function jq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0;g=l;l=l+176|0;h=g+136|0;i=g;j=i+56|0;k=i+4|0;c[i>>2]=20;c[j>>2]=40;o=0;ma(69,i+56|0,k|0);m=o;o=0;if(m&1){m=Pa()|0;n=z;p=m;rH(j);$a(p|0)}c[i+128>>2]=0;c[i+132>>2]=-1;c[i>>2]=7388;c[j>>2]=7408;o=0;la(216,k|0);m=o;o=0;do if(m&1){q=Pa()|0;r=z;s=q}else{c[k>>2]=7440;q=i+36|0;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;c[i+52>>2]=16;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;o=0;ma(70,k|0,h|0);t=o;o=0;if(t&1){t=Pa()|0;u=z;if((a[h+11>>0]|0)<0)mR(c[h>>2]|0);if((a[q+11>>0]|0)<0)mR(c[q>>2]|0);vH(k);r=u;s=t;break}if((a[h+11>>0]|0)<0)mR(c[h>>2]|0);t=h+8|0;c[h>>2]=t;c[h+4>>2]=2;c[t>>2]=e;c[h+12>>2]=20;c[h+16>>2]=212;c[h+20>>2]=f;c[h+24>>2]=20;c[h+28>>2]=212;o=0;oa(39,i|0,d|0,t|0,2);t=o;o=0;if(!(t&1)?(o=0,ma(71,b|0,k|0),t=o,o=0,!(t&1)):0){c[i>>2]=7388;c[j>>2]=7408;c[k>>2]=7440;if((a[q+11>>0]|0)>=0){vH(k);ZH(i,7420);rH(j);l=g;return}mR(c[q>>2]|0);vH(k);ZH(i,7420);rH(j);l=g;return}t=Pa()|0;c[i>>2]=7388;c[j>>2]=7408;c[k>>2]=7440;if((a[q+11>>0]|0)>=0){vH(k);ZH(i,7420);rH(j);$a(t|0)}mR(c[q>>2]|0);vH(k);ZH(i,7420);rH(j);$a(t|0)}while(0);ZH(i,7420);n=r;p=s;rH(j);$a(p|0)}function kq(a){a=a|0;var b=0;c[a>>2]=10168;b=a+4|0;a=c[b>>2]|0;c[b>>2]=0;if(!a)return;mq(a);mR(a);return}function lq(a){a=a|0;var b=0,d=0;c[a>>2]=10168;b=a+4|0;d=c[b>>2]|0;c[b>>2]=0;if(!d){mR(a);return}mq(d);mR(d);mR(a);return}function mq(a){a=a|0;var b=0,d=0,e=0;b=a+16|0;o=0;la(282,c[b>>2]|0);d=o;o=0;if(d&1){d=Qa(0)|0;e=c[b>>2]|0;c[b>>2]=0;if(!e)Id(d);mR(e);Id(d)}d=c[b>>2]|0;c[b>>2]=0;if(d|0)mR(d);d=a+12|0;o=0;la(281,c[d>>2]|0);b=o;o=0;if(b&1){b=Qa(0)|0;e=c[d>>2]|0;c[d>>2]=0;if(!e)Id(b);mR(e);Id(b)}b=c[d>>2]|0;c[d>>2]=0;if(b|0)mR(b);b=c[a>>2]|0;if(!b)return;d=a+4|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b);return}function nq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=10168;d=a+4|0;e=kR(20)|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;oq(e);c[d>>2]=e;if(!((e|0)!=(b|0)?(o=0,na(84,e|0,c[b>>2]|0,c[b+4>>2]|0),b=o,o=0,b&1):0))f=3;if((f|0)==3?(o=0,la(296,a|0),a=o,o=0,!(a&1)):0)return;a=Pa()|0;f=c[d>>2]|0;c[d>>2]=0;if(!f)$a(a|0);mq(f);mR(f);$a(a|0)}function oq(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=a+12|0;o=0;d=Z(209,320)|0;e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}ET(d|0,0,320)|0;c[b>>2]=d;o=0;la(283,d|0);d=o;o=0;if(d&1){d=Qa(0)|0;e=c[b>>2]|0;c[b>>2]=0;if(!e)Id(d);mR(e);Id(d)}d=a+16|0;o=0;a=Z(209,37504)|0;e=o;o=0;if(e&1){e=Qa(0)|0;Id(e)}ET(a|0,0,37504)|0;c[d>>2]=a;o=0;la(284,a|0);a=o;o=0;if(!(a&1))return;a=Qa(0)|0;e=c[d>>2]|0;c[d>>2]=0;if(!e)Id(a);mR(e);Id(a)}function pq(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0;d=l;l=l+16|0;e=d+13|0;f=d+12|0;g=d;h=c[b+4>>2]|0;b=c[h+16>>2]|0;c[g>>2]=0;i=g+4|0;c[i>>2]=0;c[g+8>>2]=0;j=h+4|0;k=(c[j>>2]|0)-(c[h>>2]|0)|0;do if(!k){m=0;n=0}else{if((k|0)>=0){o=0;p=Z(209,k|0)|0;q=o;o=0;if(!(q&1)){c[i>>2]=p;c[g>>2]=p;c[g+8>>2]=p+k;q=c[h>>2]|0;r=(c[j>>2]|0)-q|0;if((r|0)<=0){m=p;n=p;break}CT(p|0,q|0,r|0)|0;q=p+r|0;c[i>>2]=q;m=p;n=q;break}}else{o=0;la(271,g|0);o=0}q=Pa()|0;p=c[g>>2]|0;if(!p)$a(q|0);if((c[i>>2]|0)!=(p|0))c[i>>2]=p;mR(p);$a(q|0)}while(0);o=0;j=ca(34,c[h+12>>2]|0,90,b|0,m|0,n-m|0)|0;m=o;o=0;if(!(m&1)?(o=0,a[e>>0]=a[f>>0]|0,_(124,j|0,e|0)|0,e=o,o=0,!(e&1)):0){e=c[g>>2]|0;if(!e){l=d;return}if((c[i>>2]|0)!=(e|0))c[i>>2]=e;mR(e);l=d;return}d=Pa()|0;e=c[g>>2]|0;if(!e)$a(d|0);if((c[i>>2]|0)!=(e|0))c[i>>2]=e;mR(e);$a(d|0)}function qq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;d=l;l=l+32|0;e=d;if((b|0)>-1){l=d;return b|0}d=Ja(24)|0;f=xr()|0;o=0;na(71,d|0,b|0,f|0);f=o;o=0;if(f&1){f=Qa(0)|0;Sa(d|0);g=f}else{o=0;na(72,d|0,4424,56);o=0;d=Qa(0)|0;g=d}Ka(g|0)|0;g=fo()|0;o=0;na(71,e|0,16,g|0);g=o;o=0;if(g&1){g=Pa()|0;h=z;i=g}else{o=0;ma(144,e|0,0);o=0;g=Pa()|0;d=z;c[e>>2]=10036;f=e+12|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);h=d;i=g}o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}else $a(i|0);return 0}function rq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;d=l;l=l+16|0;e=d;c[a>>2]=10168;f=a+4|0;g=kR(20)|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;oq(g);c[f>>2]=g;o=0;ma(91,e|0,b|0);b=o;o=0;do if(!(b&1)){g=c[f>>2]|0;h=c[g>>2]|0;i=g+4|0;if(!h)j=g+8|0;else{if((c[i>>2]|0)!=(h|0))c[i>>2]=h;mR(h);h=g+8|0;c[h>>2]=0;c[i>>2]=0;c[g>>2]=0;j=h}c[g>>2]=c[e>>2];c[i>>2]=c[e+4>>2];c[j>>2]=c[e+8>>2];o=0;la(296,a|0);i=o;o=0;if(i&1){i=Pa()|0;k=z;m=i;n=f;break}else{l=d;return}}else{i=Pa()|0;k=z;m=i;n=f}while(0);f=c[n>>2]|0;c[n>>2]=0;if(!f)$a(m|0);mq(f);mR(f);$a(m|0)}function sq(a,b){a=a|0;b=b|0;var d=0;c[a>>2]=10168;d=b+4|0;b=c[d>>2]|0;c[d>>2]=0;c[a+4>>2]=b;return}function tq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;c[a>>2]=10168;d=a+4|0;e=kR(20)|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;oq(e);c[d>>2]=e;f=c[b+4>>2]|0;if(!((f|0)!=(e|0)?(o=0,na(84,e|0,c[f>>2]|0,c[f+4>>2]|0),f=o,o=0,f&1):0))g=3;if((g|0)==3?(o=0,la(296,a|0),a=o,o=0,!(a&1)):0)return;a=Pa()|0;g=c[d>>2]|0;c[d>>2]=0;if(!g)$a(a|0);mq(g);mR(g);$a(a|0)}function uq(a,b,d){a=a|0;b=b|0;d=d|0;al(a,(c[b+4>>2]|0)+12|0,d);return}function vq(a){a=a|0;var b=0,d=0,e=0,f=0;b=l;l=l+16|0;d=b;al(d,(c[a+4>>2]|0)+12|0,4);a=c[d>>2]|0;e=c[a>>2]|0;if(!a){l=b;return e|0}f=d+4|0;if((c[f>>2]|0)!=(a|0))c[f>>2]=a;mR(a);l=b;return e|0}function wq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=l;l=l+16|0;f=e;if(d>>>0<=b>>>0){g=Ja(24)|0;o=0;na(73,g|0,3,72672);h=o;o=0;if(h&1){h=Pa()|0;Sa(g|0);$a(h|0)}else Xa(g|0,4424,56)}al(f,(c[a+4>>2]|0)+12|0,4);a=c[f>>2]|0;g=c[a>>2]|0;if(!a){i=d-b|0;j=(g>>>0)%(i>>>0)|0;k=j+b|0;l=e;return k|0}h=f+4|0;if((c[h>>2]|0)!=(a|0))c[h>>2]=a;mR(a);i=d-b|0;j=(g>>>0)%(i>>>0)|0;k=j+b|0;l=e;return k|0}function xq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;g=l;l=l+32|0;h=g+12|0;i=g;ap(i,Cq(b)|0);o=0;na(45,h|0,i|0,d|0);d=o;o=0;if(d&1){d=Pa()|0;j=z;To(i);k=j;m=d;$a(m|0)}To(i);o=0;pa(7,i|0,b|0,h|0,e|0,f|0);f=o;o=0;do if(f&1){e=Pa()|0;n=z;p=e}else{o=0;na(89,a|0,b|0,i|0);e=o;o=0;if(e&1){e=Pa()|0;d=z;j=c[i>>2]|0;if(!j){n=d;p=e;break}q=i+4|0;if((c[q>>2]|0)!=(j|0))c[q>>2]=j;mR(j);n=d;p=e;break}e=c[i>>2]|0;if(e|0){d=i+4|0;if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e)}e=c[h>>2]|0;if(!e){l=g;return}d=h+4|0;if((c[d>>2]|0)!=(e|0))c[d>>2]=e;mR(e);l=g;return}while(0);g=c[h>>2]|0;if(!g){k=n;m=p;$a(m|0)}i=h+4|0;if((c[i>>2]|0)!=(g|0))c[i>>2]=g;mR(g);k=n;m=p;$a(m|0)}function yq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;f=l;l=l+48|0;g=f+24|0;h=f+16|0;i=f;Gq(g,a,d);o=0;d=Z(101,a|0)|0;j=o;o=0;if(!(j&1)?(o=0,ma(136,h|0,d|0),d=o,o=0,!(d&1)):0){o=0;na(45,i|0,h|0,b|0);b=o;o=0;do if(b&1){d=Pa()|0;k=z;m=d}else{o=0;d=aa(24,a|0,i|0,g|0,e|0)|0;j=o;o=0;if(j&1){j=Pa()|0;n=z;p=c[i>>2]|0;if(!p){k=n;m=j;break}q=i+4|0;if((c[q>>2]|0)!=(p|0))c[q>>2]=p;mR(p);k=n;m=j;break}j=c[i>>2]|0;if(j|0){n=i+4|0;if((c[n>>2]|0)!=(j|0))c[n>>2]=j;mR(j)}To(h);j=c[g>>2]|0;if(!j){l=f;return d|0}n=g+4|0;if((c[n>>2]|0)!=(j|0))c[n>>2]=j;mR(j);l=f;return d|0}while(0);To(h);r=k;s=m}else{m=Pa()|0;r=z;s=m}m=c[g>>2]|0;if(!m)$a(s|0);r=g+4|0;if((c[r>>2]|0)!=(m|0))c[r>>2]=m;mR(m);$a(s|0);return 0}function zq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=b+12|0;Ek(f,d,e);gl(a,f,c,gp(b+4|0)|0);return}function Aq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+12|0;Dk(e,d);return hl(e,b,c,gp(a+4|0)|0)|0}function Bq(a,b){a=a|0;b=b|0;var d=0;c[a>>2]=10184;d=a+4|0;ap(d,b);o=0;la(277,a+12|0);a=o;o=0;if(a&1){a=Pa()|0;To(d);$a(a|0)}else return}function Cq(a){a=a|0;return fp(a+4|0)|0}function Dq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;vd[c[c[b>>2]>>2]&31](a,b,d,e,f);return}function Eq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;return gd[c[(c[a>>2]|0)+4>>2]&63](a,b,d,e)|0}function Fq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;d=l;l=l+32|0;e=d+8|0;f=d;gt(e);o=0;g=_(119,e|0,c|0)|0;c=o;o=0;a:do if(!(c&1)){o=0;h=Z(225,b+4|0)|0;i=o;o=0;do if(!(i&1)?(o=0,ma(136,f|0,h|0),j=o,o=0,!(j&1)):0){o=0;j=$(9,f|0,e|0,0)|0;k=o;o=0;if(k&1){k=Pa()|0;m=z;To(f);n=m;p=k;break}To(f);o=0;_(110,e|0,j+g|0)|0;j=o;o=0;if(j&1)break a;o=0;ma(151,a|0,e|0);j=o;o=0;if(j&1)break a;it(e);l=d;return}else q=9;while(0);if((q|0)==9){h=Pa()|0;n=z;p=h}r=n;s=p;it(e);$a(s|0)}while(0);p=Pa()|0;r=z;s=p;it(e);$a(s|0)}function Gq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=l;l=l+32|0;e=d+8|0;f=d;Ws(e,c);o=0;Z(220,e|0)|0;c=o;o=0;if(c&1){c=Pa()|0;g=z;h=c;Xs(e);$a(h|0)}o=0;la(297,f|0);c=o;o=0;if(c&1){c=Pa()|0;i=z;j=c}else{o=0;ma(12,f|0,e|0);c=o;o=0;if(!(c&1)?(o=0,ma(171,a|0,e|0),a=o,o=0,!(a&1)):0){ep(b+4|0,f)|0;To(f);Xs(e);l=d;return}d=Pa()|0;b=z;To(f);i=b;j=d}g=i;h=j;Xs(e);$a(h|0)}function Hq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0;f=l;l=l+32|0;g=f+12|0;h=f;i=Cm(a)|0;Wm(a);do if(e){vm(g,a);o=0;ma(154,d|0,g|0);j=o;o=0;if(!(j&1)){j=c[g>>2]|0;if(j|0){k=g+4|0;if((c[k>>2]|0)!=(j|0))c[k>>2]=j;mR(j)}break}j=Pa()|0;k=z;m=c[g>>2]|0;if(m|0){n=g+4|0;if((c[n>>2]|0)!=(m|0))c[n>>2]=m;mR(m)}p=k;q=j;$a(q|0)}while(0);a:do if(dd[c[c[b>>2]>>2]&255](b)|0){e=h+4|0;j=g+4|0;while(1){if(!(dd[c[c[d>>2]>>2]&255](d)|0))break a;sd[c[(c[b>>2]|0)+4>>2]&255](h,b);o=0;na(52,g|0,i|0,h|0);k=o;o=0;if(k&1){r=27;break}o=0;ma(154,d|0,g|0);k=o;o=0;if(k&1){r=28;break}k=c[g>>2]|0;if(k|0){if((c[j>>2]|0)!=(k|0))c[j>>2]=k;mR(k)}k=c[h>>2]|0;if(k|0){if((c[e>>2]|0)!=(k|0))c[e>>2]=k;mR(k)}if(!(dd[c[c[b>>2]>>2]&255](b)|0))break a}if((r|0)==27){k=Pa()|0;s=z;t=k}else if((r|0)==28){k=Pa()|0;m=z;n=c[g>>2]|0;if(!n){s=m;t=k}else{if((c[j>>2]|0)!=(n|0))c[j>>2]=n;mR(n);s=m;t=k}}k=c[h>>2]|0;if(k|0){if((c[e>>2]|0)!=(k|0))c[e>>2]=k;mR(k)}p=s;q=t;$a(q|0)}while(0);tr(g,i);o=0;ma(154,d|0,g|0);d=o;o=0;if(d&1){d=Pa()|0;i=z;t=c[g>>2]|0;if(t|0){s=g+4|0;if((c[s>>2]|0)!=(t|0))c[s>>2]=t;mR(t)}p=i;q=d;$a(q|0)}else{q=c[g>>2]|0;if(!q){nn(a);l=f;return}d=g+4|0;if((c[d>>2]|0)!=(q|0))c[d>>2]=q;mR(q);nn(a);l=f;return}}function Iq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=l;l=l+16|0;i=h;Jq(i,a,b);o=0;j=aa(44,a|0,e|0,f|0,g|0)|0;g=o;o=0;if(!(g&1)?(o=0,pa(27,a|0,b|0,d|0,j|0,i|0),j=o,o=0,!(j&1)):0){j=c[i>>2]|0;if(!j){l=h;return}d=i+4|0;if((c[d>>2]|0)!=(j|0))c[d>>2]=j;mR(j);l=h;return}h=Pa()|0;j=c[i>>2]|0;if(!j)$a(h|0);d=i+4|0;if((c[d>>2]|0)!=(j|0))c[d>>2]=j;mR(j);$a(h|0)}function Jq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0;e=l;l=l+64|0;f=e+56|0;g=e+52|0;h=e+48|0;i=e+28|0;j=e+16|0;k=e+44|0;m=e+40|0;n=e+12|0;p=e+8|0;q=e+4|0;r=e;c[i>>2]=0;s=i+4|0;c[s>>2]=0;c[i+8>>2]=0;t=j+4|0;while(1){o=0;u=Z(c[c[d>>2]>>2]|0,d|0)|0;v=o;o=0;if(v&1){w=11;break}if(!u){w=18;break}o=0;ma(c[(c[d>>2]|0)+4>>2]|0,j|0,d|0);u=o;o=0;if(u&1){w=12;break}c[k>>2]=c[s>>2];c[m>>2]=c[j>>2];c[n>>2]=c[t>>2];o=0;c[h>>2]=c[k>>2];c[g>>2]=c[m>>2];c[f>>2]=c[n>>2];aa(45,i|0,h|0,g|0,f|0)|0;u=o;o=0;if(u&1){w=13;break}u=c[j>>2]|0;if(u|0){if((c[t>>2]|0)!=(u|0))c[t>>2]=u;mR(u)}if(((c[s>>2]|0)-(c[i>>2]|0)|0)>>>0>=16){w=18;break}}a:do if((w|0)==11){n=Pa()|0;x=n;y=z}else if((w|0)==12){n=Pa()|0;A=n;B=z;w=17}else if((w|0)==13){n=Pa()|0;m=z;k=c[j>>2]|0;if(!k){A=n;B=m;w=17}else{if((c[t>>2]|0)!=(k|0))c[t>>2]=k;mR(k);A=n;B=m;w=17}}else if((w|0)==18){o=0;m=Z(93,i|0)|0;n=o;o=0;b:do if(!(n&1)){if(!m){c[a>>2]=c[i>>2];c[a+4>>2]=c[s>>2];k=i+8|0;c[a+8>>2]=c[k>>2];c[k>>2]=0;c[s>>2]=0;c[i>>2]=0;l=e;return}c:do if(((c[s>>2]|0)-(c[i>>2]|0)|0)>>>0<m>>>0){k=j+4|0;while(1){o=0;u=Z(c[c[d>>2]>>2]|0,d|0)|0;v=o;o=0;if(v&1)break b;if(!u)break c;o=0;ma(c[(c[d>>2]|0)+4>>2]|0,j|0,d|0);u=o;o=0;if(u&1){w=32;break}c[p>>2]=c[s>>2];c[q>>2]=c[j>>2];c[r>>2]=c[k>>2];o=0;c[h>>2]=c[p>>2];c[g>>2]=c[q>>2];c[f>>2]=c[r>>2];aa(45,i|0,h|0,g|0,f|0)|0;u=o;o=0;if(u&1){w=33;break}u=c[j>>2]|0;if(u|0){if((c[k>>2]|0)!=(u|0))c[k>>2]=u;mR(u)}if(((c[s>>2]|0)-(c[i>>2]|0)|0)>>>0>=m>>>0)break c}if((w|0)==32){u=Pa()|0;C=u;D=z}else if((w|0)==33){u=Pa()|0;v=z;E=c[j>>2]|0;if(!E){C=u;D=v}else{if((c[k>>2]|0)!=(E|0))c[k>>2]=E;mR(E);C=u;D=v}}x=C;y=D;break a}while(0);o=0;na(82,a|0,b|0,i|0);v=o;o=0;if(!(v&1)){v=c[i>>2]|0;if(!v){l=e;return}if((c[s>>2]|0)!=(v|0))c[s>>2]=v;mR(v);l=e;return}}while(0);m=Pa()|0;x=m;y=z}while(0);if((w|0)==17){x=A;y=B}B=c[i>>2]|0;if(!B)$a(x|0);if((c[s>>2]|0)!=(B|0))c[s>>2]=B;mR(B);$a(x|0)}function Kq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0;g=l;l=l+32|0;h=g+12|0;i=g;sr(h,e,f);o=0;ma(154,d|0,h|0);f=o;o=0;if(f&1){f=Pa()|0;j=z;k=c[h>>2]|0;if(k|0){m=h+4|0;if((c[m>>2]|0)!=(k|0))c[m>>2]=k;mR(k)}n=j;p=f;$a(p|0)}f=c[h>>2]|0;if(f|0){j=h+4|0;if((c[j>>2]|0)!=(f|0))c[j>>2]=f;mR(f)}a:do if(dd[c[c[b>>2]>>2]&255](b)|0){f=i+4|0;j=h+4|0;while(1){if(!(dd[c[c[d>>2]>>2]&255](d)|0))break a;sd[c[(c[b>>2]|0)+4>>2]&255](i,b);o=0;na(52,h|0,e|0,i|0);k=o;o=0;if(k&1){q=25;break}o=0;ma(154,d|0,h|0);k=o;o=0;if(k&1){q=26;break}k=c[h>>2]|0;if(k|0){if((c[j>>2]|0)!=(k|0))c[j>>2]=k;mR(k)}k=c[i>>2]|0;if(k|0){if((c[f>>2]|0)!=(k|0))c[f>>2]=k;mR(k)}if(!(dd[c[c[b>>2]>>2]&255](b)|0))break a}if((q|0)==25){k=Pa()|0;r=z;s=k}else if((q|0)==26){k=Pa()|0;m=z;t=c[h>>2]|0;if(!t){r=m;s=k}else{if((c[j>>2]|0)!=(t|0))c[j>>2]=t;mR(t);r=m;s=k}}k=c[i>>2]|0;if(k|0){if((c[f>>2]|0)!=(k|0))c[f>>2]=k;mR(k)}n=r;p=s;$a(p|0)}while(0);tr(h,e);o=0;ma(154,d|0,h|0);d=o;o=0;if(d&1){d=Pa()|0;e=z;s=c[h>>2]|0;if(s|0){r=h+4|0;if((c[r>>2]|0)!=(s|0))c[r>>2]=s;mR(s)}n=e;p=d;$a(p|0)}else{p=c[h>>2]|0;if(!p){nn(a);l=g;return}d=h+4|0;if((c[d>>2]|0)!=(p|0))c[d>>2]=p;mR(p);nn(a);l=g;return}}function Lq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=l;l=l+16|0;g=f;Jq(g,a,b);o=0;h=_(116,a|0,e|0)|0;e=o;o=0;if(!(e&1)?(o=0,pa(27,a|0,b|0,d|0,h|0,g|0),h=o,o=0,!(h&1)):0){h=c[g>>2]|0;if(!h){l=f;return}d=g+4|0;if((c[d>>2]|0)!=(h|0))c[d>>2]=h;mR(h);l=f;return}f=Pa()|0;h=c[g>>2]|0;if(!h)$a(f|0);d=g+4|0;if((c[d>>2]|0)!=(h|0))c[d>>2]=h;mR(h);$a(f|0)}function Mq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0;g=l;l=l+32|0;h=g+24|0;i=g+12|0;j=g;ap(h,Cq(b)|0);o=0;la(247,h|0);k=o;o=0;a:do if(!(k&1)){m=i+4|0;while(1){o=0;n=Z(c[c[d>>2]>>2]|0,d|0)|0;p=o;o=0;if(p&1)break a;if(!n){q=19;break}o=0;ma(c[(c[d>>2]|0)+4>>2]|0,i|0,d|0);n=o;o=0;if(n&1){q=13;break}o=0;ma(102,h|0,i|0);n=o;o=0;if(n&1){q=14;break}n=c[i>>2]|0;if(n|0){if((c[m>>2]|0)!=(n|0))c[m>>2]=n;mR(n)}}if((q|0)==13){n=Pa()|0;r=z;s=n}else if((q|0)==14){n=Pa()|0;p=z;t=c[i>>2]|0;if(!t){r=p;s=n}else{if((c[m>>2]|0)!=(t|0))c[m>>2]=t;mR(t);r=p;s=n}}else if((q|0)==19){o=0;ma(103,i|0,h|0);n=o;o=0;if(!(n&1)){o=0;pa(7,j|0,b|0,i|0,e|0,f|0);n=o;o=0;do if(n&1){p=Pa()|0;u=z;v=p}else{o=0;na(89,a|0,b|0,j|0);p=o;o=0;if(p&1){p=Pa()|0;t=z;w=c[j>>2]|0;if(!w){u=t;v=p;break}x=j+4|0;if((c[x>>2]|0)!=(w|0))c[x>>2]=w;mR(w);u=t;v=p;break}p=c[j>>2]|0;if(p|0){t=j+4|0;if((c[t>>2]|0)!=(p|0))c[t>>2]=p;mR(p)}p=c[i>>2]|0;if(!p){To(h);l=g;return}t=i+4|0;if((c[t>>2]|0)!=(p|0))c[t>>2]=p;mR(p);To(h);l=g;return}while(0);n=c[i>>2]|0;if(!n){y=u;A=v}else{m=i+4|0;if((c[m>>2]|0)!=(n|0))c[m>>2]=n;mR(n);y=u;A=v}}else{n=Pa()|0;y=z;A=n}B=y;C=A;To(h);$a(C|0)}B=r;C=s;To(h);$a(C|0)}while(0);s=Pa()|0;B=z;C=s;To(h);$a(C|0)}function Nq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0;f=l;l=l+48|0;g=f+24|0;h=f+16|0;i=f;Gq(g,a,d);o=0;d=Z(101,a|0)|0;j=o;o=0;if(!(j&1)?(o=0,ma(136,h|0,d|0),d=o,o=0,!(d&1)):0){o=0;la(247,h|0);d=o;o=0;a:do if(d&1)k=15;else{j=i+4|0;while(1){o=0;m=Z(c[c[b>>2]>>2]|0,b|0)|0;n=o;o=0;if(n&1){k=15;break a}if(!m){k=22;break}o=0;ma(c[(c[b>>2]|0)+4>>2]|0,i|0,b|0);m=o;o=0;if(m&1){k=16;break}o=0;ma(102,h|0,i|0);m=o;o=0;if(m&1){k=17;break}m=c[i>>2]|0;if(m|0){if((c[j>>2]|0)!=(m|0))c[j>>2]=m;mR(m)}}if((k|0)==16){m=Pa()|0;p=z;q=m}else if((k|0)==17){m=Pa()|0;n=z;r=c[i>>2]|0;if(!r){p=n;q=m}else{if((c[j>>2]|0)!=(r|0))c[j>>2]=r;mR(r);p=n;q=m}}else if((k|0)==22){o=0;ma(103,i|0,h|0);m=o;o=0;do if(m&1){n=Pa()|0;s=z;t=n}else{o=0;n=aa(24,a|0,i|0,g|0,e|0)|0;r=o;o=0;if(r&1){r=Pa()|0;u=z;v=c[i>>2]|0;if(!v){s=u;t=r;break}w=i+4|0;if((c[w>>2]|0)!=(v|0))c[w>>2]=v;mR(v);s=u;t=r;break}r=c[i>>2]|0;if(r|0){u=i+4|0;if((c[u>>2]|0)!=(r|0))c[u>>2]=r;mR(r)}To(h);r=c[g>>2]|0;if(!r){l=f;return n|0}u=g+4|0;if((c[u>>2]|0)!=(r|0))c[u>>2]=r;mR(r);l=f;return n|0}while(0);x=s;y=t;break}x=p;y=q}while(0);if((k|0)==15){k=Pa()|0;x=z;y=k}To(h);A=x;B=y}else{y=Pa()|0;A=z;B=y}y=c[g>>2]|0;if(!y)$a(B|0);A=g+4|0;if((c[A>>2]|0)!=(y|0))c[A>>2]=y;mR(y);$a(B|0);return 0}function Oq(a){a=a|0;var b=0;c[a>>2]=10200;b=a+4|0;a=c[b>>2]|0;c[b>>2]=0;if(!a)return;Wq(a);mR(a);return}function Pq(a){a=a|0;var b=0,d=0;c[a>>2]=10200;b=a+4|0;d=c[b>>2]|0;c[b>>2]=0;if(!d){mR(a);return}Wq(d);mR(d);mR(a);return}function Qq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;f=l;l=l+32|0;g=f+8|0;h=f+4|0;i=f;j=b+4|0;b=c[j>>2]|0;if(!(c[c[b>>2]>>2]|0)){k=Ja(24)|0;o=0;ma(143,k|0,14);m=o;o=0;if(m&1){m=Pa()|0;Sa(k|0);$a(m|0)}else Xa(k|0,4424,56)}c[h>>2]=0;k=c[b>>2]|0;if((k|0)!=0?(b=c[k>>2]|0,(b|0)!=0):0)n=c[b>>2]|0;else n=0;b=Dz(n,h,i)|0;if((b|0)<=-1){n=Ja(24)|0;k=xr()|0;o=0;na(71,n|0,b|0,k|0);k=o;o=0;if(k&1){k=Qa(0)|0;Sa(n|0);p=k}else{o=0;na(72,n|0,4424,56);o=0;n=Qa(0)|0;p=n}Ka(p|0)|0;p=fo()|0;o=0;na(71,g|0,16,p|0);p=o;o=0;if(p&1){p=Pa()|0;q=z;r=p}else{o=0;ma(144,g|0,0);o=0;p=Pa()|0;n=z;c[g>>2]=10036;k=g+12|0;if((a[k+11>>0]|0)<0)mR(c[k>>2]|0);q=n;r=p}o=0;ka(3);p=o;o=0;if(p&1){p=Qa(0)|0;Id(p)}else $a(r|0)}r=ot(d,(c[j>>2]|0)+4|0)|0;j=c[h>>2]|0;h=c[i>>2]|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;if(h>>>0>4294967279)vR(g);if(h>>>0<11){a[g+11>>0]=h;if(!h)s=g;else{t=g;u=25}}else{i=h+16&-16;p=kR(i)|0;c[g>>2]=p;c[g+8>>2]=i|-2147483648;c[g+4>>2]=h;t=p;u=25}if((u|0)==25){CT(t|0,j|0,h|0)|0;s=t}a[s+h>>0]=0;o=0;h=_(95,d|0,g|0)|0;s=o;o=0;if(s&1){s=Pa()|0;if((a[g+11>>0]|0)>=0)$a(s|0);mR(c[g>>2]|0);$a(s|0)}else{s=h+r|0;if((a[g+11>>0]|0)>=0){v=wt(d,s)|0;w=s+e|0;x=w+v|0;l=f;return x|0}mR(c[g>>2]|0);v=wt(d,s)|0;w=s+e|0;x=w+v|0;l=f;return x|0}return 0}function Rq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0;e=l;l=l+64|0;f=e+32|0;g=e+16|0;h=e+4|0;i=e;et(d)|0;dt(f,d);o=0;ma(91,g|0,f|0);j=o;o=0;if(j&1){j=Pa()|0;k=z;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);m=k;n=j;$a(n|0)}if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);j=c[g>>2]|0;c[h+8>>2]=j;k=g+4|0;c[h+4>>2]=(c[k>>2]|0)-j;c[i>>2]=0;o=0;j=_(125,h|0,i|0)|0;h=o;o=0;do if(!(h&1)){if((j|0)<=-1){p=Ja(24)|0;q=xr()|0;o=0;na(71,p|0,j|0,q|0);q=o;o=0;if(q&1){q=Qa(0)|0;Sa(p|0);r=q}else{o=0;na(72,p|0,4424,56);o=0;p=Qa(0)|0;r=p}Ka(r|0)|0;p=fo()|0;o=0;na(71,f|0,16,p|0);p=o;o=0;if(p&1){p=Pa()|0;s=z;t=p}else{o=0;ma(144,f|0,0);o=0;p=Pa()|0;q=z;c[f>>2]=10036;u=f+12|0;if((a[u+11>>0]|0)<0)mR(c[u>>2]|0);s=q;t=p}o=0;ka(3);p=o;o=0;if(!(p&1)){v=s;w=t;x=33;break}p=Qa(0)|0;Id(p)}o=0;la(258,b|0);p=o;o=0;if(!(p&1)?(o=0,ma(174,c[c[b+4>>2]>>2]|0,c[i>>2]|0),p=o,o=0,!(p&1)):0){o=0;ma(171,f|0,d|0);p=o;o=0;do if(p&1){q=Pa()|0;y=z;A=q}else{o=0;ma(115,b|0,f|0);q=o;o=0;if(q&1){q=Pa()|0;u=z;B=c[f>>2]|0;if(!B){y=u;A=q;break}C=f+4|0;if((c[C>>2]|0)!=(B|0))c[C>>2]=B;mR(B);y=u;A=q;break}q=c[f>>2]|0;if(q|0){u=f+4|0;if((c[u>>2]|0)!=(q|0))c[u>>2]=q;mR(q)}q=c[g>>2]|0;if(!q){l=e;return}if((c[k>>2]|0)!=(q|0))c[k>>2]=q;mR(q);l=e;return}while(0);D=y;E=A}else x=32}else x=32;while(0);if((x|0)==32){A=Pa()|0;v=z;w=A;x=33}if((x|0)==33){D=v;E=w}w=c[g>>2]|0;if(!w){m=D;n=E;$a(n|0)}if((c[k>>2]|0)!=(w|0))c[k>>2]=w;mR(w);m=D;n=E;$a(n|0)}function Sq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;b=a+4|0;a=c[b>>2]|0;d=c[a>>2]|0;if((d|0)!=0?(e=c[d>>2]|0,(e|0)!=0):0)f=c[e>>2]|0;else f=0;gw(d);d=kR(64)|0;e=d;g=e+64|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(g|0));e=c[a>>2]|0;c[a>>2]=d;if(!e)h=d;else{mR(e);h=c[a>>2]|0}fw(h);h=c[b>>2]|0;a=c[h+4>>2]|0;e=h+8|0;if((c[e>>2]|0)==(a|0))i=h;else{c[e>>2]=a;i=c[b>>2]|0}a=c[i+16>>2]|0;e=i+20|0;if((c[e>>2]|0)==(a|0))j=i;else{c[e>>2]=a;j=c[b>>2]|0}zr(j+28|0,0);if(!f)return;Tq(c[c[b>>2]>>2]|0,f);return}function Tq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;e=l;l=l+16|0;f=e;g=cw(d)|0;if(g|0){h=hw(b,g)|0;a[f>>0]=a[e+12>>0]|0;Vq(h,f)|0;l=e;return}e=Ja(24)|0;a:do switch(d|0){case 0:{h=f+4|0;g=h;c[g>>2]=0;c[g+4>>2]=0;a[f+11>>0]=4;c[f>>2]=1162760014;i=h;break}case 1:{h=f+4|0;g=h;c[g>>2]=0;c[g+4>>2]=0;a[f+11>>0]=4;c[f>>2]=1280070990;i=h;break}case 2:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,16)|0;g=o;o=0;if(g&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=h;n=72784;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+11|0;break a}break}case 3:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=g;n=72796;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+11|0;break a}break}case 4:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=h;n=72808;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+11|0;break a}break}case 5:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=g;n=72820;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+11|0;break a}break}case 6:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=h;n=72832;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+11|0;break a}break}case 7:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=g;n=72844;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+11|0;break a}break}case 8:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483632;c[f+4>>2]=14;m=h;n=72856;p=m+14|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+14|0;break a}break}case 9:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483632;c[f+4>>2]=14;m=g;n=72871;p=m+14|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+14|0;break a}break}case 10:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483632;c[f+4>>2]=14;m=h;n=72886;p=m+14|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+14|0;break a}break}case 11:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=g;n=72901;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+11|0;break a}break}case 12:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=h;n=72913;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+11|0;break a}break}case 13:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=g;n=72925;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+11|0;break a}break}case 14:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=h;n=72937;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+11|0;break a}break}case 15:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=g;n=72949;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+11|0;break a}break}case 16:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=h;n=72961;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+11|0;break a}break}case 17:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483616;c[f+4>>2]=16;m=g;n=72973;p=m+16|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+16|0;break a}break}case 18:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483616;c[f+4>>2]=16;m=h;n=72990;p=m+16|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+16|0;break a}break}case 19:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483616;c[f+4>>2]=16;m=g;n=73007;p=m+16|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+16|0;break a}break}case 20:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483616;c[f+4>>2]=16;m=h;n=73024;p=m+16|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+16|0;break a}break}case 21:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483616;c[f+4>>2]=16;m=g;n=73041;p=m+16|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+16|0;break a}break}case 22:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483616;c[f+4>>2]=16;m=h;n=73058;p=m+16|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+16|0;break a}break}case 23:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483616;c[f+4>>2]=19;m=g;n=73075;p=m+19|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+19|0;break a}break}case 24:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483616;c[f+4>>2]=19;m=h;n=73095;p=m+19|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+19|0;break a}break}case 25:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483616;c[f+4>>2]=19;m=g;n=73115;p=m+19|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+19|0;break a}break}case 26:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483616;c[f+4>>2]=16;m=h;n=73135;p=m+16|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+16|0;break a}break}case 27:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483616;c[f+4>>2]=16;m=g;n=73152;p=m+16|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+16|0;break a}break}case 28:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483616;c[f+4>>2]=16;m=h;n=73169;p=m+16|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+16|0;break a}break}case 29:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483616;c[f+4>>2]=16;m=g;n=73186;p=m+16|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+16|0;break a}break}case 30:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483616;c[f+4>>2]=16;m=h;n=73203;p=m+16|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+16|0;break a}break}case 31:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483616;c[f+4>>2]=16;m=g;n=73220;p=m+16|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+16|0;break a}break}case 32:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=7;a[f>>0]=a[73237]|0;a[f+1>>0]=a[73238]|0;a[f+2>>0]=a[73239]|0;a[f+3>>0]=a[73240]|0;a[f+4>>0]=a[73241]|0;a[f+5>>0]=a[73242]|0;a[f+6>>0]=a[73243]|0;i=f+7|0;break}case 33:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=7;a[f>>0]=a[73245]|0;a[f+1>>0]=a[73246]|0;a[f+2>>0]=a[73247]|0;a[f+3>>0]=a[73248]|0;a[f+4>>0]=a[73249]|0;a[f+5>>0]=a[73250]|0;a[f+6>>0]=a[73251]|0;i=f+7|0;break}case 34:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=h;n=73253;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+11|0;break a}break}case 35:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=g;n=73265;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+11|0;break a}break}case 36:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483632;c[f+4>>2]=12;m=h;n=73277;p=m+12|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+12|0;break a}break}case 37:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483632;c[f+4>>2]=12;m=g;n=73290;p=m+12|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+12|0;break a}break}case 38:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483632;c[f+4>>2]=12;m=h;n=73303;p=m+12|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+12|0;break a}break}case 39:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483632;c[f+4>>2]=12;m=g;n=73316;p=m+12|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+12|0;break a}break}case 40:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483632;c[f+4>>2]=14;m=h;n=73329;p=m+14|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+14|0;break a}break}case 41:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483632;c[f+4>>2]=12;m=g;n=73344;p=m+12|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+12|0;break a}break}case 42:{h=f+8|0;c[h>>2]=0;a[f+11>>0]=8;b=f;c[b>>2]=876827201;c[b+4>>2]=942813535;i=h;break}case 43:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=h;n=73357;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+11|0;break a}break}case 44:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=g;n=73369;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+11|0;break a}break}case 45:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,16)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483632;c[f+4>>2]=11;m=h;n=73381;p=m+11|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+11|0;break a}break}case 46:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483616;c[f+4>>2]=16;m=g;n=73393;p=m+16|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+16|0;break a}break}case 47:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;h=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=h;c[f+8>>2]=-2147483616;c[f+4>>2]=16;m=h;n=73410;p=m+16|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=h+16|0;break a}break}case 48:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=0;g=Z(209,32)|0;b=o;o=0;if(b&1){j=Qa(0)|0;k=z;Id(j)}else{c[f>>2]=g;c[f+8>>2]=-2147483616;c[f+4>>2]=16;m=g;n=73427;p=m+16|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=g+16|0;break a}break}default:{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+11>>0]=9;m=f;n=75512;p=m+9|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(p|0));i=f+9|0}}while(0);a[i>>0]=0;i=fo()|0;o=0;oa(37,e|0,16,i|0,f|0);i=o;o=0;if(i&1)q=1;else{o=0;na(72,e|0,4424,56);o=0;q=0}i=Pa()|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);if(!q)$a(i|0);Sa(e|0);$a(i|0)}function Uq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+32|0;f=e;g=b+4|0;b=c[c[g>>2]>>2]|0;if(!(c[b>>2]|0)){h=Ja(24)|0;o=0;ma(143,h|0,14);i=o;o=0;if(i&1){i=Pa()|0;Sa(h|0);$a(i|0)}else Xa(h|0,4424,56)}h=c[d>>2]|0;i=d+4|0;j=tw(b,h,(c[i>>2]|0)-h|0)|0;if((j|0)>-1){h=(c[g>>2]|0)+4|0;if((h|0)==(d|0)){l=e;return}Dn(h,c[d>>2]|0,c[i>>2]|0);l=e;return}e=Ja(24)|0;i=xr()|0;o=0;na(71,e|0,j|0,i|0);i=o;o=0;if(i&1){i=Qa(0)|0;Sa(e|0);k=i}else{o=0;na(72,e|0,4424,56);o=0;e=Qa(0)|0;k=e}Ka(k|0)|0;k=fo()|0;o=0;oa(40,f|0,3,k|0,72745);k=o;o=0;if(k&1){k=Pa()|0;m=z;n=k}else{o=0;ma(144,f|0,0);o=0;k=Pa()|0;e=z;c[f>>2]=10036;i=f+12|0;if((a[i+11>>0]|0)<0)mR(c[i>>2]|0);m=e;n=k}o=0;ka(3);k=o;o=0;if(k&1){k=Qa(0)|0;Id(k)}else $a(n|0)}function Vq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;d=l;l=l+32|0;e=d;if((b|0)>-1){l=d;return b|0}d=Ja(24)|0;f=xr()|0;o=0;na(71,d|0,b|0,f|0);f=o;o=0;if(f&1){f=Qa(0)|0;Sa(d|0);g=f}else{o=0;na(72,d|0,4424,56);o=0;d=Qa(0)|0;g=d}Ka(g|0)|0;g=fo()|0;o=0;na(71,e|0,3,g|0);g=o;o=0;if(g&1){g=Pa()|0;h=z;i=g}else{o=0;ma(144,e|0,0);o=0;g=Pa()|0;d=z;c[e>>2]=10036;f=e+12|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);h=d;i=g}o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}else $a(i|0);return 0}function Wq(a){a=a|0;var b=0,d=0;b=c[a+44>>2]|0;if(b|0){d=a+48|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+32>>2]|0;if(b|0){d=a+36|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+16>>2]|0;if(b|0){d=a+20|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+4>>2]|0;if(b|0){d=a+8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}o=0;la(298,c[a>>2]|0);b=o;o=0;if(b&1){b=Qa(0)|0;d=c[a>>2]|0;c[a>>2]=0;if(!d)Id(b);mR(d);Id(b)}else{b=c[a>>2]|0;c[a>>2]=0;if(!b)return;mR(b);return}}function Xq(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=10200;b=kR(56)|0;d=b;e=d+56|0;do{c[d>>2]=0;d=d+4|0}while((d|0)<(e|0));o=0;la(299,b|0);d=o;o=0;if(d&1){d=Pa()|0;mR(b);$a(d|0)}else{c[a+4>>2]=b;return}}function Yq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;o=0;b=Z(209,64)|0;d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}d=b;e=d+64|0;do{c[d>>2]=0;d=d+4|0}while((d|0)<(e|0));c[a>>2]=b;o=0;la(300,b|0);b=o;o=0;if(b&1){b=Qa(0)|0;d=c[a>>2]|0;c[a>>2]=0;if(!d)Id(b);mR(d);Id(b)}b=a+4|0;d=a+8|0;e=a+20|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;o=0;la(301,a+28|0);f=o;o=0;if(!(f&1))return;f=Pa()|0;g=c[a+16>>2]|0;if(g|0){if((c[e>>2]|0)!=(g|0))c[e>>2]=g;mR(g)}g=c[b>>2]|0;if(g|0){if((c[d>>2]|0)!=(g|0))c[d>>2]=g;mR(g)}o=0;la(298,c[a>>2]|0);g=o;o=0;if(g&1){g=Qa(0)|0;d=c[a>>2]|0;c[a>>2]=0;if(!d)Id(g);mR(d);Id(g)}else{g=c[a>>2]|0;c[a>>2]=0;if(!g)$a(f|0);mR(g);$a(f|0)}}function Zq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0;c[b>>2]=10200;e=b+4|0;o=0;b=Z(209,56)|0;f=o;o=0;do if(f&1){g=Pa()|0;h=z;i=g}else{g=b;j=g+56|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(j|0));o=0;la(299,b|0);k=o;o=0;if(k&1){k=Pa()|0;l=z;mR(b);h=l;i=k;break}c[e>>2]=b;switch(d|0){case 0:{o=0;k=Z(209,16)|0;l=o;o=0;if(l&1)m=18;else{g=k;n=83620;j=g+11|0;do{a[g>>0]=a[n>>0]|0;g=g+1|0;n=n+1|0}while((g|0)<(j|0));p=k;m=14}break}case 1:{o=0;l=Z(209,16)|0;q=o;o=0;if(q&1)m=18;else{g=l;n=83689;j=g+11|0;do{a[g>>0]=a[n>>0]|0;g=g+1|0;n=n+1|0}while((g|0)<(j|0));p=l;m=14}break}case 2:{o=0;k=Z(209,16)|0;q=o;o=0;if(q&1)m=18;else{g=k;n=83666;j=g+11|0;do{a[g>>0]=a[n>>0]|0;g=g+1|0;n=n+1|0}while((g|0)<(j|0));p=k;m=14}break}case 3:{o=0;l=Z(209,16)|0;q=o;o=0;if(q&1)m=18;else{g=l;n=83735;j=g+11|0;do{a[g>>0]=a[n>>0]|0;g=g+1|0;n=n+1|0}while((g|0)<(j|0));p=l;m=14}break}default:{}}do if((m|0)==14){a[p+11>>0]=0;o=0;ma(175,c[b>>2]|0,p|0);g=o;o=0;if(g&1){g=Pa()|0;j=z;mR(p);r=j;s=g;break}else{mR(p);return}}else if((m|0)==18){g=Pa()|0;r=z;s=g}while(0);l=c[e>>2]|0;c[e>>2]=0;if(!l){t=r;u=s;$a(u|0)}Wq(l);mR(l);t=r;u=s;$a(u|0)}while(0);t=h;u=i;$a(u|0)}function _q(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=l;l=l+16|0;e=d+1|0;f=dw(c)|0;if(f|0){g=hw(b,f)|0;a[e>>0]=a[d>>0]|0;$q(g,e)|0;l=d;return}d=Ja(24)|0;o=0;na(73,d|0,16,c|0);c=o;o=0;if(c&1){c=Pa()|0;Sa(d|0);$a(c|0)}else Xa(d|0,4424,56)}function $q(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;d=l;l=l+32|0;e=d;if((b|0)>-1){l=d;return b|0}d=Ja(24)|0;f=xr()|0;o=0;na(71,d|0,b|0,f|0);f=o;o=0;if(f&1){f=Qa(0)|0;Sa(d|0);g=f}else{o=0;na(72,d|0,4424,56);o=0;d=Qa(0)|0;g=d}Ka(g|0)|0;g=fo()|0;o=0;na(71,e|0,3,g|0);g=o;o=0;if(g&1){g=Pa()|0;h=z;i=g}else{o=0;ma(144,e|0,0);o=0;g=Pa()|0;d=z;c[e>>2]=10036;f=e+12|0;if((a[f+11>>0]|0)<0)mR(c[f>>2]|0);h=d;i=g}o=0;ka(3);g=o;o=0;if(g&1){g=Qa(0)|0;Id(g)}else $a(i|0);return 0}function ar(a,b){a=a|0;b=b|0;var d=0,e=0;d=a+4|0;e=b+4|0;b=c[e>>2]|0;c[e>>2]=0;e=c[d>>2]|0;c[d>>2]=b;if(!e)return a|0;Wq(e);mR(e);return a|0}function br(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=c[c[d+4>>2]>>2]|0;d=c[e>>2]|0;if(!d){f=Ja(24)|0;o=0;ma(143,f|0,14);g=o;o=0;if(g&1){g=Pa()|0;Sa(f|0);$a(g|0)}else Xa(f|0,4424,56)}if(!e)h=0;else h=c[d+12>>2]|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;d=$F(h)|0;if(d>>>0>4294967279)vR(b);if(d>>>0<11){a[b+11>>0]=d;if(!d){i=b;j=i+d|0;a[j>>0]=0;return}else k=b}else{e=d+16&-16;f=kR(e)|0;c[b>>2]=f;c[b+8>>2]=e|-2147483648;c[b+4>>2]=d;k=f}CT(k|0,h|0,d|0)|0;i=k;j=i+d|0;a[j>>0]=0;return}function cr(a){a=a|0;var b=0,d=0,e=0,f=0;b=c[c[a+4>>2]>>2]|0;a=c[b>>2]|0;if(!a){d=Ja(24)|0;o=0;ma(143,d|0,14);e=o;o=0;if(e&1){e=Pa()|0;Sa(d|0);$a(e|0)}else Xa(d|0,4424,56)}if(!b){f=0;return f|0}f=c[a+24>>2]|0;return f|0}function dr(a){a=a|0;var b=0,d=0,e=0,f=0;b=c[c[a+4>>2]>>2]|0;a=c[b>>2]|0;if(!a){d=Ja(24)|0;o=0;ma(143,d|0,14);e=o;o=0;if(e&1){e=Pa()|0;Sa(d|0);$a(e|0)}else Xa(d|0,4424,56)}if(!b){f=0;return f|0}d=c[b+56>>2]|0;if(d|0){f=d;return f|0}f=c[a+16>>2]|0;return f|0}function er(a){a=a|0;var b=0,d=0,e=0,f=0;b=c[c[a+4>>2]>>2]|0;a=c[b>>2]|0;if(!a){d=Ja(24)|0;o=0;ma(143,d|0,14);e=o;o=0;if(e&1){e=Pa()|0;Sa(d|0);$a(e|0)}else Xa(d|0,4424,56)}if(!b){f=0;return f|0}f=c[a+8>>2]|0;return f|0}function fr(a){a=a|0;var b=0,d=0,e=0,f=0;b=c[c[a+4>>2]>>2]|0;a=c[b>>2]|0;if(!a){d=Ja(24)|0;o=0;ma(143,d|0,14);e=o;o=0;if(e&1){e=Pa()|0;Sa(d|0);$a(e|0)}else Xa(d|0,4424,56)}if(!b){f=0;return f|0}f=((c[a+8>>2]|0)+7|0)>>>3;return f|0}function gr(a){a=a|0;var b=0,d=0,e=0,f=0;b=c[c[a+4>>2]>>2]|0;a=c[b>>2]|0;if(!a){d=Ja(24)|0;o=0;ma(143,d|0,14);e=o;o=0;if(e&1){e=Pa()|0;Sa(d|0);$a(e|0)}else Xa(d|0,4424,56)}if(!b){f=0;return f|0}f=(c[a+4>>2]|0)==6?16:0;return f|0}function hr(a){a=a|0;var b=0,d=0,e=0;b=c[c[a+4>>2]>>2]|0;if(!(c[b>>2]|0)){a=Ja(24)|0;o=0;ma(143,a|0,14);d=o;o=0;if(d&1){d=Pa()|0;Sa(a|0);$a(d|0)}else Xa(a|0,4424,56)}if(!b){e=0;return e|0}e=(c[b+8>>2]|0)==1;return e|0}function ir(a){a=a|0;var b=0,d=0,e=0;b=c[c[a+4>>2]>>2]|0;if(!(c[b>>2]|0)){a=Ja(24)|0;o=0;ma(143,a|0,14);d=o;o=0;if(d&1){d=Pa()|0;Sa(a|0);$a(d|0)}else Xa(a|0,4424,56)}if(!b){e=0;return e|0}e=(c[b+8>>2]|0)==0;return e|0}function jr(a){a=a|0;var b=0,d=0,e=0,f=0;b=c[c[a+4>>2]>>2]|0;a=c[b>>2]|0;if(!a){d=Ja(24)|0;o=0;ma(143,d|0,14);e=o;o=0;if(e&1){e=Pa()|0;Sa(d|0);$a(e|0)}else Xa(d|0,4424,56)}if(!b){f=0;return f|0}f=(c[a+4>>2]|0)==6;return f|0}function kr(a){a=a|0;var b=0,d=0,e=0,f=0;b=c[c[a+4>>2]>>2]|0;a=c[b>>2]|0;if(!a){d=Ja(24)|0;o=0;ma(143,d|0,14);e=o;o=0;if(e&1){e=Pa()|0;Sa(d|0);$a(e|0)}else Xa(d|0,4424,56)}if(!b){f=0;return f|0}f=(c[a+4>>2]|0)==2;return f|0}function lr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[b+4>>2]|0;if(!(c[c[d>>2]>>2]|0)){b=Ja(24)|0;o=0;ma(143,b|0,14);e=o;o=0;if(e&1){e=Pa()|0;Sa(b|0);$a(e|0)}else Xa(b|0,4424,56)}b=d+4|0;c[a>>2]=0;e=a+4|0;c[e>>2]=0;c[a+8>>2]=0;f=d+8|0;d=(c[f>>2]|0)-(c[b>>2]|0)|0;if(!d)return;if((d|0)>=0){o=0;g=Z(209,d|0)|0;h=o;o=0;if(!(h&1)){c[e>>2]=g;c[a>>2]=g;c[a+8>>2]=g+d;d=c[b>>2]|0;b=(c[f>>2]|0)-d|0;if((b|0)<=0)return;CT(g|0,d|0,b|0)|0;c[e>>2]=g+b;return}}else{o=0;la(271,a|0);o=0}b=Pa()|0;g=c[a>>2]|0;if(!g)$a(b|0);if((c[e>>2]|0)!=(g|0))c[e>>2]=g;mR(g);$a(b|0)}function mr(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=l;l=l+32|0;f=e;g=c[c[b+4>>2]>>2]|0;if(!(c[g>>2]|0)){b=Ja(24)|0;o=0;ma(143,b|0,14);h=o;o=0;if(h&1){h=Pa()|0;Sa(b|0);$a(h|0)}else Xa(b|0,4424,56)}b=c[d>>2]|0;h=sw(g,b,(c[d+4>>2]|0)-b<<3,1)|0;if((h|0)>-1){l=e;return}e=Ja(24)|0;b=xr()|0;o=0;na(71,e|0,h|0,b|0);b=o;o=0;if(b&1){b=Qa(0)|0;Sa(e|0);i=b}else{o=0;na(72,e|0,4424,56);o=0;e=Qa(0)|0;i=e}Ka(i|0)|0;i=fo()|0;o=0;oa(40,f|0,3,i|0,73496);i=o;o=0;if(i&1){i=Pa()|0;j=z;k=i}else{o=0;ma(144,f|0,0);o=0;i=Pa()|0;e=z;c[f>>2]=10036;b=f+12|0;if((a[b+11>>0]|0)<0)mR(c[b>>2]|0);j=e;k=i}o=0;ka(3);i=o;o=0;if(i&1){i=Qa(0)|0;Id(i)}else $a(k|0)}function nr(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=l;l=l+32|0;f=e;g=c[c[b+4>>2]>>2]|0;if(!(c[g>>2]|0)){b=Ja(24)|0;o=0;ma(143,b|0,14);h=o;o=0;if(h&1){h=Pa()|0;Sa(b|0);$a(h|0)}else Xa(b|0,4424,56)}b=c[d>>2]|0;h=sw(g,b,(c[d+4>>2]|0)-b<<3,0)|0;if((h|0)>-1){l=e;return}e=Ja(24)|0;b=xr()|0;o=0;na(71,e|0,h|0,b|0);b=o;o=0;if(b&1){b=Qa(0)|0;Sa(e|0);i=b}else{o=0;na(72,e|0,4424,56);o=0;e=Qa(0)|0;i=e}Ka(i|0)|0;i=fo()|0;o=0;oa(40,f|0,3,i|0,73530);i=o;o=0;if(i&1){i=Pa()|0;j=z;k=i}else{o=0;ma(144,f|0,0);o=0;i=Pa()|0;e=z;c[f>>2]=10036;b=f+12|0;if((a[b+11>>0]|0)<0)mR(c[b>>2]|0);j=e;k=i}o=0;ka(3);i=o;o=0;if(i&1){i=Qa(0)|0;Id(i)}else $a(k|0)}function or(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=l;l=l+32|0;f=e;g=c[c[b+4>>2]>>2]|0;if(!(c[g>>2]|0)){b=Ja(24)|0;o=0;ma(143,b|0,14);h=o;o=0;if(h&1){h=Pa()|0;Sa(b|0);$a(h|0)}else Xa(b|0,4424,56)}b=kw(g,d)|0;if((b|0)>-1){l=e;return}e=Ja(24)|0;d=xr()|0;o=0;na(71,e|0,b|0,d|0);d=o;o=0;if(d&1){d=Qa(0)|0;Sa(e|0);i=d}else{o=0;na(72,e|0,4424,56);o=0;e=Qa(0)|0;i=e}Ka(i|0)|0;i=fo()|0;o=0;na(71,f|0,16,i|0);i=o;o=0;if(i&1){i=Pa()|0;j=z;k=i}else{o=0;ma(144,f|0,0);o=0;i=Pa()|0;e=z;c[f>>2]=10036;d=f+12|0;if((a[d+11>>0]|0)<0)mR(c[d>>2]|0);j=e;k=i}o=0;ka(3);i=o;o=0;if(i&1){i=Qa(0)|0;Id(i)}else $a(k|0)}function pr(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[a+4>>2]|0;if(!(c[c[d>>2]>>2]|0)){a=Ja(24)|0;o=0;ma(143,a|0,14);e=o;o=0;if(e&1){e=Pa()|0;Sa(a|0);$a(e|0)}else Xa(a|0,4424,56)}a=d+16|0;if((a|0)==(b|0))return;Dn(a,c[b>>2]|0,c[b+4>>2]|0);return}function qr(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0;d=l;l=l+32|0;e=d;f=b+4|0;b=c[c[f>>2]>>2]|0;if(!(c[b>>2]|0)){g=Ja(24)|0;o=0;ma(143,g|0,14);h=o;o=0;if(h&1){h=Pa()|0;Sa(g|0);$a(h|0)}else Xa(g|0,4424,56)}g=uw(b)|0;if((g|0)<=-1){b=Ja(24)|0;h=xr()|0;o=0;na(71,b|0,g|0,h|0);h=o;o=0;if(h&1){h=Qa(0)|0;Sa(b|0);i=h}else{o=0;na(72,b|0,4424,56);o=0;b=Qa(0)|0;i=b}Ka(i|0)|0;i=fo()|0;o=0;na(71,e|0,9,i|0);i=o;o=0;if(i&1){i=Pa()|0;j=z;k=i}else{o=0;ma(144,e|0,0);o=0;i=Pa()|0;b=z;c[e>>2]=10036;h=e+12|0;if((a[h+11>>0]|0)<0)mR(c[h>>2]|0);j=b;k=i}o=0;ka(3);i=o;o=0;if(i&1){i=Qa(0)|0;Id(i)}else $a(k|0)}k=c[f>>2]|0;i=c[k>>2]|0;if(!i){l=d;return}b=c[i>>2]|0;if(!b){l=d;return}if((c[b+4>>2]|0)!=6){l=d;return}b=c[k+16>>2]|0;j=vw(i,b,(c[k+20>>2]|0)-b|0)|0;if((j|0)>-1){b=c[f>>2]|0;f=c[b>>2]|0;k=c[f>>2]|0;if(!k){i=Ja(24)|0;o=0;ma(143,i|0,14);h=o;o=0;if(h&1){h=Pa()|0;Sa(i|0);$a(h|0)}else Xa(i|0,4424,56)}if(!f){l=d;return}if(c[f+8>>2]|0){l=d;return}zr(b+28|0,c[k+24>>2]|0);l=d;return}d=Ja(24)|0;k=xr()|0;o=0;na(71,d|0,j|0,k|0);k=o;o=0;if(k&1){k=Qa(0)|0;Sa(d|0);m=k}else{o=0;na(72,d|0,4424,56);o=0;d=Qa(0)|0;m=d}Ka(m|0)|0;m=fo()|0;o=0;na(71,e|0,3,m|0);m=o;o=0;if(m&1){m=Pa()|0;n=z;p=m}else{o=0;ma(144,e|0,0);o=0;m=Pa()|0;d=z;c[e>>2]=10036;k=e+12|0;if((a[k+11>>0]|0)<0)mR(c[k>>2]|0);n=d;p=m}o=0;ka(3);m=o;o=0;if(m&1){m=Qa(0)|0;Id(m)}else $a(p|0)}function rr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=l;l=l+64|0;g=f+56|0;h=f+52|0;i=f+48|0;j=f+28|0;k=f+16|0;m=f+44|0;n=f+40|0;p=f+12|0;q=f+8|0;r=f+4|0;s=f;if(!(c[c[c[b+4>>2]>>2]>>2]|0)){t=Ja(24)|0;o=0;ma(143,t|0,14);u=o;o=0;if(u&1){u=Pa()|0;Sa(t|0);$a(u|0)}else Xa(t|0,4424,56)}Uq(b,e);qr(b);sr(j,b,d);o=0;ma(121,k|0,b|0);b=o;o=0;if(!(b&1)){c[a>>2]=0;b=a+4|0;c[b>>2]=0;c[a+8>>2]=0;c[m>>2]=0;c[n>>2]=c[j>>2];d=j+4|0;c[p>>2]=c[d>>2];o=0;c[i>>2]=c[m>>2];c[h>>2]=c[n>>2];c[g>>2]=c[p>>2];aa(45,a|0,i|0,h|0,g|0)|0;p=o;o=0;if(!(p&1)?(c[q>>2]=c[b>>2],c[r>>2]=c[k>>2],p=k+4|0,c[s>>2]=c[p>>2],o=0,c[i>>2]=c[q>>2],c[h>>2]=c[r>>2],c[g>>2]=c[s>>2],aa(45,a|0,i|0,h|0,g|0)|0,g=o,o=0,!(g&1)):0){g=c[k>>2]|0;if(g|0){if((c[p>>2]|0)!=(g|0))c[p>>2]=g;mR(g)}g=c[j>>2]|0;if(!g){l=f;return}if((c[d>>2]|0)!=(g|0))c[d>>2]=g;mR(g);l=f;return}f=Pa()|0;g=z;d=c[a>>2]|0;if(d|0){if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d)}d=c[k>>2]|0;if(!d){v=f;w=g}else{b=k+4|0;if((c[b>>2]|0)!=(d|0))c[b>>2]=d;mR(d);v=f;w=g}}else{g=Pa()|0;v=g;w=z}w=c[j>>2]|0;if(!w)$a(v|0);g=j+4|0;if((c[g>>2]|0)!=(w|0))c[g>>2]=w;mR(w);$a(v|0)}function sr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=l;l=l+64|0;g=f+32|0;h=f+8|0;i=f;j=d+4|0;d=c[j>>2]|0;k=c[d>>2]|0;m=c[k>>2]|0;if(!m){n=Ja(24)|0;o=0;ma(143,n|0,14);p=o;o=0;if(p&1){p=Pa()|0;Sa(n|0);$a(p|0)}else Xa(n|0,4424,56)}c[i>>2]=0;n=e+4|0;if(!k)q=0;else q=c[m+24>>2]|0;m=q+((c[n>>2]|0)-(c[e>>2]|0))|0;c[b>>2]=0;q=b+4|0;c[q>>2]=0;c[b+8>>2]=0;do if(!m)r=d;else{if((m|0)>=0){o=0;k=Z(209,m|0)|0;p=o;o=0;if(!(p&1)){c[q>>2]=k;c[b>>2]=k;c[b+8>>2]=k+m;p=m;s=k;do{a[s>>0]=0;s=(c[q>>2]|0)+1|0;c[q>>2]=s;p=p+-1|0}while((p|0)!=0);r=c[j>>2]|0;break}}else{o=0;la(271,b|0);o=0}p=Pa()|0;s=c[b>>2]|0;if(!s)$a(p|0);if((c[q>>2]|0)!=(s|0))c[q>>2]=s;mR(s);$a(p|0)}while(0);m=c[r>>2]|0;d=c[m>>2]|0;a:do if(!d){p=Ja(24)|0;s=fo()|0;o=0;na(71,p|0,14,s|0);s=o;o=0;if(s&1){s=Pa()|0;k=z;Sa(p|0);t=k;u=s;v=48;break}else{o=0;na(72,p|0,4424,56);o=0;v=47;break}}else{do if(((m|0)!=0?(c[m+8>>2]|0)==0:0)?(c[d+4>>2]|0)==6:0){o=0;ma(176,r+28|0,e|0);p=o;o=0;if(p&1){v=47;break a}o=0;p=Z(226,(c[j>>2]|0)+28|0)|0;s=o;o=0;if(s&1){v=47;break a}if(p){o=0;ma(177,g|0,(c[j>>2]|0)+28|0);p=o;o=0;if(!(p&1)){p=c[g>>2]|0;s=g+4|0;o=0;k=ca(38,c[c[j>>2]>>2]|0,p|0,(c[s>>2]|0)-p|0,c[b>>2]|0,i|0)|0;p=o;o=0;if(!(p&1)){if((k|0)>-1){p=c[g>>2]|0;if(p|0){if((c[s>>2]|0)!=(p|0))c[s>>2]=p;mR(p)}break}p=Ja(24)|0;w=xr()|0;o=0;na(71,p|0,k|0,w|0);w=o;o=0;if(w&1){w=Qa(0)|0;Sa(p|0);x=w}else{o=0;na(72,p|0,4424,56);o=0;p=Qa(0)|0;x=p}Ka(x|0)|0;p=fo()|0;o=0;na(71,h|0,9,p|0);p=o;o=0;if(p&1){p=Pa()|0;y=z;A=p}else{o=0;ma(144,h|0,0);o=0;p=Pa()|0;w=z;c[h>>2]=10036;k=h+12|0;if((a[k+11>>0]|0)<0)mR(c[k>>2]|0);y=w;A=p}o=0;ka(3);p=o;o=0;if(p&1){p=Qa(0)|0;Id(p)}else{B=y;C=A}}else{p=Pa()|0;B=z;C=p}p=c[g>>2]|0;if(!p){D=B;E=C}else{if((c[s>>2]|0)!=(p|0))c[s>>2]=p;mR(p);D=B;E=C}}else{p=Pa()|0;D=z;E=p}F=D;G=E;break a}}else v=56;while(0);if((v|0)==56){p=c[e>>2]|0;o=0;s=ca(38,m|0,p|0,(c[n>>2]|0)-p|0,c[b>>2]|0,i|0)|0;p=o;o=0;if(p&1){v=47;break}if((s|0)<=-1){p=Ja(24)|0;w=xr()|0;o=0;na(71,p|0,s|0,w|0);w=o;o=0;if(w&1){w=Qa(0)|0;Sa(p|0);H=w}else{o=0;na(72,p|0,4424,56);o=0;p=Qa(0)|0;H=p}Ka(H|0)|0;p=fo()|0;o=0;na(71,g|0,9,p|0);p=o;o=0;if(p&1){p=Pa()|0;I=z;J=p}else{o=0;ma(144,g|0,0);o=0;p=Pa()|0;w=z;c[g>>2]=10036;s=g+12|0;if((a[s+11>>0]|0)<0)mR(c[s>>2]|0);I=w;J=p}o=0;ka(3);p=o;o=0;if(!(p&1)){t=I;u=J;v=48;break}p=Qa(0)|0;Id(p)}}p=c[i>>2]|0;w=c[q>>2]|0;s=c[b>>2]|0;k=w-s|0;K=s;s=w;if(p>>>0>k>>>0){o=0;ma(149,b|0,p-k|0);w=o;o=0;if(w&1){v=47;break}l=f;return}if(p>>>0>=k>>>0){l=f;return}k=K+p|0;if((k|0)==(s|0)){l=f;return}c[q>>2]=k;l=f;return}while(0);if((v|0)==47){f=Pa()|0;t=z;u=f;v=48}if((v|0)==48){F=t;G=u}u=c[b>>2]|0;if(!u)$a(G|0);if((c[q>>2]|0)!=(u|0))c[q>>2]=u;mR(u);$a(G|0)}function tr(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;e=l;l=l+96|0;f=e+64|0;g=e+40|0;h=e+16|0;i=e;j=e+12|0;k=e+8|0;m=e+4|0;n=d+4|0;d=c[n>>2]|0;p=c[d>>2]|0;q=c[p>>2]|0;if(!q){r=Ja(24)|0;o=0;ma(143,r|0,14);s=o;o=0;if(s&1){s=Pa()|0;Sa(r|0);$a(s|0)}else Xa(r|0,4424,56)}c[i>>2]=0;if(!p)t=0;else t=c[q+24>>2]|0;c[b>>2]=0;q=b+4|0;c[q>>2]=0;c[b+8>>2]=0;do if(!t){u=d;v=0}else{if((t|0)>=0){o=0;p=Z(209,t|0)|0;r=o;o=0;if(!(r&1)){c[q>>2]=p;c[b>>2]=p;c[b+8>>2]=p+t;r=t;s=p;do{a[s>>0]=0;s=(c[q>>2]|0)+1|0;c[q>>2]=s;r=r+-1|0}while((r|0)!=0);u=c[n>>2]|0;v=c[b>>2]|0;break}}else{o=0;la(271,b|0);o=0}r=Pa()|0;s=c[b>>2]|0;if(!s)$a(r|0);if((c[q>>2]|0)!=(s|0))c[q>>2]=s;mR(s);$a(r|0)}while(0);o=0;t=$(100,c[u>>2]|0,v|0,i|0)|0;v=o;o=0;do if(v&1)w=58;else{if((t|0)<=-1){u=Ja(24)|0;d=xr()|0;o=0;na(71,u|0,t|0,d|0);d=o;o=0;if(d&1){d=Qa(0)|0;Sa(u|0);x=d}else{o=0;na(72,u|0,4424,56);o=0;u=Qa(0)|0;x=u}Ka(x|0)|0;u=fo()|0;o=0;na(71,h|0,9,u|0);u=o;o=0;if(u&1){u=Pa()|0;y=z;A=u}else{o=0;ma(144,h|0,0);o=0;u=Pa()|0;d=z;c[h>>2]=10036;r=h+12|0;if((a[r+11>>0]|0)<0)mR(c[r>>2]|0);y=d;A=u}o=0;ka(3);u=o;o=0;if(!(u&1)){B=y;C=A;w=59;break}u=Qa(0)|0;Id(u)}u=c[i>>2]|0;d=c[q>>2]|0;r=c[b>>2]|0;s=d-r|0;p=r;r=d;if(u>>>0>s>>>0){o=0;ma(149,b|0,u-s|0);d=o;o=0;if(d&1){w=58;break}}else if(u>>>0<s>>>0?(s=p+u|0,(s|0)!=(r|0)):0)c[q>>2]=s;s=c[n>>2]|0;r=c[s>>2]|0;u=c[r>>2]|0;if(!u){p=Ja(24)|0;d=fo()|0;o=0;na(71,p|0,14,d|0);d=o;o=0;if(d&1){d=Pa()|0;D=z;Sa(p|0);B=D;C=d;w=59;break}else{o=0;na(72,p|0,4424,56);o=0;w=58;break}}if(!r){l=e;return}if((c[u+4>>2]|0)!=6){l=e;return}if((c[r+8>>2]|0)==1){o=0;u=Z(209,16)|0;p=o;o=0;if(p&1){p=Pa()|0;E=z;F=p;break}a[u>>0]=0;a[u+1>>0]=0;a[u+2>>0]=0;a[u+3>>0]=0;a[u+4>>0]=0;a[u+5>>0]=0;a[u+6>>0]=0;a[u+7>>0]=0;a[u+8>>0]=0;a[u+9>>0]=0;a[u+10>>0]=0;a[u+11>>0]=0;a[u+12>>0]=0;a[u+13>>0]=0;a[u+14>>0]=0;a[u+15>>0]=0;p=u+16|0;o=0;d=$(101,c[c[n>>2]>>2]|0,u|0,16)|0;D=o;o=0;do if(!(D&1)){if((d|0)>-1){c[j>>2]=c[q>>2];c[k>>2]=u;c[m>>2]=p;o=0;c[h>>2]=c[j>>2];c[g>>2]=c[k>>2];c[f>>2]=c[m>>2];aa(45,b|0,h|0,g|0,f|0)|0;G=o;o=0;if(G&1){w=61;break}mR(u);l=e;return}G=Ja(24)|0;H=xr()|0;o=0;na(71,G|0,d|0,H|0);H=o;o=0;if(H&1){H=Qa(0)|0;Sa(G|0);I=H}else{o=0;na(72,G|0,4424,56);o=0;G=Qa(0)|0;I=G}Ka(I|0)|0;G=fo()|0;o=0;na(71,g|0,9,G|0);G=o;o=0;if(G&1){G=Pa()|0;J=z;K=G}else{o=0;ma(144,g|0,0);o=0;G=Pa()|0;H=z;c[g>>2]=10036;L=g+12|0;if((a[L+11>>0]|0)<0)mR(c[L>>2]|0);J=H;K=G}o=0;ka(3);G=o;o=0;if(G&1){G=Qa(0)|0;Id(G)}else{M=K;N=J}}else w=61;while(0);if((w|0)==61){d=Pa()|0;M=d;N=z}mR(u);E=N;F=M;break}if(c[r+8>>2]|0){l=e;return}o=0;ma(178,g|0,s+28|0);d=o;o=0;if(!(d&1)){d=c[g>>2]|0;p=g+4|0;o=0;D=$(102,c[c[n>>2]>>2]|0,d|0,(c[p>>2]|0)-d|0)|0;d=o;o=0;if(!(d&1)){if((D|0)>-1){d=c[g>>2]|0;if(d|0){if((c[p>>2]|0)!=(d|0))c[p>>2]=d;mR(d)}l=e;return}d=Ja(24)|0;G=xr()|0;o=0;na(71,d|0,D|0,G|0);G=o;o=0;if(G&1){G=Qa(0)|0;Sa(d|0);O=G}else{o=0;na(72,d|0,4424,56);o=0;d=Qa(0)|0;O=d}Ka(O|0)|0;d=fo()|0;o=0;na(71,f|0,10,d|0);d=o;o=0;if(d&1){d=Pa()|0;P=z;Q=d}else{o=0;ma(144,f|0,0);o=0;d=Pa()|0;G=z;c[f>>2]=10036;D=f+12|0;if((a[D+11>>0]|0)<0)mR(c[D>>2]|0);P=G;Q=d}o=0;ka(3);d=o;o=0;if(d&1){d=Qa(0)|0;Id(d)}else{R=P;S=Q}}else{d=Pa()|0;R=z;S=d}d=c[g>>2]|0;if(!d){T=R;U=S}else{if((c[p>>2]|0)!=(d|0))c[p>>2]=d;mR(d);T=R;U=S}}else{d=Pa()|0;T=z;U=d}E=T;F=U}while(0);if((w|0)==58){U=Pa()|0;B=z;C=U;w=59}if((w|0)==59){E=B;F=C}C=c[b>>2]|0;if(!C)$a(F|0);if((c[q>>2]|0)!=(C|0))c[q>>2]=C;mR(C);$a(F|0)}function ur(a){a=a|0;mR(a);return}function vr(a){a=a|0;return 73564}function wr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;d=l;l=l+256|0;f=d;o=0;na(90,e|0,f|0,256);e=o;o=0;do if(!(e&1)){c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;g=$F(f)|0;if(g>>>0>4294967279){o=0;la(276,b|0);o=0;break}if(g>>>0<11){a[b+11>>0]=g;if(!g){h=b;i=h+g|0;a[i>>0]=0;l=d;return}else j=b}else{k=g+16&-16;o=0;m=Z(209,k|0)|0;n=o;o=0;if(n&1)break;c[b>>2]=m;c[b+8>>2]=k|-2147483648;c[b+4>>2]=g;j=m}CT(j|0,f|0,g|0)|0;h=j;i=h+g|0;a[i>>0]=0;l=d;return}while(0);d=Qa(0)|0;Id(d)}function xr(){(a[93384]|0)==0?iT(93384)|0:0;return 10256}function yr(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;c[a+24>>2]=0;return}function zr(a,b){a=a|0;b=b|0;var d=0;c[a>>2]=b;b=c[a+4>>2]|0;d=a+8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;b=c[a+16>>2]|0;d=a+20|0;if((c[d>>2]|0)==(b|0))return;c[d>>2]=b;return}function Ar(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0;d=l;l=l+48|0;e=d+32|0;f=d+28|0;g=d+24|0;h=d+20|0;i=d+16|0;j=d+12|0;k=d+8|0;m=d+4|0;n=d;o=a+16|0;p=a+20|0;c[h>>2]=c[p>>2];c[i>>2]=c[b>>2];c[j>>2]=c[b+4>>2];c[g>>2]=c[h>>2];c[f>>2]=c[i>>2];c[e>>2]=c[j>>2];Xl(o,g,f,e)|0;j=c[o>>2]|0;o=(c[p>>2]|0)-j-(c[a>>2]|0)|0;i=j;if((o|0)<=0){l=d;return}h=i+o|0;o=h;c[k>>2]=c[a+8>>2];c[m>>2]=j;c[n>>2]=o;c[g>>2]=c[k>>2];c[f>>2]=c[m>>2];c[e>>2]=c[n>>2];dm(a+4|0,g,f,e)|0;e=c[p>>2]|0;f=e-o|0;if(!f)q=e;else{DT(i|0,h|0,f|0)|0;q=c[p>>2]|0}h=i+f|0;if((q|0)==(h|0)){l=d;return}c[p>>2]=h;l=d;return}function Br(a){a=a|0;return (c[a+4>>2]|0)!=(c[a+8>>2]|0)|0}function Cr(a,b){a=a|0;b=b|0;var d=0;d=b+4|0;c[a>>2]=c[d>>2];c[d>>2]=0;d=b+8|0;c[a+4>>2]=c[d>>2];c[d>>2]=0;d=b+12|0;c[a+8>>2]=c[d>>2];c[d>>2]=0;return}function Dr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;c[a>>2]=0;d=a+4|0;c[d>>2]=0;c[a+8>>2]=0;e=c[b+16>>2]|0;f=(c[b+20>>2]|0)-e|0;b=e;if(!f)return;if((f|0)>=0){o=0;e=Z(209,f|0)|0;g=o;o=0;if(!(g&1)){c[d>>2]=e;c[a>>2]=e;g=e+f|0;c[a+8>>2]=g;CT(e|0,b|0,f|0)|0;c[d>>2]=g;return}}else{o=0;la(271,a|0);o=0}g=Pa()|0;f=c[a>>2]|0;if(!f)$a(g|0);if((c[d>>2]|0)!=(f|0))c[d>>2]=f;mR(f);$a(g|0)}function Er(a){a=a|0;var b=0,d=0;c[a>>2]=10268;b=a+4|0;a=c[b>>2]|0;c[b>>2]=0;if(!a)return;b=c[a+32>>2]|0;if(b|0){d=a+36|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}b=c[a+20>>2]|0;if(b|0){d=a+24|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;mR(b)}Gr(a+8|0,c[a+12>>2]|0);mR(a);return}function Fr(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=10268;b=a+4|0;d=c[b>>2]|0;c[b>>2]=0;if(!d){mR(a);return}b=c[d+32>>2]|0;if(b|0){e=d+36|0;if((c[e>>2]|0)!=(b|0))c[e>>2]=b;mR(b)}b=c[d+20>>2]|0;if(b|0){e=d+24|0;if((c[e>>2]|0)!=(b|0))c[e>>2]=b;mR(b)}Gr(d+8|0,c[d+12>>2]|0);mR(d);mR(a);return}function Gr(a,b){a=a|0;b=b|0;var d=0;if(!b)return;Gr(a,c[b>>2]|0);Gr(a,c[b+4>>2]|0);a=c[b+20>>2]|0;if(a|0){d=b+24|0;if((c[d>>2]|0)!=(a|0))c[d>>2]=a;mR(a)}mR(b);return}function Hr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;c[a>>2]=10268;d=a+4|0;a=kR(44)|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+8>>2]=a+12;e=a+20|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;c[d>>2]=a;if(b>>>0>=113){c[a>>2]=b;return}b=Ja(24)|0;a=fo()|0;o=0;oa(40,b|0,3,a|0,73683);a=o;o=0;if(a&1){a=Pa()|0;e=z;Sa(b|0);f=e;g=a}else{o=0;na(72,b|0,4424,56);o=0;b=Pa()|0;f=z;g=b}b=c[d>>2]|0;c[d>>2]=0;if(!b)$a(g|0);d=c[b+32>>2]|0;if(d|0){f=b+36|0;if((c[f>>2]|0)!=(d|0))c[f>>2]=d;mR(d)}d=c[b+20>>2]|0;if(d|0){f=b+24|0;if((c[f>>2]|0)!=(d|0))c[f>>2]=d;mR(d)}Gr(b+8|0,c[b+12>>2]|0);mR(b);$a(g|0)}function Ir(a){a=a|0;var b=0,d=0;b=c[a+4>>2]|0;a=b+8|0;d=b+12|0;Gr(a,c[d>>2]|0);c[b+16>>2]=0;c[a>>2]=d;c[d>>2]=0;return}function Jr(a){a=a|0;return c[(c[a+4>>2]|0)+16>>2]|0}function Kr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=(c[b+4>>2]|0)+12|0;b=c[e>>2]|0;if(b|0){f=e;g=b;a:while(1){b=g;while(1){if((c[b+16>>2]|0)>>>0>=d>>>0)break;h=c[b+4>>2]|0;if(!h){i=f;break a}else b=h}g=c[b>>2]|0;if(!g){i=b;break}else f=b}if((i|0)!=(e|0)?!((i|0)==(e|0)?1:(c[i+16>>2]|0)>>>0>d>>>0):0){d=i+20|0;c[a>>2]=0;e=a+4|0;c[e>>2]=0;c[a+8>>2]=0;f=i+24|0;i=(c[f>>2]|0)-(c[d>>2]|0)|0;if(!i)return;if((i|0)>=0){o=0;g=Z(209,i|0)|0;h=o;o=0;if(!(h&1)){c[e>>2]=g;c[a>>2]=g;c[a+8>>2]=g+i;i=c[d>>2]|0;d=(c[f>>2]|0)-i|0;if((d|0)<=0)return;CT(g|0,i|0,d|0)|0;c[e>>2]=g+d;return}}else{o=0;la(271,a|0);o=0}d=Pa()|0;g=c[a>>2]|0;if(!g)$a(d|0);if((c[e>>2]|0)!=(g|0))c[e>>2]=g;mR(g);$a(d|0)}}d=Ja(24)|0;o=0;na(73,d|0,3,73736);g=o;o=0;if(g&1){g=Pa()|0;Sa(d|0);$a(g|0)}else Xa(d|0,4424,56)}function Lr(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0;e=l;l=l+48|0;f=e+24|0;g=e+12|0;h=e;i=c[d>>2]|0;j=d+4|0;d=c[j>>2]|0;if((i|0)==(d|0)){k=Ja(24)|0;o=0;na(73,k|0,4,73768);m=o;o=0;if(m&1){m=Pa()|0;Sa(k|0);$a(m|0)}else Xa(k|0,4424,56)}k=i+1|0;m=k;n=a[i>>0]|0;i=n&255;p=i&64;q=i>>>4;r=q&2;s=i&15;a:do if(n<<24>>24>-1){t=s;u=m}else{i=b+4|0;c[(c[i>>2]|0)+4>>2]=s;wk(f);v=q&255;b:do switch(v&3){case 0:{w=19;x=11;break}case 1:{w=20;x=11;break}default:{y=Ja(24)|0;A=fo()|0;o=0;na(71,y|0,16,A|0);A=o;o=0;if(A&1){A=Pa()|0;B=z;Sa(y|0);C=B;D=A;break b}else{o=0;na(72,y|0,4424,56);o=0;x=27;break b}}}while(0);if((x|0)==11){o=0;ma(179,f|0,w|0);y=o;o=0;if(y&1)x=27;else{c[g>>2]=0;y=g+4|0;c[y>>2]=0;c[g+8>>2]=0;do if((k|0)!=(d|0)){A=g+8|0;B=k;E=0;F=0;G=0;while(1){H=B+1|0;if((E|0)==(F|0)){I=F-G|0;J=I+1|0;K=G;if((J|0)<0){x=20;break}L=I<<1;M=I>>>0<1073741823?(L>>>0<J>>>0?J:L):2147483647;if(M){o=0;L=Z(209,M|0)|0;J=o;o=0;if(J&1){x=29;break}else N=L}else N=0;L=N+I|0;a[L>>0]=a[B>>0]|0;if((I|0)>0)CT(N|0,K|0,I|0)|0;c[g>>2]=N;c[y>>2]=L+1;c[A>>2]=N+M;if(G|0)mR(K)}else{a[E>>0]=a[B>>0]|0;c[y>>2]=(c[y>>2]|0)+1}if((H|0)==(d|0)){O=d;x=32;break}K=c[y>>2]|0;M=c[g>>2]|0;if((K-M|0)>>>0>=32){O=H;x=32;break}B=H;E=K;F=c[A>>2]|0;G=M}if((x|0)==20){o=0;la(271,g|0);o=0;x=30;break}else if((x|0)==29){G=Pa()|0;P=z;Q=G;x=31;break}else if((x|0)==32){if((r&255)<2){R=O;S=c[y>>2]|0;T=c[g>>2]|0;x=37;break}G=Ja(24)|0;A=fo()|0;o=0;na(71,G|0,16,A|0);A=o;o=0;if(A&1){A=Pa()|0;F=z;Sa(G|0);P=F;Q=A;x=31;break}else{o=0;na(72,G|0,4424,56);o=0;x=30;break}}}else{R=m;S=0;T=0;x=37}while(0);do if((x|0)==37){if((S-T|0)!=32){G=Ja(24)|0;A=fo()|0;o=0;oa(40,G|0,4,A|0,73794);A=o;o=0;if(A&1){A=Pa()|0;F=z;Sa(G|0);U=F;V=A;break}else{o=0;na(72,G|0,4424,56);o=0;x=30;break}}o=0;ma(180,f|0,g|0);G=o;o=0;if(!(G&1)?(o=0,ma(126,h|0,f|0),G=o,o=0,!(G&1)):0){G=c[g>>2]|0;if(G|0){if((c[y>>2]|0)!=(G|0))c[y>>2]=G;mR(G)}fk(f);G=c[i>>2]|0;A=G+32|0;F=c[A>>2]|0;E=G+36|0;if(!F)W=G+40|0;else{if((c[E>>2]|0)!=(F|0))c[E>>2]=F;mR(F);F=G+40|0;c[F>>2]=0;c[E>>2]=0;c[A>>2]=0;W=F}c[A>>2]=c[h>>2];c[E>>2]=c[h+4>>2];c[W>>2]=c[h+8>>2];if(!p){t=0;u=R;break a}E=c[j>>2]|0;switch(v&3){case 0:{A=Ja(24)|0;o=0;ma(143,A|0,16);F=o;o=0;if(F&1){F=Pa()|0;Sa(A|0);$a(F|0)}else Xa(A|0,4424,56);break}case 1:{c[f>>2]=0;A=f+4|0;c[A>>2]=0;c[f+8>>2]=0;F=R;c:do if((E|0)!=(F|0)){G=f+8|0;B=F;M=0;K=0;H=0;d:while(1){L=B+1|0;do if((M|0)==(K|0)){I=K-H|0;J=I+1|0;X=H;if((J|0)<0){x=74;break d}Y=I<<1;_=I>>>0<1073741823?(Y>>>0<J>>>0?J:Y):2147483647;if(_){o=0;Y=Z(209,_|0)|0;J=o;o=0;if(J&1){x=81;break c}else $=Y}else $=0;Y=$+I|0;a[Y>>0]=a[B>>0]|0;J=Y+1|0;if((I|0)>0)CT($|0,X|0,I|0)|0;c[f>>2]=$;c[A>>2]=J;c[G>>2]=$+_;if(!H){aa=J;break}mR(X);aa=c[A>>2]|0}else{a[M>>0]=a[B>>0]|0;X=(c[A>>2]|0)+1|0;c[A>>2]=X;aa=X}while(0);ba=c[f>>2]|0;if((L|0)==(E|0)){ca=E;x=82;break}if((aa-ba|0)>>>0>=64){ca=L;x=82;break}B=L;M=aa;K=c[G>>2]|0;H=ba}if((x|0)==74){o=0;la(271,f|0);o=0;x=81;break}else if((x|0)==82){da=ca;ea=aa;fa=ba;x=83;break}}else{da=R;ea=0;fa=0;x=83}while(0);do if((x|0)==83){if((ea-fa|0)!=64){E=Ja(24)|0;F=fo()|0;o=0;oa(40,E|0,4,F|0,73830);F=o;o=0;if(F&1){F=Pa()|0;H=z;Sa(E|0);ga=H;ha=F;break}else{o=0;na(72,E|0,4424,56);o=0;x=81;break}}E=c[i>>2]|0;F=E+20|0;H=c[F>>2]|0;G=E+24|0;if(!H){ia=E+28|0;ja=fa;ka=ea}else{if((c[G>>2]|0)!=(H|0))c[G>>2]=H;mR(H);H=E+28|0;c[H>>2]=0;c[G>>2]=0;c[F>>2]=0;ia=H;ja=c[f>>2]|0;ka=c[A>>2]|0}c[F>>2]=ja;c[G>>2]=ka;c[ia>>2]=c[f+8>>2];t=0;u=da;break a}while(0);if((x|0)==81){G=Pa()|0;ga=z;ha=G}G=c[f>>2]|0;if(!G)$a(ha|0);if((c[A>>2]|0)!=(G|0))c[A>>2]=G;mR(G);$a(ha|0);break}default:{G=Ja(24)|0;o=0;ma(143,G|0,16);F=o;o=0;if(F&1){F=Pa()|0;Sa(G|0);$a(F|0)}else Xa(G|0,4424,56)}}}else x=30}while(0);if((x|0)==30){i=Pa()|0;P=z;Q=i;x=31}if((x|0)==31){U=P;V=Q}i=c[g>>2]|0;if(i|0){if((c[y>>2]|0)!=(i|0))c[y>>2]=i;mR(i)}pa=U;qa=V;fk(f);$a(qa|0)}}if((x|0)==27){i=Pa()|0;C=z;D=i}pa=C;qa=D;fk(f);$a(qa|0)}while(0);qa=c[j>>2]|0;c[f>>2]=0;j=f+4|0;c[j>>2]=0;c[f+8>>2]=0;D=qa-u|0;C=u;e:do if(!D)ra=0;else{if((D|0)>=0){o=0;u=Z(209,D|0)|0;pa=o;o=0;if(!(pa&1)){c[j>>2]=u;c[f>>2]=u;c[f+8>>2]=u+D;if((qa|0)==(C|0)){ra=u;break}else{sa=C;ta=u}while(1){a[ta>>0]=a[sa>>0]|0;sa=sa+1|0;u=(c[j>>2]|0)+1|0;c[j>>2]=u;if((sa|0)==(qa|0)){ra=u;break e}else ta=u}}}else{o=0;la(271,f|0);o=0}y=Pa()|0;u=c[f>>2]|0;if(!u)$a(y|0);if((c[j>>2]|0)!=(u|0))c[j>>2]=u;mR(u);$a(y|0)}while(0);ta=c[b+4>>2]|0;b=ta+8|0;qa=ta+12|0;sa=c[qa>>2]|0;do if(sa){C=ta+12|0;D=sa;while(1){y=c[D+16>>2]|0;if(t>>>0<y>>>0){u=c[D>>2]|0;if(!u){x=114;break}else{ua=D;va=u}}else{if(y>>>0>=t>>>0){x=118;break}wa=D+4|0;y=c[wa>>2]|0;if(!y){x=117;break}else{ua=wa;va=y}}C=ua;D=va}if((x|0)==114){xa=D;ya=D;break}else if((x|0)==117){xa=D;ya=wa;break}else if((x|0)==118){xa=D;ya=C;break}}else{xa=qa;ya=qa}while(0);qa=c[ya>>2]|0;do if(!qa){o=0;x=Z(209,32)|0;wa=o;o=0;if(!(wa&1)){c[x+16>>2]=t;c[x+20>>2]=0;c[x+24>>2]=0;c[x+28>>2]=0;c[x>>2]=0;c[x+4>>2]=0;c[x+8>>2]=xa;c[ya>>2]=x;wa=c[c[b>>2]>>2]|0;if(!wa)za=x;else{c[b>>2]=wa;za=c[ya>>2]|0}Fn(c[ta+12>>2]|0,za);wa=ta+16|0;c[wa>>2]=(c[wa>>2]|0)+1;Aa=x;break}x=Pa()|0;wa=c[f>>2]|0;if(!wa)$a(x|0);if((ra|0)!=(wa|0))c[j>>2]=wa;mR(wa);$a(x|0)}else Aa=qa;while(0);qa=Aa+20|0;ra=c[qa>>2]|0;ta=Aa+24|0;if(!ra){Ba=Aa+28|0;Ca=c[f>>2]|0;c[qa>>2]=Ca;Da=c[j>>2]|0;c[ta>>2]=Da;Ea=f+8|0;Fa=c[Ea>>2]|0;c[Ba>>2]=Fa;l=e;return}if((c[ta>>2]|0)!=(ra|0))c[ta>>2]=ra;mR(ra);ra=Aa+28|0;c[ra>>2]=0;c[ta>>2]=0;c[qa>>2]=0;Ba=ra;Ca=c[f>>2]|0;c[qa>>2]=Ca;Da=c[j>>2]|0;c[ta>>2]=Da;Ea=f+8|0;Fa=c[Ea>>2]|0;c[Ba>>2]=Fa;l=e;return}function Mr(a){a=a|0;var b=0,d=0;b=c[a+4>>2]|0;a=c[b+4>>2]|0;if(!a){d=0;return d|0}d=(a|0)==(c[b+16>>2]|0);return d|0}function Nr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=l;l=l+32|0;f=e+12|0;g=e;c[f>>2]=0;h=f+4|0;c[h>>2]=0;c[f+8>>2]=0;c[g>>2]=0;i=g+4|0;c[i>>2]=0;c[g+8>>2]=0;o=0;pa(9,a|0,b|0,d|0,f|0,g|0);d=o;o=0;if(d&1){d=Pa()|0;b=c[g>>2]|0;if(b|0){if((c[i>>2]|0)!=(b|0))c[i>>2]=b;mR(b)}b=c[f>>2]|0;if(!b)$a(d|0);if((c[h>>2]|0)!=(b|0))c[h>>2]=b;mR(b);$a(d|0)}else{d=c[g>>2]|0;if(d|0){if((c[i>>2]|0)!=(d|0))c[i>>2]=d;mR(d)}d=c[f>>2]|0;if(!d){l=e;return}if((c[h>>2]|0)!=(d|0))c[h>>2]=d;mR(d);l=e;return}}function Or(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,_=0,$=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Qa=0,Ra=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0;h=l;l=l+160|0;i=h+152|0;j=h+140|0;k=h+128|0;m=h+120|0;n=h+104|0;p=h+88|0;q=h+72|0;r=h+60|0;s=h+40|0;t=h+12|0;u=h;v=h+112|0;w=h+84|0;x=h+80|0;y=h+56|0;A=h+52|0;B=h+36|0;C=h+32|0;D=h+28|0;E=h+24|0;wk(m);o=0;ma(123,m|0,e|0);e=o;o=0;if(e&1){e=Pa()|0;F=e;G=z;fk(m);$a(F|0)}o=0;la(277,n|0);e=o;o=0;if(e&1){e=Pa()|0;H=e;I=z}else{o=0;ma(125,n|0,m|0);e=o;o=0;if(e&1){e=Pa()|0;J=e;K=z}else{o=0;na(57,p|0,m|0,n|0);e=o;o=0;if(!(e&1)){o=0;ma(139,q|0,3);e=o;o=0;if(e&1){e=Pa()|0;L=e;M=z}else{e=(c[f>>2]|0)==(c[f+4>>2]|0);O=e^1;a:do if(e){P=-33;Q=12}else{o=0;R=Z(227,n|0)|0;S=o;o=0;do if(!(S&1)){if((R|0)==20){P=-97;Q=12;break a}T=Ja(24)|0;U=fo()|0;o=0;na(71,T|0,16,U|0);U=o;o=0;if(U&1){U=Pa()|0;V=z;Sa(T|0);W=V;X=U;break}else{o=0;na(72,T|0,4424,56);o=0;Q=27;break}}else Q=27;while(0);if((Q|0)==27){R=Pa()|0;W=z;X=R}Y=X;_=W}while(0);b:do if((Q|0)==12){W=c[d+4>>2]|0;X=c[d>>2]|0;o=0;R=Z(161,q|0)|0;S=o;o=0;do if(!(S&1)?(T=W-X+R|0,U=b+4|0,V=c[c[U>>2]>>2]|0,o=0,$=Z(227,m|0)|0,ba=o,o=0,!(ba&1)):0){if(($+-19|0)>>>0>=2){$=Ja(24)|0;ba=fo()|0;o=0;na(71,$|0,16,ba|0);ba=o;o=0;if(ba&1){ba=Pa()|0;ca=z;Sa($|0);da=ca;ea=ba;break}else{o=0;na(72,$|0,4424,56);o=0;Q=29;break}}$=P+V|0;if(T>>>0>=$>>>0){ba=(~~+N(+(+((T-$|0)>>>0)/+((V+-1|0)>>>0)))>>>0)+1|0;if(ba>>>0>15){V=Ja(24)|0;$=fo()|0;o=0;oa(40,V|0,3,$|0,73855);$=o;o=0;if($&1){$=Pa()|0;T=z;Sa(V|0);Y=$;_=T;break b}else{o=0;na(72,V|0,4424,56);o=0;Q=29;break}}else fa=ba}else fa=1;o=0;oa(47,r|0,fa|0,n|0,O|0);ba=o;o=0;if(!(ba&1)){o=0;ma(117,q|0,p|0);ba=o;o=0;do if(ba&1)Q=57;else{o=0;ma(116,q|0,r|0);V=o;o=0;if(V&1){Q=57;break}o=0;V=Z(158,q|0)|0;T=o;o=0;do if(T&1)Q=58;else{o=0;ma(181,i|0,1);$=o;o=0;if($&1){Q=58;break}o=0;oa(48,j|0,i|0,r|0,V|0);$=o;o=0;if($&1){$=Pa()|0;ca=z;lu(i);ga=ca;ha=$;Q=59;break}lu(i);o=0;oa(49,s|0,q|0,d|0,j|0);$=o;o=0;if($&1){$=Pa()|0;ca=z;ia=c[j>>2]|0;if(!ia){ja=$;ka=ca;Q=64;break}pa=j+4|0;if((c[pa>>2]|0)!=(ia|0))c[pa>>2]=ia;mR(ia);ja=$;ka=ca;Q=64;break}ca=c[j>>2]|0;if(ca|0){$=j+4|0;if((c[$>>2]|0)!=(ca|0))c[$>>2]=ca;mR(ca)}c:do if(e){qa=0;ra=0;Q=77}else{o=0;la(277,i|0);ca=o;o=0;if(ca&1){ca=Pa()|0;sa=ca;ta=z}else{o=0;na(53,i|0,f|0,g|0);ca=o;o=0;if(ca&1){ca=Pa()|0;ua=ca;va=z}else{o=0;ma(136,j|0,4);ca=o;o=0;if(ca&1){ca=Pa()|0;wa=ca;xa=z}else{o=0;na(45,k|0,j|0,s|0);ca=o;o=0;do if(ca&1){$=Pa()|0;ya=$;za=z}else{o=0;$=Z(142,j|0)|0;ia=o;o=0;do if(!(ia&1)){o=0;oa(31,t|0,i|0,k|0,$|0);pa=o;o=0;if(pa&1)break;pa=c[t>>2]|0;Aa=c[t+4>>2]|0;Ba=c[k>>2]|0;if(Ba|0){Ca=k+4|0;if((c[Ca>>2]|0)!=(Ba|0))c[Ca>>2]=Ba;mR(Ba)}To(j);fk(i);qa=pa;ra=Aa;Q=77;break c}while(0);$=Pa()|0;ia=z;Aa=c[k>>2]|0;if(!Aa){ya=$;za=ia;break}pa=k+4|0;if((c[pa>>2]|0)!=(Aa|0))c[pa>>2]=Aa;mR(Aa);ya=$;za=ia}while(0);To(j);wa=ya;xa=za}ua=wa;va=xa}fk(i);sa=ua;ta=va}Da=sa;Ea=ta}while(0);do if((Q|0)==77){o=0;ca=Z(227,n|0)|0;ia=o;o=0;d:do if(ia&1)Q=87;else{switch(ca|0){case 19:{Fa=0;break}case 20:{Fa=16;break}default:{$=Ja(24)|0;Aa=fo()|0;o=0;na(71,$|0,16,Aa|0);Aa=o;o=0;if(Aa&1){Aa=Pa()|0;pa=z;Sa($|0);Ga=pa;Ha=Aa;Q=88;break d}else{o=0;na(72,$|0,4424,56);o=0;Q=87;break d}}}o=0;ma(182,t|0,n|0);$=o;o=0;do if($&1){Aa=Pa()|0;Ia=Aa;Ka=z}else{Aa=c[U>>2]|0;pa=Aa+8|0;Ba=Aa+12|0;Gr(pa,c[Ba>>2]|0);c[Aa+16>>2]=0;c[pa>>2]=Ba;c[Ba>>2]=0;e:do if(!fa)Q=86;else{Ba=u+4|0;pa=u+8|0;Aa=u+8|0;Ca=(fa&15|(Fa|(e?-128:-64))&255)&255;La=t+4|0;Ma=qa;Na=ra;Oa=s+4|0;Qa=Fa&255;Ra=c[s>>2]|0;Ta=0;f:while(1){c[u>>2]=0;c[Ba>>2]=0;c[pa>>2]=0;Ua=c[c[U>>2]>>2]|0;if(!Ua){Va=0;Wa=0;Xa=0}else{o=0;Ya=Z(209,Ua|0)|0;Za=o;o=0;if(Za&1){Q=106;break}Za=Ya;_a=Ya+Ua|0;c[u>>2]=Za;c[Ba>>2]=Za;c[Aa>>2]=_a;Va=Ya;Wa=_a;Xa=Za}do if(!Ta){Za=Wa;do if(Va>>>0<Wa>>>0){a[Va>>0]=Ca;_a=Va+1|0;c[Ba>>2]=_a;ab=_a}else{_a=Va-Xa|0;Ya=_a+1|0;Ua=Xa;if((Ya|0)<0){Q=97;break f}bb=Za-Xa|0;cb=bb<<1;db=bb>>>0<1073741823?(cb>>>0<Ya>>>0?Ya:cb):2147483647;if(db){o=0;cb=Z(209,db|0)|0;Ya=o;o=0;if(Ya&1){Q=107;break f}else eb=cb}else eb=0;cb=eb+_a|0;a[cb>>0]=Ca;Ya=cb+1|0;if((_a|0)>0)CT(eb|0,Ua|0,_a|0)|0;c[u>>2]=eb;c[Ba>>2]=Ya;c[Aa>>2]=eb+db;if(!Xa){ab=Ya;break}mR(Ua);ab=c[Ba>>2]|0}while(0);c[v>>2]=ab;c[w>>2]=c[t>>2];c[x>>2]=c[La>>2];o=0;c[k>>2]=c[v>>2];c[j>>2]=c[w>>2];c[i>>2]=c[x>>2];aa(46,u|0,k|0,j|0,i|0)|0;Za=o;o=0;if(Za&1){Q=108;break f}c[y>>2]=c[Ba>>2];c[A>>2]=Ma;c[B>>2]=Na;o=0;c[k>>2]=c[y>>2];c[j>>2]=c[A>>2];c[i>>2]=c[B>>2];aa(45,u|0,k|0,j|0,i|0)|0;Za=o;o=0;if(Za&1){Q=109;break f}}else{if(Ta>>>0>15){Q=111;break f}Za=(Ta&15|Qa)&255;if(Va>>>0<Wa>>>0){a[Va>>0]=Za;c[Ba>>2]=Va+1;break}Ua=Va-Xa|0;Ya=Ua+1|0;db=Xa;if((Ya|0)<0){Q=117;break f}_a=Wa-Xa|0;cb=_a<<1;bb=_a>>>0<1073741823?(cb>>>0<Ya>>>0?Ya:cb):2147483647;if(bb){o=0;cb=Z(209,bb|0)|0;Ya=o;o=0;if(Ya&1){Q=124;break f}else fb=cb}else fb=0;cb=fb+Ua|0;a[cb>>0]=Za;if((Ua|0)>0)CT(fb|0,db|0,Ua|0)|0;c[u>>2]=fb;c[Ba>>2]=cb+1;c[Aa>>2]=fb+bb;if(!Xa)break;mR(db)}while(0);db=c[Ba>>2]|0;bb=db-(c[u>>2]|0)|0;cb=c[c[U>>2]>>2]|0;if(cb>>>0<bb>>>0){Q=128;break}Ua=cb-bb|0;bb=(c[Oa>>2]|0)-Ra|0;c[C>>2]=db;c[D>>2]=Ra;db=Ra+((Ua|0)>(bb|0)?bb:Ua)|0;c[E>>2]=db;o=0;c[k>>2]=c[C>>2];c[j>>2]=c[D>>2];c[i>>2]=c[E>>2];aa(46,u|0,k|0,j|0,i|0)|0;Ua=o;o=0;if(Ua&1){Q=135;break}Ra=db;db=c[U>>2]|0;if(((c[Ba>>2]|0)-(c[u>>2]|0)|0)>>>0>(c[db>>2]|0)>>>0){Q=133;break}Ua=db+8|0;bb=db+12|0;cb=c[bb>>2]|0;do if(cb){Za=db+12|0;Ya=cb;while(1){_a=c[Ya+16>>2]|0;if(Ta>>>0<_a>>>0){gb=c[Ya>>2]|0;if(!gb){Q=143;break}else{hb=Ya;ib=gb}}else{if(_a>>>0>=Ta>>>0){Q=147;break}jb=Ya+4|0;_a=c[jb>>2]|0;if(!_a){Q=146;break}else{hb=jb;ib=_a}}Za=hb;Ya=ib}if((Q|0)==143){Q=0;kb=Ya;lb=Ya;break}else if((Q|0)==146){Q=0;kb=Ya;lb=jb;break}else if((Q|0)==147){Q=0;kb=Ya;lb=Za;break}}else{kb=bb;lb=bb}while(0);bb=c[lb>>2]|0;if(!bb){o=0;cb=Z(209,32)|0;_a=o;o=0;if(_a&1){Q=137;break}c[cb+16>>2]=Ta;c[cb+20>>2]=0;c[cb+24>>2]=0;c[cb+28>>2]=0;c[cb>>2]=0;c[cb+4>>2]=0;c[cb+8>>2]=kb;c[lb>>2]=cb;_a=c[c[Ua>>2]>>2]|0;if(!_a)mb=cb;else{c[Ua>>2]=_a;mb=c[lb>>2]|0}Fn(c[db+12>>2]|0,mb);_a=db+16|0;c[_a>>2]=(c[_a>>2]|0)+1;nb=cb}else nb=bb;bb=nb+20|0;if((bb|0)!=(u|0)?(o=0,na(84,bb|0,c[u>>2]|0,c[Ba>>2]|0),bb=o,o=0,bb&1):0){Q=137;break}bb=c[u>>2]|0;if(bb|0){if((c[Ba>>2]|0)!=(bb|0))c[Ba>>2]=bb;mR(bb)}Ta=Ta+1|0;if(Ta>>>0>=fa>>>0){Q=86;break e}}switch(Q|0){case 97:{o=0;la(271,u|0);o=0;Q=107;break}case 106:{ob=Pa()|0;pb=z;break}case 108:{ob=Pa()|0;pb=z;break}case 109:{ob=Pa()|0;pb=z;break}case 111:{Ta=Ja(24)|0;Ra=fo()|0;o=0;oa(40,Ta|0,3,Ra|0,73894);Ra=o;o=0;if(Ra&1){Ra=Pa()|0;Oa=z;Sa(Ta|0);qb=Oa;rb=Ra;Q=126;break}else{o=0;na(72,Ta|0,4424,56);o=0;Q=125;break}break}case 117:{o=0;la(271,u|0);o=0;Q=125;break}case 124:{Ta=Pa()|0;qb=z;rb=Ta;Q=126;break}case 128:{Ta=Ja(24)|0;Ra=fo()|0;o=0;oa(40,Ta|0,9,Ra|0,73944);Ra=o;o=0;if(Ra&1){Ra=Pa()|0;Oa=z;Sa(Ta|0);ob=Ra;pb=Oa;break}else{o=0;na(72,Ta|0,4424,56);o=0;Ta=Pa()|0;ob=Ta;pb=z;break}break}case 133:{Ta=Ja(24)|0;Oa=fo()|0;o=0;oa(40,Ta|0,9,Oa|0,73944);Oa=o;o=0;if(Oa&1){Oa=Pa()|0;Ra=z;Sa(Ta|0);ob=Oa;pb=Ra;break}else{o=0;na(72,Ta|0,4424,56);o=0;Q=137;break}break}case 135:{ob=Pa()|0;pb=z;break}}if((Q|0)==107){Ta=Pa()|0;ob=Ta;pb=z}else if((Q|0)==125){Ta=Pa()|0;qb=z;rb=Ta;Q=126}else if((Q|0)==137){Ta=Pa()|0;ob=Ta;pb=z}if((Q|0)==126){ob=rb;pb=qb}Ta=c[u>>2]|0;if(Ta|0){if((c[Ba>>2]|0)!=(Ta|0))c[Ba>>2]=Ta;mR(Ta)}sb=ob;tb=pb}while(0);if((Q|0)==86){o=0;la(232,p|0);Ta=o;o=0;do if(!(Ta&1)){o=0;la(232,r|0);Ra=o;o=0;if(Ra&1)break;Ra=c[t>>2]|0;if(Ra|0){Oa=t+4|0;if((c[Oa>>2]|0)!=(Ra|0))c[Oa>>2]=Ra;mR(Ra)}if(qa|0)mR(qa);Ra=c[s>>2]|0;if(Ra|0){Oa=s+4|0;if((c[Oa>>2]|0)!=(Ra|0))c[Oa>>2]=Ra;mR(Ra)}Ra=c[r>>2]|0;if(Ra|0){Oa=r+4|0;if((c[Oa>>2]|0)!=(Ra|0))c[Oa>>2]=Ra;mR(Ra)}Oq(q);Ra=c[p>>2]|0;if(!Ra){fk(n);fk(m);l=h;return}Oa=p+4|0;if((c[Oa>>2]|0)!=(Ra|0))c[Oa>>2]=Ra;mR(Ra);fk(n);fk(m);l=h;return}while(0);Ta=Pa()|0;sb=Ta;tb=z}Ta=c[t>>2]|0;if(!Ta){Ia=sb;Ka=tb;break}Ra=t+4|0;if((c[Ra>>2]|0)!=(Ta|0))c[Ra>>2]=Ta;mR(Ta);Ia=sb;Ka=tb}while(0);ub=Ia;vb=Ka}while(0);if((Q|0)==87){ca=Pa()|0;Ga=z;Ha=ca;Q=88}if((Q|0)==88){ub=Ha;vb=Ga}if(!qa){Da=ub;Ea=vb;break}mR(qa);Da=ub;Ea=vb}while(0);ca=c[s>>2]|0;if(!ca){wb=Da;xb=Ea;break}ia=s+4|0;if((c[ia>>2]|0)!=(ca|0))c[ia>>2]=ca;mR(ca);wb=Da;xb=Ea}while(0);if((Q|0)==58){V=Pa()|0;ga=z;ha=V;Q=59}if((Q|0)==59){ja=ha;ka=ga;Q=64}if((Q|0)==64){wb=ja;xb=ka}yb=wb;zb=xb}while(0);if((Q|0)==57){U=Pa()|0;yb=U;zb=z}U=c[r>>2]|0;if(!U){Ab=yb;Bb=zb}else{ba=r+4|0;if((c[ba>>2]|0)!=(U|0))c[ba>>2]=U;mR(U);Ab=yb;Bb=zb}}else{U=Pa()|0;Ab=U;Bb=z}Y=Ab;_=Bb;break b}else Q=29;while(0);if((Q|0)==29){R=Pa()|0;da=z;ea=R}Y=ea;_=da}while(0);Oq(q);L=Y;M=_}_=c[p>>2]|0;if(!_){Cb=L;Db=M}else{Y=p+4|0;if((c[Y>>2]|0)!=(_|0))c[Y>>2]=_;mR(_);Cb=L;Db=M}}else{M=Pa()|0;Cb=M;Db=z}J=Cb;K=Db}fk(n);H=J;I=K}F=H;G=I;fk(m);$a(F|0)}function Pr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0;g=l;l=l+48|0;h=g+32|0;i=g+28|0;j=g+24|0;k=g+12|0;m=g+8|0;n=g+4|0;p=g;if(d>>>0>15){q=Ja(24)|0;o=0;na(73,q|0,3,73894);r=o;o=0;if(!(r&1))Xa(q|0,4424,56);r=Pa()|0;s=z;Sa(q|0);t=r;u=s;$a(t|0)}c[b>>2]=0;s=b+4|0;c[s>>2]=0;c[b+8>>2]=0;o=0;ma(182,k|0,e|0);r=o;o=0;if(!(r&1)){o=0;r=Z(227,e|0)|0;e=o;o=0;a:do if(!(e&1)){switch(r|0){case 19:{v=0;break}case 20:{v=16;break}default:{q=Ja(24)|0;w=fo()|0;o=0;na(71,q|0,16,w|0);w=o;o=0;if(w&1){w=Pa()|0;x=z;Sa(q|0);y=w;A=x;break a}else{o=0;na(72,q|0,4424,56);o=0;B=20;break a}}}o=0;q=Z(209,1)|0;x=o;o=0;if(!(x&1)){x=q+1|0;a[q>>0]=(f?192:128)|d&15|v;c[b>>2]=q;c[s>>2]=x;c[b+8>>2]=x;c[m>>2]=x;c[n>>2]=c[k>>2];x=k+4|0;c[p>>2]=c[x>>2];o=0;c[j>>2]=c[m>>2];c[i>>2]=c[n>>2];c[h>>2]=c[p>>2];aa(46,b|0,j|0,i|0,h|0)|0;q=o;o=0;if(q&1){q=Pa()|0;y=q;A=z;break}q=c[k>>2]|0;if(!q){l=g;return}if((c[x>>2]|0)!=(q|0))c[x>>2]=q;mR(q);l=g;return}else B=20}else B=20;while(0);if((B|0)==20){B=Pa()|0;y=B;A=z}B=c[k>>2]|0;if(!B){C=y;D=A}else{g=k+4|0;if((c[g>>2]|0)!=(B|0))c[g>>2]=B;mR(B);C=y;D=A}}else{A=Pa()|0;C=A;D=z}A=c[b>>2]|0;if(!A){t=C;u=D;$a(t|0)}if((c[s>>2]|0)!=(A|0))c[s>>2]=A;mR(A);t=C;u=D;$a(t|0)}function Qr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=l;l=l+16|0;g=f;c[g>>2]=0;h=g+4|0;c[h>>2]=0;c[g+8>>2]=0;o=0;pa(10,a|0,b|0,g|0,d|0,e|0);e=o;o=0;if(e&1){e=Pa()|0;d=c[g>>2]|0;if(!d)$a(e|0);if((c[h>>2]|0)!=(d|0))c[h>>2]=d;mR(d);$a(e|0)}else{e=c[g>>2]|0;if(!e){l=f;return}if((c[h>>2]|0)!=(e|0))c[h>>2]=e;mR(e);l=f;return}}function Rr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,_=0,$=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0;g=l;l=l+128|0;h=g+112|0;i=g+96|0;j=g+88|0;k=g+80|0;m=g+72|0;n=g+52|0;p=g+24|0;q=g+16|0;r=g;s=g+64|0;t=g+48|0;u=g+44|0;v=g+40|0;w=g+36|0;x=g+12|0;y=b+4|0;b=c[y>>2]|0;A=c[b+4>>2]|0;if(A|0?(A|0)==(c[b+16>>2]|0):0){wk(k);o=0;na(53,k|0,e|0,f|0);f=o;o=0;if(f&1){f=Pa()|0;B=f;C=z}else{o=0;la(277,m|0);f=o;o=0;if(f&1){f=Pa()|0;D=f;E=z}else{o=0;ma(123,m|0,(c[y>>2]|0)+32|0);f=o;o=0;if(f&1){f=Pa()|0;F=f;G=z}else{f=(c[d>>2]|0)==(c[d+4>>2]|0);o=0;oa(47,n|0,c[(c[y>>2]|0)+4>>2]|0,m|0,f^1|0);e=o;o=0;if(!(e&1)){a:do if(f)H=54;else{o=0;ma(136,h|0,4);e=o;o=0;if(e&1){e=Pa()|0;I=e;J=z}else{o=0;la(247,h|0);e=o;o=0;b:do if(e&1){b=Pa()|0;K=b;L=z}else{b=c[y>>2]|0;A=c[b+8>>2]|0;c:do if((A|0)!=(b+12|0)){M=A;while(1){o=0;ma(102,h|0,M+20|0);N=o;o=0;if(N&1)break;N=c[M+4>>2]|0;do if(!N){O=M+8|0;P=c[O>>2]|0;if((c[P>>2]|0)==(M|0)){Q=P;break}else R=O;do{O=c[R>>2]|0;R=O+8|0;P=c[R>>2]|0}while((c[P>>2]|0)!=(O|0));Q=P}else{P=N;while(1){O=c[P>>2]|0;if(!O)break;else P=O}Q=P}while(0);if((Q|0)==((c[y>>2]|0)+12|0))break c;else M=Q}M=Pa()|0;K=M;L=z;break b}while(0);o=0;ma(103,i|0,h|0);A=o;o=0;do if(A&1){b=Pa()|0;S=b;T=z}else{o=0;la(277,j|0);b=o;o=0;if(b&1){b=Pa()|0;U=b;V=z}else{o=0;ma(123,j|0,d|0);b=o;o=0;d:do if(b&1){M=Pa()|0;W=M;X=z}else{M=c[y>>2]|0;o=0;N=Z(142,h|0)|0;O=o;o=0;do if(!(O&1)){o=0;Y=aa(36,j|0,i|0,M+20|0,N|0)|0;_=o;o=0;if(_&1)break;if(!Y){Y=Ja(24)|0;_=fo()|0;o=0;na(71,Y|0,11,_|0);_=o;o=0;if(_&1){_=Pa()|0;$=z;Sa(Y|0);W=_;X=$;break d}else{o=0;na(72,Y|0,4424,56);o=0;break}}fk(j);Y=c[i>>2]|0;if(Y|0){$=i+4|0;if((c[$>>2]|0)!=(Y|0))c[$>>2]=Y;mR(Y)}To(h);H=54;break a}while(0);N=Pa()|0;W=N;X=z}while(0);fk(j);U=W;V=X}b=c[i>>2]|0;if(!b){S=U;T=V;break}N=i+4|0;if((c[N>>2]|0)!=(b|0))c[N>>2]=b;mR(b);S=U;T=V}while(0);K=S;L=T}while(0);To(h);I=K;J=L}ba=I;ca=J}while(0);if((H|0)==54){o=0;na(57,p|0,m|0,k|0);J=o;o=0;if(!(J&1)){o=0;ma(139,q|0,3);J=o;o=0;if(J&1){J=Pa()|0;da=J;ea=z}else{o=0;ma(118,q|0,p|0);J=o;o=0;e:do if(!(J&1)?(o=0,ma(116,q|0,n|0),I=o,o=0,!(I&1)):0){o=0;I=Z(158,q|0)|0;L=o;o=0;do if(L&1)H=74;else{o=0;ma(181,h|0,1);K=o;o=0;if(K&1){H=74;break}o=0;oa(48,i|0,h|0,n|0,I|0);K=o;o=0;if(K&1){K=Pa()|0;T=z;lu(h);fa=T;ga=K;H=75;break}lu(h);o=0;ma(115,q|0,i|0);K=o;o=0;if(K&1){K=Pa()|0;T=z;S=c[i>>2]|0;if(!S){ha=K;ia=T;break}V=i+4|0;if((c[V>>2]|0)!=(S|0))c[V>>2]=S;mR(S);ha=K;ia=T;break}T=c[i>>2]|0;if(T|0){K=i+4|0;if((c[K>>2]|0)!=(T|0))c[K>>2]=T;mR(T)}o=0;la(257,q|0);T=o;o=0;if(T&1){H=73;break e}c[a>>2]=0;T=a+4|0;c[T>>2]=0;c[a+8>>2]=0;K=c[y>>2]|0;S=c[K+8>>2]|0;f:do if((S|0)==(K+12|0))H=70;else{V=r+4|0;U=S;while(1){o=0;na(52,r|0,q|0,U+20|0);X=o;o=0;if(X&1){H=93;break}c[s>>2]=c[T>>2];c[t>>2]=c[r>>2];c[u>>2]=c[V>>2];o=0;c[j>>2]=c[s>>2];c[i>>2]=c[t>>2];c[h>>2]=c[u>>2];aa(45,a|0,j|0,i|0,h|0)|0;X=o;o=0;if(X&1){H=94;break}X=c[r>>2]|0;if(X|0){if((c[V>>2]|0)!=(X|0))c[V>>2]=X;mR(X)}X=c[U+4>>2]|0;do if(!X){W=U+8|0;d=c[W>>2]|0;if((c[d>>2]|0)==(U|0)){ja=d;break}else ka=W;do{W=c[ka>>2]|0;ka=W+8|0;d=c[ka>>2]|0}while((c[d>>2]|0)!=(W|0));ja=d}else{P=X;while(1){d=c[P>>2]|0;if(!d)break;else P=d}ja=P}while(0);if((ja|0)==((c[y>>2]|0)+12|0)){H=70;break f}else U=ja}do if((H|0)==93){U=Pa()|0;pa=U;qa=z}else if((H|0)==94){U=Pa()|0;X=z;d=c[r>>2]|0;if(!d){pa=U;qa=X;break}if((c[V>>2]|0)!=(d|0))c[V>>2]=d;mR(d);pa=U;qa=X}while(0);ra=pa;sa=qa}while(0);if((H|0)==70){o=0;ma(121,r|0,q|0);S=o;o=0;do if(S&1){K=Pa()|0;ta=K;ua=z}else{c[v>>2]=c[T>>2];c[w>>2]=c[r>>2];K=r+4|0;c[x>>2]=c[K>>2];o=0;c[j>>2]=c[v>>2];c[i>>2]=c[w>>2];c[h>>2]=c[x>>2];aa(45,a|0,j|0,i|0,h|0)|0;V=o;o=0;do if(!(V&1)){o=0;la(232,p|0);X=o;o=0;if(X&1)break;o=0;la(232,n|0);X=o;o=0;if(X&1)break;X=c[r>>2]|0;if(X|0){if((c[K>>2]|0)!=(X|0))c[K>>2]=X;mR(X)}Oq(q);X=c[p>>2]|0;if(X|0){U=p+4|0;if((c[U>>2]|0)!=(X|0))c[U>>2]=X;mR(X)}X=c[n>>2]|0;if(!X){fk(m);fk(k);l=g;return}U=n+4|0;if((c[U>>2]|0)!=(X|0))c[U>>2]=X;mR(X);fk(m);fk(k);l=g;return}while(0);V=Pa()|0;X=z;U=c[r>>2]|0;if(!U){ta=V;ua=X;break}if((c[K>>2]|0)!=(U|0))c[K>>2]=U;mR(U);ta=V;ua=X}while(0);ra=ta;sa=ua}S=c[a>>2]|0;if(!S){va=ra;wa=sa;break e}if((c[T>>2]|0)!=(S|0))c[T>>2]=S;mR(S);va=ra;wa=sa;break e}while(0);if((H|0)==74){I=Pa()|0;fa=z;ga=I;H=75}if((H|0)==75){ha=ga;ia=fa}va=ha;wa=ia}else H=73;while(0);if((H|0)==73){H=Pa()|0;va=H;wa=z}Oq(q);da=va;ea=wa}wa=c[p>>2]|0;if(!wa){xa=da;ya=ea}else{va=p+4|0;if((c[va>>2]|0)!=(wa|0))c[va>>2]=wa;mR(wa);xa=da;ya=ea}}else{ea=Pa()|0;xa=ea;ya=z}ba=xa;ca=ya}ya=c[n>>2]|0;if(!ya){za=ba;Aa=ca}else{xa=n+4|0;if((c[xa>>2]|0)!=(ya|0))c[xa>>2]=ya;mR(ya);za=ba;Aa=ca}}else{ca=Pa()|0;za=ca;Aa=z}F=za;G=Aa}fk(m);D=F;E=G}B=D;C=E}fk(k);Ba=B;Ca=C;$a(Ba|0)}C=Ja(24)|0;o=0;na(73,C|0,9,73967);B=o;o=0;if(!(B&1))Xa(C|0,4424,56);B=Pa()|0;k=z;Sa(C|0);Ba=B;Ca=k;$a(Ba|0)}function Sr(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;Uu(a);o=0;la(302,a+4|0);b=o;o=0;if(!(b&1)){o=0;la(303,a+12|0);b=o;o=0;if(!(b&1)){o=0;la(304,a+20|0);b=o;o=0;if(!(b&1)){o=0;la(305,a+28|0);b=o;o=0;if(!(b&1))return;b=Pa()|0;d=z;e=c[a+24>>2]|0;if(!e){f=d;g=b}else{hR(e);f=d;g=b}}else{b=Pa()|0;f=z;g=b}b=c[a+16>>2]|0;if(!b){h=f;i=g}else{hR(b);h=f;i=g}}else{g=Pa()|0;h=z;i=g}g=c[a+8>>2]|0;if(!g){j=h;k=i}else{hR(g);j=h;k=i}}else{i=Pa()|0;j=z;k=i}i=c[a>>2]|0;c[a>>2]=0;if(!i)$a(k|0);rd[c[(c[i>>2]|0)+12>>2]&511](i);$a(k|0)}function Tr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;g=l;l=l+160|0;h=g+144|0;i=g+132|0;j=g+120|0;k=g+108|0;m=g+96|0;n=g+48|0;p=g+36|0;q=g+24|0;r=g+12|0;s=g;Ur(h,b,d,e);o=0;oa(50,i|0,b|0,h|0,128);e=o;o=0;if(!(e&1)){o=0;na(91,j|0,i|0,32);e=o;o=0;if(!(e&1)){e=j+4|0;d=c[j>>2]|0;t=d;if(((c[e>>2]|0)-d|0)==48){u=t+12|0;o=0;oa(51,k|0,b|0,t+36|0,f|0);f=o;o=0;if(!(f&1)){o=0;oa(52,m|0,b|0,t+24|0,k|0);f=o;o=0;if(!(f&1)){f=p+4|0;c[p>>2]=c[m>>2];v=m+4|0;c[f>>2]=c[v>>2];w=m+8|0;c[p+8>>2]=c[w>>2];c[w>>2]=0;c[v>>2]=0;c[m>>2]=0;c[q>>2]=0;w=q+4|0;c[w>>2]=0;c[q+8>>2]=0;c[q>>2]=c[d>>2];d=t+4|0;c[w>>2]=c[d>>2];x=t+8|0;c[q+8>>2]=c[x>>2];c[x>>2]=0;c[d>>2]=0;c[t>>2]=0;d=r+4|0;c[r>>2]=c[u>>2];x=t+16|0;c[d>>2]=c[x>>2];y=t+20|0;c[r+8>>2]=c[y>>2];c[y>>2]=0;c[x>>2]=0;c[u>>2]=0;u=s+4|0;c[s>>2]=c[k>>2];x=k+4|0;c[u>>2]=c[x>>2];y=k+8|0;c[s+8>>2]=c[y>>2];c[y>>2]=0;c[x>>2]=0;c[k>>2]=0;o=0;pa(19,n|0,p|0,q|0,r|0,s|0);y=o;o=0;do if(y&1){t=Pa()|0;A=z;B=c[s>>2]|0;if(B|0){if((c[u>>2]|0)!=(B|0))c[u>>2]=B;mR(B)}B=c[r>>2]|0;if(B|0){if((c[d>>2]|0)!=(B|0))c[d>>2]=B;mR(B)}B=c[q>>2]|0;if(B|0){if((c[w>>2]|0)!=(B|0))c[w>>2]=B;mR(B)}B=c[p>>2]|0;if(B|0){if((c[f>>2]|0)!=(B|0))c[f>>2]=B;mR(B)}C=t;D=A}else{A=b+28|0;Yr(A,n)|0;t=c[n+36>>2]|0;if(t|0){B=n+40|0;if((c[B>>2]|0)!=(t|0))c[B>>2]=t;mR(t)}t=c[n+24>>2]|0;if(t|0){B=n+28|0;if((c[B>>2]|0)!=(t|0))c[B>>2]=t;mR(t)}t=c[n+12>>2]|0;if(t|0){B=n+16|0;if((c[B>>2]|0)!=(t|0))c[B>>2]=t;mR(t)}t=c[n>>2]|0;if(t|0){B=n+4|0;if((c[B>>2]|0)!=(t|0))c[B>>2]=t;mR(t)}t=c[s>>2]|0;if(t|0){if((c[u>>2]|0)!=(t|0))c[u>>2]=t;mR(t)}t=c[r>>2]|0;if(t|0){if((c[d>>2]|0)!=(t|0))c[d>>2]=t;mR(t)}t=c[q>>2]|0;if(t|0){if((c[w>>2]|0)!=(t|0))c[w>>2]=t;mR(t)}t=c[p>>2]|0;if(t|0){if((c[f>>2]|0)!=(t|0))c[f>>2]=t;mR(t)}o=0;ma(142,a|0,A|0);A=o;o=0;if(A&1){A=Pa()|0;C=A;D=z;break}A=c[m>>2]|0;if(A|0){if((c[v>>2]|0)!=(A|0))c[v>>2]=A;mR(A)}A=c[k>>2]|0;if(A|0){if((c[x>>2]|0)!=(A|0))c[x>>2]=A;mR(A)}A=c[j>>2]|0;if(A|0){t=c[e>>2]|0;if((t|0)==(A|0))E=A;else{B=t;while(1){t=B+-12|0;c[e>>2]=t;F=c[t>>2]|0;if(!F)G=t;else{t=B+-8|0;if((c[t>>2]|0)!=(F|0))c[t>>2]=F;mR(F);G=c[e>>2]|0}if((G|0)==(A|0))break;else B=G}E=c[j>>2]|0}mR(E)}B=c[i>>2]|0;if(B|0){A=i+4|0;if((c[A>>2]|0)!=(B|0))c[A>>2]=B;mR(B)}B=c[h>>2]|0;if(!B){l=g;return}A=h+4|0;if((c[A>>2]|0)!=(B|0))c[A>>2]=B;mR(B);l=g;return}while(0);g=c[m>>2]|0;if(!g){H=C;I=D;J=k}else{if((c[v>>2]|0)!=(g|0))c[v>>2]=g;mR(g);H=C;I=D;J=k}}else{D=Pa()|0;H=D;I=z;J=k}D=c[J>>2]|0;if(!D){K=H;L=I}else{J=k+4|0;if((c[J>>2]|0)!=(D|0))c[J>>2]=D;mR(D);K=H;L=I}}else{I=Pa()|0;K=I;L=z}M=K;N=L;O=j}else{o=0;oa(41,73998,74045,85,74132);o=0;L=Pa()|0;M=L;N=z;O=j}L=c[O>>2]|0;if(!L){P=M;Q=N}else{O=c[e>>2]|0;if((O|0)==(L|0))R=L;else{K=O;while(1){O=K+-12|0;c[e>>2]=O;I=c[O>>2]|0;if(!I)S=O;else{O=K+-8|0;if((c[O>>2]|0)!=(I|0))c[O>>2]=I;mR(I);S=c[e>>2]|0}if((S|0)==(L|0))break;else K=S}R=c[j>>2]|0}mR(R);P=M;Q=N}}else{N=Pa()|0;P=N;Q=z}N=c[i>>2]|0;if(!N){T=P;U=Q}else{M=i+4|0;if((c[M>>2]|0)!=(N|0))c[M>>2]=N;mR(N);T=P;U=Q}}else{Q=Pa()|0;T=Q;U=z}U=c[h>>2]|0;if(!U)$a(T|0);Q=h+4|0;if((c[Q>>2]|0)!=(U|0))c[Q>>2]=U;mR(U);$a(T|0)}function Ur(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=l;l=l+16|0;g=f;c[a>>2]=0;h=a+4|0;c[h>>2]=0;c[a+8>>2]=0;o=0;i=Z(201,e|0)|0;j=o;o=0;a:do if((((((!(j&1)?(o=0,k=Z(182,i|0)|0,m=o,o=0,!(m&1)):0)?(o=0,m=Z(197,d|0)|0,n=o,o=0,!(n&1)):0)?(o=0,n=Z(187,m|0)|0,m=o,o=0,!(m&1)):0)?(o=0,m=Z(197,d|0)|0,p=o,o=0,!(p&1)):0)?(o=0,p=Z(188,m|0)|0,m=o,o=0,!(m&1)):0)?(m=b+4|0,q=c[m>>2]|0,o=0,pa(c[c[q>>2]>>2]|0,g|0,q|0,k|0,n|0,p|0),p=o,o=0,!(p&1)):0){o=0;_(126,a|0,g|0)|0;p=o;o=0;if(p&1){p=Pa()|0;n=z;k=c[g>>2]|0;if(!k){r=n;s=p;t=58;break}q=g+4|0;if((c[q>>2]|0)!=(k|0))c[q>>2]=k;mR(k);r=n;s=p;t=58;break}p=c[g>>2]|0;if(p|0){n=g+4|0;if((c[n>>2]|0)!=(p|0))c[n>>2]=p;mR(p)}o=0;p=Z(200,e|0)|0;n=o;o=0;do if((((((!(n&1)?(o=0,k=Z(182,p|0)|0,q=o,o=0,!(q&1)):0)?(o=0,q=Z(198,d|0)|0,u=o,o=0,!(u&1)):0)?(o=0,u=Z(187,q|0)|0,q=o,o=0,!(q&1)):0)?(o=0,q=Z(198,d|0)|0,v=o,o=0,!(v&1)):0)?(o=0,v=Z(188,q|0)|0,q=o,o=0,!(q&1)):0)?(q=c[m>>2]|0,o=0,pa(c[c[q>>2]>>2]|0,g|0,q|0,k|0,u|0,v|0),v=o,o=0,!(v&1)):0){o=0;_(126,a|0,g|0)|0;v=o;o=0;if(v&1){v=Pa()|0;u=z;k=c[g>>2]|0;if(!k){w=u;x=v;break}q=g+4|0;if((c[q>>2]|0)!=(k|0))c[q>>2]=k;mR(k);w=u;x=v;break}v=c[g>>2]|0;if(v|0){u=g+4|0;if((c[u>>2]|0)!=(v|0))c[u>>2]=v;mR(v)}o=0;v=Z(201,e|0)|0;u=o;o=0;do if(u&1)t=65;else{o=0;k=Z(182,v|0)|0;q=o;o=0;if(q&1){t=65;break}o=0;q=Z(198,d|0)|0;y=o;o=0;if(y&1){t=65;break}o=0;y=Z(187,q|0)|0;q=o;o=0;if(q&1){t=65;break}o=0;q=Z(198,d|0)|0;A=o;o=0;if(A&1){t=65;break}o=0;A=Z(188,q|0)|0;q=o;o=0;if(q&1){t=65;break}q=c[m>>2]|0;o=0;pa(c[c[q>>2]>>2]|0,g|0,q|0,k|0,y|0,A|0);A=o;o=0;if(A&1){t=65;break}o=0;_(126,a|0,g|0)|0;A=o;o=0;if(A&1){A=Pa()|0;y=z;k=c[g>>2]|0;if(!k){B=y;C=A;break}q=g+4|0;if((c[q>>2]|0)!=(k|0))c[q>>2]=k;mR(k);B=y;C=A;break}A=c[g>>2]|0;if(A|0){y=g+4|0;if((c[y>>2]|0)!=(A|0))c[y>>2]=A;mR(A)}o=0;A=Z(202,e|0)|0;y=o;o=0;do if(!(y&1)){o=0;k=Z(181,A|0)|0;q=o;o=0;if(q&1)break;if(k){l=f;return}o=0;k=Z(202,e|0)|0;q=o;o=0;do if(q&1)t=72;else{o=0;D=Z(182,k|0)|0;E=o;o=0;if(E&1){t=72;break}o=0;E=Z(198,d|0)|0;F=o;o=0;if(F&1){t=72;break}o=0;F=Z(187,E|0)|0;E=o;o=0;if(E&1){t=72;break}o=0;E=Z(198,d|0)|0;G=o;o=0;if(G&1){t=72;break}o=0;G=Z(188,E|0)|0;E=o;o=0;if(E&1){t=72;break}E=c[m>>2]|0;o=0;pa(c[c[E>>2]>>2]|0,g|0,E|0,D|0,F|0,G|0);G=o;o=0;if(G&1){t=72;break}o=0;_(126,a|0,g|0)|0;G=o;o=0;if(G&1){G=Pa()|0;F=z;D=c[g>>2]|0;if(!D){H=F;I=G;break}E=g+4|0;if((c[E>>2]|0)!=(D|0))c[E>>2]=D;mR(D);H=F;I=G;break}G=c[g>>2]|0;if(G|0){F=g+4|0;if((c[F>>2]|0)!=(G|0))c[F>>2]=G;mR(G)}l=f;return}while(0);if((t|0)==72){k=Pa()|0;H=z;I=k}J=H;K=I;break a}while(0);A=Pa()|0;J=z;K=A;break a}while(0);if((t|0)==65){v=Pa()|0;B=z;C=v}J=B;K=C;break a}else t=59;while(0);if((t|0)==59){m=Pa()|0;w=z;x=m}J=w;K=x}else t=53;while(0);if((t|0)==53){x=Pa()|0;r=z;s=x;t=58}if((t|0)==58){J=r;K=s}s=c[a>>2]|0;if(!s)$a(K|0);if((c[h>>2]|0)!=(s|0))c[h>>2]=s;mR(s);$a(K|0)}function Vr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0;f=l;l=l+32|0;g=f+12|0;h=f;c[g>>2]=0;i=g+4|0;c[i>>2]=0;c[g+8>>2]=0;c[h>>2]=0;j=h+4|0;c[j>>2]=0;c[h+8>>2]=0;k=c[b+12>>2]|0;o=0;qa(c[c[k>>2]>>2]|0,a|0,k|0,d|0,g|0,h|0,e|0);d=o;o=0;do if(d&1){k=Pa()|0;m=z;n=k}else{k=a+4|0;if(((c[k>>2]|0)-(c[a>>2]|0)|0)!=(e|0)){o=0;oa(41,74161,74045,262,74249);o=0;b=Pa()|0;p=z;q=c[a>>2]|0;if(!q){m=p;n=b;break}if((c[k>>2]|0)!=(q|0))c[k>>2]=q;mR(q);m=p;n=b;break}b=c[h>>2]|0;if(b|0){if((c[j>>2]|0)!=(b|0))c[j>>2]=b;mR(b)}b=c[g>>2]|0;if(!b){l=f;return}if((c[i>>2]|0)!=(b|0))c[i>>2]=b;mR(b);l=f;return}while(0);f=c[h>>2]|0;if(f|0){if((c[j>>2]|0)!=(f|0))c[j>>2]=f;mR(f)}f=c[g>>2]|0;if(!f)$a(n|0);if((c[i>>2]|0)!=(f|0))c[i>>2]=f;mR(f);$a(n|0)}function Wr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;g=l;l=l+32|0;h=g+12|0;i=g;c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;j=i+11|0;a[j>>0]=6;a[i>>0]=a[74154]|0;a[i+1>>0]=a[74155]|0;a[i+2>>0]=a[74156]|0;a[i+3>>0]=a[74157]|0;a[i+4>>0]=a[74158]|0;a[i+5>>0]=a[74159]|0;a[i+6>>0]=0;o=0;ma(155,h|0,i|0);k=o;o=0;do if(k&1){m=Pa()|0;n=z;p=m}else{m=c[d+12>>2]|0;o=0;qa(c[c[m>>2]>>2]|0,b|0,m|0,e|0,f|0,h|0,32);m=o;o=0;if(m&1){m=Pa()|0;q=z;r=c[h>>2]|0;if(!r){n=q;p=m;break}s=h+4|0;if((c[s>>2]|0)!=(r|0))c[s>>2]=r;mR(r);n=q;p=m;break}m=c[h>>2]|0;if(m|0){q=h+4|0;if((c[q>>2]|0)!=(m|0))c[q>>2]=m;mR(m)}if((a[j>>0]|0)>=0){l=g;return}mR(c[i>>2]|0);l=g;return}while(0);if((a[j>>0]|0)>=0)$a(p|0);mR(c[i>>2]|0);$a(p|0)}function Xr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0;g=l;l=l+32|0;h=g+12|0;i=g;c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;j=i+11|0;a[j>>0]=6;a[i>>0]=a[74154]|0;a[i+1>>0]=a[74155]|0;a[i+2>>0]=a[74156]|0;a[i+3>>0]=a[74157]|0;a[i+4>>0]=a[74158]|0;a[i+5>>0]=a[74159]|0;a[i+6>>0]=0;o=0;ma(155,h|0,i|0);k=o;o=0;do if(k&1){m=Pa()|0;n=z;p=m}else{m=c[d+12>>2]|0;o=0;qa(c[c[m>>2]>>2]|0,b|0,m|0,e|0,f|0,h|0,32);m=o;o=0;if(m&1){m=Pa()|0;q=z;r=c[h>>2]|0;if(!r){n=q;p=m;break}s=h+4|0;if((c[s>>2]|0)!=(r|0))c[s>>2]=r;mR(r);n=q;p=m;break}m=c[h>>2]|0;if(m|0){q=h+4|0;if((c[q>>2]|0)!=(m|0))c[q>>2]=m;mR(m)}if((a[j>>0]|0)>=0){l=g;return}mR(c[i>>2]|0);l=g;return}while(0);if((a[j>>0]|0)>=0)$a(p|0);mR(c[i>>2]|0);$a(p|0)}function Yr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=c[a>>2]|0;e=a+4|0;if(!d)f=a+8|0;else{if((c[e>>2]|0)!=(d|0))c[e>>2]=d;mR(d);d=a+8|0;c[d>>2]=0;c[e>>2]=0;c[a>>2]=0;f=d}c[a>>2]=c[b>>2];d=b+4|0;c[e>>2]=c[d>>2];e=b+8|0;c[f>>2]=c[e>>2];c[e>>2]=0;c[d>>2]=0;c[b>>2]=0;d=a+12|0;e=b+12|0;f=c[d>>2]|0;g=a+16|0;if(!f)h=a+20|0;else{if((c[g>>2]|0)!=(f|0))c[g>>2]=f;mR(f);f=a+20|0;c[f>>2]=0;c[g>>2]=0;c[d>>2]=0;h=f}c[d>>2]=c[e>>2];d=b+16|0;c[g>>2]=c[d>>2];g=b+20|0;c[h>>2]=c[g>>2];c[g>>2]=0;c[d>>2]=0;c[e>>2]=0;e=a+24|0;d=b+24|0;g=c[e>>2]|0;h=a+28|0;if(!g)i=a+32|0;else{if((c[h>>2]|0)!=(g|0))c[h>>2]=g;mR(g);g=a+32|0;c[g>>2]=0;c[h>>2]=0;c[e>>2]=0;i=g}c[e>>2]=c[d>>2];e=b+28|0;c[h>>2]=c[e>>2];h=b+32|0;c[i>>2]=c[h>>2];c[h>>2]=0;c[e>>2]=0;c[d>>2]=0;d=a+36|0;e=b+36|0;h=c[d>>2]|0;i=a+40|0;if(!h){j=a+44|0;k=c[e>>2]|0;c[d>>2]=k;l=b+40|0;m=c[l>>2]|0;c[i>>2]=m;n=b+44|0;o=c[n>>2]|0;c[j>>2]=o;c[n>>2]=0;c[l>>2]=0;c[e>>2]=0;return a|0}if((c[i>>2]|0)!=(h|0))c[i>>2]=h;mR(h);h=a+44|0;c[h>>2]=0;c[i>>2]=0;c[d>>2]=0;j=h;k=c[e>>2]|0;c[d>>2]=k;l=b+40|0;m=c[l>>2]|0;c[i>>2]=m;n=b+44|0;o=c[n>>2]|0;c[j>>2]=o;c[n>>2]=0;c[l>>2]=0;c[e>>2]=0;return a|0}function Zr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;g=l;l=l+160|0;h=g+144|0;i=g+132|0;j=g+120|0;k=g+108|0;m=g+96|0;n=g+48|0;p=g+36|0;q=g+24|0;r=g+12|0;s=g;_r(h,b,d,e);o=0;oa(50,i|0,b|0,h|0,128);e=o;o=0;if(!(e&1)){o=0;na(91,j|0,i|0,32);e=o;o=0;if(!(e&1)){e=j+4|0;d=c[j>>2]|0;t=d;if(((c[e>>2]|0)-d|0)==48){u=t+12|0;o=0;oa(51,k|0,b|0,t+36|0,f|0);f=o;o=0;if(!(f&1)){o=0;oa(52,m|0,b|0,t+24|0,k|0);f=o;o=0;if(!(f&1)){f=p+4|0;c[p>>2]=c[m>>2];v=m+4|0;c[f>>2]=c[v>>2];w=m+8|0;c[p+8>>2]=c[w>>2];c[w>>2]=0;c[v>>2]=0;c[m>>2]=0;w=q+4|0;c[q>>2]=c[u>>2];x=t+16|0;c[w>>2]=c[x>>2];y=t+20|0;c[q+8>>2]=c[y>>2];c[y>>2]=0;c[x>>2]=0;c[u>>2]=0;c[r>>2]=0;u=r+4|0;c[u>>2]=0;c[r+8>>2]=0;c[r>>2]=c[d>>2];d=t+4|0;c[u>>2]=c[d>>2];x=t+8|0;c[r+8>>2]=c[x>>2];c[x>>2]=0;c[d>>2]=0;c[t>>2]=0;t=s+4|0;c[s>>2]=c[k>>2];d=k+4|0;c[t>>2]=c[d>>2];x=k+8|0;c[s+8>>2]=c[x>>2];c[x>>2]=0;c[d>>2]=0;c[k>>2]=0;o=0;pa(19,n|0,p|0,q|0,r|0,s|0);x=o;o=0;do if(x&1){y=Pa()|0;A=z;B=c[s>>2]|0;if(B|0){if((c[t>>2]|0)!=(B|0))c[t>>2]=B;mR(B)}B=c[r>>2]|0;if(B|0){if((c[u>>2]|0)!=(B|0))c[u>>2]=B;mR(B)}B=c[q>>2]|0;if(B|0){if((c[w>>2]|0)!=(B|0))c[w>>2]=B;mR(B)}B=c[p>>2]|0;if(B|0){if((c[f>>2]|0)!=(B|0))c[f>>2]=B;mR(B)}C=y;D=A}else{A=b+28|0;Yr(A,n)|0;y=c[n+36>>2]|0;if(y|0){B=n+40|0;if((c[B>>2]|0)!=(y|0))c[B>>2]=y;mR(y)}y=c[n+24>>2]|0;if(y|0){B=n+28|0;if((c[B>>2]|0)!=(y|0))c[B>>2]=y;mR(y)}y=c[n+12>>2]|0;if(y|0){B=n+16|0;if((c[B>>2]|0)!=(y|0))c[B>>2]=y;mR(y)}y=c[n>>2]|0;if(y|0){B=n+4|0;if((c[B>>2]|0)!=(y|0))c[B>>2]=y;mR(y)}y=c[s>>2]|0;if(y|0){if((c[t>>2]|0)!=(y|0))c[t>>2]=y;mR(y)}y=c[r>>2]|0;if(y|0){if((c[u>>2]|0)!=(y|0))c[u>>2]=y;mR(y)}y=c[q>>2]|0;if(y|0){if((c[w>>2]|0)!=(y|0))c[w>>2]=y;mR(y)}y=c[p>>2]|0;if(y|0){if((c[f>>2]|0)!=(y|0))c[f>>2]=y;mR(y)}o=0;ma(142,a|0,A|0);A=o;o=0;if(A&1){A=Pa()|0;C=A;D=z;break}A=c[m>>2]|0;if(A|0){if((c[v>>2]|0)!=(A|0))c[v>>2]=A;mR(A)}A=c[k>>2]|0;if(A|0){if((c[d>>2]|0)!=(A|0))c[d>>2]=A;mR(A)}A=c[j>>2]|0;if(A|0){y=c[e>>2]|0;if((y|0)==(A|0))E=A;else{B=y;while(1){y=B+-12|0;c[e>>2]=y;F=c[y>>2]|0;if(!F)G=y;else{y=B+-8|0;if((c[y>>2]|0)!=(F|0))c[y>>2]=F;mR(F);G=c[e>>2]|0}if((G|0)==(A|0))break;else B=G}E=c[j>>2]|0}mR(E)}B=c[i>>2]|0;if(B|0){A=i+4|0;if((c[A>>2]|0)!=(B|0))c[A>>2]=B;mR(B)}B=c[h>>2]|0;if(!B){l=g;return}A=h+4|0;if((c[A>>2]|0)!=(B|0))c[A>>2]=B;mR(B);l=g;return}while(0);g=c[m>>2]|0;if(!g){H=C;I=D;J=k}else{if((c[v>>2]|0)!=(g|0))c[v>>2]=g;mR(g);H=C;I=D;J=k}}else{D=Pa()|0;H=D;I=z;J=k}D=c[J>>2]|0;if(!D){K=H;L=I}else{J=k+4|0;if((c[J>>2]|0)!=(D|0))c[J>>2]=D;mR(D);K=H;L=I}}else{I=Pa()|0;K=I;L=z}M=K;N=L;O=j}else{o=0;oa(41,73998,74045,111,74268);o=0;L=Pa()|0;M=L;N=z;O=j}L=c[O>>2]|0;if(!L){P=M;Q=N}else{O=c[e>>2]|0;if((O|0)==(L|0))R=L;else{K=O;while(1){O=K+-12|0;c[e>>2]=O;I=c[O>>2]|0;if(!I)S=O;else{O=K+-8|0;if((c[O>>2]|0)!=(I|0))c[O>>2]=I;mR(I);S=c[e>>2]|0}if((S|0)==(L|0))break;else K=S}R=c[j>>2]|0}mR(R);P=M;Q=N}}else{N=Pa()|0;P=N;Q=z}N=c[i>>2]|0;if(!N){T=P;U=Q}else{M=i+4|0;if((c[M>>2]|0)!=(N|0))c[M>>2]=N;mR(N);T=P;U=Q}}else{Q=Pa()|0;T=Q;U=z}U=c[h>>2]|0;if(!U)$a(T|0);Q=h+4|0;if((c[Q>>2]|0)!=(U|0))c[Q>>2]=U;mR(U);$a(T|0)}function _r(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=l;l=l+16|0;g=f;c[a>>2]=0;h=a+4|0;c[h>>2]=0;c[a+8>>2]=0;o=0;i=Z(194,e|0)|0;j=o;o=0;a:do if((((((!(j&1)?(o=0,k=Z(182,i|0)|0,m=o,o=0,!(m&1)):0)?(o=0,m=Z(205,d|0)|0,n=o,o=0,!(n&1)):0)?(o=0,n=Z(187,m|0)|0,m=o,o=0,!(m&1)):0)?(o=0,m=Z(205,d|0)|0,p=o,o=0,!(p&1)):0)?(o=0,p=Z(188,m|0)|0,m=o,o=0,!(m&1)):0)?(m=b+4|0,q=c[m>>2]|0,o=0,pa(c[c[q>>2]>>2]|0,g|0,q|0,k|0,n|0,p|0),p=o,o=0,!(p&1)):0){o=0;_(126,a|0,g|0)|0;p=o;o=0;if(p&1){p=Pa()|0;n=z;k=c[g>>2]|0;if(!k){r=n;s=p;t=58;break}q=g+4|0;if((c[q>>2]|0)!=(k|0))c[q>>2]=k;mR(k);r=n;s=p;t=58;break}p=c[g>>2]|0;if(p|0){n=g+4|0;if((c[n>>2]|0)!=(p|0))c[n>>2]=p;mR(p)}o=0;p=Z(195,e|0)|0;n=o;o=0;do if((((((!(n&1)?(o=0,k=Z(182,p|0)|0,q=o,o=0,!(q&1)):0)?(o=0,q=Z(204,d|0)|0,u=o,o=0,!(u&1)):0)?(o=0,u=Z(187,q|0)|0,q=o,o=0,!(q&1)):0)?(o=0,q=Z(204,d|0)|0,v=o,o=0,!(v&1)):0)?(o=0,v=Z(188,q|0)|0,q=o,o=0,!(q&1)):0)?(q=c[m>>2]|0,o=0,pa(c[c[q>>2]>>2]|0,g|0,q|0,k|0,u|0,v|0),v=o,o=0,!(v&1)):0){o=0;_(126,a|0,g|0)|0;v=o;o=0;if(v&1){v=Pa()|0;u=z;k=c[g>>2]|0;if(!k){w=u;x=v;break}q=g+4|0;if((c[q>>2]|0)!=(k|0))c[q>>2]=k;mR(k);w=u;x=v;break}v=c[g>>2]|0;if(v|0){u=g+4|0;if((c[u>>2]|0)!=(v|0))c[u>>2]=v;mR(v)}o=0;v=Z(195,e|0)|0;u=o;o=0;do if(u&1)t=65;else{o=0;k=Z(182,v|0)|0;q=o;o=0;if(q&1){t=65;break}o=0;q=Z(205,d|0)|0;y=o;o=0;if(y&1){t=65;break}o=0;y=Z(187,q|0)|0;q=o;o=0;if(q&1){t=65;break}o=0;q=Z(205,d|0)|0;A=o;o=0;if(A&1){t=65;break}o=0;A=Z(188,q|0)|0;q=o;o=0;if(q&1){t=65;break}q=c[m>>2]|0;o=0;pa(c[c[q>>2]>>2]|0,g|0,q|0,k|0,y|0,A|0);A=o;o=0;if(A&1){t=65;break}o=0;_(126,a|0,g|0)|0;A=o;o=0;if(A&1){A=Pa()|0;y=z;k=c[g>>2]|0;if(!k){B=y;C=A;break}q=g+4|0;if((c[q>>2]|0)!=(k|0))c[q>>2]=k;mR(k);B=y;C=A;break}A=c[g>>2]|0;if(A|0){y=g+4|0;if((c[y>>2]|0)!=(A|0))c[y>>2]=A;mR(A)}o=0;A=Z(206,d|0)|0;y=o;o=0;do if(!(y&1)){o=0;k=Z(186,A|0)|0;q=o;o=0;if(q&1)break;if(k){l=f;return}o=0;k=Z(195,e|0)|0;q=o;o=0;do if(q&1)t=72;else{o=0;D=Z(182,k|0)|0;E=o;o=0;if(E&1){t=72;break}o=0;E=Z(206,d|0)|0;F=o;o=0;if(F&1){t=72;break}o=0;F=Z(187,E|0)|0;E=o;o=0;if(E&1){t=72;break}o=0;E=Z(206,d|0)|0;G=o;o=0;if(G&1){t=72;break}o=0;G=Z(188,E|0)|0;E=o;o=0;if(E&1){t=72;break}E=c[m>>2]|0;o=0;pa(c[c[E>>2]>>2]|0,g|0,E|0,D|0,F|0,G|0);G=o;o=0;if(G&1){t=72;break}o=0;_(126,a|0,g|0)|0;G=o;o=0;if(G&1){G=Pa()|0;F=z;D=c[g>>2]|0;if(!D){H=F;I=G;break}E=g+4|0;if((c[E>>2]|0)!=(D|0))c[E>>2]=D;mR(D);H=F;I=G;break}G=c[g>>2]|0;if(G|0){F=g+4|0;if((c[F>>2]|0)!=(G|0))c[F>>2]=G;mR(G)}l=f;return}while(0);if((t|0)==72){k=Pa()|0;H=z;I=k}J=H;K=I;break a}while(0);A=Pa()|0;J=z;K=A;break a}while(0);if((t|0)==65){v=Pa()|0;B=z;C=v}J=B;K=C;break a}else t=59;while(0);if((t|0)==59){m=Pa()|0;w=z;x=m}J=w;K=x}else t=53;while(0);if((t|0)==53){x=Pa()|0;r=z;s=x;t=58}if((t|0)==58){J=r;K=s}s=c[a>>2]|0;if(!s)$a(K|0);if((c[h>>2]|0)!=(s|0))c[h>>2]=s;mR(s);$a(K|0)}function $r(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0;f=l;l=l+128|0;g=f+108|0;h=f+96|0;i=f+72|0;j=f+60|0;k=f+36|0;m=f+12|0;n=f+48|0;p=f+24|0;q=f;r=d+28|0;if(Gs(r)|0){s=Ja(24)|0;o=0;na(73,s|0,9,74290);t=o;o=0;if(!(t&1))Xa(s|0,4424,56);t=Pa()|0;u=z;Sa(s|0);v=u;w=t;$a(w|0)}t=c[d>>2]|0;td[c[c[t>>2]>>2]&127](g,t,16);o=0;t=Z(175,r|0)|0;u=o;o=0;do if(u&1){s=Pa()|0;x=z;y=s}else{c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;s=j+11|0;a[s>>0]=6;a[j>>0]=a[74154]|0;a[j+1>>0]=a[74155]|0;a[j+2>>0]=a[74156]|0;a[j+3>>0]=a[74157]|0;a[j+4>>0]=a[74158]|0;a[j+5>>0]=a[74159]|0;a[j+6>>0]=0;o=0;ma(155,i|0,j|0);A=o;o=0;if(!(A&1)){A=d+20|0;B=c[A>>2]|0;o=0;C=Z(c[c[B>>2]>>2]|0,B|0)|0;B=o;o=0;if((!(B&1)?(B=c[A>>2]|0,o=0,D=Z(c[(c[B>>2]|0)+4>>2]|0,B|0)|0,B=o,o=0,!(B&1)):0)?(B=c[d+12>>2]|0,o=0,qa(c[c[B>>2]>>2]|0,h|0,B|0,t|0,g|0,i|0,D+C|0),C=o,o=0,!(C&1)):0){C=c[i>>2]|0;if(C|0){D=i+4|0;if((c[D>>2]|0)!=(C|0))c[D>>2]=C;mR(C)}if((a[s>>0]|0)<0)mR(c[j>>2]|0);C=h+4|0;D=(c[C>>2]|0)-(c[h>>2]|0)|0;B=c[A>>2]|0;o=0;E=Z(c[c[B>>2]>>2]|0,B|0)|0;B=o;o=0;do if(!(B&1)?(F=c[A>>2]|0,o=0,G=Z(c[(c[F>>2]|0)+4>>2]|0,F|0)|0,F=o,o=0,!(F&1)):0){if((D|0)!=(G+E|0)){o=0;oa(41,74342,74045,139,74415);o=0;H=29;break}G=c[A>>2]|0;o=0;F=Z(c[c[G>>2]>>2]|0,G|0)|0;G=o;o=0;do if(!(G&1)?(o=0,na(92,i|0,h|0,F|0),I=o,o=0,!(I&1)):0){I=j+4|0;c[j>>2]=c[i>>2];J=i+4|0;c[I>>2]=c[J>>2];K=i+8|0;c[j+8>>2]=c[K>>2];c[K>>2]=0;c[J>>2]=0;c[i>>2]=0;K=i+12|0;L=k+4|0;c[k>>2]=c[K>>2];M=i+16|0;c[L>>2]=c[M>>2];N=i+20|0;c[k+8>>2]=c[N>>2];c[N>>2]=0;c[M>>2]=0;c[K>>2]=0;o=0;K=Z(177,r|0)|0;N=o;o=0;do if(N&1)H=88;else{O=c[A>>2]|0;o=0;qa(c[(c[O>>2]|0)+8>>2]|0,m|0,O|0,e|0,j|0,k|0,K|0);O=o;o=0;if(O&1){H=88;break}o=0;O=Z(174,r|0)|0;P=o;o=0;a:do if(P&1){Q=Pa()|0;R=z;S=Q;H=90}else{c[n>>2]=0;Q=n+4|0;c[Q>>2]=0;c[n+8>>2]=0;T=O+4|0;U=(c[T>>2]|0)-(c[O>>2]|0)|0;b:do if(U|0){do if((U|0)<0){o=0;la(271,n|0);o=0}else{o=0;V=Z(209,U|0)|0;W=o;o=0;if(W&1)break;c[Q>>2]=V;c[n>>2]=V;c[n+8>>2]=V+U;W=c[O>>2]|0;X=(c[T>>2]|0)-W|0;if((X|0)<=0)break b;CT(V|0,W|0,X|0)|0;c[Q>>2]=V+X;break b}while(0);X=Pa()|0;V=z;W=c[n>>2]|0;if(!W){R=V;S=X;H=90;break a}if((c[Q>>2]|0)!=(W|0))c[Q>>2]=W;mR(W);R=V;S=X;H=90;break a}while(0);T=p+4|0;c[p>>2]=c[g>>2];U=g+4|0;c[T>>2]=c[U>>2];X=g+8|0;c[p+8>>2]=c[X>>2];c[X>>2]=0;c[U>>2]=0;c[g>>2]=0;X=q+4|0;c[q>>2]=c[m>>2];V=m+4|0;c[X>>2]=c[V>>2];W=m+8|0;c[q+8>>2]=c[W>>2];c[W>>2]=0;c[V>>2]=0;c[m>>2]=0;o=0;oa(34,b|0,n|0,p|0,q|0);W=o;o=0;if(W&1){W=Pa()|0;Y=z;_=c[q>>2]|0;if(_|0){if((c[X>>2]|0)!=(_|0))c[X>>2]=_;mR(_)}_=c[p>>2]|0;if(_|0){if((c[T>>2]|0)!=(_|0))c[T>>2]=_;mR(_)}_=c[n>>2]|0;if(!_){$=Y;aa=W;ba=m;break}if((c[Q>>2]|0)!=(_|0))c[Q>>2]=_;mR(_);$=Y;aa=W;ba=m;break}W=c[q>>2]|0;if(W|0){if((c[X>>2]|0)!=(W|0))c[X>>2]=W;mR(W)}W=c[p>>2]|0;if(W|0){if((c[T>>2]|0)!=(W|0))c[T>>2]=W;mR(W)}W=c[n>>2]|0;if(W|0){if((c[Q>>2]|0)!=(W|0))c[Q>>2]=W;mR(W)}W=c[m>>2]|0;if(W|0){if((c[V>>2]|0)!=(W|0))c[V>>2]=W;mR(W)}W=c[k>>2]|0;if(W|0){if((c[L>>2]|0)!=(W|0))c[L>>2]=W;mR(W)}W=c[j>>2]|0;if(W|0){if((c[I>>2]|0)!=(W|0))c[I>>2]=W;mR(W)}W=c[i+12>>2]|0;if(W|0){if((c[M>>2]|0)!=(W|0))c[M>>2]=W;mR(W)}W=c[i>>2]|0;if(W|0){if((c[J>>2]|0)!=(W|0))c[J>>2]=W;mR(W)}W=c[h>>2]|0;if(W|0){if((c[C>>2]|0)!=(W|0))c[C>>2]=W;mR(W)}W=c[g>>2]|0;if(!W){l=f;return}if((c[U>>2]|0)!=(W|0))c[U>>2]=W;mR(W);l=f;return}while(0);if((H|0)==90){$=R;aa=S;ba=m}O=c[ba>>2]|0;if(!O){ca=$;da=aa;break}P=m+4|0;if((c[P>>2]|0)!=(O|0))c[P>>2]=O;mR(O);ca=$;da=aa}while(0);if((H|0)==88){K=Pa()|0;ca=z;da=K}K=c[k>>2]|0;if(K|0){if((c[L>>2]|0)!=(K|0))c[L>>2]=K;mR(K)}K=c[j>>2]|0;if(K|0){if((c[I>>2]|0)!=(K|0))c[I>>2]=K;mR(K)}K=c[i+12>>2]|0;if(K|0){if((c[M>>2]|0)!=(K|0))c[M>>2]=K;mR(K)}K=c[i>>2]|0;if(!K){ea=ca;fa=da;break}if((c[J>>2]|0)!=(K|0))c[J>>2]=K;mR(K);ea=ca;fa=da}else H=87;while(0);if((H|0)==87){F=Pa()|0;ea=z;fa=F}ga=ea;ha=fa}else H=29;while(0);if((H|0)==29){A=Pa()|0;ga=z;ha=A}A=c[h>>2]|0;if(!A){x=ga;y=ha;break}if((c[C>>2]|0)!=(A|0))c[C>>2]=A;mR(A);x=ga;y=ha;break}A=Pa()|0;E=z;D=c[i>>2]|0;if(!D){ia=E;ja=A}else{B=i+4|0;if((c[B>>2]|0)!=(D|0))c[B>>2]=D;mR(D);ia=E;ja=A}}else{A=Pa()|0;ia=z;ja=A}if((a[s>>0]|0)<0)mR(c[j>>2]|0);x=ia;y=ja}while(0);ja=c[g>>2]|0;if(ja|0){ia=g+4|0;if((c[ia>>2]|0)!=(ja|0))c[ia>>2]=ja;mR(ja)}v=x;w=y;$a(w|0)}function as(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;f=l;l=l+64|0;g=f+48|0;h=f+24|0;i=f+12|0;j=f;k=d+28|0;if(Gs(k)|0){m=Ja(24)|0;o=0;na(73,m|0,9,74423);n=o;o=0;if(!(n&1))Xa(m|0,4424,56);n=Pa()|0;p=z;Sa(m|0);q=p;r=n;$a(r|0)}n=Js(k)|0;p=fs(e)|0;c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;m=i+11|0;a[m>>0]=6;a[i>>0]=a[74154]|0;a[i+1>>0]=a[74155]|0;a[i+2>>0]=a[74156]|0;a[i+3>>0]=a[74157]|0;a[i+4>>0]=a[74158]|0;a[i+5>>0]=a[74159]|0;a[i+6>>0]=0;o=0;ma(155,h|0,i|0);s=o;o=0;do if(!(s&1)){t=d+20|0;u=c[t>>2]|0;o=0;v=Z(c[c[u>>2]>>2]|0,u|0)|0;u=o;o=0;if((!(u&1)?(u=c[t>>2]|0,o=0,w=Z(c[(c[u>>2]|0)+4>>2]|0,u|0)|0,u=o,o=0,!(u&1)):0)?(u=c[d+12>>2]|0,o=0,qa(c[c[u>>2]>>2]|0,g|0,u|0,n|0,p|0,h|0,w+v|0),v=o,o=0,!(v&1)):0){v=c[h>>2]|0;if(v|0){w=h+4|0;if((c[w>>2]|0)!=(v|0))c[w>>2]=v;mR(v)}if((a[m>>0]|0)<0)mR(c[i>>2]|0);v=g+4|0;w=(c[v>>2]|0)-(c[g>>2]|0)|0;u=c[t>>2]|0;o=0;x=Z(c[c[u>>2]>>2]|0,u|0)|0;u=o;o=0;do if(!(u&1)?(y=c[t>>2]|0,o=0,A=Z(c[(c[y>>2]|0)+4>>2]|0,y|0)|0,y=o,o=0,!(y&1)):0){if((w|0)!=(A+x|0)){o=0;oa(41,74342,74045,157,74475);o=0;B=27;break}A=c[t>>2]|0;o=0;y=Z(c[c[A>>2]>>2]|0,A|0)|0;A=o;o=0;do if(!(A&1)?(o=0,na(92,h|0,g|0,y|0),C=o,o=0,!(C&1)):0){C=i+4|0;c[i>>2]=c[h>>2];D=h+4|0;c[C>>2]=c[D>>2];E=h+8|0;c[i+8>>2]=c[E>>2];c[E>>2]=0;c[D>>2]=0;c[h>>2]=0;E=h+12|0;F=j+4|0;c[j>>2]=c[E>>2];G=h+16|0;c[F>>2]=c[G>>2];H=h+20|0;c[j+8>>2]=c[H>>2];c[H>>2]=0;c[G>>2]=0;c[E>>2]=0;o=0;E=Z(192,e|0)|0;H=o;o=0;if((!(H&1)?(o=0,H=Z(177,k|0)|0,I=o,o=0,!(I&1)):0)?(I=c[t>>2]|0,o=0,qa(c[(c[I>>2]|0)+12>>2]|0,b|0,I|0,E|0,i|0,j|0,H|0),H=o,o=0,!(H&1)):0){H=c[j>>2]|0;if(H|0){if((c[F>>2]|0)!=(H|0))c[F>>2]=H;mR(H)}H=c[i>>2]|0;if(H|0){if((c[C>>2]|0)!=(H|0))c[C>>2]=H;mR(H)}H=c[h+12>>2]|0;if(H|0){if((c[G>>2]|0)!=(H|0))c[G>>2]=H;mR(H)}H=c[h>>2]|0;if(H|0){if((c[D>>2]|0)!=(H|0))c[D>>2]=H;mR(H)}H=c[g>>2]|0;if(!H){l=f;return}if((c[v>>2]|0)!=(H|0))c[v>>2]=H;mR(H);l=f;return}H=Pa()|0;E=z;I=c[j>>2]|0;if(I|0){if((c[F>>2]|0)!=(I|0))c[F>>2]=I;mR(I)}I=c[i>>2]|0;if(I|0){if((c[C>>2]|0)!=(I|0))c[C>>2]=I;mR(I)}I=c[h+12>>2]|0;if(I|0){if((c[G>>2]|0)!=(I|0))c[G>>2]=I;mR(I)}I=c[h>>2]|0;if(!I){J=E;K=H;break}if((c[D>>2]|0)!=(I|0))c[D>>2]=I;mR(I);J=E;K=H}else B=54;while(0);if((B|0)==54){y=Pa()|0;J=z;K=y}L=J;M=K}else B=27;while(0);if((B|0)==27){t=Pa()|0;L=z;M=t}t=c[g>>2]|0;if(!t){N=L;O=M;break}if((c[v>>2]|0)!=(t|0))c[v>>2]=t;mR(t);N=L;O=M;break}t=Pa()|0;x=z;w=c[h>>2]|0;if(!w){P=x;Q=t;B=24}else{u=h+4|0;if((c[u>>2]|0)!=(w|0))c[u>>2]=w;mR(w);P=x;Q=t;B=24}}else{t=Pa()|0;P=z;Q=t;B=24}while(0);if((B|0)==24){if((a[m>>0]|0)<0)mR(c[i>>2]|0);N=P;O=Q}q=N;r=O;$a(r|0)}function bs(a,b){a=a|0;b=b|0;Yr(a+28|0,b)|0;return}function cs(a,b){a=a|0;b=b|0;dk(a,b+28|0);return}function ds(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;c[a>>2]=0;f=a+4|0;c[f>>2]=0;c[a+8>>2]=0;c[a>>2]=c[b>>2];g=b+4|0;c[f>>2]=c[g>>2];f=b+8|0;c[a+8>>2]=c[f>>2];c[f>>2]=0;c[g>>2]=0;c[b>>2]=0;b=a+12|0;c[b>>2]=0;g=a+16|0;c[g>>2]=0;c[a+20>>2]=0;c[b>>2]=c[d>>2];b=d+4|0;c[g>>2]=c[b>>2];g=d+8|0;c[a+20>>2]=c[g>>2];c[g>>2]=0;c[b>>2]=0;c[d>>2]=0;d=a+24|0;c[d>>2]=0;b=a+28|0;c[b>>2]=0;c[a+32>>2]=0;c[d>>2]=c[e>>2];d=e+4|0;c[b>>2]=c[d>>2];b=e+8|0;c[a+32>>2]=c[b>>2];c[b>>2]=0;c[d>>2]=0;c[e>>2]=0;return}function es(a){a=a|0;return a|0}function fs(a){a=a|0;return a+12|0}function gs(a){a=a|0;return a+24|0}function hs(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;c[a>>2]=0;e=a+4|0;c[e>>2]=0;c[a+8>>2]=0;c[a>>2]=c[b>>2];f=b+4|0;c[e>>2]=c[f>>2];e=b+8|0;c[a+8>>2]=c[e>>2];c[e>>2]=0;c[f>>2]=0;c[b>>2]=0;f=a+12|0;e=b+12|0;c[f>>2]=0;g=a+16|0;c[g>>2]=0;c[a+20>>2]=0;c[f>>2]=c[e>>2];f=b+16|0;c[g>>2]=c[f>>2];g=b+20|0;c[a+20>>2]=c[g>>2];c[g>>2]=0;c[f>>2]=0;c[e>>2]=0;e=a+24|0;c[e>>2]=0;f=a+28|0;c[f>>2]=0;c[a+32>>2]=0;c[e>>2]=c[d>>2];e=d+4|0;c[f>>2]=c[e>>2];f=d+8|0;c[a+32>>2]=c[f>>2];c[f>>2]=0;c[e>>2]=0;c[d>>2]=0;e=a+36|0;f=d+12|0;c[e>>2]=0;g=a+40|0;c[g>>2]=0;c[a+44>>2]=0;c[e>>2]=c[f>>2];e=d+16|0;c[g>>2]=c[e>>2];g=d+20|0;c[a+44>>2]=c[g>>2];c[g>>2]=0;c[e>>2]=0;c[f>>2]=0;return}function is(a){a=a|0;return a|0}function js(a){a=a|0;return a+24|0}\nfunction qB(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;e=(d[b+1>>0]|0)<<16|(d[b>>0]|0)<<24|(d[b+2>>0]|0)<<8|(d[b+3>>0]|0);f=(d[b+5>>0]|0)<<16|(d[b+4>>0]|0)<<24|(d[b+6>>0]|0)<<8|(d[b+7>>0]|0);g=(d[b+9>>0]|0)<<16|(d[b+8>>0]|0)<<24|(d[b+10>>0]|0)<<8|(d[b+11>>0]|0);h=(d[b+13>>0]|0)<<16|(d[b+12>>0]|0)<<24|(d[b+14>>0]|0)<<8|(d[b+15>>0]|0);i=(d[b+17>>0]|0)<<16|(d[b+16>>0]|0)<<24|(d[b+18>>0]|0)<<8|(d[b+19>>0]|0);j=(d[b+21>>0]|0)<<16|(d[b+20>>0]|0)<<24|(d[b+22>>0]|0)<<8|(d[b+23>>0]|0);k=(d[b+25>>0]|0)<<16|(d[b+24>>0]|0)<<24|(d[b+26>>0]|0)<<8|(d[b+27>>0]|0);l=(d[b+29>>0]|0)<<16|(d[b+28>>0]|0)<<24|(d[b+30>>0]|0)<<8|(d[b+31>>0]|0);m=(d[b+33>>0]|0)<<16|(d[b+32>>0]|0)<<24|(d[b+34>>0]|0)<<8|(d[b+35>>0]|0);n=(d[b+37>>0]|0)<<16|(d[b+36>>0]|0)<<24|(d[b+38>>0]|0)<<8|(d[b+39>>0]|0);o=(d[b+41>>0]|0)<<16|(d[b+40>>0]|0)<<24|(d[b+42>>0]|0)<<8|(d[b+43>>0]|0);p=(d[b+45>>0]|0)<<16|(d[b+44>>0]|0)<<24|(d[b+46>>0]|0)<<8|(d[b+47>>0]|0);q=(d[b+49>>0]|0)<<16|(d[b+48>>0]|0)<<24|(d[b+50>>0]|0)<<8|(d[b+51>>0]|0);r=(d[b+53>>0]|0)<<16|(d[b+52>>0]|0)<<24|(d[b+54>>0]|0)<<8|(d[b+55>>0]|0);s=(d[b+57>>0]|0)<<16|(d[b+56>>0]|0)<<24|(d[b+58>>0]|0)<<8|(d[b+59>>0]|0);t=(d[b+61>>0]|0)<<16|(d[b+60>>0]|0)<<24|(d[b+62>>0]|0)<<8|(d[b+63>>0]|0);b=a+8|0;u=c[b>>2]|0;v=a+12|0;w=c[v>>2]|0;x=a+16|0;y=c[x>>2]|0;z=a+20|0;A=c[z>>2]|0;B=a+24|0;a=e+1518500249+(u<<5|u>>>27)+(c[B>>2]|0)+((A^y)&w^A)|0;C=w<<30|w>>>2;w=f+1518500249+A+((C^y)&u^y)+(a<<5|a>>>27)|0;A=u<<30|u>>>2;D=g+1518500249+y+(a&(C^A)^C)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=h+1518500249+C+(w&(y^A)^A)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=i+1518500249+A+(D&(C^y)^y)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=j+1518500249+y+(a&(A^C)^C)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=k+1518500249+C+(w&(y^A)^A)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=l+1518500249+A+(D&(C^y)^y)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=m+1518500249+y+(a&(A^C)^C)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=n+1518500249+C+(w&(y^A)^A)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=o+1518500249+A+(D&(C^y)^y)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=p+1518500249+y+(a&(A^C)^C)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=q+1518500249+C+(w&(y^A)^A)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=r+1518500249+A+(D&(C^y)^y)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=s+1518500249+y+(a&(A^C)^C)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=t+1518500249+C+(w&(y^A)^A)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=g^e^m^r;e=w<<1|w>>>31;w=e+1518500249+A+(D&(C^y)^y)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=h^f^n^s;f=D<<1|D>>>31;D=f+1518500249+y+(a&(A^C)^C)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=i^g^o^t;g=a<<1|a>>>31;a=g+1518500249+C+(w&(y^A)^A)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=j^h^p^e;h=w<<1|w>>>31;w=h+1518500249+A+(D&(C^y)^y)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=k^i^q^f;i=D<<1|D>>>31;D=i+1859775393+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=l^j^r^g;j=a<<1|a>>>31;a=j+1859775393+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=m^k^s^h;k=w<<1|w>>>31;w=k+1859775393+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=n^l^t^i;l=D<<1|D>>>31;D=l+1859775393+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=o^m^e^j;m=a<<1|a>>>31;a=m+1859775393+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=p^n^f^k;n=w<<1|w>>>31;w=n+1859775393+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=q^o^g^l;o=D<<1|D>>>31;D=o+1859775393+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=r^p^h^m;p=a<<1|a>>>31;a=p+1859775393+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=s^q^i^n;q=w<<1|w>>>31;w=q+1859775393+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=t^r^j^o;r=D<<1|D>>>31;D=r+1859775393+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=e^s^k^p;s=a<<1|a>>>31;a=s+1859775393+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=f^t^l^q;t=w<<1|w>>>31;w=t+1859775393+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=g^e^m^r;e=D<<1|D>>>31;D=e+1859775393+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=h^f^n^s;f=a<<1|a>>>31;a=f+1859775393+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=i^g^o^t;g=w<<1|w>>>31;w=g+1859775393+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=j^h^p^e;h=D<<1|D>>>31;D=h+1859775393+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=k^i^q^f;i=a<<1|a>>>31;a=i+1859775393+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=l^j^r^g;j=w<<1|w>>>31;w=j+1859775393+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=m^k^s^h;k=D<<1|D>>>31;D=k+1859775393+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=n^l^t^i;l=a<<1|a>>>31;a=l+1859775393+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=o^m^e^j;m=w<<1|w>>>31;w=m+-1894007588+A+((D|C)&y|D&C)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=p^n^f^k;n=D<<1|D>>>31;D=n+-1894007588+y+((a|A)&C|a&A)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=q^o^g^l;o=a<<1|a>>>31;a=o+-1894007588+C+((w|y)&A|w&y)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=r^p^h^m;p=w<<1|w>>>31;w=p+-1894007588+A+((D|C)&y|D&C)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=s^q^i^n;q=D<<1|D>>>31;D=q+-1894007588+y+((a|A)&C|a&A)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=t^r^j^o;r=a<<1|a>>>31;a=r+-1894007588+C+((w|y)&A|w&y)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=e^s^k^p;s=w<<1|w>>>31;w=s+-1894007588+A+((D|C)&y|D&C)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=f^t^l^q;t=D<<1|D>>>31;D=t+-1894007588+y+((a|A)&C|a&A)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=g^e^m^r;e=a<<1|a>>>31;a=e+-1894007588+C+((w|y)&A|w&y)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=h^f^n^s;f=w<<1|w>>>31;w=f+-1894007588+A+((D|C)&y|D&C)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=i^g^o^t;g=D<<1|D>>>31;D=g+-1894007588+y+((a|A)&C|a&A)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=j^h^p^e;h=a<<1|a>>>31;a=h+-1894007588+C+((w|y)&A|w&y)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=k^i^q^f;i=w<<1|w>>>31;w=i+-1894007588+A+((D|C)&y|D&C)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=l^j^r^g;j=D<<1|D>>>31;D=j+-1894007588+y+((a|A)&C|a&A)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=m^k^s^h;k=a<<1|a>>>31;a=k+-1894007588+C+((w|y)&A|w&y)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=n^l^t^i;l=w<<1|w>>>31;w=l+-1894007588+A+((D|C)&y|D&C)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=o^m^e^j;m=D<<1|D>>>31;D=m+-1894007588+y+((a|A)&C|a&A)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=p^n^f^k;n=a<<1|a>>>31;a=n+-1894007588+C+((w|y)&A|w&y)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=q^o^g^l;o=w<<1|w>>>31;w=o+-1894007588+A+((D|C)&y|D&C)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=r^p^h^m;p=D<<1|D>>>31;D=p+-1894007588+y+((a|A)&C|a&A)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=s^q^i^n;q=a<<1|a>>>31;a=q+-899497514+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=t^r^j^o;r=w<<1|w>>>31;w=r+-899497514+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=e^s^k^p;s=D<<1|D>>>31;D=s+-899497514+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=f^t^l^q;t=a<<1|a>>>31;a=t+-899497514+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=g^e^m^r;e=w<<1|w>>>31;w=e+-899497514+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=h^f^n^s;f=D<<1|D>>>31;D=f+-899497514+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=i^g^o^t;g=a<<1|a>>>31;a=g+-899497514+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=j^h^p^e;h=w<<1|w>>>31;w=h+-899497514+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=k^i^q^f;i=D<<1|D>>>31;D=i+-899497514+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=l^j^r^g;j=a<<1|a>>>31;a=j+-899497514+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=m^k^s^h;k=w<<1|w>>>31;w=k+-899497514+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=n^l^t^i;l=D<<1|D>>>31;D=l+-899497514+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=o^m^e^j;m=a<<1|a>>>31;a=m+-899497514+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=p^n^f^k;n=w<<1|w>>>31;w=n+-899497514+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=q^o^g^l;g=D<<1|D>>>31;D=g+-899497514+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=r^p^h^m;m=a<<1|a>>>31;a=m+-899497514+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=s^q^i^n;n=w<<1|w>>>31;w=n+-899497514+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=t^r^j^g;g=(D<<1|D>>>31)+-899497514+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=e^s^k^m;m=(a<<1|a>>>31)+-899497514+C+(y^A^w)+(g<<5|g>>>27)|0;C=w<<30|w>>>2;w=f^t^l^n;c[b>>2]=u+-899497514+(w<<1|w>>>31)+A+(C^y^g)+(m<<5|m>>>27);c[v>>2]=m+(c[v>>2]|0);c[x>>2]=(g<<30|g>>>2)+(c[x>>2]|0);c[z>>2]=C+(c[z>>2]|0);c[B>>2]=y+(c[B>>2]|0);return}function rB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;if(!d)return;e=c[a>>2]|0;f=e&63;g=64-f|0;h=e+d|0;c[a>>2]=h;if(h>>>0<d>>>0){h=a+4|0;c[h>>2]=(c[h>>2]|0)+1}if((f|0)==0|g>>>0>d>>>0){i=f;j=b;k=d}else{CT(a+28+f|0,b|0,g|0)|0;qB(a,a+28|0);i=0;j=b+g|0;k=d-g|0}if(k>>>0>63){g=k+-64|0;d=g&-64;b=j+(d+64)|0;f=j;h=k;while(1){qB(a,f);h=h+-64|0;if(h>>>0<=63)break;else f=f+64|0}l=b;m=g-d|0}else{l=j;m=k}if(!m)return;CT(a+28+i|0,l|0,m|0)|0;return}function sB(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=l;l=l+16|0;f=e;g=c[b>>2]|0;h=b+4|0;i=c[h>>2]|0;a[f>>0]=i>>>21;a[f+1>>0]=i>>>13;a[f+2>>0]=i>>>5;a[f+3>>0]=i<<3|g>>>29;a[f+4>>0]=g>>>21;a[f+5>>0]=g>>>13;a[f+6>>0]=g>>>5;a[f+7>>0]=g<<3;j=g&63;k=(j>>>0<56?56:120)-j|0;if(k|0){m=64-j|0;n=k+g|0;c[b>>2]=n;if(n>>>0<k>>>0)c[h>>2]=i+1;if((j|0)==0|k>>>0<m>>>0){o=j;p=84812;q=k}else{CT(b+28+j|0,84812,m|0)|0;qB(b,b+28|0);o=0;p=84812+m|0;q=k-m|0}if(q>>>0>63){m=q+-64|0;k=m&-64;j=k+64|0;i=p;n=q;while(1){qB(b,i);n=n+-64|0;if(n>>>0<=63)break;else i=i+64|0}r=p+j|0;s=m-k|0}else{r=p;s=q}if(s|0)CT(b+28+o|0,r|0,s|0)|0}s=c[b>>2]|0;r=s&63;o=64-r|0;c[b>>2]=s+8;if(s>>>0>4294967287)c[h>>2]=(c[h>>2]|0)+1;h=8-o|0;s=f+o|0;if(!((r|0)==0|o>>>0>8)){q=b+28|0;CT(b+28+r|0,f|0,o|0)|0;qB(b,q);if(h>>>0>63){o=h+-64|0;p=o&-64;k=p+64|0;m=s;j=h;while(1){qB(b,m);j=j+-64|0;if(j>>>0<=63)break;else m=m+64|0}t=s+k|0;u=o-p|0}else{t=s;u=h}if(u|0){v=t;w=u;x=q;y=21}}else{v=f;w=8;x=b+28+r|0;y=21}if((y|0)==21)CT(x|0,v|0,w|0)|0;w=b+8|0;a[d>>0]=(c[w>>2]|0)>>>24;a[d+1>>0]=(c[w>>2]|0)>>>16;a[d+2>>0]=(c[w>>2]|0)>>>8;a[d+3>>0]=c[w>>2];w=b+12|0;a[d+4>>0]=(c[w>>2]|0)>>>24;a[d+5>>0]=(c[w>>2]|0)>>>16;a[d+6>>0]=(c[w>>2]|0)>>>8;a[d+7>>0]=c[w>>2];w=b+16|0;a[d+8>>0]=(c[w>>2]|0)>>>24;a[d+9>>0]=(c[w>>2]|0)>>>16;a[d+10>>0]=(c[w>>2]|0)>>>8;a[d+11>>0]=c[w>>2];w=b+20|0;a[d+12>>0]=(c[w>>2]|0)>>>24;a[d+13>>0]=(c[w>>2]|0)>>>16;a[d+14>>0]=(c[w>>2]|0)>>>8;a[d+15>>0]=c[w>>2];w=b+24|0;a[d+16>>0]=(c[w>>2]|0)>>>24;a[d+17>>0]=(c[w>>2]|0)>>>16;a[d+18>>0]=(c[w>>2]|0)>>>8;a[d+19>>0]=c[w>>2];l=e;return}function tB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+96|0;f=e;g=f+8|0;h=f;i=h+92|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(i|0));c[g>>2]=1732584193;c[f+12>>2]=-271733879;c[f+16>>2]=-1732584194;c[f+20>>2]=271733878;c[f+24>>2]=-1009589776;if(!b){sB(f,d);nB(f);l=e;return}c[f>>2]=b;if(b>>>0>63){g=b+-64|0;h=g&-64;i=h+64|0;j=a;k=b;while(1){qB(f,j);k=k+-64|0;if(k>>>0<=63)break;else j=j+64|0}j=g-h|0;if(!j){sB(f,d);nB(f);l=e;return}else{m=a+i|0;n=j}}else{m=a;n=b}CT(f+28|0,m|0,n|0)|0;sB(f,d);nB(f);l=e;return}function uB(a){a=a|0;var b=0;b=a;a=b+108|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function vB(b){b=b|0;if(!b)return;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;a[b+4>>0]=0;a[b+5>>0]=0;a[b+6>>0]=0;a[b+7>>0]=0;a[b+8>>0]=0;a[b+9>>0]=0;a[b+10>>0]=0;a[b+11>>0]=0;a[b+12>>0]=0;a[b+13>>0]=0;a[b+14>>0]=0;a[b+15>>0]=0;a[b+16>>0]=0;a[b+17>>0]=0;a[b+18>>0]=0;a[b+19>>0]=0;a[b+20>>0]=0;a[b+21>>0]=0;a[b+22>>0]=0;a[b+23>>0]=0;a[b+24>>0]=0;a[b+25>>0]=0;a[b+26>>0]=0;a[b+27>>0]=0;a[b+28>>0]=0;a[b+29>>0]=0;a[b+30>>0]=0;a[b+31>>0]=0;a[b+32>>0]=0;a[b+33>>0]=0;a[b+34>>0]=0;a[b+35>>0]=0;a[b+36>>0]=0;a[b+37>>0]=0;a[b+38>>0]=0;a[b+39>>0]=0;a[b+40>>0]=0;a[b+41>>0]=0;a[b+42>>0]=0;a[b+43>>0]=0;a[b+44>>0]=0;a[b+45>>0]=0;a[b+46>>0]=0;a[b+47>>0]=0;a[b+48>>0]=0;a[b+49>>0]=0;a[b+50>>0]=0;a[b+51>>0]=0;a[b+52>>0]=0;a[b+53>>0]=0;a[b+54>>0]=0;a[b+55>>0]=0;a[b+56>>0]=0;a[b+57>>0]=0;a[b+58>>0]=0;a[b+59>>0]=0;a[b+60>>0]=0;a[b+61>>0]=0;a[b+62>>0]=0;a[b+63>>0]=0;a[b+64>>0]=0;a[b+65>>0]=0;a[b+66>>0]=0;a[b+67>>0]=0;a[b+68>>0]=0;a[b+69>>0]=0;a[b+70>>0]=0;a[b+71>>0]=0;a[b+72>>0]=0;a[b+73>>0]=0;a[b+74>>0]=0;a[b+75>>0]=0;a[b+76>>0]=0;a[b+77>>0]=0;a[b+78>>0]=0;a[b+79>>0]=0;a[b+80>>0]=0;a[b+81>>0]=0;a[b+82>>0]=0;a[b+83>>0]=0;a[b+84>>0]=0;a[b+85>>0]=0;a[b+86>>0]=0;a[b+87>>0]=0;a[b+88>>0]=0;a[b+89>>0]=0;a[b+90>>0]=0;a[b+91>>0]=0;a[b+92>>0]=0;a[b+93>>0]=0;a[b+94>>0]=0;a[b+95>>0]=0;a[b+96>>0]=0;a[b+97>>0]=0;a[b+98>>0]=0;a[b+99>>0]=0;a[b+100>>0]=0;a[b+101>>0]=0;a[b+102>>0]=0;a[b+103>>0]=0;a[b+104>>0]=0;a[b+105>>0]=0;a[b+106>>0]=0;a[b+107>>0]=0;return}function wB(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;b=d+108|0;do{c[d>>2]=c[a>>2];d=d+4|0;a=a+4|0}while((d|0)<(b|0));return}function xB(a,b){a=a|0;b=b|0;var d=0;c[a>>2]=0;c[a+4>>2]=0;d=(b|0)==0;c[a+8>>2]=d?1779033703:-1056596264;c[a+12>>2]=d?-1150833019:914150663;c[a+16>>2]=d?1013904242:812702999;c[a+20>>2]=d?-1521486534:-150054599;c[a+24>>2]=d?1359893119:-4191439;c[a+28>>2]=d?-1694144372:1750603025;c[a+32>>2]=d?528734635:1694076839;c[a+36>>2]=d?1541459225:-1090891868;c[a+104>>2]=b;return}function yB(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;e=l;l=l+288|0;f=e+32|0;g=e;h=a+8|0;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];c[g+8>>2]=c[h+8>>2];c[g+12>>2]=c[h+12>>2];c[g+16>>2]=c[h+16>>2];c[g+20>>2]=c[h+20>>2];c[g+24>>2]=c[h+24>>2];c[g+28>>2]=c[h+28>>2];i=0;do{j=i<<2;c[f+(i<<2)>>2]=(d[b+(j|1)>>0]|0)<<16|(d[b+j>>0]|0)<<24|(d[b+(j|2)>>0]|0)<<8|(d[b+(j|3)>>0]|0);i=i+1|0}while((i|0)!=16);i=g+28|0;b=g+16|0;j=g+24|0;k=g+20|0;m=g+4|0;n=g+8|0;o=g+12|0;p=0;q=c[b>>2]|0;r=c[k>>2]|0;s=c[j>>2]|0;t=c[i>>2]|0;u=c[g>>2]|0;v=c[m>>2]|0;w=c[n>>2]|0;x=c[o>>2]|0;do{y=(c[18056+(p<<2)>>2]|0)+t+((q>>>6|q<<26)^(q>>>11|q<<21)^(q>>>25|q<<7))+(c[f+(p<<2)>>2]|0)+((r^s)&q^s)|0;z=x+y|0;A=(w&(v|u)|v&u)+y+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))|0;y=p|1;B=((z>>>6|z<<26)^(z>>>11|z<<21)^(z>>>25|z<<7))+s+(c[18056+(y<<2)>>2]|0)+(c[f+(y<<2)>>2]|0)+((q^r)&z^r)|0;y=B+w|0;C=(v&(u|A)|u&A)+((A>>>2|A<<30)^(A>>>13|A<<19)^(A>>>22|A<<10))+B|0;B=p|2;D=((y>>>6|y<<26)^(y>>>11|y<<21)^(y>>>25|y<<7))+r+(c[18056+(B<<2)>>2]|0)+(c[f+(B<<2)>>2]|0)+((z^q)&y^q)|0;B=D+v|0;E=(u&(A|C)|A&C)+((C>>>2|C<<30)^(C>>>13|C<<19)^(C>>>22|C<<10))+D|0;D=p|3;F=((B>>>6|B<<26)^(B>>>11|B<<21)^(B>>>25|B<<7))+q+(c[18056+(D<<2)>>2]|0)+(c[f+(D<<2)>>2]|0)+((y^z)&B^z)|0;D=F+u|0;G=(A&(C|E)|C&E)+((E>>>2|E<<30)^(E>>>13|E<<19)^(E>>>22|E<<10))+F|0;F=p|4;H=((D>>>6|D<<26)^(D>>>11|D<<21)^(D>>>25|D<<7))+z+(c[18056+(F<<2)>>2]|0)+(c[f+(F<<2)>>2]|0)+((B^y)&D^y)|0;t=H+A|0;x=(C&(E|G)|E&G)+((G>>>2|G<<30)^(G>>>13|G<<19)^(G>>>22|G<<10))+H|0;H=p|5;A=((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+y+(c[18056+(H<<2)>>2]|0)+(c[f+(H<<2)>>2]|0)+((D^B)&t^B)|0;s=A+C|0;w=(E&(G|x)|G&x)+((x>>>2|x<<30)^(x>>>13|x<<19)^(x>>>22|x<<10))+A|0;A=p|6;C=((s>>>6|s<<26)^(s>>>11|s<<21)^(s>>>25|s<<7))+B+(c[18056+(A<<2)>>2]|0)+(c[f+(A<<2)>>2]|0)+((t^D)&s^D)|0;r=C+E|0;v=(G&(x|w)|x&w)+((w>>>2|w<<30)^(w>>>13|w<<19)^(w>>>22|w<<10))+C|0;C=p|7;E=((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+D+(c[18056+(C<<2)>>2]|0)+(c[f+(C<<2)>>2]|0)+((s^t)&r^t)|0;q=E+G|0;u=(x&(w|v)|w&v)+((v>>>2|v<<30)^(v>>>13|v<<19)^(v>>>22|v<<10))+E|0;p=p+8|0}while(p>>>0<16);c[i>>2]=t;c[b>>2]=q;c[j>>2]=s;c[k>>2]=r;c[g>>2]=u;c[m>>2]=v;c[n>>2]=w;c[o>>2]=x;o=16;n=q;q=r;r=s;s=t;t=u;u=v;v=w;w=x;do{x=c[18056+(o<<2)>>2]|0;m=c[f+(o+-2<<2)>>2]|0;g=c[f+(o+-15<<2)>>2]|0;k=(c[f+(o+-16<<2)>>2]|0)+(c[f+(o+-7<<2)>>2]|0)+((m>>>19|m<<13)^m>>>10^(m>>>17|m<<15))+((g>>>18|g<<14)^g>>>3^(g>>>7|g<<25))|0;m=f+(o<<2)|0;c[m>>2]=k;j=x+s+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+((q^r)&n^r)+k|0;k=j+w|0;x=((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+(v&(u|t)|u&t)+j|0;j=o|1;b=c[18056+(j<<2)>>2]|0;i=c[f+(j+-2<<2)>>2]|0;p=c[f+(j+-15<<2)>>2]|0;E=g+(c[f+(j+-7<<2)>>2]|0)+((i>>>19|i<<13)^i>>>10^(i>>>17|i<<15))+((p>>>18|p<<14)^p>>>3^(p>>>7|p<<25))|0;c[f+(j<<2)>>2]=E;j=((k>>>6|k<<26)^(k>>>11|k<<21)^(k>>>25|k<<7))+r+b+((n^q)&k^q)+E|0;E=j+v|0;b=((x>>>2|x<<30)^(x>>>13|x<<19)^(x>>>22|x<<10))+(u&(t|x)|t&x)+j|0;j=o|2;i=c[18056+(j<<2)>>2]|0;g=c[m>>2]|0;G=c[f+(j+-15<<2)>>2]|0;C=p+(c[f+(j+-7<<2)>>2]|0)+((g>>>19|g<<13)^g>>>10^(g>>>17|g<<15))+((G>>>18|G<<14)^G>>>3^(G>>>7|G<<25))|0;c[f+(j<<2)>>2]=C;j=((E>>>6|E<<26)^(E>>>11|E<<21)^(E>>>25|E<<7))+q+i+((k^n)&E^n)+C|0;C=j+u|0;i=((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+(t&(x|b)|x&b)+j|0;j=o|3;g=c[18056+(j<<2)>>2]|0;p=c[f+(j+-2<<2)>>2]|0;D=c[f+(j+-15<<2)>>2]|0;A=G+(c[f+(j+-7<<2)>>2]|0)+((p>>>19|p<<13)^p>>>10^(p>>>17|p<<15))+((D>>>18|D<<14)^D>>>3^(D>>>7|D<<25))|0;c[f+(j<<2)>>2]=A;j=((C>>>6|C<<26)^(C>>>11|C<<21)^(C>>>25|C<<7))+n+g+((E^k)&C^k)+A|0;A=j+t|0;g=((i>>>2|i<<30)^(i>>>13|i<<19)^(i>>>22|i<<10))+(x&(b|i)|b&i)+j|0;j=o|4;p=c[18056+(j<<2)>>2]|0;G=c[f+(j+-2<<2)>>2]|0;B=c[f+(j+-15<<2)>>2]|0;H=D+(c[f+(j+-7<<2)>>2]|0)+((G>>>19|G<<13)^G>>>10^(G>>>17|G<<15))+((B>>>18|B<<14)^B>>>3^(B>>>7|B<<25))|0;c[f+(j<<2)>>2]=H;j=((A>>>6|A<<26)^(A>>>11|A<<21)^(A>>>25|A<<7))+k+p+((C^E)&A^E)+H|0;s=j+x|0;w=((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+(b&(i|g)|i&g)+j|0;j=o|5;x=c[18056+(j<<2)>>2]|0;H=c[f+(j+-2<<2)>>2]|0;p=c[f+(j+-15<<2)>>2]|0;k=B+(c[f+(j+-7<<2)>>2]|0)+((H>>>19|H<<13)^H>>>10^(H>>>17|H<<15))+((p>>>18|p<<14)^p>>>3^(p>>>7|p<<25))|0;c[f+(j<<2)>>2]=k;j=((s>>>6|s<<26)^(s>>>11|s<<21)^(s>>>25|s<<7))+E+x+((A^C)&s^C)+k|0;r=j+b|0;v=((w>>>2|w<<30)^(w>>>13|w<<19)^(w>>>22|w<<10))+(i&(g|w)|g&w)+j|0;j=o|6;b=c[18056+(j<<2)>>2]|0;k=c[f+(j+-2<<2)>>2]|0;x=c[f+(j+-15<<2)>>2]|0;E=p+(c[f+(j+-7<<2)>>2]|0)+((k>>>19|k<<13)^k>>>10^(k>>>17|k<<15))+((x>>>18|x<<14)^x>>>3^(x>>>7|x<<25))|0;c[f+(j<<2)>>2]=E;j=((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+C+b+((s^A)&r^A)+E|0;q=j+i|0;u=((v>>>2|v<<30)^(v>>>13|v<<19)^(v>>>22|v<<10))+(g&(w|v)|w&v)+j|0;j=o|7;i=c[18056+(j<<2)>>2]|0;E=c[f+(j+-2<<2)>>2]|0;b=c[f+(j+-15<<2)>>2]|0;C=x+(c[m>>2]|0)+((E>>>19|E<<13)^E>>>10^(E>>>17|E<<15))+((b>>>18|b<<14)^b>>>3^(b>>>7|b<<25))|0;c[f+(j<<2)>>2]=C;j=((q>>>6|q<<26)^(q>>>11|q<<21)^(q>>>25|q<<7))+A+i+((r^s)&q^s)+C|0;n=j+g|0;t=((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+(w&(v|u)|v&u)+j|0;o=o+8|0}while(o>>>0<64);c[h>>2]=(c[h>>2]|0)+t;t=a+12|0;c[t>>2]=(c[t>>2]|0)+u;u=a+16|0;c[u>>2]=(c[u>>2]|0)+v;v=a+20|0;c[v>>2]=(c[v>>2]|0)+w;w=a+24|0;c[w>>2]=(c[w>>2]|0)+n;n=a+28|0;c[n>>2]=(c[n>>2]|0)+q;q=a+32|0;c[q>>2]=(c[q>>2]|0)+r;r=a+36|0;c[r>>2]=(c[r>>2]|0)+s;l=e;return}function zB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;if(!d)return;e=c[a>>2]|0;f=e&63;g=64-f|0;h=e+d|0;c[a>>2]=h;if(h>>>0<d>>>0){h=a+4|0;c[h>>2]=(c[h>>2]|0)+1}if((f|0)==0|g>>>0>d>>>0){i=f;j=b;k=d}else{CT(a+40+f|0,b|0,g|0)|0;yB(a,a+40|0);i=0;j=b+g|0;k=d-g|0}if(k>>>0>63){g=k+-64|0;d=g&-64;b=j+(d+64)|0;f=j;h=k;while(1){yB(a,f);h=h+-64|0;if(h>>>0<=63)break;else f=f+64|0}l=b;m=g-d|0}else{l=j;m=k}if(!m)return;CT(a+40+i|0,l|0,m|0)|0;return}function AB(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=l;l=l+16|0;f=e;g=c[b>>2]|0;h=b+4|0;i=c[h>>2]|0;a[f>>0]=i>>>21;a[f+1>>0]=i>>>13;a[f+2>>0]=i>>>5;a[f+3>>0]=i<<3|g>>>29;a[f+4>>0]=g>>>21;a[f+5>>0]=g>>>13;a[f+6>>0]=g>>>5;a[f+7>>0]=g<<3;j=g&63;k=(j>>>0<56?56:120)-j|0;if(k|0){m=64-j|0;n=k+g|0;c[b>>2]=n;if(n>>>0<k>>>0)c[h>>2]=i+1;if((j|0)==0|k>>>0<m>>>0){o=j;p=84876;q=k}else{CT(b+40+j|0,84876,m|0)|0;yB(b,b+40|0);o=0;p=84876+m|0;q=k-m|0}if(q>>>0>63){m=q+-64|0;k=m&-64;j=k+64|0;i=p;n=q;while(1){yB(b,i);n=n+-64|0;if(n>>>0<=63)break;else i=i+64|0}r=p+j|0;s=m-k|0}else{r=p;s=q}if(s|0)CT(b+40+o|0,r|0,s|0)|0}s=c[b>>2]|0;r=s&63;o=64-r|0;c[b>>2]=s+8;if(s>>>0>4294967287)c[h>>2]=(c[h>>2]|0)+1;h=8-o|0;s=f+o|0;if(!((r|0)==0|o>>>0>8)){q=b+40|0;CT(b+40+r|0,f|0,o|0)|0;yB(b,q);if(h>>>0>63){o=h+-64|0;p=o&-64;k=p+64|0;m=s;j=h;while(1){yB(b,m);j=j+-64|0;if(j>>>0<=63)break;else m=m+64|0}t=s+k|0;u=o-p|0}else{t=s;u=h}if(u|0){v=t;w=u;x=q;y=21}}else{v=f;w=8;x=b+40+r|0;y=21}if((y|0)==21)CT(x|0,v|0,w|0)|0;w=b+8|0;a[d>>0]=(c[w>>2]|0)>>>24;a[d+1>>0]=(c[w>>2]|0)>>>16;a[d+2>>0]=(c[w>>2]|0)>>>8;a[d+3>>0]=c[w>>2];w=b+12|0;a[d+4>>0]=(c[w>>2]|0)>>>24;a[d+5>>0]=(c[w>>2]|0)>>>16;a[d+6>>0]=(c[w>>2]|0)>>>8;a[d+7>>0]=c[w>>2];w=b+16|0;a[d+8>>0]=(c[w>>2]|0)>>>24;a[d+9>>0]=(c[w>>2]|0)>>>16;a[d+10>>0]=(c[w>>2]|0)>>>8;a[d+11>>0]=c[w>>2];w=b+20|0;a[d+12>>0]=(c[w>>2]|0)>>>24;a[d+13>>0]=(c[w>>2]|0)>>>16;a[d+14>>0]=(c[w>>2]|0)>>>8;a[d+15>>0]=c[w>>2];w=b+24|0;a[d+16>>0]=(c[w>>2]|0)>>>24;a[d+17>>0]=(c[w>>2]|0)>>>16;a[d+18>>0]=(c[w>>2]|0)>>>8;a[d+19>>0]=c[w>>2];w=b+28|0;a[d+20>>0]=(c[w>>2]|0)>>>24;a[d+21>>0]=(c[w>>2]|0)>>>16;a[d+22>>0]=(c[w>>2]|0)>>>8;a[d+23>>0]=c[w>>2];w=b+32|0;a[d+24>>0]=(c[w>>2]|0)>>>24;a[d+25>>0]=(c[w>>2]|0)>>>16;a[d+26>>0]=(c[w>>2]|0)>>>8;a[d+27>>0]=c[w>>2];if(c[b+104>>2]|0){l=e;return}w=b+36|0;a[d+28>>0]=(c[w>>2]|0)>>>24;a[d+29>>0]=(c[w>>2]|0)>>>16;a[d+30>>0]=(c[w>>2]|0)>>>8;a[d+31>>0]=c[w>>2];l=e;return}function BB(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=l;l=l+112|0;g=f;h=(e|0)==0;i=g+8|0;j=h?1779033703:-1056596264;k=h?-1150833019:914150663;m=h?1013904242:812702999;n=h?-1521486534:-150054599;o=h?1359893119:-4191439;p=h?-1694144372:1750603025;q=h?528734635:1694076839;r=h?1541459225:-1090891868;h=g;s=h+104|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(s|0));c[i>>2]=j;c[g+12>>2]=k;c[g+16>>2]=m;c[g+20>>2]=n;c[g+24>>2]=o;c[g+28>>2]=p;c[g+32>>2]=q;c[g+36>>2]=r;c[g+104>>2]=e;if(!b){AB(g,d);vB(g);l=f;return}c[g>>2]=b;if(b>>>0>63){e=b+-64|0;r=e&-64;q=r+64|0;p=a;o=b;while(1){yB(g,p);o=o+-64|0;if(o>>>0<=63)break;else p=p+64|0}p=e-r|0;if(!p){AB(g,d);vB(g);l=f;return}else{t=a+q|0;u=p}}else{t=a;u=b}CT(g+40|0,t|0,u|0)|0;AB(g,d);vB(g);l=f;return}function CB(a){a=a|0;ET(a|0,0,216)|0;return}function DB(b){b=b|0;var c=0;if(!b)return;c=b;b=216;while(1){b=b+-1|0;a[c>>0]=0;if(!b)break;else c=c+1|0}return}function EB(a,b){a=a|0;b=b|0;CT(a|0,b|0,216)|0;return}function FB(a,b){a=a|0;b=b|0;var d=0,e=0;d=(b|0)==0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;e=a+16|0;c[e>>2]=d?-205731576:-1056596264;c[e+4>>2]=d?1779033703:-876896931;e=a+24|0;c[e>>2]=d?-2067093701:914150663;c[e+4>>2]=d?-1150833019:1654270250;e=a+32|0;c[e>>2]=d?-23791573:812702999;c[e+4>>2]=d?1013904242:-1856437926;e=a+40|0;c[e>>2]=d?1595750129:-150054599;c[e+4>>2]=d?-1521486534:355462360;e=a+48|0;c[e>>2]=d?-1377402159:-4191439;c[e+4>>2]=d?1359893119:1731405415;e=a+56|0;c[e>>2]=d?725511199:1750603025;c[e+4>>2]=d?-1694144372:-1900787065;e=a+64|0;c[e>>2]=d?-79577749:1694076839;c[e+4>>2]=d?528734635:-619958771;e=a+72|0;c[e>>2]=d?327033209:-1090891868;c[e+4>>2]=d?1541459225:1203062813;c[a+208>>2]=b;return}function GB(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0;e=l;l=l+640|0;f=e;g=0;do{h=g<<3;i=AT(d[b+h>>0]|0|0,0,56)|0;j=z;k=AT(d[b+(h|1)>>0]|0|0,0,48)|0;m=z|j;j=AT(d[b+(h|2)>>0]|0|0,0,40)|0;n=m|z|(d[b+(h|3)>>0]|0);m=AT(d[b+(h|4)>>0]|0|0,0,24)|0;o=n|z;n=AT(d[b+(h|5)>>0]|0|0,0,16)|0;p=o|z;o=AT(d[b+(h|6)>>0]|0|0,0,8)|0;q=f+(g<<3)|0;c[q>>2]=k|i|j|m|n|o|(d[b+(h|7)>>0]|0);c[q+4>>2]=p|z;g=g+1|0}while((g|0)!=16);g=f;b=16;p=c[g>>2]|0;q=c[g+4>>2]|0;while(1){g=f+(b+-2<<3)|0;h=c[g>>2]|0;o=c[g+4>>2]|0;g=zT(h|0,o|0,19)|0;n=z;m=AT(h|0,o|0,45)|0;j=n|z;n=zT(h|0,o|0,61)|0;i=z;k=AT(h|0,o|0,3)|0;r=i|z;i=zT(h|0,o|0,6)|0;o=r^z^j;j=f+(b+-7<<3)|0;r=c[j>>2]|0;h=c[j+4>>2]|0;j=f+(b+-15<<3)|0;s=p;p=c[j>>2]|0;t=q;q=c[j+4>>2]|0;j=zT(p|0,q|0,1)|0;u=z;v=AT(p|0,q|0,63)|0;w=u|z;u=zT(p|0,q|0,8)|0;x=z;y=AT(p|0,q|0,56)|0;A=x|z;x=zT(p|0,q|0,7)|0;B=A^z^w;w=sT(s|0,t|0,r|0,h|0)|0;h=sT(w|0,z|0,(n|k)^i^(g|m)|0,o|0)|0;o=sT(h|0,z|0,(u|y)^x^(j|v)|0,B|0)|0;B=f+(b<<3)|0;c[B>>2]=o;c[B+4>>2]=z;if((b|0)>=79)break;else b=b+1|0}b=a+16|0;q=b;p=a+24|0;B=p;o=a+32|0;v=o;j=a+40|0;x=j;y=a+48|0;u=y;h=a+56|0;m=h;g=a+64|0;i=g;k=a+72|0;a=k;n=0;w=c[u>>2]|0;r=c[u+4>>2]|0;u=c[a>>2]|0;t=c[a+4>>2]|0;a=c[i>>2]|0;s=c[m>>2]|0;A=c[i+4>>2]|0;i=c[m+4>>2]|0;m=c[q>>2]|0;C=c[q+4>>2]|0;q=c[B>>2]|0;D=c[B+4>>2]|0;B=c[v>>2]|0;E=c[v+4>>2]|0;v=c[x>>2]|0;F=c[x+4>>2]|0;while(1){x=zT(w|0,r|0,14)|0;G=z;H=AT(w|0,r|0,50)|0;I=G|z;G=zT(w|0,r|0,18)|0;J=z;K=AT(w|0,r|0,46)|0;L=I^(J|z);J=zT(w|0,r|0,41)|0;I=z;M=AT(w|0,r|0,23)|0;N=sT((x|H)^(G|K)^(J|M)|0,L^(I|z)|0,u|0,t|0)|0;I=4952+(n<<3)|0;L=f+(n<<3)|0;M=c[L>>2]|0;J=c[L+4>>2]|0;L=sT(N|0,z|0,c[I>>2]|0,c[I+4>>2]|0)|0;I=sT(L|0,z|0,(a^s)&w^a|0,(A^i)&r^A|0)|0;L=sT(I|0,z|0,M|0,J|0)|0;J=z;M=zT(m|0,C|0,28)|0;I=z;N=AT(m|0,C|0,36)|0;K=I|z;I=zT(m|0,C|0,34)|0;G=z;H=AT(m|0,C|0,30)|0;x=K^(G|z);G=zT(m|0,C|0,39)|0;K=z;O=AT(m|0,C|0,25)|0;P=sT((M|N)^(I|H)^(G|O)|0,x^(K|z)|0,B&(q|m)|q&m|0,E&(D|C)|D&C|0)|0;K=z;x=sT(L|0,J|0,v|0,F|0)|0;O=z;G=sT(P|0,K|0,L|0,J|0)|0;J=z;L=n|1;K=zT(x|0,O|0,14)|0;P=z;H=AT(x|0,O|0,50)|0;I=P|z;P=zT(x|0,O|0,18)|0;N=z;M=AT(x|0,O|0,46)|0;Q=I^(N|z);N=zT(x|0,O|0,41)|0;I=z;R=AT(x|0,O|0,23)|0;S=Q^(I|z);I=4952+(L<<3)|0;Q=f+(L<<3)|0;L=c[Q>>2]|0;T=c[Q+4>>2]|0;Q=sT(c[I>>2]|0,c[I+4>>2]|0,a|0,A|0)|0;I=sT(Q|0,z|0,L|0,T|0)|0;T=sT(I|0,z|0,x&(s^w)^s|0,O&(i^r)^i|0)|0;I=sT(T|0,z|0,(K|H)^(P|M)^(N|R)|0,S|0)|0;S=z;R=zT(G|0,J|0,28)|0;N=z;M=AT(G|0,J|0,36)|0;P=N|z;N=zT(G|0,J|0,34)|0;H=z;K=AT(G|0,J|0,30)|0;T=P^(H|z);H=zT(G|0,J|0,39)|0;P=z;L=AT(G|0,J|0,25)|0;Q=sT((R|M)^(N|K)^(H|L)|0,T^(P|z)|0,(G|m)&q|G&m|0,(J|C)&D|J&C|0)|0;P=z;T=sT(I|0,S|0,B|0,E|0)|0;L=z;H=sT(Q|0,P|0,I|0,S|0)|0;S=z;I=n|2;P=zT(T|0,L|0,14)|0;Q=z;K=AT(T|0,L|0,50)|0;N=Q|z;Q=zT(T|0,L|0,18)|0;M=z;R=AT(T|0,L|0,46)|0;U=N^(M|z);M=zT(T|0,L|0,41)|0;N=z;V=AT(T|0,L|0,23)|0;W=U^(N|z);N=4952+(I<<3)|0;U=f+(I<<3)|0;I=c[U>>2]|0;X=c[U+4>>2]|0;U=sT(c[N>>2]|0,c[N+4>>2]|0,s|0,i|0)|0;N=sT(U|0,z|0,I|0,X|0)|0;X=sT(N|0,z|0,T&(x^w)^w|0,L&(O^r)^r|0)|0;N=sT(X|0,z|0,(P|K)^(Q|R)^(M|V)|0,W|0)|0;W=z;V=zT(H|0,S|0,28)|0;M=z;R=AT(H|0,S|0,36)|0;Q=M|z;M=zT(H|0,S|0,34)|0;K=z;P=AT(H|0,S|0,30)|0;X=Q^(K|z);K=zT(H|0,S|0,39)|0;Q=z;I=AT(H|0,S|0,25)|0;U=sT((V|R)^(M|P)^(K|I)|0,X^(Q|z)|0,(H|G)&m|H&G|0,(S|J)&C|S&J|0)|0;Q=z;X=sT(N|0,W|0,q|0,D|0)|0;I=z;K=sT(U|0,Q|0,N|0,W|0)|0;W=z;N=n|3;Q=zT(X|0,I|0,14)|0;U=z;P=AT(X|0,I|0,50)|0;M=U|z;U=zT(X|0,I|0,18)|0;R=z;V=AT(X|0,I|0,46)|0;Y=M^(R|z);R=zT(X|0,I|0,41)|0;M=z;Z=AT(X|0,I|0,23)|0;_=Y^(M|z);M=4952+(N<<3)|0;Y=f+(N<<3)|0;N=c[Y>>2]|0;$=c[Y+4>>2]|0;Y=sT(c[M>>2]|0,c[M+4>>2]|0,w|0,r|0)|0;M=sT(Y|0,z|0,N|0,$|0)|0;$=sT(M|0,z|0,X&(T^x)^x|0,I&(L^O)^O|0)|0;M=sT($|0,z|0,(Q|P)^(U|V)^(R|Z)|0,_|0)|0;_=z;Z=zT(K|0,W|0,28)|0;R=z;V=AT(K|0,W|0,36)|0;U=R|z;R=zT(K|0,W|0,34)|0;P=z;Q=AT(K|0,W|0,30)|0;$=U^(P|z);P=zT(K|0,W|0,39)|0;U=z;N=AT(K|0,W|0,25)|0;Y=sT((Z|V)^(R|Q)^(P|N)|0,$^(U|z)|0,(K|H)&G|K&H|0,(W|S)&J|W&S|0)|0;U=z;$=sT(M|0,_|0,m|0,C|0)|0;N=z;P=sT(Y|0,U|0,M|0,_|0)|0;_=z;M=n|4;U=zT($|0,N|0,14)|0;Y=z;Q=AT($|0,N|0,50)|0;R=Y|z;Y=zT($|0,N|0,18)|0;V=z;Z=AT($|0,N|0,46)|0;aa=R^(V|z);V=zT($|0,N|0,41)|0;R=z;ba=AT($|0,N|0,23)|0;ca=aa^(R|z);R=4952+(M<<3)|0;aa=f+(M<<3)|0;M=c[aa>>2]|0;da=c[aa+4>>2]|0;aa=sT(c[R>>2]|0,c[R+4>>2]|0,x|0,O|0)|0;O=sT(aa|0,z|0,M|0,da|0)|0;da=sT(O|0,z|0,$&(X^T)^T|0,N&(I^L)^L|0)|0;O=sT(da|0,z|0,(U|Q)^(Y|Z)^(V|ba)|0,ca|0)|0;ca=z;ba=zT(P|0,_|0,28)|0;V=z;Z=AT(P|0,_|0,36)|0;Y=V|z;V=zT(P|0,_|0,34)|0;Q=z;U=AT(P|0,_|0,30)|0;da=Y^(Q|z);Q=zT(P|0,_|0,39)|0;Y=z;M=AT(P|0,_|0,25)|0;aa=sT((ba|Z)^(V|U)^(Q|M)|0,da^(Y|z)|0,(P|K)&H|P&K|0,(_|W)&S|_&W|0)|0;Y=z;u=sT(O|0,ca|0,G|0,J|0)|0;t=z;v=sT(aa|0,Y|0,O|0,ca|0)|0;F=z;ca=n|5;O=zT(u|0,t|0,14)|0;Y=z;aa=AT(u|0,t|0,50)|0;J=Y|z;Y=zT(u|0,t|0,18)|0;G=z;da=AT(u|0,t|0,46)|0;M=J^(G|z);G=zT(u|0,t|0,41)|0;J=z;Q=AT(u|0,t|0,23)|0;U=M^(J|z);J=4952+(ca<<3)|0;M=f+(ca<<3)|0;ca=sT(c[M>>2]|0,c[M+4>>2]|0,c[J>>2]|0,c[J+4>>2]|0)|0;J=sT(ca|0,z|0,T|0,L|0)|0;L=sT(J|0,z|0,u&($^X)^X|0,t&(N^I)^I|0)|0;J=sT(L|0,z|0,(O|aa)^(Y|da)^(G|Q)|0,U|0)|0;U=z;Q=zT(v|0,F|0,28)|0;G=z;da=AT(v|0,F|0,36)|0;Y=G|z;G=zT(v|0,F|0,34)|0;aa=z;O=AT(v|0,F|0,30)|0;L=Y^(aa|z);aa=zT(v|0,F|0,39)|0;Y=z;T=AT(v|0,F|0,25)|0;ca=sT((Q|da)^(G|O)^(aa|T)|0,L^(Y|z)|0,(v|P)&K|v&P|0,(F|_)&W|F&_|0)|0;Y=z;a=sT(J|0,U|0,H|0,S|0)|0;A=z;B=sT(ca|0,Y|0,J|0,U|0)|0;E=z;U=n|6;J=zT(a|0,A|0,14)|0;Y=z;ca=AT(a|0,A|0,50)|0;S=Y|z;Y=zT(a|0,A|0,18)|0;H=z;L=AT(a|0,A|0,46)|0;T=S^(H|z);H=zT(a|0,A|0,41)|0;S=z;aa=AT(a|0,A|0,23)|0;O=T^(S|z);S=4952+(U<<3)|0;T=f+(U<<3)|0;U=sT(c[T>>2]|0,c[T+4>>2]|0,c[S>>2]|0,c[S+4>>2]|0)|0;S=sT(U|0,z|0,X|0,I|0)|0;I=sT(S|0,z|0,a&(u^$)^$|0,A&(t^N)^N|0)|0;S=sT(I|0,z|0,(J|ca)^(Y|L)^(H|aa)|0,O|0)|0;O=z;aa=zT(B|0,E|0,28)|0;H=z;L=AT(B|0,E|0,36)|0;Y=H|z;H=zT(B|0,E|0,34)|0;ca=z;J=AT(B|0,E|0,30)|0;I=Y^(ca|z);ca=zT(B|0,E|0,39)|0;Y=z;X=AT(B|0,E|0,25)|0;U=sT((aa|L)^(H|J)^(ca|X)|0,I^(Y|z)|0,(B|v)&P|B&v|0,(E|F)&_|E&F|0)|0;Y=z;s=sT(S|0,O|0,K|0,W|0)|0;i=z;q=sT(U|0,Y|0,S|0,O|0)|0;D=z;O=n|7;S=zT(s|0,i|0,14)|0;Y=z;U=AT(s|0,i|0,50)|0;W=Y|z;Y=zT(s|0,i|0,18)|0;K=z;I=AT(s|0,i|0,46)|0;X=W^(K|z);K=zT(s|0,i|0,41)|0;W=z;ca=AT(s|0,i|0,23)|0;J=X^(W|z);W=4952+(O<<3)|0;X=f+(O<<3)|0;O=sT(c[X>>2]|0,c[X+4>>2]|0,c[W>>2]|0,c[W+4>>2]|0)|0;W=sT(O|0,z|0,$|0,N|0)|0;N=sT(W|0,z|0,s&(a^u)^u|0,i&(A^t)^t|0)|0;W=sT(N|0,z|0,(S|U)^(Y|I)^(K|ca)|0,J|0)|0;J=z;ca=zT(q|0,D|0,28)|0;K=z;I=AT(q|0,D|0,36)|0;Y=K|z;K=zT(q|0,D|0,34)|0;U=z;S=AT(q|0,D|0,30)|0;N=Y^(U|z);U=zT(q|0,D|0,39)|0;Y=z;$=AT(q|0,D|0,25)|0;O=sT((ca|I)^(K|S)^(U|$)|0,N^(Y|z)|0,(q|B)&v|q&B|0,(D|E)&F|D&E|0)|0;Y=z;w=sT(W|0,J|0,P|0,_|0)|0;r=z;m=sT(O|0,Y|0,W|0,J|0)|0;C=z;if((n|0)>=72)break;else n=n+8|0}n=b;f=sT(c[n>>2]|0,c[n+4>>2]|0,m|0,C|0)|0;C=b;c[C>>2]=f;c[C+4>>2]=z;C=p;f=sT(c[C>>2]|0,c[C+4>>2]|0,q|0,D|0)|0;D=p;c[D>>2]=f;c[D+4>>2]=z;D=o;f=sT(c[D>>2]|0,c[D+4>>2]|0,B|0,E|0)|0;E=o;c[E>>2]=f;c[E+4>>2]=z;E=j;f=sT(c[E>>2]|0,c[E+4>>2]|0,v|0,F|0)|0;F=j;c[F>>2]=f;c[F+4>>2]=z;F=y;f=sT(c[F>>2]|0,c[F+4>>2]|0,w|0,r|0)|0;r=y;c[r>>2]=f;c[r+4>>2]=z;r=h;f=sT(c[r>>2]|0,c[r+4>>2]|0,s|0,i|0)|0;i=h;c[i>>2]=f;c[i+4>>2]=z;i=g;f=sT(c[i>>2]|0,c[i+4>>2]|0,a|0,A|0)|0;A=g;c[A>>2]=f;c[A+4>>2]=z;A=k;f=sT(c[A>>2]|0,c[A+4>>2]|0,u|0,t|0)|0;t=k;c[t>>2]=f;c[t+4>>2]=z;l=e;return}function HB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;if(!d)return;e=a;f=c[e>>2]|0;g=f&127;h=128-g|0;i=sT(f|0,c[e+4>>2]|0,d|0,0)|0;e=z;f=a;c[f>>2]=i;c[f+4>>2]=e;if(e>>>0<0|(e|0)==0&i>>>0<d>>>0){i=a+8|0;e=i;f=sT(c[e>>2]|0,c[e+4>>2]|0,1,0)|0;e=i;c[e>>2]=f;c[e+4>>2]=z}if((g|0)==0|h>>>0>d>>>0){j=g;k=b;l=d}else{CT(a+80+g|0,b|0,h|0)|0;GB(a,a+80|0);j=0;k=b+h|0;l=d-h|0}if(l>>>0>127){h=l+-128|0;d=h&-128;b=k+(d+128)|0;g=k;e=l;while(1){GB(a,g);e=e+-128|0;if(e>>>0<=127)break;else g=g+128|0}m=b;n=h-d|0}else{m=k;n=l}if(!n)return;CT(a+80+j|0,m|0,n|0)|0;return}function IB(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0;e=l;l=l+16|0;f=e;g=b;h=c[g>>2]|0;i=c[g+4>>2]|0;g=zT(h|0,i|0,61)|0;j=z;j=b+8|0;k=j;m=c[k>>2]|0;n=c[k+4>>2]|0;k=AT(m|0,n|0,3)|0;o=zT(m|0,n|0,53)|0;a[f>>0]=o;o=zT(m|0,n|0,45)|0;a[f+1>>0]=o;o=zT(m|0,n|0,37)|0;a[f+2>>0]=o;o=zT(m|0,n|0,29)|0;a[f+3>>0]=o;o=zT(m|0,n|0,21)|0;a[f+4>>0]=o;o=zT(m|0,n|0,13)|0;a[f+5>>0]=o;o=zT(m|0,n|0,5)|0;a[f+6>>0]=o;a[f+7>>0]=k|g;g=zT(h|0,i|0,53)|0;a[f+8>>0]=g;g=zT(h|0,i|0,45)|0;a[f+9>>0]=g;g=zT(h|0,i|0,37)|0;a[f+10>>0]=g;g=zT(h|0,i|0,29)|0;a[f+11>>0]=g;g=zT(h|0,i|0,21)|0;a[f+12>>0]=g;g=zT(h|0,i|0,13)|0;a[f+13>>0]=g;g=zT(h|0,i|0,5)|0;a[f+14>>0]=g;a[f+15>>0]=(h&255)<<3;g=h&127;k=(g>>>0<112?112:240)-g|0;if(k|0){o=128-g|0;p=sT(h|0,i|0,k|0,0)|0;i=z;h=b;c[h>>2]=p;c[h+4>>2]=i;if(i>>>0<0|(i|0)==0&p>>>0<k>>>0){p=sT(m|0,n|0,1,0)|0;n=j;c[n>>2]=p;c[n+4>>2]=z}if((g|0)==0|k>>>0<o>>>0){q=g;r=84940;s=k}else{CT(b+80+g|0,84940,o|0)|0;GB(b,b+80|0);q=0;r=84940+o|0;s=k-o|0}if(s>>>0>127){o=s+-128|0;k=o&-128;g=k+128|0;n=r;p=s;while(1){GB(b,n);p=p+-128|0;if(p>>>0<=127)break;else n=n+128|0}t=r+g|0;u=o-k|0}else{t=r;u=s}if(u|0)CT(b+80+q|0,t|0,u|0)|0}u=b;t=c[u>>2]|0;q=c[u+4>>2]|0;u=t&127;s=128-u|0;r=sT(t|0,q|0,16,0)|0;k=b;c[k>>2]=r;c[k+4>>2]=z;if(q>>>0>4294967295|(q|0)==-1&t>>>0>4294967279){t=j;q=sT(c[t>>2]|0,c[t+4>>2]|0,1,0)|0;t=j;c[t>>2]=q;c[t+4>>2]=z}t=16-s|0;q=f+s|0;if(!((u|0)==0|s>>>0>16)){j=b+80|0;CT(b+80+u|0,f|0,s|0)|0;GB(b,j);if(t>>>0>127){s=t+-128|0;k=s&-128;r=k+128|0;o=q;g=t;while(1){GB(b,o);g=g+-128|0;if(g>>>0<=127)break;else o=o+128|0}v=q+r|0;w=s-k|0}else{v=q;w=t}if(w|0){x=v;y=w;A=j;B=21}}else{x=f;y=16;A=b+80+u|0;B=21}if((B|0)==21)CT(A|0,x|0,y|0)|0;y=b+16|0;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,48)|0;a[d+1>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+2>>0]=A;a[d+3>>0]=c[y+4>>2];A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,24)|0;a[d+4>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+5>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,8)|0;a[d+6>>0]=x;a[d+7>>0]=c[y>>2];y=b+24|0;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+8>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,48)|0;a[d+9>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+10>>0]=A;a[d+11>>0]=c[y+4>>2];A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,24)|0;a[d+12>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+13>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,8)|0;a[d+14>>0]=x;a[d+15>>0]=c[y>>2];y=b+32|0;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+16>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,48)|0;a[d+17>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+18>>0]=A;a[d+19>>0]=c[y+4>>2];A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,24)|0;a[d+20>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+21>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,8)|0;a[d+22>>0]=x;a[d+23>>0]=c[y>>2];y=b+40|0;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+24>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,48)|0;a[d+25>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+26>>0]=A;a[d+27>>0]=c[y+4>>2];A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,24)|0;a[d+28>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+29>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,8)|0;a[d+30>>0]=x;a[d+31>>0]=c[y>>2];y=b+48|0;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+32>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,48)|0;a[d+33>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+34>>0]=A;a[d+35>>0]=c[y+4>>2];A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,24)|0;a[d+36>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+37>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,8)|0;a[d+38>>0]=x;a[d+39>>0]=c[y>>2];y=b+56|0;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+40>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,48)|0;a[d+41>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+42>>0]=A;a[d+43>>0]=c[y+4>>2];A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,24)|0;a[d+44>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+45>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,8)|0;a[d+46>>0]=x;a[d+47>>0]=c[y>>2];if(c[b+208>>2]|0){l=e;return}y=b+64|0;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+48>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,48)|0;a[d+49>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+50>>0]=A;a[d+51>>0]=c[y+4>>2];A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,24)|0;a[d+52>>0]=x;x=y;A=zT(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+53>>0]=A;A=y;x=zT(c[A>>2]|0,c[A+4>>2]|0,8)|0;a[d+54>>0]=x;a[d+55>>0]=c[y>>2];y=b+72|0;b=y;x=zT(c[b>>2]|0,c[b+4>>2]|0,56)|0;a[d+56>>0]=x;x=y;b=zT(c[x>>2]|0,c[x+4>>2]|0,48)|0;a[d+57>>0]=b;b=y;x=zT(c[b>>2]|0,c[b+4>>2]|0,40)|0;a[d+58>>0]=x;a[d+59>>0]=c[y+4>>2];x=y;b=zT(c[x>>2]|0,c[x+4>>2]|0,24)|0;a[d+60>>0]=b;b=y;x=zT(c[b>>2]|0,c[b+4>>2]|0,16)|0;a[d+61>>0]=x;x=y;b=zT(c[x>>2]|0,c[x+4>>2]|0,8)|0;a[d+62>>0]=b;a[d+63>>0]=c[y>>2];l=e;return}function JB(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0;g=l;l=l+224|0;h=g;i=(f|0)==0;ET(h|0,0,216)|0;j=h+16|0;c[j>>2]=i?-205731576:-1056596264;c[j+4>>2]=i?1779033703:-876896931;j=h+24|0;c[j>>2]=i?-2067093701:914150663;c[j+4>>2]=i?-1150833019:1654270250;j=h+32|0;c[j>>2]=i?-23791573:812702999;c[j+4>>2]=i?1013904242:-1856437926;j=h+40|0;c[j>>2]=i?1595750129:-150054599;c[j+4>>2]=i?-1521486534:355462360;j=h+48|0;c[j>>2]=i?-1377402159:-4191439;c[j+4>>2]=i?1359893119:1731405415;j=h+56|0;c[j>>2]=i?725511199:1750603025;c[j+4>>2]=i?-1694144372:-1900787065;j=h+64|0;c[j>>2]=i?-79577749:1694076839;c[j+4>>2]=i?528734635:-619958771;j=h+72|0;c[j>>2]=i?327033209:-1090891868;c[j+4>>2]=i?1541459225:1203062813;c[h+208>>2]=f;do if(d|0){f=h;c[f>>2]=d;c[f+4>>2]=0;if(d>>>0>127){f=d+-128|0;i=f&-128;j=i+128|0;k=b;m=d;while(1){GB(h,k);m=m+-128|0;if(m>>>0<=127)break;else k=k+128|0}k=f-i|0;if(!k)break;else{n=b+j|0;o=k}}else{n=b;o=d}CT(h+80|0,n|0,o|0)|0}while(0);IB(h,e);e=h;h=216;while(1){h=h+-1|0;a[e>>0]=0;if(!h)break;else e=e+1|0}l=g;return}function KB(){var a=0,b=0;a=l;l=l+16|0;b=a;if(!(c[23521]|0)){Vb(94088,0)|0;c[23521]=1}Vb(b|0,0)|0;l=a;return (c[b+4>>2]|0)-(c[23523]|0)+(((c[b>>2]|0)-(c[23522]|0)|0)*1e6|0)|0}function LB(a){a=a|0;var b=0;if(!a){b=0;return b|0}if(!($E(85068,a)|0)){b=18312;return b|0}else{b=($E(85073,a)|0)==0;return (b?18324:0)|0}return 0}function MB(a){a=a|0;return ((a|0)==1?18312:(a|0)==2?18324:0)|0}function NB(a){a=a|0;var b=0;if(!a)b=0;else b=c[a>>2]|0;return b|0}function OB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;if(!a)return -24448;else{h=id[c[a+8>>2]&63](b,d,e,f,g)|0;return ((h|0)==0?0:h|-24448)|0}return 0}function PB(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;h=l;l=l+80|0;i=h+12|0;j=h+16|0;k=h;c[i>>2]=0;m=j;n=m+64|0;do{a[m>>0]=0;m=m+1|0}while((m|0)<(n|0));if(!b){o=-51;l=h;return o|0}Dy(k);m=Fy(k,b,0)|0;a:do if((m|0)>=0?(n=(Py(b)|0)&255,p=(((g+-1|0)>>>0)/(n>>>0)|0)+1|0,(p|0)!=0):0){q=i+1|0;r=i+2|0;s=i+3|0;t=1;u=0;while(1){a[i>>0]=t>>>24;a[q>>0]=t>>>16;a[r>>0]=t>>>8;a[s>>0]=t;v=Gy(k)|0;if((v|0)<0){w=v;break a}v=Hy(k,d,e)|0;if((v|0)<0){w=v;break a}v=Hy(k,i,4)|0;if((v|0)<0){w=v;break a}v=u+n|0;if(v>>>0<=g>>>0){x=Iy(k,f+u|0)|0;if((x|0)<0){w=x;break a}else{y=v;z=x}}else{x=Iy(k,j)|0;if((x|0)<0){w=x;break a}CT(f+u|0,j|0,g-u|0)|0;y=g;z=x}t=t+1|0;if(t>>>0>p>>>0){w=z;break}else u=y}}else w=m;while(0);Ey(k);o=w;l=h;return o|0}function QB(a,b,d,e,f,g,h,i,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;k=l;l=l+80|0;m=k+8|0;n=k+4|0;o=k;c[n>>2]=0;c[o>>2]=0;if((a|0)==0|(b|0)==0|(d|0)==0|(f|0)==0|(g|0)==0){p=-19328;l=k;return p|0}c[g>>2]=0;q=Cy(7)|0;r=MB(2)|0;s=Cy(7)|0;fw(m);t=hw(m,cw(7)|0)|0;do if((t|0)>=0){u=c[m>>2]|0;if(!u){v=0;w=0}else{x=c[m+56>>2]|0;if(!x)y=c[u+16>>2]|0;else y=x;v=c[u+8>>2]|0;w=y}u=(v+7|0)/8|0;x=(Py(s)|0)&255;z=u+x|0;A=DE(1,z)|0;if(A){B=A+u|0;C=cd[c[b+8>>2]&63]()|0;if(C){D=gd[c[b+16>>2]&63](a,C,i,j)|0;if((D|0)>=0){E=dd[c[b+24>>2]&255](a)|0;F=DE(1,E)|0;if(F){G=kd[c[b+20>>2]&63](a,C,F,E,i,j)|0;if((G|0)>=0){H=OB(r,q,F,E,A,z)|0;if((H|0)>=0){z=DE(1,w)|0;if(z){E=fd[i&127](j,z,w)|0;if((E|0)>=0){I=sw(m,A,u<<3,1)|0;if((I|0)>=0){u=kw(m,0)|0;if((u|0)>=0){J=uw(m)|0;if((J|0)>=0){K=c[m>>2]|0;if(!K)L=0;else L=c[K+24>>2]|0;K=L+e|0;c[n>>2]=K;if(K>>>0<=h>>>0){M=f+h+(0-K)|0;c[o>>2]=M;K=Aw(m,z,w,d,e,M,n)|0;if((K|0)>=0){N=DE(1,x)|0;if(N){O=Oy(s,B,x,M,c[n>>2]|0,N)|0;if((O|0)<0){P=0;Q=z;R=N;S=A;T=F;U=C;V=O}else{O=oC(o,f,7,z,w,c[n>>2]|0)|0;if((O|0)<0){P=0;Q=z;R=N;S=A;T=F;U=C;V=O;break}M=nC(o,f,Qy(s)|0,N,x)|0;if((M|0)<0){P=O;Q=z;R=N;S=A;T=F;U=C;V=M;break}x=M+O|0;O=NB(r)|0;M=mC(o,f,O,Qy(q)|0)|0;if((M|0)<0){P=x;Q=z;R=N;S=A;T=F;U=C;V=M;break}O=M+x|0;x=fd[c[b+28>>2]&127](o,f,C)|0;if((x|0)<0){P=O;Q=z;R=N;S=A;T=F;U=C;V=x;break}M=x+O|0;O=lC(o,f,0)|0;if((O|0)<0){P=M;Q=z;R=N;S=A;T=F;U=C;V=O;break}x=O+M|0;M=kC(o,f,x)|0;O=M+x|0;if((M|0)<0){P=x;Q=z;R=N;S=A;T=F;U=C;V=M;break}DT(f|0,c[o>>2]|0,O|0)|0;ET(f+O|0,0,h-O|0)|0;P=O;Q=z;R=N;S=A;T=F;U=C;V=0}}else{P=0;Q=z;R=0;S=A;T=F;U=C;V=-18944}}else{P=0;Q=z;R=0;S=A;T=F;U=C;V=K}}else{P=0;Q=z;R=0;S=A;T=F;U=C;V=-19200}}else{P=0;Q=z;R=0;S=A;T=F;U=C;V=J}}else{P=0;Q=z;R=0;S=A;T=F;U=C;V=u}}else{P=0;Q=z;R=0;S=A;T=F;U=C;V=I}}else{P=0;Q=z;R=0;S=A;T=F;U=C;V=E}}else{P=0;Q=0;R=0;S=A;T=F;U=C;V=-18944}}else{P=0;Q=0;R=0;S=A;T=F;U=C;V=H}}else{P=0;Q=0;R=0;S=A;T=F;U=C;V=G}}else{P=0;Q=0;R=0;S=A;T=0;U=C;V=-18944}}else{P=0;Q=0;R=0;S=A;T=0;U=C;V=D}}else{P=0;Q=0;R=0;S=A;T=0;U=0;V=-18944}}else{P=0;Q=0;R=0;S=0;T=0;U=0;V=-18944}}else{P=0;Q=0;R=0;S=0;T=0;U=0;V=t}while(0);c[g>>2]=P;rd[c[b+12>>2]&511](U);gw(m);if(T|0)CE(T);if(S|0)CE(S);if(Q|0)CE(Q);if(!R){p=V;l=k;return p|0}CE(R);p=V;l=k;return p|0}function RB(a,b,d,e,f,g,h,i,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;k=l;l=l+128|0;m=k+112|0;n=k+108|0;o=k+104|0;p=k+100|0;q=k+96|0;r=k+92|0;s=k+88|0;t=k+84|0;u=k+80|0;v=k+16|0;w=k+12|0;x=k+8|0;y=k+4|0;z=k;c[m>>2]=0;c[n>>2]=0;c[o>>2]=0;c[p>>2]=0;c[q>>2]=0;c[r>>2]=0;c[s>>2]=0;c[t>>2]=0;c[u>>2]=0;c[w>>2]=0;c[x>>2]=0;c[y>>2]=0;c[z>>2]=0;if((a|0)==0|(b|0)==0|(d|0)==0|(f|0)==0|(g|0)==0){A=-19328;l=k;return A|0}c[g>>2]=0;fw(v);c[z>>2]=d;B=cd[c[b+8>>2]&63]()|0;do if(B){C=d+e|0;D=fC(z,C,x)|0;if((D|0)>=0){E=gC(z,C,m)|0;if((E|0)>=0)if(!(c[m>>2]|0)){F=fd[c[b+32>>2]&127](z,C,B)|0;if((F|0)>=0){G=hC(z,C,o,n)|0;if((G|0)>=0){H=iC(z,C,p,q,r)|0;if((H|0)>=0){I=jC(z,C,u,s,t,y,w)|0;if((I|0)>=0){C=hw(v,cw(c[u>>2]|0)|0)|0;if((C|0)>=0){J=c[v>>2]|0;if(!J)K=0;else K=((c[J+8>>2]|0)+7|0)/8|0;J=(Py(Cy(c[p>>2]|0)|0)|0)&255;L=K+J|0;M=DE(1,L)|0;if(M){N=M+K|0;O=DE(1,J)|0;if(O){P=dd[c[b+24>>2]&255](a)|0;Q=DE(1,P)|0;if(Q){R=kd[c[b+20>>2]&63](B,a,Q,P,i,j)|0;if((R|0)>=0){S=MB(c[o>>2]|0)|0;T=OB(S,Cy(c[n>>2]|0)|0,Q,P,M,L)|0;if((T|0)>=0){L=Cy(c[p>>2]|0)|0;P=Oy(L,N,J,c[y>>2]|0,c[w>>2]|0,O)|0;if((P|0)>=0)if((c[r>>2]|0)==(J|0)?(aF(c[q>>2]|0,O,J)|0)==0:0){J=sw(v,M,K<<3,0)|0;if((J|0)<0){U=O;V=J;W=M;X=Q;break}J=kw(v,0)|0;if((J|0)<0){U=O;V=J;W=M;X=Q;break}J=uw(v)|0;if((J|0)<0){U=O;V=J;W=M;X=Q;break}J=c[w>>2]|0;if(J>>>0>h>>>0){U=O;V=-19200;W=M;X=Q;break}U=O;V=Aw(v,c[s>>2]|0,c[t>>2]|0,c[y>>2]|0,J,f,g)|0;W=M;X=Q}else{U=O;V=-19072;W=M;X=Q}else{U=O;V=P;W=M;X=Q}}else{U=O;V=T;W=M;X=Q}}else{U=O;V=R;W=M;X=Q}}else{U=O;V=-18944;W=M;X=0}}else{U=0;V=-18944;W=M;X=0}}else{U=0;V=-18944;W=0;X=0}}else{U=0;V=C;W=0;X=0}}else{U=0;V=I;W=0;X=0}}else{U=0;V=H;W=0;X=0}}else{U=0;V=G;W=0;X=0}}else{U=0;V=F;W=0;X=0}}else{U=0;V=-19072;W=0;X=0}else{U=0;V=E;W=0;X=0}}else{U=0;V=D;W=0;X=0}}else{U=0;V=-18944;W=0;X=0}while(0);gw(v);rd[c[b+12>>2]&511](B);if(X|0)CE(X);if(W|0)CE(W);if(!U){A=V;l=k;return A|0}CE(U);A=V;l=k;return A|0}function SB(){var a=0;a=DE(1,172)|0;if(!a)return a|0;Cx(a);return a|0}function TB(a){a=a|0;Fx(a);CE(a);return}function UB(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;return Xx(c[a>>2]|0,b,d,e)|0}function VB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0;h=l;l=l+16|0;i=h;if((c[a>>2]|0)!=(c[b>>2]|0)){j=-19328;l=h;return j|0}rv(i);k=xx(a,i,a+136|0,b+124|0,f,g)|0;if((k|0)<0)m=k;else m=Sv(i,d,e)|0;sv(i);j=m;l=h;return j|0}function WB(a){a=a|0;return ((c[a+88>>2]|0)+7|0)>>>3|0}function XB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=l;l=l+16|0;f=e;c[f>>2]=Lz(2)|0;c[f+4>>2]=d;d=SA(f,b,(c[a>>2]|0)-b|0)|0;if((d|0)<0){g=0;h=d}else{c[a>>2]=(c[a>>2]|0)+(0-d);g=d;h=0}l=e;return ((h|0)<0?h:g)|0}function YB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0;e=l;l=l+32|0;f=e+16|0;g=e+8|0;h=e;c[h>>2]=0;Jz(g);i=c[a>>2]|0;c[f>>2]=i+1;j=Zu(f,b,h)|0;do if((j|0)>=0){b=(c[f>>2]|0)-i+(c[h>>2]|0)|0;c[h>>2]=b;k=QA(g,c[a>>2]|0,b)|0;if((k|0)>=0){c[a>>2]=(c[a>>2]|0)+(c[h>>2]|0);if(((Nz(g,2)|0)==0?(Nz(g,3)|0)==0:0)?(Nz(g,4)|0)==0:0){m=-19072;break}b=g+4|0;n=Hx(d,c[b>>2]|0)|0;if((n|0)>=0){o=vv(d+124|0,(c[b>>2]|0)+124|0)|0;if((o|0)<0)m=o;else m=Gx(d+136|0,(c[b>>2]|0)+136|0)|0}else m=n}else m=k}else m=j;while(0);Kz(g);l=e;return m|0}function ZB(){var a=0;a=DE(1,12)|0;if(!a)return a|0;qC(a);return a|0}function _B(a){a=a|0;sC(a);CE(a);return}function $B(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=rC(b,c[a>>2]|0)|0;if((f|0)<0){g=f;return g|0}g=uC(b,d,e)|0;return g|0}function aC(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;g=AC(c[a>>2]|0)|0;if((g|0)!=(AC(c[b>>2]|0)|0)){h=-19328;return h|0}h=yC(a,b,d,e)|0;return h|0}function bC(a){a=a|0;return DC(c[a>>2]|0)|0}function cC(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=l;l=l+16|0;f=e;g=AC(c[d>>2]|0)|0;h=Lz((g|0)==1?7:(g|0)==2?8:0)|0;c[f>>2]=h;if(h){c[f+4>>2]=d;d=SA(f,b,(c[a>>2]|0)-b|0)|0;if((d|0)<0){i=0;j=d}else{c[a>>2]=(c[a>>2]|0)+(0-d);i=d;j=0}}else{i=0;j=-19072}l=e;return ((j|0)<0?j:i)|0}function dC(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;e=l;l=l+32|0;f=e+16|0;g=e+8|0;h=e;c[h>>2]=0;Jz(g);i=c[a>>2]|0;c[f>>2]=i+1;j=Zu(f,b,h)|0;do if((j|0)>=0){b=(c[f>>2]|0)-i+(c[h>>2]|0)|0;c[h>>2]=b;k=QA(g,c[a>>2]|0,b)|0;if((k|0)<0)m=k;else{c[a>>2]=(c[a>>2]|0)+(c[h>>2]|0);if((Nz(g,7)|0)==0?(Nz(g,8)|0)==0:0){m=-19072;break}m=tC(d,c[g+4>>2]|0)|0}}else m=j;while(0);Kz(g);l=e;return m|0}function eC(a){a=a|0;return ((a|0)==1?18336:(a|0)==2?18372:0)|0}function fC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=_u(a,b,c,48)|0;return ((d|0)<0?d|-19072:d)|0}function gC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if(!c)return -19328;else{d=$u(a,b,c)|0;return ((d|0)<0?d|-19072:d)|0}return 0}function hC(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0;g=l;l=l+32|0;h=g+24|0;i=g+12|0;j=g;c[h>>2]=0;if((e|0)==0|(f|0)==0){k=-19328;l=g;return k|0}m=_u(a,b,h,48)|0;if((m|0)<0){k=m|-19072;l=g;return k|0}m=c[a>>2]|0;if((b-m|0)<1){k=-96;l=g;return k|0}c[i>>2]=d[m>>0];m=i+4|0;n=_u(a,b,m,6)|0;if((n|0)<0){k=n|-19072;l=g;return k|0}n=c[a>>2]|0;c[i+8>>2]=n;c[a>>2]=n+(c[m>>2]|0);m=Hz(i,e)|0;if((m|0)<0){k=m|-19072;l=g;return k|0}m=_u(a,b,h,48)|0;if((m|0)<0){k=m|-19072;l=g;return k|0}c[j>>2]=d[c[a>>2]>>0];m=j+4|0;e=_u(a,b,m,6)|0;if((e|0)<0){k=e|-19072;l=g;return k|0}e=c[a>>2]|0;c[j+8>>2]=e;c[a>>2]=e+(c[m>>2]|0);m=Ez(j,f)|0;if((m|0)<0){k=m|-19072;l=g;return k|0}else{m=_u(a,b,h,5)|0;k=(m|0)<0?m|-19072:m;l=g;return k|0}return 0}function iC(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=l;l=l+16|0;h=g+12|0;i=g;c[h>>2]=0;do if(!((d|0)==0|(e|0)==0)){j=_u(a,b,h,48)|0;if((j|0)<0){k=j|-19072;break}j=dv(a,b,i)|0;if((j|0)<0){k=j|-19072;break}j=Ez(i,d)|0;if((j|0)<0){k=j|-19072;break}j=_u(a,b,f,4)|0;if((j|0)<0){k=j|-19072;break}else{c[e>>2]=c[a>>2];c[a>>2]=(c[a>>2]|0)+(c[f>>2]|0);k=j;break}}else k=-19328;while(0);l=g;return k|0}function jC(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0;i=l;l=l+32|0;j=i+24|0;k=i+12|0;m=i;c[j>>2]=0;if((d|0)==0|(e|0)==0|(f|0)==0|(g|0)==0|(h|0)==0){n=-19328;l=i;return n|0}o=_u(a,b,j,48)|0;if((o|0)<0){n=o|-19072;l=i;return n|0}o=cv(a,b,k,m)|0;if((o|0)<0){n=o|-19072;l=i;return n|0}if((c[m>>2]|0)!=4){n=-98;l=i;return n|0}c[e>>2]=c[m+8>>2];c[f>>2]=c[m+4>>2];m=Cz(k,d)|0;if((m|0)<0){n=m|-19072;l=i;return n|0}m=_u(a,b,h,4)|0;if((m|0)<0){n=m|-19072;l=i;return n|0}else{c[g>>2]=c[a>>2];c[a>>2]=(c[a>>2]|0)+(c[h>>2]|0);n=m;l=i;return n|0}return 0}function kC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=ev(a,b,c)|0;if((d|0)<0){e=d|-19200;return e|0}c=fv(a,b,48)|0;if((c|0)<0){e=c|-19200;return e|0}else{e=c+d|0;return e|0}return 0}function lC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=nv(a,b,c)|0;return ((d|0)<0?d|-19200:d)|0}function mC(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=l;l=l+16|0;g=f+4|0;h=f;c[g>>2]=0;c[h>>2]=0;do if(!((d|0)==0|(e|0)==0)){i=iv(a,b)|0;if((i|0)<0){j=i|-19200;break}k=Fz(e,g,h)|0;if((k|0)<0){j=k|-19072;break}k=kv(a,b,c[g>>2]|0,c[h>>2]|0,i)|0;if((k|0)<0){j=k|-19200;break}i=Iz(d,g,h)|0;if((i|0)<0){j=i|-19072;break}else{i=kv(a,b,c[g>>2]|0,c[h>>2]|0,k)|0;j=(i|0)<0?i|-19200:i;break}}else j=-19328;while(0);l=f;return j|0}function nC(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0;g=l;l=l+16|0;h=g+4|0;i=g;c[h>>2]=0;c[i>>2]=0;do if(!((d|0)==0|(e|0)==0|(f|0)==0)){j=ov(a,b,e,f)|0;if((j|0)<0){k=j|-19200;break}m=iv(a,b)|0;if((m|0)<0){k=m|-19200;break}n=Fz(d,h,i)|0;if((n|0)<0){k=n|-19072;break}n=kv(a,b,c[h>>2]|0,c[i>>2]|0,m)|0;if((n|0)<0){k=n|-19200;break}m=n+j|0;j=ev(a,b,m)|0;if((j|0)<0){k=j|-19200;break}n=fv(a,b,48)|0;if((n|0)<0){k=n|-19200;break}else{k=j+m+n|0;break}}else k=-19328;while(0);l=g;return k|0}function oC(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0;h=l;l=l+16|0;i=h+4|0;j=h;c[i>>2]=0;c[j>>2]=0;do if(!((d|0)==0|(e|0)==0|(f|0)==0)){k=ev(a,b,g)|0;if((k|0)<0){m=k|-19200;break}n=fv(a,b,4)|0;if((n|0)<0){m=n|-19200;break}o=ov(a,b,e,f)|0;if((o|0)<0){m=o|-19200;break}p=Dz(d,i,j)|0;if((p|0)<0){m=p|-19072;break}p=kv(a,b,c[i>>2]|0,c[j>>2]|0,o)|0;if((p|0)<0){m=p|-19200;break}o=k+g+n+p|0;p=ev(a,b,o)|0;if((p|0)<0){m=p|-19200;break}n=fv(a,b,48)|0;if((n|0)<0){m=n|-19200;break}else{m=p+o+n|0;break}}else m=-19328;while(0);l=h;return m|0}function pC(a){a=a|0;return ((a|0)==1?18408:(a|0)==2?18452:0)|0}function qC(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function rC(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;if((a|0)==0|(b|0)==0){d=-18688;return d|0}e=c[b+8>>2]|0;f=DE(1,e)|0;g=a+4|0;c[g>>2]=f;h=DE(1,e)|0;c[a+8>>2]=h;if(!f){d=-18816;return d|0}if(!h){CE(f);c[g>>2]=0;d=-18816;return d|0}else{c[a>>2]=b;d=0;return d|0}return 0}function sC(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;if(!b)return;d=b+4|0;e=c[d>>2]|0;if(e|0){f=c[(c[b>>2]|0)+8>>2]|0;if(!f)g=e;else{h=f;f=e;while(1){h=h+-1|0;a[f>>0]=0;if(!h)break;else f=f+1|0}g=c[d>>2]|0}CE(g)}g=b+8|0;d=c[g>>2]|0;if(d|0){f=c[(c[b>>2]|0)+8>>2]|0;if(!f)i=d;else{h=f;f=d;while(1){h=h+-1|0;a[f>>0]=0;if(!h)break;else f=f+1|0}i=c[g>>2]|0}CE(i)};c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;return}function tC(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;if(!b){d=-18688;return d|0}e=c[b>>2]|0;if(!e){d=-18688;return d|0}if(c[a>>2]|0){d=-18688;return d|0}f=c[e+8>>2]|0;g=DE(1,f)|0;h=a+4|0;c[h>>2]=g;i=DE(1,f)|0;c[a+8>>2]=i;if(!g){d=-18816;return d|0}if(!i){CE(g);c[h>>2]=0;d=-18816;return d|0}else{c[a>>2]=e;e=(c[b>>2]|0)+8|0;CT(g|0,c[b+4>>2]|0,c[e>>2]|0)|0;CT(i|0,c[b+8>>2]|0,c[e>>2]|0)|0;d=0;return d|0}return 0}function uC(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if(!a){e=-18688;return e|0}f=c[a>>2]|0;if(!f){e=-18688;return e|0}e=gd[c[f+24>>2]&63](c[a+4>>2]|0,c[a+8>>2]|0,b,d)|0;return e|0}function vC(a){a=a|0;var b=0,d=0;if(!a){b=-18688;return b|0}d=c[a>>2]|0;if(!d){b=-18688;return b|0}b=ed[c[d+28>>2]&255](c[a+4>>2]|0,c[a+8>>2]|0)|0;return b|0}function wC(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if(!a){g=-18688;return g|0}h=c[a>>2]|0;if(!h){g=-18688;return g|0}i=c[h+32>>2]|0;if(!i){g=-18304;return g|0}h=gd[i&63](b,c[a+8>>2]|0,e,f)|0;if(h|0){g=h;return g|0}c[d>>2]=c[(c[a>>2]|0)+16>>2];g=0;return g|0}function xC(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if(!a){g=-18688;return g|0}h=c[a>>2]|0;if(!h){g=-18688;return g|0}i=c[h+36>>2]|0;if(!i){g=-18304;return g|0}if((c[h+16>>2]|0)!=(d|0)){g=-18432;return g|0}d=(gd[i&63](b,c[a+4>>2]|0,e,f)|0)==0;g=d?0:-18560;return g|0}function yC(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if(((((a|0)!=0?(f=c[a>>2]|0,(f|0)!=0):0)?(g=c[a+4>>2]|0,!((b|0)==0|(g|0)==0)):0)?(a=c[b>>2]|0,(a|0)!=0):0)?(h=c[b+8>>2]|0,(h|0)!=0):0)if((c[f>>2]|0)==(c[a>>2]|0))i=gd[c[f+40>>2]&63](g,h,d,e)|0;else i=-18176;else i=-18688;return i|0}function zC(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;if(!a){d=-18688;return d|0}e=c[a>>2]|0;if(!e){d=-18688;return d|0}f=a+4|0;if((b|0)==0|(c[f>>2]|0)==0){d=-18688;return d|0}g=c[b>>2]|0;if(!g){d=-18688;return d|0}h=c[b+8>>2]|0;if(!h){d=-18688;return d|0}if((c[e>>2]|0)!=(c[g>>2]|0)){d=-18176;return d|0}e=DE(1,c[g+8>>2]|0)|0;if(!e){d=-18816;return d|0}b=ed[c[g+28>>2]&255](e,h)|0;if(!b){h=(aF(c[f>>2]|0,e,c[(c[a>>2]|0)+8>>2]|0)|0)==0;i=h?0:-18176}else i=b;CE(e);d=i;return d|0}function AC(a){a=a|0;var b=0;if(!a)b=0;else b=c[a>>2]|0;return b|0}function BC(a){a=a|0;var b=0;if(!a){b=0;return b|0}b=c[a+12>>2]|0;return b|0}function CC(a){a=a|0;var b=0;if(!a)b=0;else b=c[a+8>>2]|0;return b|0}function DC(a){a=a|0;var b=0;if(!a){b=0;return b|0}b=c[a+20>>2]|0;return b|0}function EC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;if((a|0)==0|(b|0)==0|(c|0)==0){e=-18688;return e|0}f=fd[c&127](d,b,32)|0;if(f|0){e=f;return e|0}CD(a,b)|0;e=0;return e|0}function FC(a,b){a=a|0;b=b|0;var c=0;if((a|0)==0|(b|0)==0){c=-18688;return c|0}CD(a,b)|0;c=0;return c|0}function GC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;if((a|0)==0|(b|0)==0|(c|0)==0|d>>>0<32){e=-18688;return e|0}d=(DD(c,a,b)|0)==0;e=d?0:-18048;return e|0}function HC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;if((a|0)==0|(b|0)==0|(c|0)==0){e=-18688;return e|0}f=fd[c&127](d,b,32)|0;if(f|0){e=f;return e|0}xD(a,b)|0;e=0;return e|0}function IC(a,b){a=a|0;b=b|0;var c=0;if((a|0)==0|(b|0)==0){c=-18688;return c|0}xD(a,b)|0;c=0;return c|0}function JC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;if((a|0)==0|(b|0)==0|(c|0)==0){e=-18688;return e|0}AD(a,b,c,d)|0;e=0;return e|0}function KC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;if((a|0)==0|(b|0)==0|(c|0)==0){e=-18688;return e|0}f=(BD(a,b,c,d)|0)==0;e=f?0:-18560;return e|0}function LC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;e=l;l=l+64|0;f=e+32|0;g=e;if((a|0)==0|(b|0)==0|(c|0)==0|d>>>0<32){h=-18688;l=e;return h|0}yD(f,a)|0;zD(g,b)|0;b=(DD(c,f,g)|0)==0;h=b?0:-18048;l=e;return h|0}function MC(a){a=a|0;ET(a|0,0,280)|0;return}function NC(b){b=b|0;var c=0;if(!b)return;c=b;b=280;while(1){b=b+-1|0;a[c>>0]=0;if(!b)break;else c=c+1|0}return}function OC(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;g=l;l=l+2048|0;h=g+1024|0;i=g;if(!(c[23524]|0)){j=0;k=1;while(1){c[h+(j<<2)>>2]=k;c[i+(k<<2)>>2]=j;j=j+1|0;if((j|0)==256)break;else k=k<<1&254^k^(k&128|0?27:0)}c[23525]=1;c[23526]=2;c[23527]=4;c[23528]=8;c[23529]=16;c[23530]=32;c[23531]=64;c[23532]=128;c[23533]=27;c[23534]=54;a[104898]=99;a[105253]=0;k=1;do{j=c[h+(255-(c[i+(k<<2)>>2]|0)<<2)>>2]|0;m=(j<<1|j>>>7)&255;n=m<<1&254;o=n|m>>>7;p=o<<1&254;q=p|n>>>7;n=j^99^m^o^q^(q<<1&254|p>>>7);a[104898+k>>0]=n;a[105154+n>>0]=k;k=k+1|0}while((k|0)!=256);k=c[i+56>>2]|0;n=c[i+36>>2]|0;p=c[i+52>>2]|0;q=c[i+44>>2]|0;o=0;do{m=d[104898+o>>0]|0;j=(m&128|0?27:0)^m<<1&254;r=j^m;s=m<<16|m<<8|j;c[94140+(o<<2)>>2]=r<<24|s;j=s<<8|r;c[95164+(o<<2)>>2]=j;r=j<<8|m;c[96188+(o<<2)>>2]=r;c[97212+(o<<2)>>2]=r<<8|m;m=a[105154+o>>0]|0;if(!(m<<24>>24)){t=0;u=0;v=0}else{r=c[i+((m&255)<<2)>>2]|0;m=c[h+(((r+n|0)%255|0)<<2)>>2]<<8^c[h+(((r+k|0)%255|0)<<2)>>2];t=c[h+(((r+q|0)%255|0)<<2)>>2]|0;u=c[h+(((r+p|0)%255|0)<<2)>>2]<<16^m;v=m}m=t<<24^u;c[98236+(o<<2)>>2]=m;r=m>>>24|u<<8;c[99260+(o<<2)>>2]=r;m=r<<8|u>>>16&255;c[100284+(o<<2)>>2]=m;c[101308+(o<<2)>>2]=m<<8|v>>>8&255;o=o+1|0}while((o|0)!=256);c[23524]=1}switch(f|0){case 128:{w=10;break}case 192:{w=12;break}case 256:{w=14;break}default:{x=-32;l=g;return x|0}}c[b>>2]=w;w=b+8|0;c[b+4>>2]=w;o=f>>>5;f=0;do{v=f<<2;c[b+8+(f<<2)>>2]=(d[e+(v|1)>>0]|0)<<8|(d[e+v>>0]|0)|(d[e+(v|2)>>0]|0)<<16|(d[e+(v|3)>>0]|0)<<24;f=f+1|0}while((f|0)!=(o|0));switch(c[b>>2]|0){case 10:{b=w;o=0;f=c[w>>2]|0;do{e=c[b+12>>2]|0;f=c[94100+(o<<2)>>2]^f^(d[104898+(e>>>8&255)>>0]|0)^(d[104898+(e>>>16&255)>>0]|0)<<8^(d[104898+(e>>>24)>>0]|0)<<16^(d[104898+(e&255)>>0]|0)<<24;v=b;b=b+16|0;c[b>>2]=f;u=f^c[v+4>>2];c[v+20>>2]=u;t=c[v+8>>2]^u;c[v+24>>2]=t;c[v+28>>2]=e^t;o=o+1|0}while((o|0)!=10);x=0;l=g;return x|0}case 12:{o=w;f=0;b=c[w>>2]|0;do{t=c[o+20>>2]|0;b=c[94100+(f<<2)>>2]^b^(d[104898+(t>>>8&255)>>0]|0)^(d[104898+(t>>>16&255)>>0]|0)<<8^(d[104898+(t>>>24)>>0]|0)<<16^(d[104898+(t&255)>>0]|0)<<24;e=o;o=o+24|0;c[o>>2]=b;v=b^c[e+4>>2];c[e+28>>2]=v;u=c[e+8>>2]^v;c[e+32>>2]=u;v=c[e+12>>2]^u;c[e+36>>2]=v;u=c[e+16>>2]^v;c[e+40>>2]=u;c[e+44>>2]=t^u;f=f+1|0}while((f|0)!=8);x=0;l=g;return x|0}case 14:{f=w;b=0;o=c[w>>2]|0;do{w=c[f+28>>2]|0;o=c[94100+(b<<2)>>2]^o^(d[104898+(w>>>8&255)>>0]|0)^(d[104898+(w>>>16&255)>>0]|0)<<8^(d[104898+(w>>>24)>>0]|0)<<16^(d[104898+(w&255)>>0]|0)<<24;u=f;f=f+32|0;c[f>>2]=o;t=o^c[u+4>>2];c[u+36>>2]=t;e=c[u+8>>2]^t;c[u+40>>2]=e;t=c[u+12>>2]^e;c[u+44>>2]=t;e=c[u+16>>2]^(d[104898+(t&255)>>0]|0)^(d[104898+(t>>>8&255)>>0]|0)<<8^(d[104898+(t>>>16&255)>>0]|0)<<16^(d[104898+(t>>>24)>>0]|0)<<24;c[u+48>>2]=e;t=e^c[u+20>>2];c[u+52>>2]=t;e=c[u+24>>2]^t;c[u+56>>2]=e;c[u+60>>2]=w^e;b=b+1|0}while((b|0)!=7);x=0;l=g;return x|0}default:{x=0;l=g;return x|0}}return 0}function PC(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=l;l=l+288|0;h=g;ET(h|0,0,280)|0;i=b+8|0;c[b+4>>2]=i;j=OC(h,e,f)|0;if(!j){f=c[h>>2]|0;c[b>>2]=f;e=c[h+4>>2]|0;k=f<<2;m=e+(k<<2)|0;n=m+4|0;c[i>>2]=c[m>>2];m=n+4|0;c[b+12>>2]=c[n>>2];n=m+4|0;c[b+16>>2]=c[m>>2];m=n+4|0;i=b+24|0;c[b+20>>2]=c[n>>2];n=m+-32|0;if((f|0)>1){b=~f;o=k+-4-(f+((b|0)>-3?b:-3)<<2)|0;b=i;k=f;f=n;while(1){p=b;b=b+16|0;q=c[f>>2]|0;c[p>>2]=c[99260+((d[104898+(q>>>8&255)>>0]|0)<<2)>>2]^c[98236+((d[104898+(q&255)>>0]|0)<<2)>>2]^c[100284+((d[104898+(q>>>16&255)>>0]|0)<<2)>>2]^c[101308+((d[104898+(q>>>24)>>0]|0)<<2)>>2];q=c[f+4>>2]|0;c[p+4>>2]=c[99260+((d[104898+(q>>>8&255)>>0]|0)<<2)>>2]^c[98236+((d[104898+(q&255)>>0]|0)<<2)>>2]^c[100284+((d[104898+(q>>>16&255)>>0]|0)<<2)>>2]^c[101308+((d[104898+(q>>>24)>>0]|0)<<2)>>2];q=c[f+8>>2]|0;c[p+8>>2]=c[99260+((d[104898+(q>>>8&255)>>0]|0)<<2)>>2]^c[98236+((d[104898+(q&255)>>0]|0)<<2)>>2]^c[100284+((d[104898+(q>>>16&255)>>0]|0)<<2)>>2]^c[101308+((d[104898+(q>>>24)>>0]|0)<<2)>>2];q=c[f+12>>2]|0;c[p+12>>2]=c[99260+((d[104898+(q>>>8&255)>>0]|0)<<2)>>2]^c[98236+((d[104898+(q&255)>>0]|0)<<2)>>2]^c[100284+((d[104898+(q>>>16&255)>>0]|0)<<2)>>2]^c[101308+((d[104898+(q>>>24)>>0]|0)<<2)>>2];f=f+-16|0;if((k|0)<=2)break;else k=k+-1|0}r=f;s=b;t=e+(o<<2)|0}else{r=n;s=i;t=m}c[s>>2]=c[r>>2];c[s+4>>2]=c[t+-28>>2];c[s+8>>2]=c[t+-24>>2];c[s+12>>2]=c[t+-20>>2];u=h;v=280}else{u=h;v=280}while(1){v=v+-1|0;a[u>>0]=0;if(!v)break;else u=u+1|0}l=g;return j|0}function QC(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=c[b+4>>2]|0;h=c[b>>2]>>1;b=g+16|0;i=((d[e+1>>0]|0)<<8|(d[e>>0]|0)|(d[e+2>>0]|0)<<16|(d[e+3>>0]|0)<<24)^c[g>>2];j=((d[e+5>>0]|0)<<8|(d[e+4>>0]|0)|(d[e+6>>0]|0)<<16|(d[e+7>>0]|0)<<24)^c[g+4>>2];k=((d[e+13>>0]|0)<<8|(d[e+12>>0]|0)|(d[e+14>>0]|0)<<16|(d[e+15>>0]|0)<<24)^c[g+12>>2];l=((d[e+9>>0]|0)<<8|(d[e+8>>0]|0)|(d[e+10>>0]|0)<<16|(d[e+11>>0]|0)<<24)^c[g+8>>2];while(1){m=c[94140+((i&255)<<2)>>2]^c[b>>2]^c[95164+((j>>>8&255)<<2)>>2]^c[96188+((l>>>16&255)<<2)>>2]^c[97212+(k>>>24<<2)>>2];n=c[94140+((j&255)<<2)>>2]^c[b+4>>2]^c[95164+((l>>>8&255)<<2)>>2]^c[96188+((k>>>16&255)<<2)>>2]^c[97212+(i>>>24<<2)>>2];o=c[94140+((l&255)<<2)>>2]^c[b+8>>2]^c[95164+((k>>>8&255)<<2)>>2]^c[96188+((i>>>16&255)<<2)>>2]^c[97212+(j>>>24<<2)>>2];p=c[94140+((k&255)<<2)>>2]^c[b+12>>2]^c[95164+((i>>>8&255)<<2)>>2]^c[96188+((j>>>16&255)<<2)>>2]^c[97212+(l>>>24<<2)>>2];q=b+20|0;r=c[b+16>>2]|0;s=m&255;if((h|0)<=1)break;g=c[94140+((o&255)<<2)>>2]^c[b+24>>2]^c[95164+((p>>>8&255)<<2)>>2]^c[96188+((m>>>16&255)<<2)>>2]^c[97212+(n>>>24<<2)>>2];e=c[94140+((p&255)<<2)>>2]^c[b+28>>2]^c[95164+((m>>>8&255)<<2)>>2]^c[96188+((n>>>16&255)<<2)>>2]^c[97212+(o>>>24<<2)>>2];h=h+-1|0;b=b+32|0;i=c[94140+(s<<2)>>2]^r^c[95164+((n>>>8&255)<<2)>>2]^c[96188+((o>>>16&255)<<2)>>2]^c[97212+(p>>>24<<2)>>2];j=c[94140+((n&255)<<2)>>2]^c[q>>2]^c[95164+((o>>>8&255)<<2)>>2]^c[96188+((p>>>16&255)<<2)>>2]^c[97212+(m>>>24<<2)>>2];k=e;l=g}l=(d[104898+(n>>>8&255)>>0]|0)<<8^r;k=(d[104898+(o>>>16&255)>>0]|0)<<16^r;j=(d[104898+(p>>>24)>>0]|0)<<24^r;i=c[q>>2]|0;q=i^(d[104898+(n&255)>>0]|0);h=(d[104898+(o>>>8&255)>>0]|0)<<8^i;g=(d[104898+(p>>>16&255)>>0]|0)<<16^i;e=(d[104898+(m>>>24)>>0]|0)<<24^i;i=c[b+24>>2]|0;t=i^(d[104898+(o&255)>>0]|0);u=(d[104898+(p>>>8&255)>>0]|0)<<8^i;v=(d[104898+(m>>>16&255)>>0]|0)<<16^i;w=(d[104898+(n>>>24)>>0]|0)<<24^i;i=c[b+28>>2]|0;b=i^(d[104898+(p&255)>>0]|0);p=(d[104898+(m>>>8&255)>>0]|0)<<8^i;m=(d[104898+(n>>>16&255)>>0]|0)<<16^i;n=(d[104898+(o>>>24)>>0]|0)<<24^i;a[f>>0]=r^(d[104898+s>>0]|0);a[f+1>>0]=l>>>8;a[f+2>>0]=k>>>16;a[f+3>>0]=j>>>24;a[f+4>>0]=q;a[f+5>>0]=h>>>8;a[f+6>>0]=g>>>16;a[f+7>>0]=e>>>24;a[f+8>>0]=t;a[f+9>>0]=u>>>8;a[f+10>>0]=v>>>16;a[f+11>>0]=w>>>24;a[f+12>>0]=b;a[f+13>>0]=p>>>8;a[f+14>>0]=m>>>16;a[f+15>>0]=n>>>24;return}function RC(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=c[b+4>>2]|0;h=c[b>>2]>>1;b=g+16|0;i=((d[e+1>>0]|0)<<8|(d[e>>0]|0)|(d[e+2>>0]|0)<<16|(d[e+3>>0]|0)<<24)^c[g>>2];j=((d[e+5>>0]|0)<<8|(d[e+4>>0]|0)|(d[e+6>>0]|0)<<16|(d[e+7>>0]|0)<<24)^c[g+4>>2];k=((d[e+13>>0]|0)<<8|(d[e+12>>0]|0)|(d[e+14>>0]|0)<<16|(d[e+15>>0]|0)<<24)^c[g+12>>2];l=((d[e+9>>0]|0)<<8|(d[e+8>>0]|0)|(d[e+10>>0]|0)<<16|(d[e+11>>0]|0)<<24)^c[g+8>>2];while(1){m=c[98236+((i&255)<<2)>>2]^c[b>>2]^c[99260+((k>>>8&255)<<2)>>2]^c[100284+((l>>>16&255)<<2)>>2]^c[101308+(j>>>24<<2)>>2];n=c[98236+((j&255)<<2)>>2]^c[b+4>>2]^c[99260+((i>>>8&255)<<2)>>2]^c[100284+((k>>>16&255)<<2)>>2]^c[101308+(l>>>24<<2)>>2];o=c[98236+((l&255)<<2)>>2]^c[b+8>>2]^c[99260+((j>>>8&255)<<2)>>2]^c[100284+((i>>>16&255)<<2)>>2]^c[101308+(k>>>24<<2)>>2];p=c[98236+((k&255)<<2)>>2]^c[b+12>>2]^c[99260+((l>>>8&255)<<2)>>2]^c[100284+((j>>>16&255)<<2)>>2]^c[101308+(i>>>24<<2)>>2];q=b+20|0;r=c[b+16>>2]|0;s=m&255;if((h|0)<=1)break;g=c[98236+((o&255)<<2)>>2]^c[b+24>>2]^c[99260+((n>>>8&255)<<2)>>2]^c[100284+((m>>>16&255)<<2)>>2]^c[101308+(p>>>24<<2)>>2];e=c[98236+((p&255)<<2)>>2]^c[b+28>>2]^c[99260+((o>>>8&255)<<2)>>2]^c[100284+((n>>>16&255)<<2)>>2]^c[101308+(m>>>24<<2)>>2];h=h+-1|0;b=b+32|0;i=c[98236+(s<<2)>>2]^r^c[99260+((p>>>8&255)<<2)>>2]^c[100284+((o>>>16&255)<<2)>>2]^c[101308+(n>>>24<<2)>>2];j=c[98236+((n&255)<<2)>>2]^c[q>>2]^c[99260+((m>>>8&255)<<2)>>2]^c[100284+((p>>>16&255)<<2)>>2]^c[101308+(o>>>24<<2)>>2];k=e;l=g}l=(d[105154+(p>>>8&255)>>0]|0)<<8^r;k=(d[105154+(o>>>16&255)>>0]|0)<<16^r;j=(d[105154+(n>>>24)>>0]|0)<<24^r;i=c[q>>2]|0;q=i^(d[105154+(n&255)>>0]|0);h=(d[105154+(m>>>8&255)>>0]|0)<<8^i;g=(d[105154+(p>>>16&255)>>0]|0)<<16^i;e=(d[105154+(o>>>24)>>0]|0)<<24^i;i=c[b+24>>2]|0;t=i^(d[105154+(o&255)>>0]|0);u=(d[105154+(n>>>8&255)>>0]|0)<<8^i;v=(d[105154+(m>>>16&255)>>0]|0)<<16^i;w=(d[105154+(p>>>24)>>0]|0)<<24^i;i=c[b+28>>2]|0;b=i^(d[105154+(p&255)>>0]|0);p=(d[105154+(o>>>8&255)>>0]|0)<<8^i;o=(d[105154+(n>>>16&255)>>0]|0)<<16^i;n=(d[105154+(m>>>24)>>0]|0)<<24^i;a[f>>0]=r^(d[105154+s>>0]|0);a[f+1>>0]=l>>>8;a[f+2>>0]=k>>>16;a[f+3>>0]=j>>>24;a[f+4>>0]=q;a[f+5>>0]=h>>>8;a[f+6>>0]=g>>>16;a[f+7>>0]=e>>>24;a[f+8>>0]=t;a[f+9>>0]=u>>>8;a[f+10>>0]=v>>>16;a[f+11>>0]=w>>>24;a[f+12>>0]=b;a[f+13>>0]=p>>>8;a[f+14>>0]=o>>>16;a[f+15>>0]=n>>>24;return}function SC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if((b|0)==1){QC(a,c,d);return 0}else{RC(a,c,d);return 0}return 0}function TC(b,c,d,e,f,g){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;h=l;l=l+16|0;i=h;if(d&15|0){j=-34;l=h;return j|0}k=(d|0)==0;if(!c){if(k){j=0;l=h;return j|0}m=e+1|0;n=e+2|0;o=e+3|0;p=e+4|0;q=e+5|0;r=e+6|0;s=e+7|0;t=e+8|0;u=e+9|0;v=e+10|0;w=e+11|0;x=e+12|0;y=e+13|0;z=e+14|0;A=e+15|0;B=g;C=f;D=d;while(1){E=i;F=C;G=E+16|0;do{a[E>>0]=a[F>>0]|0;E=E+1|0;F=F+1|0}while((E|0)<(G|0));RC(b,C,B);a[B>>0]=a[e>>0]^a[B>>0];H=B+1|0;a[H>>0]=a[m>>0]^a[H>>0];H=B+2|0;a[H>>0]=a[n>>0]^a[H>>0];H=B+3|0;a[H>>0]=a[o>>0]^a[H>>0];H=B+4|0;a[H>>0]=a[p>>0]^a[H>>0];H=B+5|0;a[H>>0]=a[q>>0]^a[H>>0];H=B+6|0;a[H>>0]=a[r>>0]^a[H>>0];H=B+7|0;a[H>>0]=a[s>>0]^a[H>>0];H=B+8|0;a[H>>0]=a[t>>0]^a[H>>0];H=B+9|0;a[H>>0]=a[u>>0]^a[H>>0];H=B+10|0;a[H>>0]=a[v>>0]^a[H>>0];H=B+11|0;a[H>>0]=a[w>>0]^a[H>>0];H=B+12|0;a[H>>0]=a[x>>0]^a[H>>0];H=B+13|0;a[H>>0]=a[y>>0]^a[H>>0];H=B+14|0;a[H>>0]=a[z>>0]^a[H>>0];H=B+15|0;a[H>>0]=a[A>>0]^a[H>>0];E=e;F=i;G=E+16|0;do{a[E>>0]=a[F>>0]|0;E=E+1|0;F=F+1|0}while((E|0)<(G|0));D=D+-16|0;if(!D){j=0;break}else{B=B+16|0;C=C+16|0}}l=h;return j|0}if(k){j=0;l=h;return j|0}k=e+1|0;C=e+2|0;B=e+3|0;D=e+4|0;i=e+5|0;A=e+6|0;z=e+7|0;y=e+8|0;x=e+9|0;w=e+10|0;v=e+11|0;u=e+12|0;t=e+13|0;s=e+14|0;r=e+15|0;if((c|0)==1){c=g;q=f;p=d;while(1){a[c>>0]=a[e>>0]^a[q>>0];a[c+1>>0]=a[k>>0]^a[q+1>>0];a[c+2>>0]=a[C>>0]^a[q+2>>0];a[c+3>>0]=a[B>>0]^a[q+3>>0];a[c+4>>0]=a[D>>0]^a[q+4>>0];a[c+5>>0]=a[i>>0]^a[q+5>>0];a[c+6>>0]=a[A>>0]^a[q+6>>0];a[c+7>>0]=a[z>>0]^a[q+7>>0];a[c+8>>0]=a[y>>0]^a[q+8>>0];a[c+9>>0]=a[x>>0]^a[q+9>>0];a[c+10>>0]=a[w>>0]^a[q+10>>0];a[c+11>>0]=a[v>>0]^a[q+11>>0];a[c+12>>0]=a[u>>0]^a[q+12>>0];a[c+13>>0]=a[t>>0]^a[q+13>>0];a[c+14>>0]=a[s>>0]^a[q+14>>0];a[c+15>>0]=a[r>>0]^a[q+15>>0];QC(b,c,c);E=e;F=c;G=E+16|0;do{a[E>>0]=a[F>>0]|0;E=E+1|0;F=F+1|0}while((E|0)<(G|0));p=p+-16|0;if(!p){j=0;break}else{c=c+16|0;q=q+16|0}}l=h;return j|0}else{q=g;g=f;f=d;while(1){a[q>>0]=a[e>>0]^a[g>>0];a[q+1>>0]=a[k>>0]^a[g+1>>0];a[q+2>>0]=a[C>>0]^a[g+2>>0];a[q+3>>0]=a[B>>0]^a[g+3>>0];a[q+4>>0]=a[D>>0]^a[g+4>>0];a[q+5>>0]=a[i>>0]^a[g+5>>0];a[q+6>>0]=a[A>>0]^a[g+6>>0];a[q+7>>0]=a[z>>0]^a[g+7>>0];a[q+8>>0]=a[y>>0]^a[g+8>>0];a[q+9>>0]=a[x>>0]^a[g+9>>0];a[q+10>>0]=a[w>>0]^a[g+10>>0];a[q+11>>0]=a[v>>0]^a[g+11>>0];a[q+12>>0]=a[u>>0]^a[g+12>>0];a[q+13>>0]=a[t>>0]^a[g+13>>0];a[q+14>>0]=a[s>>0]^a[g+14>>0];a[q+15>>0]=a[r>>0]^a[g+15>>0];RC(b,q,q);E=e;F=q;G=E+16|0;do{a[E>>0]=a[F>>0]|0;E=E+1|0;F=F+1|0}while((E|0)<(G|0));f=f+-16|0;if(!f){j=0;break}else{q=q+16|0;g=g+16|0}}l=h;return j|0}return 0}function UC(a){a=a|0;var b=0;b=a;a=b+64|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function VC(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=ew(b,e,1)|0;if(!f){g=-13;return g|0}if((c[f+24>>2]|0)!=16){g=-13;return g|0}gw(a);b=hw(a,f)|0;if(b|0){g=b;return g|0}g=sw(a,d,e,1)|0;return g|0}function WC(b){b=b|0;var c=0,d=0;gw(b);a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;c=b+4|0;a[b+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;b=c+4|0;a[c+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;d=c+8|0;a[b+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;b=c+12|0;a[d+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;d=c+16|0;a[b+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;b=c+20|0;a[d+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;d=c+24|0;a[b+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;b=c+28|0;a[d+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;d=c+32|0;a[b+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;b=c+36|0;a[d+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;d=c+40|0;a[b+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;b=c+44|0;a[d+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;d=c+48|0;a[b+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;b=c+52|0;a[d+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;d=c+56|0;a[b+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;a[d+3>>0]=0;return}function XC(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;k=l;l=l+176|0;m=k+136|0;n=k+72|0;o=k+36|0;p=k+24|0;q=k+12|0;r=k;if((c[b>>2]|0)==9){if(!(c[b+84>>2]|0)){s=Sv(f,m,32)|0;if(!s){t=m+31|0;u=a[m>>0]|0;a[m>>0]=a[t>>0]|0;a[t>>0]=u;u=m+1|0;t=m+30|0;v=a[u>>0]|0;a[u>>0]=a[t>>0]|0;a[t>>0]=v;v=m+2|0;t=m+29|0;u=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=u;u=m+3|0;t=m+28|0;v=a[u>>0]|0;a[u>>0]=a[t>>0]|0;a[t>>0]=v;v=m+4|0;t=m+27|0;u=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=u;u=m+5|0;t=m+26|0;v=a[u>>0]|0;a[u>>0]=a[t>>0]|0;a[t>>0]=v;v=m+6|0;t=m+25|0;u=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=u;u=m+7|0;t=m+24|0;v=a[u>>0]|0;a[u>>0]=a[t>>0]|0;a[t>>0]=v;v=m+8|0;t=m+23|0;u=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=u;u=m+9|0;t=m+22|0;v=a[u>>0]|0;a[u>>0]=a[t>>0]|0;a[t>>0]=v;v=m+10|0;t=m+21|0;u=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=u;u=m+11|0;t=m+20|0;v=a[u>>0]|0;a[u>>0]=a[t>>0]|0;a[t>>0]=v;v=m+12|0;t=m+19|0;u=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=u;u=m+13|0;t=m+18|0;v=a[u>>0]|0;a[u>>0]=a[t>>0]|0;a[t>>0]=v;v=m+14|0;t=m+17|0;u=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=u;u=m+15|0;t=m+16|0;v=a[u>>0]|0;a[u>>0]=a[t>>0]|0;a[t>>0]=v;v=ED(n,m,g,h)|0;if(!v){m=n+63|0;t=a[n>>0]|0;a[n>>0]=a[m>>0]|0;a[m>>0]=t;t=n+1|0;m=n+62|0;u=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=u;u=n+2|0;m=n+61|0;t=a[u>>0]|0;a[u>>0]=a[m>>0]|0;a[m>>0]=t;t=n+3|0;m=n+60|0;u=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=u;u=n+4|0;m=n+59|0;t=a[u>>0]|0;a[u>>0]=a[m>>0]|0;a[m>>0]=t;t=n+5|0;m=n+58|0;u=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=u;u=n+6|0;m=n+57|0;t=a[u>>0]|0;a[u>>0]=a[m>>0]|0;a[m>>0]=t;t=n+7|0;m=n+56|0;u=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=u;u=n+8|0;m=n+55|0;t=a[u>>0]|0;a[u>>0]=a[m>>0]|0;a[m>>0]=t;t=n+9|0;m=n+54|0;u=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=u;u=n+10|0;m=n+53|0;t=a[u>>0]|0;a[u>>0]=a[m>>0]|0;a[m>>0]=t;t=n+11|0;m=n+52|0;u=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=u;u=n+12|0;m=n+51|0;t=a[u>>0]|0;a[u>>0]=a[m>>0]|0;a[m>>0]=t;t=n+13|0;m=n+50|0;u=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=u;u=n+14|0;m=n+49|0;t=a[u>>0]|0;a[u>>0]=a[m>>0]|0;a[m>>0]=t;t=n+15|0;m=n+48|0;u=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=u;u=n+16|0;m=n+47|0;t=a[u>>0]|0;a[u>>0]=a[m>>0]|0;a[m>>0]=t;t=n+17|0;m=n+46|0;u=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=u;u=n+18|0;m=n+45|0;t=a[u>>0]|0;a[u>>0]=a[m>>0]|0;a[m>>0]=t;t=n+19|0;m=n+44|0;u=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=u;u=n+20|0;m=n+43|0;t=a[u>>0]|0;a[u>>0]=a[m>>0]|0;a[m>>0]=t;t=n+21|0;m=n+42|0;u=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=u;u=n+22|0;m=n+41|0;t=a[u>>0]|0;a[u>>0]=a[m>>0]|0;a[m>>0]=t;t=n+23|0;m=n+40|0;u=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=u;u=n+24|0;m=n+39|0;t=a[u>>0]|0;a[u>>0]=a[m>>0]|0;a[m>>0]=t;t=n+25|0;m=n+38|0;u=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=u;u=n+26|0;m=n+37|0;t=a[u>>0]|0;a[u>>0]=a[m>>0]|0;a[m>>0]=t;t=n+27|0;m=n+36|0;u=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=u;u=n+28|0;m=n+35|0;t=a[u>>0]|0;a[u>>0]=a[m>>0]|0;a[m>>0]=t;t=n+29|0;m=n+34|0;u=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=u;u=n+30|0;m=n+33|0;t=a[u>>0]|0;a[u>>0]=a[m>>0]|0;a[m>>0]=t;t=n+31|0;m=n+32|0;u=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=u;u=Rv(e,n,32)|0;if(!u)w=Rv(d,m,32)|0;else w=u}else w=v}else w=s}else w=-20352;x=w;l=k;return x|0}w=b+76|0;if(!(c[b+84>>2]|0)){x=-20352;l=k;return x|0}Bx(o);rv(p);rv(q);rv(r);s=b+92|0;v=0;a:while(1){u=0;while(1){m=Wx(b,p,o,i,j)|0;if(m|0){y=m;break a}m=Vv(d,o,w)|0;if(m|0){y=m;break a}if((u|0)>10){y=-19712;break a}if(!(Uv(d,0)|0))u=u+1|0;else break}u=((c[s>>2]|0)+7|0)>>>3;m=u>>>0<h>>>0?u:h;u=Rv(q,g,m)|0;if(u|0){y=u;break}u=m<<3;m=c[s>>2]|0;if(u>>>0>m>>>0?(n=Qv(q,u-m|0)|0,n|0):0){y=n;break}if((Tv(q,w)|0)>-1?(n=Iv(q,q,w)|0,n|0):0){y=n;break}n=(c[s>>2]|0)+7|0;m=Zv(r,n>>>3,i,j)|0;if(!m){z=0;A=n}else{y=m;break}while(1){m=Qv(r,(A&-8)-(c[s>>2]|0)|0)|0;if(m|0){y=m;break a}if((z|0)>=30){x=-19712;B=36;break a}z=z+1|0;if((Uv(r,1)|0)>=0?(Tv(r,w)|0)<=-1:0)break;A=(c[s>>2]|0)+7|0;m=Zv(r,A>>>3,i,j)|0;if(m|0){y=m;break a}}m=Gv(e,d,f)|0;if(m|0){y=m;break}m=Hv(q,q,e)|0;if(m|0){y=m;break}m=Gv(q,q,r)|0;if(m|0){y=m;break}m=Gv(p,p,r)|0;if(m|0){y=m;break}m=_v(e,p,w)|0;if(m|0){y=m;break}m=Gv(e,e,q)|0;if(m|0){y=m;break}m=Vv(e,e,w)|0;if(m|0){y=m;break}if((v|0)>10){y=-19712;break}if(!(Uv(e,0)|0))v=v+1|0;else{y=0;break}}if((B|0)==36){l=k;return x|0}Dx(o);sv(p);sv(q);sv(r);x=y;l=k;return x|0}function YC(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;i=l;l=l+256|0;j=i+12|0;k=i+112|0;m=i;n=a+92|0;o=((c[n>>2]|0)+7|0)>>>3;p=Cy(h)|0;if(!p){q=-20352;l=i;return q|0}rv(m);dD(j);h=Sv(e,k,o)|0;do if(!h){r=((c[n>>2]|0)+7|0)>>>3;s=r>>>0<g>>>0?r:g;r=Rv(m,f,s)|0;if(!r){t=s<<3;s=c[n>>2]|0;if(t>>>0>s>>>0?(u=Qv(m,t-s|0)|0,u|0):0){v=u;break}u=a+76|0;if((Tv(m,u)|0)>-1?(s=Iv(m,m,u)|0,s|0):0){v=s;break}s=Sv(m,k+o|0,o)|0;if(!s){fD(j,p,k,o<<1)|0;v=XC(a,b,d,e,f,g,111,j)|0}else v=s}else v=r}else v=h;while(0);iD(j);sv(m);q=v;l=i;return q|0}function ZC(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;i=l;l=l+192|0;j=i+152|0;k=i+88|0;m=i+72|0;n=i+60|0;o=i+48|0;p=i+36|0;q=i;Bx(q);rv(m);rv(n);rv(o);rv(p);if((c[b>>2]|0)==9){if(!(c[b+84>>2]|0)){r=Sv(f,j,32)|0;if(!r){s=j+31|0;t=a[j>>0]|0;a[j>>0]=a[s>>0]|0;a[s>>0]=t;t=j+1|0;s=j+30|0;u=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=u;u=j+2|0;s=j+29|0;t=a[u>>0]|0;a[u>>0]=a[s>>0]|0;a[s>>0]=t;t=j+3|0;s=j+28|0;u=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=u;u=j+4|0;s=j+27|0;t=a[u>>0]|0;a[u>>0]=a[s>>0]|0;a[s>>0]=t;t=j+5|0;s=j+26|0;u=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=u;u=j+6|0;s=j+25|0;t=a[u>>0]|0;a[u>>0]=a[s>>0]|0;a[s>>0]=t;t=j+7|0;s=j+24|0;u=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=u;u=j+8|0;s=j+23|0;t=a[u>>0]|0;a[u>>0]=a[s>>0]|0;a[s>>0]=t;t=j+9|0;s=j+22|0;u=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=u;u=j+10|0;s=j+21|0;t=a[u>>0]|0;a[u>>0]=a[s>>0]|0;a[s>>0]=t;t=j+11|0;s=j+20|0;u=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=u;u=j+12|0;s=j+19|0;t=a[u>>0]|0;a[u>>0]=a[s>>0]|0;a[s>>0]=t;t=j+13|0;s=j+18|0;u=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=u;u=j+14|0;s=j+17|0;t=a[u>>0]|0;a[u>>0]=a[s>>0]|0;a[s>>0]=t;t=j+15|0;s=j+16|0;u=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=u;u=Sv(h,k,32)|0;if(!u){s=k+32|0;t=Sv(g,s,32)|0;if(!t){v=k+63|0;w=a[k>>0]|0;a[k>>0]=a[v>>0]|0;a[v>>0]=w;w=k+1|0;v=k+62|0;x=a[w>>0]|0;a[w>>0]=a[v>>0]|0;a[v>>0]=x;x=k+2|0;v=k+61|0;w=a[x>>0]|0;a[x>>0]=a[v>>0]|0;a[v>>0]=w;w=k+3|0;v=k+60|0;x=a[w>>0]|0;a[w>>0]=a[v>>0]|0;a[v>>0]=x;x=k+4|0;v=k+59|0;w=a[x>>0]|0;a[x>>0]=a[v>>0]|0;a[v>>0]=w;w=k+5|0;v=k+58|0;x=a[w>>0]|0;a[w>>0]=a[v>>0]|0;a[v>>0]=x;x=k+6|0;v=k+57|0;w=a[x>>0]|0;a[x>>0]=a[v>>0]|0;a[v>>0]=w;w=k+7|0;v=k+56|0;x=a[w>>0]|0;a[w>>0]=a[v>>0]|0;a[v>>0]=x;x=k+8|0;v=k+55|0;w=a[x>>0]|0;a[x>>0]=a[v>>0]|0;a[v>>0]=w;w=k+9|0;v=k+54|0;x=a[w>>0]|0;a[w>>0]=a[v>>0]|0;a[v>>0]=x;x=k+10|0;v=k+53|0;w=a[x>>0]|0;a[x>>0]=a[v>>0]|0;a[v>>0]=w;w=k+11|0;v=k+52|0;x=a[w>>0]|0;a[w>>0]=a[v>>0]|0;a[v>>0]=x;x=k+12|0;v=k+51|0;w=a[x>>0]|0;a[x>>0]=a[v>>0]|0;a[v>>0]=w;w=k+13|0;v=k+50|0;x=a[w>>0]|0;a[w>>0]=a[v>>0]|0;a[v>>0]=x;x=k+14|0;v=k+49|0;w=a[x>>0]|0;a[x>>0]=a[v>>0]|0;a[v>>0]=w;w=k+15|0;v=k+48|0;x=a[w>>0]|0;a[w>>0]=a[v>>0]|0;a[v>>0]=x;x=k+16|0;v=k+47|0;w=a[x>>0]|0;a[x>>0]=a[v>>0]|0;a[v>>0]=w;w=k+17|0;v=k+46|0;x=a[w>>0]|0;a[w>>0]=a[v>>0]|0;a[v>>0]=x;x=k+18|0;v=k+45|0;w=a[x>>0]|0;a[x>>0]=a[v>>0]|0;a[v>>0]=w;w=k+19|0;v=k+44|0;x=a[w>>0]|0;a[w>>0]=a[v>>0]|0;a[v>>0]=x;x=k+20|0;v=k+43|0;w=a[x>>0]|0;a[x>>0]=a[v>>0]|0;a[v>>0]=w;w=k+21|0;v=k+42|0;x=a[w>>0]|0;a[w>>0]=a[v>>0]|0;a[v>>0]=x;x=k+22|0;v=k+41|0;w=a[x>>0]|0;a[x>>0]=a[v>>0]|0;a[v>>0]=w;w=k+23|0;v=k+40|0;x=a[w>>0]|0;a[w>>0]=a[v>>0]|0;a[v>>0]=x;x=k+24|0;v=k+39|0;w=a[x>>0]|0;a[x>>0]=a[v>>0]|0;a[v>>0]=w;w=k+25|0;v=k+38|0;x=a[w>>0]|0;a[w>>0]=a[v>>0]|0;a[v>>0]=x;x=k+26|0;v=k+37|0;w=a[x>>0]|0;a[x>>0]=a[v>>0]|0;a[v>>0]=w;w=k+27|0;v=k+36|0;x=a[w>>0]|0;a[w>>0]=a[v>>0]|0;a[v>>0]=x;x=k+28|0;v=k+35|0;w=a[x>>0]|0;a[x>>0]=a[v>>0]|0;a[v>>0]=w;w=k+29|0;v=k+34|0;x=a[w>>0]|0;a[w>>0]=a[v>>0]|0;a[v>>0]=x;x=k+30|0;v=k+33|0;w=a[x>>0]|0;a[x>>0]=a[v>>0]|0;a[v>>0]=w;w=k+31|0;v=a[w>>0]|0;a[w>>0]=a[s>>0]|0;a[s>>0]=v;v=(FD(k,j,d,e)|0)==0;y=v?0:-19968}else y=t}else y=u}else y=r}else y=-20352;z=y;l=i;return z|0}y=b+76|0;if(!(c[b+84>>2]|0)){z=-20352;l=i;return z|0}do if((((Uv(g,1)|0)>=0?(Tv(g,y)|0)<=-1:0)?(Uv(h,1)|0)>=0:0)?(Tv(h,y)|0)<=-1:0){r=Nx(b,f)|0;if(!r){u=b+92|0;t=((c[u>>2]|0)+7|0)>>>3;v=t>>>0<e>>>0?t:e;t=Rv(m,d,v)|0;if(!t){j=v<<3;v=c[u>>2]|0;if(j>>>0>v>>>0?(u=Qv(m,j-v|0)|0,u|0):0){A=u;break}if((Tv(m,y)|0)>-1?(u=Iv(m,m,y)|0,u|0):0){A=u;break}u=_v(n,h,y)|0;if(!u){v=Gv(o,m,n)|0;if(!v){j=Vv(o,o,y)|0;if(!j){k=Gv(p,g,n)|0;if(!k){s=Vv(p,p,y)|0;if(!s){w=Tx(b,q,o,b+40|0,p,f)|0;if(!w)if(!(Ix(q)|0)){x=Vv(q,q,y)|0;if(!x){B=(Tv(q,g)|0)==0;A=B?0:-19968}else A=x}else A=-19968;else A=w}else A=s}else A=k}else A=j}else A=v}else A=u}else A=t}else A=r}else A=-19968;while(0);Dx(q);sv(m);sv(n);sv(o);sv(p);z=A;l=i;return z|0}function _C(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,o=0,p=0;i=l;l=l+176|0;h=i+28|0;j=i+24|0;k=i+12|0;m=i;rv(k);rv(m);n=YC(a,k,m,a+124|0,d,e,b)|0;if(n|0){o=n;sv(k);sv(m);l=i;return o|0}c[j>>2]=h+141;n=hv(j,h,m)|0;if((n|0)>=0){b=hv(j,h,k)|0;if((b|0)>=0){e=b+n|0;d=ev(j,h,e)|0;if((d|0)>=0){a=fv(j,h,48)|0;h=d+e+a|0;if((a|0)<0)p=a;else{CT(f|0,c[j>>2]|0,h|0)|0;c[g>>2]=h;p=0}}else p=d}else p=b}else p=n;o=p;sv(k);sv(m);l=i;return o|0}function $C(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0;g=l;l=l+32|0;h=g+28|0;i=g+24|0;j=g+12|0;k=g;c[h>>2]=e;m=e+f|0;rv(j);rv(k);f=_u(h,m,i,48)|0;do if(!f)if(((c[h>>2]|0)+(c[i>>2]|0)|0)==(m|0)){e=av(h,m,j)|0;if(!e){n=av(h,m,k)|0;if(!n){o=ZC(a,b,d,a+136|0,j,k)|0;p=(o|0?1:(c[h>>2]|0)==(m|0))?o:-19456;break}else q=n}else q=e;p=q+-20352|0}else p=-20454;else p=f+-20352|0;while(0);sv(j);sv(k);l=g;return p|0}function aD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;c=Hx(a,b)|0;if(!c){d=vv(a+124|0,b+124|0)|0;if(!d){e=Gx(a+136|0,b+136|0)|0;if(!e){f=0;return f|0}else g=e}else g=d}else g=c;Fx(a);f=g;return f|0}function bD(a){a=a|0;Fx(a);return}function cD(a){a=a|0;Cx(a);return}function dD(a){a=a|0;var b=0;b=a;a=b+100|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function eD(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0;f=l;l=l+80|0;g=f+64|0;h=f;i=(Py(c[b>>2]|0)|0)&255;j=(d|0)!=0&(e|0)!=0;a[g>>0]=0;k=j?2:1;m=b+12|0;if(j){do{Ny(b)|0;Ly(b,m,i)|0;Ly(b,g,1)|0;Ly(b,d,e)|0;My(b,h)|0;Ky(b,h,i)|0;Ly(b,m,i)|0;My(b,m)|0;j=(a[g>>0]|0)+1<<24>>24;a[g>>0]=j}while(k>>>0>(j&255)>>>0);l=f;return}else{do{Ny(b)|0;Ly(b,m,i)|0;Ly(b,g,1)|0;My(b,h)|0;Ky(b,h,i)|0;Ly(b,m,i)|0;My(b,m)|0;e=(a[g>>0]|0)+1<<24>>24;a[g>>0]=e}while(k>>>0>(e&255)>>>0);l=f;return}}function fD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=Fy(a,b,1)|0;if(e|0){f=e;return f|0}e=a+12|0;Ky(a,e,(Py(b)|0)&255)|0;ET(e|0,1,(Py(b)|0)&255|0)|0;eD(a,c,d);f=0;return f|0}function gD(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0;g=l;l=l+384|0;h=g;i=(Py(c[a>>2]|0)|0)&255;if(d>>>0>1024){j=-3;l=g;return j|0}if(f>>>0>256){j=-5;l=g;return j|0}k=c[a+92>>2]|0;do if(!k)m=12;else{if((c[a+84>>2]|0)!=1?(c[a+76>>2]|0)<=(c[a+88>>2]|0):0){m=12;break}n=a+80|0;o=c[n>>2]|0;if((o+f|0)>>>0<=384){ET(h|0,0,384)|0;if(!(fd[k&127](c[a+96>>2]|0,h,o)|0)){o=c[n>>2]|0;if((e|0)!=0&(f|0)!=0){CT(h+o|0,e|0,f|0)|0;p=o+f|0}else p=o;eD(a,h,p);c[a+76>>2]=1;q=0;break}else r=-9}else r=-5;j=r;l=g;return j|0}while(0);if((m|0)==12)if((e|0)!=0&(f|0)!=0){eD(a,e,f);q=f}else q=f;if(d|0){f=a+12|0;m=b;b=d;while(1){d=b>>>0>i>>>0?i:b;Ny(a)|0;Ly(a,f,i)|0;My(a,f)|0;CT(m|0,f|0,d|0)|0;b=b-d|0;if(!b)break;else m=m+d|0}}eD(a,e,q);q=a+76|0;c[q>>2]=(c[q>>2]|0)+1;j=0;l=g;return j|0}function hD(a,b,c){a=a|0;b=b|0;c=c|0;return gD(a,b,c,0,0)|0}function iD(b){b=b|0;if(!b)return;Ey(b);a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;a[b+4>>0]=0;a[b+5>>0]=0;a[b+6>>0]=0;a[b+7>>0]=0;a[b+8>>0]=0;a[b+9>>0]=0;a[b+10>>0]=0;a[b+11>>0]=0;a[b+12>>0]=0;a[b+13>>0]=0;a[b+14>>0]=0;a[b+15>>0]=0;a[b+16>>0]=0;a[b+17>>0]=0;a[b+18>>0]=0;a[b+19>>0]=0;a[b+20>>0]=0;a[b+21>>0]=0;a[b+22>>0]=0;a[b+23>>0]=0;a[b+24>>0]=0;a[b+25>>0]=0;a[b+26>>0]=0;a[b+27>>0]=0;a[b+28>>0]=0;a[b+29>>0]=0;a[b+30>>0]=0;a[b+31>>0]=0;a[b+32>>0]=0;a[b+33>>0]=0;a[b+34>>0]=0;a[b+35>>0]=0;a[b+36>>0]=0;a[b+37>>0]=0;a[b+38>>0]=0;a[b+39>>0]=0;a[b+40>>0]=0;a[b+41>>0]=0;a[b+42>>0]=0;a[b+43>>0]=0;a[b+44>>0]=0;a[b+45>>0]=0;a[b+46>>0]=0;a[b+47>>0]=0;a[b+48>>0]=0;a[b+49>>0]=0;a[b+50>>0]=0;a[b+51>>0]=0;a[b+52>>0]=0;a[b+53>>0]=0;a[b+54>>0]=0;a[b+55>>0]=0;a[b+56>>0]=0;a[b+57>>0]=0;a[b+58>>0]=0;a[b+59>>0]=0;a[b+60>>0]=0;a[b+61>>0]=0;a[b+62>>0]=0;a[b+63>>0]=0;a[b+64>>0]=0;a[b+65>>0]=0;a[b+66>>0]=0;a[b+67>>0]=0;a[b+68>>0]=0;a[b+69>>0]=0;a[b+70>>0]=0;a[b+71>>0]=0;a[b+72>>0]=0;a[b+73>>0]=0;a[b+74>>0]=0;a[b+75>>0]=0;a[b+76>>0]=0;a[b+77>>0]=0;a[b+78>>0]=0;a[b+79>>0]=0;a[b+80>>0]=0;a[b+81>>0]=0;a[b+82>>0]=0;a[b+83>>0]=0;a[b+84>>0]=0;a[b+85>>0]=0;a[b+86>>0]=0;a[b+87>>0]=0;a[b+88>>0]=0;a[b+89>>0]=0;a[b+90>>0]=0;a[b+91>>0]=0;a[b+92>>0]=0;a[b+93>>0]=0;a[b+94>>0]=0;a[b+95>>0]=0;a[b+96>>0]=0;a[b+97>>0]=0;a[b+98>>0]=0;a[b+99>>0]=0;return}function jD(a){a=a|0;var b=0;b=a;a=b+88|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function kD(b){b=b|0;if(!b)return;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;a[b+4>>0]=0;a[b+5>>0]=0;a[b+6>>0]=0;a[b+7>>0]=0;a[b+8>>0]=0;a[b+9>>0]=0;a[b+10>>0]=0;a[b+11>>0]=0;a[b+12>>0]=0;a[b+13>>0]=0;a[b+14>>0]=0;a[b+15>>0]=0;a[b+16>>0]=0;a[b+17>>0]=0;a[b+18>>0]=0;a[b+19>>0]=0;a[b+20>>0]=0;a[b+21>>0]=0;a[b+22>>0]=0;a[b+23>>0]=0;a[b+24>>0]=0;a[b+25>>0]=0;a[b+26>>0]=0;a[b+27>>0]=0;a[b+28>>0]=0;a[b+29>>0]=0;a[b+30>>0]=0;a[b+31>>0]=0;a[b+32>>0]=0;a[b+33>>0]=0;a[b+34>>0]=0;a[b+35>>0]=0;a[b+36>>0]=0;a[b+37>>0]=0;a[b+38>>0]=0;a[b+39>>0]=0;a[b+40>>0]=0;a[b+41>>0]=0;a[b+42>>0]=0;a[b+43>>0]=0;a[b+44>>0]=0;a[b+45>>0]=0;a[b+46>>0]=0;a[b+47>>0]=0;a[b+48>>0]=0;a[b+49>>0]=0;a[b+50>>0]=0;a[b+51>>0]=0;a[b+52>>0]=0;a[b+53>>0]=0;a[b+54>>0]=0;a[b+55>>0]=0;a[b+56>>0]=0;a[b+57>>0]=0;a[b+58>>0]=0;a[b+59>>0]=0;a[b+60>>0]=0;a[b+61>>0]=0;a[b+62>>0]=0;a[b+63>>0]=0;a[b+64>>0]=0;a[b+65>>0]=0;a[b+66>>0]=0;a[b+67>>0]=0;a[b+68>>0]=0;a[b+69>>0]=0;a[b+70>>0]=0;a[b+71>>0]=0;a[b+72>>0]=0;a[b+73>>0]=0;a[b+74>>0]=0;a[b+75>>0]=0;a[b+76>>0]=0;a[b+77>>0]=0;a[b+78>>0]=0;a[b+79>>0]=0;a[b+80>>0]=0;a[b+81>>0]=0;a[b+82>>0]=0;a[b+83>>0]=0;a[b+84>>0]=0;a[b+85>>0]=0;a[b+86>>0]=0;a[b+87>>0]=0;return}function lD(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;b=d+88|0;do{c[d>>2]=c[a>>2];d=d+4|0;a=a+4|0}while((d|0)<(b|0));return}function mD(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=1732584193;c[a+12>>2]=-271733879;c[a+16>>2]=-1732584194;c[a+20>>2]=271733878;return}function nD(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;e=(d[b+1>>0]|0)<<8|(d[b>>0]|0)|(d[b+2>>0]|0)<<16|(d[b+3>>0]|0)<<24;f=(d[b+5>>0]|0)<<8|(d[b+4>>0]|0)|(d[b+6>>0]|0)<<16|(d[b+7>>0]|0)<<24;g=(d[b+9>>0]|0)<<8|(d[b+8>>0]|0)|(d[b+10>>0]|0)<<16|(d[b+11>>0]|0)<<24;h=(d[b+13>>0]|0)<<8|(d[b+12>>0]|0)|(d[b+14>>0]|0)<<16|(d[b+15>>0]|0)<<24;i=(d[b+17>>0]|0)<<8|(d[b+16>>0]|0)|(d[b+18>>0]|0)<<16|(d[b+19>>0]|0)<<24;j=(d[b+21>>0]|0)<<8|(d[b+20>>0]|0)|(d[b+22>>0]|0)<<16|(d[b+23>>0]|0)<<24;k=(d[b+25>>0]|0)<<8|(d[b+24>>0]|0)|(d[b+26>>0]|0)<<16|(d[b+27>>0]|0)<<24;l=(d[b+29>>0]|0)<<8|(d[b+28>>0]|0)|(d[b+30>>0]|0)<<16|(d[b+31>>0]|0)<<24;m=(d[b+33>>0]|0)<<8|(d[b+32>>0]|0)|(d[b+34>>0]|0)<<16|(d[b+35>>0]|0)<<24;n=(d[b+37>>0]|0)<<8|(d[b+36>>0]|0)|(d[b+38>>0]|0)<<16|(d[b+39>>0]|0)<<24;o=(d[b+41>>0]|0)<<8|(d[b+40>>0]|0)|(d[b+42>>0]|0)<<16|(d[b+43>>0]|0)<<24;p=(d[b+45>>0]|0)<<8|(d[b+44>>0]|0)|(d[b+46>>0]|0)<<16|(d[b+47>>0]|0)<<24;q=(d[b+49>>0]|0)<<8|(d[b+48>>0]|0)|(d[b+50>>0]|0)<<16|(d[b+51>>0]|0)<<24;r=(d[b+53>>0]|0)<<8|(d[b+52>>0]|0)|(d[b+54>>0]|0)<<16|(d[b+55>>0]|0)<<24;s=(d[b+57>>0]|0)<<8|(d[b+56>>0]|0)|(d[b+58>>0]|0)<<16|(d[b+59>>0]|0)<<24;t=(d[b+61>>0]|0)<<8|(d[b+60>>0]|0)|(d[b+62>>0]|0)<<16|(d[b+63>>0]|0)<<24;b=a+8|0;u=c[b>>2]|0;v=a+12|0;w=c[v>>2]|0;x=a+16|0;y=c[x>>2]|0;z=a+20|0;a=c[z>>2]|0;A=e+-680876936+u+((a^y)&w^a)|0;B=(A<<7|A>>>25)+w|0;A=f+-389564586+a+(B&(y^w)^y)|0;a=(A<<12|A>>>20)+B|0;A=g+606105819+y+(a&(B^w)^w)|0;y=(A<<17|A>>>15)+a|0;A=h+-1044525330+w+(y&(a^B)^B)|0;w=(A<<22|A>>>10)+y|0;A=i+-176418897+B+(w&(y^a)^a)|0;B=(A<<7|A>>>25)+w|0;A=j+1200080426+a+(B&(w^y)^y)|0;a=(A<<12|A>>>20)+B|0;A=k+-1473231341+y+(a&(B^w)^w)|0;y=(A<<17|A>>>15)+a|0;A=l+-45705983+w+(y&(a^B)^B)|0;w=(A<<22|A>>>10)+y|0;A=m+1770035416+B+(w&(y^a)^a)|0;B=(A<<7|A>>>25)+w|0;A=n+-1958414417+a+(B&(w^y)^y)|0;a=(A<<12|A>>>20)+B|0;A=o+-42063+y+(a&(B^w)^w)|0;y=(A<<17|A>>>15)+a|0;A=p+-1990404162+w+(y&(a^B)^B)|0;w=(A<<22|A>>>10)+y|0;A=q+1804603682+B+(w&(y^a)^a)|0;B=(A<<7|A>>>25)+w|0;A=r+-40341101+a+(B&(w^y)^y)|0;a=(A<<12|A>>>20)+B|0;A=s+-1502002290+y+(a&(B^w)^w)|0;y=(A<<17|A>>>15)+a|0;A=t+1236535329+w+(y&(a^B)^B)|0;w=(A<<22|A>>>10)+y|0;A=f+-165796510+B+((w^y)&a^y)|0;B=(A<<5|A>>>27)+w|0;A=k+-1069501632+a+((B^w)&y^w)|0;a=(A<<9|A>>>23)+B|0;A=p+643717713+y+((a^B)&w^B)|0;y=(A<<14|A>>>18)+a|0;A=e+-373897302+w+((y^a)&B^a)|0;w=(A<<20|A>>>12)+y|0;A=j+-701558691+B+((w^y)&a^y)|0;B=(A<<5|A>>>27)+w|0;A=o+38016083+a+((B^w)&y^w)|0;a=(A<<9|A>>>23)+B|0;A=t+-660478335+y+((a^B)&w^B)|0;y=(A<<14|A>>>18)+a|0;A=i+-405537848+w+((y^a)&B^a)|0;w=(A<<20|A>>>12)+y|0;A=n+568446438+B+((w^y)&a^y)|0;B=(A<<5|A>>>27)+w|0;A=s+-1019803690+a+((B^w)&y^w)|0;a=(A<<9|A>>>23)+B|0;A=h+-187363961+y+((a^B)&w^B)|0;y=(A<<14|A>>>18)+a|0;A=m+1163531501+w+((y^a)&B^a)|0;w=(A<<20|A>>>12)+y|0;A=r+-1444681467+B+((w^y)&a^y)|0;B=(A<<5|A>>>27)+w|0;A=g+-51403784+a+((B^w)&y^w)|0;a=(A<<9|A>>>23)+B|0;A=l+1735328473+y+((a^B)&w^B)|0;y=(A<<14|A>>>18)+a|0;A=y^a;C=q+-1926607734+w+(A&B^a)|0;w=(C<<20|C>>>12)+y|0;C=j+-378558+B+(A^w)|0;A=(C<<4|C>>>28)+w|0;C=m+-2022574463+a+(w^y^A)|0;a=(C<<11|C>>>21)+A|0;C=p+1839030562+y+(A^w^a)|0;y=(C<<16|C>>>16)+a|0;C=s+-35309556+w+(a^A^y)|0;w=(C<<23|C>>>9)+y|0;C=f+-1530992060+A+(y^a^w)|0;A=(C<<4|C>>>28)+w|0;C=i+1272893353+a+(w^y^A)|0;a=(C<<11|C>>>21)+A|0;C=l+-155497632+y+(A^w^a)|0;y=(C<<16|C>>>16)+a|0;C=o+-1094730640+w+(a^A^y)|0;w=(C<<23|C>>>9)+y|0;C=r+681279174+A+(y^a^w)|0;A=(C<<4|C>>>28)+w|0;C=e+-358537222+a+(w^y^A)|0;a=(C<<11|C>>>21)+A|0;C=h+-722521979+y+(A^w^a)|0;y=(C<<16|C>>>16)+a|0;C=k+76029189+w+(a^A^y)|0;w=(C<<23|C>>>9)+y|0;C=n+-640364487+A+(y^a^w)|0;A=(C<<4|C>>>28)+w|0;C=q+-421815835+a+(w^y^A)|0;a=(C<<11|C>>>21)+A|0;C=t+530742520+y+(A^w^a)|0;y=(C<<16|C>>>16)+a|0;C=g+-995338651+w+(a^A^y)|0;w=(C<<23|C>>>9)+y|0;C=e+-198630844+A+((w|~a)^y)|0;A=(C<<6|C>>>26)+w|0;C=l+1126891415+a+((A|~y)^w)|0;a=(C<<10|C>>>22)+A|0;C=s+-1416354905+y+((a|~w)^A)|0;y=(C<<15|C>>>17)+a|0;C=j+-57434055+w+((y|~A)^a)|0;w=(C<<21|C>>>11)+y|0;C=q+1700485571+A+((w|~a)^y)|0;A=(C<<6|C>>>26)+w|0;C=h+-1894986606+a+((A|~y)^w)|0;a=(C<<10|C>>>22)+A|0;C=o+-1051523+y+((a|~w)^A)|0;y=(C<<15|C>>>17)+a|0;C=f+-2054922799+w+((y|~A)^a)|0;w=(C<<21|C>>>11)+y|0;C=m+1873313359+A+((w|~a)^y)|0;A=(C<<6|C>>>26)+w|0;C=t+-30611744+a+((A|~y)^w)|0;a=(C<<10|C>>>22)+A|0;C=k+-1560198380+y+((a|~w)^A)|0;y=(C<<15|C>>>17)+a|0;C=r+1309151649+w+((y|~A)^a)|0;w=(C<<21|C>>>11)+y|0;C=i+-145523070+A+((w|~a)^y)|0;A=(C<<6|C>>>26)+w|0;C=p+-1120210379+a+((A|~y)^w)|0;a=(C<<10|C>>>22)+A|0;C=g+718787259+y+((a|~w)^A)|0;y=(C<<15|C>>>17)+a|0;C=n+-343485551+w+((y|~A)^a)|0;c[b>>2]=A+u;c[v>>2]=y+(c[v>>2]|0)+(C<<21|C>>>11);c[x>>2]=y+(c[x>>2]|0);c[z>>2]=a+(c[z>>2]|0);return}function oD(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;if(!d)return;e=c[a>>2]|0;f=e&63;g=64-f|0;h=e+d|0;c[a>>2]=h;if(h>>>0<d>>>0){h=a+4|0;c[h>>2]=(c[h>>2]|0)+1}if((f|0)==0|g>>>0>d>>>0){i=f;j=b;k=d}else{CT(a+24+f|0,b|0,g|0)|0;nD(a,a+24|0);i=0;j=b+g|0;k=d-g|0}if(k>>>0>63){g=k+-64|0;d=g&-64;b=j+(d+64)|0;f=j;h=k;while(1){nD(a,f);h=h+-64|0;if(h>>>0<=63)break;else f=f+64|0}l=b;m=g-d|0}else{l=j;m=k}if(!m)return;CT(a+24+i|0,l|0,m|0)|0;return}function pD(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=l;l=l+16|0;f=e;g=c[b>>2]|0;h=b+4|0;i=c[h>>2]|0;a[f>>0]=g<<3;a[f+1>>0]=g>>>5;a[f+2>>0]=g>>>13;a[f+3>>0]=g>>>21;a[f+4>>0]=i<<3|g>>>29;a[f+5>>0]=i>>>5;a[f+6>>0]=i>>>13;a[f+7>>0]=i>>>21;j=g&63;k=(j>>>0<56?56:120)-j|0;if(k|0){m=64-j|0;n=k+g|0;c[b>>2]=n;if(n>>>0<k>>>0)c[h>>2]=i+1;if((j|0)==0|k>>>0<m>>>0){o=j;p=85117;q=k}else{CT(b+24+j|0,85117,m|0)|0;nD(b,b+24|0);o=0;p=85117+m|0;q=k-m|0}if(q>>>0>63){m=q+-64|0;k=m&-64;j=k+64|0;i=p;n=q;while(1){nD(b,i);n=n+-64|0;if(n>>>0<=63)break;else i=i+64|0}r=p+j|0;s=m-k|0}else{r=p;s=q}if(s|0)CT(b+24+o|0,r|0,s|0)|0}s=c[b>>2]|0;r=s&63;o=64-r|0;c[b>>2]=s+8;if(s>>>0>4294967287)c[h>>2]=(c[h>>2]|0)+1;h=8-o|0;s=f+o|0;if(!((r|0)==0|o>>>0>8)){q=b+24|0;CT(b+24+r|0,f|0,o|0)|0;nD(b,q);if(h>>>0>63){o=h+-64|0;p=o&-64;k=p+64|0;m=s;j=h;while(1){nD(b,m);j=j+-64|0;if(j>>>0<=63)break;else m=m+64|0}t=s+k|0;u=o-p|0}else{t=s;u=h}if(u|0){v=t;w=u;x=q;y=21}}else{v=f;w=8;x=b+24+r|0;y=21}if((y|0)==21)CT(x|0,v|0,w|0)|0;w=b+8|0;a[d>>0]=c[w>>2];a[d+1>>0]=(c[w>>2]|0)>>>8;a[d+2>>0]=(c[w>>2]|0)>>>16;a[d+3>>0]=(c[w>>2]|0)>>>24;w=b+12|0;a[d+4>>0]=c[w>>2];a[d+5>>0]=(c[w>>2]|0)>>>8;a[d+6>>0]=(c[w>>2]|0)>>>16;a[d+7>>0]=(c[w>>2]|0)>>>24;w=b+16|0;a[d+8>>0]=c[w>>2];a[d+9>>0]=(c[w>>2]|0)>>>8;a[d+10>>0]=(c[w>>2]|0)>>>16;a[d+11>>0]=(c[w>>2]|0)>>>24;w=b+20|0;a[d+12>>0]=c[w>>2];a[d+13>>0]=(c[w>>2]|0)>>>8;a[d+14>>0]=(c[w>>2]|0)>>>16;a[d+15>>0]=(c[w>>2]|0)>>>24;l=e;return}function qD(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+96|0;f=e;g=f+8|0;h=f;i=h+88|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(i|0));c[g>>2]=1732584193;c[f+12>>2]=-271733879;c[f+16>>2]=-1732584194;c[f+20>>2]=271733878;if(!b){pD(f,d);kD(f);l=e;return}c[f>>2]=b;if(b>>>0>63){g=b+-64|0;h=g&-64;i=h+64|0;j=a;k=b;while(1){nD(f,j);k=k+-64|0;if(k>>>0<=63)break;else j=j+64|0}j=g-h|0;if(!j){pD(f,d);kD(f);l=e;return}else{m=a+i|0;n=j}}else{m=a;n=b}CT(f+24|0,m|0,n|0)|0;pD(f,d);kD(f);l=e;return}function rD(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function sD(b,e,f,g,h,i,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;k=l;l=l+752|0;m=k+360|0;n=k+48|0;o=k+80|0;p=k+16|0;q=k+72|0;r=k;if(!b){s=-5248;l=k;return s|0}t=NG(g,e)|0;if(!t){s=-4224;l=k;return s|0}u=NG(g,f)|0;if(!((u|0)!=0&u>>>0>t>>>0)){s=-4224;l=k;return s|0}v=t+($F(e)|0)|0;e=(a[v>>0]|0)==32?v+1|0:v;v=(a[e>>0]|0)==13?e+1|0:e;if((a[v>>0]|0)!=10){s=-4224;l=k;return s|0}e=v+1|0;t=u+($F(f)|0)|0;f=(a[t>>0]|0)==32?t+1|0:t;t=(a[f>>0]|0)==13?f+1|0:f;c[j>>2]=((a[t>>0]|0)==10?t+1|0:t)-g;g=u;do if((g-e|0)>21?(aF(e,85181,22)|0)==0:0){t=v+23|0;j=(a[t>>0]|0)==13?v+24|0:t;if((a[j>>0]|0)!=10){s=-4352;l=k;return s|0}t=j+1|0;f=g-t|0;do if((f|0)>22)if(!(aF(t,85204,23)|0)){w=j+24|0;if((g-w|0)<16){s=-4608;l=k;return s|0}x=r;c[x>>2]=0;c[x+4>>2]=0;x=0;y=w;while(1){w=a[y>>0]|0;z=w&255;if((w+-48&255)>=10)if((w+-65&255)>=6)if((w+-97&255)<6)A=-87;else{s=-4608;B=62;break}else A=-55;else A=-48;w=A+z|0;z=r+(x>>>1)|0;a[z>>0]=(x&1|0?w:w<<4)|d[z>>0];x=x+1|0;if(x>>>0>=16){B=16;break}else y=y+1|0}if((B|0)==16){C=37;D=j+40|0;break}else if((B|0)==62){l=k;return s|0}}else B=18;else if((f|0)>17)B=18;else{C=0;D=t}while(0);do if((B|0)==18)if(!(aF(t,85228,18)|0)){f=j+19|0;if((g-f|0)<16){s=-4608;l=k;return s|0}y=r;c[y>>2]=0;c[y+4>>2]=0;y=0;x=f;while(1){f=a[x>>0]|0;z=f&255;if((f+-48&255)>=10)if((f+-65&255)>=6)if((f+-97&255)<6)E=-87;else{s=-4608;B=62;break}else E=-55;else E=-48;f=E+z|0;z=r+(y>>>1)|0;a[z>>0]=(y&1|0?f:f<<4)|d[z>>0];y=y+1|0;if(y>>>0>=16){B=25;break}else x=x+1|0}if((B|0)==25){C=33;D=j+35|0;break}else if((B|0)==62){l=k;return s|0}}else{C=0;D=t}while(0);t=g-D|0;do if((t|0)>13?(aF(D,85247,14)|0)==0:0){if((t|0)<22){s=-4736;l=k;return s|0}if(aF(D,85262,22)|0)if(aF(D,85285,22)|0)if(!(aF(D,85308,22)|0))F=7;else{s=-4736;l=k;return s|0}else F=6;else F=5;j=D+22|0;if((g-j|0)<32){s=-4608;l=k;return s|0};c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;c[r+12>>2]=0;x=0;y=j;while(1){j=a[y>>0]|0;z=j&255;if((j+-48&255)>=10)if((j+-65&255)>=6)if((j+-97&255)<6)G=-87;else{s=-4608;B=62;break}else G=-55;else G=-48;j=G+z|0;z=r+(x>>>1)|0;a[z>>0]=(x&1|0?j:j<<4)|d[z>>0];x=x+1|0;if(x>>>0>=32){B=38;break}else y=y+1|0}if((B|0)==38){H=F;I=D+54|0;break}else if((B|0)==62){l=k;return s|0}}else B=39;while(0);if((B|0)==39)if(!C){s=-4736;l=k;return s|0}else{H=C;I=D}t=(a[I>>0]|0)==13?I+1|0:I;if((a[t>>0]|0)==10){J=1;K=H;L=t+1|0;break}else{s=-4352;l=k;return s|0}}else{J=0;K=0;L=e}while(0);if(L>>>0>=u>>>0){s=-4352;l=k;return s|0}u=g-L|0;if((qv(0,0,q,L,u)|0)==-44){s=-4396;l=k;return s|0}g=c[q>>2]|0;e=DE(1,g)|0;if(!e){s=-4480;l=k;return s|0}H=qv(e,g,q,L,u)|0;if(H|0){CE(e);s=H+-4352|0;l=k;return s|0}do if(!J)M=c[q>>2]|0;else{if(!h){CE(e);s=-4864;l=k;return s|0}switch(K|0){case 37:{H=c[q>>2]|0;jx(m);tD(n,24,r,h,i);sx(m,n)|0;wx(m,0,H,r,e,e)|0;kx(m);a[n>>0]=0;a[n+1>>0]=0;a[n+2>>0]=0;a[n+3>>0]=0;a[n+4>>0]=0;a[n+5>>0]=0;a[n+6>>0]=0;a[n+7>>0]=0;a[n+8>>0]=0;a[n+9>>0]=0;a[n+10>>0]=0;a[n+11>>0]=0;a[n+12>>0]=0;a[n+13>>0]=0;a[n+14>>0]=0;a[n+15>>0]=0;a[n+16>>0]=0;a[n+17>>0]=0;a[n+18>>0]=0;a[n+19>>0]=0;a[n+20>>0]=0;a[n+21>>0]=0;a[n+22>>0]=0;a[n+23>>0]=0;break}case 33:{H=c[q>>2]|0;hx(o);jD(m);mD(m);oD(m,h,i);oD(m,r,8);pD(m,n);u=n;L=c[u+4>>2]|0;g=p;c[g>>2]=c[u>>2];c[g+4>>2]=L;kD(m);a[n>>0]=0;a[n+1>>0]=0;a[n+2>>0]=0;a[n+3>>0]=0;a[n+4>>0]=0;a[n+5>>0]=0;a[n+6>>0]=0;a[n+7>>0]=0;a[n+8>>0]=0;a[n+9>>0]=0;a[n+10>>0]=0;a[n+11>>0]=0;a[n+12>>0]=0;a[n+13>>0]=0;a[n+14>>0]=0;a[n+15>>0]=0;nx(o,p)|0;ux(o,0,H,r,e,e)|0;ix(o);a[p>>0]=0;a[p+1>>0]=0;a[p+2>>0]=0;a[p+3>>0]=0;a[p+4>>0]=0;a[p+5>>0]=0;a[p+6>>0]=0;a[p+7>>0]=0;break}case 5:{H=c[q>>2]|0;MC(o);jD(m);mD(m);oD(m,h,i);oD(m,r,8);pD(m,n);L=p;g=n;u=L+16|0;do{a[L>>0]=a[g>>0]|0;L=L+1|0;g=g+1|0}while((L|0)<(u|0));kD(m);a[n>>0]=0;a[n+1>>0]=0;a[n+2>>0]=0;a[n+3>>0]=0;a[n+4>>0]=0;a[n+5>>0]=0;a[n+6>>0]=0;a[n+7>>0]=0;a[n+8>>0]=0;a[n+9>>0]=0;a[n+10>>0]=0;a[n+11>>0]=0;a[n+12>>0]=0;a[n+13>>0]=0;a[n+14>>0]=0;a[n+15>>0]=0;PC(o,p,128)|0;TC(o,0,H,r,e,e)|0;NC(o);a[p>>0]=0;a[p+1>>0]=0;a[p+2>>0]=0;a[p+3>>0]=0;a[p+4>>0]=0;a[p+5>>0]=0;a[p+6>>0]=0;a[p+7>>0]=0;a[p+8>>0]=0;a[p+9>>0]=0;a[p+10>>0]=0;a[p+11>>0]=0;a[p+12>>0]=0;a[p+13>>0]=0;a[p+14>>0]=0;a[p+15>>0]=0;break}case 6:{g=c[q>>2]|0;MC(m);tD(p,24,r,h,i);PC(m,p,192)|0;TC(m,0,g,r,e,e)|0;NC(m);a[p>>0]=0;a[p+1>>0]=0;a[p+2>>0]=0;a[p+3>>0]=0;a[p+4>>0]=0;a[p+5>>0]=0;a[p+6>>0]=0;a[p+7>>0]=0;a[p+8>>0]=0;a[p+9>>0]=0;a[p+10>>0]=0;a[p+11>>0]=0;a[p+12>>0]=0;a[p+13>>0]=0;a[p+14>>0]=0;a[p+15>>0]=0;a[p+16>>0]=0;a[p+17>>0]=0;a[p+18>>0]=0;a[p+19>>0]=0;a[p+20>>0]=0;a[p+21>>0]=0;a[p+22>>0]=0;a[p+23>>0]=0;break}case 7:{g=c[q>>2]|0;MC(m);tD(p,32,r,h,i);PC(m,p,256)|0;TC(m,0,g,r,e,e)|0;NC(m);a[p>>0]=0;a[p+1>>0]=0;a[p+2>>0]=0;a[p+3>>0]=0;a[p+4>>0]=0;a[p+5>>0]=0;a[p+6>>0]=0;a[p+7>>0]=0;a[p+8>>0]=0;a[p+9>>0]=0;a[p+10>>0]=0;a[p+11>>0]=0;a[p+12>>0]=0;a[p+13>>0]=0;a[p+14>>0]=0;a[p+15>>0]=0;a[p+16>>0]=0;a[p+17>>0]=0;a[p+18>>0]=0;a[p+19>>0]=0;a[p+20>>0]=0;a[p+21>>0]=0;a[p+22>>0]=0;a[p+23>>0]=0;a[p+24>>0]=0;a[p+25>>0]=0;a[p+26>>0]=0;a[p+27>>0]=0;a[p+28>>0]=0;a[p+29>>0]=0;a[p+30>>0]=0;a[p+31>>0]=0;break}default:{}}g=c[q>>2]|0;if((g>>>0>=3?(a[e>>0]|0)==48:0)?(d[e+1>>0]|0)<=131:0){M=g;break}CE(e);s=-4992;l=k;return s|0}while(0);c[b>>2]=e;c[b+4>>2]=M;s=0;l=k;return s|0}function tD(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0;g=l;l=l+112|0;h=g;i=g+88|0;jD(h);mD(h);oD(h,e,f);oD(h,d,8);pD(h,i);if(c>>>0<17){CT(b|0,i|0,c|0)|0;kD(h)}else{j=b;k=i;m=j+16|0;do{a[j>>0]=a[k>>0]|0;j=j+1|0;k=k+1|0}while((j|0)<(m|0));mD(h);oD(h,i,16);oD(h,e,f);oD(h,d,8);pD(h,i);CT(b+16|0,i|0,(c>>>0<32?c+-16|0:16)|0)|0;kD(h)}a[i>>0]=0;a[i+1>>0]=0;a[i+2>>0]=0;a[i+3>>0]=0;a[i+4>>0]=0;a[i+5>>0]=0;a[i+6>>0]=0;a[i+7>>0]=0;a[i+8>>0]=0;a[i+9>>0]=0;a[i+10>>0]=0;a[i+11>>0]=0;a[i+12>>0]=0;a[i+13>>0]=0;a[i+14>>0]=0;a[i+15>>0]=0;l=g;return}function uD(b){b=b|0;var d=0;CE(c[b>>2]|0);CE(c[b+8>>2]|0);a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;d=b+4|0;a[b+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;b=d+4|0;a[d+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;return}function vD(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0;j=l;l=l+16|0;k=j;pv(0,0,k,e,f)|0;m=$F(b)|0;n=$F(d)|0;o=c[k>>2]|0;p=m+1+n+o+(o>>>6)|0;if(p>>>0>h>>>0){c[i>>2]=p;q=-42;l=j;return q|0}p=DE(1,o)|0;if(!p){q=-4480;l=j;return q|0}h=pv(p,o,k,e,f)|0;if(h|0){CE(p);q=h;l=j;return q|0}CT(g|0,b|0,$F(b)|0)|0;h=g+($F(b)|0)|0;b=c[k>>2]|0;if(!b)r=h;else{f=p;e=h;h=b;while(1){b=h>>>0<64?h:64;CT(e|0,f|0,b|0)|0;c[k>>2]=(c[k>>2]|0)-b;o=e+b|0;n=o+1|0;a[o>>0]=10;h=c[k>>2]|0;if(!h){r=n;break}else{f=f+b|0;e=n}}}CT(r|0,d|0,$F(d)|0)|0;e=r+($F(d)|0)|0;a[e>>0]=0;c[i>>2]=e+1-g;CE(p);q=0;l=j;return q|0}function wD(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;h=l;l=l+80|0;i=h+12|0;j=h+16|0;k=h;c[i>>2]=0;m=j;n=m+64|0;do{a[m>>0]=0;m=m+1|0}while((m|0)<(n|0));if(!b){o=-49;l=h;return o|0}Dy(k);m=Fy(k,b,0)|0;a:do if((m|0)>=0?(n=(Py(b)|0)&255,p=(((g+-1|0)>>>0)/(n>>>0)|0)+1|0,(p|0)!=0):0){q=i+1|0;r=i+2|0;s=i+3|0;t=0;u=0;while(1){a[i>>0]=t>>>24;a[q>>0]=t>>>16;a[r>>0]=t>>>8;a[s>>0]=t;v=Gy(k)|0;if((v|0)<0){w=v;break a}v=Hy(k,d,e)|0;if((v|0)<0){w=v;break a}v=Hy(k,i,4)|0;if((v|0)<0){w=v;break a}v=u+n|0;if(v>>>0<=g>>>0){x=Iy(k,f+u|0)|0;if((x|0)<0){w=x;break a}else{y=v;z=x}}else{x=Iy(k,j)|0;if((x|0)<0){w=x;break a}CT(f+u|0,j|0,g-u|0)|0;y=g;z=x}t=t+1|0;if(t>>>0>=p>>>0){w=z;break}else u=y}}else w=m;while(0);Ey(k);o=w;l=h;return o|0}function xD(b,c){b=b|0;c=c|0;var d=0,e=0,f=0;d=l;l=l+224|0;e=d+160|0;f=d;pE(c,32,e,0);a[e>>0]=a[e>>0]&-8;c=e+31|0;a[c>>0]=a[c>>0]&63|64;eE(f,e);dE(b,f);a[e>>0]=0;a[e+1>>0]=0;a[e+2>>0]=0;a[e+3>>0]=0;a[e+4>>0]=0;a[e+5>>0]=0;a[e+6>>0]=0;a[e+7>>0]=0;a[e+8>>0]=0;a[e+9>>0]=0;a[e+10>>0]=0;a[e+11>>0]=0;a[e+12>>0]=0;a[e+13>>0]=0;a[e+14>>0]=0;a[e+15>>0]=0;a[e+16>>0]=0;a[e+17>>0]=0;a[e+18>>0]=0;a[e+19>>0]=0;a[e+20>>0]=0;a[e+21>>0]=0;a[e+22>>0]=0;a[e+23>>0]=0;a[e+24>>0]=0;a[e+25>>0]=0;a[e+26>>0]=0;a[e+27>>0]=0;a[e+28>>0]=0;a[e+29>>0]=0;a[e+30>>0]=0;a[e+31>>0]=0;a[e+32>>0]=0;a[e+33>>0]=0;a[e+34>>0]=0;a[e+35>>0]=0;a[e+36>>0]=0;a[e+37>>0]=0;a[e+38>>0]=0;a[e+39>>0]=0;a[e+40>>0]=0;a[e+41>>0]=0;a[e+42>>0]=0;a[e+43>>0]=0;a[e+44>>0]=0;a[e+45>>0]=0;a[e+46>>0]=0;a[e+47>>0]=0;a[e+48>>0]=0;a[e+49>>0]=0;a[e+50>>0]=0;a[e+51>>0]=0;a[e+52>>0]=0;a[e+53>>0]=0;a[e+54>>0]=0;a[e+55>>0]=0;a[e+56>>0]=0;a[e+57>>0]=0;a[e+58>>0]=0;a[e+59>>0]=0;a[e+60>>0]=0;a[e+61>>0]=0;a[e+62>>0]=0;a[e+63>>0]=0;l=d;return 0}function yD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=l;l=l+128|0;d=c+80|0;e=c+40|0;f=c;LD(d,b);HD(f);ID(e,d,f);RD(f,f,d);MD(f,f);OD(d,e,f);SD(a,d);l=c;return 0}function zD(b,c){b=b|0;c=c|0;var d=0,e=0,f=0;d=l;l=l+64|0;e=d;pE(c,32,e,0);c=b;b=e;f=c+32|0;do{a[c>>0]=a[b>>0]|0;c=c+1|0;b=b+1|0}while((c|0)<(f|0));a[e>>0]=0;a[e+1>>0]=0;a[e+2>>0]=0;a[e+3>>0]=0;a[e+4>>0]=0;a[e+5>>0]=0;a[e+6>>0]=0;a[e+7>>0]=0;a[e+8>>0]=0;a[e+9>>0]=0;a[e+10>>0]=0;a[e+11>>0]=0;a[e+12>>0]=0;a[e+13>>0]=0;a[e+14>>0]=0;a[e+15>>0]=0;a[e+16>>0]=0;a[e+17>>0]=0;a[e+18>>0]=0;a[e+19>>0]=0;a[e+20>>0]=0;a[e+21>>0]=0;a[e+22>>0]=0;a[e+23>>0]=0;a[e+24>>0]=0;a[e+25>>0]=0;a[e+26>>0]=0;a[e+27>>0]=0;a[e+28>>0]=0;a[e+29>>0]=0;a[e+30>>0]=0;a[e+31>>0]=0;a[e+32>>0]=0;a[e+33>>0]=0;a[e+34>>0]=0;a[e+35>>0]=0;a[e+36>>0]=0;a[e+37>>0]=0;a[e+38>>0]=0;a[e+39>>0]=0;a[e+40>>0]=0;a[e+41>>0]=0;a[e+42>>0]=0;a[e+43>>0]=0;a[e+44>>0]=0;a[e+45>>0]=0;a[e+46>>0]=0;a[e+47>>0]=0;a[e+48>>0]=0;a[e+49>>0]=0;a[e+50>>0]=0;a[e+51>>0]=0;a[e+52>>0]=0;a[e+53>>0]=0;a[e+54>>0]=0;a[e+55>>0]=0;a[e+56>>0]=0;a[e+57>>0]=0;a[e+58>>0]=0;a[e+59>>0]=0;a[e+60>>0]=0;a[e+61>>0]=0;a[e+62>>0]=0;a[e+63>>0]=0;l=d;return 0}function AD(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;f=l;l=l+768|0;g=f;h=f+696|0;i=f+632|0;j=f+568|0;k=f+536|0;m=f+376|0;n=f+216|0;lE(g,0);nE(g,c,32);oE(g,j);a[j>>0]=a[j>>0]&-8;c=j+31|0;a[c>>0]=a[c>>0]&63|64;eE(m,j);dE(k,m);lE(g,0);nE(g,j+32|0,32);nE(g,d,e);oE(g,i);jE(i);eE(n,i);dE(b,n);n=b+32|0;m=n;c=k;k=m+32|0;do{a[m>>0]=a[c>>0]|0;m=m+1|0;c=c+1|0}while((m|0)<(k|0));lE(g,0);nE(g,b,64);nE(g,d,e);oE(g,h);jE(h);iE(n,h,j,i);a[i>>0]=0;a[i+1>>0]=0;a[i+2>>0]=0;a[i+3>>0]=0;a[i+4>>0]=0;a[i+5>>0]=0;a[i+6>>0]=0;a[i+7>>0]=0;a[i+8>>0]=0;a[i+9>>0]=0;a[i+10>>0]=0;a[i+11>>0]=0;a[i+12>>0]=0;a[i+13>>0]=0;a[i+14>>0]=0;a[i+15>>0]=0;a[i+16>>0]=0;a[i+17>>0]=0;a[i+18>>0]=0;a[i+19>>0]=0;a[i+20>>0]=0;a[i+21>>0]=0;a[i+22>>0]=0;a[i+23>>0]=0;a[i+24>>0]=0;a[i+25>>0]=0;a[i+26>>0]=0;a[i+27>>0]=0;a[i+28>>0]=0;a[i+29>>0]=0;a[i+30>>0]=0;a[i+31>>0]=0;a[i+32>>0]=0;a[i+33>>0]=0;a[i+34>>0]=0;a[i+35>>0]=0;a[i+36>>0]=0;a[i+37>>0]=0;a[i+38>>0]=0;a[i+39>>0]=0;a[i+40>>0]=0;a[i+41>>0]=0;a[i+42>>0]=0;a[i+43>>0]=0;a[i+44>>0]=0;a[i+45>>0]=0;a[i+46>>0]=0;a[i+47>>0]=0;a[i+48>>0]=0;a[i+49>>0]=0;a[i+50>>0]=0;a[i+51>>0]=0;a[i+52>>0]=0;a[i+53>>0]=0;a[i+54>>0]=0;a[i+55>>0]=0;a[i+56>>0]=0;a[i+57>>0]=0;a[i+58>>0]=0;a[i+59>>0]=0;a[i+60>>0]=0;a[i+61>>0]=0;a[i+62>>0]=0;a[i+63>>0]=0;a[j>>0]=0;a[j+1>>0]=0;a[j+2>>0]=0;a[j+3>>0]=0;a[j+4>>0]=0;a[j+5>>0]=0;a[j+6>>0]=0;a[j+7>>0]=0;a[j+8>>0]=0;a[j+9>>0]=0;a[j+10>>0]=0;a[j+11>>0]=0;a[j+12>>0]=0;a[j+13>>0]=0;a[j+14>>0]=0;a[j+15>>0]=0;a[j+16>>0]=0;a[j+17>>0]=0;a[j+18>>0]=0;a[j+19>>0]=0;a[j+20>>0]=0;a[j+21>>0]=0;a[j+22>>0]=0;a[j+23>>0]=0;a[j+24>>0]=0;a[j+25>>0]=0;a[j+26>>0]=0;a[j+27>>0]=0;a[j+28>>0]=0;a[j+29>>0]=0;a[j+30>>0]=0;a[j+31>>0]=0;a[j+32>>0]=0;a[j+33>>0]=0;a[j+34>>0]=0;a[j+35>>0]=0;a[j+36>>0]=0;a[j+37>>0]=0;a[j+38>>0]=0;a[j+39>>0]=0;a[j+40>>0]=0;a[j+41>>0]=0;a[j+42>>0]=0;a[j+43>>0]=0;a[j+44>>0]=0;a[j+45>>0]=0;a[j+46>>0]=0;a[j+47>>0]=0;a[j+48>>0]=0;a[j+49>>0]=0;a[j+50>>0]=0;a[j+51>>0]=0;a[j+52>>0]=0;a[j+53>>0]=0;a[j+54>>0]=0;a[j+55>>0]=0;a[j+56>>0]=0;a[j+57>>0]=0;a[j+58>>0]=0;a[j+59>>0]=0;a[j+60>>0]=0;a[j+61>>0]=0;a[j+62>>0]=0;a[j+63>>0]=0;kE(g);l=f;return 0}function BD(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0;g=l;l=l+592|0;h=g;i=g+528|0;j=g+496|0;k=g+336|0;m=g+216|0;if((d[b+63>>0]|0)>31){n=1;l=g;return n|0}if(VD(k,c)|0){n=1;l=g;return n|0}lE(h,0);nE(h,b,32);nE(h,c,32);nE(h,e,f);oE(h,i);jE(i);TD(m,i,k,b+32|0);hE(j,m);n=(a[b+1>>0]^a[j+1>>0]|a[b>>0]^a[j>>0]|a[b+2>>0]^a[j+2>>0]|a[b+3>>0]^a[j+3>>0]|a[b+4>>0]^a[j+4>>0]|a[b+5>>0]^a[j+5>>0]|a[b+6>>0]^a[j+6>>0]|a[b+7>>0]^a[j+7>>0]|a[b+8>>0]^a[j+8>>0]|a[b+9>>0]^a[j+9>>0]|a[b+10>>0]^a[j+10>>0]|a[b+11>>0]^a[j+11>>0]|a[b+12>>0]^a[j+12>>0]|a[b+13>>0]^a[j+13>>0]|a[b+14>>0]^a[j+14>>0]|a[b+15>>0]^a[j+15>>0]|a[b+16>>0]^a[j+16>>0]|a[b+17>>0]^a[j+17>>0]|a[b+18>>0]^a[j+18>>0]|a[b+19>>0]^a[j+19>>0]|a[b+20>>0]^a[j+20>>0]|a[b+21>>0]^a[j+21>>0]|a[b+22>>0]^a[j+22>>0]|a[b+23>>0]^a[j+23>>0]|a[b+24>>0]^a[j+24>>0]|a[b+25>>0]^a[j+25>>0]|a[b+26>>0]^a[j+26>>0]|a[b+27>>0]^a[j+27>>0]|a[b+28>>0]^a[j+28>>0]|a[b+29>>0]^a[j+29>>0]|a[b+30>>0]^a[j+30>>0]|a[b+31>>0]^a[j+31>>0])<<24>>24?2:0;l=g;return n|0}function CD(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=l;l=l+320|0;e=d+240|0;f=d+200|0;g=d+160|0;h=d+280|0;i=d;j=h;k=c;c=j+32|0;do{a[j>>0]=a[k>>0]|0;j=j+1|0;k=k+1|0}while((j|0)<(c|0));a[h>>0]=a[h>>0]&-8;k=h+31|0;a[k>>0]=a[k>>0]&63|64;eE(i,h);dE(b,i);LD(e,b);HD(g);ID(f,e,g);RD(g,g,e);MD(g,g);OD(e,f,g);SD(b,e);a[h>>0]=0;a[h+1>>0]=0;a[h+2>>0]=0;a[h+3>>0]=0;a[h+4>>0]=0;a[h+5>>0]=0;a[h+6>>0]=0;a[h+7>>0]=0;a[h+8>>0]=0;a[h+9>>0]=0;a[h+10>>0]=0;a[h+11>>0]=0;a[h+12>>0]=0;a[h+13>>0]=0;a[h+14>>0]=0;a[h+15>>0]=0;a[h+16>>0]=0;a[h+17>>0]=0;a[h+18>>0]=0;a[h+19>>0]=0;a[h+20>>0]=0;a[h+21>>0]=0;a[h+22>>0]=0;a[h+23>>0]=0;a[h+24>>0]=0;a[h+25>>0]=0;a[h+26>>0]=0;a[h+27>>0]=0;a[h+28>>0]=0;a[h+29>>0]=0;a[h+30>>0]=0;a[h+31>>0]=0;l=d;return 0}function DD(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0;f=l;l=l+320|0;g=f+240|0;h=f+200|0;i=f+160|0;j=f+120|0;k=f+80|0;m=f+40|0;n=f;o=f+280|0;LD(g,c);HD(h);GD(i);JD(j,g);HD(k);c=o;p=e;e=c+32|0;do{a[c>>0]=a[p>>0]|0;c=c+1|0;p=p+1|0}while((c|0)<(e|0));a[o>>0]=a[o>>0]&-8;p=o+31|0;a[p>>0]=a[p>>0]&63|64;p=0;c=254;while(1){e=p;p=(d[o+(c>>>3)>>0]|0)>>>(c&7)&1;q=p^e;KD(h,j,q);KD(i,k,q);RD(m,j,k);RD(n,h,i);ID(h,h,i);ID(i,j,k);OD(k,m,h);OD(i,i,n);QD(m,n);QD(n,h);ID(j,k,i);RD(i,k,i);OD(h,n,m);RD(n,n,m);QD(i,i);PD(k,n);QD(j,j);ID(m,m,k);OD(k,g,i);OD(i,n,m);if((c|0)<=0)break;else c=c+-1|0}KD(h,j,p);KD(i,k,p);MD(i,i);OD(h,h,i);SD(b,h);a[o>>0]=0;a[o+1>>0]=0;a[o+2>>0]=0;a[o+3>>0]=0;a[o+4>>0]=0;a[o+5>>0]=0;a[o+6>>0]=0;a[o+7>>0]=0;a[o+8>>0]=0;a[o+9>>0]=0;a[o+10>>0]=0;a[o+11>>0]=0;a[o+12>>0]=0;a[o+13>>0]=0;a[o+14>>0]=0;a[o+15>>0]=0;a[o+16>>0]=0;a[o+17>>0]=0;a[o+18>>0]=0;a[o+19>>0]=0;a[o+20>>0]=0;a[o+21>>0]=0;a[o+22>>0]=0;a[o+23>>0]=0;a[o+24>>0]=0;a[o+25>>0]=0;a[o+26>>0]=0;a[o+27>>0]=0;a[o+28>>0]=0;a[o+29>>0]=0;a[o+30>>0]=0;a[o+31>>0]=0;o=((ND(h)|0)==0)<<31>>31;l=f;return o|0}function ED(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0;f=l;l=l+960|0;g=f;h=f+888|0;i=f+824|0;j=f+792|0;k=f+536|0;m=f+376|0;n=f+760|0;o=f+696|0;p=f+216|0;pE(c,32,o,0);q=o;r=c;c=q+32|0;do{a[q>>0]=a[r>>0]|0;q=q+1|0;r=r+1|0}while((q|0)<(c|0));eE(p,o);dE(n,p);p=a[n+31>>0]&-128;eE(k,o);dE(j,k);lE(g,0);nE(g,o+32|0,32);nE(g,d,e);oE(g,i);jE(i);eE(m,i);dE(b,m);m=b+32|0;q=m;r=j;c=q+32|0;do{a[q>>0]=a[r>>0]|0;q=q+1|0;r=r+1|0}while((q|0)<(c|0));lE(g,0);nE(g,b,64);nE(g,d,e);oE(g,h);jE(h);iE(m,h,o,i);a[i>>0]=0;a[i+1>>0]=0;a[i+2>>0]=0;a[i+3>>0]=0;a[i+4>>0]=0;a[i+5>>0]=0;a[i+6>>0]=0;a[i+7>>0]=0;a[i+8>>0]=0;a[i+9>>0]=0;a[i+10>>0]=0;a[i+11>>0]=0;a[i+12>>0]=0;a[i+13>>0]=0;a[i+14>>0]=0;a[i+15>>0]=0;a[i+16>>0]=0;a[i+17>>0]=0;a[i+18>>0]=0;a[i+19>>0]=0;a[i+20>>0]=0;a[i+21>>0]=0;a[i+22>>0]=0;a[i+23>>0]=0;a[i+24>>0]=0;a[i+25>>0]=0;a[i+26>>0]=0;a[i+27>>0]=0;a[i+28>>0]=0;a[i+29>>0]=0;a[i+30>>0]=0;a[i+31>>0]=0;a[i+32>>0]=0;a[i+33>>0]=0;a[i+34>>0]=0;a[i+35>>0]=0;a[i+36>>0]=0;a[i+37>>0]=0;a[i+38>>0]=0;a[i+39>>0]=0;a[i+40>>0]=0;a[i+41>>0]=0;a[i+42>>0]=0;a[i+43>>0]=0;a[i+44>>0]=0;a[i+45>>0]=0;a[i+46>>0]=0;a[i+47>>0]=0;a[i+48>>0]=0;a[i+49>>0]=0;a[i+50>>0]=0;a[i+51>>0]=0;a[i+52>>0]=0;a[i+53>>0]=0;a[i+54>>0]=0;a[i+55>>0]=0;a[i+56>>0]=0;a[i+57>>0]=0;a[i+58>>0]=0;a[i+59>>0]=0;a[i+60>>0]=0;a[i+61>>0]=0;a[i+62>>0]=0;a[i+63>>0]=0;kE(g);g=b+63|0;a[g>>0]=a[g>>0]&127|p;a[o>>0]=0;a[o+1>>0]=0;a[o+2>>0]=0;a[o+3>>0]=0;a[o+4>>0]=0;a[o+5>>0]=0;a[o+6>>0]=0;a[o+7>>0]=0;a[o+8>>0]=0;a[o+9>>0]=0;a[o+10>>0]=0;a[o+11>>0]=0;a[o+12>>0]=0;a[o+13>>0]=0;a[o+14>>0]=0;a[o+15>>0]=0;a[o+16>>0]=0;a[o+17>>0]=0;a[o+18>>0]=0;a[o+19>>0]=0;a[o+20>>0]=0;a[o+21>>0]=0;a[o+22>>0]=0;a[o+23>>0]=0;a[o+24>>0]=0;a[o+25>>0]=0;a[o+26>>0]=0;a[o+27>>0]=0;a[o+28>>0]=0;a[o+29>>0]=0;a[o+30>>0]=0;a[o+31>>0]=0;a[o+32>>0]=0;a[o+33>>0]=0;a[o+34>>0]=0;a[o+35>>0]=0;a[o+36>>0]=0;a[o+37>>0]=0;a[o+38>>0]=0;a[o+39>>0]=0;a[o+40>>0]=0;a[o+41>>0]=0;a[o+42>>0]=0;a[o+43>>0]=0;a[o+44>>0]=0;a[o+45>>0]=0;a[o+46>>0]=0;a[o+47>>0]=0;a[o+48>>0]=0;a[o+49>>0]=0;a[o+50>>0]=0;a[o+51>>0]=0;a[o+52>>0]=0;a[o+53>>0]=0;a[o+54>>0]=0;a[o+55>>0]=0;a[o+56>>0]=0;a[o+57>>0]=0;a[o+58>>0]=0;a[o+59>>0]=0;a[o+60>>0]=0;a[o+61>>0]=0;a[o+62>>0]=0;a[o+63>>0]=0;l=f;return 0}function FD(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0;f=l;l=l+336|0;g=f+200|0;h=f+160|0;i=f+120|0;j=f+80|0;k=f+40|0;m=f;n=f+304|0;o=f+240|0;LD(g,c);HD(k);RD(h,g,k);ID(i,g,k);MD(j,i);OD(m,h,j);SD(n,m);m=n+31|0;a[m>>0]=a[m>>0]|a[b+63>>0]&-128;m=o;j=b;b=m+64|0;do{a[m>>0]=a[j>>0]|0;m=m+1|0;j=j+1|0}while((m|0)<(b|0));j=o+63|0;a[j>>0]=a[j>>0]&127;j=BD(o,n,d,e)|0;l=f;return j|0}function GD(a){a=a|0;var b=0;b=a;a=b+40|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function HD(a){a=a|0;var b=0;c[a>>2]=1;b=a+4|0;a=b+36|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function ID(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=(c[d+4>>2]|0)+(c[b+4>>2]|0)|0;f=(c[d+8>>2]|0)+(c[b+8>>2]|0)|0;g=(c[d+12>>2]|0)+(c[b+12>>2]|0)|0;h=(c[d+16>>2]|0)+(c[b+16>>2]|0)|0;i=(c[d+20>>2]|0)+(c[b+20>>2]|0)|0;j=(c[d+24>>2]|0)+(c[b+24>>2]|0)|0;k=(c[d+28>>2]|0)+(c[b+28>>2]|0)|0;l=(c[d+32>>2]|0)+(c[b+32>>2]|0)|0;m=(c[d+36>>2]|0)+(c[b+36>>2]|0)|0;c[a>>2]=(c[d>>2]|0)+(c[b>>2]|0);c[a+4>>2]=e;c[a+8>>2]=f;c[a+12>>2]=g;c[a+16>>2]=h;c[a+20>>2]=i;c[a+24>>2]=j;c[a+28>>2]=k;c[a+32>>2]=l;c[a+36>>2]=m;return}function JD(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=c[b+4>>2]|0;e=c[b+8>>2]|0;f=c[b+12>>2]|0;g=c[b+16>>2]|0;h=c[b+20>>2]|0;i=c[b+24>>2]|0;j=c[b+28>>2]|0;k=c[b+32>>2]|0;l=c[b+36>>2]|0;c[a>>2]=c[b>>2];c[a+4>>2]=d;c[a+8>>2]=e;c[a+12>>2]=f;c[a+16>>2]=g;c[a+20>>2]=h;c[a+24>>2]=i;c[a+28>>2]=j;c[a+32>>2]=k;c[a+36>>2]=l;return}function KD(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;e=c[a>>2]|0;f=a+4|0;g=c[f>>2]|0;h=a+8|0;i=c[h>>2]|0;j=a+12|0;k=c[j>>2]|0;l=a+16|0;m=c[l>>2]|0;n=a+20|0;o=c[n>>2]|0;p=a+24|0;q=c[p>>2]|0;r=a+28|0;s=c[r>>2]|0;t=a+32|0;u=c[t>>2]|0;v=a+36|0;w=c[v>>2]|0;x=c[b>>2]|0;y=b+4|0;z=c[y>>2]|0;A=b+8|0;B=c[A>>2]|0;C=b+12|0;D=c[C>>2]|0;E=b+16|0;F=c[E>>2]|0;G=b+20|0;H=c[G>>2]|0;I=b+24|0;J=c[I>>2]|0;K=b+28|0;L=c[K>>2]|0;M=b+32|0;N=c[M>>2]|0;O=b+36|0;P=c[O>>2]|0;Q=0-d|0;d=(x^e)&Q;R=(z^g)&Q;S=(B^i)&Q;T=(D^k)&Q;U=(F^m)&Q;V=(H^o)&Q;W=(J^q)&Q;X=(L^s)&Q;Y=(N^u)&Q;Z=(P^w)&Q;c[a>>2]=d^e;c[f>>2]=R^g;c[h>>2]=S^i;c[j>>2]=T^k;c[l>>2]=U^m;c[n>>2]=V^o;c[p>>2]=W^q;c[r>>2]=X^s;c[t>>2]=Y^u;c[v>>2]=Z^w;c[b>>2]=d^x;c[y>>2]=R^z;c[A>>2]=S^B;c[C>>2]=T^D;c[E>>2]=U^F;c[G>>2]=V^H;c[I>>2]=W^J;c[K>>2]=X^L;c[M>>2]=Y^N;c[O>>2]=Z^P;return}function LD(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0;f=d[e>>0]|0;g=AT(d[e+1>>0]|0|0,0,8)|0;h=z;i=AT(d[e+2>>0]|0|0,0,16)|0;j=h|z;h=AT(d[e+3>>0]|0|0,0,24)|0;k=j|z;j=a[e+6>>0]|0;l=d[e+4>>0]|0;m=AT(d[e+5>>0]|0|0,0,8)|0;n=z;o=AT(j&255|0,0,16)|0;j=AT(m|l|o|0,n|z|0,6)|0;n=z;o=a[e+9>>0]|0;l=d[e+7>>0]|0;m=AT(d[e+8>>0]|0|0,0,8)|0;p=z;q=AT(o&255|0,0,16)|0;o=AT(m|l|q|0,p|z|0,5)|0;p=z;q=a[e+12>>0]|0;l=d[e+10>>0]|0;m=AT(d[e+11>>0]|0|0,0,8)|0;r=z;s=AT(q&255|0,0,16)|0;q=AT(m|l|s|0,r|z|0,3)|0;r=z;s=a[e+15>>0]|0;l=d[e+13>>0]|0;m=AT(d[e+14>>0]|0|0,0,8)|0;t=z;u=AT(s&255|0,0,16)|0;s=AT(m|l|u|0,t|z|0,2)|0;t=z;u=d[e+16>>0]|0;l=AT(d[e+17>>0]|0|0,0,8)|0;m=z;v=AT(d[e+18>>0]|0|0,0,16)|0;w=m|z;m=AT(d[e+19>>0]|0|0,0,24)|0;x=l|u|v|m;m=w|z;w=a[e+22>>0]|0;v=d[e+20>>0]|0;u=AT(d[e+21>>0]|0|0,0,8)|0;l=z;y=AT(w&255|0,0,16)|0;w=AT(u|v|y|0,l|z|0,7)|0;l=z;y=a[e+25>>0]|0;v=d[e+23>>0]|0;u=AT(d[e+24>>0]|0|0,0,8)|0;A=z;B=AT(y&255|0,0,16)|0;y=AT(u|v|B|0,A|z|0,5)|0;A=z;B=a[e+28>>0]|0;v=d[e+26>>0]|0;u=AT(d[e+27>>0]|0|0,0,8)|0;C=z;D=AT(B&255|0,0,16)|0;B=AT(u|v|D|0,C|z|0,4)|0;C=z;D=a[e+31>>0]|0;v=d[e+29>>0]|0;u=AT(d[e+30>>0]|0|0,0,8)|0;e=z;E=AT(D&255|0,0,16)|0;D=AT(u|v|E|0,e|z|0,2)|0;e=D&33554428;D=sT(e|0,0,16777216,0)|0;E=zT(D|0,z|0,25)|0;v=tT(0,0,E|0,z|0)|0;E=sT(v&19|0,0,g|f|i|h|0,k|0)|0;k=z;h=sT(j|0,n|0,16777216,0)|0;i=zT(h|0,z|0,25)|0;f=sT(o|0,p|0,i|0,z|0)|0;i=z;p=tT(j|0,n|0,h&-33554432|0,0)|0;h=z;n=sT(q|0,r|0,16777216,0)|0;j=zT(n|0,z|0,25)|0;o=sT(s|0,t|0,j|0,z|0)|0;j=z;t=sT(x|0,m|0,16777216,0)|0;s=zT(t|0,z|0,25)|0;g=sT(w|0,l|0,s|0,z|0)|0;s=z;l=sT(y|0,A|0,16777216,0)|0;w=zT(l|0,z|0,25)|0;v=sT(B|0,C|0,w|0,z|0)|0;w=z;C=sT(E|0,k|0,33554432,0)|0;B=yT(C|0,z|0,26)|0;C=z;u=sT(p|0,h|0,B|0,C|0)|0;h=AT(B|0,C|0,26)|0;C=tT(E|0,k|0,h|0,z|0)|0;h=sT(f|0,i|0,33554432,0)|0;k=yT(h|0,z|0,26)|0;h=z;E=sT(k|0,h|0,q|0,r|0)|0;r=tT(E|0,z|0,n&-33554432|0,0)|0;n=AT(k|0,h|0,26)|0;h=tT(f|0,i|0,n|0,z|0)|0;n=sT(o|0,j|0,33554432,0)|0;i=yT(n|0,z|0,26)|0;n=z;f=sT(i|0,n|0,x|0,m|0)|0;m=tT(f|0,z|0,t&-33554432|0,0)|0;t=AT(i|0,n|0,26)|0;n=tT(o|0,j|0,t|0,z|0)|0;t=sT(g|0,s|0,33554432,0)|0;j=yT(t|0,z|0,26)|0;t=z;o=sT(j|0,t|0,y|0,A|0)|0;A=tT(o|0,z|0,l&-33554432|0,0)|0;l=AT(j|0,t|0,26)|0;t=tT(g|0,s|0,l|0,z|0)|0;l=sT(v|0,w|0,33554432,0)|0;s=yT(l|0,z|0,26)|0;l=z;g=sT(e|0,0,s|0,l|0)|0;e=tT(g|0,z|0,D&33554432|0,0)|0;D=AT(s|0,l|0,26)|0;l=tT(v|0,w|0,D|0,z|0)|0;c[b>>2]=C;c[b+4>>2]=u;c[b+8>>2]=h;c[b+12>>2]=r;c[b+16>>2]=n;c[b+20>>2]=m;c[b+24>>2]=t;c[b+28>>2]=A;c[b+32>>2]=l;c[b+36>>2]=e;return}\nfunction Yv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;e=l;l=l+32|0;f=e+12|0;g=e;c[f>>2]=1;h=f+4|0;c[h>>2]=0;i=f+8|0;c[i>>2]=0;c[g>>2]=1;j=g+4|0;c[j>>2]=0;k=g+8|0;c[k>>2]=0;m=vv(f,b)|0;a:do if(!m){b=vv(g,d)|0;if(!b){n=Cv(f)|0;o=Cv(g)|0;p=o>>>0<n>>>0?o:n;n=Qv(f,p)|0;if(!n){o=Qv(g,p)|0;if(!o){c[g>>2]=1;c[f>>2]=1;b:while(1){q=c[i>>2]|0;r=c[h>>2]|0;do{if(!r)break b;r=r+-1|0}while(!(c[q+(r<<2)>>2]|0));if(!(c[f>>2]|0))break;r=Qv(f,Cv(f)|0)|0;if(r|0){s=r;break a}r=Qv(g,Cv(g)|0)|0;if(r|0){s=r;break a}r=c[i>>2]|0;q=c[h>>2]|0;while(1){if(!q){t=0;break}u=q+-1|0;if(!(c[r+(u<<2)>>2]|0))q=u;else{t=q;break}}q=c[k>>2]|0;u=c[j>>2]|0;while(1){if(!u){v=0;break}w=u+-1|0;if(!(c[q+(w<<2)>>2]|0))u=w;else{v=u;break}}c:do if(v|t|0){d:do if(t>>>0<=v>>>0){if(v>>>0>t>>>0){x=0-(c[g>>2]|0)|0;y=29;break}u=c[f>>2]|0;w=c[g>>2]|0;if((u|0)>0&(w|0)<0)break c;if(!((u|0)<0&(w|0)>0)){w=t;do{if(!w)break c;w=w+-1|0;z=c[r+(w<<2)>>2]|0;A=c[q+(w<<2)>>2]|0;if(z>>>0>A>>>0){x=u;y=29;break d}}while(z>>>0>=A>>>0);x=0-u|0;y=29}}else{x=c[f>>2]|0;y=29}while(0);if((y|0)==29?(y=0,(x|0)>-1):0)break;w=Jv(g,g,f)|0;if(w|0){s=w;break a}w=c[j>>2]|0;if(w|0){A=c[k>>2]|0;z=0;B=w;while(1){w=B+-1|0;C=A+(w<<2)|0;D=c[C>>2]|0;c[C>>2]=D>>>1|z;if(!w)continue b;else{z=D<<31;B=w}}}B=DE(1,4)|0;if(!B){s=-16;break a}z=c[k>>2]|0;if(z|0)CE(z);c[j>>2]=1;c[k>>2]=B;c[B>>2]=0;c[g>>2]=1;continue b}while(0);q=Jv(f,f,g)|0;if(q|0){s=q;break a}q=c[h>>2]|0;if(q|0){r=c[i>>2]|0;B=0;z=q;while(1){q=z+-1|0;A=r+(q<<2)|0;w=c[A>>2]|0;c[A>>2]=w>>>1|B;if(!q)continue b;else{B=w<<31;z=q}}}z=DE(1,4)|0;if(!z){s=-16;break a}B=c[i>>2]|0;if(B|0)CE(B);c[h>>2]=1;c[i>>2]=z;c[z>>2]=0;c[f>>2]=1}z=Pv(g,p)|0;if(!z)s=vv(a,g)|0;else s=z}else s=o}else s=n}else s=b}else s=m;while(0);m=c[i>>2]|0;if(m|0){g=c[h>>2]|0;if(g|0){a=g;g=m;while(1){a=a+-1|0;c[g>>2]=0;if(!a)break;else g=g+4|0}}CE(m)}c[f>>2]=1;c[h>>2]=0;c[i>>2]=0;i=c[k>>2]|0;if(!i){l=e;return s|0}k=c[j>>2]|0;if(k|0){j=k;k=i;while(1){j=j+-1|0;c[k>>2]=0;if(!j)break;else k=k+4|0}}CE(i);l=e;return s|0}function Zv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;e=l;l=l+1024|0;f=e;if(b>>>0<=1024){g=fd[c&127](d,f,b)|0;if(!g)h=Rv(a,f,b)|0;else h=g}else h=-4;l=e;return h|0}function _v(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0;e=l;l=l+112|0;f=e+96|0;g=e+84|0;h=e+72|0;i=e+60|0;j=e+48|0;k=e+36|0;m=e+24|0;n=e+12|0;o=e;p=d+4|0;q=d+8|0;r=c[p>>2]|0;do{if(!r){s=-4;t=189;break}r=r+-1|0}while(!(c[(c[q>>2]|0)+(r<<2)>>2]|0));if((t|0)==189){l=e;return s|0}if((c[d>>2]|0)<1){s=-4;l=e;return s|0}c[g>>2]=1;r=g+4|0;c[r>>2]=0;u=g+8|0;c[u>>2]=0;c[h>>2]=1;v=h+4|0;c[v>>2]=0;w=h+8|0;c[w>>2]=0;c[i>>2]=1;x=i+4|0;c[x>>2]=0;y=i+8|0;c[y>>2]=0;c[j>>2]=1;z=j+4|0;c[z>>2]=0;A=j+8|0;c[A>>2]=0;c[f>>2]=1;B=f+4|0;c[B>>2]=0;C=f+8|0;c[C>>2]=0;c[k>>2]=1;D=k+4|0;c[D>>2]=0;E=k+8|0;c[E>>2]=0;c[m>>2]=1;F=m+4|0;c[F>>2]=0;G=m+8|0;c[G>>2]=0;c[n>>2]=1;H=n+4|0;c[H>>2]=0;I=n+8|0;c[I>>2]=0;c[o>>2]=1;J=o+4|0;c[J>>2]=0;K=o+8|0;c[K>>2]=0;L=Yv(f,b,d)|0;a:do if(!L){M=c[C>>2]|0;N=c[B>>2]|0;while(1){if(!N){O=-14;break a}P=N+-1|0;if(!(c[M+(P<<2)>>2]|0))N=P;else break}P=c[f>>2]|0;b:do if(N>>>0>1){Q=P;t=15}else{if((P|0)<0){O=-14;break a}else R=1;do{if(!R)break b;R=R+-1|0;S=c[M+(R<<2)>>2]|0;if(S>>>0>1){Q=P;t=15;break b}}while((S|0)!=0);Q=0-P|0;t=15}while(0);if((t|0)==15?Q|0:0){O=-14;break}P=Vv(g,b,d)|0;if(!P){M=vv(h,g)|0;if(!M){N=vv(k,d)|0;if(!N){S=vv(m,d)|0;if(!S){T=c[x>>2]|0;if(!T){U=DE(1,4)|0;if(!U){O=-16;break}V=c[y>>2]|0;if(V|0)CE(V);c[x>>2]=1;c[y>>2]=U;W=U;X=4}else{W=c[y>>2]|0;X=T<<2}ET(W|0,0,X|0)|0;c[c[y>>2]>>2]=1;c[i>>2]=1;T=c[z>>2]|0;if(!T){U=DE(1,4)|0;if(!U){O=-16;break}V=c[A>>2]|0;if(V|0)CE(V);c[z>>2]=1;c[A>>2]=U;Y=U;Z=4}else{Y=c[A>>2]|0;Z=T<<2}ET(Y|0,0,Z|0)|0;c[c[A>>2]>>2]=0;c[j>>2]=1;T=c[H>>2]|0;if(!T){U=DE(1,4)|0;if(!U){O=-16;break}V=c[I>>2]|0;if(V|0)CE(V);c[H>>2]=1;c[I>>2]=U;_=U;$=4}else{_=c[I>>2]|0;$=T<<2}ET(_|0,0,$|0)|0;c[c[I>>2]>>2]=0;c[n>>2]=1;T=c[J>>2]|0;if(!T){U=DE(1,4)|0;if(!U){O=-16;break}V=c[K>>2]|0;if(V|0)CE(V);c[J>>2]=1;c[K>>2]=U;aa=K;ba=U;ca=4}else{aa=K;ba=c[K>>2]|0;ca=T<<2}ET(ba|0,0,ca|0)|0;c[c[K>>2]>>2]=1;c[o>>2]=1;T=c[w>>2]|0;c:do{if(!(c[T>>2]&1)){U=T;while(1){V=c[v>>2]|0;if(!V){da=DE(1,4)|0;if(!da){O=-16;break a}if(U|0)CE(U);c[v>>2]=1;c[w>>2]=da;c[da>>2]=0;c[h>>2]=1}else{da=0;ea=V;while(1){ea=ea+-1|0;V=U+(ea<<2)|0;fa=c[V>>2]|0;c[V>>2]=fa>>>1|da;if(!ea)break;else da=fa<<31}}if(!((c[c[y>>2]>>2]&1|0)==0?!(c[c[A>>2]>>2]&1|0):0)){da=Hv(i,i,k)|0;if(da|0){O=da;break a}da=Iv(j,j,g)|0;if(da|0){O=da;break a}}da=c[x>>2]|0;if(!da){ea=DE(1,4)|0;if(!ea){O=-16;break a}fa=c[y>>2]|0;if(fa|0)CE(fa);c[x>>2]=1;c[y>>2]=ea;c[ea>>2]=0;c[i>>2]=1}else{ea=c[y>>2]|0;fa=0;V=da;while(1){V=V+-1|0;da=ea+(V<<2)|0;ga=c[da>>2]|0;c[da>>2]=ga>>>1|fa;if(!V)break;else fa=ga<<31}}fa=c[z>>2]|0;if(!fa){V=DE(1,4)|0;if(!V){O=-16;break a}ea=c[A>>2]|0;if(ea|0)CE(ea);c[z>>2]=1;c[A>>2]=V;c[V>>2]=0;c[j>>2]=1}else{V=c[A>>2]|0;ea=0;ga=fa;while(1){ga=ga+-1|0;fa=V+(ga<<2)|0;da=c[fa>>2]|0;c[fa>>2]=da>>>1|ea;if(!ga)break;else ea=da<<31}}ea=c[w>>2]|0;if(!(c[ea>>2]&1))U=ea;else{ha=ea;break}}}else ha=T;U=c[G>>2]|0;if(!(c[U>>2]&1)){ea=U;do{ga=c[F>>2]|0;if(!ga){V=DE(1,4)|0;if(!V){O=-16;break a}if(ea|0)CE(ea);c[F>>2]=1;c[G>>2]=V;c[V>>2]=0;c[m>>2]=1}else{V=0;da=ga;while(1){da=da+-1|0;ga=ea+(da<<2)|0;fa=c[ga>>2]|0;c[ga>>2]=fa>>>1|V;if(!da)break;else V=fa<<31}}if(!((c[c[I>>2]>>2]&1|0)==0?!(c[c[K>>2]>>2]&1|0):0)){V=Hv(n,n,k)|0;if(V|0){O=V;break a}V=Iv(o,o,g)|0;if(V|0){O=V;break a}}V=c[H>>2]|0;if(!V){da=DE(1,4)|0;if(!da){O=-16;break a}fa=c[I>>2]|0;if(fa|0)CE(fa);c[H>>2]=1;c[I>>2]=da;c[da>>2]=0;c[n>>2]=1}else{da=c[I>>2]|0;fa=0;ga=V;while(1){ga=ga+-1|0;V=da+(ga<<2)|0;ia=c[V>>2]|0;c[V>>2]=ia>>>1|fa;if(!ga)break;else fa=ia<<31}}fa=c[J>>2]|0;if(!fa){ga=DE(1,4)|0;if(!ga){O=-16;break a}da=c[K>>2]|0;if(da|0)CE(da);c[J>>2]=1;c[aa>>2]=ga;c[ga>>2]=0;c[o>>2]=1}else{ga=c[K>>2]|0;da=0;ia=fa;while(1){ia=ia+-1|0;fa=ga+(ia<<2)|0;V=c[fa>>2]|0;c[fa>>2]=V>>>1|da;if(!ia)break;else da=V<<31}}ea=c[G>>2]|0}while(!(c[ea>>2]&1|0));ja=c[w>>2]|0;ka=ea}else{ja=ha;ka=U}da=c[v>>2]|0;while(1){if(!da){la=0;break}ia=da+-1|0;if(!(c[ja+(ia<<2)>>2]|0))da=ia;else{la=da;break}}da=c[F>>2]|0;while(1){if(!da){ma=0;break}U=da+-1|0;if(!(c[ka+(U<<2)>>2]|0))da=U;else{ma=da;break}}d:do if(ma|la){e:do if(la>>>0>ma>>>0){na=c[h>>2]|0;t=115}else{if(ma>>>0>la>>>0){na=0-(c[m>>2]|0)|0;t=115;break}da=c[h>>2]|0;U=c[m>>2]|0;if((da|0)>0&(U|0)<0){t=116;break d}if((da|0)<0&(U|0)>0)break;else oa=la;do{if(!oa){t=116;break d}oa=oa+-1|0;U=c[ja+(oa<<2)>>2]|0;ea=c[ka+(oa<<2)>>2]|0;if(U>>>0>ea>>>0){na=da;t=115;break e}}while(U>>>0>=ea>>>0);na=0-da|0;t=115}while(0);if((t|0)==115?(t=0,(na|0)>-1):0){t=116;break}ea=Iv(m,m,h)|0;if(ea|0){O=ea;break a}ea=Iv(n,n,i)|0;if(ea|0){O=ea;break a}ea=Iv(o,o,j)|0;if(ea|0){O=ea;break a}}else t=116;while(0);if((t|0)==116){t=0;ea=Iv(h,h,m)|0;if(ea|0){O=ea;break a}ea=Iv(i,i,n)|0;if(ea|0){O=ea;break a}ea=Iv(j,j,o)|0;if(ea|0){O=ea;break a}}T=c[w>>2]|0;ea=c[v>>2]|0;do{if(!ea)break c;ea=ea+-1|0}while(!(c[T+(ea<<2)>>2]|0))}while((c[h>>2]|0)!=0);f:while(1){T=c[H>>2]|0;ea=c[I>>2]|0;U=T;do{if(!U){pa=ea;qa=T;break f}U=U+-1|0}while(!(c[ea+(U<<2)>>2]|0));if((c[n>>2]|0)>=0){pa=ea;qa=T;break}U=Hv(n,n,d)|0;if(U|0){O=U;break a}}g:while(1){U=qa;while(1){if(!U){ra=0;break}ia=U+-1|0;if(!(c[pa+(ia<<2)>>2]|0))U=ia;else{ra=U;break}}U=c[p>>2]|0;while(1){if(!U){sa=0;break}T=U+-1|0;if(!(c[(c[q>>2]|0)+(T<<2)>>2]|0))U=T;else{sa=U;break}}h:do if(sa|ra|0){i:do if(ra>>>0>sa>>>0)ta=c[n>>2]|0;else{if(sa>>>0>ra>>>0){ta=0-(c[d>>2]|0)|0;break}U=c[n>>2]|0;T=c[d>>2]|0;if((U|0)>0&(T|0)<0)break h;if((U|0)<0&(T|0)>0)break g;else ua=ra;do{if(!ua)break h;ua=ua+-1|0;T=c[pa+(ua<<2)>>2]|0;ea=c[(c[q>>2]|0)+(ua<<2)>>2]|0;if(T>>>0>ea>>>0){ta=U;break i}}while(T>>>0>=ea>>>0);ta=0-U|0}while(0);if((ta|0)<=-1)break g}while(0);da=Iv(n,n,d)|0;if(da|0){O=da;break a}pa=c[I>>2]|0;qa=c[H>>2]|0}O=vv(a,n)|0}else O=S}else O=N}else O=M}else O=P}else O=L;while(0);L=c[u>>2]|0;if(L|0){a=c[r>>2]|0;if(a|0){qa=a;a=L;while(1){qa=qa+-1|0;c[a>>2]=0;if(!qa)break;else a=a+4|0}}CE(L)}c[g>>2]=1;c[r>>2]=0;c[u>>2]=0;u=c[w>>2]|0;if(u|0){r=c[v>>2]|0;if(r|0){g=r;r=u;while(1){g=g+-1|0;c[r>>2]=0;if(!g)break;else r=r+4|0}}CE(u)}c[h>>2]=1;c[v>>2]=0;c[w>>2]=0;w=c[y>>2]|0;if(w|0){v=c[x>>2]|0;if(v|0){h=v;v=w;while(1){h=h+-1|0;c[v>>2]=0;if(!h)break;else v=v+4|0}}CE(w)}c[i>>2]=1;c[x>>2]=0;c[y>>2]=0;y=c[A>>2]|0;if(y|0){x=c[z>>2]|0;if(x|0){i=x;x=y;while(1){i=i+-1|0;c[x>>2]=0;if(!i)break;else x=x+4|0}}CE(y)}c[j>>2]=1;c[z>>2]=0;c[A>>2]=0;A=c[C>>2]|0;if(A|0){z=c[B>>2]|0;if(z|0){j=z;z=A;while(1){j=j+-1|0;c[z>>2]=0;if(!j)break;else z=z+4|0}}CE(A)}c[f>>2]=1;c[B>>2]=0;c[C>>2]=0;C=c[E>>2]|0;if(C|0){B=c[D>>2]|0;if(B|0){f=B;B=C;while(1){f=f+-1|0;c[B>>2]=0;if(!f)break;else B=B+4|0}}CE(C)}c[k>>2]=1;c[D>>2]=0;c[E>>2]=0;E=c[G>>2]|0;if(E|0){D=c[F>>2]|0;if(D|0){k=D;D=E;while(1){k=k+-1|0;c[D>>2]=0;if(!k)break;else D=D+4|0}}CE(E)}c[m>>2]=1;c[F>>2]=0;c[G>>2]=0;G=c[I>>2]|0;if(G|0){F=c[H>>2]|0;if(F|0){m=F;F=G;while(1){m=m+-1|0;c[F>>2]=0;if(!m)break;else F=F+4|0}}CE(G)}c[n>>2]=1;c[H>>2]=0;c[I>>2]=0;I=c[K>>2]|0;if(I|0){H=c[J>>2]|0;if(H|0){n=H;H=I;while(1){n=n+-1|0;c[H>>2]=0;if(!n)break;else H=H+4|0}}CE(I)}c[o>>2]=1;c[J>>2]=0;c[K>>2]=0;s=O;l=e;return s|0}function $v(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=l;l=l+16|0;f=e;c[f>>2]=1;g=c[a+4>>2]|0;c[f+4>>2]=g;h=c[a+8>>2]|0;c[f+8>>2]=h;a=h;h=g;while(1){if(!h){i=-14;j=30;break}h=h+-1|0;if(c[a+(h<<2)>>2]|0){k=g;break}}if((j|0)==30){l=e;return i|0}while(1){if(!k){m=g;break}h=k+-1|0;if(!(c[a+(h<<2)>>2]|0))k=h;else{j=6;break}}a:do if((j|0)==6)if(k>>>0>1)m=g;else{h=1;while(1){if(!h){i=-14;break}h=h+-1|0;if((c[a+(h<<2)>>2]|0)!=1){m=g;break a}}l=e;return i|0}while(0);while(1){if(!m)break;k=m+-1|0;if(!(c[a+(k<<2)>>2]|0))m=k;else{j=11;break}}b:do if((j|0)==11?m>>>0<=1:0){k=1;while(1){if(!k){i=0;break}k=k+-1|0;if((c[a+(k<<2)>>2]|0)!=2)break b}l=e;return i|0}while(0);m=c[a>>2]&1;if(!m){i=-14;l=e;return i|0}k=(g|0)==0;h=0;c:while(1){n=c[10656+(h<<2)>>2]|0;o=n>>31|1;p=g;while(1){if(!p){j=23;break}q=p+-1|0;if(!(c[a+(q<<2)>>2]|0))p=q;else{j=19;break}}d:do if((j|0)==19){j=0;if(!(p>>>0>1|(o|0)<0)){q=1;while(1){if(!q){i=0;j=30;break c}q=q+-1|0;r=c[a+(q<<2)>>2]|0;if(r>>>0>n>>>0)break d;if(r>>>0<n>>>0){i=0;j=30;break c}}}}else if((j|0)==23?(j=0,(o|0)>-1):0){i=0;j=30;break c}while(0);switch(n|0){case 1:{i=-14;j=30;break c;break}case 2:{s=m;break}default:{if(k){i=-14;j=30;break c}else{t=0;u=g}while(1){u=u+-1|0;o=c[a+(u<<2)>>2]|0;p=(((((o>>>16|t<<16)>>>0)%(n>>>0)|0)<<16|o&65535)>>>0)%(n>>>0)|0;if(!u){s=p;break}else t=p}}}h=h+1|0;if(!s){i=-14;j=30;break}if((h|0)==167){j=29;break}}if((j|0)==29){i=aw(f,b,d)|0;l=e;return i|0}else if((j|0)==30){l=e;return i|0}return 0}function aw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0;e=l;l=l+1088|0;f=e+64|0;g=e+60|0;h=e+48|0;i=e+36|0;j=e+24|0;k=e+12|0;m=e;c[h>>2]=1;n=h+4|0;c[n>>2]=0;o=h+8|0;c[o>>2]=0;c[i>>2]=1;p=i+4|0;c[p>>2]=0;q=i+8|0;c[q>>2]=0;c[j>>2]=1;r=j+4|0;c[r>>2]=0;s=j+8|0;c[s>>2]=0;c[k>>2]=1;t=k+4|0;c[t>>2]=0;u=k+8|0;c[u>>2]=0;c[m>>2]=1;v=m+4|0;c[v>>2]=0;w=m+8|0;c[w>>2]=0;c[g>>2]=1;c[f>>2]=1;c[f+4>>2]=1;c[f+8>>2]=g;g=Iv(h,a,f)|0;a:do if(!g){x=Cv(h)|0;y=vv(i,h)|0;if(!y){z=Qv(i,x)|0;if(!z){A=a+4|0;B=c[A>>2]|0;if(B){C=c[a+8>>2]|0;D=B;while(1){E=D+-1|0;if(!E){F=7;break}G=c[C+(E<<2)>>2]|0;if(!G)D=E;else{H=E;I=G;break}}if((F|0)==7){H=0;I=c[C>>2]|0}if((I|0)>-1){D=-2147483648;G=0;while(1){D=D>>>1;E=G+1|0;if(!(E>>>0<32&(D&I|0)==0)){J=E;break}else G=E}}else J=0;G=(H<<5)+32-J|0;if(G>>>0<=1299)if(G>>>0<=849)if(G>>>0<=649)if(G>>>0<=349)if(G>>>0>249)K=12;else{L=G>>>0>149?18:27;F=16}else K=8;else K=4;else K=3;else K=2}else{L=27;F=16}if((F|0)==16)K=L;G=x>>>0>1;D=B<<2;b:do if(D>>>0<=1024){C=0;E=D;c:while(1){M=fd[b&127](d,f,E)|0;if(M|0){N=M;break b}M=Rv(k,f,E)|0;if(M|0){O=M;break a}M=c[t>>2]|0;P=c[u>>2]|0;Q=M;while(1){if(!Q){R=0;break}S=Q+-1|0;if(!(c[P+(S<<2)>>2]|0))Q=S;else{R=Q;break}}Q=c[n>>2]|0;S=c[o>>2]|0;T=Q;while(1){if(!T){U=0;break}V=T+-1|0;if(!(c[S+(V<<2)>>2]|0))T=V;else{U=T;break}}d:do if(U|R){e:do if(R>>>0>U>>>0)W=c[k>>2]|0;else{if(U>>>0>R>>>0){W=0-(c[h>>2]|0)|0;break}T=c[k>>2]|0;V=c[h>>2]|0;if((T|0)>0&(V|0)<0){F=39;break d}if((T|0)<0&(V|0)>0){X=P;break d}else Y=R;do{if(!Y){F=39;break d}Y=Y+-1|0;V=c[P+(Y<<2)>>2]|0;Z=c[S+(Y<<2)>>2]|0;if(V>>>0>Z>>>0){W=T;break e}}while(V>>>0>=Z>>>0);W=0-T|0}while(0);if((W|0)<=-1)X=P;else F=39}else F=39;while(0);if((F|0)==39){F=0;if(!M)_=0;else{Z=M;while(1){V=Z+-1|0;if(!V){F=41;break}$=c[P+(V<<2)>>2]|0;if(!$)Z=V;else{aa=V;ba=$;break}}if((F|0)==41){F=0;aa=0;ba=c[P>>2]|0}if((ba|0)>-1){Z=-2147483648;M=0;while(1){Z=Z>>>1;$=M+1|0;if(!($>>>0<32&(Z&ba|0)==0)){ca=$;break}else M=$}}else ca=0;_=(aa<<5)+32-ca|0}if(!Q)da=0;else{M=Q;while(1){Z=M+-1|0;if(!Z){F=48;break}P=c[S+(Z<<2)>>2]|0;if(!P)M=Z;else{ea=Z;fa=P;break}}if((F|0)==48){F=0;ea=0;fa=c[S>>2]|0}if((fa|0)>-1){M=-2147483648;Q=0;while(1){M=M>>>1;P=Q+1|0;if(!(P>>>0<32&(M&fa|0)==0)){ga=P;break}else Q=P}}else ga=0;da=(ea<<5)+32-ga|0}Q=Qv(k,_+1-da|0)|0;if(Q|0){O=Q;break a}X=c[u>>2]|0}c[X>>2]=c[X>>2]|3;Q=c[A>>2]<<2;if(Q>>>0>1024){ha=-4;F=57;break}else{ia=0;ja=Q}f:while(1){Q=fd[b&127](d,f,ja)|0;if(Q|0){ha=Q;F=57;break c}Q=Rv(k,f,ja)|0;if(Q|0){O=Q;break a}Q=c[t>>2]|0;if(!Q)ka=0;else{M=c[u>>2]|0;S=Q;while(1){Q=S+-1|0;if(!Q){F=62;break}P=c[M+(Q<<2)>>2]|0;if(!P)S=Q;else{la=Q;ma=P;break}}if((F|0)==62){F=0;la=0;ma=c[M>>2]|0}if((ma|0)>-1){S=-2147483648;P=0;while(1){S=S>>>1;Q=P+1|0;if(!(Q>>>0<32&(S&ma|0)==0)){na=Q;break}else P=Q}}else na=0;ka=(la<<5)+32-na|0}P=c[n>>2]|0;if(!P)oa=0;else{S=c[o>>2]|0;M=P;while(1){P=M+-1|0;if(!P){F=70;break}Q=c[S+(P<<2)>>2]|0;if(!Q)M=P;else{pa=P;qa=Q;break}}if((F|0)==70){F=0;pa=0;qa=c[S>>2]|0}if((qa|0)>-1){M=-2147483648;Q=0;while(1){M=M>>>1;P=Q+1|0;if(!(P>>>0<32&(M&qa|0)==0)){ra=P;break}else Q=P}}else ra=0;oa=(pa<<5)+32-ra|0}if(ka>>>0>oa>>>0?(Q=Qv(k,ka-oa|0)|0,Q|0):0){O=Q;break a}if((ia|0)>30){sa=-14;F=216;break c}ia=ia+1|0;Q=c[t>>2]|0;M=c[u>>2]|0;S=Q;while(1){if(!S){ta=0;break}P=S+-1|0;if(!(c[M+(P<<2)>>2]|0))S=P;else{ta=S;break}}S=c[o>>2]|0;P=c[n>>2]|0;while(1){if(!P){ua=0;break}Z=P+-1|0;if(!(c[S+(Z<<2)>>2]|0))P=Z;else{ua=P;break}}g:do if(ua|ta|0){h:do if(ta>>>0>ua>>>0){va=c[k>>2]|0;F=95}else{if(ua>>>0>ta>>>0){va=0-(c[h>>2]|0)|0;F=95;break}P=c[k>>2]|0;Z=c[h>>2]|0;if((P|0)>0&(Z|0)<0)break g;if((P|0)<0&(Z|0)>0){wa=Q;break}else xa=ta;do{if(!xa)break g;xa=xa+-1|0;Z=c[M+(xa<<2)>>2]|0;$=c[S+(xa<<2)>>2]|0;if(Z>>>0>$>>>0){va=P;F=95;break h}}while(Z>>>0>=$>>>0);va=0-P|0;F=95}while(0);if((F|0)==95){F=0;if((va|0)>-1)break;else wa=Q}while(1){if(!wa)break g;T=wa+-1|0;if(!(c[M+(T<<2)>>2]|0))wa=T;else break}T=c[k>>2]|0;i:do if(wa>>>0>1)ya=T;else{if((T|0)<0)break g;else za=1;do{if(!za)break g;za=za+-1|0;$=c[M+(za<<2)>>2]|0;if($>>>0>1){ya=T;break i}}while(($|0)!=0);ya=0-T|0}while(0);if((ya|0)>=1)break f}while(0);ja=c[A>>2]<<2;if(ja>>>0>1024){ha=-4;F=57;break c}}M=Wv(k,k,i,a,m)|0;if(M|0){O=M;break a}M=c[t>>2]|0;Q=c[u>>2]|0;S=M;while(1){if(!S){Aa=0;break}T=S+-1|0;if(!(c[Q+(T<<2)>>2]|0))S=T;else{Aa=S;break}}S=c[o>>2]|0;T=c[n>>2]|0;while(1){if(!T){Ba=0;break}P=T+-1|0;if(!(c[S+(P<<2)>>2]|0))T=P;else{Ba=T;break}}j:do if(Ba|Aa|0){k:do if(Aa>>>0<=Ba>>>0){if(Ba>>>0>Aa>>>0){Ca=0-(c[h>>2]|0)|0;F=124;break}T=c[k>>2]|0;P=c[h>>2]|0;if(!((T|0)>0&(P|0)<0)?!((T|0)<0&(P|0)>0):0){P=Aa;do{if(!P)break j;P=P+-1|0;$=c[Q+(P<<2)>>2]|0;Z=c[S+(P<<2)>>2]|0;if($>>>0>Z>>>0){Ca=T;F=124;break k}}while($>>>0>=Z>>>0);Ca=0-T|0;F=124}else Da=M}else{Ca=c[k>>2]|0;F=124}while(0);if((F|0)==124){F=0;if(!Ca)break;else Da=M}while(1){if(!Da)break;P=Da+-1|0;if(!(c[Q+(P<<2)>>2]|0))Da=P;else{F=127;break}}l:do if((F|0)==127){F=0;P=c[k>>2]|0;m:do if(Da>>>0>1)Ea=P;else{if((P|0)<0)break l;else Fa=1;do{if(!Fa)break j;Fa=Fa+-1|0;Z=c[Q+(Fa<<2)>>2]|0;if(Z>>>0>1){Ea=P;break m}}while((Z|0)!=0);Ea=0-P|0}while(0);if(!Ea)break j}while(0);n:do if(G){P=1;T=Q;Z=M;while(1){$=Z;while(1){if(!$){Ga=0;break}V=$+-1|0;if(!(c[T+(V<<2)>>2]|0))$=V;else{Ga=$;break}}$=c[o>>2]|0;V=c[n>>2]|0;while(1){if(!V){Ha=0;break}Ia=V+-1|0;if(!(c[$+(Ia<<2)>>2]|0))V=Ia;else{Ha=V;break}}if(!(Ha|Ga)){Ja=T;Ka=Z;break n}o:do if(Ga>>>0>Ha>>>0){La=c[k>>2]|0;F=152}else{if(Ha>>>0>Ga>>>0){La=0-(c[h>>2]|0)|0;F=152;break}V=c[k>>2]|0;Ia=c[h>>2]|0;if((V|0)>0&(Ia|0)<0)break;if((V|0)<0&(Ia|0)>0)break;else Ma=Ga;do{if(!Ma){Ja=T;Ka=Z;break n}Ma=Ma+-1|0;Ia=c[T+(Ma<<2)>>2]|0;Na=c[$+(Ma<<2)>>2]|0;if(Ia>>>0>Na>>>0){La=V;F=152;break o}}while(Ia>>>0>=Na>>>0);La=0-V|0;F=152}while(0);if((F|0)==152?(F=0,(La|0)==0):0){Ja=T;Ka=Z;break n}$=Gv(j,k,k)|0;if($|0){O=$;break a}$=Vv(k,j,a)|0;if($|0){O=$;break a}$=c[t>>2]|0;Na=c[u>>2]|0;Ia=$;while(1){if(!Ia)break;Oa=Ia+-1|0;if(!(c[Na+(Oa<<2)>>2]|0))Ia=Oa;else{F=158;break}}p:do if((F|0)==158){F=0;Oa=c[k>>2]|0;q:do if(Ia>>>0>1)Pa=Oa;else{if((Oa|0)<0)break p;else Qa=1;do{if(!Qa){Ja=Na;Ka=$;break n}Qa=Qa+-1|0;Ra=c[Na+(Qa<<2)>>2]|0;if(Ra>>>0>1){Pa=Oa;break q}}while((Ra|0)!=0);Pa=0-Oa|0}while(0);if(!Pa){Ja=Na;Ka=$;break n}}while(0);P=P+1|0;if(P>>>0>=x>>>0){Ja=Na;Ka=$;break}else{T=Na;Z=$}}}else{Ja=Q;Ka=M}while(0);Z=Ka;while(1){if(!Z){Sa=0;break}T=Z+-1|0;if(!(c[Ja+(T<<2)>>2]|0))Z=T;else{Sa=Z;break}}Z=c[o>>2]|0;T=c[n>>2]|0;while(1){if(!T){Ta=0;break}P=T+-1|0;if(!(c[Z+(P<<2)>>2]|0))T=P;else{Ta=T;break}}r:do if(Ta|Sa){s:do if(Sa>>>0>Ta>>>0)Ua=c[k>>2]|0;else{if(Ta>>>0>Sa>>>0){Ua=0-(c[h>>2]|0)|0;break}T=c[k>>2]|0;P=c[h>>2]|0;if((T|0)>0&(P|0)<0){O=-14;break a}if((T|0)<0&(P|0)>0){O=-14;break a}else Va=Sa;do{if(!Va){Wa=Ka;break r}Va=Va+-1|0;P=c[Ja+(Va<<2)>>2]|0;Ia=c[Z+(Va<<2)>>2]|0;if(P>>>0>Ia>>>0){Ua=T;break s}}while(P>>>0>=Ia>>>0);Ua=0-T|0}while(0);if(Ua){O=-14;break a}else Wa=Ka}else Wa=Ka;while(0);while(1){if(!Wa)break j;Z=Wa+-1|0;if(!(c[Ja+(Z<<2)>>2]|0))Wa=Z;else break}Z=c[k>>2]|0;t:do if(Wa>>>0>1)Xa=Z;else{if((Z|0)<0)break j;else Ya=1;do{if(!Ya){O=-14;break a}Ya=Ya+-1|0;$=c[Ja+(Ya<<2)>>2]|0;if($>>>0>1){Xa=Z;break t}}while(($|0)!=0);Xa=0-Z|0}while(0);if(!Xa){O=-14;break a}}while(0);C=C+1|0;if(C>>>0>=K>>>0){O=0;break a}E=c[A>>2]<<2;if(E>>>0>1024){N=-4;break b}}if((F|0)==57){O=ha;break a}else if((F|0)==216){l=e;return sa|0}}else N=-4;while(0);O=N}else O=z}else O=y}else O=g;while(0);g=c[o>>2]|0;if(g|0){N=c[n>>2]|0;if(N|0){F=N;N=g;while(1){F=F+-1|0;c[N>>2]=0;if(!F)break;else N=N+4|0}}CE(g)}c[h>>2]=1;c[n>>2]=0;c[o>>2]=0;o=c[q>>2]|0;if(o|0){n=c[p>>2]|0;if(n|0){h=n;n=o;while(1){h=h+-1|0;c[n>>2]=0;if(!h)break;else n=n+4|0}}CE(o)}c[i>>2]=1;c[p>>2]=0;c[q>>2]=0;q=c[s>>2]|0;if(q|0){p=c[r>>2]|0;if(p|0){i=p;p=q;while(1){i=i+-1|0;c[p>>2]=0;if(!i)break;else p=p+4|0}}CE(q)}c[j>>2]=1;c[r>>2]=0;c[s>>2]=0;s=c[u>>2]|0;if(s|0){r=c[t>>2]|0;if(r|0){j=r;r=s;while(1){j=j+-1|0;c[r>>2]=0;if(!j)break;else r=r+4|0}}CE(s)}c[k>>2]=1;c[t>>2]=0;c[u>>2]=0;u=c[w>>2]|0;if(u|0){t=c[v>>2]|0;if(t|0){k=t;t=u;while(1){k=k+-1|0;c[t>>2]=0;if(!k)break;else t=t+4|0}}CE(u)}c[m>>2]=1;c[v>>2]=0;c[w>>2]=0;sa=O;l=e;return sa|0}function bw(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;g=l;l=l+1040|0;h=g+16|0;i=g+12|0;j=g;if((b+-3|0)>>>0>8189){k=-4;l=g;return k|0}c[j>>2]=1;m=j+4|0;c[m>>2]=0;n=j+8|0;c[n>>2]=0;o=(b>>>5)+((b&31|0)!=0&1)|0;p=o<<2;a:do if(o>>>0<=256){q=fd[e&127](f,h,p)|0;if(!q){r=Rv(a,h,p)|0;if(!r){s=a+4|0;t=c[s>>2]|0;if(t){u=c[a+8>>2]|0;v=t;while(1){w=v+-1|0;if(!w){x=9;break}y=c[u+(w<<2)>>2]|0;if(!y)v=w;else{z=w;A=y;break}}if((x|0)==9){z=0;A=c[u>>2]|0}if((A|0)>-1){v=-2147483648;y=0;while(1){v=v>>>1;w=y+1|0;if(!(w>>>0<32&(v&A|0)==0)){B=w;break}else y=w}}else B=0;y=(z<<5)+32-B|0;if(y>>>0>b>>>0){v=Qv(a,1-b+y|0)|0;if(v|0){C=v;break}D=c[s>>2]|0}else D=t}else D=0;v=b+-1|0;y=v>>>5;u=v&31;if(D<<5>>>0<=v>>>0){w=y+1|0;if(v>>>0<=319999)if(D>>>0<=y>>>0){v=DE(w,4)|0;if(v|0){E=a+8|0;F=c[E>>2]|0;if(F|0){CT(v|0,F|0,D<<2|0)|0;if(D|0){G=D;H=F;while(1){G=G+-1|0;c[H>>2]=0;if(!G)break;else H=H+4|0}}CE(F)}c[s>>2]=w;c[E>>2]=v;x=25}}else x=25}else x=25;if((x|0)==25){H=(c[a+8>>2]|0)+(y<<2)|0;c[H>>2]=c[H>>2]|1<<u}H=a+8|0;G=c[H>>2]|0;t=c[G>>2]|0;c[G>>2]=t|1;if(!d){I=h+4|0;J=h+8|0;while(1){K=$v(a,e,f)|0;if((K|0)!=-14){C=K;break a}c[i>>2]=2;c[h>>2]=1;c[I>>2]=1;c[J>>2]=i;K=Hv(a,a,h)|0;if(K|0){C=K;break a}}}c[G>>2]=t|3;J=c[s>>2]|0;if(!J)L=0;else{I=0;u=J;while(1){u=u+-1|0;J=c[G+(u<<2)>>2]|0;y=(((((J>>>16|I<<16)>>>0)%3|0)<<16|J&65535)>>>0)%3|0;if(!u){L=y;break}else I=y}}switch(((L|0)!=0&(c[a>>2]|0)<0?L^3:L)&3){case 0:{c[i>>2]=8;c[h>>2]=1;c[h+4>>2]=1;c[h+8>>2]=i;I=Hv(a,a,h)|0;if(I|0){C=I;break a}break}case 1:{c[i>>2]=4;c[h>>2]=1;c[h+4>>2]=1;c[h+8>>2]=i;I=Hv(a,a,h)|0;if(I|0){C=I;break a}break}default:{}}I=vv(j,a)|0;if(!I){u=c[m>>2]|0;if(!u){G=DE(1,4)|0;if(!G){C=-16;break}t=c[n>>2]|0;if(t|0)CE(t);c[m>>2]=1;c[n>>2]=G;c[G>>2]=0;c[j>>2]=1}else{G=c[n>>2]|0;t=0;y=u;while(1){y=y+-1|0;u=G+(y<<2)|0;J=c[u>>2]|0;c[u>>2]=J>>>1|t;if(!y)break;else t=J<<31}}t=h+4|0;y=h+8|0;G=h+4|0;J=h+8|0;while(1){u=c[H>>2]|0;v=c[u>>2]&1;b:do if(v|0){E=c[s>>2]|0;w=(E|0)==0;F=0;do{K=c[10656+(F<<2)>>2]|0;M=K>>31|1;N=E;while(1){if(!N){x=51;break}O=N+-1|0;if(!(c[u+(O<<2)>>2]|0))N=O;else{x=50;break}}c:do if((x|0)==50){x=0;O=c[a>>2]|0;if(N>>>0<=1){if(!((M|0)<0&(O|0)>0)){if((M|0)>0&(O|0)<0){C=1;break a}else P=1;do{if(!P){C=1;break a}P=P+-1|0;Q=c[u+(P<<2)>>2]|0;if(Q>>>0>K>>>0){R=O;x=58;break c}}while(Q>>>0>=K>>>0);R=0-O|0;x=58}}else{R=O;x=58}}else if((x|0)==51){x=0;R=0-M|0;x=58}while(0);if((x|0)==58?(x=0,(R|0)<1):0){C=1;break a}switch(K|0){case 1:{break b;break}case 2:{S=v;break}default:{if(w)T=0;else{M=0;N=E;while(1){N=N+-1|0;Q=c[u+(N<<2)>>2]|0;U=(((((Q>>>16|M<<16)>>>0)%(K>>>0)|0)<<16|Q&65535)>>>0)%(K>>>0)|0;if(!N){T=U;break}else M=U}}S=(T|0)!=0&(c[a>>2]|0)<0?K-T|0:T}}F=F+1|0;if(!S)break b}while((F|0)!=167);F=c[n>>2]|0;E=c[F>>2]&1;if(E|0){w=c[m>>2]|0;M=c[j>>2]|0;N=(w|0)==0;U=(M|0)<0;Q=0-M|0;d:do if((M|0)>0){V=0;while(1){W=c[10656+(V<<2)>>2]|0;X=W>>31|1;Y=w;while(1){if(!Y){x=75;break}Z=Y+-1|0;if(!(c[F+(Z<<2)>>2]|0))Y=Z;else{x=69;break}}e:do if((x|0)==69){x=0;if(Y>>>0>1){_=M;x=76}else{if((X|0)<0)break;if(U){C=1;break a}else $=1;while(1){if(!$){C=1;break a}$=$+-1|0;O=c[F+($<<2)>>2]|0;if(O>>>0>W>>>0){_=M;x=76;break e}if(O>>>0<W>>>0){_=Q;x=76;break}}}}else if((x|0)==75){x=0;_=0-X|0;x=76}while(0);if((x|0)==76?(x=0,(_|0)<1):0){C=1;break a}switch(W|0){case 1:{break b;break}case 2:{aa=E;break}default:{if(N)ba=0;else{X=0;Y=w;while(1){Y=Y+-1|0;O=c[F+(Y<<2)>>2]|0;Z=(((((O>>>16|X<<16)>>>0)%(W>>>0)|0)<<16|O&65535)>>>0)%(W>>>0)|0;if(!Y){ba=Z;break}else X=Z}}aa=(ba|0)!=0&U?W-ba|0:ba}}V=V+1|0;if(!aa)break b;if((V|0)==167)break d}}else{V=0;while(1){K=c[10656+(V<<2)>>2]|0;X=K>>31|1;Y=w;while(1){if(!Y){x=88;break}Z=Y+-1|0;if(!(c[F+(Z<<2)>>2]|0))Y=Z;else{x=87;break}}f:do if((x|0)==87){x=0;if(Y>>>0>1)ca=M;else{if((X|0)>0&U){C=1;break a}else da=1;while(1){if(!da){C=1;break a}da=da+-1|0;W=c[F+(da<<2)>>2]|0;if(W>>>0>K>>>0){ca=M;break f}if(W>>>0<K>>>0){ca=Q;break}}}}else if((x|0)==88){x=0;ca=0-X|0}while(0);if((ca|0)<1){C=1;break a}switch(K|0){case 1:{break b;break}case 2:{ea=E;break}default:{if(N)fa=0;else{X=0;Y=w;while(1){Y=Y+-1|0;W=c[F+(Y<<2)>>2]|0;Z=(((((W>>>16|X<<16)>>>0)%(K>>>0)|0)<<16|W&65535)>>>0)%(K>>>0)|0;if(!Y){fa=Z;break}else X=Z}}ea=(fa|0)!=0&U?K-fa|0:fa}}V=V+1|0;if(!ea)break b;if((V|0)==167)break d}}while(0);U=aw(a,e,f)|0;switch(U|0){case -14:{break b;break}case 0:break;default:{C=U;break a}}U=aw(j,e,f)|0;if((U|0)!=-14){C=U;break a}}}while(0);c[i>>2]=12;c[h>>2]=1;c[t>>2]=1;c[y>>2]=i;u=Hv(a,a,h)|0;if(u|0){C=u;break a}c[i>>2]=6;c[h>>2]=1;c[G>>2]=1;c[J>>2]=i;u=Hv(j,j,h)|0;if(u|0){C=u;break}}}else C=I}else C=r}else{ga=q;x=4}}else{ga=-4;x=4}while(0);if((x|0)==4)C=ga;ga=c[n>>2]|0;if(ga|0){x=c[m>>2]|0;if(x|0){h=x;x=ga;while(1){h=h+-1|0;c[x>>2]=0;if(!h)break;else x=x+4|0}}CE(ga)}c[j>>2]=1;c[m>>2]=0;c[n>>2]=0;k=C;l=g;return k|0}function cw(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=c[2833]|0;if(!b){d=0;return d|0}else{e=11328;f=b}while(1){if((c[e>>2]|0)==(a|0)){d=f;g=4;break}f=c[e+12>>2]|0;if(!f){d=0;g=4;break}else e=e+8|0}if((g|0)==4)return d|0;return 0}function dw(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;if(!a){b=0;return b|0}d=c[2833]|0;if(!d){b=0;return b|0}else{e=11328;f=d}while(1){if(!($E(c[f+12>>2]|0,a)|0)){b=f;g=5;break}f=c[e+12>>2]|0;if(!f){b=0;g=5;break}else e=e+8|0}if((g|0)==5)return b|0;return 0}function ew(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[2833]|0;if(!e){f=0;return f|0}else{g=11328;h=e}while(1){if(((c[c[h+28>>2]>>2]|0)==(a|0)?(c[h+8>>2]|0)==(b|0):0)?(c[h+4>>2]|0)==(d|0):0){f=h;i=6;break}h=c[g+12>>2]|0;if(!h){f=0;i=6;break}else g=g+8|0}if((i|0)==6)return f|0;return 0}function fw(a){a=a|0;var b=0;b=a;a=b+64|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function gw(b){b=b|0;var d=0,e=0;if(!b)return;d=b+60|0;e=c[d>>2]|0;if(e|0)rd[c[(c[(c[b>>2]|0)+28>>2]|0)+24>>2]&511](e);a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;a[b+4>>0]=0;a[b+5>>0]=0;a[b+6>>0]=0;a[b+7>>0]=0;a[b+8>>0]=0;a[b+9>>0]=0;a[b+10>>0]=0;a[b+11>>0]=0;a[b+12>>0]=0;a[b+13>>0]=0;a[b+14>>0]=0;a[b+15>>0]=0;a[b+16>>0]=0;a[b+17>>0]=0;a[b+18>>0]=0;a[b+19>>0]=0;a[b+20>>0]=0;a[b+21>>0]=0;a[b+22>>0]=0;a[b+23>>0]=0;a[b+24>>0]=0;a[b+25>>0]=0;a[b+26>>0]=0;a[b+27>>0]=0;a[b+28>>0]=0;a[b+29>>0]=0;a[b+30>>0]=0;a[b+31>>0]=0;a[b+32>>0]=0;a[b+33>>0]=0;a[b+34>>0]=0;a[b+35>>0]=0;a[b+36>>0]=0;a[b+37>>0]=0;a[b+38>>0]=0;a[b+39>>0]=0;a[b+40>>0]=0;a[b+41>>0]=0;a[b+42>>0]=0;a[b+43>>0]=0;a[b+44>>0]=0;a[b+45>>0]=0;a[b+46>>0]=0;a[b+47>>0]=0;a[b+48>>0]=0;a[b+49>>0]=0;a[b+50>>0]=0;a[b+51>>0]=0;a[b+52>>0]=0;a[b+53>>0]=0;a[b+54>>0]=0;a[b+55>>0]=0;a[b+56>>0]=0;a[b+57>>0]=0;a[b+58>>0]=0;a[b+59>>0]=0;a[d>>0]=0;a[b+61>>0]=0;a[b+62>>0]=0;a[b+63>>0]=0;return}function hw(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if((a|0)==0|(b|0)==0){d=-24832;return d|0}e=a;f=e+64|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));e=cd[c[(c[b+28>>2]|0)+20>>2]&63]()|0;c[a+60>>2]=e;if(!e){d=-24960;return d|0}c[a>>2]=b;if((c[b+4>>2]|0)!=2){d=0;return d|0}c[a+12>>2]=97;c[a+16>>2]=106;d=0;return d|0}function iw(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;e=c-d|0;if(!e)return;c=e&255;f=0;g=0;do{a[b+(g+d)>>0]=c;f=f+1<<24>>24;g=f&255}while(e>>>0>g>>>0);return}function jw(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;if((b|0)==0|(e|0)==0){f=-24832;return f|0}g=a[b+(d+-1)>>0]|0;h=g&255;i=d-h|0;c[e>>2]=i;e=(g<<24>>24==0|h>>>0>d>>>0)&1;if(!d)j=e;else{h=0;k=e;while(1){e=((h>>>0>=i>>>0?(a[b+h>>0]^g)&255:0)|k&255)&255;h=h+1|0;if((h|0)==(d|0)){j=e;break}else k=e}}f=j<<24>>24?-25088:0;return f|0}function kw(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;a:do if((a|0)!=0?(c[(c[a>>2]|0)+4>>2]|0)==2:0){switch(b|0){case 0:{d=97;e=106;break}case 1:{d=98;e=107;break}case 2:{d=99;e=108;break}case 3:{d=100;e=109;break}case 4:{d=0;e=110;break}default:{f=-24704;break a}}c[a+12>>2]=d;c[a+16>>2]=e;f=0}else f=-24832;while(0);return f|0}function lw(a,b,c){a=a|0;b=b|0;c=c|0;if(b>>>0<=c>>>0)return;ET(a+c|0,0,b-c|0)|0;return}function mw(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;e=c-d|0;if(e>>>0>1){f=d+-1|0;d=1;g=1;do{a[b+(f+g)>>0]=0;d=d+1<<24>>24;g=d&255}while(e>>>0>g>>>0)}a[b+(c+-1)>>0]=e;return}function nw(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;e=c-d|0;a[b+d>>0]=-128;if(e>>>0>1){f=1;g=1}else return;do{a[b+(g+d)>>0]=0;f=f+1<<24>>24;g=f&255}while(e>>>0>g>>>0);return}function ow(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((a|0)==0|(d|0)==0){e=-24832;return e|0}c[d>>2]=b;e=0;return e|0}function pw(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if((b|0)==0|(e|0)==0){f=-24832;return f|0}c[e>>2]=0;if(!d){f=0;return f|0}else{g=0;h=d;i=0}do{d=h;h=h+-1|0;j=g&255;g=j|(a[b+h>>0]|0)!=0;i=((g|0)!=(j|0)?d:0)|i;c[e>>2]=i}while((h|0)!=0);f=0;return f|0}function qw(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;if((b|0)==0|(f|0)==0){g=-24832;return g|0}h=e+-1|0;i=a[b+h>>0]|0;j=i&255;k=e-j|0;c[f>>2]=k;f=(i<<24>>24==0|j>>>0>e>>>0)&1;if(!h)l=f;else{e=0;j=f;while(1){f=((e>>>0>=k>>>0?d[b+e>>0]|0:0)|j&255)&255;e=e+1|0;if((e|0)==(h|0)){l=f;break}else j=f}}g=l<<24>>24?-25088:0;return g|0}function rw(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;if((b|0)==0|(e|0)==0){f=-24832;return f|0}c[e>>2]=0;if(!d){f=-25088;return f|0}else{g=0;h=d;i=255;j=0}do{h=h+-1|0;d=b+h|0;k=g&255;g=k|(a[d>>0]|0)!=0;j=((g|0)!=(k|0)?h:0)|j;c[e>>2]=j;i=((a[d>>0]^-128)&255|(g|0)==(k|0))&(i&255)}while((h|0)!=0);f=i|0?-25088:0;return f|0}function sw(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;if(!a){f=-24832;return f|0}g=c[a>>2]|0;if(!g){f=-24832;return f|0}if((c[g+20>>2]&2|0)==0?(c[g+8>>2]|0)!=(d|0):0){f=-24832;return f|0}c[a+4>>2]=d;c[a+8>>2]=e;a:do if((e|0)!=1){switch(c[g+4>>2]|0){case 5:case 3:{break a;break}default:{}}if(e|0){f=-24832;return f|0}f=fd[c[(c[g+28>>2]|0)+16>>2]&127](c[a+60>>2]|0,b,d)|0;return f|0}while(0);f=fd[c[(c[g+28>>2]|0)+12>>2]&127](c[a+60>>2]|0,b,d)|0;return f|0}function tw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if(!a){e=-24832;return e|0}f=c[a>>2]|0;if((b|0)==0|(f|0)==0){e=-24832;return e|0}if(d>>>0>16){e=-24704;return e|0}if(!(c[f+20>>2]&1)){g=c[f+16>>2]|0;if(g>>>0>d>>>0){e=-24832;return e|0}else h=g}else h=d;CT(a+40|0,b|0,h|0)|0;c[a+56>>2]=h;e=0;return e|0}function uw(a){a=a|0;var b=0;if((a|0)!=0?(c[a>>2]|0)!=0:0){c[a+36>>2]=0;b=0}else b=-24832;return b|0}function vw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if(!a){e=-24832;return e|0}f=c[a>>2]|0;if(!f){e=-24832;return e|0}if((c[f+4>>2]|0)!=6){e=0;return e|0}e=sy(c[a+60>>2]|0,c[a+8>>2]|0,a+40|0,c[a+56>>2]|0,b,d)|0;return e|0}function ww(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;if(!a){g=-24832;return g|0}h=c[a>>2]|0;if((f|0)==0|(h|0)==0){g=-24832;return g|0}c[f>>2]=0;i=c[h+24>>2]|0;j=c[h+4>>2]|0;if((j|0)==1){if((i|0)!=(d|0)){g=-25216;return g|0}c[f>>2]=d;g=gd[c[(c[h+28>>2]|0)+4>>2]&63](c[a+60>>2]|0,c[a+8>>2]|0,b,e)|0;return g|0}if(!i){g=-25472;return g|0}if((b|0)==(e|0)){if(c[a+36>>2]|0){g=-24832;return g|0}if((d>>>0)%(i>>>0)|0|0){g=-24832;return g|0}}switch(j|0){case 6:{j=a+8|0;switch(c[j>>2]|0){case 0:{h=a+36|0;k=c[h>>2]|0;if((k+d|0)>>>0>i>>>0)l=13;else{m=h;n=k;l=15}break}case 1:{k=a+36|0;h=c[k>>2]|0;if((h+d|0)>>>0<i>>>0){m=k;n=h;l=15}else{o=k;p=h}break}default:l=13}if((l|0)==13){h=a+36|0;o=h;p=c[h>>2]|0}else if((l|0)==15){CT(a+20+n|0,b|0,d|0)|0;c[m>>2]=(c[m>>2]|0)+d;g=0;return g|0}do if(p){m=i-p|0;CT(a+20+p|0,b|0,m|0)|0;n=(c[o>>2]|0)+m|0;c[o>>2]=n;h=uy(c[a+60>>2]|0,n,a+20|0,e)|0;if(!h){c[f>>2]=(c[f>>2]|0)+i;c[o>>2]=0;q=e+i|0;r=d-m|0;s=b+m|0;break}else{g=h;return g|0}}else{q=e;r=d;s=b}while(0);if(!r){g=0;return g|0}p=(r>>>0)%(i>>>0)|0;if(!p)t=(c[j>>2]|0)==0?i:0;else t=p;p=r-t|0;CT(a+20|0,s+p|0,t|0)|0;c[o>>2]=(c[o>>2]|0)+t;if(!p){g=0;return g|0}t=uy(c[a+60>>2]|0,p,s,q)|0;if(t|0){g=t;return g|0}c[f>>2]=(c[f>>2]|0)+p;g=0;return g|0}case 2:{p=a+8|0;switch(c[p>>2]|0){case 0:{t=a+36|0;q=c[t>>2]|0;if((i-q|0)>>>0<d>>>0)l=27;else{u=t;v=q;l=29}break}case 1:{q=a+36|0;t=c[q>>2]|0;if((i-t|0)>>>0>d>>>0){u=q;v=t;l=29}else{w=q;x=t}break}default:l=27}if((l|0)==27){t=a+36|0;w=t;x=c[t>>2]|0}else if((l|0)==29){CT(a+20+v|0,b|0,d|0)|0;c[u>>2]=(c[u>>2]|0)+d;g=0;return g|0}do if(x){u=i-x|0;CT(a+20+x|0,b|0,u|0)|0;v=kd[c[(c[(c[a>>2]|0)+28>>2]|0)+8>>2]&63](c[a+60>>2]|0,c[p>>2]|0,i,a+40|0,a+20|0,e)|0;if(!v){c[f>>2]=(c[f>>2]|0)+i;c[w>>2]=0;y=e+i|0;z=b+u|0;A=d-u|0;break}else{g=v;return g|0}}else{y=e;z=b;A=d}while(0);if(!A){g=0;return g|0}d=(A>>>0)%(i>>>0)|0;if(!d)B=(c[p>>2]|0)==0?i:0;else B=d;d=A-B|0;CT(a+20|0,z+d|0,B|0)|0;c[w>>2]=(c[w>>2]|0)+B;if(!d){g=0;return g|0}B=kd[c[(c[(c[a>>2]|0)+28>>2]|0)+8>>2]&63](c[a+60>>2]|0,c[p>>2]|0,d,a+40|0,z,y)|0;if(B|0){g=B;return g|0}c[f>>2]=(c[f>>2]|0)+d;g=0;return g|0}default:{g=-24704;return g|0}}return 0}function xw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;if(!a){e=-24832;return e|0}f=c[a>>2]|0;if((d|0)==0|(f|0)==0){e=-24832;return e|0}c[d>>2]=0;switch(c[f+4>>2]|0){case 1:{e=(c[a+36>>2]|0)==0?0:-25216;return e|0}case 6:{g=a+36|0;c[d>>2]=c[g>>2];e=uy(c[a+60>>2]|0,c[g>>2]|0,a+20|0,b)|0;return e|0}case 2:{g=a+8|0;h=c[g>>2]|0;do if((h|0)!=1){i=c[a+36>>2]|0;if((c[f+24>>2]|0)==(i|0)){j=f;k=h}else return ((i|0)==0&(c[a+12>>2]|0)==0?0:-25216)|0}else{i=c[a+12>>2]|0;if(i|0){td[i&127](a+20|0,c[f+24>>2]|0,c[a+36>>2]|0);j=c[a>>2]|0;k=c[g>>2]|0;break}e=(c[a+36>>2]|0)==0?0:-25216;return e|0}while(0);if(!j)l=0;else l=c[j+24>>2]|0;f=kd[c[(c[j+28>>2]|0)+8>>2]&63](c[a+60>>2]|0,k,l,a+40|0,a+20|0,b)|0;if(f|0){e=f;return e|0}if(!(c[g>>2]|0)){g=c[a>>2]|0;if(!g)m=0;else m=c[g+24>>2]|0;e=fd[c[a+16>>2]&127](b,m,d)|0;return e|0}else{m=c[a>>2]|0;if(!m)n=0;else n=c[m+24>>2]|0;c[d>>2]=n;e=0;return e|0}break}case 7:case 5:case 3:{e=0;return e|0}default:{e=-24704;return e|0}}return 0}function yw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if(!a){e=-24832;return e|0}f=c[a>>2]|0;if((b|0)==0|(f|0)==0){e=-24832;return e|0}if((c[a+8>>2]|0)!=1){e=-24832;return e|0}if((c[f+4>>2]|0)!=6){e=0;return e|0}e=vy(c[a+60>>2]|0,b,d)|0;return e|0}function zw(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=l;l=l+16|0;g=f;if(!b){h=-24832;l=f;return h|0}i=c[b>>2]|0;if(!i){h=-24832;l=f;return h|0}if(c[b+8>>2]|0){h=-24832;l=f;return h|0}if((c[i+4>>2]|0)!=6){h=0;l=f;return h|0}if(e>>>0<=16){i=vy(c[b+60>>2]|0,g,e)|0;if(!i)if(!e)j=0;else{b=0;k=0;do{k=k|(a[g+b>>0]^a[d+b>>0])&255;b=b+1|0}while((b|0)!=(e|0));j=(k|0)==0?0:-25344}else j=i}else j=-24832;h=j;l=f;return h|0}function Aw(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0;i=l;l=l+16|0;j=i;do if((a|0)!=0?(k=c[a>>2]|0,!((b|0)==0|(k|0)==0)):0)if(d>>>0<=16){if(!(c[k+20>>2]&1)){m=c[k+16>>2]|0;if(m>>>0>d>>>0){n=-24832;break}else o=m}else o=d;CT(a+40|0,b|0,o|0)|0;c[a+56>>2]=o;c[a+36>>2]=0;m=ww(a,e,f,g,h)|0;if(!m){k=xw(a,g+(c[h>>2]|0)|0,j)|0;if(!k){c[h>>2]=(c[h>>2]|0)+(c[j>>2]|0);n=0}else n=k}else n=m}else n=-24704;else n=-24832;while(0);l=i;return n|0}function Bw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return vx(a,c,d)|0}function Cw(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return wx(a,b,c,d,e,f)|0}function Dw(a,b,c){a=a|0;b=b|0;c=c|0;return qx(a,b)|0}function Ew(a,b,c){a=a|0;b=b|0;c=c|0;return sx(a,b)|0}function Fw(){var a=0,b=0;a=DE(1,384)|0;if(!a){b=0;return b|0}jx(a);b=a;return b|0}function Gw(a){a=a|0;kx(a);CE(a);return}function Hw(a,b,c){a=a|0;b=b|0;c=c|0;return ox(a,b)|0}function Iw(a,b,c){a=a|0;b=b|0;c=c|0;return px(a,b)|0}function Jw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return tx(a,c,d)|0}function Kw(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return ux(a,b,c,d,e,f)|0}function Lw(a,b,c){a=a|0;b=b|0;c=c|0;return mx(a,b)|0}function Mw(a,b,c){a=a|0;b=b|0;c=c|0;return nx(a,b)|0}function Nw(){var a=0,b=0;a=DE(1,128)|0;if(!a){b=0;return b|0}hx(a);b=a;return b|0}function Ow(a){a=a|0;ix(a);CE(a);return}function Pw(a,b,c){a=a|0;b=b|0;c=c|0;return VC(a,2,b,c)|0}function Qw(){var a=0;a=DE(1,64)|0;if(!a)return a|0;UC(a);return a|0}function Rw(a){a=a|0;WC(a);CE(a);return}function Sw(a,b,c){a=a|0;b=b|0;c=c|0;return ry(a,2,b,c)|0}function Tw(){var a=0;a=DE(1,392)|0;if(!a)return a|0;qy(a);return a|0}function Uw(a){a=a|0;wy(a);CE(a);return}function Vw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return SC(a,b,c,d)|0}function Ww(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return TC(a,b,c,d,e,f)|0}function Xw(a,b,c){a=a|0;b=b|0;c=c|0;return OC(a,b,c)|0}function Yw(a,b,c){a=a|0;b=b|0;c=c|0;return PC(a,b,c)|0}function Zw(){var a=0,b=0;a=DE(1,280)|0;if(!a){b=0;return b|0}MC(a);b=a;return b|0}function _w(a){a=a|0;NC(a);CE(a);return}function $w(a){a=a|0;ET(a|0,0,320)|0;return}function ax(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0;i=l;l=l+416|0;j=i+32|0;k=i;m=k;n=m+32|0;do{a[m>>0]=0;m=m+1|0}while((m|0)<(n|0));m=b+32|0;MC(m);n=b+312|0;c[n>>2]=d;d=b+316|0;c[d>>2]=e;e=b+24|0;c[e>>2]=h;c[b+28>>2]=1e4;OC(m,k,256)|0;k=c[e>>2]|0;if(k>>>0>384|(384-k|0)>>>0<g>>>0){o=-56;l=i;return o|0}ET(j|0,0,384)|0;if(fd[c[n>>2]&127](c[d>>2]|0,j,k)|0){o=-52;l=i;return o|0}k=c[e>>2]|0;if((f|0)!=0&(g|0)!=0){CT(j+k|0,f|0,g|0)|0;p=k+g|0}else p=k;bx(j,j,p);cx(b,j);c[b+16>>2]=1;o=0;l=i;return o|0}function bx(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=l;l=l+800|0;f=e+376|0;g=e+328|0;h=e+296|0;i=e+280|0;j=e;if(d>>>0>384){l=e;return}ET(f|0,0,416)|0;MC(j);a[f+16>>0]=d>>>24;a[f+17>>0]=d>>>16;a[f+18>>0]=d>>>8;a[f+19>>0]=d;k=f+24|0;a[f+23>>0]=48;CT(k|0,c|0,d|0)|0;a[k+d>>0]=-128;a[h>>0]=0;a[h+1>>0]=1;a[h+2>>0]=2;a[h+3>>0]=3;a[h+4>>0]=4;a[h+5>>0]=5;a[h+6>>0]=6;a[h+7>>0]=7;a[h+8>>0]=8;a[h+9>>0]=9;a[h+10>>0]=10;a[h+11>>0]=11;a[h+12>>0]=12;a[h+13>>0]=13;a[h+14>>0]=14;a[h+15>>0]=15;a[h+16>>0]=16;a[h+17>>0]=17;a[h+18>>0]=18;a[h+19>>0]=19;a[h+20>>0]=20;a[h+21>>0]=21;a[h+22>>0]=22;a[h+23>>0]=23;a[h+24>>0]=24;a[h+25>>0]=25;a[h+26>>0]=26;a[h+27>>0]=27;a[h+28>>0]=28;a[h+29>>0]=29;a[h+30>>0]=30;a[h+31>>0]=31;k=d+25|0;OC(j,h,256)|0;h=f+3|0;if(!k){m=g;n=m+16|0;do{a[m>>0]=0;m=m+1|0}while((m|0)<(n|0));d=a[h>>0]|0;m=g+16|0;n=m+16|0;do{a[m>>0]=0;m=m+1|0}while((m|0)<(n|0));a[h>>0]=d+2<<24>>24;m=i;n=m+16|0;do{a[m>>0]=0;m=m+1|0}while((m|0)<(n|0));c=g+32|0;m=c;n=m+16|0;do{a[m>>0]=0;m=m+1|0}while((m|0)<(n|0));o=c;p=d}else{m=i;n=m+16|0;do{a[m>>0]=0;m=m+1|0}while((m|0)<(n|0));d=i+1|0;c=i+2|0;q=i+3|0;r=i+4|0;s=i+5|0;t=i+6|0;u=i+7|0;v=i+8|0;w=i+9|0;x=i+10|0;y=i+11|0;z=i+12|0;A=i+13|0;B=i+14|0;C=i+15|0;D=k;E=f;F=0;G=0;H=0;I=0;J=0;K=0;L=0;M=0;N=0;O=0;P=0;Q=0;R=0;S=0;T=0;U=0;while(1){a[i>>0]=P^a[E>>0];a[d>>0]=Q^a[E+1>>0];a[c>>0]=R^a[E+2>>0];a[q>>0]=S^a[E+3>>0];a[r>>0]=T^a[E+4>>0];a[s>>0]=U^a[E+5>>0];a[t>>0]=F^a[E+6>>0];a[u>>0]=G^a[E+7>>0];a[v>>0]=H^a[E+8>>0];a[w>>0]=I^a[E+9>>0];a[x>>0]=J^a[E+10>>0];a[y>>0]=K^a[E+11>>0];a[z>>0]=L^a[E+12>>0];a[A>>0]=M^a[E+13>>0];a[B>>0]=N^a[E+14>>0];a[C>>0]=O^a[E+15>>0];V=D-(D>>>0<16?D:16)|0;SC(j,1,i,i)|0;if(!V)break;D=V;E=E+16|0;F=a[t>>0]|0;G=a[u>>0]|0;H=a[v>>0]|0;I=a[w>>0]|0;J=a[x>>0]|0;K=a[y>>0]|0;L=a[z>>0]|0;M=a[A>>0]|0;N=a[B>>0]|0;O=a[C>>0]|0;P=a[i>>0]|0;Q=a[d>>0]|0;R=a[c>>0]|0;S=a[q>>0]|0;T=a[r>>0]|0;U=a[s>>0]|0}m=g;W=i;n=m+16|0;do{a[m>>0]=a[W>>0]|0;m=m+1|0;W=W+1|0}while((m|0)<(n|0));U=a[h>>0]|0;a[h>>0]=U+1<<24>>24;m=i;n=m+16|0;do{a[m>>0]=0;m=m+1|0}while((m|0)<(n|0));T=k;S=f;R=0;Q=0;P=0;O=0;N=0;M=0;L=0;K=0;J=0;I=0;H=0;G=0;F=0;E=0;D=0;V=0;while(1){a[i>>0]=R^a[S>>0];a[d>>0]=Q^a[S+1>>0];a[c>>0]=P^a[S+2>>0];a[q>>0]=O^a[S+3>>0];a[r>>0]=N^a[S+4>>0];a[s>>0]=M^a[S+5>>0];a[t>>0]=L^a[S+6>>0];a[u>>0]=K^a[S+7>>0];a[v>>0]=J^a[S+8>>0];a[w>>0]=I^a[S+9>>0];a[x>>0]=H^a[S+10>>0];a[y>>0]=G^a[S+11>>0];a[z>>0]=F^a[S+12>>0];a[A>>0]=E^a[S+13>>0];a[B>>0]=D^a[S+14>>0];a[C>>0]=V^a[S+15>>0];X=T-(T>>>0<16?T:16)|0;SC(j,1,i,i)|0;if(!X)break;T=X;S=S+16|0;R=a[i>>0]|0;Q=a[d>>0]|0;P=a[c>>0]|0;O=a[q>>0]|0;N=a[r>>0]|0;M=a[s>>0]|0;L=a[t>>0]|0;K=a[u>>0]|0;J=a[v>>0]|0;I=a[w>>0]|0;H=a[x>>0]|0;G=a[y>>0]|0;F=a[z>>0]|0;E=a[A>>0]|0;D=a[B>>0]|0;V=a[C>>0]|0}m=g+16|0;W=i;n=m+16|0;do{a[m>>0]=a[W>>0]|0;m=m+1|0;W=W+1|0}while((m|0)<(n|0));a[h>>0]=U+2<<24>>24;m=i;n=m+16|0;do{a[m>>0]=0;m=m+1|0}while((m|0)<(n|0));V=k;k=f;f=0;D=0;E=0;F=0;G=0;H=0;I=0;J=0;K=0;L=0;M=0;N=0;O=0;P=0;Q=0;R=0;while(1){a[i>>0]=f^a[k>>0];a[d>>0]=D^a[k+1>>0];a[c>>0]=E^a[k+2>>0];a[q>>0]=F^a[k+3>>0];a[r>>0]=G^a[k+4>>0];a[s>>0]=H^a[k+5>>0];a[t>>0]=I^a[k+6>>0];a[u>>0]=J^a[k+7>>0];a[v>>0]=K^a[k+8>>0];a[w>>0]=L^a[k+9>>0];a[x>>0]=M^a[k+10>>0];a[y>>0]=N^a[k+11>>0];a[z>>0]=O^a[k+12>>0];a[A>>0]=P^a[k+13>>0];a[B>>0]=Q^a[k+14>>0];a[C>>0]=R^a[k+15>>0];S=V-(V>>>0<16?V:16)|0;SC(j,1,i,i)|0;if(!S)break;V=S;k=k+16|0;f=a[i>>0]|0;D=a[d>>0]|0;E=a[c>>0]|0;F=a[q>>0]|0;G=a[r>>0]|0;H=a[s>>0]|0;I=a[t>>0]|0;J=a[u>>0]|0;K=a[v>>0]|0;L=a[w>>0]|0;M=a[x>>0]|0;N=a[y>>0]|0;O=a[z>>0]|0;P=a[A>>0]|0;Q=a[B>>0]|0;R=a[C>>0]|0}C=g+32|0;m=C;W=i;n=m+16|0;do{a[m>>0]=a[W>>0]|0;m=m+1|0;W=W+1|0}while((m|0)<(n|0));o=C;p=U}a[h>>0]=p+3<<24>>24;OC(j,g,256)|0;SC(j,1,o,o)|0;m=b;W=o;n=m+16|0;do{a[m>>0]=a[W>>0]|0;m=m+1|0;W=W+1|0}while((m|0)<(n|0));SC(j,1,o,o)|0;m=b+16|0;W=o;n=m+16|0;do{a[m>>0]=a[W>>0]|0;m=m+1|0;W=W+1|0}while((m|0)<(n|0));SC(j,1,o,o)|0;m=b+32|0;W=o;n=m+16|0;do{a[m>>0]=a[W>>0]|0;m=m+1|0;W=W+1|0}while((m|0)<(n|0));NC(j);l=e;return}function cx(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0;d=l;l=l+48|0;e=d;f=e;g=f+48|0;do{a[f>>0]=0;f=f+1|0}while((f|0)<(g|0));h=b+32|0;i=16;do{if((i|0)<=0)break;i=i+-1|0;j=b+i|0;k=(a[j>>0]|0)+1<<24>>24;a[j>>0]=k}while(!(k<<24>>24));SC(h,1,b,e)|0;i=e+16|0;k=16;do{if((k|0)<=0)break;k=k+-1|0;j=b+k|0;m=(a[j>>0]|0)+1<<24>>24;a[j>>0]=m}while(!(m<<24>>24));SC(h,1,b,i)|0;i=e+32|0;k=16;do{if((k|0)<=0)break;k=k+-1|0;m=b+k|0;j=(a[m>>0]|0)+1<<24>>24;a[m>>0]=j}while(!(j<<24>>24));SC(h,1,b,i)|0;a[e>>0]=a[e>>0]^a[c>>0];i=e+1|0;a[i>>0]=a[i>>0]^a[c+1>>0];i=e+2|0;a[i>>0]=a[i>>0]^a[c+2>>0];i=e+3|0;a[i>>0]=a[i>>0]^a[c+3>>0];i=e+4|0;a[i>>0]=a[i>>0]^a[c+4>>0];i=e+5|0;a[i>>0]=a[i>>0]^a[c+5>>0];i=e+6|0;a[i>>0]=a[i>>0]^a[c+6>>0];i=e+7|0;a[i>>0]=a[i>>0]^a[c+7>>0];i=e+8|0;a[i>>0]=a[i>>0]^a[c+8>>0];i=e+9|0;a[i>>0]=a[i>>0]^a[c+9>>0];i=e+10|0;a[i>>0]=a[i>>0]^a[c+10>>0];i=e+11|0;a[i>>0]=a[i>>0]^a[c+11>>0];i=e+12|0;a[i>>0]=a[i>>0]^a[c+12>>0];i=e+13|0;a[i>>0]=a[i>>0]^a[c+13>>0];i=e+14|0;a[i>>0]=a[i>>0]^a[c+14>>0];i=e+15|0;a[i>>0]=a[i>>0]^a[c+15>>0];i=e+16|0;a[i>>0]=a[i>>0]^a[c+16>>0];i=e+17|0;a[i>>0]=a[i>>0]^a[c+17>>0];i=e+18|0;a[i>>0]=a[i>>0]^a[c+18>>0];i=e+19|0;a[i>>0]=a[i>>0]^a[c+19>>0];i=e+20|0;a[i>>0]=a[i>>0]^a[c+20>>0];i=e+21|0;a[i>>0]=a[i>>0]^a[c+21>>0];i=e+22|0;a[i>>0]=a[i>>0]^a[c+22>>0];i=e+23|0;a[i>>0]=a[i>>0]^a[c+23>>0];i=e+24|0;a[i>>0]=a[i>>0]^a[c+24>>0];i=e+25|0;a[i>>0]=a[i>>0]^a[c+25>>0];i=e+26|0;a[i>>0]=a[i>>0]^a[c+26>>0];i=e+27|0;a[i>>0]=a[i>>0]^a[c+27>>0];i=e+28|0;a[i>>0]=a[i>>0]^a[c+28>>0];i=e+29|0;a[i>>0]=a[i>>0]^a[c+29>>0];i=e+30|0;a[i>>0]=a[i>>0]^a[c+30>>0];i=e+31|0;a[i>>0]=a[i>>0]^a[c+31>>0];i=e+32|0;a[i>>0]=a[i>>0]^a[c+32>>0];k=e+33|0;a[k>>0]=a[k>>0]^a[c+33>>0];k=e+34|0;a[k>>0]=a[k>>0]^a[c+34>>0];k=e+35|0;a[k>>0]=a[k>>0]^a[c+35>>0];k=e+36|0;a[k>>0]=a[k>>0]^a[c+36>>0];k=e+37|0;a[k>>0]=a[k>>0]^a[c+37>>0];k=e+38|0;a[k>>0]=a[k>>0]^a[c+38>>0];k=e+39|0;a[k>>0]=a[k>>0]^a[c+39>>0];k=e+40|0;a[k>>0]=a[k>>0]^a[c+40>>0];k=e+41|0;a[k>>0]=a[k>>0]^a[c+41>>0];k=e+42|0;a[k>>0]=a[k>>0]^a[c+42>>0];k=e+43|0;a[k>>0]=a[k>>0]^a[c+43>>0];k=e+44|0;a[k>>0]=a[k>>0]^a[c+44>>0];k=e+45|0;a[k>>0]=a[k>>0]^a[c+45>>0];k=e+46|0;a[k>>0]=a[k>>0]^a[c+46>>0];k=e+47|0;a[k>>0]=a[k>>0]^a[c+47>>0];OC(h,e,256)|0;f=b;b=i;g=f+16|0;do{a[f>>0]=a[b>>0]|0;f=f+1|0;b=b+1|0}while((f|0)<(g|0));l=d;return}function dx(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return ax(a,b,c,d,e,48)|0}function ex(b){b=b|0;var c=0;if(!b)return;NC(b+32|0);c=b;b=320;while(1){b=b+-1|0;a[c>>0]=0;if(!b)break;else c=c+1|0}return}function fx(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=l;l=l+448|0;i=h+64|0;j=h+16|0;k=h;if(e>>>0>1024){m=-54;l=h;return m|0}if(g>>>0>256){m=-56;l=h;return m|0}n=j;o=n+48|0;do{a[n>>0]=0;n=n+1|0}while((n|0)<(o|0));n=b+16|0;if((c[n>>2]|0)<=(c[b+28>>2]|0)?(c[b+20>>2]|0)==0:0){if(g|0){bx(j,f,g);cx(b,j)}}else p=5;do if((p|0)==5){o=b+24|0;q=c[o>>2]|0;if(!(q>>>0>384|(384-q|0)>>>0<g>>>0)){ET(i|0,0,384)|0;if(!(fd[c[b+312>>2]&127](c[b+316>>2]|0,i,q)|0)){q=c[o>>2]|0;if((f|0)!=0&(g|0)!=0){CT(i+q|0,f|0,g|0)|0;r=q+g|0}else r=q;bx(i,i,r);cx(b,i);c[n>>2]=1;break}else s=-52}else s=-56;m=s;l=h;return m|0}while(0);if(e|0){s=b+32|0;i=d;d=e;while(1){e=16;do{if((e|0)<=0)break;e=e+-1|0;r=b+e|0;g=(a[r>>0]|0)+1<<24>>24;a[r>>0]=g}while(!(g<<24>>24));SC(s,1,b,k)|0;e=d>>>0<16?d:16;CT(i|0,k|0,e|0)|0;d=d-e|0;if(!d)break;else i=i+e|0}}cx(b,j);c[n>>2]=(c[n>>2]|0)+1;m=0;l=h;return m|0}function gx(a,b,c){a=a|0;b=b|0;c=c|0;return fx(a,b,c,0,0)|0}function hx(a){a=a|0;var b=0;b=a;a=b+128|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function ix(b){b=b|0;var c=0,d=0;if(!b)return;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;c=b+4|0;a[b+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;d=b+8|0;a[c+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;c=b+12|0;a[d+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;d=b+16|0;a[c+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;c=b+20|0;a[d+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;d=b+24|0;a[c+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;c=b+28|0;a[d+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;d=b+32|0;a[c+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;c=b+36|0;a[d+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;d=b+40|0;a[c+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;c=b+44|0;a[d+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;d=b+48|0;a[c+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;c=b+52|0;a[d+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;d=b+56|0;a[c+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;c=b+60|0;a[d+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;d=b+64|0;a[c+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;c=b+68|0;a[d+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;d=b+72|0;a[c+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;c=b+76|0;a[d+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;d=b+80|0;a[c+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;c=b+84|0;a[d+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;d=b+88|0;a[c+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;c=b+92|0;a[d+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;d=b+96|0;a[c+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;c=b+100|0;a[d+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;d=b+104|0;a[c+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;c=b+108|0;a[d+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;d=b+112|0;a[c+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;c=b+116|0;a[d+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;d=b+120|0;a[c+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;c=b+124|0;a[d+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;a[c+3>>0]=0;return}function jx(a){a=a|0;ET(a|0,0,384)|0;return}function kx(b){b=b|0;var c=0,d=0;if(!b)return;c=384;d=b;while(1){c=c+-1|0;a[d>>0]=0;if(!c)break;else d=d+1|0}return}function lx(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=d[b>>0]|0;f=(d[b+1>>0]|0)<<16|e<<24|(d[b+2>>0]|0)<<8|(d[b+3>>0]|0);g=(d[b+5>>0]|0)<<16|(d[b+4>>0]|0)<<24|(d[b+6>>0]|0)<<8|(d[b+7>>0]|0);b=(g>>>4^f)&252645135;h=b^f;i=b<<4^g;g=(i^f)&269488144^i;i=(c[12288+((g>>>9&15)<<2)>>2]<<2|c[12288+((g>>>1&15)<<2)>>2]<<3|c[12288+((g>>>17&15)<<2)>>2]<<1|c[12288+((g>>>25&15)<<2)>>2]|c[12288+((g>>>4&15)<<2)>>2]<<7|c[12288+((g>>>12&15)<<2)>>2]<<6|c[12288+((g>>>20&15)<<2)>>2]<<5|c[12288+(g>>>28<<2)>>2]<<4)&268435455;g=(c[12224+((h>>>8&15)<<2)>>2]<<2|c[12224+((h&15)<<2)>>2]<<3|c[12224+((h>>>16&15)<<2)>>2]<<1|c[12224+((h>>>24&15)<<2)>>2]|c[12224+((h>>>5&15)<<2)>>2]<<7|c[12224+((h>>>13&15)<<2)>>2]<<6|c[12224+((h>>>21&15)<<2)>>2]<<5|c[12224+(e>>>5<<2)>>2]<<4)&268435455;e=0;h=a;while(1){if((e|0)<2)j=4;else switch(e|0){case 8:case 15:{j=4;break}default:{k=268435452;l=26;m=2}}if((j|0)==4){j=0;k=268435454;l=27;m=1}a=g<<m;f=g>>>l;b=k&a;g=b|f;n=i<<m;o=i>>>l;p=k&n;i=p|o;q=g<<10;r=p>>>14;p=i>>>3;c[h>>2]=a<<14&134217728|n&256|a<<6&16777216|a<<9&2097152|a>>>1&1048576|a>>>10&65536|n>>>13&8192|n>>>4&4096|n>>>1&1024|n>>>5&32|n>>>10&16|n>>>18&4|n>>>26&2|n>>>24&1|f<<28&268435456|b<<4&603979776|b<<2&131072|r&512|g<<18&34078720|q&262144|i<<6&2048|p&8;f=g<<15;c[h+4>>2]=a<<17&268435456|n&512|a>>>2&33554432|a<<11&1048576|a>>>6&262144|a>>>4&65536|n>>>2&8192|n>>>9&1024|n>>>7&32|n>>>21&2|o<<2&4|b<<1&16777216|b<<3&524288|r&2056|f&536870912|q&134217728|g<<22&67108864|g<<16&2097152|f&131072|i<<8&4096|i<<7&256|p&17;e=e+1|0;if((e|0)==16)break;else h=h+8|0}return}function mx(a,b){a=a|0;b=b|0;lx(a,b);return 0}function nx(a,b){a=a|0;b=b|0;var d=0,e=0;lx(a,b);b=c[a>>2]|0;d=a+120|0;c[a>>2]=c[d>>2];c[d>>2]=b;b=a+4|0;d=c[b>>2]|0;e=a+124|0;c[b>>2]=c[e>>2];c[e>>2]=d;d=a+8|0;e=c[d>>2]|0;b=a+112|0;c[d>>2]=c[b>>2];c[b>>2]=e;e=a+12|0;b=c[e>>2]|0;d=a+116|0;c[e>>2]=c[d>>2];c[d>>2]=b;b=a+16|0;d=c[b>>2]|0;e=a+104|0;c[b>>2]=c[e>>2];c[e>>2]=d;d=a+20|0;e=c[d>>2]|0;b=a+108|0;c[d>>2]=c[b>>2];c[b>>2]=e;e=a+24|0;b=c[e>>2]|0;d=a+96|0;c[e>>2]=c[d>>2];c[d>>2]=b;b=a+28|0;d=c[b>>2]|0;e=a+100|0;c[b>>2]=c[e>>2];c[e>>2]=d;d=a+32|0;e=c[d>>2]|0;b=a+88|0;c[d>>2]=c[b>>2];c[b>>2]=e;e=a+36|0;b=c[e>>2]|0;d=a+92|0;c[e>>2]=c[d>>2];c[d>>2]=b;b=a+40|0;d=c[b>>2]|0;e=a+80|0;c[b>>2]=c[e>>2];c[e>>2]=d;d=a+44|0;e=c[d>>2]|0;b=a+84|0;c[d>>2]=c[b>>2];c[b>>2]=e;e=a+48|0;b=c[e>>2]|0;d=a+72|0;c[e>>2]=c[d>>2];c[d>>2]=b;b=a+52|0;d=c[b>>2]|0;e=a+76|0;c[b>>2]=c[e>>2];c[e>>2]=d;d=a+56|0;e=c[d>>2]|0;b=a+64|0;c[d>>2]=c[b>>2];c[b>>2]=e;e=a+60|0;b=c[e>>2]|0;d=a+68|0;c[e>>2]=c[d>>2];c[d>>2]=b;return 0}function ox(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+384|0;f=e;lx(b,d);lx(f+128|0,d+8|0);d=0;while(1){g=c[b+(30-d<<2)>>2]|0;c[f+(d<<2)>>2]=g;h=c[b+(31-d<<2)>>2]|0;i=d|1;c[f+(i<<2)>>2]=h;c[b+(d+32<<2)>>2]=c[f+(62-d<<2)>>2];c[b+(d+33<<2)>>2]=c[f+(63-d<<2)>>2];j=d+64|0;c[b+(j<<2)>>2]=c[b+(d<<2)>>2];k=d+65|0;c[b+(k<<2)>>2]=c[b+(i<<2)>>2];c[f+(j<<2)>>2]=g;c[f+(k<<2)>>2]=h;if((d|0)<30)d=d+2|0;else{m=384;n=f;break}}while(1){m=m+-1|0;a[n>>0]=0;if(!m)break;else n=n+1|0}l=e;return 0}function px(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0;e=l;l=l+384|0;f=e;lx(f,d);lx(b+128|0,d+8|0);d=0;while(1){g=c[f+(30-d<<2)>>2]|0;c[b+(d<<2)>>2]=g;h=c[f+(31-d<<2)>>2]|0;i=d|1;c[b+(i<<2)>>2]=h;c[f+(d+32<<2)>>2]=c[b+(62-d<<2)>>2];c[f+(d+33<<2)>>2]=c[b+(63-d<<2)>>2];j=d+64|0;c[f+(j<<2)>>2]=c[f+(d<<2)>>2];k=d+65|0;c[f+(k<<2)>>2]=c[f+(i<<2)>>2];c[b+(j<<2)>>2]=g;c[b+(k<<2)>>2]=h;if((d|0)<30)d=d+2|0;else{m=384;n=f;break}}while(1){m=m+-1|0;a[n>>0]=0;if(!m)break;else n=n+1|0}l=e;return 0}function qx(b,c){b=b|0;c=c|0;var d=0,e=0;d=l;l=l+384|0;e=d;rx(b,e,c);c=384;b=e;while(1){c=c+-1|0;a[b>>0]=0;if(!c)break;else b=b+1|0}l=d;return 0}function rx(a,b,d){a=a|0;b=b|0;d=d|0;lx(a,d);lx(b+128|0,d+8|0);lx(a+256|0,d+16|0);d=0;while(1){c[b+(d<<2)>>2]=c[a+(94-d<<2)>>2];c[b+((d|1)<<2)>>2]=c[a+(95-d<<2)>>2];c[a+(d+32<<2)>>2]=c[b+(62-d<<2)>>2];c[a+(d+33<<2)>>2]=c[b+(63-d<<2)>>2];c[b+(d+64<<2)>>2]=c[a+(30-d<<2)>>2];c[b+(d+65<<2)>>2]=c[a+(31-d<<2)>>2];if((d|0)<30)d=d+2|0;else break}return}function sx(b,c){b=b|0;c=c|0;var d=0,e=0;d=l;l=l+384|0;e=d;rx(e,b,c);c=384;b=e;while(1){c=c+-1|0;a[b>>0]=0;if(!c)break;else b=b+1|0}l=d;return 0}function tx(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=(d[e+1>>0]|0)<<16|(d[e>>0]|0)<<24|(d[e+2>>0]|0)<<8|(d[e+3>>0]|0);h=(d[e+5>>0]|0)<<16|(d[e+4>>0]|0)<<24|(d[e+6>>0]|0)<<8|(d[e+7>>0]|0);e=(h^g>>>4)&252645135;i=e^h;h=e<<4^g;g=h>>>16^i&65535;e=g^i;i=g<<16^h;h=(e>>>2^i)&858993459;g=h^i;i=h<<2^e;e=(i>>>8^g)&16711935;h=e^g;g=e<<8^i;i=g<<1;e=(i^h)&-1431655766;j=e^h;h=e^(i|g>>>31);g=j<<1|j>>>31;j=0;i=b;while(1){b=c[i>>2]^h;e=c[i+4>>2]^(h<<28|h>>>4);g=c[12352+((b&63)<<2)>>2]^g^c[12608+((b>>>8&63)<<2)>>2]^c[12864+((b>>>16&63)<<2)>>2]^c[13120+((b>>>24&63)<<2)>>2]^c[13376+((e&63)<<2)>>2]^c[13632+((e>>>8&63)<<2)>>2]^c[13888+((e>>>16&63)<<2)>>2]^c[14144+((e>>>24&63)<<2)>>2];e=c[i+8>>2]^g;b=c[i+12>>2]^(g<<28|g>>>4);h=c[12352+((e&63)<<2)>>2]^h^c[12608+((e>>>8&63)<<2)>>2]^c[12864+((e>>>16&63)<<2)>>2]^c[13120+((e>>>24&63)<<2)>>2]^c[13376+((b&63)<<2)>>2]^c[13632+((b>>>8&63)<<2)>>2]^c[13888+((b>>>16&63)<<2)>>2]^c[14144+((b>>>24&63)<<2)>>2];j=j+1|0;if((j|0)==8)break;else i=i+16|0}i=h<<31|h>>>1;h=(i^g)&-1431655766;j=h^i;i=(h^g)>>>1|g<<31;g=(i>>>8^j)&16711935;h=g^j;j=g<<8^i;i=(j>>>2^h)&858993459;g=i^h;h=i<<2^j;j=h&65535^g>>>16;i=j^h;h=j<<16^g;g=(h>>>4^i)&252645135;j=g^i;i=g<<4^h;a[f>>0]=i>>>24;a[f+1>>0]=i>>>16;a[f+2>>0]=i>>>8;a[f+3>>0]=i;a[f+4>>0]=j>>>24;a[f+5>>0]=j>>>16;a[f+6>>0]=j>>>8;a[f+7>>0]=j;return 0}function ux(b,c,e,f,g,h){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;if(e&7|0){i=-50;return i|0}j=(e|0)==0;if((c|0)==1){if(j){i=0;return i|0}c=f+1|0;k=f+2|0;l=f+3|0;m=f+4|0;n=f+5|0;o=f+6|0;p=f+7|0;q=h;r=g;s=e;t=a[f>>0]|0;while(1){a[q>>0]=t^a[r>>0];a[q+1>>0]=a[c>>0]^a[r+1>>0];a[q+2>>0]=a[k>>0]^a[r+2>>0];a[q+3>>0]=a[l>>0]^a[r+3>>0];a[q+4>>0]=a[m>>0]^a[r+4>>0];a[q+5>>0]=a[n>>0]^a[r+5>>0];a[q+6>>0]=a[o>>0]^a[r+6>>0];a[q+7>>0]=a[p>>0]^a[r+7>>0];tx(b,q,q)|0;u=q;v=u;w=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;v=u+4|0;u=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;v=f;x=v;a[x>>0]=w;a[x+1>>0]=w>>8;a[x+2>>0]=w>>16;a[x+3>>0]=w>>24;x=v+4|0;a[x>>0]=u;a[x+1>>0]=u>>8;a[x+2>>0]=u>>16;a[x+3>>0]=u>>24;s=s+-8|0;if(!s){i=0;break}else{q=q+8|0;r=r+8|0;t=w&255}}return i|0}else{if(j){i=0;return i|0}j=f+1|0;t=f+2|0;r=f+3|0;q=f+4|0;s=f+5|0;p=f+6|0;o=f+7|0;n=h;h=g;g=e;while(1){e=h;m=e;l=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=e+4|0;e=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;tx(b,h,n)|0;a[n>>0]=a[f>>0]^a[n>>0];m=n+1|0;a[m>>0]=a[j>>0]^a[m>>0];m=n+2|0;a[m>>0]=a[t>>0]^a[m>>0];m=n+3|0;a[m>>0]=a[r>>0]^a[m>>0];m=n+4|0;a[m>>0]=a[q>>0]^a[m>>0];m=n+5|0;a[m>>0]=a[s>>0]^a[m>>0];m=n+6|0;a[m>>0]=a[p>>0]^a[m>>0];m=n+7|0;a[m>>0]=a[o>>0]^a[m>>0];m=f;k=m;a[k>>0]=l;a[k+1>>0]=l>>8;a[k+2>>0]=l>>16;a[k+3>>0]=l>>24;l=m+4|0;a[l>>0]=e;a[l+1>>0]=e>>8;a[l+2>>0]=e>>16;a[l+3>>0]=e>>24;g=g+-8|0;if(!g){i=0;break}else{n=n+8|0;h=h+8|0}}return i|0}return 0}function vx(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=(d[e+1>>0]|0)<<16|(d[e>>0]|0)<<24|(d[e+2>>0]|0)<<8|(d[e+3>>0]|0);h=(d[e+5>>0]|0)<<16|(d[e+4>>0]|0)<<24|(d[e+6>>0]|0)<<8|(d[e+7>>0]|0);e=(h^g>>>4)&252645135;i=e^h;h=e<<4^g;g=h>>>16^i&65535;e=g^i;i=g<<16^h;h=(e>>>2^i)&858993459;g=h^i;i=h<<2^e;e=(i>>>8^g)&16711935;h=e^g;g=e<<8^i;i=g<<1;e=(i^h)&-1431655766;j=e^h;h=e^(i|g>>>31);g=j<<1|j>>>31;j=0;i=b;while(1){e=c[i>>2]^h;k=c[i+4>>2]^(h<<28|h>>>4);g=c[12352+((e&63)<<2)>>2]^g^c[12608+((e>>>8&63)<<2)>>2]^c[12864+((e>>>16&63)<<2)>>2]^c[13120+((e>>>24&63)<<2)>>2]^c[13376+((k&63)<<2)>>2]^c[13632+((k>>>8&63)<<2)>>2]^c[13888+((k>>>16&63)<<2)>>2]^c[14144+((k>>>24&63)<<2)>>2];k=c[i+8>>2]^g;e=c[i+12>>2]^(g<<28|g>>>4);h=c[12352+((k&63)<<2)>>2]^h^c[12608+((k>>>8&63)<<2)>>2]^c[12864+((k>>>16&63)<<2)>>2]^c[13120+((k>>>24&63)<<2)>>2]^c[13376+((e&63)<<2)>>2]^c[13632+((e>>>8&63)<<2)>>2]^c[13888+((e>>>16&63)<<2)>>2]^c[14144+((e>>>24&63)<<2)>>2];j=j+1|0;if((j|0)==8)break;else i=i+16|0}i=h;h=g;g=0;j=b+128|0;while(1){e=c[j>>2]^h;k=c[j+4>>2]^(h<<28|h>>>4);i=c[12352+((e&63)<<2)>>2]^i^c[12608+((e>>>8&63)<<2)>>2]^c[12864+((e>>>16&63)<<2)>>2]^c[13120+((e>>>24&63)<<2)>>2]^c[13376+((k&63)<<2)>>2]^c[13632+((k>>>8&63)<<2)>>2]^c[13888+((k>>>16&63)<<2)>>2]^c[14144+((k>>>24&63)<<2)>>2];k=c[j+8>>2]^i;e=c[j+12>>2]^(i<<28|i>>>4);h=c[12352+((k&63)<<2)>>2]^h^c[12608+((k>>>8&63)<<2)>>2]^c[12864+((k>>>16&63)<<2)>>2]^c[13120+((k>>>24&63)<<2)>>2]^c[13376+((e&63)<<2)>>2]^c[13632+((e>>>8&63)<<2)>>2]^c[13888+((e>>>16&63)<<2)>>2]^c[14144+((e>>>24&63)<<2)>>2];g=g+1|0;if((g|0)==8)break;else j=j+16|0}j=i;i=h;h=0;g=b+256|0;while(1){b=c[g>>2]^j;e=c[g+4>>2]^(j<<28|j>>>4);i=c[12352+((b&63)<<2)>>2]^i^c[12608+((b>>>8&63)<<2)>>2]^c[12864+((b>>>16&63)<<2)>>2]^c[13120+((b>>>24&63)<<2)>>2]^c[13376+((e&63)<<2)>>2]^c[13632+((e>>>8&63)<<2)>>2]^c[13888+((e>>>16&63)<<2)>>2]^c[14144+((e>>>24&63)<<2)>>2];e=c[g+8>>2]^i;b=c[g+12>>2]^(i<<28|i>>>4);j=c[12352+((e&63)<<2)>>2]^j^c[12608+((e>>>8&63)<<2)>>2]^c[12864+((e>>>16&63)<<2)>>2]^c[13120+((e>>>24&63)<<2)>>2]^c[13376+((b&63)<<2)>>2]^c[13632+((b>>>8&63)<<2)>>2]^c[13888+((b>>>16&63)<<2)>>2]^c[14144+((b>>>24&63)<<2)>>2];h=h+1|0;if((h|0)==8)break;else g=g+16|0}g=j<<31|j>>>1;j=(g^i)&-1431655766;h=j^g;g=(j^i)>>>1|i<<31;i=(g>>>8^h)&16711935;j=i^h;h=i<<8^g;g=(h>>>2^j)&858993459;i=g^j;j=g<<2^h;h=j&65535^i>>>16;g=h^j;j=h<<16^i;i=(j>>>4^g)&252645135;h=i^g;g=i<<4^j;a[f>>0]=g>>>24;a[f+1>>0]=g>>>16;a[f+2>>0]=g>>>8;a[f+3>>0]=g;a[f+4>>0]=h>>>24;a[f+5>>0]=h>>>16;a[f+6>>0]=h>>>8;a[f+7>>0]=h;return 0}function wx(b,c,e,f,g,h){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;if(e&7|0){i=-50;return i|0}j=(e|0)==0;if((c|0)==1){if(j){i=0;return i|0}c=f+1|0;k=f+2|0;l=f+3|0;m=f+4|0;n=f+5|0;o=f+6|0;p=f+7|0;q=h;r=g;s=e;t=a[f>>0]|0;while(1){a[q>>0]=t^a[r>>0];a[q+1>>0]=a[c>>0]^a[r+1>>0];a[q+2>>0]=a[k>>0]^a[r+2>>0];a[q+3>>0]=a[l>>0]^a[r+3>>0];a[q+4>>0]=a[m>>0]^a[r+4>>0];a[q+5>>0]=a[n>>0]^a[r+5>>0];a[q+6>>0]=a[o>>0]^a[r+6>>0];a[q+7>>0]=a[p>>0]^a[r+7>>0];vx(b,q,q)|0;u=q;v=u;w=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;v=u+4|0;u=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;v=f;x=v;a[x>>0]=w;a[x+1>>0]=w>>8;a[x+2>>0]=w>>16;a[x+3>>0]=w>>24;x=v+4|0;a[x>>0]=u;a[x+1>>0]=u>>8;a[x+2>>0]=u>>16;a[x+3>>0]=u>>24;s=s+-8|0;if(!s){i=0;break}else{q=q+8|0;r=r+8|0;t=w&255}}return i|0}else{if(j){i=0;return i|0}j=f+1|0;t=f+2|0;r=f+3|0;q=f+4|0;s=f+5|0;p=f+6|0;o=f+7|0;n=h;h=g;g=e;while(1){e=h;m=e;l=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=e+4|0;e=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;vx(b,h,n)|0;a[n>>0]=a[f>>0]^a[n>>0];m=n+1|0;a[m>>0]=a[j>>0]^a[m>>0];m=n+2|0;a[m>>0]=a[t>>0]^a[m>>0];m=n+3|0;a[m>>0]=a[r>>0]^a[m>>0];m=n+4|0;a[m>>0]=a[q>>0]^a[m>>0];m=n+5|0;a[m>>0]=a[s>>0]^a[m>>0];m=n+6|0;a[m>>0]=a[p>>0]^a[m>>0];m=n+7|0;a[m>>0]=a[o>>0]^a[m>>0];m=f;k=m;a[k>>0]=l;a[k+1>>0]=l>>8;a[k+2>>0]=l>>16;a[k+3>>0]=l>>24;l=m+4|0;a[l>>0]=e;a[l+1>>0]=e>>8;a[l+2>>0]=e>>16;a[l+3>>0]=e>>24;g=g+-8|0;if(!g){i=0;break}else{n=n+8|0;h=h+8|0}}return i|0}return 0}function xx(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;i=l;l=l+144|0;j=i+104|0;k=i+72|0;m=i+40|0;n=i;if(!b){o=-20352;l=i;return o|0}if((c[b>>2]|0)==9){p=Sv(e,k,32)|0;if(!p){q=k+31|0;r=a[k>>0]|0;a[k>>0]=a[q>>0]|0;a[q>>0]=r;r=k+1|0;q=k+30|0;s=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=s;s=k+2|0;q=k+29|0;r=a[s>>0]|0;a[s>>0]=a[q>>0]|0;a[q>>0]=r;r=k+3|0;q=k+28|0;s=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=s;s=k+4|0;q=k+27|0;r=a[s>>0]|0;a[s>>0]=a[q>>0]|0;a[q>>0]=r;r=k+5|0;q=k+26|0;s=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=s;s=k+6|0;q=k+25|0;r=a[s>>0]|0;a[s>>0]=a[q>>0]|0;a[q>>0]=r;r=k+7|0;q=k+24|0;s=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=s;s=k+8|0;q=k+23|0;r=a[s>>0]|0;a[s>>0]=a[q>>0]|0;a[q>>0]=r;r=k+9|0;q=k+22|0;s=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=s;s=k+10|0;q=k+21|0;r=a[s>>0]|0;a[s>>0]=a[q>>0]|0;a[q>>0]=r;r=k+11|0;q=k+20|0;s=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=s;s=k+12|0;q=k+19|0;r=a[s>>0]|0;a[s>>0]=a[q>>0]|0;a[q>>0]=r;r=k+13|0;q=k+18|0;s=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=s;s=k+14|0;q=k+17|0;r=a[s>>0]|0;a[s>>0]=a[q>>0]|0;a[q>>0]=r;r=k+15|0;q=k+16|0;s=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=s;s=Sv(f,m,32)|0;if(!s){q=m+31|0;r=a[m>>0]|0;a[m>>0]=a[q>>0]|0;a[q>>0]=r;r=m+1|0;q=m+30|0;t=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=t;t=m+2|0;q=m+29|0;r=a[t>>0]|0;a[t>>0]=a[q>>0]|0;a[q>>0]=r;r=m+3|0;q=m+28|0;t=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=t;t=m+4|0;q=m+27|0;r=a[t>>0]|0;a[t>>0]=a[q>>0]|0;a[q>>0]=r;r=m+5|0;q=m+26|0;t=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=t;t=m+6|0;q=m+25|0;r=a[t>>0]|0;a[t>>0]=a[q>>0]|0;a[q>>0]=r;r=m+7|0;q=m+24|0;t=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=t;t=m+8|0;q=m+23|0;r=a[t>>0]|0;a[t>>0]=a[q>>0]|0;a[q>>0]=r;r=m+9|0;q=m+22|0;t=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=t;t=m+10|0;q=m+21|0;r=a[t>>0]|0;a[t>>0]=a[q>>0]|0;a[q>>0]=r;r=m+11|0;q=m+20|0;t=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=t;t=m+12|0;q=m+19|0;r=a[t>>0]|0;a[t>>0]=a[q>>0]|0;a[q>>0]=r;r=m+13|0;q=m+18|0;t=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=t;t=m+14|0;q=m+17|0;r=a[t>>0]|0;a[t>>0]=a[q>>0]|0;a[q>>0]=r;r=m+15|0;q=m+16|0;t=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=t;if(!(DD(j,k,m)|0)){m=j+31|0;k=a[j>>0]|0;a[j>>0]=a[m>>0]|0;a[m>>0]=k;k=j+1|0;m=j+30|0;t=a[k>>0]|0;a[k>>0]=a[m>>0]|0;a[m>>0]=t;t=j+2|0;m=j+29|0;k=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=k;k=j+3|0;m=j+28|0;t=a[k>>0]|0;a[k>>0]=a[m>>0]|0;a[m>>0]=t;t=j+4|0;m=j+27|0;k=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=k;k=j+5|0;m=j+26|0;t=a[k>>0]|0;a[k>>0]=a[m>>0]|0;a[m>>0]=t;t=j+6|0;m=j+25|0;k=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=k;k=j+7|0;m=j+24|0;t=a[k>>0]|0;a[k>>0]=a[m>>0]|0;a[m>>0]=t;t=j+8|0;m=j+23|0;k=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=k;k=j+9|0;m=j+22|0;t=a[k>>0]|0;a[k>>0]=a[m>>0]|0;a[m>>0]=t;t=j+10|0;m=j+21|0;k=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=k;k=j+11|0;m=j+20|0;t=a[k>>0]|0;a[k>>0]=a[m>>0]|0;a[m>>0]=t;t=j+12|0;m=j+19|0;k=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=k;k=j+13|0;m=j+18|0;t=a[k>>0]|0;a[k>>0]=a[m>>0]|0;a[m>>0]=t;t=j+14|0;m=j+17|0;k=a[t>>0]|0;a[t>>0]=a[m>>0]|0;a[m>>0]=k;k=j+15|0;m=j+16|0;t=a[k>>0]|0;a[k>>0]=a[m>>0]|0;a[m>>0]=t;u=Rv(d,j,32)|0}else u=-20352}else u=s}else u=p;o=u;l=i;return o|0}else{Bx(n);u=Nx(b,e)|0;if(!u){p=Lx(b,n,f,e,g,h)|0;if(!p)if(!(Ix(n)|0))v=vv(d,n)|0;else v=-20352;else v=p}else v=u;Dx(n);o=v;l=i;return o|0}return 0}function yx(a){a=a|0;ET(a|0,0,308)|0;return}function zx(a){a=a|0;if(!a)return;Ex(a);Dx(a+136|0);Dx(a+172|0);Dx(a+224|0);Dx(a+260|0);sv(a+124|0);sv(a+208|0);sv(a+296|0);return}function Ax(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;if(!a){h=-20352;return h|0}i=a+208|0;j=xx(a,i,a+172|0,a+124|0,f,g)|0;if(j|0){h=j;return h|0}if((Ev(i)|0)>>>0>e>>>0){h=-20352;return h|0}e=c[a+88>>2]|0;a=(e>>>3)+((e&7|0)!=0&1)|0;c[b>>2]=a;h=Sv(i,d,a)|0;return h|0}function Bx(a){a=a|0;if(!a)return;rv(a);rv(a+12|0);rv(a+24|0);return}function Cx(a){a=a|0;var b=0,d=0;if(!a)return;b=a;d=b+124|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(d|0));rv(a+124|0);rv(a+136|0);rv(a+148|0);rv(a+160|0);return}function Dx(a){a=a|0;if(!a)return;sv(a);sv(a+12|0);sv(a+24|0);return}function Ex(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;if(!b)return;d=b+96|0;if((c[d>>2]|0)!=1){sv(b+4|0);sv(b+16|0);sv(b+28|0);sv(b+40|0);sv(b+52|0);sv(b+64|0);sv(b+76|0)}e=b+116|0;f=c[e>>2]|0;g=b+120|0;if(f|0){h=c[g>>2]|0;if(!h)i=f;else{j=0;k=h;h=f;while(1){f=h+(j*36|0)|0;if(!f){l=h;m=k}else{sv(f);sv(h+(j*36|0)+12|0);sv(h+(j*36|0)+24|0);l=c[e>>2]|0;m=c[g>>2]|0}j=j+1|0;if(j>>>0>=m>>>0){i=l;break}else{k=m;h=l}}}CE(i)}a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;a[b+4>>0]=0;a[b+5>>0]=0;a[b+6>>0]=0;a[b+7>>0]=0;a[b+8>>0]=0;a[b+9>>0]=0;a[b+10>>0]=0;a[b+11>>0]=0;a[b+12>>0]=0;a[b+13>>0]=0;a[b+14>>0]=0;a[b+15>>0]=0;a[b+16>>0]=0;a[b+17>>0]=0;a[b+18>>0]=0;a[b+19>>0]=0;a[b+20>>0]=0;a[b+21>>0]=0;a[b+22>>0]=0;a[b+23>>0]=0;a[b+24>>0]=0;a[b+25>>0]=0;a[b+26>>0]=0;a[b+27>>0]=0;a[b+28>>0]=0;a[b+29>>0]=0;a[b+30>>0]=0;a[b+31>>0]=0;a[b+32>>0]=0;a[b+33>>0]=0;a[b+34>>0]=0;a[b+35>>0]=0;a[b+36>>0]=0;a[b+37>>0]=0;a[b+38>>0]=0;a[b+39>>0]=0;a[b+40>>0]=0;a[b+41>>0]=0;a[b+42>>0]=0;a[b+43>>0]=0;a[b+44>>0]=0;a[b+45>>0]=0;a[b+46>>0]=0;a[b+47>>0]=0;a[b+48>>0]=0;a[b+49>>0]=0;a[b+50>>0]=0;a[b+51>>0]=0;a[b+52>>0]=0;a[b+53>>0]=0;a[b+54>>0]=0;a[b+55>>0]=0;a[b+56>>0]=0;a[b+57>>0]=0;a[b+58>>0]=0;a[b+59>>0]=0;a[b+60>>0]=0;a[b+61>>0]=0;a[b+62>>0]=0;a[b+63>>0]=0;a[b+64>>0]=0;a[b+65>>0]=0;a[b+66>>0]=0;a[b+67>>0]=0;a[b+68>>0]=0;a[b+69>>0]=0;a[b+70>>0]=0;a[b+71>>0]=0;a[b+72>>0]=0;a[b+73>>0]=0;a[b+74>>0]=0;a[b+75>>0]=0;a[b+76>>0]=0;a[b+77>>0]=0;a[b+78>>0]=0;a[b+79>>0]=0;a[b+80>>0]=0;a[b+81>>0]=0;a[b+82>>0]=0;a[b+83>>0]=0;a[b+84>>0]=0;a[b+85>>0]=0;a[b+86>>0]=0;a[b+87>>0]=0;a[b+88>>0]=0;a[b+89>>0]=0;a[b+90>>0]=0;a[b+91>>0]=0;a[b+92>>0]=0;a[b+93>>0]=0;a[b+94>>0]=0;a[b+95>>0]=0;a[d>>0]=0;a[b+97>>0]=0;a[b+98>>0]=0;a[b+99>>0]=0;a[b+100>>0]=0;a[b+101>>0]=0;a[b+102>>0]=0;a[b+103>>0]=0;a[b+104>>0]=0;a[b+105>>0]=0;a[b+106>>0]=0;a[b+107>>0]=0;a[b+108>>0]=0;a[b+109>>0]=0;a[b+110>>0]=0;a[b+111>>0]=0;a[b+112>>0]=0;a[b+113>>0]=0;a[b+114>>0]=0;a[b+115>>0]=0;a[e>>0]=0;a[b+117>>0]=0;a[b+118>>0]=0;a[b+119>>0]=0;a[g>>0]=0;a[b+121>>0]=0;a[b+122>>0]=0;a[b+123>>0]=0;return}function Fx(a){a=a|0;if(!a)return;Ex(a);sv(a+124|0);sv(a+136|0);sv(a+148|0);sv(a+160|0);return}function Gx(a,b){a=a|0;b=b|0;var c=0,d=0;c=vv(a,b)|0;if(c|0){d=c;return d|0}c=vv(a+12|0,b+12|0)|0;if(c|0){d=c;return d|0}d=vv(a+24|0,b+24|0)|0;return d|0}function Hx(a,b){a=a|0;b=b|0;return Zx(a,c[b>>2]|0)|0}function Ix(a){a=a|0;return (Uv(a+24|0,0)|0)==0|0}function Jx(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;if(e>>>0>1){i=-20352;return i|0}if(!(Uv(d+24|0,0)|0)){if(!h){i=-20224;return i|0}a[g>>0]=0;c[f>>2]=1;i=0;return i|0}j=Ev(b+4|0)|0;switch(e|0){case 0:{e=j<<1|1;c[f>>2]=e;if(e>>>0>h>>>0){i=-20224;return i|0}a[g>>0]=4;e=g+1|0;b=Sv(d,e,j)|0;if(b|0){i=b;return i|0}i=Sv(d+12|0,e+j|0,j)|0;return i|0}case 1:{e=j+1|0;c[f>>2]=e;if(e>>>0>h>>>0){i=-20224;return i|0}a[g>>0]=(Av(d+12|0,0)|0)+2;i=Sv(d,g+1|0,j)|0;return i|0}default:{i=0;return i|0}}return 0}function Kx(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;do if(e){if(!(a[d>>0]|0)){if((e|0)!=1){f=-20352;break}g=zv(c,1)|0;if(g|0){f=g;break}g=zv(c+12|0,1)|0;if(g|0){f=g;break}f=zv(c+24|0,0)|0;break}g=Ev(b+4|0)|0;if((a[d>>0]|0)==4)if((g<<1|1|0)==(e|0)){h=d+1|0;i=Rv(c,h,g)|0;if(!i){j=Rv(c+12|0,h+g|0,g)|0;if(!j)f=zv(c+24|0,1)|0;else f=j}else f=i}else f=-20352;else f=-20096}else f=-20352;while(0);return f|0}function Lx(b,e,f,g,h,i){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0;j=l;l=l+544|0;k=j+420|0;m=j+408|0;n=j+372|0;o=j+108|0;p=j+96|0;q=j+84|0;r=j+72|0;s=j+60|0;t=j+48|0;u=j+12|0;v=j;w=g+24|0;if(Uv(w,1)|0){x=-20352;l=j;return x|0}y=Mx(b,f)|0;if(y|0){x=y;l=j;return x|0}y=Nx(b,g)|0;if(y|0){x=y;l=j;return x|0}if(!(c[b+60>>2]|0)){rv(u);y=u+12|0;rv(y);z=u+24|0;rv(z);rv(v);A=vv(v,g)|0;a:do if(!A){B=vv(u,g)|0;if(!B){C=vv(y,g+12|0)|0;if(!C){D=vv(z,w)|0;if(!D){E=zv(e,1)|0;if(!E){F=e+24|0;G=zv(F,0)|0;if(!G){sv(e+12|0);H=b+4|0;while(1){if((Tv(u,H)|0)<=-1)break;I=Jv(u,u,H)|0;if(I|0){J=I;break a}}if(h|0){I=((c[b+88>>2]|0)+7|0)>>>3;rv(k);K=0;b:while(1){Zv(k,I,h,i)|0;while(1){if((Tv(k,H)|0)<=-1)break;L=Qv(k,1)|0;if(L|0){M=L;break b}}if((K|0)>10){N=20;break}if((Uv(k,1)|0)<1)K=K+1|0;else{N=22;break}}if((N|0)==20){J=-19712;break}if((N|0)==22){K=Gv(u,u,k)|0;if(!K){I=Ox(u,b)|0;if(!I){L=Gv(z,z,k)|0;if(!L)M=Ox(z,b)|0;else M=L}else M=I}else M=K}sv(k);if(M|0){J=M;break}}K=b+16|0;I=Dv(f)|0;while(1){if(!I)break;I=I+-1|0;L=(Av(f,I)|0)&255;P=yv(e,u,L)|0;if(P|0){J=P;break a}P=yv(F,z,L)|0;if(P|0){J=P;break a}rv(k);rv(m);rv(n);rv(o);rv(p);rv(q);rv(r);rv(s);rv(t);P=Hv(k,e,F)|0;c:do if(!P){while(1){if((Tv(k,H)|0)<=-1)break;Q=Jv(k,k,H)|0;if(Q|0){R=Q;break c}}Q=Gv(m,k,k)|0;if(!Q){S=Ox(m,b)|0;if(S|0){R=S;break}S=Iv(n,e,F)|0;if(S|0){R=S;break}while(1){if((c[n>>2]|0)>=0)break;if(!(Uv(n,0)|0))break;S=Hv(n,n,H)|0;if(S|0){R=S;break c}}S=Gv(o,n,n)|0;if(S|0){R=S;break}S=Ox(o,b)|0;if(S|0){R=S;break}S=Iv(p,m,o)|0;if(S|0){R=S;break}while(1){if((c[p>>2]|0)>=0)break;if(!(Uv(p,0)|0))break;S=Hv(p,p,H)|0;if(S|0){R=S;break c}}S=Hv(q,u,z)|0;if(S|0){R=S;break}while(1){if((Tv(q,H)|0)<=-1)break;S=Jv(q,q,H)|0;if(S|0){R=S;break c}}S=Iv(r,u,z)|0;if(S|0){R=S;break}while(1){if((c[r>>2]|0)>=0)break;if(!(Uv(r,0)|0))break;S=Hv(r,r,H)|0;if(S|0){R=S;break c}}S=Gv(s,r,k)|0;if(S|0){R=S;break}S=Ox(s,b)|0;if(S|0){R=S;break}S=Gv(t,q,n)|0;if(S|0){R=S;break}S=Ox(t,b)|0;if(S|0){R=S;break}S=Hv(u,s,t)|0;if(S|0){R=S;break}S=Ox(u,b)|0;if(S|0){R=S;break}S=Gv(u,u,u)|0;if(S|0){R=S;break}S=Ox(u,b)|0;if(S|0){R=S;break}S=Iv(z,s,t)|0;if(S|0){R=S;break}while(1){if((c[z>>2]|0)>=0)break;if(!(Uv(z,0)|0))break;S=Hv(z,z,H)|0;if(S|0){R=S;break c}}S=Gv(z,z,z)|0;if(S|0){R=S;break}S=Ox(z,b)|0;if(S|0){R=S;break}S=Gv(z,v,z)|0;if(S|0){R=S;break}S=Ox(z,b)|0;if(S|0){R=S;break}S=Gv(e,m,o)|0;if(S|0){R=S;break}S=Ox(e,b)|0;if(S|0){R=S;break}S=Gv(F,K,p)|0;if(S|0){R=S;break}S=Ox(F,b)|0;if(S|0){R=S;break}S=Hv(F,o,F)|0;if(S|0){R=S;break}while(1){if((Tv(F,H)|0)<=-1)break;S=Jv(F,F,H)|0;if(S|0){R=S;break c}}S=Gv(F,p,F)|0;if(S|0){R=S;break}R=Ox(F,b)|0}else R=Q}else R=P;while(0);sv(k);sv(m);sv(n);sv(o);sv(p);sv(q);sv(r);sv(s);sv(t);if(R|0){J=R;break a}P=yv(e,u,L)|0;if(P|0){J=P;break a}P=yv(F,z,L)|0;if(P|0){J=P;break a}}K=_v(F,F,H)|0;if(!K){I=Gv(e,e,F)|0;if(!I){P=Ox(e,b)|0;if(!P)J=zv(F,1)|0;else J=P}else J=I}else J=K}else J=G}else J=E}else J=D}else J=C}else J=B}else J=A;while(0);sv(u);sv(y);sv(z);sv(v);x=J;l=j;return x|0}rv(p);rv(q);J=b+76|0;if((Av(J,0)|0)==1){v=b+92|0;z=(c[v>>2]|0)>>>0>383?5:4;y=g+12|0;if(!(Tv(y,b+52|0)|0))T=(Tv(g,b+40|0)|0)==0&1;else T=0;u=T<<24>>24!=0;A=T+z<<24>>24;z=A<<24>>24==7?6:A&255;A=c[v>>2]|0;v=A>>>0>z>>>0?z:2;z=v+-1|0;R=1<<z;t=R&255;s=A+-1+v|0;A=(s>>>0)/(v>>>0)|0;if(T<<24>>24!=0?(T=c[b+116>>2]|0,(T|0)!=0):0){U=T;V=T;N=116}else N=91;d:do if((N|0)==91){T=R&255;r=DE(T,36)|0;if(!r){W=-19840;X=r;Y=0}else{M=vv(r,g)|0;e:do if(!M){K=vv(r+12|0,y)|0;if(!K){I=vv(r+24|0,w)|0;if(!I){if(v>>>0>s>>>0){P=0;S=1;while(1){Z=r+(S*36|0)|0;_=S>>>1;$=vv(Z,r+(_*36|0)|0)|0;if($|0){aa=$;break e}$=vv(r+(S*36|0)+12|0,r+(_*36|0)+12|0)|0;if($|0){aa=$;break e}$=vv(r+(S*36|0)+24|0,r+(_*36|0)+24|0)|0;if($|0){aa=$;break e}$=P+1<<24>>24;c[k+((P&255)<<2)>>2]=Z;S=S<<1&254;if(S>>>0>=R>>>0){ba=$;break}else P=$}}else{P=0;S=1;while(1){L=r+(S*36|0)|0;$=S>>>1;Z=vv(L,r+($*36|0)|0)|0;if(Z|0){aa=Z;break e}Z=vv(r+(S*36|0)+12|0,r+($*36|0)+12|0)|0;if(Z|0){aa=Z;break e}Z=vv(r+(S*36|0)+24|0,r+($*36|0)+24|0)|0;if(!Z)ca=0;else{aa=Z;break e}do{Z=Px(b,L,L)|0;ca=ca+1|0;if(Z|0){aa=Z;break e}}while(ca>>>0<A>>>0);Q=P+1<<24>>24;c[k+((P&255)<<2)>>2]=L;S=S<<1&254;if(S>>>0>=R>>>0){ba=Q;break}else P=Q}}P=Qx(b,k,ba&255)|0;if(!P){S=0;Q=1;while(1){if(!Q)da=S;else{Z=r+(Q*36|0)|0;$=S;_=Q;while(1){_=_+-1|0;ea=r+((_+Q|0)*36|0)|0;fa=Rx(b,ea,r+(_*36|0)|0,Z)|0;if(fa|0){aa=fa;break e}fa=$+1<<24>>24;c[k+(($&255)<<2)>>2]=ea;if(!_){da=fa;break}else $=fa}}Q=Q<<1&254;if(Q>>>0>=R>>>0)break;else S=da}S=Qx(b,k,da&255)|0;if(S|0){W=S;X=r;Y=r;break d}if(!u){U=r;V=r;N=116;break d}c[b+116>>2]=r;c[b+120>>2]=T;U=r;V=r;N=116;break d}else aa=P}else aa=I}else aa=K}else aa=M;while(0);W=aa;X=r;Y=r}}while(0);if((N|0)==116){aa=(Av(f,0)|0)!=1;da=vv(p,f)|0;if(!da){ba=Iv(q,J,f)|0;if(!ba){f=xv(p,q,aa&1)|0;if(!f){ET(o|0,0,A+1|0)|0;if(v>>>0<=s>>>0){s=0;do{J=o+s|0;ca=0;w=a[J>>0]|0;do{w=((Av(p,(O(ca,A)|0)+s|0)|0)<<ca|w&255)&255;a[J>>0]=w;ca=ca+1|0}while((ca|0)!=(v|0));s=s+1|0}while((s|0)!=(A|0));s=0;v=1;ca=a[o>>0]|0;while(1){w=o+v|0;J=d[w>>0]|0;r=s^J;y=r&1^1;g=ca&255;M=0-y&g;ca=(M^r)&255;a[w>>0]=ca;a[o+(v+-1)>>0]=y<<7|g;v=v+1|0;if(v>>>0>A>>>0)break;else s=M&r|s&J}}rv(n);s=n+12|0;rv(s);v=n+24|0;rv(v);ca=a[o+A>>0]|0;J=(ca&255)>>>1&63;r=t<<24>>24==0;f:do if(r){ga=e+12|0;N=131}else{t=e+12|0;M=R&255;g=0;while(1){y=(J|0)==(g|0)&1;w=xv(e,U+(g*36|0)|0,y)|0;if(w|0){ha=w;break f}w=xv(t,U+(g*36|0)+12|0,y)|0;g=g+1|0;if(w|0){ha=w;break f}if(g>>>0>=M>>>0){ga=t;N=131;break}}}while(0);g:do if((N|0)==131){rv(k);J=b+4|0;t=Iv(k,J,ga)|0;if(!t)ia=xv(ga,k,(Uv(ga,0)|0)!=0&((ca&255)>>>7&255)&255)|0;else ia=t;sv(k);if(!ia){t=e+24|0;M=zv(t,1)|0;if(!M){if(h|0){g=((c[b+88>>2]|0)+7|0)>>>3;rv(k);rv(m);w=0;h:while(1){Zv(k,g,h,i)|0;while(1){if((Tv(k,J)|0)<=-1)break;y=Qv(k,1)|0;if(y|0){ja=y;break h}}if((w|0)>10){N=141;break}if((Uv(k,1)|0)<1)w=w+1|0;else{N=143;break}}if((N|0)==141){ha=-19712;break}do if((N|0)==143){w=Gv(t,t,k)|0;if(w|0){ja=w;break}w=Ox(t,b)|0;if(w|0){ja=w;break}w=Gv(m,k,k)|0;if(w|0){ja=w;break}w=Ox(m,b)|0;if(w|0){ja=w;break}w=Gv(e,e,m)|0;if(w|0){ja=w;break}w=Ox(e,b)|0;if(w|0){ja=w;break}w=Gv(m,m,k)|0;if(w|0){ja=w;break}w=Ox(m,b)|0;if(w|0){ja=w;break}w=Gv(ga,ga,m)|0;if(w|0){ja=w;break}ja=Ox(ga,b)|0}while(0);sv(k);sv(m);if(ja|0){ha=ja;break}}t=R&255;if(r){w=A;while(1){if(!w){ha=0;break g}w=w+-1|0;g=Px(b,e,e)|0;if(g|0){ha=g;break g}g=a[o+w>>0]|0;rv(k);K=Iv(k,J,s)|0;if(!K)ka=xv(s,k,(Uv(s,0)|0)!=0&((g&255)>>>7&255)&255)|0;else ka=K;sv(k);if(ka|0){ha=ka;break g}K=Rx(b,e,e,n)|0;if(K|0){ha=K;break g}}}else la=A;while(1){if(!la){ha=0;break g}la=la+-1|0;w=Px(b,e,e)|0;if(w|0){ha=w;break g}w=a[o+la>>0]|0;K=(w&255)>>>1&63;g=0;do{I=(K|0)==(g|0)&1;P=xv(n,U+(g*36|0)|0,I)|0;if(P|0){ha=P;break g}P=xv(s,U+(g*36|0)+12|0,I)|0;g=g+1|0;if(P|0){ha=P;break g}}while(g>>>0<t>>>0);rv(k);g=Iv(k,J,s)|0;if(!g)ma=xv(s,k,(Uv(s,0)|0)!=0&((w&255)>>>7&255)&255)|0;else ma=g;sv(k);if(ma|0){ha=ma;break g}g=Rx(b,e,e,n)|0;if(g|0){ha=g;break}}}else ha=M}else ha=ia}while(0);sv(n);sv(s);sv(v);if(!ha){rv(k);v=e+12|0;s=Iv(k,b+4|0,v)|0;if(!s)na=xv(v,k,aa&(Uv(v,0)|0)!=0&1)|0;else na=s;sv(k);if(!na){W=Sx(b,e)|0;X=U;Y=V}else{W=na;X=U;Y=V}}else{W=ha;X=U;Y=V}}else{W=f;X=U;Y=V}}else{W=ba;X=U;Y=V}}else{W=da;X=U;Y=V}}if(!(u|(X|0)==0)){u=R&255;if(z>>>0<8){z=0;R=0;do{V=X+(R*36|0)|0;if(V|0){sv(V);sv(X+(R*36|0)+12|0);sv(X+(R*36|0)+24|0)}z=z+1<<24>>24;R=z&255}while(u>>>0>R>>>0)}CE(Y)}sv(p);sv(q);if(W)if(!e)oa=W;else{sv(e);sv(e+12|0);sv(e+24|0);oa=W}else oa=0}else oa=-20352;x=oa;l=j;return x|0}function Mx(a,b){a=a|0;b=b|0;var d=0,e=0;if(c[a+60>>2]|0){if((Uv(b,1)|0)<0){d=-19584;return d|0}d=((Tv(b,a+76|0)|0)>>31&19584)+-19584|0;return d|0}if(Av(b,0)|0){d=-19584;return d|0}if(Av(b,1)|0){d=-19584;return d|0}if(!(Av(b,2)|0)){e=(Dv(b)|0)+-1|0;return ((e|0)==(c[a+92>>2]|0)?0:-19584)|0}else{d=-19584;return d|0}return 0}function Nx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=l;l=l+32|0;e=d+12|0;f=d;if(Uv(b+24|0,1)|0){g=-19584;l=d;return g|0}if(!(c[a+60>>2]|0)){h=Ev(b)|0;g=h>>>0>((c[a+92>>2]|0)+7|0)>>>3>>>0?-19584:0;l=d;return g|0}if((((Uv(b,0)|0)>=0?(h=b+12|0,(Uv(h,0)|0)>=0):0)?(i=a+4|0,(Tv(b,i)|0)<=-1):0)?(Tv(h,i)|0)<=-1:0){rv(e);rv(f);j=Gv(e,h,h)|0;a:do if(!j){h=Ox(e,a)|0;if(!h){k=Gv(f,b,b)|0;if(!k){m=Ox(f,a)|0;if(!m){b:do if(!(c[a+24>>2]|0)){n=Nv(f,f,3)|0;if(n|0){o=n;break a}while(1){if((c[f>>2]|0)>=0)break b;if(!(Uv(f,0)|0))break b;n=Hv(f,f,i)|0;if(n|0){o=n;break a}}}else{n=Hv(f,f,a+16|0)|0;if(n|0){o=n;break a}while(1){if((Tv(f,i)|0)<=-1)break b;n=Jv(f,f,i)|0;if(n|0){o=n;break a}}}while(0);n=Gv(f,f,b)|0;if(!n){p=Ox(f,a)|0;if(!p){q=Hv(f,f,a+28|0)|0;if(!q){while(1){if((Tv(f,i)|0)<=-1)break;r=Jv(f,f,i)|0;if(r|0){o=r;break a}}r=(Tv(e,f)|0)==0;o=r?0:-19584}else o=q}else o=p}else o=n}else o=m}else o=k}else o=h}else o=j;while(0);sv(e);sv(f);s=o}else s=-19584;g=s;l=d;return g|0}function Ox(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=b+100|0;if(!(c[d>>2]|0)){e=Vv(a,a,b+4|0)|0;return e|0}if((c[a>>2]|0)<0?Uv(a,0)|0:0){e=-20352;return e|0}f=Dv(a)|0;if(f>>>0>c[b+88>>2]<<1>>>0){e=-20352;return e|0}f=dd[c[d>>2]&255](a)|0;if(f|0){e=f;return e|0}f=b+4|0;while(1){if((c[a>>2]|0)>=0)break;if(!(Uv(a,0)|0))break;b=Hv(a,a,f)|0;if(b|0){e=b;g=13;break}}if((g|0)==13)return e|0;while(1){if((Tv(a,f)|0)<=-1){e=0;g=13;break}b=Jv(a,a,f)|0;if(b|0){e=b;g=13;break}}if((g|0)==13)return e|0;return 0}function Px(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=l;l=l+48|0;f=e+36|0;g=e+24|0;h=e+12|0;i=e;rv(f);rv(g);rv(h);rv(i);j=a+16|0;a:do if(!(c[a+24>>2]|0)){k=d+24|0;m=Gv(g,k,k)|0;if(!m){k=Ox(g,a)|0;if(!k){n=Hv(h,d,g)|0;if(!n){o=a+4|0;while(1){if((Tv(h,o)|0)<=-1)break;p=Jv(h,h,o)|0;if(p|0){q=p;break a}}p=Iv(i,d,g)|0;if(!p){while(1){if((c[i>>2]|0)>=0)break;if(!(Uv(i,0)|0))break;r=Hv(i,i,o)|0;if(r|0){q=r;break a}}r=Gv(g,h,i)|0;if(!r){s=Ox(g,a)|0;if(!s){t=Mv(f,g,3)|0;if(!t)while(1){if((Tv(f,o)|0)<=-1){u=34;break a}v=Jv(f,f,o)|0;if(v|0){q=v;break}}else q=t}else q=s}else q=r}else q=p}else q=n}else q=k}else q=m}else{o=Gv(g,d,d)|0;if(!o){v=Ox(g,a)|0;if(!v){w=Mv(f,g,3)|0;if(!w){x=a+4|0;while(1){if((Tv(f,x)|0)<=-1)break;y=Jv(f,f,x)|0;if(y|0){q=y;break a}}if(Uv(j,0)|0){m=d+24|0;k=Gv(g,m,m)|0;if(!k){m=Ox(g,a)|0;if(!m){n=Gv(h,g,g)|0;if(!n){p=Ox(h,a)|0;if(!p){r=Gv(g,h,j)|0;if(!r){s=Ox(g,a)|0;if(!s){t=Hv(f,f,g)|0;if(!t)while(1){if((Tv(f,x)|0)<=-1){u=34;break a}y=Jv(f,f,x)|0;if(y|0){q=y;break}}else q=t}else q=s}else q=r}else q=p}else q=n}else q=m}else q=k}else u=34}else q=w}else q=v}else q=o}while(0);b:do if((u|0)==34){j=d+12|0;x=Gv(h,j,j)|0;if(!x){y=Ox(h,a)|0;if(!y){z=Pv(h,1)|0;if(!z){A=a+4|0;while(1){if((Tv(h,A)|0)<=-1)break;B=Jv(h,h,A)|0;if(B|0){q=B;break b}}o=Gv(g,d,h)|0;if(!o){v=Ox(g,a)|0;if(!v){w=Pv(g,1)|0;if(!w){while(1){if((Tv(g,A)|0)<=-1)break;k=Jv(g,g,A)|0;if(k|0){q=k;break b}}k=Gv(i,h,h)|0;if(!k){m=Ox(i,a)|0;if(!m){n=Pv(i,1)|0;if(!n){while(1){if((Tv(i,A)|0)<=-1)break;p=Jv(i,i,A)|0;if(p|0){q=p;break b}}p=Gv(h,f,f)|0;if(!p){r=Ox(h,a)|0;if(!r){s=Iv(h,h,g)|0;if(!s){while(1){if((c[h>>2]|0)>=0)break;if(!(Uv(h,0)|0))break;t=Hv(h,h,A)|0;if(t|0){q=t;break b}}t=Iv(h,h,g)|0;if(!t){while(1){if((c[h>>2]|0)>=0)break;if(!(Uv(h,0)|0))break;B=Hv(h,h,A)|0;if(B|0){q=B;break b}}B=Iv(g,g,h)|0;if(!B){while(1){if((c[g>>2]|0)>=0)break;if(!(Uv(g,0)|0))break;C=Hv(g,g,A)|0;if(C|0){q=C;break b}}C=Gv(g,g,f)|0;if(!C){D=Ox(g,a)|0;if(!D){E=Iv(g,g,i)|0;if(!E){while(1){if((c[g>>2]|0)>=0)break;if(!(Uv(g,0)|0))break;F=Hv(g,g,A)|0;if(F|0){q=F;break b}}F=Gv(i,j,d+24|0)|0;if(!F){G=Ox(i,a)|0;if(G|0){q=G;break}G=Pv(i,1)|0;if(G|0){q=G;break}while(1){if((Tv(i,A)|0)<=-1)break;G=Jv(i,i,A)|0;if(G|0){q=G;break b}}A=vv(b,h)|0;if(A|0){q=A;break}A=vv(b+12|0,g)|0;if(A|0){q=A;break}q=vv(b+24|0,i)|0}else q=F}else q=E}else q=D}else q=C}else q=B}else q=t}else q=s}else q=r}else q=p}else q=n}else q=m}else q=k}else q=w}else q=v}else q=o}else q=z}else q=y}else q=x}while(0);sv(f);sv(g);sv(h);sv(i);l=e;return q|0}function Qx(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=l;l=l+48|0;f=e+24|0;g=e+12|0;h=e;if(d>>>0<2){i=Sx(a,c[b>>2]|0)|0;l=e;return i|0}j=DE(d,12)|0;if(!j){i=-19840;l=e;return i|0}rv(f);rv(g);rv(h);k=vv(j,(c[b>>2]|0)+24|0)|0;a:do if(!k){m=1;do{n=j+(m*12|0)|0;o=Gv(n,j+((m+-1|0)*12|0)|0,(c[b+(m<<2)>>2]|0)+24|0)|0;if(o|0){p=o;break a}o=Ox(n,a)|0;m=m+1|0;if(o|0){p=o;break a}}while(m>>>0<d>>>0);m=d+-1|0;o=_v(f,j+(m*12|0)|0,a+4|0)|0;if(!o){n=a+8|0;q=m;while(1){m=(q|0)==0;if(m){r=vv(g,f)|0;if(r|0){p=r;break a}}else{r=Gv(g,f,j+((q+-1|0)*12|0)|0)|0;if(r|0){p=r;break a}r=Ox(g,a)|0;if(r|0){p=r;break a}r=Gv(f,f,(c[b+(q<<2)>>2]|0)+24|0)|0;if(r|0){p=r;break a}r=Ox(f,a)|0;if(r|0){p=r;break a}}r=Gv(h,g,g)|0;if(r|0){p=r;break a}r=Ox(h,a)|0;if(r|0){p=r;break a}r=b+(q<<2)|0;s=c[r>>2]|0;t=Gv(s,s,h)|0;if(t|0){p=t;break a}t=Ox(c[r>>2]|0,a)|0;if(t|0){p=t;break a}t=(c[r>>2]|0)+12|0;s=Gv(t,t,h)|0;if(s|0){p=s;break a}s=Ox((c[r>>2]|0)+12|0,a)|0;if(s|0){p=s;break a}s=(c[r>>2]|0)+12|0;t=Gv(s,s,g)|0;if(t|0){p=t;break a}t=Ox((c[r>>2]|0)+12|0,a)|0;if(t|0){p=t;break a}t=uv(c[r>>2]|0,c[n>>2]|0)|0;if(t|0){p=t;break a}t=uv((c[r>>2]|0)+12|0,c[n>>2]|0)|0;if(t|0){p=t;break a}sv((c[r>>2]|0)+24|0);if(m){p=0;break}else q=q+-1|0}}else p=o}else p=k;while(0);sv(f);sv(g);sv(h);if(d|0){h=0;do{sv(j+(h*12|0)|0);h=h+1|0}while((h|0)!=(d|0))}CE(j);i=p;l=e;return i|0}function Rx(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;f=l;l=l+96|0;g=f+72|0;h=f+60|0;i=f+48|0;j=f+36|0;k=f+24|0;m=f+12|0;n=f;o=d+24|0;if(!(Uv(o,0)|0)){p=vv(b,e)|0;if(p|0){q=p;l=f;return q|0}p=vv(b+12|0,e+12|0)|0;if(p|0){q=p;l=f;return q|0}q=vv(b+24|0,e+24|0)|0;l=f;return q|0}p=e+24|0;r=e+32|0;do if(c[r>>2]|0){if(Uv(p,0)|0){if(!(c[r>>2]|0))break;if(!(Uv(p,1)|0))break;else q=-20352;l=f;return q|0}s=vv(b,d)|0;if(s|0){q=s;l=f;return q|0}s=vv(b+12|0,d+12|0)|0;if(s|0){q=s;l=f;return q|0}q=vv(b+24|0,o)|0;l=f;return q|0}while(0);rv(g);rv(h);rv(i);rv(j);rv(k);rv(m);rv(n);p=Gv(g,o,o)|0;a:do if(!p){r=Ox(g,a)|0;if(!r){s=Gv(h,g,o)|0;if(!s){t=Ox(h,a)|0;if(!t){u=Gv(g,g,e)|0;if(!u){v=Ox(g,a)|0;if(!v){w=Gv(h,h,e+12|0)|0;if(!w){x=Ox(h,a)|0;if(!x){y=Iv(g,g,d)|0;if(!y){z=a+4|0;while(1){if((c[g>>2]|0)>=0)break;if(!(Uv(g,0)|0))break;A=Hv(g,g,z)|0;if(A|0){B=A;break a}}A=d+12|0;C=Iv(h,h,A)|0;if(!C){while(1){if((c[h>>2]|0)>=0)break;if(!(Uv(h,0)|0))break;D=Hv(h,h,z)|0;if(D|0){B=D;break a}}if(!(Uv(g,0)|0)){if(!(Uv(h,0)|0)){B=Px(a,b,d)|0;break}D=zv(b,1)|0;if(D|0){B=D;break}D=zv(b+12|0,1)|0;if(D|0){B=D;break}B=zv(b+24|0,0)|0;break}D=Gv(n,o,g)|0;if(!D){E=Ox(n,a)|0;if(!E){F=Gv(i,g,g)|0;if(!F){G=Ox(i,a)|0;if(!G){H=Gv(j,i,g)|0;if(!H){I=Ox(j,a)|0;if(!I){J=Gv(i,i,d)|0;if(J|0){B=J;break}J=Ox(i,a)|0;if(J|0){B=J;break}J=Mv(g,i,2)|0;if(J|0){B=J;break}while(1){if((Tv(g,z)|0)<=-1)break;J=Jv(g,g,z)|0;if(J|0){B=J;break a}}J=Gv(k,h,h)|0;if(J|0){B=J;break}J=Ox(k,a)|0;if(J|0){B=J;break}J=Iv(k,k,g)|0;if(J|0){B=J;break}while(1){if((c[k>>2]|0)>=0)break;if(!(Uv(k,0)|0))break;J=Hv(k,k,z)|0;if(J|0){B=J;break a}}J=Iv(k,k,j)|0;if(J|0){B=J;break}while(1){if((c[k>>2]|0)>=0)break;if(!(Uv(k,0)|0))break;J=Hv(k,k,z)|0;if(J|0){B=J;break a}}J=Iv(i,i,k)|0;if(J|0){B=J;break}while(1){if((c[i>>2]|0)>=0)break;if(!(Uv(i,0)|0))break;J=Hv(i,i,z)|0;if(J|0){B=J;break a}}J=Gv(i,i,h)|0;if(J|0){B=J;break}J=Ox(i,a)|0;if(J|0){B=J;break}J=Gv(j,j,A)|0;if(J|0){B=J;break}J=Ox(j,a)|0;if(J|0){B=J;break}J=Iv(m,i,j)|0;if(J|0){B=J;break}while(1){if((c[m>>2]|0)>=0)break;if(!(Uv(m,0)|0))break;J=Hv(m,m,z)|0;if(J|0){B=J;break a}}z=vv(b,k)|0;if(z|0){B=z;break}z=vv(b+12|0,m)|0;if(z|0){B=z;break}B=vv(b+24|0,n)|0}else B=I}else B=H}else B=G}else B=F}else B=E}else B=D}else B=C}else B=y}else B=x}else B=w}else B=v}else B=u}else B=t}else B=s}else B=r}else B=p;while(0);sv(g);sv(h);sv(i);sv(j);sv(k);sv(m);sv(n);q=B;l=f;return q|0}function Sx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0;c=l;l=l+32|0;d=c+12|0;e=c;f=b+24|0;if(!(Uv(f,0)|0)){g=0;l=c;return g|0}rv(d);rv(e);h=_v(d,f,a+4|0)|0;if(!h){i=Gv(e,d,d)|0;if(!i){j=Ox(e,a)|0;if(!j){k=Gv(b,b,e)|0;if(!k){m=Ox(b,a)|0;if(!m){n=b+12|0;b=Gv(n,n,e)|0;if(!b){o=Ox(n,a)|0;if(!o){p=Gv(n,n,d)|0;if(!p){q=Ox(n,a)|0;if(!q)r=zv(f,1)|0;else r=q}else r=p}else r=o}else r=b}else r=m}else r=k}else r=j}else r=i}else r=h;sv(d);sv(e);g=r;l=c;return g|0}function Tx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,m=0,n=0,o=0;h=l;l=l+48|0;i=h;if(!(c[a+60>>2]|0)){j=-20096;l=h;return j|0}rv(i);k=i+12|0;rv(k);m=i+24|0;rv(m);n=Ux(a,i,d,e)|0;if(!n){e=Ux(a,b,f,g)|0;if(!e){g=Rx(a,b,i,b)|0;if(!g)o=Sx(a,b)|0;else o=g}else o=e}else o=n;sv(i);sv(k);sv(m);j=o;l=h;return j|0}function Ux(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;if(!(Uv(c,1)|0)){e=vv(b,d)|0;if(e|0){f=e;return f|0}e=vv(b+12|0,d+12|0)|0;if(e|0){f=e;return f|0}f=vv(b+24|0,d+24|0)|0;return f|0}if(Uv(c,-1)|0){f=Lx(a,b,c,d,0,0)|0;return f|0}c=vv(b,d)|0;if(c|0){f=c;return f|0}c=b+12|0;e=vv(c,d+12|0)|0;if(e|0){f=e;return f|0}e=vv(b+24|0,d+24|0)|0;if(e|0){f=e;return f|0}if(!(Uv(c,0)|0)){f=0;return f|0}f=Iv(c,a+4|0,c)|0;return f|0}function Vx(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;i=l;l=l+112|0;j=i+32|0;k=i;m=b+92|0;n=(c[m>>2]|0)+7|0;o=n>>>3;do if(!(c[b+60>>2]|0)){do{p=Zv(e,o,g,h)|0;if(p|0){q=p;r=29;break}}while(!(Dv(e)|0));if((r|0)==29){l=i;return q|0}p=(Dv(e)|0)+-1|0;s=c[m>>2]|0;if(p>>>0>s>>>0){t=Qv(e,p-s|0)|0;if(t|0){q=t;l=i;return q|0}}else{t=Bv(e,s,1)|0;if(t|0){q=t;l=i;return q|0}}t=Bv(e,0,0)|0;if(t|0){q=t;l=i;return q|0}t=Bv(e,1,0)|0;if(!t){u=Bv(e,2,0)|0;break}else{q=t;l=i;return q|0}}else{t=fd[g&127](h,j,o)|0;a:do if(!t){s=n&-8;p=b+76|0;v=0;while(1){w=Rv(e,j,o)|0;if(w|0){x=w;break a}w=Qv(e,s-(c[m>>2]|0)|0)|0;if(w|0){x=w;break a}if((v|0)>29)break;v=v+1|0;if((Uv(e,1)|0)>=0?(Tv(e,p)|0)<=-1:0){x=0;break a}w=fd[g&127](h,j,o)|0;if(w|0){x=w;break a}}q=-19712;l=i;return q|0}else x=t;while(0);u=x}while(0);if(u|0){q=u;l=i;return q|0}if((c[b>>2]|0)!=9){q=Lx(b,f,e,d,g,h)|0;l=i;return q|0}h=Sv(e,k,32)|0;if(!h){e=k+31|0;g=a[k>>0]|0;a[k>>0]=a[e>>0]|0;a[e>>0]=g;g=k+1|0;e=k+30|0;d=a[g>>0]|0;a[g>>0]=a[e>>0]|0;a[e>>0]=d;d=k+2|0;e=k+29|0;g=a[d>>0]|0;a[d>>0]=a[e>>0]|0;a[e>>0]=g;g=k+3|0;e=k+28|0;d=a[g>>0]|0;a[g>>0]=a[e>>0]|0;a[e>>0]=d;d=k+4|0;e=k+27|0;g=a[d>>0]|0;a[d>>0]=a[e>>0]|0;a[e>>0]=g;g=k+5|0;e=k+26|0;d=a[g>>0]|0;a[g>>0]=a[e>>0]|0;a[e>>0]=d;d=k+6|0;e=k+25|0;g=a[d>>0]|0;a[d>>0]=a[e>>0]|0;a[e>>0]=g;g=k+7|0;e=k+24|0;d=a[g>>0]|0;a[g>>0]=a[e>>0]|0;a[e>>0]=d;d=k+8|0;e=k+23|0;g=a[d>>0]|0;a[d>>0]=a[e>>0]|0;a[e>>0]=g;g=k+9|0;e=k+22|0;d=a[g>>0]|0;a[g>>0]=a[e>>0]|0;a[e>>0]=d;d=k+10|0;e=k+21|0;g=a[d>>0]|0;a[d>>0]=a[e>>0]|0;a[e>>0]=g;g=k+11|0;e=k+20|0;d=a[g>>0]|0;a[g>>0]=a[e>>0]|0;a[e>>0]=d;d=k+12|0;e=k+19|0;g=a[d>>0]|0;a[d>>0]=a[e>>0]|0;a[e>>0]=g;g=k+13|0;e=k+18|0;d=a[g>>0]|0;a[g>>0]=a[e>>0]|0;a[e>>0]=d;d=k+14|0;e=k+17|0;g=a[d>>0]|0;a[d>>0]=a[e>>0]|0;a[e>>0]=g;g=k+15|0;e=k+16|0;d=a[g>>0]|0;a[g>>0]=a[e>>0]|0;a[e>>0]=d;if(!(CD(j,k)|0)){k=j+31|0;d=a[j>>0]|0;a[j>>0]=a[k>>0]|0;a[k>>0]=d;d=j+1|0;k=j+30|0;e=a[d>>0]|0;a[d>>0]=a[k>>0]|0;a[k>>0]=e;e=j+2|0;k=j+29|0;d=a[e>>0]|0;a[e>>0]=a[k>>0]|0;a[k>>0]=d;d=j+3|0;k=j+28|0;e=a[d>>0]|0;a[d>>0]=a[k>>0]|0;a[k>>0]=e;e=j+4|0;k=j+27|0;d=a[e>>0]|0;a[e>>0]=a[k>>0]|0;a[k>>0]=d;d=j+5|0;k=j+26|0;e=a[d>>0]|0;a[d>>0]=a[k>>0]|0;a[k>>0]=e;e=j+6|0;k=j+25|0;d=a[e>>0]|0;a[e>>0]=a[k>>0]|0;a[k>>0]=d;d=j+7|0;k=j+24|0;e=a[d>>0]|0;a[d>>0]=a[k>>0]|0;a[k>>0]=e;e=j+8|0;k=j+23|0;d=a[e>>0]|0;a[e>>0]=a[k>>0]|0;a[k>>0]=d;d=j+9|0;k=j+22|0;e=a[d>>0]|0;a[d>>0]=a[k>>0]|0;a[k>>0]=e;e=j+10|0;k=j+21|0;d=a[e>>0]|0;a[e>>0]=a[k>>0]|0;a[k>>0]=d;d=j+11|0;k=j+20|0;e=a[d>>0]|0;a[d>>0]=a[k>>0]|0;a[k>>0]=e;e=j+12|0;k=j+19|0;d=a[e>>0]|0;a[e>>0]=a[k>>0]|0;a[k>>0]=d;d=j+13|0;k=j+18|0;e=a[d>>0]|0;a[d>>0]=a[k>>0]|0;a[k>>0]=e;e=j+14|0;k=j+17|0;d=a[e>>0]|0;a[e>>0]=a[k>>0]|0;a[k>>0]=d;d=j+15|0;k=j+16|0;e=a[d>>0]|0;a[d>>0]=a[k>>0]|0;a[k>>0]=e;e=Rv(f,j,32)|0;if(!e){j=zv(f+24|0,1)|0;if(!j){sv(f+12|0);y=0}else y=j}else y=e}else y=-20352}else y=h;q=y;l=i;return q|0}function Wx(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Vx(a,a+40|0,b,c,d,e)|0}function Xx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=Zx(b,a)|0;if(e|0){f=e;return f|0}f=Vx(b,b+40|0,b+124|0,b+136|0,c,d)|0;return f|0}function Yx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0;d=l;l=l+160|0;e=d+124|0;f=d;g=c[a>>2]|0;if(!g){h=-20352;l=d;return h|0}if((g|0)!=(c[b>>2]|0)){h=-20352;l=d;return h|0}g=b+136|0;if(Tv(a+136|0,g)|0){h=-20352;l=d;return h|0}i=b+148|0;if(Tv(a+148|0,i)|0){h=-20352;l=d;return h|0}j=b+160|0;if(Tv(a+160|0,j)|0){h=-20352;l=d;return h|0}rv(e);a=e+12|0;rv(a);k=e+24|0;rv(k);m=f;n=m+124|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(n|0));m=Zx(f,c[b>>2]|0)|0;do if(!m){n=Lx(f,e,b+124|0,b+40|0,0,0)|0;if(!n){if(((Tv(e,g)|0)==0?(Tv(a,i)|0)==0:0)?(Tv(k,j)|0)==0:0){o=0;break}o=-20352}else o=n}else o=m;while(0);sv(e);sv(a);sv(k);Ex(f);h=o;l=d;return h|0}function Zx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;Ex(a);c[a>>2]=b;do switch(b|0){case 1:{c[a+100>>2]=231;d=a+4|0;c[d>>2]=1;c[a+8>>2]=6;c[a+12>>2]=14400;c[a+28>>2]=1;c[a+32>>2]=6;c[a+36>>2]=14424;e=a+76|0;c[e>>2]=1;c[a+80>>2]=6;c[a+84>>2]=14448;c[a+40>>2]=1;c[a+44>>2]=6;c[a+48>>2]=14472;c[a+52>>2]=1;c[a+56>>2]=6;c[a+60>>2]=14496;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=14520;c[a+88>>2]=Dv(d)|0;c[a+92>>2]=Dv(e)|0;c[a+96>>2]=1;f=0;return f|0}case 2:{c[a+100>>2]=232;e=a+4|0;c[e>>2]=1;c[a+8>>2]=8;c[a+12>>2]=14524;c[a+28>>2]=1;c[a+32>>2]=7;c[a+36>>2]=14556;d=a+76|0;c[d>>2]=1;c[a+80>>2]=7;c[a+84>>2]=14584;c[a+40>>2]=1;c[a+44>>2]=7;c[a+48>>2]=14612;c[a+52>>2]=1;c[a+56>>2]=7;c[a+60>>2]=14640;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=14520;c[a+88>>2]=Dv(e)|0;c[a+92>>2]=Dv(d)|0;c[a+96>>2]=1;f=0;return f|0}case 3:{c[a+100>>2]=233;d=a+4|0;c[d>>2]=1;c[a+8>>2]=8;c[a+12>>2]=14668;c[a+28>>2]=1;c[a+32>>2]=8;c[a+36>>2]=14700;e=a+76|0;c[e>>2]=1;c[a+80>>2]=8;c[a+84>>2]=14732;c[a+40>>2]=1;c[a+44>>2]=8;c[a+48>>2]=14764;c[a+52>>2]=1;c[a+56>>2]=8;c[a+60>>2]=14796;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=14520;c[a+88>>2]=Dv(d)|0;c[a+92>>2]=Dv(e)|0;c[a+96>>2]=1;f=0;return f|0}case 4:{c[a+100>>2]=234;e=a+4|0;c[e>>2]=1;c[a+8>>2]=12;c[a+12>>2]=14828;c[a+28>>2]=1;c[a+32>>2]=12;c[a+36>>2]=14876;d=a+76|0;c[d>>2]=1;c[a+80>>2]=12;c[a+84>>2]=14924;c[a+40>>2]=1;c[a+44>>2]=12;c[a+48>>2]=14972;c[a+52>>2]=1;c[a+56>>2]=12;c[a+60>>2]=15020;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=14520;c[a+88>>2]=Dv(e)|0;c[a+92>>2]=Dv(d)|0;c[a+96>>2]=1;f=0;return f|0}case 5:{c[a+100>>2]=235;d=a+4|0;c[d>>2]=1;c[a+8>>2]=17;c[a+12>>2]=15068;c[a+28>>2]=1;c[a+32>>2]=17;c[a+36>>2]=15136;e=a+76|0;c[e>>2]=1;c[a+80>>2]=17;c[a+84>>2]=15204;c[a+40>>2]=1;c[a+44>>2]=17;c[a+48>>2]=15272;c[a+52>>2]=1;c[a+56>>2]=17;c[a+60>>2]=15340;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=14520;c[a+88>>2]=Dv(d)|0;c[a+92>>2]=Dv(e)|0;c[a+96>>2]=1;f=0;return f|0}case 10:{c[a+100>>2]=236;e=a+4|0;c[e>>2]=1;c[a+8>>2]=6;c[a+12>>2]=15408;c[a+16>>2]=1;c[a+20>>2]=1;c[a+24>>2]=94072;c[a+28>>2]=1;c[a+32>>2]=1;c[a+36>>2]=15432;d=a+76|0;c[d>>2]=1;c[a+80>>2]=6;c[a+84>>2]=15436;c[a+40>>2]=1;c[a+44>>2]=6;c[a+48>>2]=15460;c[a+52>>2]=1;c[a+56>>2]=6;c[a+60>>2]=15484;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=14520;c[a+88>>2]=Dv(e)|0;c[a+92>>2]=Dv(d)|0;c[a+96>>2]=1;f=0;return f|0}case 11:{c[a+100>>2]=237;d=a+4|0;c[d>>2]=1;c[a+8>>2]=7;c[a+12>>2]=15508;c[a+16>>2]=1;c[a+20>>2]=1;c[a+24>>2]=94076;c[a+28>>2]=1;c[a+32>>2]=1;c[a+36>>2]=15536;e=a+76|0;c[e>>2]=1;c[a+80>>2]=8;c[a+84>>2]=15540;c[a+40>>2]=1;c[a+44>>2]=7;c[a+48>>2]=15572;c[a+52>>2]=1;c[a+56>>2]=7;c[a+60>>2]=15600;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=14520;c[a+88>>2]=Dv(d)|0;c[a+92>>2]=Dv(e)|0;c[a+96>>2]=1;f=0;return f|0}case 12:{c[a+100>>2]=238;e=a+4|0;c[e>>2]=1;c[a+8>>2]=8;c[a+12>>2]=15628;c[a+16>>2]=1;c[a+20>>2]=1;c[a+24>>2]=94080;c[a+28>>2]=1;c[a+32>>2]=1;c[a+36>>2]=15660;d=a+76|0;c[d>>2]=1;c[a+80>>2]=8;c[a+84>>2]=15664;c[a+40>>2]=1;c[a+44>>2]=8;c[a+48>>2]=15696;c[a+52>>2]=1;c[a+56>>2]=8;c[a+60>>2]=15728;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=14520;c[a+88>>2]=Dv(e)|0;c[a+92>>2]=Dv(d)|0;c[a+96>>2]=1;f=0;return f|0}case 6:{d=a+4|0;c[d>>2]=1;c[a+8>>2]=8;c[a+12>>2]=15760;c[a+16>>2]=1;c[a+20>>2]=8;c[a+24>>2]=15792;c[a+28>>2]=1;c[a+32>>2]=8;c[a+36>>2]=15824;e=a+76|0;c[e>>2]=1;c[a+80>>2]=8;c[a+84>>2]=15856;c[a+40>>2]=1;c[a+44>>2]=8;c[a+48>>2]=15888;c[a+52>>2]=1;c[a+56>>2]=8;c[a+60>>2]=15920;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=14520;c[a+88>>2]=Dv(d)|0;c[a+92>>2]=Dv(e)|0;c[a+96>>2]=1;f=0;return f|0}case 7:{e=a+4|0;c[e>>2]=1;c[a+8>>2]=12;c[a+12>>2]=15952;c[a+16>>2]=1;c[a+20>>2]=12;c[a+24>>2]=16e3;c[a+28>>2]=1;c[a+32>>2]=12;c[a+36>>2]=16048;d=a+76|0;c[d>>2]=1;c[a+80>>2]=12;c[a+84>>2]=16096;c[a+40>>2]=1;c[a+44>>2]=12;c[a+48>>2]=16144;c[a+52>>2]=1;c[a+56>>2]=12;c[a+60>>2]=16192;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=14520;c[a+88>>2]=Dv(e)|0;c[a+92>>2]=Dv(d)|0;c[a+96>>2]=1;f=0;return f|0}case 8:{d=a+4|0;c[d>>2]=1;c[a+8>>2]=16;c[a+12>>2]=16240;c[a+16>>2]=1;c[a+20>>2]=16;c[a+24>>2]=16304;c[a+28>>2]=1;c[a+32>>2]=16;c[a+36>>2]=16368;e=a+76|0;c[e>>2]=1;c[a+80>>2]=16;c[a+84>>2]=16432;c[a+40>>2]=1;c[a+44>>2]=16;c[a+48>>2]=16496;c[a+52>>2]=1;c[a+56>>2]=16;c[a+60>>2]=16560;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=14520;c[a+88>>2]=Dv(d)|0;c[a+92>>2]=Dv(e)|0;c[a+96>>2]=1;f=0;return f|0}case 9:{c[a+100>>2]=239;e=Fv(a+16|0,16,76974)|0;if(!e){d=a+4|0;g=zv(d,1)|0;if(!g){h=Pv(d,255)|0;if(!h){i=Nv(d,d,19)|0;if(!i){c[a+88>>2]=Dv(d)|0;d=zv(a+40|0,9)|0;if(!d){j=zv(a+64|0,1)|0;if(!j){sv(a+52|0);c[a+92>>2]=254;f=0;return f|0}else k=j}else k=d}else k=i}else k=h}else k=g}else k=e;Ex(a);f=k;return f|0}default:{Ex(a);f=-20096;return f|0}}while(0);return 0}function _x(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;b=tv(a,12)|0;if(b|0)return b|0;d=a+8|0;e=c[d>>2]|0;f=c[a+4>>2]|0;a=e+(f<<2)|0;g=e+24|0;h=c[g>>2]|0;i=h+(c[e>>2]|0)|0;j=i>>>0<h>>>0&1;k=e+4|0;l=e+28|0;m=(c[k>>2]|0)+j|0;n=c[l>>2]|0;o=n+m|0;p=c[e+40>>2]|0;q=p+i|0;c[e>>2]=q;i=q>>>0<p>>>0&1;q=o+i|0;r=c[e+44>>2]|0;s=r+q|0;c[k>>2]=s;k=(o>>>0<n>>>0&1)+(m>>>0<j>>>0&1)+(q>>>0<i>>>0&1)+(s>>>0<r>>>0&1)|0;s=e+8|0;i=k+(c[s>>2]|0)|0;q=i>>>0<k>>>0&1;k=e+12|0;j=(c[k>>2]|0)+q|0;m=h+i|0;i=m>>>0<h>>>0&1;h=j+i|0;o=n+h|0;t=e+32|0;u=c[t>>2]|0;v=u+m|0;m=v>>>0<u>>>0&1;u=o+m|0;w=c[e+36>>2]|0;x=w+u|0;y=p+v|0;c[s>>2]=y;s=y>>>0<p>>>0&1;p=x+s|0;y=r+p|0;c[k>>2]=y;k=(h>>>0<i>>>0&1)+(j>>>0<q>>>0&1)+(o>>>0<n>>>0&1)+(u>>>0<m>>>0&1)+(x>>>0<w>>>0&1)+(p>>>0<s>>>0&1)+(y>>>0<r>>>0&1)|0;r=e+16|0;y=k+(c[r>>2]|0)|0;c[r>>2]=y;s=y>>>0<k>>>0&1;k=e+20|0;p=(c[k>>2]|0)+s|0;c[k>>2]=p;w=c[d>>2]|0;d=w+32|0;x=(c[d>>2]|0)+y|0;c[r>>2]=x;y=x>>>0<(c[d>>2]|0)>>>0&1;d=w+36|0;m=p+y|0;c[k>>2]=m;u=(c[d>>2]|0)+m|0;c[k>>2]=u;n=u>>>0<(c[d>>2]|0)>>>0&1;d=w+40|0;o=(c[d>>2]|0)+x|0;c[r>>2]=o;r=o>>>0<(c[d>>2]|0)>>>0&1;d=w+44|0;w=u+r|0;c[k>>2]=w;u=(c[d>>2]|0)+w|0;c[k>>2]=u;c[g>>2]=(m>>>0<y>>>0&1)+(p>>>0<s>>>0&1)+n+(w>>>0<r>>>0&1)+(u>>>0<(c[d>>2]|0)>>>0&1);if((f|0)<=7)return b|0;ET(l|0,0,(a>>>0>t>>>0?a:t)+-28+~e+4&-4|0)|0;return b|0}function $x(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;b=l;l=l+48|0;d=b+32|0;e=b;c[d>>2]=1;f=d+4|0;c[f>>2]=8;c[d+8>>2]=e;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;c[e+24>>2]=0;c[e+28>>2]=0;g=tv(a,14)|0;if(g|0){l=b;return g|0}h=c[a+8>>2]|0;i=c[h>>2]|0;j=h+28|0;k=c[j>>2]|0;m=i-k|0;n=c[h+44>>2]|0;o=(i>>>0<k>>>0?255:0)-(m>>>0<n>>>0&1)|0;c[h>>2]=m-n;m=h+4|0;i=c[m>>2]|0;p=o<<24>>24;if((o&255)<<24>>24<0){q=p+i|0;r=(i>>>0<(0-p|0)>>>0)<<31>>31}else{o=p+i|0;q=o;r=o>>>0<p>>>0&1}p=c[h+32>>2]|0;o=q-p|0;i=c[h+48>>2]|0;s=r-(q>>>0<p>>>0&1)+((o>>>0<i>>>0)<<31>>31)|0;c[m>>2]=o-i;o=h+8|0;m=c[o>>2]|0;if((s&255)<<24>>24<0){t=m+s|0;u=(m>>>0<(0-s|0)>>>0)<<31>>31}else{q=m+s|0;t=q;u=q>>>0<s>>>0&1}s=c[h+36>>2]|0;q=t-s|0;m=c[h+52>>2]|0;r=u-(t>>>0<s>>>0&1)+((q>>>0<m>>>0)<<31>>31)|0;c[o>>2]=q-m;q=h+12|0;o=c[q>>2]|0;if((r&255)<<24>>24<0){v=o+r|0;w=(o>>>0<(0-r|0)>>>0)<<31>>31}else{t=o+r|0;v=t;w=t>>>0<r>>>0&1}r=c[h+40>>2]|0;t=v-r+k|0;o=t+n|0;u=w+((v>>>0<r>>>0)<<31>>31)+(t>>>0<k>>>0&1)+(o>>>0<n>>>0&1)|0;c[q>>2]=o;o=h+16|0;q=c[o>>2]|0;if((u&255)<<24>>24<0){x=u+q|0;y=(q>>>0<(0-u|0)>>>0)<<31>>31}else{k=u+q|0;x=k;y=k>>>0<u>>>0&1}u=x-n+p|0;k=u+i|0;q=y+((x>>>0<n>>>0)<<31>>31)+(u>>>0<p>>>0&1)+(k>>>0<i>>>0&1)|0;c[o>>2]=k;k=h+20|0;o=c[k>>2]|0;if((q&255)<<24>>24<0){z=q+o|0;A=(o>>>0<(0-q|0)>>>0)<<31>>31}else{p=q+o|0;z=p;A=p>>>0<q>>>0&1}q=z-i+s|0;p=q+m|0;o=A+((z>>>0<i>>>0)<<31>>31)+(q>>>0<s>>>0&1)+(p>>>0<m>>>0&1)|0;c[k>>2]=p;p=h+24|0;k=c[p>>2]|0;if((o&255)<<24>>24<0){B=o+k|0;C=(k>>>0<(0-o|0)>>>0)<<31>>31}else{s=o+k|0;B=s;C=s>>>0<o>>>0&1}o=B-m+r|0;s=C-(B>>>0<m>>>0&1)+(o>>>0<r>>>0&1)|0;c[p>>2]=o;o=a+4|0;c[j>>2]=(s|0)>0?s:0;if((c[o>>2]|0)>>>0>8){j=8;do{c[h+(j<<2)>>2]=0;j=j+1|0}while(j>>>0<(c[o>>2]|0)>>>0)}if((s&255)<<24>>24>=0){l=b;return g|0}c[e+((c[f>>2]|0)+-1<<2)>>2]=0-s;if(Jv(a,d,a)|0){l=b;return g|0}c[a>>2]=-1;l=b;return g|0}function ay(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;b=l;l=l+48|0;d=b+36|0;e=b;c[d>>2]=1;f=d+4|0;c[f>>2]=9;c[d+8>>2]=e;g=e;h=g+36|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));g=tv(a,16)|0;if(g|0){l=b;return g|0}h=c[a+8>>2]|0;i=h+32|0;j=c[i>>2]|0;k=j+(c[h>>2]|0)|0;m=c[h+36>>2]|0;n=k+m|0;o=c[h+44>>2]|0;p=n-o|0;q=c[h+48>>2]|0;r=p-q|0;s=c[h+52>>2]|0;t=r-s|0;u=c[h+56>>2]|0;v=(n>>>0<m>>>0&1)+(k>>>0<j>>>0&1)+((n>>>0<o>>>0)<<31>>31)+((p>>>0<q>>>0)<<31>>31)+((r>>>0<s>>>0)<<31>>31)+((t>>>0<u>>>0)<<31>>31)|0;c[h>>2]=t-u;t=h+4|0;r=c[t>>2]|0;if((v&255)<<24>>24<0){w=v+r|0;x=(r>>>0<(0-v|0)>>>0)<<31>>31}else{p=v+r|0;w=p;x=p>>>0<v>>>0&1}v=m+w|0;w=c[h+40>>2]|0;p=v+w|0;r=p-q|0;n=r-s|0;k=n-u|0;y=c[h+60>>2]|0;z=x+(v>>>0<m>>>0&1)+(p>>>0<w>>>0&1)+((p>>>0<q>>>0)<<31>>31)+((r>>>0<s>>>0)<<31>>31)+((n>>>0<u>>>0)<<31>>31)+((k>>>0<y>>>0)<<31>>31)|0;c[t>>2]=k-y;k=h+8|0;t=c[k>>2]|0;n=z<<24>>24;if((z&255)<<24>>24<0){A=n+t|0;B=(t>>>0<(0-n|0)>>>0)<<31>>31}else{z=n+t|0;A=z;B=z>>>0<n>>>0&1}n=w+A|0;A=n+o|0;z=A-s|0;t=z-u|0;r=B+(n>>>0<w>>>0&1)+(A>>>0<o>>>0&1)+((A>>>0<s>>>0)<<31>>31)+((z>>>0<u>>>0)<<31>>31)+((t>>>0<y>>>0)<<31>>31)|0;c[k>>2]=t-y;t=h+12|0;k=c[t>>2]|0;z=r<<24>>24;if((r&255)<<24>>24<0){C=z+k|0;D=(k>>>0<(0-z|0)>>>0)<<31>>31}else{r=z+k|0;C=r;D=r>>>0<z>>>0&1}z=o+C|0;C=z+o|0;r=C+q|0;k=r+q|0;A=k+s|0;n=A-y|0;B=n-j|0;p=D+(z>>>0<o>>>0&1)+(C>>>0<o>>>0&1)+(r>>>0<q>>>0&1)+(k>>>0<q>>>0&1)+(A>>>0<s>>>0&1)+((A>>>0<y>>>0)<<31>>31)+((n>>>0<j>>>0)<<31>>31)+((B>>>0<m>>>0)<<31>>31)|0;c[t>>2]=B-m;B=h+16|0;t=c[B>>2]|0;n=p<<24>>24;if((p&255)<<24>>24<0){E=n+t|0;F=(t>>>0<(0-n|0)>>>0)<<31>>31}else{p=n+t|0;E=p;F=p>>>0<n>>>0&1}n=q+E|0;E=n+q|0;p=E+s|0;t=p+s|0;A=t+u|0;k=A-m|0;r=F+(n>>>0<q>>>0&1)+(E>>>0<q>>>0&1)+(p>>>0<s>>>0&1)+(t>>>0<s>>>0&1)+(A>>>0<u>>>0&1)+((A>>>0<m>>>0)<<31>>31)+((k>>>0<w>>>0)<<31>>31)|0;c[B>>2]=k-w;k=h+20|0;B=c[k>>2]|0;A=r<<24>>24;if((r&255)<<24>>24<0){G=A+B|0;H=(B>>>0<(0-A|0)>>>0)<<31>>31}else{r=A+B|0;G=r;H=r>>>0<A>>>0&1}A=s+G|0;G=A+s|0;r=G+u|0;B=r+u|0;t=B+y|0;p=t-w|0;E=H+(A>>>0<s>>>0&1)+(G>>>0<s>>>0&1)+(r>>>0<u>>>0&1)+(B>>>0<u>>>0&1)+(t>>>0<y>>>0&1)+((t>>>0<w>>>0)<<31>>31)+((p>>>0<o>>>0)<<31>>31)|0;c[k>>2]=p-o;p=h+24|0;k=c[p>>2]|0;t=E<<24>>24;if((E&255)<<24>>24<0){I=t+k|0;J=(k>>>0<(0-t|0)>>>0)<<31>>31}else{E=t+k|0;I=E;J=E>>>0<t>>>0&1}t=u+I|0;I=t+u|0;E=I+y|0;k=E+y|0;B=k+u|0;r=B+s|0;G=r-j|0;A=J+(t>>>0<u>>>0&1)+(I>>>0<u>>>0&1)+(E>>>0<y>>>0&1)+(k>>>0<y>>>0&1)+(B>>>0<u>>>0&1)+(r>>>0<s>>>0&1)+((r>>>0<j>>>0)<<31>>31)+((G>>>0<m>>>0)<<31>>31)|0;c[p>>2]=G-m;m=h+28|0;G=c[m>>2]|0;p=A<<24>>24;if((A&255)<<24>>24<0){K=p+G|0;L=(G>>>0<(0-p|0)>>>0)<<31>>31}else{A=p+G|0;K=A;L=A>>>0<p>>>0&1}p=y+K|0;K=p+y|0;A=K+y|0;G=A+j|0;r=G-w|0;u=r-o|0;B=u-q|0;k=L+(p>>>0<y>>>0&1)+(K>>>0<y>>>0&1)+(A>>>0<y>>>0&1)+(G>>>0<j>>>0&1)+((G>>>0<w>>>0)<<31>>31)+((r>>>0<o>>>0)<<31>>31)+((u>>>0<q>>>0)<<31>>31)+((B>>>0<s>>>0)<<31>>31)|0;c[m>>2]=B-s;s=k<<24>>24;B=a+4|0;c[i>>2]=(s|0)>0?s:0;if((c[B>>2]|0)>>>0>9){i=9;do{c[h+(i<<2)>>2]=0;i=i+1|0}while(i>>>0<(c[B>>2]|0)>>>0)}if((k&255)<<24>>24>=0){l=b;return g|0}c[e+((c[f>>2]|0)+-1<<2)>>2]=0-s;if(Jv(a,d,a)|0){l=b;return g|0}c[a>>2]=-1;l=b;return g|0}function by(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;b=l;l=l+64|0;d=b+52|0;e=b;c[d>>2]=1;f=d+4|0;c[f>>2]=13;c[d+8>>2]=e;g=e;h=g+52|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));g=tv(a,24)|0;if(g|0){l=b;return g|0}h=c[a+8>>2]|0;i=h+48|0;j=c[i>>2]|0;k=j+(c[h>>2]|0)|0;m=c[h+84>>2]|0;n=k+m|0;o=c[h+80>>2]|0;p=n+o|0;q=c[h+92>>2]|0;r=(n>>>0<m>>>0&1)+(k>>>0<j>>>0&1)+(p>>>0<o>>>0&1)+((p>>>0<q>>>0)<<31>>31)|0;c[h>>2]=p-q;p=h+4|0;k=c[p>>2]|0;if((r&255)<<24>>24<0){s=r+k|0;t=(k>>>0<(0-r|0)>>>0)<<31>>31}else{n=r+k|0;s=n;t=n>>>0<r>>>0&1}r=c[h+52>>2]|0;n=r+s|0;s=c[h+88>>2]|0;k=n+s|0;u=k+q|0;v=u-j|0;w=t+(n>>>0<r>>>0&1)+(k>>>0<s>>>0&1)+(u>>>0<q>>>0&1)+((u>>>0<j>>>0)<<31>>31)+((v>>>0<o>>>0)<<31>>31)|0;c[p>>2]=v-o;v=h+8|0;p=c[v>>2]|0;u=w<<24>>24;if((w&255)<<24>>24<0){x=u+p|0;y=(p>>>0<(0-u|0)>>>0)<<31>>31}else{w=u+p|0;x=w;y=w>>>0<u>>>0&1}u=c[h+56>>2]|0;w=u+x|0;x=w+q|0;p=x-r|0;k=y+(w>>>0<u>>>0&1)+(x>>>0<q>>>0&1)+((x>>>0<r>>>0)<<31>>31)+((p>>>0<m>>>0)<<31>>31)|0;c[v>>2]=p-m;p=h+12|0;v=c[p>>2]|0;if((k&255)<<24>>24<0){z=k+v|0;A=(v>>>0<(0-k|0)>>>0)<<31>>31}else{x=k+v|0;z=x;A=x>>>0<k>>>0&1}k=c[h+60>>2]|0;x=k+z|0;z=x+j|0;v=z+o|0;w=v+m|0;y=w-u|0;n=y-s|0;t=A+(x>>>0<k>>>0&1)+(z>>>0<j>>>0&1)+(v>>>0<o>>>0&1)+(w>>>0<m>>>0&1)+((w>>>0<u>>>0)<<31>>31)+((y>>>0<s>>>0)<<31>>31)+((n>>>0<q>>>0)<<31>>31)|0;c[p>>2]=n-q;n=h+16|0;p=c[n>>2]|0;y=t<<24>>24;if((t&255)<<24>>24<0){B=y+p|0;C=(p>>>0<(0-y|0)>>>0)<<31>>31}else{t=y+p|0;B=t;C=t>>>0<y>>>0&1}y=m+B|0;B=y+m|0;t=c[h+64>>2]|0;p=B+t|0;w=p+r|0;v=w+j|0;z=v+o|0;x=z+s|0;A=x-k|0;D=A-q|0;E=C+(y>>>0<m>>>0&1)+(B>>>0<m>>>0&1)+(p>>>0<t>>>0&1)+(w>>>0<r>>>0&1)+(v>>>0<j>>>0&1)+(z>>>0<o>>>0&1)+(x>>>0<s>>>0&1)+((x>>>0<k>>>0)<<31>>31)+((A>>>0<q>>>0)<<31>>31)+((D>>>0<q>>>0)<<31>>31)|0;c[n>>2]=D-q;D=h+20|0;n=c[D>>2]|0;A=E<<24>>24;if((E&255)<<24>>24<0){F=A+n|0;G=(n>>>0<(0-A|0)>>>0)<<31>>31}else{E=A+n|0;F=E;G=E>>>0<A>>>0&1}A=s+F|0;F=A+s|0;E=c[h+68>>2]|0;n=F+E|0;x=n+u|0;z=x+r|0;j=z+m|0;v=j+q|0;w=G+(A>>>0<s>>>0&1)+(F>>>0<s>>>0&1)+(n>>>0<E>>>0&1)+(x>>>0<u>>>0&1)+(z>>>0<r>>>0&1)+(j>>>0<m>>>0&1)+(v>>>0<q>>>0&1)+((v>>>0<t>>>0)<<31>>31)|0;c[D>>2]=v-t;v=h+24|0;D=c[v>>2]|0;j=w<<24>>24;if((w&255)<<24>>24<0){H=j+D|0;I=(D>>>0<(0-j|0)>>>0)<<31>>31}else{w=j+D|0;H=w;I=w>>>0<j>>>0&1}j=q+H|0;H=j+q|0;w=c[h+72>>2]|0;D=H+w|0;r=D+k|0;z=r+u|0;x=z+s|0;n=I+(j>>>0<q>>>0&1)+(H>>>0<q>>>0&1)+(D>>>0<w>>>0&1)+(r>>>0<k>>>0&1)+(z>>>0<u>>>0&1)+(x>>>0<s>>>0&1)+((x>>>0<E>>>0)<<31>>31)|0;c[v>>2]=x-E;x=h+28|0;v=c[x>>2]|0;u=n<<24>>24;if((n&255)<<24>>24<0){J=u+v|0;K=(v>>>0<(0-u|0)>>>0)<<31>>31}else{n=u+v|0;J=n;K=n>>>0<u>>>0&1}u=c[h+76>>2]|0;n=u+J|0;J=n+t|0;v=J+k|0;z=v+q|0;r=K+(n>>>0<u>>>0&1)+(J>>>0<t>>>0&1)+(v>>>0<k>>>0&1)+(z>>>0<q>>>0&1)+((z>>>0<w>>>0)<<31>>31)|0;c[x>>2]=z-w;z=h+32|0;x=c[z>>2]|0;k=r<<24>>24;if((r&255)<<24>>24<0){L=k+x|0;M=(x>>>0<(0-k|0)>>>0)<<31>>31}else{r=k+x|0;L=r;M=r>>>0<k>>>0&1}k=o+L|0;L=k+E|0;r=L+t|0;x=M+(k>>>0<o>>>0&1)+(L>>>0<E>>>0&1)+(r>>>0<t>>>0&1)+((r>>>0<u>>>0)<<31>>31)|0;c[z>>2]=r-u;r=h+36|0;z=c[r>>2]|0;if((x&255)<<24>>24<0){N=x+z|0;O=(z>>>0<(0-x|0)>>>0)<<31>>31}else{t=x+z|0;N=t;O=t>>>0<x>>>0&1}x=m+N|0;N=x+w|0;t=N+E|0;z=O+(x>>>0<m>>>0&1)+(N>>>0<w>>>0&1)+(t>>>0<E>>>0&1)+((t>>>0<o>>>0)<<31>>31)|0;c[r>>2]=t-o;t=h+40|0;r=c[t>>2]|0;if((z&255)<<24>>24<0){P=z+r|0;Q=(r>>>0<(0-z|0)>>>0)<<31>>31}else{E=z+r|0;P=E;Q=E>>>0<z>>>0&1}z=s+P|0;P=z+u|0;E=P+w|0;r=Q+(z>>>0<s>>>0&1)+(P>>>0<u>>>0&1)+(E>>>0<w>>>0&1)+((E>>>0<m>>>0)<<31>>31)|0;c[t>>2]=E-m;m=h+44|0;E=c[m>>2]|0;if((r&255)<<24>>24<0){R=r+E|0;S=(E>>>0<(0-r|0)>>>0)<<31>>31}else{t=r+E|0;R=t;S=t>>>0<r>>>0&1}r=q+R|0;R=r+o|0;t=R+u|0;E=S+(r>>>0<q>>>0&1)+(R>>>0<o>>>0&1)+(t>>>0<u>>>0&1)+((t>>>0<s>>>0)<<31>>31)|0;c[m>>2]=t-s;s=a+4|0;c[i>>2]=(E|0)>0?E:0;if((c[s>>2]|0)>>>0>13){i=13;do{c[h+(i<<2)>>2]=0;i=i+1|0}while(i>>>0<(c[s>>2]|0)>>>0)}if((E&255)<<24>>24>=0){l=b;return g|0}c[e+((c[f>>2]|0)+-1<<2)>>2]=0-E;if(Jv(a,d,a)|0){l=b;return g|0}c[a>>2]=-1;l=b;return g|0}function cy(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=l;l=l+96|0;d=b+72|0;e=b;f=a+4|0;g=c[f>>2]|0;if(g>>>0<17){h=0;l=b;return h|0}c[d>>2]=1;i=g+-16|0;g=i>>>0<18?i:18;c[d+4>>2]=g;c[d+8>>2]=e;i=a+8|0;CT(e|0,(c[i>>2]|0)+64|0,g<<2|0)|0;g=Qv(d,9)|0;if(g|0){h=g;l=b;return h|0}g=c[i>>2]|0;i=g+64|0;c[i>>2]=c[i>>2]&511;if((c[f>>2]|0)>>>0>17){i=17;do{c[g+(i<<2)>>2]=0;i=i+1|0}while(i>>>0<(c[f>>2]|0)>>>0)}h=Kv(a,a,d)|0;l=b;return h|0}function dy(a){a=a|0;return hy(a,16640,6)|0}function ey(a){a=a|0;return hy(a,16632,7)|0}function fy(a){a=a|0;return hy(a,16624,8)|0}function gy(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;b=l;l=l+64|0;d=b+40|0;e=b;f=a+4|0;g=c[f>>2]|0;if(g>>>0<8){h=0;l=b;return h|0}c[d>>2]=1;i=g+-7|0;g=d+4|0;j=i>>>0<9?i:9;c[g>>2]=j;c[d+8>>2]=e;i=e;k=i+40|0;do{c[i>>2]=0;i=i+4|0}while((i|0)<(k|0));i=a+8|0;CT(e|0,(c[i>>2]|0)+28|0,j<<2|0)|0;j=Qv(d,31)|0;if(j|0){h=j;l=b;return h|0}c[g>>2]=(c[g>>2]|0)+1;g=Bv(a,255,0)|0;if(g|0){h=g;l=b;return h|0}if((c[f>>2]|0)>>>0>8){g=c[i>>2]|0;i=8;do{c[g+(i<<2)>>2]=0;i=i+1|0}while(i>>>0<(c[f>>2]|0)>>>0)}f=Mv(d,d,19)|0;if(f|0){h=f;l=b;return h|0}h=Kv(a,a,d)|0;l=b;return h|0}function hy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0;e=l;l=l+80|0;f=e+56|0;g=e+44|0;h=e;i=a+4|0;j=c[i>>2]|0;if(j>>>0<d>>>0){k=0;l=e;return k|0}c[g>>2]=1;c[g+8>>2]=b;b=g+4|0;c[b>>2]=2;c[f>>2]=1;c[f+8>>2]=h;m=j-d|0;n=f+4|0;o=m>>>0>d>>>0?d:m;c[n>>2]=o;m=h;p=m+44|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(p|0));q=a+8|0;r=c[q>>2]|0;CT(h|0,r+(d<<2)|0,o<<2|0)|0;c[n>>2]=o+2;if(j>>>0>d>>>0){j=d;do{c[r+(j<<2)>>2]=0;j=j+1|0}while(j>>>0<(c[i>>2]|0)>>>0)}j=Gv(f,f,g)|0;if(j|0){k=j;l=e;return k|0}j=Kv(a,a,f)|0;if(j|0){k=j;l=e;return k|0}j=c[i>>2]|0;r=j-d|0;o=r>>>0>d>>>0?d:r;c[n>>2]=o;m=h;p=m+44|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(p|0));m=c[q>>2]|0;CT(h|0,m+(d<<2)|0,o<<2|0)|0;c[n>>2]=o+(c[b>>2]|0);if(j>>>0>d>>>0){j=d;do{c[m+(j<<2)>>2]=0;j=j+1|0}while(j>>>0<(c[i>>2]|0)>>>0)}i=Gv(f,f,g)|0;if(i|0){k=i;l=e;return k|0}k=Kv(a,a,f)|0;l=e;return k|0}function iy(a){a=a|0;var b=0,d=0,e=0,f=0;ET(a|0,0,37504)|0;FB(a,0);b=a+620|0;xy(b);d=a+216|0;e=c[d>>2]|0;if((e|0)>19)return;c[a+220+(e*20|0)>>2]=49;c[a+220+(e*20|0)+4>>2]=0;c[a+220+(e*20|0)+12>>2]=32;c[a+220+(e*20|0)+16>>2]=1;e=c[d>>2]|0;f=e+1|0;c[d>>2]=f;if((e|0)>18)return;c[a+220+(f*20|0)>>2]=50;c[a+220+(f*20|0)+4>>2]=0;c[a+220+(f*20|0)+12>>2]=4;c[a+220+(f*20|0)+16>>2]=0;f=c[d>>2]|0;e=f+1|0;c[d>>2]=e;if((f|0)>18)return;c[a+220+(e*20|0)>>2]=51;c[a+220+(e*20|0)+4>>2]=b;c[a+220+(e*20|0)+12>>2]=32;c[a+220+(e*20|0)+16>>2]=1;c[d>>2]=(c[d>>2]|0)+1;return}function jy(b){b=b|0;var c=0;zy(b+620|0);c=b;b=37504;while(1){b=b+-1|0;a[c>>0]=0;if(!b)break;else c=c+1|0}return}function ky(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0,q=0,r=0;d=l;l=l+208|0;e=d+200|0;f=d+136|0;g=d+8|0;h=d;i=b+216|0;j=c[i>>2]|0;if(!j){k=-64;l=d;return k|0}if((j|0)<=0){k=-61;l=d;return k|0}j=e+1|0;m=0;n=0;do{n=(c[b+220+(m*20|0)+16>>2]|0)==1?1:n;c[h>>2]=0;o=gd[c[b+220+(m*20|0)>>2]&63](c[b+220+(m*20|0)+4>>2]|0,g,128,h)|0;if(o|0){k=o;p=11;break}o=c[h>>2]|0;if(o|0){if(o>>>0>64){JB(g,o,f,0);q=f;r=64}else{q=g;r=o}a[e>>0]=m;a[j>>0]=r;HB(b,e,2);HB(b,q,r);o=b+220+(m*20|0)+8|0;c[o>>2]=(c[o>>2]|0)+(c[h>>2]|0)}m=m+1|0}while((m|0)<(c[i>>2]|0));if((p|0)==11){l=d;return k|0}k=(n|0)==0?-61:0;l=d;return k|0}function ly(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,m=0,n=0,o=0,p=0;f=l;l=l+64|0;g=f;if(e>>>0>64){h=-60;l=f;return h|0}i=b+216|0;j=b+220|0;k=0;while(1){if((k|0)>256){h=-60;m=11;break}k=k+1|0;n=ky(b)|0;if(n|0){h=n;m=11;break}n=c[i>>2]|0;if((n|0)>0){o=1;p=0}else{m=8;break}do{o=(c[j+(p*20|0)+8>>2]|0)>>>0<(c[j+(p*20|0)+12>>2]|0)>>>0?0:o;p=p+1|0}while((p|0)<(n|0));if(o|0){m=8;break}}if((m|0)==8){o=g;p=o+64|0;do{a[o>>0]=0;o=o+1|0}while((o|0)<(p|0));IB(b,g);ET(b|0,0,216)|0;FB(b,0);HB(b,g,64);JB(g,64,g,0);b=c[i>>2]|0;if((b|0)>0){i=0;do{c[j+(i*20|0)+8>>2]=0;i=i+1|0}while((i|0)<(b|0))}CT(d|0,g|0,e|0)|0;h=0;l=f;return h|0}else if((m|0)==11){l=f;return h|0}return 0}function my(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;c[e>>2]=0;a=wG(76981,76994)|0;if(!a){f=-60;return f|0}g=(_G(b,1,d,a)|0)==(d|0);CG(a)|0;if(!g){f=-60;return f|0}c[e>>2]=d;f=0;return f|0}function ny(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=KB()|0;c[f>>2]=0;if(e>>>0<4)return 0;a[d>>0]=b;a[d+1>>0]=b>>8;a[d+2>>0]=b>>16;a[d+3>>0]=b>>24;c[f>>2]=4;return 0}function oy(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;c[e>>2]=0;if(Ay(a,b,d)|0){f=-60;return f|0}c[e>>2]=d;f=0;return f|0}\nfunction cT(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;a:do if(!(oS(b,c[d+8>>2]|0,g)|0)){if(!(oS(b,c[d>>2]|0,g)|0)){h=c[b+12>>2]|0;i=b+16+(h<<3)|0;gT(b+16|0,d,e,f,g);j=b+24|0;if((h|0)<=1)break;h=c[b+8>>2]|0;if((h&2|0)==0?(k=d+36|0,(c[k>>2]|0)!=1):0){if(!(h&1)){h=d+54|0;l=j;while(1){if(a[h>>0]|0)break a;if((c[k>>2]|0)==1)break a;gT(l,d,e,f,g);l=l+8|0;if(l>>>0>=i>>>0)break a}}l=d+24|0;h=d+54|0;m=j;while(1){if(a[h>>0]|0)break a;if((c[k>>2]|0)==1?(c[l>>2]|0)==1:0)break a;gT(m,d,e,f,g);m=m+8|0;if(m>>>0>=i>>>0)break a}}m=d+54|0;l=j;while(1){if(a[m>>0]|0)break a;gT(l,d,e,f,g);l=l+8|0;if(l>>>0>=i>>>0)break a}}if((c[d+16>>2]|0)!=(e|0)?(i=d+20|0,(c[i>>2]|0)!=(e|0)):0){c[d+32>>2]=f;l=d+44|0;if((c[l>>2]|0)==4)break;m=b+16+(c[b+12>>2]<<3)|0;j=d+52|0;k=d+53|0;h=d+54|0;n=b+8|0;o=d+24|0;p=0;q=b+16|0;r=0;b:while(1){if(q>>>0>=m>>>0){s=p;t=18;break}a[j>>0]=0;a[k>>0]=0;fT(q,d,e,e,1,g);if(a[h>>0]|0){s=p;t=18;break}do if(a[k>>0]|0){if(!(a[j>>0]|0))if(!(c[n>>2]&1)){s=1;t=18;break b}else{u=1;v=r;break}if((c[o>>2]|0)==1){t=23;break b}if(!(c[n>>2]&2)){t=23;break b}else{u=1;v=1}}else{u=p;v=r}while(0);p=u;q=q+8|0;r=v}do if((t|0)==18){if((!r?(c[i>>2]=e,q=d+40|0,c[q>>2]=(c[q>>2]|0)+1,(c[d+36>>2]|0)==1):0)?(c[o>>2]|0)==2:0){a[h>>0]=1;if(s){t=23;break}else{w=4;break}}if(s)t=23;else w=4}while(0);if((t|0)==23)w=3;c[l>>2]=w;break}if((f|0)==1)c[d+32>>2]=1}else qS(0,d,e,f);while(0);return}function dT(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;a:do if(!(oS(b,c[d+8>>2]|0,0)|0)){g=c[b+12>>2]|0;h=b+16+(g<<3)|0;eT(b+16|0,d,e,f);if((g|0)>1){g=d+54|0;i=b+24|0;do{eT(i,d,e,f);if(a[g>>0]|0)break a;i=i+8|0}while(i>>>0<h>>>0)}}else pS(0,d,e,f);while(0);return}function eT(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[a+4>>2]|0;g=f>>8;if(!(f&1))h=g;else h=c[(c[d>>2]|0)+g>>2]|0;g=c[a>>2]|0;ud[c[(c[g>>2]|0)+28>>2]&63](g,b,d+h|0,f&2|0?e:2);return}function fT(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=c[a+4>>2]|0;i=h>>8;if(!(h&1))j=i;else j=c[(c[e>>2]|0)+i>>2]|0;i=c[a>>2]|0;wd[c[(c[i>>2]|0)+20>>2]&31](i,b,d,e+j|0,h&2|0?f:2,g);return}function gT(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=c[a+4>>2]|0;h=g>>8;if(!(g&1))i=h;else i=c[(c[d>>2]|0)+h>>2]|0;h=c[a>>2]|0;vd[c[(c[h>>2]|0)+24>>2]&31](h,b,d+i|0,g&2|0?e:2,f);return}function hT(a){a=a|0;c[a>>2]=57600;return}function iT(b){b=b|0;var c=0;if((a[b>>0]|0)==1)c=0;else{a[b>>0]=1;c=1}return c|0}function jT(a){a=a|0;return}function kT(a){a=a|0;return}function lT(a){a=a|0;c[a>>2]=57520;return}function mT(){var a=0;a=c[26223]|0;c[26223]=a+0;return a|0}function nT(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=l;l=l+16|0;f=e;c[f>>2]=c[d>>2];g=fd[c[(c[a>>2]|0)+16>>2]&127](a,b,f)|0;if(g)c[d>>2]=c[f>>2];l=e;return g&1|0}function oT(a){a=a|0;var b=0;if(!a)b=0;else b=(sS(a,7064,7200,0)|0)!=0&1;return b|0}function pT(){}function qT(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=O(d,c)|0;f=a>>>16;a=(e>>>16)+(O(d,f)|0)|0;d=b>>>16;b=O(d,c)|0;return (z=(a>>>16)+(O(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function rT(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=qT(e,a)|0;f=z;return (z=(O(b,a)|0)+(O(d,e)|0)+f|f&0,c|0|0)|0}function sT(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return (z=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function tT(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return (z=e,a-c>>>0|0)|0}function uT(b){b=b|0;var c=0;c=a[n+(b&255)>>0]|0;if((c|0)<8)return c|0;c=a[n+(b>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return (a[n+(b>>>24)>>0]|0)+24|0}function vT(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;g=a;h=b;i=h;j=d;k=e;l=k;if(!i){m=(f|0)!=0;if(!l){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return (z=n,o)|0}else{if(!m){n=0;o=0;return (z=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return (z=n,o)|0}}m=(l|0)==0;do if(j){if(!m){p=(R(l|0)|0)-(R(i|0)|0)|0;if(p>>>0<=31){q=p+1|0;r=31-p|0;s=p-31>>31;t=q;u=g>>>(q>>>0)&s|i<<r;v=i>>>(q>>>0)&s;w=0;x=g<<r;break}if(!f){n=0;o=0;return (z=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return (z=n,o)|0}r=j-1|0;if(r&j|0){s=(R(j|0)|0)+33-(R(i|0)|0)|0;q=64-s|0;p=32-s|0;y=p>>31;A=s-32|0;B=A>>31;t=s;u=p-1>>31&i>>>(A>>>0)|(i<<p|g>>>(s>>>0))&B;v=B&i>>>(s>>>0);w=g<<q&y;x=(i<<q|g>>>(A>>>0))&y|g<<p&s-33>>31;break}if(f|0){c[f>>2]=r&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return (z=n,o)|0}else{r=uT(j|0)|0;n=i>>>(r>>>0)|0;o=i<<32-r|g>>>(r>>>0)|0;return (z=n,o)|0}}else{if(m){if(f|0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return (z=n,o)|0}if(!g){if(f|0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return (z=n,o)|0}r=l-1|0;if(!(r&l)){if(f|0){c[f>>2]=a|0;c[f+4>>2]=r&i|b&0}n=0;o=i>>>((uT(l|0)|0)>>>0);return (z=n,o)|0}r=(R(l|0)|0)-(R(i|0)|0)|0;if(r>>>0<=30){s=r+1|0;p=31-r|0;t=s;u=i<<p|g>>>(s>>>0);v=i>>>(s>>>0);w=0;x=g<<p;break}if(!f){n=0;o=0;return (z=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return (z=n,o)|0}while(0);if(!t){C=x;D=w;E=v;F=u;G=0;H=0}else{b=d|0|0;d=k|e&0;e=sT(b|0,d|0,-1,-1)|0;k=z;h=x;x=w;w=v;v=u;u=t;t=0;do{a=h;h=x>>>31|h<<1;x=t|x<<1;g=v<<1|a>>>31|0;a=v>>>31|w<<1|0;tT(e|0,k|0,g|0,a|0)|0;i=z;l=i>>31|((i|0)<0?-1:0)<<1;t=l&1;v=tT(g|0,a|0,l&b|0,(((i|0)<0?-1:0)>>31|((i|0)<0?-1:0)<<1)&d|0)|0;w=z;u=u-1|0}while((u|0)!=0);C=h;D=x;E=w;F=v;G=0;H=t}t=D;D=0;if(f|0){c[f>>2]=F;c[f+4>>2]=E}n=(t|0)>>>31|(C|D)<<1|(D<<1|t>>>31)&0|G;o=(t<<1|0>>>31)&-2|H;return (z=n,o)|0}function wT(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return vT(a,b,c,d,0)|0}function xT(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=l;l=l+16|0;g=f|0;vT(a,b,d,e,g)|0;l=f;return (z=c[g+4>>2]|0,c[g>>2]|0)|0}function yT(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){z=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}z=(b|0)<0?-1:0;return b>>c-32|0}function zT(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){z=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}z=0;return b>>>c-32|0}function AT(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){z=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}z=a<<c-32;return 0}function BT(a){a=a|0;return (a&255)<<24|(a>>8&255)<<16|(a>>16&255)<<8|a>>>24|0}function CT(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((e|0)>=8192)return Tb(b|0,d|0,e|0)|0;f=b|0;g=b+e|0;if((b&3)==(d&3)){while(b&3){if(!e)return f|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}h=g&-4|0;e=h-64|0;while((b|0)<=(e|0)){c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];c[b+12>>2]=c[d+12>>2];c[b+16>>2]=c[d+16>>2];c[b+20>>2]=c[d+20>>2];c[b+24>>2]=c[d+24>>2];c[b+28>>2]=c[d+28>>2];c[b+32>>2]=c[d+32>>2];c[b+36>>2]=c[d+36>>2];c[b+40>>2]=c[d+40>>2];c[b+44>>2]=c[d+44>>2];c[b+48>>2]=c[d+48>>2];c[b+52>>2]=c[d+52>>2];c[b+56>>2]=c[d+56>>2];c[b+60>>2]=c[d+60>>2];b=b+64|0;d=d+64|0}while((b|0)<(h|0)){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0}}else{h=g-4|0;while((b|0)<(h|0)){a[b>>0]=a[d>>0]|0;a[b+1>>0]=a[d+1>>0]|0;a[b+2>>0]=a[d+2>>0]|0;a[b+3>>0]=a[d+3>>0]|0;b=b+4|0;d=d+4|0}}while((b|0)<(g|0)){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0}return f|0}function DT(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0}b=e}else CT(b,c,d)|0;return b|0}function ET(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;d=d&255;if((e|0)>=67){while(b&3){a[b>>0]=d;b=b+1|0}g=f&-4|0;h=g-64|0;i=d|d<<8|d<<16|d<<24;while((b|0)<=(h|0)){c[b>>2]=i;c[b+4>>2]=i;c[b+8>>2]=i;c[b+12>>2]=i;c[b+16>>2]=i;c[b+20>>2]=i;c[b+24>>2]=i;c[b+28>>2]=i;c[b+32>>2]=i;c[b+36>>2]=i;c[b+40>>2]=i;c[b+44>>2]=i;c[b+48>>2]=i;c[b+52>>2]=i;c[b+56>>2]=i;c[b+60>>2]=i;b=b+64|0}while((b|0)<(g|0)){c[b>>2]=i;b=b+4|0}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0}return f-e|0}function FT(a){a=a|0;return 0}function GT(a){a=a|0;return 0}function HT(a){a=a|0;return 0}function IT(a){a=a|0;var b=0,d=0;b=c[i>>2]|0;d=b+a|0;if((a|0)>0&(d|0)<(b|0)|(d|0)<0){W()|0;ab(12);return -1}c[i>>2]=d;if((d|0)>(V()|0)?(U()|0)==0:0){c[i>>2]=b;ab(12);return -1}return b|0}function JT(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return +bd[a&7](b|0,c|0,d|0)}function KT(a){a=a|0;return cd[a&63]()|0}function LT(a,b){a=a|0;b=b|0;return dd[a&255](b|0)|0}function MT(a,b,c){a=a|0;b=b|0;c=c|0;return ed[a&255](b|0,c|0)|0}function NT(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return fd[a&127](b|0,c|0,d|0)|0}function OT(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return gd[a&63](b|0,c|0,d|0,e|0)|0}function PT(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;return hd[a&7](b|0,c|0,d|0,e|0,+f)|0}function QT(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return id[a&63](b|0,c|0,d|0,e|0,f|0)|0}function RT(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;return jd[a&3](b|0,c|0,d|0,e|0,f|0,+g)|0}function ST(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return kd[a&63](b|0,c|0,d|0,e|0,f|0,g|0)|0}function TT(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return ld[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function UT(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return md[a&31](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function VT(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;return nd[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)|0}function WT(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;return od[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0,l|0)|0}function XT(a,b,c,d,e,f,g,h,i,j,k,l,m){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;return pd[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0,l|0,m|0)|0}function YT(a){a=a|0;qd[a&63]()}function ZT(a,b){a=a|0;b=b|0;rd[a&511](b|0)}function _T(a,b,c){a=a|0;b=b|0;c=c|0;sd[a&255](b|0,c|0)}function $T(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;td[a&127](b|0,c|0,d|0)}function aU(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ud[a&63](b|0,c|0,d|0,e|0)}function bU(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;vd[a&31](b|0,c|0,d|0,e|0,f|0)}function cU(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;wd[a&31](b|0,c|0,d|0,e|0,f|0,g|0)}function dU(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;xd[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function eU(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;yd[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)}function fU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;zd[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0,l|0,m|0,n|0,o|0,p|0)}function gU(a,b,c){a=a|0;b=b|0;c=c|0;S(0);return 0.0}function hU(a,b,c){a=a|0;b=b|0;c=c|0;return +Db(a|0,b|0,c|0)}function iU(){S(1);return 0}function jU(a){a=a|0;S(2);return 0}function kU(a){a=a|0;return HT(a|0)|0}function lU(a){a=a|0;return GT(a|0)|0}function mU(a){a=a|0;return FT(a|0)|0}function nU(a,b){a=a|0;b=b|0;S(3);return 0}function oU(a,b){a=a|0;b=b|0;return Ib(a|0,b|0)|0}function pU(a,b){a=a|0;b=b|0;return Ob(a|0,b|0)|0}function qU(a,b){a=a|0;b=b|0;return Hb(a|0,b|0)|0}function rU(a,b,c){a=a|0;b=b|0;c=c|0;S(4);return 0}function sU(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;S(5);return 0}function tU(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;S(6);return 0}function uU(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;S(7);return 0}function vU(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;S(8);return 0}function wU(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;S(9);return 0}function xU(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;S(10);return 0}function yU(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;S(11);return 0}function zU(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;S(12);return 0}function AU(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;S(13);return 0}function BU(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;S(14);return 0}function CU(){S(15)}function DU(){Ua()}function EU(){Na()}function FU(){Va()}function GU(a){a=a|0;S(16)}function HU(a){a=a|0;Qb(a|0)}function IU(a){a=a|0;Gb(a|0)}function JU(a){a=a|0;Nb(a|0)}function KU(a){a=a|0;Jb(a|0)}function LU(a,b){a=a|0;b=b|0;S(17)}function MU(a,b,c){a=a|0;b=b|0;c=c|0;S(18)}function NU(a,b,c){a=a|0;b=b|0;c=c|0;Xa(a|0,b|0,c|0)}function OU(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;S(19)}function PU(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Fb(a|0,b|0,c|0,d|0)}function QU(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ha(a|0,b|0,c|0,d|0)}function RU(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;S(20)}function SU(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;S(21)}function TU(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;S(22)}function UU(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;S(23)}function VU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;S(24)}\n\n// EMSCRIPTEN_END_FUNCS\nvar bd=[gU,hU,nJ,qJ,sJ,gU,gU,gU];var cd=[iU,Fw,Nw,Qw,Tw,Zw,Vy,az,iz,sz,aA,kA,rA,yA,SB,ZB,Ls,Ms,Ns,Os,on,pn,qn,jf,rf,Cf,Lf,ag,dh,lh,th,ye,Hi,aj,ij,Xj,bJ,IF,KF,LF,HF,WQ,YQ,_Q,eS,iU,iU,iU,iU,iU,iU,iU,iU,iU,iU,iU,iU,iU,iU,iU,iU,iU,iU,iU];var dd=[jU,BH,CH,ae,FH,Ag,Vg,ho,Gm,Mm,Pm,Vm,fn,mn,Zm,dn,HS,co,vr,uu,vu,Wu,Vz,Wz,dA,eA,nA,oA,tA,uA,AA,WB,bC,HE,EH,$H,QS,OK,VK,WK,XK,YK,ZK,_K,$K,wL,DL,EL,FL,GL,HL,IL,JL,rM,sM,xM,DM,EM,JM,OM,PM,UM,ZM,_M,dN,_N,$N,bO,qO,rO,tO,YO,ZO,dP,eP,jO,kO,mO,zO,AO,CO,FS,KS,US,ke,me,ne,oe,qe,He,zp,Xe,Pd,zm,ef,gf,hf,kf,pf,sf,tf,Cq,yf,Af,Bf,Df,Ef,Jf,Mf,Do,Uf,_f,bg,cg,Jr,Mr,ng,tg,vg,wg,rg,Ig,Og,Qg,Rg,Mg,$g,bh,ch,eh,jh,mh,ph,rh,sh,uh,we,ze,de,zh,Bh,hp,gp,Lh,Nh,Ph,aq,cq,eq,$h,bi,vq,gi,ni,pi,si,ui,cr,dr,fr,er,gr,hr,ir,jr,kr,Fi,Ii,Ak,Bk,Gk,Jk,Ui,Gs,Hs,Is,Js,Ks,_i,bj,cj,us,vs,gj,jj,kj,qs,rs,ss,qj,es,fs,gs,vj,ls,ms,Aj,is,js,Gj,Bs,Cs,Ds,Nj,xs,ys,zs,Uj,Yj,kR,Gg,Cy,Pk,Ix,DC,Uz,cm,mo,oo,qo,et,Ys,Qy,Ry,Py,fp,Br,il,cw,tt,Rt,_x,$x,ay,by,cy,dy,ey,fy,gy,nG,kU,lU,mU,jU,jU,jU,jU,jU,jU,jU,jU,jU,jU,jU,jU];var ed=[nU,be,ce,Lm,Um,ln,cn,cR,$z,jA,xA,FC,IC,GH,IH,LO,NO,PO,oP,qP,sP,Fe,Je,Le,Ne,yp,Te,We,rm,bf,cf,df,uf,vf,Ff,Nf,Fo,Wf,Xf,dg,hg,kg,pg,zg,Kg,Lg,Ug,Ce,Ch,Dh,Hh,Jh,Kh,Qh,Rh,Th,Uh,Wh,Yh,ci,ei,ii,qi,vi,wi,xi,yi,Ai,Ei,Ji,Ik,Ri,Yi,Zi,dj,ej,fj,lj,mj,oj,pj,uj,xj,zj,Cj,Fj,Ij,Mj,Pj,Tj,bk,oU,pU,_I,qU,vt,yz,zk,Sz,jI,xI,Nz,Uv,Hx,Gx,vv,Xk,el,ql,sl,wt,vl,pt,Bl,uI,wI,Dm,kt,xt,ot,$s,Ez,Iy,My,qq,Cz,Jt,zt,ut,Hz,jG,iG,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU,nU];var fd=[rU,yH,DH,HH,hk,tn,VR,WR,yo,Vo,Mp,Yp,Qq,Pt,Ut,Zt,au,fu,ju,nu,Dw,Ew,Hw,Iw,Lw,Mw,Pw,Sw,Xw,Yw,XB,YB,cC,dC,IE,JE,OE,GF,FI,LI,ON,TN,MO,OO,RO,kP,pP,rP,uP,kS,WS,YS,$S,he,Ke,Me,Qe,xp,Se,Ve,$e,Pf,Sf,Yf,ig,Hg,De,ue,Eh,Sh,di,wq,ji,ki,Di,Ck,Pi,Qi,nj,sj,yj,Dj,Jj,Kj,Qj,Rj,$j,ak,gx,tk,ly,QA,zI,SA,VA,TA,WA,rl,vI,qt,xw,yw,zw,Dz,ev,fv,jw,rw,qw,pw,ow,hD,NE,HG,pG,lG,YG,hH,mN,HR,wN,RR,vF,uG,SG,iH,rU,rU];var gd=[sU,Aq,Bw,Jw,Vw,UB,$B,EC,GC,HC,JC,KC,LC,QO,lP,mP,nP,tP,Oe,Pe,Re,Ue,mf,of,Eq,Gf,Sd,lg,Nq,Ee,Ih,_h,fi,li,mi,Si,hl,Wi,tj,Lj,Sj,yC,bl,Jl,Nm,dm,Xl,Jy,gv,my,ny,oy,cJ,wJ,yJ,AJ,CJ,EJ,GJ,uK,UG,ZF,gG,sU];var hd=[tU,oK,pK,FK,GK,tU,tU,tU];var id=[uU,wD,PB,DI,JI,jK,kK,mK,qK,AK,BK,DK,HK,ZN,aO,pO,sO,SO,vP,iO,lO,yO,BO,wf,xf,Hf,If,mg,nh,oh,Ti,Xi,Zj,_j,dx,LA,pv,qv,ww,WG,TG,uU,uU,uU,uU,uU,uU,uU,uU,uU,uU,uU,uU,uU,uU,uU,uU,uU,uU,uU,uU,uU,uU,uU];var jd=[vU,CN,IN,vU];var kd=[wU,Cw,Kw,Ww,Xz,fA,pA,BA,VB,aC,PI,QI,RI,SI,TI,UI,VI,WI,XI,YI,ZI,KJ,LJ,MJ,NJ,OJ,PJ,QJ,RJ,SJ,TJ,UJ,lK,nK,CK,EK,PK,QK,RK,SK,TK,xL,yL,zL,AL,BL,DN,JN,nf,ri,ie,Ax,Oy,OB,IK,wU,wU,wU,wU,wU,wU,wU,wU,wU];var ld=[xU,fM,lM,iN,jN,tN,uN,UA,XA,HJ,gK,xU,xU,xU,xU,xU];var md=[yU,Yz,Zz,_z,gA,hA,iA,qA,vA,wA,CA,UK,CL,XN,YN,nO,oO,gO,hO,wO,xO,Rz,Qz,IA,JA,yU,yU,yU,yU,yU,yU,yU];var nd=[zU,FA,aJ,VJ];var od=[AU,lN,vN,AU];var pd=[BU,mJ,YJ,BU];var qd=[CU,DU,dS,EU,oR,cL,bL,aL,NL,ML,LL,FP,HP,LP,NP,PP,RP,TP,ZP,$P,bQ,dQ,fQ,hQ,jQ,lQ,nQ,pQ,rQ,tQ,vQ,xQ,zQ,BQ,DQ,FQ,FU,yS,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU,CU];var rd=[GU,Jd,Wd,Vd,Xd,VH,WH,XH,YH,Yd,Zd,jm,lf,Dg,Cg,Eg,Xg,Yg,Zg,fh,vh,fk,gk,nk,ok,pk,qk,QH,RH,SH,TH,Ql,Rl,Sl,Tl,km,Em,Fm,Im,Jm,Om,Rm,Sm,Xm,en,hn,jn,Ym,$m,an,rn,sn,GS,Tn,TR,bo,jk,go,wo,xo,To,Uo,Kp,Lp,Wp,Xp,kq,lq,Oq,Pq,ur,Er,Fr,Nt,Ot,St,Tt,Xt,Yt,xn,$t,du,eu,hu,iu,lu,mu,Au,Bu,Cu,Du,yu,zu,Iu,Ju,Ku,Lu,Gu,Hu,Qu,Ru,Su,Tu,Ou,Pu,Xu,Yu,Gw,Ow,Rw,Uw,_w,Sy,Wy,Zy,bz,ez,jz,mz,oz,tz,wz,bA,lA,sA,zA,TB,_B,jH,kH,sH,uH,vH,wH,_H,dI,eI,AI,BI,CI,HI,II,NI,OI,IJ,JJ,hK,iK,yK,zK,MK,NK,uL,vL,dM,eM,jM,kM,pM,qM,BM,CM,MM,NM,XM,YM,gN,hN,rN,sN,AN,BN,GN,HN,MN,NN,RN,SN,GI,fO,WN,uO,vO,GO,HO,JO,KO,WO,XO,bP,cP,iP,jP,wP,xP,yP,ZR,_R,gS,hS,iS,jS,tS,DS,ES,IS,JS,OS,PS,RS,SS,TS,VS,XS,_S,aT,oI,pH,HU,le,Ps,Qs,pe,Ie,Ye,um,ff,qf,zf,Kf,Oo,Vf,Vl,$f,Ir,og,ug,yg,Jg,Pg,Tg,ah,kh,qh,xe,IU,Ah,ip,np,Mh,Oh,fq,gq,ai,hi,oi,ti,qr,Sq,Gi,Hk,Vi,$i,hj,rj,wj,Bj,Hj,Oj,Vj,JU,CP,tI,Kd,KU,nm,vR,wk,Sr,Kz,Jz,ex,jy,$w,iy,yx,zx,gt,nn,Wm,Xq,zn,_s,Xo,Dy,Ey,pq,$o,gw,Yq,fw,yr,Eu,Mu,tu,Es,It,qH,gJ,iJ,eG,kN,oM,CE,zS,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU,GU];var sd=[LU,xH,Bg,Wg,ik,Ts,Hm,Qm,gn,_m,un,zo,Wo,Np,Zp,Rq,Qt,Vt,_t,bu,gu,ku,ou,Uy,Xy,Yy,$y,cz,dz,gz,kz,lz,qz,uz,vz,cA,mA,tM,uM,vM,wM,yM,zM,FM,GM,HM,IM,KM,LM,QM,RM,SM,TM,VM,WM,$M,aN,bN,cN,eN,fN,QN,VN,_O,$O,aP,fP,gP,hP,iI,ge,je,Nd,Od,Ip,Jp,tp,Ep,Fp,qm,sm,tm,af,vm,wm,Go,Ko,No,Tf,pl,Ol,Nl,Pl,Zf,eg,Lr,xg,Sg,re,ee,dp,Fh,jp,kp,mp,op,pp,nl,ol,$p,bq,dq,Zh,br,lr,Uq,pr,mr,nr,or,Ci,tr,Ki,Dk,Kk,Tk,Wk,Yk,cs,bs,JR,rI,mI,fI,Bq,Hr,ap,nq,Qo,Zq,ts,Ej,dk,rk,kk,ct,lk,wR,Fk,Vk,$k,jt,ul,rR,Po,Ht,Wl,Vs,$n,Un,Xn,_n,Us,Vn,Wn,Yn,Zn,$R,Co,Ws,bt,at,Op,dt,Tq,_q,Ar,Cr,Dr,kl,ml,qu,ll,Mt,cu,rq,tq,tH,uR,CR,SR,OR,EP,GP,IP,KP,MP,OP,QP,SP,UP,WP,YP,_P,aQ,cQ,eQ,gQ,iQ,kQ,mQ,oQ,qQ,sQ,uQ,wQ,yQ,AQ,CQ,EQ,GQ,UQ,LQ,IQ,OQ,PQ,pR,tR,fS,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU,LU];var td=[MU,kn,bn,UR,eo,wr,Vu,Ty,qD,_y,tB,fz,hz,nz,pz,rz,xz,aI,Hd,Ge,rp,wp,Dp,Bp,Cp,Gp,Hp,pm,_e,Eo,Qf,Io,Jo,Lo,Mo,Ul,Nr,Kr,jg,qg,sg,Ng,Ae,se,te,lp,Gh,Vh,Xh,uq,zi,Bi,sr,Ek,Mi,Ni,Oi,Uk,_k,cl,dl,fl,$r,as,ck,ER,sp,_p,ns,ks,hs,io,NU,Lk,Nk,Zk,al,Rs,Al,tl,Il,Yl,Bm,Sn,Dn,Yo,bp,Mk,Ss,Fq,py,Lt,Kt,At,ve,pu,ru,iw,nw,mw,lw,hI,pI,pN,qN,zN,bS,MU,MU,MU,MU,MU,MU,MU,MU,MU,MU,MU,MU,MU,MU,MU,MU,MU,MU,MU,MU,MU];var ud=[OU,$d,Km,Tm,AH,EI,KI,nS,wS,dT,up,vp,Ap,Ze,Am,fm,im,Qd,Of,Rf,fg,Qr,Hq,Lq,em,Be,qp,hq,Tp,Vp,Li,gl,PU,Rp,ds,As,ws,to,yk,Qk,vo,QU,hm,Rn,uo,Sp,jq,Pr,su,rr,Vr,Wr,Xr,rt,oJ,OU,OU,OU,OU,OU,OU,OU,OU,OU];var vd=[RU,mm,zq,Fu,mS,vS,cT,Dq,Rd,Or,Rr,gh,ih,Mq,Zl,yh,xq,Tr,Zr,Fs,Ok,$l,ko,lo,no,po,So,Kq,st,RU,RU,RU];var wd=[SU,_d,lm,wu,xu,Nu,zH,PN,UN,lS,uS,bT,gm,gg,Iq,wh,am,Ro,uk,Ao,Cn,SU,SU,SU,SU,SU,SU,SU,SU,SU,SU,SU];var xd=[TU,hh,xh,xK,vK,LK,KK,TU];var yd=[UU,oN,yN,EN,KN,UU,UU,UU];var zd=[VU,FN,LN,VU];return{__GLOBAL__sub_I_bind_cpp:yE,__GLOBAL__sub_I_wrapper_cxx:ek,___cxa_can_catch:nT,___cxa_is_pointer_type:oT,___errno_location:LE,___getTypeName:AE,___muldi3:rT,___udivdi3:wT,___uremdi3:xT,_bitshift64Ashr:yT,_bitshift64Lshr:zT,_bitshift64Shl:AT,_free:CE,_i64Add:sT,_i64Subtract:tT,_llvm_bswap_i32:BT,_malloc:BE,_memcpy:CT,_memmove:DT,_memset:ET,_pthread_cond_broadcast:FT,_pthread_mutex_lock:GT,_pthread_mutex_unlock:HT,_sbrk:IT,dynCall_diii:JT,dynCall_i:KT,dynCall_ii:LT,dynCall_iii:MT,dynCall_iiii:NT,dynCall_iiiii:OT,dynCall_iiiiid:PT,dynCall_iiiiii:QT,dynCall_iiiiiid:RT,dynCall_iiiiiii:ST,dynCall_iiiiiiii:TT,dynCall_iiiiiiiii:UT,dynCall_iiiiiiiiiii:VT,dynCall_iiiiiiiiiiii:WT,dynCall_iiiiiiiiiiiii:XT,dynCall_v:YT,dynCall_vi:ZT,dynCall_vii:_T,dynCall_viii:$T,dynCall_viiii:aU,dynCall_viiiii:bU,dynCall_viiiiii:cU,dynCall_viiiiiii:dU,dynCall_viiiiiiiiii:eU,dynCall_viiiiiiiiiiiiiii:fU,establishStackSpace:Dd,getTempRet0:Gd,runPostSets:pT,setTempRet0:Fd,setThrew:Ed,stackAlloc:Ad,stackRestore:Cd,stackSave:Bd}})\n\n\n// EMSCRIPTEN_END_ASM\n(Module.asmGlobalArg,Module.asmLibraryArg,buffer);var __GLOBAL__sub_I_bind_cpp=Module[\"__GLOBAL__sub_I_bind_cpp\"]=asm[\"__GLOBAL__sub_I_bind_cpp\"];var __GLOBAL__sub_I_wrapper_cxx=Module[\"__GLOBAL__sub_I_wrapper_cxx\"]=asm[\"__GLOBAL__sub_I_wrapper_cxx\"];var ___cxa_can_catch=Module[\"___cxa_can_catch\"]=asm[\"___cxa_can_catch\"];var ___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=asm[\"___cxa_is_pointer_type\"];var ___errno_location=Module[\"___errno_location\"]=asm[\"___errno_location\"];var ___getTypeName=Module[\"___getTypeName\"]=asm[\"___getTypeName\"];var ___muldi3=Module[\"___muldi3\"]=asm[\"___muldi3\"];var ___udivdi3=Module[\"___udivdi3\"]=asm[\"___udivdi3\"];var ___uremdi3=Module[\"___uremdi3\"]=asm[\"___uremdi3\"];var _bitshift64Ashr=Module[\"_bitshift64Ashr\"]=asm[\"_bitshift64Ashr\"];var _bitshift64Lshr=Module[\"_bitshift64Lshr\"]=asm[\"_bitshift64Lshr\"];var _bitshift64Shl=Module[\"_bitshift64Shl\"]=asm[\"_bitshift64Shl\"];var _free=Module[\"_free\"]=asm[\"_free\"];var _i64Add=Module[\"_i64Add\"]=asm[\"_i64Add\"];var _i64Subtract=Module[\"_i64Subtract\"]=asm[\"_i64Subtract\"];var _llvm_bswap_i32=Module[\"_llvm_bswap_i32\"]=asm[\"_llvm_bswap_i32\"];var _malloc=Module[\"_malloc\"]=asm[\"_malloc\"];var _memcpy=Module[\"_memcpy\"]=asm[\"_memcpy\"];var _memmove=Module[\"_memmove\"]=asm[\"_memmove\"];var _memset=Module[\"_memset\"]=asm[\"_memset\"];var _pthread_cond_broadcast=Module[\"_pthread_cond_broadcast\"]=asm[\"_pthread_cond_broadcast\"];var _pthread_mutex_lock=Module[\"_pthread_mutex_lock\"]=asm[\"_pthread_mutex_lock\"];var _pthread_mutex_unlock=Module[\"_pthread_mutex_unlock\"]=asm[\"_pthread_mutex_unlock\"];var _sbrk=Module[\"_sbrk\"]=asm[\"_sbrk\"];var establishStackSpace=Module[\"establishStackSpace\"]=asm[\"establishStackSpace\"];var getTempRet0=Module[\"getTempRet0\"]=asm[\"getTempRet0\"];var runPostSets=Module[\"runPostSets\"]=asm[\"runPostSets\"];var setTempRet0=Module[\"setTempRet0\"]=asm[\"setTempRet0\"];var setThrew=Module[\"setThrew\"]=asm[\"setThrew\"];var stackAlloc=Module[\"stackAlloc\"]=asm[\"stackAlloc\"];var stackRestore=Module[\"stackRestore\"]=asm[\"stackRestore\"];var stackSave=Module[\"stackSave\"]=asm[\"stackSave\"];var dynCall_diii=Module[\"dynCall_diii\"]=asm[\"dynCall_diii\"];var dynCall_i=Module[\"dynCall_i\"]=asm[\"dynCall_i\"];var dynCall_ii=Module[\"dynCall_ii\"]=asm[\"dynCall_ii\"];var dynCall_iii=Module[\"dynCall_iii\"]=asm[\"dynCall_iii\"];var dynCall_iiii=Module[\"dynCall_iiii\"]=asm[\"dynCall_iiii\"];var dynCall_iiiii=Module[\"dynCall_iiiii\"]=asm[\"dynCall_iiiii\"];var dynCall_iiiiid=Module[\"dynCall_iiiiid\"]=asm[\"dynCall_iiiiid\"];var dynCall_iiiiii=Module[\"dynCall_iiiiii\"]=asm[\"dynCall_iiiiii\"];var dynCall_iiiiiid=Module[\"dynCall_iiiiiid\"]=asm[\"dynCall_iiiiiid\"];var dynCall_iiiiiii=Module[\"dynCall_iiiiiii\"]=asm[\"dynCall_iiiiiii\"];var dynCall_iiiiiiii=Module[\"dynCall_iiiiiiii\"]=asm[\"dynCall_iiiiiiii\"];var dynCall_iiiiiiiii=Module[\"dynCall_iiiiiiiii\"]=asm[\"dynCall_iiiiiiiii\"];var dynCall_iiiiiiiiiii=Module[\"dynCall_iiiiiiiiiii\"]=asm[\"dynCall_iiiiiiiiiii\"];var dynCall_iiiiiiiiiiii=Module[\"dynCall_iiiiiiiiiiii\"]=asm[\"dynCall_iiiiiiiiiiii\"];var dynCall_iiiiiiiiiiiii=Module[\"dynCall_iiiiiiiiiiiii\"]=asm[\"dynCall_iiiiiiiiiiiii\"];var dynCall_v=Module[\"dynCall_v\"]=asm[\"dynCall_v\"];var dynCall_vi=Module[\"dynCall_vi\"]=asm[\"dynCall_vi\"];var dynCall_vii=Module[\"dynCall_vii\"]=asm[\"dynCall_vii\"];var dynCall_viii=Module[\"dynCall_viii\"]=asm[\"dynCall_viii\"];var dynCall_viiii=Module[\"dynCall_viiii\"]=asm[\"dynCall_viiii\"];var dynCall_viiiii=Module[\"dynCall_viiiii\"]=asm[\"dynCall_viiiii\"];var dynCall_viiiiii=Module[\"dynCall_viiiiii\"]=asm[\"dynCall_viiiiii\"];var dynCall_viiiiiii=Module[\"dynCall_viiiiiii\"]=asm[\"dynCall_viiiiiii\"];var dynCall_viiiiiiiiii=Module[\"dynCall_viiiiiiiiii\"]=asm[\"dynCall_viiiiiiiiii\"];var dynCall_viiiiiiiiiiiiiii=Module[\"dynCall_viiiiiiiiiiiiiii\"]=asm[\"dynCall_viiiiiiiiiiiiiii\"];Module[\"asm\"]=asm;if(memoryInitializer){if(!isDataURI(memoryInitializer)){if(typeof Module[\"locateFile\"]===\"function\"){memoryInitializer=Module[\"locateFile\"](memoryInitializer)}else if(Module[\"memoryInitializerPrefixURL\"]){memoryInitializer=Module[\"memoryInitializerPrefixURL\"]+memoryInitializer}}if(ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL){var data=Module[\"readBinary\"](memoryInitializer);HEAPU8.set(data,GLOBAL_BASE)}else{addRunDependency(\"memory initializer\");var applyMemoryInitializer=(function(data){if(data.byteLength)data=new Uint8Array(data);HEAPU8.set(data,GLOBAL_BASE);if(Module[\"memoryInitializerRequest\"])delete Module[\"memoryInitializerRequest\"].response;removeRunDependency(\"memory initializer\")});function doBrowserLoad(){Module[\"readAsync\"](memoryInitializer,applyMemoryInitializer,(function(){throw\"could not load memory initializer \"+memoryInitializer}))}var memoryInitializerBytes=tryParseAsDataURI(memoryInitializer);if(memoryInitializerBytes){applyMemoryInitializer(memoryInitializerBytes.buffer)}else if(Module[\"memoryInitializerRequest\"]){function useRequest(){var request=Module[\"memoryInitializerRequest\"];var response=request.response;if(request.status!==200&&request.status!==0){var data=tryParseAsDataURI(Module[\"memoryInitializerRequestURL\"]);if(data){response=data.buffer}else{console.warn(\"a problem seems to have happened with Module.memoryInitializerRequest, status: \"+request.status+\", retrying \"+memoryInitializer);doBrowserLoad();return}}applyMemoryInitializer(response)}if(Module[\"memoryInitializerRequest\"].response){setTimeout(useRequest,0)}else{Module[\"memoryInitializerRequest\"].addEventListener(\"load\",useRequest)}}else{doBrowserLoad()}}}Module[\"then\"]=(function(func){if(Module[\"calledRun\"]){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=(function(){if(old)old();func(Module)})}return Module});function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};function run(args){args=args||Module[\"arguments\"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout((function(){setTimeout((function(){Module[\"setStatus\"](\"\")}),1);doRun()}),1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){if(implicit&&Module[\"noExitRuntime\"]&&status===0){return}if(Module[\"noExitRuntime\"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module[\"onExit\"])Module[\"onExit\"](status)}if(ENVIRONMENT_IS_NODE){process[\"exit\"](status)}Module[\"quit\"](status,new ExitStatus(status))}Module[\"exit\"]=exit;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=\"\"}ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}Module[\"noExitRuntime\"]=true;run();((function(){function virgil_init(){Module[\"VirgilByteArray\"][\"fromUTF8\"]=(function(string){var ba=new Module[\"VirgilByteArray\"];ba.fromUTF8(string);return ba});Module[\"VirgilByteArray\"][\"prototype\"][\"fromUTF8\"]=(function(string){var s=unescape(encodeURIComponent(string));var charList=s.split(\"\");var uintArray=[];for(var i=0;i<charList.length;++i){uintArray.push(charList[i].charCodeAt(0))}this.assign(new Uint8Array(uintArray))});Module[\"VirgilByteArray\"][\"prototype\"][\"toUTF8\"]=(function(){var encodedString=String.fromCharCode.apply(null,this.data());return decodeURIComponent(escape(encodedString))});Module[\"VirgilByteArray\"][\"fromUint8Array\"]=(function(uint8Array){var byteArray=new Module[\"VirgilByteArray\"];byteArray.assign(uint8Array);return byteArray});Module[\"VirgilByteArray\"][\"prototype\"][\"fromUint8Array\"]=(function(uint8Array){this.assign(uint8Array)});Module[\"VirgilByteArray\"][\"prototype\"][\"toUint8Array\"]=(function(){var size=this.size();var array=new Uint8Array(size);for(var i=0;i<size;++i){array[i]=this.get(i)}return array});Module[\"VirgilStreamDataSource\"]=Module[\"VirgilDataSource\"].extend(\"VirgilDataSource\",{__construct:(function(uint8Array,chunkSize){this.__parent.__construct.call(this);this.position=0;this.chunkSize=chunkSize||1024*1024;this.bytes=uint8Array}),hasData:(function(){return this.position<this.bytes.length}),read:(function(){var start=this.position;var end=start+this.chunkSize;var chunk=this._slice(start,end);var bytesRead=chunk.length;var byteArray=Module[\"VirgilByteArray\"].fromUint8Array(chunk);this.seek(this.position+bytesRead);return byteArray}),seek:(function(offset){if(offset<0){offset=this.bytes.length+offset}this.position=offset}),_slice:(function(start,end){if(typeof this.bytes.slice===\"function\"){return this.bytes.slice(start,end)}var source=this.bytes;var len=source.length;var relativeStart=start;var k=relativeStart<0?Math.max(len+relativeStart,0):Math.min(relativeStart,len);var relativeEnd=end===undefined?len:end;var final=relativeEnd<0?Math.max(len+relativeEnd,0):Math.min(relativeEnd,len);var count=final-k;var dest=new Uint8Array(count);var n=0;while(k<final){dest[n]=source[k];++k;++n}return dest})});Module[\"VirgilStreamDataSink\"]=Module[\"VirgilDataSink\"].extend(\"VirgilDataSink\",{__construct:(function(){this.__parent.__construct.call(this);this.bytes=new Uint8Array(0)}),isGood:(function(){return true}),write:(function(bytes){var chunk=bytes.toUint8Array();this._append(chunk)}),getBytes:(function(){return this.bytes}),_append:(function(uint8Array){var result;var totalLength=this.bytes.length+uint8Array.length;result=new Uint8Array(totalLength);result.set(this.bytes,0);result.set(uint8Array,this.bytes.length);this.bytes=result})});Module[\"VirgilKeyPair\"][\"Type\"]=Module[\"VirgilKeyPairType\"];Module[\"VirgilPBKDF\"][\"Algorithm\"]=Module[\"VirgilPBKDFAlgorithm\"];Module[\"VirgilHash\"][\"Algorithm\"]=Module[\"VirgilHashAlgorithm\"];Module[\"VirgilTinyCipher\"][\"PackageSize\"]=Module[\"VirgilTinyCipherPackageSize\"];Module[\"VirgilHash\"][\"Algorithm\"]=Module[\"VirgilHashAlgorithm\"];Module[\"VirgilPBE\"][\"Algorithm\"]=Module[\"VirgilPBEAlgorithm\"];Module[\"VirgilSymmetricCipher\"][\"Algorithm\"]=Module[\"VirgilSymmetricCipherAlgorithm\"];Module[\"VirgilSymmetricCipher\"][\"Padding\"]=Module[\"VirgilSymmetricCipherPadding\"]}if(Module[\"VirgilVersion\"]){virgil_init()}else{var originalOnInit=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=function onRuntimeInitialized(){virgil_init();if(typeof originalOnInit===\"function\"){originalOnInit()}}}}))()\n\n\n\n\n\n\n  return __virgilCrypto;\n};\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = __virgilCrypto;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return __virgilCrypto; });\nelse if (typeof exports === 'object')\n  exports[\"__virgilCrypto\"] = __virgilCrypto;\n");

var minMemory = 1024 * 1024 * 16; // 16 MB - emscripten default
var totalMemory = parseInt(window.__VIRGIL_CRYPTO_TOTAL_MEMORY_BYTES__, 10);
totalMemory = isNaN(totalMemory) ? minMemory : Math.max(totalMemory, minMemory);
var lib = __virgilCrypto({
    TOTAL_MEMORY: totalMemory
});
lib.setDelayFunction(function (delayed) {
    setTimeout(delayed, 0);
});

// import node version, the `rollup-plugin-resolve-crypto-lib`
/**
 * @hidden
 * @type {IVirgilCryptoWrapper}
 */
var cryptoWrapper = createCryptoWrapper(lib);

var _privateKeys = new WeakMap();
var _setValue = WeakMap.prototype.set;
var _getValue = WeakMap.prototype.get;
var _hasValue = WeakMap.prototype.has;
/**
 * Represents a private key for operations with {@link VirgilCrypto}.
 *
 * `VirgilPrivateKey` objects are not meant to be created directly using the `new` keyword.
 * Use the {@link VirgilCrypto.generateKeys} and {@link VirgilCrypto.importPrivateKey} methods
 * to create `VirgilPrivateKey` instances.
 *
 * @protected
 */
var VirgilPrivateKey = /** @class */ (function () {
    function VirgilPrivateKey(identifier, key) {
        this.identifier = identifier;
        setPrivateKeyBytes(this, key);
    }
    return VirgilPrivateKey;
}());
/**
 * Represents a public key for operations with {@link VirgilCrypto}.
 *
 * `VirgilPublicKey` objects are not meant to be created directly using the `new` keyword.
 * Use the {@link VirgilCrypto.generateKeys} and {@link VirgilCrypto.importPublicKey} methods
 * to create `VirgilPublicKey` instances.
 *
 * @protected
 */
var VirgilPublicKey = /** @class */ (function () {
    function VirgilPublicKey(identifier, key) {
        this.identifier = identifier;
        this.key = key;
    }
    return VirgilPublicKey;
}());
/**
 * Provides implementation of high-level cryptographic operations using Virgil Crypto Library.
 */
var VirgilCrypto = /** @class */ (function () {
    /**
     * Initializes a new instance of {@link VirgilCrypto}.
     *
     * @param {Object} [options]
     * @param {boolean} [options.useSha256Identifiers]
     * @param {KeyPairType} [options.defaultKeyPairType]
     */
    function VirgilCrypto(_a) {
        var _b = _a === void 0 ? {} : _a, _c = _b.useSha256Identifiers, useSha256Identifiers = _c === void 0 ? false : _c, _d = _b.defaultKeyPairType, defaultKeyPairType = _d === void 0 ? exports.KeyPairType.Default : _d;
        this.useSha256Identifiers = useSha256Identifiers;
        this.defaultKeyPairType = defaultKeyPairType;
    }
    /**
     * Generates a new key pair.
     *
     * @param {KeyPairType} [type] - Optional type of the key pair.
     * See {@link KeyPairType} for available options. Default is Ed25519.
     * @returns {KeyPair} - The newly generated key pair.
     * */
    VirgilCrypto.prototype.generateKeys = function (type) {
        type = type != null ? type : this.defaultKeyPairType;
        var keyPair = cryptoWrapper.generateKeyPair({ type: type });
        return this.wrapKeyPair(keyPair);
    };
    /**
     * Generates a new key pair from the given key material.
     * @param {Data} keyMaterial - The data to be used for key generation,
     * must be strong enough (have high entropy). If `keyMaterial` is a
     * string, base64 encoding is assumed.
     * @param {KeyPairType} [type] - Optional type of the key pair.
     * See {@link KeyPairType} for available options. Default is Ed25519.
     * @returns {VirgilKeyPair}
     */
    VirgilCrypto.prototype.generateKeysFromKeyMaterial = function (keyMaterial, type) {
        type = type != null ? type : this.defaultKeyPairType;
        var keyMaterialBuf = anyToBuffer(keyMaterial, 'base64', 'keyMaterial');
        var keyPair = cryptoWrapper.generateKeyPairFromKeyMaterial({
            keyMaterial: keyMaterialBuf,
            type: type
        });
        return this.wrapKeyPair(keyPair);
    };
    /**
     * Creates a `VirgilPrivateKey` object from private key bytes in PEM or DER format.
     *
     * @param {Data} rawPrivateKey - The private key bytes. If `rawPrivateKey` is a
     * string, base64 encoding is assumed.
     * @param {string} [password] - Optional password the key bytes are encrypted with.
     *
     * @returns {VirgilPrivateKey} - The private key object.
     * */
    VirgilCrypto.prototype.importPrivateKey = function (rawPrivateKey, password) {
        var rawPrivateKeyBuf = anyToBuffer(rawPrivateKey, 'base64', 'rawPrivateKey');
        if (password) {
            rawPrivateKeyBuf = cryptoWrapper.decryptPrivateKey(rawPrivateKeyBuf, Buffer.from(password, 'utf8'));
        }
        var privateKeyDer = cryptoWrapper.privateKeyToDer(rawPrivateKeyBuf);
        var publicKeyDer = cryptoWrapper.extractPublicKey(privateKeyDer);
        var identifier = this.calculateKeypairIdentifier(publicKeyDer);
        return new VirgilPrivateKey(identifier, privateKeyDer);
    };
    /**
     * Exports private key material in DER format from the given private key object.
     *
     * @param {VirgilPrivateKey} privateKey - The private key object.
     * @param {string} [password] - Optional password to encrypt the key material with.
     *
     * @returns {Buffer} - The private key material in DER format.
     * */
    VirgilCrypto.prototype.exportPrivateKey = function (privateKey, password) {
        validatePrivateKey(privateKey);
        var privateKeyValue = getPrivateKeyBytes(privateKey);
        if (password == null) {
            return privateKeyValue;
        }
        return cryptoWrapper.encryptPrivateKey(privateKeyValue, Buffer.from(password, 'utf8'));
    };
    /**
     * Creates a `VirgilPublicKey` object from public key material in PEM or DER format.
     *
     * @param {Data} rawPublicKey - The public key bytes. If `rawPublicKey` is a
     * string, base64 encoding is assumed.
     *
     * @returns {VirgilPublicKey} - The imported key handle.
     * */
    VirgilCrypto.prototype.importPublicKey = function (rawPublicKey) {
        var rawPublicKeyBuf = anyToBuffer(rawPublicKey, 'base64', 'rawPublicKey');
        var publicKeyDer = cryptoWrapper.publicKeyToDer(rawPublicKeyBuf);
        var identifier = this.calculateKeypairIdentifier(publicKeyDer);
        return new VirgilPublicKey(identifier, publicKeyDer);
    };
    /**
     * Exports public key material in DER format from the given public key object.
     *
     * @param {VirgilPublicKey} publicKey - The public key object.
     *
     * @returns {Buffer} - The public key bytes.
     * */
    VirgilCrypto.prototype.exportPublicKey = function (publicKey) {
        validatePublicKey(publicKey);
        return publicKey.key;
    };
    /**
     * Encrypts the data for the given public key(s) following the algorithm below:
     *
     * 1. Generates random AES-256 key - KEY1
     * 2. Encrypts the data with KEY1 using AES-256-GCM
     * 3. Generates ephemeral keypair for each recipient public key
     * 4. Uses Diffie-Hellman to obtain shared secret with each recipient public key & ephemeral private key
     * 5. Computes KDF to obtain AES-256 key - KEY2 - from shared secret for each recipient
     * 6. Encrypts KEY1 with KEY2 using AES-256-CBC for each recipient
     *
     * @param {Data} data - The data to be encrypted. If `data` is a
     * string, utf-8 encoding is assumed.
     * @param {VirgilPublicKey|VirgilPublicKey[]} publicKey - Public key or an array of public keys
     * of the intended recipients.
     *
     * @returns {Buffer} - Encrypted data.
     * */
    VirgilCrypto.prototype.encrypt = function (data, publicKey) {
        var dataBuf = anyToBuffer(data, 'utf8', 'data');
        var publicKeys = toArray(publicKey);
        validatePublicKeysArray(publicKeys);
        return cryptoWrapper.encrypt(dataBuf, publicKeys);
    };
    /**
     * Decrypts the data with the given private key following the algorithm below:
     *
     * 1. Uses Diffie-Hellman to obtain shared secret with sender ephemeral public key & the `privateKey`
     * 2. Computes KDF to obtain AES-256 KEY2 from shared secret
     * 3. Decrypts KEY1 using AES-256-CBC and KEY2
     * 4. Decrypts data using KEY1 and AES-256-GCM
     *
     * @param {Data} encryptedData - The data to be decrypted. If `encryptedData` is a
     * string, base64 encoding is assumed.
     * @param {VirgilPrivateKey} privateKey - The private key to decrypt with.
     *
     * @returns {Buffer} - Decrypted data
     * */
    VirgilCrypto.prototype.decrypt = function (encryptedData, privateKey) {
        var encryptedDataBuf = anyToBuffer(encryptedData, 'base64', 'encryptedData');
        validatePrivateKey(privateKey);
        var privateKeyValue = getPrivateKeyBytes(privateKey);
        return cryptoWrapper.decrypt(encryptedDataBuf, {
            identifier: privateKey.identifier,
            key: privateKeyValue
        });
    };
    /**
     * Calculates the hash of the given data.
     *
     * @param {Data} data - The data to calculate the hash of. If `data` is a
     * string, utf-8 encoding is assumed.
     * @param {string} [algorithm] - Optional name of the hash algorithm to use.
     * See {@link HashAlgorithm} for available options. Default is SHA256.
     *
     * @returns {Buffer} - The hash.
     * */
    VirgilCrypto.prototype.calculateHash = function (data, algorithm) {
        if (algorithm === void 0) { algorithm = exports.HashAlgorithm.SHA256; }
        var dataBuf = anyToBuffer(data, 'utf8', 'data');
        return cryptoWrapper.hash(dataBuf, algorithm);
    };
    /**
     * Extracts a public key from the private key handle.
     *
     * @param {VirgilPrivateKey} privateKey - The private key object to extract from.
     *
     * @returns {VirgilPublicKey} - The handle to the extracted public key.
     * */
    VirgilCrypto.prototype.extractPublicKey = function (privateKey) {
        validatePrivateKey(privateKey);
        var privateKeyValue = getPrivateKeyBytes(privateKey);
        var publicKey = cryptoWrapper.extractPublicKey(privateKeyValue);
        return new VirgilPublicKey(privateKey.identifier, publicKey);
    };
    /**
     * Calculates the signature of the data using the private key.
     *
     * NOTE: Returned value contains only digital signature, not data itself.
     *
     * NOTE: Data inside this function is guaranteed to be hashed with SHA512 at least one time.
     *
     * It's secure to pass raw data here.
     *
     * @param {Data} data - The data to be signed. If `data` is a
     * string, utf-8 encoding is assumed.
     * @param {VirgilPrivateKey} privateKey - The private key object.
     *
     * @returns {Buffer} - The signature.
     * */
    VirgilCrypto.prototype.calculateSignature = function (data, privateKey) {
        var dataBuf = anyToBuffer(data, 'utf8', 'data');
        validatePrivateKey(privateKey);
        var privateKeyValue = getPrivateKeyBytes(privateKey);
        return cryptoWrapper.sign(dataBuf, { key: privateKeyValue });
    };
    /**
     * Verifies the provided data using the given signature and public key.
     * Note: Verification algorithm depends on PublicKey type. Default: EdDSA
     *
     * @param {Data} data - The data to be verified. If `data` is a
     * string, utf-8 encoding is assumed.
     * @param {Data} signature - The signature to verify. If `signature` is a
     * string, base64 encoding is assumed.
     * @param {VirgilPublicKey} publicKey - The public key object.
     *
     * @returns {boolean} - True or False depending on the validity of the signature for the data
     * and public key.
     * */
    VirgilCrypto.prototype.verifySignature = function (data, signature, publicKey) {
        var dataBuf = anyToBuffer(data, 'utf8', 'data');
        var signatureBuf = anyToBuffer(signature, 'base64', 'signature');
        validatePublicKey(publicKey);
        return cryptoWrapper.verify(dataBuf, signatureBuf, publicKey);
    };
    /**
     * Calculates the signature on the data using the private key,
     * then encrypts the data along with the signature using the public key(s).
     *
     * 1. Generates signature depending on the type of private key
     * 2. Generates random AES-256 key - KEY1
     * 3. Encrypts both data and signature with KEY1 using AES-256-GCM
     * 4. Generates ephemeral key pair for each recipient
     * 5. Uses Diffie-Hellman to obtain shared secret with each recipient's public key & each ephemeral private key
     * 6. Computes KDF to obtain AES-256 key - KEY2 - from shared secret for each recipient
     * 7. Encrypts KEY1 with KEY2 using AES-256-CBC for each recipient
     *
     * @param {Data} data - The data to sign and encrypt. If `data` is a
     * string, utf-8 encoding is assumed.
     * @param {VirgilPrivateKey} privateKey - The private key to use to calculate signature.
     * @param {VirgilPublicKey|VirgilPublicKey[]} publicKey - The public key of the intended recipient or an array
     * of public keys of multiple recipients.
     *
     * @returns {Buffer} - Encrypted data with attached signature.
     * */
    VirgilCrypto.prototype.signThenEncrypt = function (data, privateKey, publicKey) {
        var dataBuf = anyToBuffer(data, 'utf8', 'data');
        validatePrivateKey(privateKey);
        var privateKeyBytes = getPrivateKeyBytes(privateKey);
        var publicKeys = toArray(publicKey);
        validatePublicKeysArray(publicKeys);
        return cryptoWrapper.signThenEncrypt(dataBuf, {
            identifier: privateKey.identifier,
            key: privateKeyBytes
        }, publicKeys);
    };
    /**
     * Decrypts the data using the private key, then verifies decrypted data
     * using the attached signature and the given public key.
     *
     * 1. Uses Diffie-Hellman to obtain shared secret with sender ephemeral public key & recipient's private key
     * 2. Computes KDF to obtain AES-256 key - KEY2 - from shared secret
     * 3. Decrypts KEY1 using AES-256-CBC and KEY2
     * 4. Decrypts both data and signature using KEY1 and AES-256-GCM
     * 5. Verifies signature
     *
     * @param {Data} encryptedData - The data to be decrypted and verified. If `encryptedData` is a
     * string, base64 encoding is assumed.
     * @param {VirgilPrivateKey} privateKey - The private key object to use for decryption.
     *
     * @param {(VirgilPublicKey|VirgilPublicKey[])} publicKey - The public key object
     * or an array of public key objects to use to verify data integrity. If `publicKey`
     * is an array, the attached signature must be valid for any one of them.
     *
     * @returns {Buffer} - Decrypted data iff verification is successful,
     * otherwise throws {@link IntegrityCheckFailedError}.
     * */
    VirgilCrypto.prototype.decryptThenVerify = function (encryptedData, privateKey, publicKey) {
        var cipherDataBuf = anyToBuffer(encryptedData, 'base64', 'encryptedData');
        var publicKeys = toArray(publicKey);
        validatePublicKeysArray(publicKeys);
        validatePrivateKey(privateKey);
        var privateKeyBytes = getPrivateKeyBytes(privateKey);
        return cryptoWrapper.decryptThenVerify(cipherDataBuf, {
            identifier: privateKey.identifier,
            key: privateKeyBytes
        }, publicKeys);
    };
    /**
     * Generates a pseudo-random sequence of bytes of the given length.
     * @param {number} length - The number of bytes to generate.
     * @returns {Buffer}
     */
    VirgilCrypto.prototype.getRandomBytes = function (length) {
        return cryptoWrapper.getRandomBytes(length);
    };
    /**
     * Same as {@link IVirgilCrypto.signThenEncrypt} but returns the metadata (i.e. public
     * algorithm parameters used for encryption) as a separate property on the response
     * object rather than embedded in the encrypted data as regular `signThenEncrypt` does.
     *
     * @param {Data} data - The data to sign and encrypt. If `data` is a
     * string, utf-8 encoding is assumed.
     * @param {VirgilPrivateKey} privateKey - The private key to use to calculate signature.
     * @param {VirgilPublicKey | VirgilPublicKey[]} publicKey - The public key of the intended
     * recipient or an array of public keys of multiple recipients.
     * @returns {{encryptedData: Buffer; metadata: Buffer}} - Encrypted data and metadata.
     */
    VirgilCrypto.prototype.signThenEncryptDetached = function (data, privateKey, publicKey) {
        var dataBuf = anyToBuffer(data, 'utf8', 'data');
        validatePrivateKey(privateKey);
        var privateKeyBytes = getPrivateKeyBytes(privateKey);
        var publicKeys = toArray(publicKey);
        validatePublicKeysArray(publicKeys);
        return cryptoWrapper.signThenEncryptDetached(dataBuf, {
            identifier: privateKey.identifier,
            key: privateKeyBytes
        }, publicKeys);
    };
    /**
     * Same as {@link IVirgilCrypto.decryptThenVerify} but expects the Virgil Cryptogram
     * (the content info) to be passed as `contentInfo` parameter instead of be embedded
     * in the `encryptedData`.
     * @param {Data} encryptedData - The data to be decrypted and verified. If `encryptedData`
     * is a string, base64 encoding is assumed.
     * @param {Data} metadata - The metadata (i.e. public  algorithm parameters used for
     * encryption) required for decryption.
     * @param {VirgilPrivateKey} privateKey - The private key object to use for decryption.
     * @param {VirgilPublicKey | VirgilPublicKey[]} publicKey - The public key object
     * or an array of public key objects to use to verify data integrity. If the public key
     * identifier specified in `metadata` does not correspond to the `publicKey` argument
     * (or any of the keys in the `publicKey` array), an error is thrown.
     * @returns {Buffer} - Decrypted data iff verification is successful,
     * otherwise throws {@link IntegrityCheckFailedError}.
     */
    VirgilCrypto.prototype.decryptThenVerifyDetached = function (encryptedData, metadata, privateKey, publicKey) {
        var encryptedDataBuf = anyToBuffer(encryptedData, 'base64', 'encryptedData');
        var metadataBuf = anyToBuffer(metadata, 'base64', 'contentInfo');
        var publicKeys = toArray(publicKey);
        validatePublicKeysArray(publicKeys);
        validatePrivateKey(privateKey);
        var privateKeyBytes = getPrivateKeyBytes(privateKey);
        return cryptoWrapper.decryptThenVerifyDetached(encryptedDataBuf, metadataBuf, {
            identifier: privateKey.identifier,
            key: privateKeyBytes
        }, publicKeys);
    };
    /**
     * Calculates the keypair identifier form the public key material.
     * Takes first 8 bytes of SHA512 of public key DER if `useSHA256Identifiers=false`
     * and SHA256 of public key der if `useSHA256Identifiers=true`
     *
     * @hidden
     *
     * @param {Buffer} publicKeyData - Public key material.
     * @returns {Buffer} Key pair identifier
     */
    VirgilCrypto.prototype.calculateKeypairIdentifier = function (publicKeyData) {
        if (this.useSha256Identifiers) {
            return cryptoWrapper.hash(publicKeyData, exports.HashAlgorithm.SHA256);
        }
        else {
            return cryptoWrapper.hash(publicKeyData, exports.HashAlgorithm.SHA512).slice(0, 8);
        }
    };
    /**
     * Wraps binary private and public keys into {@link VirgilKeyPair} object.
     *
     * @hidden
     *
     * @param {KeyPair} keyPair
     * @returns {VirgilKeyPair}
     */
    VirgilCrypto.prototype.wrapKeyPair = function (keyPair) {
        var privateKeyDer = cryptoWrapper.privateKeyToDer(keyPair.privateKey);
        var publicKeyDer = cryptoWrapper.publicKeyToDer(keyPair.publicKey);
        var identifier = this.calculateKeypairIdentifier(publicKeyDer);
        return {
            privateKey: new VirgilPrivateKey(identifier, privateKeyDer),
            publicKey: new VirgilPublicKey(identifier, publicKeyDer)
        };
    };
    return VirgilCrypto;
}());
/**
 * Gets the private key bytes of the given private key object from internal store.
 * @param {VirgilPrivateKey} privateKey - Private key object.
 * @returns {Buffer} - Private key bytes.
 *
 * @hidden
 */
function getPrivateKeyBytes(privateKey) {
    return _getValue.call(_privateKeys, privateKey);
}
/**
 * Saves the private key bytes corresponding to the given private key object into
 * internal buffer.
 *
 * @param {VirgilPrivateKey} privateKey - Private key object.
 * @param {Buffer} bytes - Private key bytes.
 *
 * @hidden
 */
function setPrivateKeyBytes(privateKey, bytes) {
    _setValue.call(_privateKeys, privateKey, bytes);
}
/**
 * @hidden
 */
function validatePrivateKey(privateKey, label) {
    if (label === void 0) { label = 'privateKey'; }
    if (privateKey == null || !Buffer.isBuffer(privateKey.identifier) || !_hasValue.call(_privateKeys, privateKey)) {
        throw new TypeError("`" + label + "` is not a VirgilPrivateKey.");
    }
}
/**
 * @hidden
 */
function validatePublicKey(publicKey, label) {
    if (label === void 0) { label = 'publicKey'; }
    if (publicKey == null || !Buffer.isBuffer(publicKey.identifier) || !Buffer.isBuffer(publicKey.key)) {
        throw new TypeError("`" + label + "` is not a VirgilPublicKey.");
    }
}
/**
 * @hidden
 */
function validatePublicKeysArray(publicKeys, label) {
    if (label === void 0) { label = 'publicKeys'; }
    if (publicKeys.length === 0) {
        throw new TypeError("`" + label + "` array must not be empty.");
    }
    publicKeys.forEach(function (pubkey) { return validatePublicKey(pubkey); });
}

exports.VirgilAccessTokenSigner = VirgilAccessTokenSigner;
exports.VirgilPrivateKeyExporter = VirgilPrivateKeyExporter;
exports.VirgilCardCrypto = VirgilCardCrypto;
exports.encoding = encoding;
exports.VirgilPrivateKey = VirgilPrivateKey;
exports.VirgilPublicKey = VirgilPublicKey;
exports.VirgilCrypto = VirgilCrypto;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}]},{},[154]);
